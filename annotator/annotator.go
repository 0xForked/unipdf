//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_a "bytes";_bd "errors";_g "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/contentstream";_dd "github.com/unidoc/unipdf/v3/contentstream/draw";_aa "github.com/unidoc/unipdf/v3/core";_gb "github.com/unidoc/unipdf/v3/internal/textencoding";
_ag "github.com/unidoc/unipdf/v3/model";_d "image";_fc "math";_c "strings";_b "unicode";);

// CreateInkAnnotation creates an ink annotation object that can be added to the annotation list of a PDF page.
func CreateInkAnnotation (inkDef InkAnnotationDef )(*_ag .PdfAnnotation ,error ){_faef :=_ag .NewPdfAnnotationInk ();_gdg :=_aa .MakeArray ();for _ ,_fcgc :=range inkDef .Paths {if _fcgc .Length ()==0{continue ;};_ddgg :=[]float64 {};for _ ,_eeae :=range _fcgc .Points {_ddgg =append (_ddgg ,_eeae .X ,_eeae .Y );
};_gdg .Append (_aa .MakeArrayFromFloats (_ddgg ));};_faef .InkList =_gdg ;if inkDef .Color ==nil {inkDef .Color =_ag .NewPdfColorDeviceRGB (0.0,0.0,0.0);};_faef .C =_aa .MakeArrayFromFloats ([]float64 {inkDef .Color .R (),inkDef .Color .G (),inkDef .Color .B ()});
_ecdfg ,_adgf ,_bfga :=_gff (&inkDef );if _bfga !=nil {return nil ,_bfga ;};_faef .AP =_ecdfg ;_faef .Rect =_aa .MakeArrayFromFloats ([]float64 {_adgf .Llx ,_adgf .Lly ,_adgf .Urx ,_adgf .Ury });return _faef .PdfAnnotation ,nil ;};func _bcgd (_afaf []*SignatureLine ,_fcfe *SignatureFieldOpts )(*_aa .PdfObjectDictionary ,error ){if _fcfe ==nil {_fcfe =NewSignatureFieldOpts ();
};var _gdb error ;var _feff *_aa .PdfObjectName ;_eec :=_fcfe .Font ;if _eec !=nil {_aaf ,_ :=_eec .GetFontDescriptor ();if _aaf !=nil {if _dgad ,_cdc :=_aaf .FontName .(*_aa .PdfObjectName );_cdc {_feff =_dgad ;};};if _feff ==nil {_feff =_aa .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _eec ,_gdb =_ag .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_gdb !=nil {return nil ,_gdb ;};_feff =_aa .MakeName ("\u0048\u0065\u006c\u0076");};_eed :=_fcfe .FontSize ;if _eed <=0{_eed =10;};if _fcfe .LineHeight <=0{_fcfe .LineHeight =1;
};_abe :=_fcfe .LineHeight *_eed ;_ebbd ,_bad :=_eec .GetRuneMetrics (' ');if !_bad {return nil ,_bd .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_eaefa :=_ebbd .Wx ;var _bff float64 ;var _dgc []string ;for _ ,_bga :=range _afaf {if _bga .Text ==""{continue ;};_gdf :=_bga .Text ;if _bga .Desc !=""{_gdf =_bga .Desc +"\u003a\u0020"+_gdf ;};_dgc =append (_dgc ,_gdf );var _afc float64 ;for _ ,_efdb :=range _gdf {_cee ,_dgdbf :=_eec .GetRuneMetrics (_efdb );
if !_dgdbf {continue ;};_afc +=_cee .Wx ;};if _afc > _bff {_bff =_afc ;};};_bff =_bff *_eed /1000.0;_cgb :=float64 (len (_dgc ))*_abe ;_afb :=_fcfe .Image !=nil ;_gafe :=_fcfe .Rect ;if _gafe ==nil {_gafe =[]float64 {0,0,_bff ,_cgb };if _afb {_gafe [2]=_bff *2;
_gafe [3]=_cgb *2;};_fcfe .Rect =_gafe ;};_ede :=_gafe [2]-_gafe [0];_ceee :=_gafe [3]-_gafe [1];_abd ,_cced :=_gafe ,_gafe ;var _faad ,_fbb float64 ;if _afb &&len (_dgc )> 0{if _fcfe .ImagePosition <=SignatureImageRight {_add :=[]float64 {_gafe [0],_gafe [1],_gafe [0]+(_ede /2),_gafe [3]};
_ecg :=[]float64 {_gafe [0]+(_ede /2),_gafe [1],_gafe [2],_gafe [3]};if _fcfe .ImagePosition ==SignatureImageLeft {_abd ,_cced =_add ,_ecg ;}else {_abd ,_cced =_ecg ,_add ;};}else {_ggd :=[]float64 {_gafe [0],_gafe [1],_gafe [2],_gafe [1]+(_ceee /2)};_fbdg :=[]float64 {_gafe [0],_gafe [1]+(_ceee /2),_gafe [2],_gafe [3]};
if _fcfe .ImagePosition ==SignatureImageTop {_abd ,_cced =_fbdg ,_ggd ;}else {_abd ,_cced =_ggd ,_fbdg ;};};};_faad =_cced [2]-_cced [0];_fbb =_cced [3]-_cced [1];var _aaaa float64 ;if _fcfe .AutoSize {if _bff > _faad ||_cgb > _fbb {_gfb :=_fc .Min (_faad /_bff ,_fbb /_cgb );
_eed *=_gfb ;};_abe =_fcfe .LineHeight *_eed ;_aaaa +=(_fbb -float64 (len (_dgc ))*_abe )/2;};_eecf :=_f .NewContentCreator ();_cff :=_ag .NewPdfPageResources ();_cff .SetFontByName (*_feff ,_eec .ToPdfObject ());if _fcfe .BorderSize <=0{_fcfe .BorderSize =0;
_fcfe .BorderColor =_ag .NewPdfColorDeviceGray (1);};_eecf .Add_q ();if _fcfe .FillColor !=nil {_eecf .SetNonStrokingColor (_fcfe .FillColor );};if _fcfe .BorderColor !=nil {_eecf .SetStrokingColor (_fcfe .BorderColor );};_eecf .Add_w (_fcfe .BorderSize ).Add_re (_gafe [0],_gafe [1],_ede ,_ceee );
if _fcfe .FillColor !=nil &&_fcfe .BorderColor !=nil {_eecf .Add_B ();}else if _fcfe .FillColor !=nil {_eecf .Add_f ();}else if _fcfe .BorderColor !=nil {_eecf .Add_S ();};_eecf .Add_Q ();if _fcfe .WatermarkImage !=nil {_daga :=[]float64 {_gafe [0],_gafe [1],_gafe [2],_gafe [3]};
_afe ,_gfa ,_cagb :=_dagc (_fcfe .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_fcfe ,_daga ,_eecf );if _cagb !=nil {return nil ,_cagb ;};_cff .SetXObjectImageByName (*_afe ,_gfa );};_eecf .Add_q ();
_eecf .Translate (_cced [0],_cced [3]-_abe -_aaaa );_eecf .Add_BT ();_ebae :=_eec .Encoder ();for _ ,_cdcc :=range _dgc {var _cebe []byte ;for _ ,_fabd :=range _cdcc {if _b .IsSpace (_fabd ){if len (_cebe )> 0{_eecf .SetNonStrokingColor (_fcfe .TextColor ).Add_Tf (*_feff ,_eed ).Add_TL (_abe ).Add_TJ ([]_aa .PdfObject {_aa .MakeStringFromBytes (_cebe )}...);
_cebe =nil ;};_eecf .Add_Tf (*_feff ,_eed ).Add_TL (_abe ).Add_TJ ([]_aa .PdfObject {_aa .MakeFloat (-_eaefa )}...);}else {_cebe =append (_cebe ,_ebae .Encode (string (_fabd ))...);};};if len (_cebe )> 0{_eecf .SetNonStrokingColor (_fcfe .TextColor ).Add_Tf (*_feff ,_eed ).Add_TL (_abe ).Add_TJ ([]_aa .PdfObject {_aa .MakeStringFromBytes (_cebe )}...);
};_eecf .Add_Td (0,-_abe );};_eecf .Add_ET ();_eecf .Add_Q ();if _afb {_gde ,_dca ,_bbg :=_dagc (_fcfe .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_fcfe ,_abd ,_eecf );if _bbg !=nil {return nil ,_bbg ;};_cff .SetXObjectImageByName (*_gde ,_dca );
};_bfbb :=_ag .NewXObjectForm ();_bfbb .Resources =_cff ;_bfbb .BBox =_aa .MakeArrayFromFloats (_gafe );_bfbb .SetContentStream (_eecf .Bytes (),_bfba ());_bcded :=_aa .MakeDict ();_bcded .Set ("\u004e",_bfbb .ToPdfObject ());return _bcded ,nil ;};func (_dfg *AppearanceStyle )processDA (_efdg *_ag .PdfField ,_aabfd *_f .ContentStreamOperations ,_dee ,_cbca *_ag .PdfPageResources ,_cbe *_f .ContentCreator )(*AppearanceFont ,bool ,error ){var _daebb *AppearanceFont ;
var _gfd bool ;if _dfg .Fonts !=nil {if _dfg .Fonts .Fallback !=nil {_daebb =_dfg .Fonts .Fallback ;};if _agad :=_dfg .Fonts .FieldFallbacks ;_agad !=nil {if _dabg ,_abbc :=_agad [_efdg .PartialName ()];_abbc {_daebb =_dabg ;}else if _cafg ,_gcb :=_efdg .FullName ();
_gcb ==nil {if _fbg ,_gefc :=_agad [_cafg ];_gefc {_daebb =_fbg ;};};};_gfd =_dfg .Fonts .ForceReplace ;};var _bdc string ;var _bgbf float64 ;var _dcba bool ;if _aabfd !=nil {for _ ,_cbce :=range *_aabfd {if _cbce .Operand =="\u0054\u0066"&&len (_cbce .Params )==2{if _acf ,_daaf :=_aa .GetNameVal (_cbce .Params [0]);
_daaf {_bdc =_acf ;};if _aabff ,_efggd :=_aa .GetNumberAsFloat (_cbce .Params [1]);_efggd ==nil {_bgbf =_aabff ;};_dcba =true ;continue ;};_cbe .AddOperand (*_cbce );};};var _gdcde *AppearanceFont ;var _adec _aa .PdfObject ;if _gfd &&_daebb !=nil {_gdcde =_daebb ;
}else {if _dee !=nil &&_bdc !=""{if _dddc ,_dgdb :=_dee .GetFontByName (*_aa .MakeName (_bdc ));_dgdb {if _geac ,_ecab :=_ag .NewPdfFontFromPdfObject (_dddc );_ecab ==nil {_adec =_dddc ;_gdcde =&AppearanceFont {Name :_bdc ,Font :_geac ,Size :_bgbf };}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_ecab );
};};};if _gdcde ==nil &&_daebb !=nil {_gdcde =_daebb ;};if _gdcde ==nil {_deg ,_cbff :=_ag .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _cbff !=nil {return nil ,false ,_cbff ;};_gdcde =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_deg ,Size :_bgbf };
};};if _gdcde .Size <=0&&_dfg .Fonts !=nil &&_dfg .Fonts .FallbackSize > 0{_gdcde .Size =_dfg .Fonts .FallbackSize ;};_gbea :=*_aa .MakeName (_gdcde .Name );if _adec ==nil {_adec =_gdcde .Font .ToPdfObject ();};if _dee !=nil &&!_dee .HasFontByName (_gbea ){_dee .SetFontByName (_gbea ,_adec );
};if _cbca !=nil &&!_cbca .HasFontByName (_gbea ){_cbca .SetFontByName (_gbea ,_adec );};return _gdcde ,_dcba ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ag .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ag .PdfColorDeviceRGB ;Opacity float64 ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;func _gbb (_fcca RectangleAnnotationDef )(*_aa .PdfObjectDictionary ,*_ag .PdfRectangle ,error ){_agcc :=_ag .NewXObjectForm ();_agcc .Resources =_ag .NewPdfPageResources ();_cggf :="";if _fcca .Opacity < 1.0{_cbda :=_aa .MakeDict ();
_cbda .Set ("\u0063\u0061",_aa .MakeFloat (_fcca .Opacity ));_cbda .Set ("\u0043\u0041",_aa .MakeFloat (_fcca .Opacity ));_fdab :=_agcc .Resources .AddExtGState ("\u0067\u0073\u0031",_cbda );if _fdab !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_fdab ;};_cggf ="\u0067\u0073\u0031";};_befa ,_gdff ,_abea ,_cadc :=_aedb (_fcca ,_cggf );if _cadc !=nil {return nil ,nil ,_cadc ;};_cadc =_agcc .SetContentStream (_befa ,nil );if _cadc !=nil {return nil ,nil ,_cadc ;};_agcc .BBox =_gdff .ToPdfObject ();
_gegg :=_aa .MakeDict ();_gegg .Set ("\u004e",_agcc .ToPdfObject ());return _gegg ,_abea ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_ag .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_ag .PdfFieldButton ,error ){if page ==nil {return nil ,_bd .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_eeab ,_bdcd :=_ag .NewStandard14Font (_ag .ZapfDingbatsName );if _bdcd !=nil {return nil ,_bdcd ;};_faca :=_ag .NewPdfField ();_ecdf :=&_ag .PdfFieldButton {};_faca .SetContext (_ecdf );_ecdf .PdfField =_faca ;_ecdf .T =_aa .MakeString (name );_ecdf .SetType (_ag .ButtonTypeCheckbox );
_dcga :="\u004f\u0066\u0066";if opt .Checked {_dcga ="\u0059\u0065\u0073";};_ecdf .V =_aa .MakeName (_dcga );_dcd :=_ag .NewPdfAnnotationWidget ();_dcd .Rect =_aa .MakeArrayFromFloats (rect );_dcd .P =page .ToPdfObject ();_dcd .F =_aa .MakeInteger (4);
_dcd .Parent =_ecdf .ToPdfObject ();_ecbd :=rect [2]-rect [0];_cgg :=rect [3]-rect [1];var _dfd _a .Buffer ;_dfd .WriteString ("\u0071\u000a");_dfd .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_dfd .WriteString ("\u0042\u0054\u000a");
_dfd .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_dfd .WriteString ("\u0045\u0054\u000a");_dfd .WriteString ("\u0051\u000a");_fdc :=_f .NewContentCreator ();_fdc .Add_q ();_fdc .Add_rg (0,0,1);_fdc .Add_BT ();_fdc .Add_Tf (*_aa .MakeName ("\u005a\u0061\u0044\u0062"),12);
_fdc .Add_Td (0,0);_fdc .Add_ET ();_fdc .Add_Q ();_affb :=_ag .NewXObjectForm ();_affb .SetContentStream (_fdc .Bytes (),_aa .NewRawEncoder ());_affb .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_ecbd ,_cgg });_affb .Resources =_ag .NewPdfPageResources ();
_affb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_eeab .ToPdfObject ());_fdc =_f .NewContentCreator ();_fdc .Add_q ();_fdc .Add_re (0,0,_ecbd ,_cgg );_fdc .Add_W ().Add_n ();_fdc .Add_rg (0,0,1);_fdc .Translate (0,3.0);_fdc .Add_BT ();_fdc .Add_Tf (*_aa .MakeName ("\u005a\u0061\u0044\u0062"),12);
_fdc .Add_Td (0,0);_fdc .Add_Tj (*_aa .MakeString ("\u0034"));_fdc .Add_ET ();_fdc .Add_Q ();_bdaf :=_ag .NewXObjectForm ();_bdaf .SetContentStream (_fdc .Bytes (),_aa .NewRawEncoder ());_bdaf .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_ecbd ,_cgg });
_bdaf .Resources =_ag .NewPdfPageResources ();_bdaf .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_eeab .ToPdfObject ());_geag :=_aa .MakeDict ();_geag .Set ("\u004f\u0066\u0066",_affb .ToPdfObject ());_geag .Set ("\u0059\u0065\u0073",_bdaf .ToPdfObject ());
_bcfa :=_aa .MakeDict ();_bcfa .Set ("\u004e",_geag );_dcd .AP =_bcfa ;_dcd .AS =_aa .MakeName (_dcga );_ecdf .Annotations =append (_ecdf .Annotations ,_dcd );return _ecdf ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_face *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_face ._fecc =&style };func _edef (_ffbe *_ag .PdfFieldButton ,_adf *_ag .PdfAnnotationWidget ,_cfge AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_geg ,_dfdb :=_aa .GetArray (_adf .Rect );
if !_dfdb {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_eafc ,_ecf :=_ag .NewPdfRectangle (*_geg );if _ecf !=nil {return nil ,_ecf ;};_fade ,_ggge :=_eafc .Width (),_eafc .Height ();_afeb :=_f .NewContentCreator ();
if _cfge .BorderSize > 0{_gecf (_afeb ,_cfge ,_fade ,_ggge );};if _cfge .DrawAlignmentReticle {_dgfg :=_cfge ;_dgfg .BorderSize =0.2;_cga (_afeb ,_dgfg ,_fade ,_ggge );};_eefd :=_ffbe .GetFillImage ();_affba ,_ecf :=_fada (_fade ,_ggge ,_eefd ,_cfge );
if _ecf !=nil {return nil ,_ecf ;};_dabd ,_decb :=_aa .GetDict (_adf .MK );if _decb {_dabd .Set ("\u006c",_affba .ToPdfObject ());};_befc :=_aa .MakeDict ();_befc .Set ("\u0046\u0052\u004d",_affba .ToPdfObject ());_aaag :=_ag .NewPdfPageResources ();_aaag .ProcSet =_aa .MakeArray (_aa .MakeName ("\u0050\u0044\u0046"));
_aaag .XObject =_befc ;_bgge :=_fade -2;_fdee :=_ggge -2;_afeb .Add_q ();_afeb .Add_re (1,1,_bgge ,_fdee );_afeb .Add_W ();_afeb .Add_n ();_bgge -=2;_fdee -=2;_afeb .Add_q ();_afeb .Add_re (2,2,_bgge ,_fdee );_afeb .Add_W ();_afeb .Add_n ();_dcdd :=_fc .Min (_bgge /float64 (_eefd .Width ),_fdee /float64 (_eefd .Height ));
_afeb .Add_cm (_dcdd ,0,0,_dcdd ,(_fade /2)-(float64 (_eefd .Width )*_dcdd /2)+2,2);_afeb .Add_Do ("\u0046\u0052\u004d");_afeb .Add_Q ();_afeb .Add_Q ();_aaed :=_ag .NewXObjectForm ();_aaed .FormType =_aa .MakeInteger (1);_aaed .Resources =_aaag ;_aaed .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_fade ,_ggge });
_aaed .Matrix =_aa .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_aaed .SetContentStream (_afeb .Bytes (),_bfba ());_gbef :=_aa .MakeDict ();_gbef .Set ("\u004e",_aaed .ToPdfObject ());return _gbef ,nil ;};func _cga (_efcf *_f .ContentCreator ,_fcga AppearanceStyle ,_fcb ,_gdcb float64 ){_efcf .Add_q ().Add_re (0,0,_fcb ,_gdcb ).Add_re (0,_gdcb /2,_fcb ,_gdcb /2).Add_re (0,0,_fcb ,_gdcb ).Add_re (_fcb /2,0,_fcb /2,_gdcb ).Add_w (_fcga .BorderSize ).SetStrokingColor (_fcga .BorderColor ).SetNonStrokingColor (_fcga .FillColor ).Add_B ().Add_Q ();
};func _ggb (_dga *_ag .PdfAnnotationWidget ,_dag *_ag .PdfFieldText ,_bda *_ag .PdfPageResources ,_fgg AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_bcdb :=_ag .NewPdfPageResources ();_ecb ,_afgd :=_aa .GetArray (_dga .Rect );if !_afgd {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_fda ,_bdb :=_ag .NewPdfRectangle (*_ecb );if _bdb !=nil {return nil ,_bdb ;};_eff ,_ddc :=_fda .Width (),_fda .Height ();_bbc ,_bcde :=_eff ,_ddc ;_gda ,_fgge :=_aa .GetDict (_dga .MK );if _fgge {_gbc ,_ :=_aa .GetDict (_dga .BS );_cd :=_fgg .applyAppearanceCharacteristics (_gda ,_gbc ,nil );
if _cd !=nil {return nil ,_cd ;};};_fbe ,_fgge :=_aa .GetIntVal (_dag .MaxLen );if !_fgge {return nil ,_bd .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _fbe <=0{return nil ,_bd .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_gecb :=_eff /float64 (_fbe );_dge ,_bdb :=_f .NewContentStreamParser (_gbcc (_dag .PdfField )).Parse ();if _bdb !=nil {return nil ,_bdb ;};_eafg :=_f .NewContentCreator ();if _fgg .BorderSize > 0{_gecf (_eafg ,_fgg ,_eff ,_ddc );};if _fgg .DrawAlignmentReticle {_ffd :=_fgg ;
_ffd .BorderSize =0.2;_cga (_eafg ,_ffd ,_eff ,_ddc );};_eafg .Add_BMC ("\u0054\u0078");_eafg .Add_q ();_ ,_ddc =_fgg .applyRotation (_gda ,_eff ,_ddc ,_eafg );_eafg .Add_BT ();_bdaa ,_gaa ,_bdb :=_fgg .processDA (_dag .PdfField ,_dge ,_bda ,_bcdb ,_eafg );
if _bdb !=nil {return nil ,_bdb ;};_gecd :=_bdaa .Font ;_bba :=_aa .MakeName (_bdaa .Name );_aabf :=_bdaa .Size ;_efac :=_aabf ==0;if _efac &&_gaa {_aabf =_ddc *_fgg .AutoFontSizeFraction ;};_efd :=_gecd .Encoder ();if _efd ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_efd =_gb .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _ccgd string ;if _fff ,_gbda :=_aa .GetString (_dag .V );_gbda {_ccgd =_fff .Decoded ();};_eafg .Add_Tf (*_bba ,_aabf );var _fac float64 ;for _ ,_abb :=range _ccgd {_aced ,_gbe :=_gecd .GetRuneMetrics (_abb );
if !_gbe {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_abb );
continue ;};_bdbd :=_aced .Wy ;if int (_bdbd )<=0{_bdbd =_aced .Wx ;};if _bdbd > _fac {_fac =_bdbd ;};};if int (_fac )==0{_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_fac =1000;};_adce ,_bdb :=_gecd .GetFontDescriptor ();if _bdb !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _cac float64 ;if _adce !=nil {_cac ,_bdb =_adce .GetCapHeight ();if _bdb !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_bdb );
};};if int (_cac )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cac =1000.0;};_ddf :=_cac /1000.0*_aabf ;_beaf :=0.0;_de :=1.0*_aabf *(_fac /1000.0);{_aagc :=_de ;if _efac &&_beaf +_aagc > _ddc {_aabf =0.95*(_ddc -_beaf );_ddf =_cac /1000.0*_aabf ;};if _ddc > _ddf {_beaf =(_ddc -_ddf )/2.0;};};_eafg .Add_Td (0,_beaf );
if _adb ,_feef :=_aa .GetIntVal (_dag .Q );_feef {switch _adb {case 2:if len (_ccgd )< _fbe {_gggg :=float64 (_fbe -len (_ccgd ))*_gecb ;_eafg .Add_Td (_gggg ,0);};};};for _bcc ,_cdf :=range _ccgd {_dfb :=_dg ;if _fgg .MarginLeft !=nil {_dfb =*_fgg .MarginLeft ;
};_daa :=string (_cdf );if _efd !=nil {_egc ,_aef :=_gecd .GetRuneMetrics (_cdf );if !_aef {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_cdf );
continue ;};_daa =string (_efd .Encode (_daa ));_gdcc :=_aabf *_egc .Wx /1000.0;_dddg :=(_gecb -_gdcc )/2;_dfb =_dddg ;};_eafg .Add_Td (_dfb ,0);_eafg .Add_Tj (*_aa .MakeString (_daa ));if _bcc !=len (_ccgd )-1{_eafg .Add_Td (_gecb -_dfb ,0);};};_eafg .Add_ET ();
_eafg .Add_Q ();_eafg .Add_EMC ();_ecd :=_ag .NewXObjectForm ();_ecd .Resources =_bcdb ;_ecd .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_bbc ,_bcde });_ecd .SetContentStream (_eafg .Bytes (),_bfba ());_cdg :=_aa .MakeDict ();_cdg .Set ("\u004e",_ecd .ToPdfObject ());
return _cdg ,nil ;};func _gd (_ebca *_ag .PdfAnnotationWidget ,_gea *_ag .PdfFieldText ,_baf *_ag .PdfPageResources ,_bf AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_ebcc :=_ag .NewPdfPageResources ();_efg ,_da :=_aa .GetArray (_ebca .Rect );if !_da {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_gef ,_fef :=_ag .NewPdfRectangle (*_efg );if _fef !=nil {return nil ,_fef ;};_cc ,_gbf :=_gef .Width (),_gef .Height ();_bfb ,_aag :=_cc ,_gbf ;_ccg ,_fee :=_aa .GetDict (_ebca .MK );if _fee {_dcg ,_ :=_aa .GetDict (_ebca .BS );_bge :=_bf .applyAppearanceCharacteristics (_ccg ,_dcg ,nil );
if _bge !=nil {return nil ,_bge ;};};_bfbd ,_fef :=_f .NewContentStreamParser (_gbcc (_gea .PdfField )).Parse ();if _fef !=nil {return nil ,_fef ;};_bbe :=_f .NewContentCreator ();if _bf .BorderSize > 0{_gecf (_bbe ,_bf ,_cc ,_gbf );};if _bf .DrawAlignmentReticle {_bdg :=_bf ;
_bdg .BorderSize =0.2;_cga (_bbe ,_bdg ,_cc ,_gbf );};_bbe .Add_BMC ("\u0054\u0078");_bbe .Add_q ();_cc ,_gbf =_bf .applyRotation (_ccg ,_cc ,_gbf ,_bbe );_bbe .Add_BT ();_gdc ,_feb ,_fef :=_bf .processDA (_gea .PdfField ,_bfbd ,_baf ,_ebcc ,_bbe );if _fef !=nil {return nil ,_fef ;
};_ffe :=_gdc .Font ;_gf :=_gdc .Size ;_dad :=_aa .MakeName (_gdc .Name );_eg :=_gf ==0;if _eg &&_feb {_gf =_gbf *_bf .AutoFontSizeFraction ;};_eea :=_ffe .Encoder ();if _eea ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_eea =_gb .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_cbd ,_fef :=_ffe .GetFontDescriptor ();if _fef !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _adca string ;if _efeg ,_bcd :=_aa .GetString (_gea .V );_bcd {_adca =_efeg .Decoded ();};if len (_adca )==0{return nil ,nil ;};_adgd :=[]string {_adca };_abg :=false ;if _gea .Flags ().Has (_ag .FieldFlagMultiline ){_abg =true ;_adca =_c .Replace (_adca ,"\u000d\u000a","\u000a",-1);
_adca =_c .Replace (_adca ,"\u000d","\u000a",-1);_adgd =_c .Split (_adca ,"\u000a");};_ca :=make ([]string ,len (_adgd ));copy (_ca ,_adgd );_df :=_bf .MultilineLineHeight ;_efc :=0.0;_aed :=0;if _eea !=nil {for _gf >=0{_gcg :=make ([]string ,len (_adgd ));
copy (_gcg ,_adgd );_bab :=make ([]string ,len (_ca ));copy (_bab ,_ca );_efc =0.0;_aed =0;_bgg :=len (_gcg );_egg :=0;for _egg < _bgg {var _ccd float64 ;_gcgc :=-1;_efa :=_dg ;if _bf .MarginLeft !=nil {_efa =*_bf .MarginLeft ;};for _ec ,_fde :=range _gcg [_egg ]{if _fde ==' '{_gcgc =_ec ;
};_agf ,_bea :=_ffe .GetRuneMetrics (_fde );if !_bea {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_fde );
continue ;};_ccd =_efa ;_efa +=_agf .Wx ;if _abg &&!_eg &&_gf *_efa /1000.0> _cc {_fae :=_ec ;_dae :=_ec ;if _gcgc > 0{_fae =_gcgc +1;_dae =_gcgc ;};_bdd :=_gcg [_egg ][_fae :];_beed :=_bab [_egg ][_fae :];if _egg < len (_gcg )-1{_gcg =append (_gcg [:_egg +1],_gcg [_egg :]...);
_gcg [_egg +1]=_bdd ;_bab =append (_bab [:_egg +1],_bab [_egg :]...);_bab [_egg +1]=_beed ;}else {_gcg =append (_gcg ,_bdd );_bab =append (_bab ,_beed );};_gcg [_egg ]=_gcg [_egg ][0:_dae ];_bab [_egg ]=_bab [_egg ][0:_dae ];_bgg ++;_efa =_ccd ;break ;
};};if _efa > _efc {_efc =_efa ;};_gcg [_egg ]=string (_eea .Encode (_gcg [_egg ]));if len (_gcg [_egg ])> 0{_aed ++;};_egg ++;};_eag :=_gf ;if _aed > 1{_eag *=_df ;};_cg :=float64 (_aed )*_eag ;if _eg ||_cg <=_gbf {_adgd =_gcg ;_ca =_bab ;break ;};_gf --;
};};_gec :=_dg ;if _bf .MarginLeft !=nil {_gec =*_bf .MarginLeft ;};if _gf ==0||_eg &&_efc > 0&&_gec +_efc *_gf /1000.0> _cc {_gf =0.95*1000.0*(_cc -_gec )/_efc ;};_aab :=_dbff ;{if _cfe ,_gg :=_aa .GetIntVal (_gea .Q );_gg {switch _cfe {case 0:_aab =_dbff ;
case 1:_aab =_ce ;case 2:_aab =_af ;default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_cfe );
};};};_fg :=_gf ;if _abg &&_aed > 1{_fg =_df *_gf ;};var _cbc float64 ;if _cbd !=nil {_cbc ,_fef =_cbd .GetCapHeight ();if _fef !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_fef );
};};if int (_cbc )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cbc =1000;};_aabd :=_cbc /1000.0*_gf ;_afd :=0.0;{_cbcc :=float64 (_aed )*_fg ;if _eg &&_afd +_cbcc > _gbf {_gf =0.95*(_gbf -_afd )/float64 (_aed );_fg =_gf ;if _abg &&_aed > 1{_fg =_df *_gf ;};_aabd =_cbc /1000.0*_gf ;_cbcc =float64 (_aed )*_fg ;};if _gbf > _cbcc {if _abg {if _bf .MultilineVAlignMiddle {_cad :=(_gbf -(_cbcc +_aabd ))/2.0;
_ace :=_cad +_cbcc +_aabd -_fg ;_afd =_ace ;if _aed > 1{_afd =_afd +(_cbcc /_gf *float64 (_aed ))-_fg -_aabd ;};if _afd < _cbcc {_afd =(_gbf -_aabd )/2.0;};}else {_afd =_gbf -_fg ;if _afd > _gf {_eae :=0.0;if _abg &&_bf .MultilineLineHeight > 1&&_aed > 1{_eae =_bf .MultilineLineHeight -1;
};_afd -=_gf *(0.5-_eae );};};}else {_afd =(_gbf -_aabd )/2.0;};};};_bbe .Add_Tf (*_dad ,_gf );_bbe .Add_Td (_gec ,_afd );_agd :=_gec ;_cfeb :=_gec ;for _gcc ,_fgc :=range _adgd {_dbfc :=0.0;for _ ,_dgg :=range _ca [_gcc ]{_cca ,_ggg :=_ffe .GetRuneMetrics (_dgg );
if !_ggg {continue ;};_dbfc +=_cca .Wx ;};_eaa :=_dbfc /1000.0*_gf ;_aec :=_cc -_eaa ;var _ccb float64 ;switch _aab {case _dbff :_ccb =_agd ;case _ce :_ccb =_aec /2;case _af :_ccb =_aec ;};_gec =_ccb -_cfeb ;if _gec > 0.0{_bbe .Add_Td (_gec ,0);};_cfeb =_ccb ;
_bbe .Add_Tj (*_aa .MakeString (_fgc ));if _gcc < len (_adgd )-1{_bbe .Add_Td (0,-_gf *_df );};};_bbe .Add_ET ();_bbe .Add_Q ();_bbe .Add_EMC ();_cbde :=_ag .NewXObjectForm ();_cbde .Resources =_ebcc ;_cbde .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_bfb ,_aag });
_cbde .SetContentStream (_bbe .Bytes (),_bfba ());_fbd :=_aa .MakeDict ();_fbd .Set ("\u004e",_cbde .ToPdfObject ());return _fbd ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_agdg ImageFieldAppearance )Style ()AppearanceStyle {if _agdg ._fecc !=nil {return *_agdg ._fecc ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_ag .NewPdfColorDeviceGray (0),FillColor :_ag .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};func _fadg (_gdca [][]_dd .CubicBezierCurve ,_caee *_ag .PdfColorDeviceRGB ,_defe float64 )([]byte ,*_ag .PdfRectangle ,error ){_cgab :=_f .NewContentCreator ();_cgab .Add_q ().SetStrokingColor (_caee ).Add_w (_defe );_cdgb :=_dd .NewCubicBezierPath ();
for _ ,_feab :=range _gdca {_cdgb .Curves =append (_cdgb .Curves ,_feab ...);for _cgad ,_feg :=range _feab {if _cgad ==0{_cgab .Add_m (_feg .P0 .X ,_feg .P0 .Y );}else {_cgab .Add_l (_feg .P0 .X ,_feg .P0 .Y );};_cgab .Add_c (_feg .P1 .X ,_feg .P1 .Y ,_feg .P2 .X ,_feg .P2 .Y ,_feg .P3 .X ,_feg .P3 .Y );
};};_cgab .Add_S ().Add_Q ();return _cgab .Bytes (),_cdgb .GetBoundingBox ().ToPdfRectangle (),nil ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_ag .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_ag .PdfFieldButton ,error ){if page ==nil {return nil ,_bd .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bbcbe :=_ag .NewPdfField ();_egcc :=&_ag .PdfFieldButton {};_egcc .PdfField =_bbcbe ;_bbcbe .SetContext (_egcc );_egcc .SetType (_ag .ButtonTypePush );_egcc .T =_aa .MakeString (name );_bce :=_ag .NewPdfAnnotationWidget ();_bce .Rect =_aa .MakeArrayFromFloats (rect );
_bce .P =page .ToPdfObject ();_bce .F =_aa .MakeInteger (4);_bce .Parent =_egcc .ToPdfObject ();_bef :=rect [2]-rect [0];_cbab :=rect [3]-rect [1];_ddcg :=opt ._gce ;_dgdf :=_f .NewContentCreator ();if _ddcg .BorderSize > 0{_gecf (_dgdf ,_ddcg ,_bef ,_cbab );
};if _ddcg .DrawAlignmentReticle {_bccc :=_ddcg ;_bccc .BorderSize =0.2;_cga (_dgdf ,_bccc ,_bef ,_cbab );};_cfc ,_gfee :=_fada (_bef ,_cbab ,opt .Image ,_ddcg );if _gfee !=nil {return nil ,_gfee ;};_cdbe ,_gdef :=_aa .GetDict (_bce .MK );if _gdef {_cdbe .Set ("\u006c",_cfc .ToPdfObject ());
};_eccg :=_aa .MakeDict ();_eccg .Set ("\u0046\u0052\u004d",_cfc .ToPdfObject ());_aggb :=_ag .NewPdfPageResources ();_aggb .ProcSet =_aa .MakeArray (_aa .MakeName ("\u0050\u0044\u0046"));_aggb .XObject =_eccg ;_dcab :=_bef -2;_dgdbc :=_cbab -2;_dgdf .Add_q ();
_dgdf .Add_re (1,1,_dcab ,_dgdbc );_dgdf .Add_W ();_dgdf .Add_n ();_dcab -=2;_dgdbc -=2;_dgdf .Add_q ();_dgdf .Add_re (2,2,_dcab ,_dgdbc );_dgdf .Add_W ();_dgdf .Add_n ();_egfd :=_fc .Min (_dcab /float64 (opt .Image .Width ),_dgdbc /float64 (opt .Image .Height ));
_dgdf .Add_cm (_egfd ,0,0,_egfd ,(_bef /2)-(float64 (opt .Image .Width )*_egfd /2)+2,2);_dgdf .Add_Do ("\u0046\u0052\u004d");_dgdf .Add_Q ();_dgdf .Add_Q ();_bcdbg :=_ag .NewXObjectForm ();_bcdbg .FormType =_aa .MakeInteger (1);_bcdbg .Resources =_aggb ;
_bcdbg .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_bef ,_cbab });_bcdbg .Matrix =_aa .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_bcdbg .SetContentStream (_dgdf .Bytes (),_bfba ());_ggbg :=_aa .MakeDict ();_ggbg .Set ("\u004e",_bcdbg .ToPdfObject ());
_bce .AP =_ggbg ;_egcc .Annotations =append (_egcc .Annotations ,_bce );return _egcc ,nil ;};func _ac (_gaf CircleAnnotationDef ,_ad string )([]byte ,*_ag .PdfRectangle ,*_ag .PdfRectangle ,error ){_adc :=_dd .Circle {X :_gaf .X ,Y :_gaf .Y ,Width :_gaf .Width ,Height :_gaf .Height ,FillEnabled :_gaf .FillEnabled ,FillColor :_gaf .FillColor ,BorderEnabled :_gaf .BorderEnabled ,BorderWidth :_gaf .BorderWidth ,BorderColor :_gaf .BorderColor ,Opacity :_gaf .Opacity };
_be ,_eba ,_adg :=_adc .Draw (_ad );if _adg !=nil {return nil ,nil ,nil ,_adg ;};_ea :=&_ag .PdfRectangle {};_ea .Llx =_gaf .X +_eba .Llx ;_ea .Lly =_gaf .Y +_eba .Lly ;_ea .Urx =_gaf .X +_eba .Urx ;_ea .Ury =_gaf .Y +_eba .Ury ;return _be ,_eba ,_ea ,nil ;
};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _ag .PdfColor ;FillColor _ag .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;};

// SetStyle applies appearance `style` to `fa`.
func (_gbd *FieldAppearance )SetStyle (style AppearanceStyle ){_gbd ._fb =&style };

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_ba FieldAppearance )GenerateAppearanceDict (form *_ag .PdfAcroForm ,field *_ag .PdfField ,wa *_ag .PdfAnnotationWidget )(*_aa .PdfObjectDictionary ,error ){_g .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_fe :=field .GetContext ().(*_ag .PdfFieldText );_ffc ,_gc :=_aa .GetDict (wa .AP );if _gc &&_ba .OnlyIfMissing &&(!_fe ||!_ba .RegenerateTextFields ){_g .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _ffc ,nil ;};if form .DR ==nil {form .DR =_ag .NewPdfPageResources ();};switch _ddd :=field .GetContext ().(type ){case *_ag .PdfFieldText :_aff :=_ddd ;if _gad :=_gbcc (_aff .PdfField );_gad ==""{_aff .DA =form .DA ;};switch {case _aff .Flags ().Has (_ag .FieldFlagPassword ):return nil ,nil ;
case _aff .Flags ().Has (_ag .FieldFlagFileSelect ):return nil ,nil ;case _aff .Flags ().Has (_ag .FieldFlagComb ):if _aff .MaxLen !=nil {_bcg ,_fab :=_ggb (wa ,_aff ,form .DR ,_ba .Style ());if _fab !=nil {return nil ,_fab ;};return _bcg ,nil ;};};_bec ,_bee :=_gd (wa ,_aff ,form .DR ,_ba .Style ());
if _bee !=nil {return nil ,_bee ;};return _bec ,nil ;case *_ag .PdfFieldButton :_cbb :=_ddd ;if _cbb .IsCheckbox (){_afg ,_aba :=_cef (wa ,_cbb ,form .DR ,_ba .Style ());if _aba !=nil {return nil ,_aba ;};return _afg ,nil ;};_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_cbb .GetType ());
case *_ag .PdfFieldChoice :_dba :=_ddd ;switch {case _dba .Flags ().Has (_ag .FieldFlagCombo ):_fdd ,_ada :=_bbb (form ,wa ,_dba ,_ba .Style ());if _ada !=nil {return nil ,_ada ;};return _fdd ,nil ;default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_dba .Flags ().String ());
};default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ddd );};return nil ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ag .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ag .PdfColorDeviceRGB ;Opacity float64 ;};func _gbcc (_cdfd *_ag .PdfField )string {if _cdfd ==nil {return "";
};_abge ,_affd :=_cdfd .GetContext ().(*_ag .PdfFieldText );if !_affd {return _gbcc (_cdfd .Parent );};if _abge .DA !=nil {return _abge .DA .Str ();};return _gbcc (_abge .Parent );};func _feba (_debg []float64 )[]float64 {var (_eggd =len (_debg );_affa =make ([]float64 ,_eggd );
_ddfe =make ([]float64 ,_eggd ););_aabe :=2.0;_affa [0]=_debg [0]/_aabe ;for _fggd :=1;_fggd < _eggd ;_fggd ++{_ddfe [_fggd ]=1/_aabe ;if _fggd < _eggd -1{_aabe =4.0;}else {_aabe =3.5;};_aabe -=_ddfe [_fggd ];_affa [_fggd ]=(_debg [_fggd ]-_affa [_fggd -1])/_aabe ;
};for _egee :=1;_egee < _eggd ;_egee ++{_affa [_eggd -_egee -1]-=_ddfe [_eggd -_egee ]*_affa [_eggd -_egee ];};return _affa ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_ag .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_ag .NewPdfColorDeviceGray (0),BorderColor :_ag .NewPdfColorDeviceGray (0),FillColor :_ag .NewPdfColorDeviceGray (1),Encoder :_aa .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};const (_dbff quadding =0;_ce quadding =1;_af quadding =2;_dg float64 =2.0;);func _bfba ()_aa .StreamEncoder {return _aa .NewFlateEncoder ()};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_ag .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _dd .LineEndingStyle ;LineEndingStyle2 _dd .LineEndingStyle ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_ag .PdfAnnotation ,error ){_fffg :=_ag .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_gdaf ,_cffg ,_cbcd :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_fffg .C =_aa .MakeArrayFromFloats ([]float64 {_gdaf ,_cffg ,_cbcd });_gge :=_ag .NewBorderStyle ();_gge .SetBorderWidth (rectDef .BorderWidth );_fffg .BS =_gge .ToPdfObject ();};if rectDef .FillEnabled {_abeb ,_fddf ,_bcdbc :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_fffg .IC =_aa .MakeArrayFromFloats ([]float64 {_abeb ,_fddf ,_bcdbc });}else {_fffg .IC =_aa .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_fffg .CA =_aa .MakeFloat (rectDef .Opacity );};_eee ,_cfac ,_ffef :=_gbb (rectDef );if _ffef !=nil {return nil ,_ffef ;
};_fffg .AP =_eee ;_fffg .Rect =_aa .MakeArrayFromFloats ([]float64 {_cfac .Llx ,_cfac .Lly ,_cfac .Urx ,_cfac .Ury });return _fffg .PdfAnnotation ,nil ;};func _bbb (_dff *_ag .PdfAcroForm ,_gcgg *_ag .PdfAnnotationWidget ,_gdcd *_ag .PdfFieldChoice ,_beg AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_cdb ,_gbfg :=_aa .GetArray (_gcgg .Rect );
if !_gbfg {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bgf ,_cefg :=_ag .NewPdfRectangle (*_cdb );if _cefg !=nil {return nil ,_cefg ;};_dec ,_ged :=_bgf .Width (),_bgf .Height ();_g .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_gcgg .BS );
_gag ,_cefg :=_f .NewContentStreamParser (_gbcc (_gdcd .PdfField )).Parse ();if _cefg !=nil {return nil ,_cefg ;};_fcc ,_bfc :=_aa .GetDict (_gcgg .MK );if _bfc {_fdf ,_ :=_aa .GetDict (_gcgg .BS );_fcf :=_beg .applyAppearanceCharacteristics (_fcc ,_fdf ,nil );
if _fcf !=nil {return nil ,_fcf ;};};_dab :=_aa .MakeDict ();for _ ,_dda :=range _gdcd .Opt .Elements (){if _efga ,_bfg :=_aa .GetArray (_dda );_bfg &&_efga .Len ()==2{_dda =_efga .Get (1);};var _daec string ;if _abbe ,_eeb :=_aa .GetString (_dda );_eeb {_daec =_abbe .Decoded ();
}else if _dea ,_ffa :=_aa .GetName (_dda );_ffa {_daec =_dea .String ();}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_dda );
return nil ,_bd .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_daec )> 0{_fgce ,_cfg :=_cacb (_gdcd .PdfField ,_dec ,_ged ,_daec ,_beg ,_gag ,_dff .DR ,_fcc );if _cfg !=nil {return nil ,_cfg ;
};_dab .Set (*_aa .MakeName (_daec ),_fgce .ToPdfObject ());};};_adge :=_aa .MakeDict ();_adge .Set ("\u004e",_dab );return _adge ,nil ;};func _fada (_cgba ,_gegb float64 ,_addb *_ag .Image ,_deaa AppearanceStyle )(*_ag .XObjectForm ,error ){_beag ,_dccc :=_ag .NewXObjectImageFromImage (_addb ,nil ,_aa .NewFlateEncoder ());
if _dccc !=nil {return nil ,_dccc ;};_beag .Decode =_aa .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});_gecfg :=_ag .NewPdfPageResources ();_gecfg .ProcSet =_aa .MakeArray (_aa .MakeName ("\u0050\u0044\u0046"),_aa .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));
_gecfg .SetXObjectImageByName (_aa .PdfObjectName ("\u0049\u006d\u0030"),_beag );_dfe :=_f .NewContentCreator ();_dfe .Add_q ();_dfe .Add_cm (float64 (_addb .Width ),0,0,float64 (_addb .Height ),0,0);_dfe .Add_Do ("\u0049\u006d\u0030");_dfe .Add_Q ();_fcfc :=_ag .NewXObjectForm ();
_fcfc .FormType =_aa .MakeInteger (1);_fcfc .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,float64 (_addb .Width ),float64 (_addb .Height )});_fcfc .Resources =_gecfg ;_fcfc .SetContentStream (_dfe .Bytes (),_bfba ());return _fcfc ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_ag .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _ag .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _ag .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _ag .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _d .Image ;

// Image represents the image used for the signature appearance.
Image _d .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _aa .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _dagc (_ddg _d .Image ,_dgfe string ,_dbd *SignatureFieldOpts ,_gccd []float64 ,_fdad *_f .ContentCreator )(*_aa .PdfObjectName ,*_ag .XObjectImage ,error ){_daf ,_gage :=_ag .DefaultImageHandler {}.NewImageFromGoImage (_ddg );
if _gage !=nil {return nil ,nil ,_gage ;};_cdge ,_gage :=_ag .NewXObjectImageFromImage (_daf ,nil ,_dbd .Encoder );if _gage !=nil {return nil ,nil ,_gage ;};_badd ,_abcfg :=float64 (*_cdge .Width ),float64 (*_cdge .Height );_bgef :=_gccd [2]-_gccd [0];
_beeb :=_gccd [3]-_gccd [1];if _dbd .AutoSize {_fad :=_fc .Min (_bgef /_badd ,_beeb /_abcfg );_badd *=_fad ;_abcfg *=_fad ;_gccd [0]=_gccd [0]+(_bgef /2)-(_badd /2);_gccd [1]=_gccd [1]+(_beeb /2)-(_abcfg /2);};var _adbd *_aa .PdfObjectName ;if _bbcg ,_egd :=_aa .GetName (_cdge .Name );
_egd {_adbd =_bbcg ;}else {_adbd =_aa .MakeName (_dgfe );};if _fdad !=nil {_fdad .Add_q ().Translate (_gccd [0],_gccd [1]).Scale (_badd ,_abcfg ).Add_Do (*_adbd ).Add_Q ();}else {return nil ,nil ,_bd .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _adbd ,_cdge ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _efe (_fd CircleAnnotationDef )(*_aa .PdfObjectDictionary ,*_ag .PdfRectangle ,error ){_ga :=_ag .NewXObjectForm ();_ga .Resources =_ag .NewPdfPageResources ();_eb :="";if _fd .Opacity < 1.0{_bg :=_aa .MakeDict ();
_bg .Set ("\u0063\u0061",_aa .MakeFloat (_fd .Opacity ));_bg .Set ("\u0043\u0041",_aa .MakeFloat (_fd .Opacity ));_ff :=_ga .Resources .AddExtGState ("\u0067\u0073\u0031",_bg );if _ff !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_ff ;};_eb ="\u0067\u0073\u0031";};_ebc ,_ge ,_bde ,_dbf :=_ac (_fd ,_eb );if _dbf !=nil {return nil ,nil ,_dbf ;};_dbf =_ga .SetContentStream (_ebc ,nil );if _dbf !=nil {return nil ,nil ,_dbf ;};_ga .BBox =_ge .ToPdfObject ();_ab :=_aa .MakeDict ();
_ab .Set ("\u004e",_ga .ToPdfObject ());return _ab ,_bde ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_ag .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_bdfe FieldAppearance )WrapContentStream (page *_ag .PdfPage )error {_geb ,_ebb :=page .GetAllContentStreams ();if _ebb !=nil {return _ebb ;};_ebe :=_f .NewContentStreamParser (_geb );_bbff ,_ebb :=_ebe .Parse ();if _ebb !=nil {return _ebb ;};_bbff .WrapIfNeeded ();
_eafe :=[]string {_bbff .String ()};return page .SetContentStreams (_eafe ,_bfba ());};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_cf FieldAppearance )Style ()AppearanceStyle {if _cf ._fb !=nil {return *_cf ._fb ;};_dc :=_dg ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_ag .NewPdfColorDeviceGray (0),FillColor :_ag .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_dc };
};func _dgef (_gega *InkAnnotationDef )([]byte ,*_ag .PdfRectangle ,error ){_feffd :=[][]_dd .CubicBezierCurve {};for _ ,_efgd :=range _gega .Paths {if _efgd .Length ()==0{continue ;};_dfga :=_efgd .Points ;_fgf ,_bca ,_ffce :=_efdd (_dfga );if _ffce !=nil {return nil ,nil ,_ffce ;
};if len (_fgf )!=len (_bca ){return nil ,nil ,_bd .New ("\u0049\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u006e\u0064\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0063\u006f\u006e\u0074\u0072o\u006c\u0020\u0070\u006f\u0069n\u0074");
};_faf :=[]_dd .CubicBezierCurve {};for _aggd :=0;_aggd < len (_fgf );_aggd ++{_faf =append (_faf ,_dd .CubicBezierCurve {P0 :_dfga [_aggd ],P1 :_fgf [_aggd ],P2 :_bca [_aggd ],P3 :_dfga [_aggd +1]});};if len (_faf )> 0{_feffd =append (_feffd ,_faf );};
};_dce ,_efaf ,_cde :=_fadg (_feffd ,_gega .Color ,_gega .LineWidth );if _cde !=nil {return nil ,nil ,_cde ;};return _dce ,_efaf ,nil ;};func (_adcc *AppearanceStyle )applyRotation (_cgdb *_aa .PdfObjectDictionary ,_def ,_bgfb float64 ,_ddbc *_f .ContentCreator )(float64 ,float64 ){if !_adcc .AllowMK {return _def ,_bgfb ;
};if _cgdb ==nil {return _def ,_bgfb ;};_acd ,_ :=_aa .GetNumberAsFloat (_cgdb .Get ("\u0052"));if _acd ==0{return _def ,_bgfb ;};_bgbe :=-_acd ;_ecc :=_dd .Path {Points :[]_dd .Point {_dd .NewPoint (0,0).Rotate (_bgbe ),_dd .NewPoint (_def ,0).Rotate (_bgbe ),_dd .NewPoint (0,_bgfb ).Rotate (_bgbe ),_dd .NewPoint (_def ,_bgfb ).Rotate (_bgbe )}}.GetBoundingBox ();
_ddbc .RotateDeg (_acd );_ddbc .Translate (_ecc .X ,_ecc .Y );return _ecc .Width ,_ecc .Height ;};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_fecc *AppearanceStyle ;};func _cacb (_bdeb *_ag .PdfField ,_ffcb ,_ade float64 ,_cbf string ,_bbfe AppearanceStyle ,_facd *_f .ContentStreamOperations ,_abc *_ag .PdfPageResources ,_dbc *_aa .PdfObjectDictionary )(*_ag .XObjectForm ,error ){_ege :=_ag .NewPdfPageResources ();
_ccad ,_bdf :=_ffcb ,_ade ;_afa :=_f .NewContentCreator ();if _bbfe .BorderSize > 0{_gecf (_afa ,_bbfe ,_ffcb ,_ade );};if _bbfe .DrawAlignmentReticle {_dfa :=_bbfe ;_dfa .BorderSize =0.2;_cga (_afa ,_dfa ,_ffcb ,_ade );};_afa .Add_BMC ("\u0054\u0078");
_afa .Add_q ();_afa .Add_BT ();_ffcb ,_ade =_bbfe .applyRotation (_dbc ,_ffcb ,_ade ,_afa );_bgb ,_eaef ,_cce :=_bbfe .processDA (_bdeb ,_facd ,_abc ,_ege ,_afa );if _cce !=nil {return nil ,_cce ;};_abcf :=_bgb .Font ;_aaa :=_bgb .Size ;_bddd :=_aa .MakeName (_bgb .Name );
_eeg :=_aaa ==0;if _eeg &&_eaef {_aaa =_ade *_bbfe .AutoFontSizeFraction ;};_bed :=_abcf .Encoder ();if _bed ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_bed =_gb .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_cbf )==0{return nil ,nil ;};_afff :=_dg ;if _bbfe .MarginLeft !=nil {_afff =*_bbfe .MarginLeft ;};_fbeb :=0.0;if _bed !=nil {for _ ,_faac :=range _cbf {_agg ,_fabf :=_abcf .GetRuneMetrics (_faac );
if !_fabf {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_faac );
continue ;};_fbeb +=_agg .Wx ;};_cbf =string (_bed .Encode (_cbf ));};if _aaa ==0||_eeg &&_fbeb > 0&&_afff +_fbeb *_aaa /1000.0> _ffcb {_aaa =0.95*1000.0*(_ffcb -_afff )/_fbeb ;};_aefa :=1.0*_aaa ;_dgd :=2.0;{_dcc :=_aefa ;if _eeg &&_dgd +_dcc > _ade {_aaa =0.95*(_ade -_dgd );
_aefa =1.0*_aaa ;_dcc =_aefa ;};if _ade > _dcc {_dgd =(_ade -_dcc )/2.0;_dgd +=1.50;};};_afa .Add_Tf (*_bddd ,_aaa );_afa .Add_Td (_afff ,_dgd );_afa .Add_Tj (*_aa .MakeString (_cbf ));_afa .Add_ET ();_afa .Add_Q ();_afa .Add_EMC ();_aeb :=_ag .NewXObjectForm ();
_aeb .Resources =_ege ;_aeb .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_ccad ,_bdf });_aeb .SetContentStream (_afa .Bytes (),_bfba ());return _aeb ,nil ;};func (_efgg *AppearanceStyle )applyAppearanceCharacteristics (_fggef *_aa .PdfObjectDictionary ,_aga *_aa .PdfObjectDictionary ,_cafd *_ag .PdfFont )error {if !_efgg .AllowMK {return nil ;
};if CA ,_ffg :=_aa .GetString (_fggef .Get ("\u0043\u0041"));_ffg &&_cafd !=nil {_cfab :=CA .Bytes ();if len (_cfab )!=0{_bcf :=[]rune (_cafd .Encoder ().Decode (_cfab ));if len (_bcf )==1{_efgg .CheckmarkRune =_bcf [0];};};};if BC ,_aebg :=_aa .GetArray (_fggef .Get ("\u0042\u0043"));
_aebg {_dgab ,_cgd :=BC .ToFloat64Array ();if _cgd !=nil {return _cgd ;};switch len (_dgab ){case 1:_efgg .BorderColor =_ag .NewPdfColorDeviceGray (_dgab [0]);case 3:_efgg .BorderColor =_ag .NewPdfColorDeviceRGB (_dgab [0],_dgab [1],_dgab [2]);case 4:_efgg .BorderColor =_ag .NewPdfColorDeviceCMYK (_dgab [0],_dgab [1],_dgab [2],_dgab [3]);
default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_dgab ));
};if _aga !=nil {if _eca ,_bega :=_aa .GetNumberAsFloat (_aga .Get ("\u0057"));_bega ==nil {_efgg .BorderSize =_eca ;};};};if BG ,_fga :=_aa .GetArray (_fggef .Get ("\u0042\u0047"));_fga {_gcf ,_fbdd :=BG .ToFloat64Array ();if _fbdd !=nil {return _fbdd ;
};switch len (_gcf ){case 1:_efgg .FillColor =_ag .NewPdfColorDeviceGray (_gcf [0]);case 3:_efgg .FillColor =_ag .NewPdfColorDeviceRGB (_gcf [0],_gcf [1],_gcf [2]);case 4:_efgg .FillColor =_ag .NewPdfColorDeviceCMYK (_gcf [0],_gcf [1],_gcf [2],_gcf [3]);
default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_gcf ));
};};return nil ;};func _gdfd (_ece LineAnnotationDef ,_bfgc string )([]byte ,*_ag .PdfRectangle ,*_ag .PdfRectangle ,error ){_cecd :=_dd .Line {X1 :0,Y1 :0,X2 :_ece .X2 -_ece .X1 ,Y2 :_ece .Y2 -_ece .Y1 ,LineColor :_ece .LineColor ,Opacity :_ece .Opacity ,LineWidth :_ece .LineWidth ,LineEndingStyle1 :_ece .LineEndingStyle1 ,LineEndingStyle2 :_ece .LineEndingStyle2 };
_edcf ,_cggd ,_ddea :=_cecd .Draw (_bfgc );if _ddea !=nil {return nil ,nil ,nil ,_ddea ;};_ega :=&_ag .PdfRectangle {};_ega .Llx =_ece .X1 +_cggd .Llx ;_ega .Lly =_ece .Y1 +_cggd .Lly ;_ega .Urx =_ece .X1 +_cggd .Urx ;_ega .Ury =_ece .Y1 +_cggd .Ury ;return _edcf ,_cggd ,_ega ,nil ;
};func _cef (_caf *_ag .PdfAnnotationWidget ,_acec *_ag .PdfFieldButton ,_cfdd *_ag .PdfPageResources ,_cba AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_gfe ,_cacf :=_aa .GetArray (_caf .Rect );if !_cacf {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_cfa ,_fgb :=_ag .NewPdfRectangle (*_gfe );if _fgb !=nil {return nil ,_fgb ;};_gab ,_bbcb :=_cfa .Width (),_cfa .Height ();_eef ,_cbg :=_gab ,_bbcb ;_g .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_caf .BS );
_bggc ,_fgb :=_ag .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _fgb !=nil {return nil ,_fgb ;};_eaae ,_dcf :=_aa .GetDict (_caf .MK );if _dcf {_ceb ,_ :=_aa .GetDict (_caf .BS );_dgf :=_cba .applyAppearanceCharacteristics (_eaae ,_ceb ,_bggc );
if _dgf !=nil {return nil ,_dgf ;};};_fgd :=_ag .NewXObjectForm ();{_bae :=_f .NewContentCreator ();if _cba .BorderSize > 0{_gecf (_bae ,_cba ,_gab ,_bbcb );};if _cba .DrawAlignmentReticle {_cag :=_cba ;_cag .BorderSize =0.2;_cga (_bae ,_cag ,_gab ,_bbcb );
};_gab ,_bbcb =_cba .applyRotation (_eaae ,_gab ,_bbcb ,_bae );_cfaf :=_cba .AutoFontSizeFraction *_bbcb ;_edc ,_fec :=_bggc .GetRuneMetrics (_cba .CheckmarkRune );if !_fec {return nil ,_bd .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_ddfc :=_bggc .Encoder ();_gca :=_ddfc .Encode (string (_cba .CheckmarkRune ));_ffff :=_edc .Wx *_cfaf /1000.0;_faa :=705.0;_aea :=_faa /1000.0*_cfaf ;_bbf :=_dg ;if _cba .MarginLeft !=nil {_bbf =*_cba .MarginLeft ;};_agc :=1.0;if _ffff < _gab {_bbf =(_gab -_ffff )/2.0;
};if _aea < _bbcb {_agc =(_bbcb -_aea )/2.0;};_bae .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_cfaf ).Add_Td (_bbf ,_agc ).Add_Tj (*_aa .MakeStringFromBytes (_gca )).Add_ET ().Add_Q ();_fgd .Resources =_ag .NewPdfPageResources ();
_fgd .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_bggc .ToPdfObject ());_fgd .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_eef ,_cbg });_fgd .SetContentStream (_bae .Bytes (),_bfba ());};_agfd :=_ag .NewXObjectForm ();{_dgae :=_f .NewContentCreator ();
if _cba .BorderSize > 0{_gecf (_dgae ,_cba ,_gab ,_bbcb );};_agfd .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_eef ,_cbg });_agfd .SetContentStream (_dgae .Bytes (),_bfba ());};_daeb :=_aa .MakeDict ();_daeb .Set ("\u004f\u0066\u0066",_agfd .ToPdfObject ());
_daeb .Set ("\u0059\u0065\u0073",_fgd .ToPdfObject ());_dcb :=_aa .MakeDict ();_dcb .Set ("\u004e",_daeb );return _dcb ,nil ;};type quadding int ;

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_ag .Image ;_gce AppearanceStyle ;};func _aedb (_efb RectangleAnnotationDef ,_ggeg string )([]byte ,*_ag .PdfRectangle ,*_ag .PdfRectangle ,error ){_ffgd :=_dd .Rectangle {X :0,Y :0,Width :_efb .Width ,Height :_efb .Height ,FillEnabled :_efb .FillEnabled ,FillColor :_efb .FillColor ,BorderEnabled :_efb .BorderEnabled ,BorderWidth :2*_efb .BorderWidth ,BorderColor :_efb .BorderColor ,Opacity :_efb .Opacity };
_facg ,_fcgce ,_cfcf :=_ffgd .Draw (_ggeg );if _cfcf !=nil {return nil ,nil ,nil ,_cfcf ;};_feaa :=&_ag .PdfRectangle {};_feaa .Llx =_efb .X +_fcgce .Llx ;_feaa .Lly =_efb .Y +_fcgce .Lly ;_feaa .Urx =_efb .X +_fcgce .Urx ;_feaa .Ury =_efb .Y +_fcgce .Ury ;
return _facg ,_fcgce ,_feaa ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_ag .PdfAnnotation ,error ){_ccec :=_ag .NewPdfAnnotationLine ();_ccec .L =_aa .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_bdebb :=_aa .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_dd .LineEndingStyleArrow {_bdebb =_aa .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_fba :=_aa .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_dd .LineEndingStyleArrow {_fba =_aa .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_ccec .LE =_aa .MakeArray (_bdebb ,_fba );if lineDef .Opacity < 1.0{_ccec .CA =_aa .MakeFloat (lineDef .Opacity );};_agcf ,_agfc ,_edb :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_ccec .IC =_aa .MakeArrayFromFloats ([]float64 {_agcf ,_agfc ,_edb });
_ccec .C =_aa .MakeArrayFromFloats ([]float64 {_agcf ,_agfc ,_edb });_ggc :=_ag .NewBorderStyle ();_ggc .SetBorderWidth (lineDef .LineWidth );_ccec .BS =_ggc .ToPdfObject ();_gbgd ,_fddb ,_bcac :=_acga (lineDef );if _bcac !=nil {return nil ,_bcac ;};_ccec .AP =_gbgd ;
_ccec .Rect =_aa .MakeArrayFromFloats ([]float64 {_fddb .Llx ,_fddb .Lly ,_fddb .Urx ,_fddb .Ury });return _ccec .PdfAnnotation ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_ag .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_ag .PdfFieldChoice ,error ){if page ==nil {return nil ,_bd .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_effb :=_ag .NewPdfField ();_begac :=&_ag .PdfFieldChoice {};_effb .SetContext (_begac );_begac .PdfField =_effb ;_begac .T =_aa .MakeString (name );_begac .Opt =_aa .MakeArray ();for _ ,_gafa :=range opt .Choices {_begac .Opt .Append (_aa .MakeString (_gafa ));
};_begac .SetFlag (_ag .FieldFlagCombo );_ggf :=_ag .NewPdfAnnotationWidget ();_ggf .Rect =_aa .MakeArrayFromFloats (rect );_ggf .P =page .ToPdfObject ();_ggf .F =_aa .MakeInteger (4);_ggf .Parent =_begac .ToPdfObject ();_begac .Annotations =append (_begac .Annotations ,_ggf );
return _begac ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_faae ImageFieldAppearance )WrapContentStream (page *_ag .PdfPage )error {_eafea ,_adced :=page .GetAllContentStreams ();if _adced !=nil {return _adced ;};_ebcf :=_f .NewContentStreamParser (_eafea );_daecg ,_adced :=_ebcf .Parse ();if _adced !=nil {return _adced ;
};_daecg .WrapIfNeeded ();_gbgg :=[]string {_daecg .String ()};return page .SetContentStreams (_gbgg ,_bfba ());};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_fb *AppearanceStyle ;};func _gecf (_ddb *_f .ContentCreator ,_fcg AppearanceStyle ,_cae ,_bdef float64 ){_ddb .Add_q ().Add_re (0,0,_cae ,_bdef ).Add_w (_fcg .BorderSize ).SetStrokingColor (_fcg .BorderColor ).SetNonStrokingColor (_fcg .FillColor ).Add_B ().Add_Q ();
};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_ag .PdfAnnotation ,error ){_bc :=_ag .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_ed ,_fa ,_cb :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_bc .C =_aa .MakeArrayFromFloats ([]float64 {_ed ,_fa ,_cb });
_db :=_ag .NewBorderStyle ();_db .SetBorderWidth (circDef .BorderWidth );_bc .BS =_db .ToPdfObject ();};if circDef .FillEnabled {_ee ,_fcd ,_ae :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_bc .IC =_aa .MakeArrayFromFloats ([]float64 {_ee ,_fcd ,_ae });
}else {_bc .IC =_aa .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_bc .CA =_aa .MakeFloat (circDef .Opacity );};_bb ,_gba ,_ef :=_efe (circDef );if _ef !=nil {return nil ,_ef ;};_bc .AP =_bb ;_bc .Rect =_aa .MakeArrayFromFloats ([]float64 {_gba .Llx ,_gba .Lly ,_gba .Urx ,_gba .Ury });
return _bc .PdfAnnotation ,nil ;};

// InkAnnotationDef holds base information for constructing an ink annotation.
type InkAnnotationDef struct{

// Paths is the array of stroked paths which compose the annotation.
Paths []_dd .Path ;

// Color is the color of the line. Default to black.
Color *_ag .PdfColorDeviceRGB ;

// LineWidth is the width of the line.
LineWidth float64 ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _efdd (_fbdb []_dd .Point )(_dbg []_dd .Point ,_aafb []_dd .Point ,_gga error ){_beage :=len (_fbdb )-1;if len (_fbdb )< 1{return nil ,nil ,_bd .New ("\u0041\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0070\u006f\u0069\u006e\u0074s \u0072e\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0020\u0063\u0075\u0072\u0076\u0065\u0020\u0063\u006f\u006e\u0074r\u006f\u006c\u0020\u0070\u006f\u0069\u006e\u0074\u0073");
};if _beage ==1{_bcaa :=_dd .Point {X :(2*_fbdb [0].X +_fbdb [1].X )/3,Y :(2*_fbdb [0].Y +_fbdb [1].Y )/3};_dbg =append (_dbg ,_bcaa );_aafb =append (_aafb ,_dd .Point {X :2*_bcaa .X -_fbdb [0].X ,Y :2*_bcaa .Y -_fbdb [0].Y });return _dbg ,_aafb ,nil ;
};_cafda :=make ([]float64 ,_beage );for _ccbd :=1;_ccbd < _beage -1;_ccbd ++{_cafda [_ccbd ]=4*_fbdb [_ccbd ].X +2*_fbdb [_ccbd +1].X ;};_cafda [0]=_fbdb [0].X +2*_fbdb [1].X ;_cafda [_beage -1]=(8*_fbdb [_beage -1].X +_fbdb [_beage ].X )/2.0;_ceeb :=_feba (_cafda );
for _eac :=1;_eac < _beage -1;_eac ++{_cafda [_eac ]=4*_fbdb [_eac ].Y +2*_fbdb [_eac +1].Y ;};_cafda [0]=_fbdb [0].Y +2*_fbdb [1].Y ;_cafda [_beage -1]=(8*_fbdb [_beage -1].Y +_fbdb [_beage ].Y )/2.0;_ffcbg :=_feba (_cafda );_dbg =make ([]_dd .Point ,_beage );
_aafb =make ([]_dd .Point ,_beage );for _cgc :=0;_cgc < _beage ;_cgc ++{_dbg [_cgc ]=_dd .Point {X :_ceeb [_cgc ],Y :_ffcbg [_cgc ]};if _cgc < _beage -1{_aafb [_cgc ]=_dd .Point {X :2*_fbdb [_cgc +1].X -_ceeb [_cgc +1],Y :2*_fbdb [_cgc +1].Y -_ffcbg [_cgc +1]};
}else {_aafb [_cgc ]=_dd .Point {X :(_fbdb [_beage ].X +_ceeb [_beage -1])/2,Y :(_fbdb [_beage ].Y +_ffcbg [_beage -1])/2};};};return _dbg ,_aafb ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_bbd ImageFieldAppearance )GenerateAppearanceDict (form *_ag .PdfAcroForm ,field *_ag .PdfField ,wa *_ag .PdfAnnotationWidget )(*_aa .PdfObjectDictionary ,error ){_ ,_dac :=field .GetContext ().(*_ag .PdfFieldButton );if !_dac {_g .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_fdg ,_dcbb :=_aa .GetDict (wa .AP );if _dcbb &&_bbd .OnlyIfMissing {_g .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _fdg ,nil ;};if form .DR ==nil {form .DR =_ag .NewPdfPageResources ();};switch _eecg :=field .GetContext ().(type ){case *_ag .PdfFieldButton :if _eecg .IsPush (){_ggga ,_cgag :=_edef (_eecg ,wa ,_bbd .Style ());if _cgag !=nil {return nil ,_cgag ;
};return _ggga ,nil ;};};return nil ,nil ;};func _acga (_gfg LineAnnotationDef )(*_aa .PdfObjectDictionary ,*_ag .PdfRectangle ,error ){_gcee :=_ag .NewXObjectForm ();_gcee .Resources =_ag .NewPdfPageResources ();_dde :="";if _gfg .Opacity < 1.0{_cec :=_aa .MakeDict ();
_cec .Set ("\u0063\u0061",_aa .MakeFloat (_gfg .Opacity ));_bcef :=_gcee .Resources .AddExtGState ("\u0067\u0073\u0031",_cec );if _bcef !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_bcef ;};_dde ="\u0067\u0073\u0031";};_acde ,_adag ,_eecgd ,_gafd :=_gdfd (_gfg ,_dde );if _gafd !=nil {return nil ,nil ,_gafd ;};_gafd =_gcee .SetContentStream (_acde ,nil );if _gafd !=nil {return nil ,nil ,_gafd ;};_gcee .BBox =_adag .ToPdfObject ();
_bcda :=_aa .MakeDict ();_bcda .Set ("\u004e",_gcee .ToPdfObject ());return _bcda ,_eecgd ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func _gff (_addg *InkAnnotationDef )(*_aa .PdfObjectDictionary ,*_ag .PdfRectangle ,error ){_ceef :=_ag .NewXObjectForm ();_gede ,_fffff ,_dcbe :=_dgef (_addg );if _dcbe !=nil {return nil ,nil ,_dcbe ;};
_dcbe =_ceef .SetContentStream (_gede ,nil );if _dcbe !=nil {return nil ,nil ,_dcbe ;};_ceef .BBox =_fffff .ToPdfObject ();_ceef .Resources =_ag .NewPdfPageResources ();_ceef .Resources .ProcSet =_aa .MakeArray (_aa .MakeName ("\u0050\u0044\u0046"));_aac :=_aa .MakeDict ();
_aac .Set ("\u004e",_ceef .ToPdfObject ());return _aac ,_fffff ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_ag .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_ag .PdfFieldSignature ,error ){if signature ==nil {return nil ,_bd .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_gffd ,_dafa :=_bcgd (lines ,opts );if _dafa !=nil {return nil ,_dafa ;};_fadb :=_ag .NewPdfFieldSignature (signature );_fadb .Rect =_aa .MakeArrayFromFloats (opts .Rect );_fadb .AP =_gffd ;return _fadb ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_ag .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_ag .PdfFieldText ,error ){if page ==nil {return nil ,_bd .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_bd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_eafb :=_ag .NewPdfField ();_afaa :=&_ag .PdfFieldText {};_eafb .SetContext (_afaa );_afaa .PdfField =_eafb ;_afaa .T =_aa .MakeString (name );
if opt .MaxLen > 0{_afaa .MaxLen =_aa .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_afaa .V =_aa .MakeString (opt .Value );};_cgaf :=_ag .NewPdfAnnotationWidget ();_cgaf .Rect =_aa .MakeArrayFromFloats (rect );_cgaf .P =page .ToPdfObject ();
_cgaf .F =_aa .MakeInteger (4);_cgaf .Parent =_afaa .ToPdfObject ();_afaa .Annotations =append (_afaa .Annotations ,_cgaf );return _afaa ,nil ;};