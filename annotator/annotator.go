//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_f "bytes";_cf "errors";_e "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/contentstream";_gd "github.com/unidoc/unipdf/v3/contentstream/draw";_eb "github.com/unidoc/unipdf/v3/core";_a "github.com/unidoc/unipdf/v3/internal/textencoding";
_eg "github.com/unidoc/unipdf/v3/model";_ca "image";_ee "math";_fd "strings";_d "unicode";);

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_fcb FieldAppearance )GenerateAppearanceDict (form *_eg .PdfAcroForm ,field *_eg .PdfField ,wa *_eg .PdfAnnotationWidget )(*_eb .PdfObjectDictionary ,error ){_e .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_dg :=field .GetContext ().(*_eg .PdfFieldText );_acg ,_dac :=_eb .GetDict (wa .AP );if _dac &&_fcb .OnlyIfMissing &&(!_dg ||!_fcb .RegenerateTextFields ){_e .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _acg ,nil ;};if form .DR ==nil {form .DR =_eg .NewPdfPageResources ();};switch _cdf :=field .GetContext ().(type ){case *_eg .PdfFieldText :_dgf :=_cdf ;if _ace :=_dbda (_dgf .PdfField );_ace ==""{_dgf .DA =form .DA ;};switch {case _dgf .Flags ().Has (_eg .FieldFlagPassword ):return nil ,nil ;
case _dgf .Flags ().Has (_eg .FieldFlagFileSelect ):return nil ,nil ;case _dgf .Flags ().Has (_eg .FieldFlagComb ):if _dgf .MaxLen !=nil {_bab ,_ecc :=_beac (wa ,_dgf ,form .DR ,_fcb .Style ());if _ecc !=nil {return nil ,_ecc ;};return _bab ,nil ;};};_ad ,_cfg :=_aca (wa ,_dgf ,form .DR ,_fcb .Style ());
if _cfg !=nil {return nil ,_cfg ;};return _ad ,nil ;case *_eg .PdfFieldButton :_ebf :=_cdf ;if _ebf .IsCheckbox (){_fab ,_be :=_eed (wa ,_ebf ,form .DR ,_fcb .Style ());if _be !=nil {return nil ,_be ;};return _fab ,nil ;};_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_ebf .GetType ());
case *_eg .PdfFieldChoice :_cee :=_cdf ;switch {case _cee .Flags ().Has (_eg .FieldFlagCombo ):_ceb ,_ef :=_dcbb (form ,wa ,_cee ,_fcb .Style ());if _ef !=nil {return nil ,_ef ;};return _ceb ,nil ;default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_cee .Flags ().String ());
};default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cdf );};return nil ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;
SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_caea ImageFieldAppearance )Style ()AppearanceStyle {if _caea ._abba !=nil {return *_caea ._abba ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_eg .NewPdfColorDeviceGray (0),FillColor :_eg .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};func _beac (_dad *_eg .PdfAnnotationWidget ,_cdc *_eg .PdfFieldText ,_fcg *_eg .PdfPageResources ,_ccb AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_gcee :=_eg .NewPdfPageResources ();_dcdc ,_fef :=_eb .GetArray (_dad .Rect );if !_fef {return nil ,_cf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_afb ,_de :=_eg .NewPdfRectangle (*_dcdc );if _de !=nil {return nil ,_de ;};_cgc ,_ddg :=_afb .Width (),_afb .Height ();_eag ,_cgea :=_cgc ,_ddg ;_bdg ,_fag :=_eb .GetDict (_dad .MK );if _fag {_ggb ,_ :=_eb .GetDict (_dad .BS );_egb :=_ccb .applyAppearanceCharacteristics (_bdg ,_ggb ,nil );
if _egb !=nil {return nil ,_egb ;};};_ccg ,_fag :=_eb .GetIntVal (_cdc .MaxLen );if !_fag {return nil ,_cf .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _ccg <=0{return nil ,_cf .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_dda :=_cgc /float64 (_ccg );_fec ,_de :=_g .NewContentStreamParser (_dbda (_cdc .PdfField )).Parse ();if _de !=nil {return nil ,_de ;};_dgb :=_g .NewContentCreator ();if _ccb .BorderSize > 0{_agg (_dgb ,_ccb ,_cgc ,_ddg );};if _ccb .DrawAlignmentReticle {_ade :=_ccb ;
_ade .BorderSize =0.2;_cab (_dgb ,_ade ,_cgc ,_ddg );};_dgb .Add_BMC ("\u0054\u0078");_dgb .Add_q ();_ ,_ddg =_ccb .applyRotation (_bdg ,_cgc ,_ddg ,_dgb );_dgb .Add_BT ();_fda ,_caeg ,_de :=_ccb .processDA (_cdc .PdfField ,_fec ,_fcg ,_gcee ,_dgb );if _de !=nil {return nil ,_de ;
};_fdaa :=_fda .Font ;_dcb :=_eb .MakeName (_fda .Name );_dcfc :=_fda .Size ;_fdd :=_dcfc ==0;if _fdd &&_caeg {_dcfc =_ddg *_ccb .AutoFontSizeFraction ;};_abg :=_fdaa .Encoder ();if _abg ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_abg =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _deb string ;if _afgd ,_dee :=_eb .GetString (_cdc .V );_dee {_deb =_afgd .Decoded ();};_dgb .Add_Tf (*_dcb ,_dcfc );var _fca float64 ;for _ ,_eeff :=range _deb {_deed ,_gef :=_fdaa .GetRuneMetrics (_eeff );
if !_gef {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_eeff );
continue ;};_gff :=_deed .Wy ;if int (_gff )<=0{_gff =_deed .Wx ;};if _gff > _fca {_fca =_gff ;};};if int (_fca )==0{_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_fca =1000;};_cea ,_de :=_fdaa .GetFontDescriptor ();if _de !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _eeb float64 ;
if _cea !=nil {_eeb ,_de =_cea .GetCapHeight ();if _de !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_de );
};};if int (_eeb )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_eeb =1000.0;};_dgfe :=_eeb /1000.0*_dcfc ;_effa :=0.0;_afa :=1.0*_dcfc *(_fca /1000.0);{_ggad :=_afa ;if _fdd &&_effa +_ggad > _ddg {_dcfc =0.95*(_ddg -_effa );_dgfe =_eeb /1000.0*_dcfc ;};if _ddg > _dgfe {_effa =(_ddg -_dgfe )/2.0;};};_dgb .Add_Td (0,_effa );
if _eaf ,_fdbf :=_eb .GetIntVal (_cdc .Q );_fdbf {switch _eaf {case 2:if len (_deb )< _ccg {_fdgb :=float64 (_ccg -len (_deb ))*_dda ;_dgb .Add_Td (_fdgb ,0);};};};for _adf ,_fff :=range _deb {_ffgb :=_ce ;if _ccb .MarginLeft !=nil {_ffgb =*_ccb .MarginLeft ;
};_ceae :=string (_fff );if _abg !=nil {_acee ,_bg :=_fdaa .GetRuneMetrics (_fff );if !_bg {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_fff );
continue ;};_ceae =string (_abg .Encode (_ceae ));_dfc :=_dcfc *_acee .Wx /1000.0;_cgd :=(_dda -_dfc )/2;_ffgb =_cgd ;};_dgb .Add_Td (_ffgb ,0);_dgb .Add_Tj (*_eb .MakeString (_ceae ));if _adf !=len (_deb )-1{_dgb .Add_Td (_dda -_ffgb ,0);};};_dgb .Add_ET ();
_dgb .Add_Q ();_dgb .Add_EMC ();_ccc :=_eg .NewXObjectForm ();_ccc .Resources =_gcee ;_ccc .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_eag ,_cgea });_ccc .SetContentStream (_dgb .Bytes (),_eedc ());_fafe :=_eb .MakeDict ();_fafe .Set ("\u004e",_ccc .ToPdfObject ());
return _fafe ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_eg .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_eg .PdfFieldButton ,error ){if page ==nil {return nil ,_cf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_cf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_cf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ddc ,_eaga :=_eg .NewStandard14Font (_eg .ZapfDingbatsName );if _eaga !=nil {return nil ,_eaga ;};_bee :=_eg .NewPdfField ();_bda :=&_eg .PdfFieldButton {};_bee .SetContext (_bda );_bda .PdfField =_bee ;_bda .T =_eb .MakeString (name );_bda .SetType (_eg .ButtonTypeCheckbox );
_fgbd :="\u004f\u0066\u0066";if opt .Checked {_fgbd ="\u0059\u0065\u0073";};_bda .V =_eb .MakeName (_fgbd );_ced :=_eg .NewPdfAnnotationWidget ();_ced .Rect =_eb .MakeArrayFromFloats (rect );_ced .P =page .ToPdfObject ();_ced .F =_eb .MakeInteger (4);_ced .Parent =_bda .ToPdfObject ();
_cbef :=rect [2]-rect [0];_cfb :=rect [3]-rect [1];var _edcd _f .Buffer ;_edcd .WriteString ("\u0071\u000a");_edcd .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_edcd .WriteString ("\u0042\u0054\u000a");_edcd .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");
_edcd .WriteString ("\u0045\u0054\u000a");_edcd .WriteString ("\u0051\u000a");_eeeg :=_g .NewContentCreator ();_eeeg .Add_q ();_eeeg .Add_rg (0,0,1);_eeeg .Add_BT ();_eeeg .Add_Tf (*_eb .MakeName ("\u005a\u0061\u0044\u0062"),12);_eeeg .Add_Td (0,0);_eeeg .Add_ET ();
_eeeg .Add_Q ();_ebcd :=_eg .NewXObjectForm ();_ebcd .SetContentStream (_eeeg .Bytes (),_eb .NewRawEncoder ());_ebcd .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_cbef ,_cfb });_ebcd .Resources =_eg .NewPdfPageResources ();_ebcd .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_ddc .ToPdfObject ());
_eeeg =_g .NewContentCreator ();_eeeg .Add_q ();_eeeg .Add_re (0,0,_cbef ,_cfb );_eeeg .Add_W ().Add_n ();_eeeg .Add_rg (0,0,1);_eeeg .Translate (0,3.0);_eeeg .Add_BT ();_eeeg .Add_Tf (*_eb .MakeName ("\u005a\u0061\u0044\u0062"),12);_eeeg .Add_Td (0,0);
_eeeg .Add_Tj (*_eb .MakeString ("\u0034"));_eeeg .Add_ET ();_eeeg .Add_Q ();_eeed :=_eg .NewXObjectForm ();_eeed .SetContentStream (_eeeg .Bytes (),_eb .NewRawEncoder ());_eeed .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_cbef ,_cfb });_eeed .Resources =_eg .NewPdfPageResources ();
_eeed .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_ddc .ToPdfObject ());_bccd :=_eb .MakeDict ();_bccd .Set ("\u004f\u0066\u0066",_ebcd .ToPdfObject ());_bccd .Set ("\u0059\u0065\u0073",_eeed .ToPdfObject ());_bdbf :=_eb .MakeDict ();_bdbf .Set ("\u004e",_bccd );
_ced .AP =_bdbf ;_ced .AS =_eb .MakeName (_fgbd );_bda .Annotations =append (_bda .Annotations ,_ced );return _bda ,nil ;};func _dbda (_bac *_eg .PdfField )string {if _bac ==nil {return "";};_aab ,_cbc :=_bac .GetContext ().(*_eg .PdfFieldText );if !_cbc {return _dbda (_bac .Parent );
};if _aab .DA !=nil {return _aab .DA .Str ();};return _dbda (_aab .Parent );};func _agg (_fbed *_g .ContentCreator ,_fad AppearanceStyle ,_ddb ,_bcd float64 ){_fbed .Add_q ().Add_re (0,0,_ddb ,_bcd ).Add_w (_fad .BorderSize ).SetStrokingColor (_fad .BorderColor ).SetNonStrokingColor (_fad .FillColor ).Add_B ().Add_Q ();
};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_eg .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _eg .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _eg .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _eg .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _ca .Image ;

// Image represents the image used for the signature appearance.
Image _ca .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _eb .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_eg .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};func _cab (_fagd *_g .ContentCreator ,_ecf AppearanceStyle ,_cda ,_fcc float64 ){_fagd .Add_q ().Add_re (0,0,_cda ,_fcc ).Add_re (0,_fcc /2,_cda ,_fcc /2).Add_re (0,0,_cda ,_fcc ).Add_re (_cda /2,0,_cda /2,_fcc ).Add_w (_ecf .BorderSize ).SetStrokingColor (_ecf .BorderColor ).SetNonStrokingColor (_ecf .FillColor ).Add_B ().Add_Q ();
};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_eg .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_eg .PdfAnnotation ,error ){_agag :=_eg .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_bgbfb ,_ffca ,_deca :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_agag .C =_eb .MakeArrayFromFloats ([]float64 {_bgbfb ,_ffca ,_deca });_acbbg :=_eg .NewBorderStyle ();_acbbg .SetBorderWidth (rectDef .BorderWidth );_agag .BS =_acbbg .ToPdfObject ();};if rectDef .FillEnabled {_cfag ,_aaff ,_cff :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_agag .IC =_eb .MakeArrayFromFloats ([]float64 {_cfag ,_aaff ,_cff });}else {_agag .IC =_eb .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_agag .CA =_eb .MakeFloat (rectDef .Opacity );};_fdef ,_dccg ,_gceb :=_aacc (rectDef );if _gceb !=nil {return nil ,_gceb ;
};_agag .AP =_fdef ;_agag .Rect =_eb .MakeArrayFromFloats ([]float64 {_dccg .Llx ,_dccg .Lly ,_dccg .Urx ,_dccg .Ury });return _agag .PdfAnnotation ,nil ;};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_abba *AppearanceStyle ;};func _fagb (_deg RectangleAnnotationDef ,_dccb string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_fbgd :=_gd .Rectangle {X :0,Y :0,Width :_deg .Width ,Height :_deg .Height ,FillEnabled :_deg .FillEnabled ,FillColor :_deg .FillColor ,BorderEnabled :_deg .BorderEnabled ,BorderWidth :2*_deg .BorderWidth ,BorderColor :_deg .BorderColor ,Opacity :_deg .Opacity };
_gcbd ,_egea ,_edg :=_fbgd .Draw (_dccb );if _edg !=nil {return nil ,nil ,nil ,_edg ;};_fgdd :=&_eg .PdfRectangle {};_fgdd .Llx =_deg .X +_egea .Llx ;_fgdd .Lly =_deg .Y +_egea .Lly ;_fgdd .Urx =_deg .X +_egea .Urx ;_fgdd .Ury =_deg .Y +_egea .Ury ;return _gcbd ,_egea ,_fgdd ,nil ;
};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_abcb FieldAppearance )WrapContentStream (page *_eg .PdfPage )error {_cba ,_gggd :=page .GetAllContentStreams ();if _gggd !=nil {return _gggd ;};_aceb :=_g .NewContentStreamParser (_cba );_beaf ,_gggd :=_aceb .Parse ();if _gggd !=nil {return _gggd ;
};_beaf .WrapIfNeeded ();_cdbe :=[]string {_beaf .String ()};return page .SetContentStreams (_cdbe ,_eedc ());};func _ebff (_abef LineAnnotationDef ,_afeg string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_edbd :=_gd .Line {X1 :0,Y1 :0,X2 :_abef .X2 -_abef .X1 ,Y2 :_abef .Y2 -_abef .Y1 ,LineColor :_abef .LineColor ,Opacity :_abef .Opacity ,LineWidth :_abef .LineWidth ,LineEndingStyle1 :_abef .LineEndingStyle1 ,LineEndingStyle2 :_abef .LineEndingStyle2 };
_gbg ,_gec ,_cfefc :=_edbd .Draw (_afeg );if _cfefc !=nil {return nil ,nil ,nil ,_cfefc ;};_affb :=&_eg .PdfRectangle {};_affb .Llx =_abef .X1 +_gec .Llx ;_affb .Lly =_abef .Y1 +_gec .Lly ;_affb .Urx =_abef .X1 +_gec .Urx ;_affb .Ury =_abef .Y1 +_gec .Ury ;
return _gbg ,_gec ,_affb ,nil ;};func _eedc ()_eb .StreamEncoder {return _eb .NewFlateEncoder ()};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_eg .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_eg .PdfFieldSignature ,error ){if signature ==nil {return nil ,_cf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_dagb ,_fagdb :=_adbc (lines ,opts );if _fagdb !=nil {return nil ,_fagdb ;};_bfec :=_eg .NewPdfFieldSignature (signature );_bfec .Rect =_eb .MakeArrayFromFloats (opts .Rect );_bfec .AP =_dagb ;return _bfec ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_eg .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_eg .PdfFieldText ,error ){if page ==nil {return nil ,_cf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_cf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_cf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aacba :=_eg .NewPdfField ();_bbdd :=&_eg .PdfFieldText {};_aacba .SetContext (_bbdd );_bbdd .PdfField =_aacba ;_bbdd .T =_eb .MakeString (name );
if opt .MaxLen > 0{_bbdd .MaxLen =_eb .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_bbdd .V =_eb .MakeString (opt .Value );};_cgf :=_eg .NewPdfAnnotationWidget ();_cgf .Rect =_eb .MakeArrayFromFloats (rect );_cgf .P =page .ToPdfObject ();
_cgf .F =_eb .MakeInteger (4);_cgf .Parent =_bbdd .ToPdfObject ();_bbdd .Annotations =append (_bbdd .Annotations ,_cgf );return _bbdd ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_fcga ImageFieldAppearance )WrapContentStream (page *_eg .PdfPage )error {_cfa ,_eae :=page .GetAllContentStreams ();if _eae !=nil {return _eae ;};_ada :=_g .NewContentStreamParser (_cfa );_ffbec ,_eae :=_ada .Parse ();if _eae !=nil {return _eae ;
};_ffbec .WrapIfNeeded ();_ccbf :=[]string {_ffbec .String ()};return page .SetContentStreams (_ccbf ,_eedc ());};func _adbc (_gggdc []*SignatureLine ,_dded *SignatureFieldOpts )(*_eb .PdfObjectDictionary ,error ){if _dded ==nil {_dded =NewSignatureFieldOpts ();
};var _efe error ;var _ega *_eb .PdfObjectName ;_gffb :=_dded .Font ;if _gffb !=nil {_fbf ,_ :=_gffb .GetFontDescriptor ();if _fbf !=nil {if _ffbe ,_ceeb :=_fbf .FontName .(*_eb .PdfObjectName );_ceeb {_ega =_ffbe ;};};if _ega ==nil {_ega =_eb .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _gffb ,_efe =_eg .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_efe !=nil {return nil ,_efe ;};_ega =_eb .MakeName ("\u0048\u0065\u006c\u0076");};_cdbd :=_dded .FontSize ;if _cdbd <=0{_cdbd =10;};if _dded .LineHeight <=0{_dded .LineHeight =1;
};_gdd :=_dded .LineHeight *_cdbd ;_cead ,_ffec :=_gffb .GetRuneMetrics (' ');if !_ffec {return nil ,_cf .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_cfe :=_cead .Wx ;var _abee float64 ;var _eceb []string ;for _ ,_bddg :=range _gggdc {if _bddg .Text ==""{continue ;};_aabf :=_bddg .Text ;if _bddg .Desc !=""{_aabf =_bddg .Desc +"\u003a\u0020"+_aabf ;};_eceb =append (_eceb ,_aabf );var _ecee float64 ;
for _ ,_adg :=range _aabf {_dgae ,_eddg :=_gffb .GetRuneMetrics (_adg );if !_eddg {continue ;};_ecee +=_dgae .Wx ;};if _ecee > _abee {_abee =_ecee ;};};_abee =_abee *_cdbd /1000.0;_gab :=float64 (len (_eceb ))*_gdd ;_dbf :=_dded .Image !=nil ;_bagg :=_dded .Rect ;
if _bagg ==nil {_bagg =[]float64 {0,0,_abee ,_gab };if _dbf {_bagg [2]=_abee *2;_bagg [3]=_gab *2;};_dded .Rect =_bagg ;};_eeffb :=_bagg [2]-_bagg [0];_bagf :=_bagg [3]-_bagg [1];_bddd ,_egbe :=_bagg ,_bagg ;var _ffecb ,_aaf float64 ;if _dbf &&len (_eceb )> 0{if _dded .ImagePosition <=SignatureImageRight {_cfdc :=[]float64 {_bagg [0],_bagg [1],_bagg [0]+(_eeffb /2),_bagg [3]};
_acbb :=[]float64 {_bagg [0]+(_eeffb /2),_bagg [1],_bagg [2],_bagg [3]};if _dded .ImagePosition ==SignatureImageLeft {_bddd ,_egbe =_cfdc ,_acbb ;}else {_bddd ,_egbe =_acbb ,_cfdc ;};}else {_ecda :=[]float64 {_bagg [0],_bagg [1],_bagg [2],_bagg [1]+(_bagf /2)};
_egbd :=[]float64 {_bagg [0],_bagg [1]+(_bagf /2),_bagg [2],_bagg [3]};if _dded .ImagePosition ==SignatureImageTop {_bddd ,_egbe =_egbd ,_ecda ;}else {_bddd ,_egbe =_ecda ,_egbd ;};};};_ffecb =_egbe [2]-_egbe [0];_aaf =_egbe [3]-_egbe [1];var _gadfg float64 ;
if _dded .AutoSize {if _abee > _ffecb ||_gab > _aaf {_edba :=_ee .Min (_ffecb /_abee ,_aaf /_gab );_cdbd *=_edba ;};_gdd =_dded .LineHeight *_cdbd ;_gadfg +=(_aaf -float64 (len (_eceb ))*_gdd )/2;};_fbfe :=_g .NewContentCreator ();_gegb :=_eg .NewPdfPageResources ();
_gegb .SetFontByName (*_ega ,_gffb .ToPdfObject ());if _dded .BorderSize <=0{_dded .BorderSize =0;_dded .BorderColor =_eg .NewPdfColorDeviceGray (1);};_fbfe .Add_q ();if _dded .FillColor !=nil {_fbfe .SetNonStrokingColor (_dded .FillColor );};if _dded .BorderColor !=nil {_fbfe .SetStrokingColor (_dded .BorderColor );
};_fbfe .Add_w (_dded .BorderSize ).Add_re (_bagg [0],_bagg [1],_eeffb ,_bagf );if _dded .FillColor !=nil &&_dded .BorderColor !=nil {_fbfe .Add_B ();}else if _dded .FillColor !=nil {_fbfe .Add_f ();}else if _dded .BorderColor !=nil {_fbfe .Add_S ();};
_fbfe .Add_Q ();if _dded .WatermarkImage !=nil {_fabd :=[]float64 {_bagg [0],_bagg [1],_bagg [2],_bagg [3]};_ddbb ,_eda ,_bcf :=_abcf (_dded .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_dded ,_fabd ,_fbfe );
if _bcf !=nil {return nil ,_bcf ;};_gegb .SetXObjectImageByName (*_ddbb ,_eda );};_fbfe .Add_q ();_fbfe .Translate (_egbe [0],_egbe [3]-_gdd -_gadfg );_fbfe .Add_BT ();_eefc :=_gffb .Encoder ();for _ ,_dgfc :=range _eceb {var _aba []byte ;for _ ,_cbfd :=range _dgfc {if _d .IsSpace (_cbfd ){if len (_aba )> 0{_fbfe .SetNonStrokingColor (_dded .TextColor ).Add_Tf (*_ega ,_cdbd ).Add_TL (_gdd ).Add_TJ ([]_eb .PdfObject {_eb .MakeStringFromBytes (_aba )}...);
_aba =nil ;};_fbfe .Add_Tf (*_ega ,_cdbd ).Add_TL (_gdd ).Add_TJ ([]_eb .PdfObject {_eb .MakeFloat (-_cfe )}...);}else {_aba =append (_aba ,_eefc .Encode (string (_cbfd ))...);};};if len (_aba )> 0{_fbfe .SetNonStrokingColor (_dded .TextColor ).Add_Tf (*_ega ,_cdbd ).Add_TL (_gdd ).Add_TJ ([]_eb .PdfObject {_eb .MakeStringFromBytes (_aba )}...);
};_fbfe .Add_Td (0,-_gdd );};_fbfe .Add_ET ();_fbfe .Add_Q ();if _dbf {_daga ,_bbe ,_dgd :=_abcf (_dded .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_dded ,_bddd ,_fbfe );if _dgd !=nil {return nil ,_dgd ;};_gegb .SetXObjectImageByName (*_daga ,_bbe );
};_cgec :=_eg .NewXObjectForm ();_cgec .Resources =_gegb ;_cgec .BBox =_eb .MakeArrayFromFloats (_bagg );_cgec .SetContentStream (_fbfe .Bytes (),_eedc ());_eede :=_eb .MakeDict ();_eede .Set ("\u004e",_cgec .ToPdfObject ());return _eede ,nil ;};func _aacc (_dfcf RectangleAnnotationDef )(*_eb .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_abdab :=_eg .NewXObjectForm ();
_abdab .Resources =_eg .NewPdfPageResources ();_afab :="";if _dfcf .Opacity < 1.0{_bgf :=_eb .MakeDict ();_bgf .Set ("\u0063\u0061",_eb .MakeFloat (_dfcf .Opacity ));_bgf .Set ("\u0043\u0041",_eb .MakeFloat (_dfcf .Opacity ));_dgef :=_abdab .Resources .AddExtGState ("\u0067\u0073\u0031",_bgf );
if _dgef !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_dgef ;};_afab ="\u0067\u0073\u0031";};_agb ,_acae ,_fffdf ,_cddda :=_fagb (_dfcf ,_afab );
if _cddda !=nil {return nil ,nil ,_cddda ;};_cddda =_abdab .SetContentStream (_agb ,nil );if _cddda !=nil {return nil ,nil ,_cddda ;};_abdab .BBox =_acae .ToPdfObject ();_fccbc :=_eb .MakeDict ();_fccbc .Set ("\u004e",_abdab .ToPdfObject ());return _fccbc ,_fffdf ,nil ;
};type quadding int ;

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _gd .LineEndingStyle ;LineEndingStyle2 _gd .LineEndingStyle ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_eg .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_eg .PdfFieldChoice ,error ){if page ==nil {return nil ,_cf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_cf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_cf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_abda :=_eg .NewPdfField ();_bgbf :=&_eg .PdfFieldChoice {};_abda .SetContext (_bgbf );_bgbf .PdfField =_abda ;_bgbf .T =_eb .MakeString (name );_bgbf .Opt =_eb .MakeArray ();for _ ,_cbed :=range opt .Choices {_bgbf .Opt .Append (_eb .MakeString (_cbed ));
};_bgbf .SetFlag (_eg .FieldFlagCombo );_agga :=_eg .NewPdfAnnotationWidget ();_agga .Rect =_eb .MakeArrayFromFloats (rect );_agga .P =page .ToPdfObject ();_agga .F =_eb .MakeInteger (4);_agga .Parent =_bgbf .ToPdfObject ();_bgbf .Annotations =append (_bgbf .Annotations ,_agga );
return _bgbf ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func _dcbb (_fffg *_eg .PdfAcroForm ,_agd *_eg .PdfAnnotationWidget ,_aacb *_eg .PdfFieldChoice ,_ddfa AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_gbde ,_ceg :=_eb .GetArray (_agd .Rect );if !_ceg {return nil ,_cf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_fddg ,_ffc :=_eg .NewPdfRectangle (*_gbde );if _ffc !=nil {return nil ,_ffc ;};_ccgb ,_ccbb :=_fddg .Width (),_fddg .Height ();_e .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_agd .BS );
_aaed ,_ffc :=_g .NewContentStreamParser (_dbda (_aacb .PdfField )).Parse ();if _ffc !=nil {return nil ,_ffc ;};_fgd ,_ece :=_eb .GetDict (_agd .MK );if _ece {_bae ,_ :=_eb .GetDict (_agd .BS );_efg :=_ddfa .applyAppearanceCharacteristics (_fgd ,_bae ,nil );
if _efg !=nil {return nil ,_efg ;};};_gcg :=_eb .MakeDict ();for _ ,_dga :=range _aacb .Opt .Elements (){if _ebg ,_bad :=_eb .GetArray (_dga );_bad &&_ebg .Len ()==2{_dga =_ebg .Get (1);};var _edca string ;if _baea ,_gfb :=_eb .GetString (_dga );_gfb {_edca =_baea .Decoded ();
}else if _eeaa ,_ded :=_eb .GetName (_dga );_ded {_edca =_eeaa .String ();}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_dga );
return nil ,_cf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_edca )> 0{_ddd ,_cga :=_aeda (_aacb .PdfField ,_ccgb ,_ccbb ,_edca ,_ddfa ,_aaed ,_fffg .DR ,_fgd );if _cga !=nil {return nil ,_cga ;
};_gcg .Set (*_eb .MakeName (_edca ),_ddd .ToPdfObject ());};};_gcb :=_eb .MakeDict ();_gcb .Set ("\u004e",_gcg );return _gcb ,nil ;};func _ge (_eee CircleAnnotationDef )(*_eb .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_ed :=_eg .NewXObjectForm ();
_ed .Resources =_eg .NewPdfPageResources ();_cd :="";if _eee .Opacity < 1.0{_cad :=_eb .MakeDict ();_cad .Set ("\u0063\u0061",_eb .MakeFloat (_eee .Opacity ));_cad .Set ("\u0043\u0041",_eb .MakeFloat (_eee .Opacity ));_b :=_ed .Resources .AddExtGState ("\u0067\u0073\u0031",_cad );
if _b !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_b ;};_cd ="\u0067\u0073\u0031";};_dc ,_ga ,_eef ,_eea :=_ege (_eee ,_cd );
if _eea !=nil {return nil ,nil ,_eea ;};_eea =_ed .SetContentStream (_dc ,nil );if _eea !=nil {return nil ,nil ,_eea ;};_ed .BBox =_ga .ToPdfObject ();_edb :=_eb .MakeDict ();_edb .Set ("\u004e",_ed .ToPdfObject ());return _edb ,_eef ,nil ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_gac *AppearanceStyle ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_eg .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;};func (_ffcc *AppearanceStyle )applyAppearanceCharacteristics (_cadc *_eb .PdfObjectDictionary ,_egec *_eb .PdfObjectDictionary ,_edd *_eg .PdfFont )error {if !_ffcc .AllowMK {return nil ;
};if CA ,_edbf :=_eb .GetString (_cadc .Get ("\u0043\u0041"));_edbf &&_edd !=nil {_aga :=CA .Bytes ();if len (_aga )!=0{_ddge :=[]rune (_edd .Encoder ().Decode (_aga ));if len (_ddge )==1{_ffcc .CheckmarkRune =_ddge [0];};};};if BC ,_ebac :=_eb .GetArray (_cadc .Get ("\u0042\u0043"));
_ebac {_cfgf ,_ggg :=BC .ToFloat64Array ();if _ggg !=nil {return _ggg ;};switch len (_cfgf ){case 1:_ffcc .BorderColor =_eg .NewPdfColorDeviceGray (_cfgf [0]);case 3:_ffcc .BorderColor =_eg .NewPdfColorDeviceRGB (_cfgf [0],_cfgf [1],_cfgf [2]);case 4:_ffcc .BorderColor =_eg .NewPdfColorDeviceCMYK (_cfgf [0],_cfgf [1],_cfgf [2],_cfgf [3]);
default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cfgf ));
};if _egec !=nil {if _fcgb ,_cgg :=_eb .GetNumberAsFloat (_egec .Get ("\u0057"));_cgg ==nil {_ffcc .BorderSize =_fcgb ;};};};if BG ,_faef :=_eb .GetArray (_cadc .Get ("\u0042\u0047"));_faef {_feb ,_gcf :=BG .ToFloat64Array ();if _gcf !=nil {return _gcf ;
};switch len (_feb ){case 1:_ffcc .FillColor =_eg .NewPdfColorDeviceGray (_feb [0]);case 3:_ffcc .FillColor =_eg .NewPdfColorDeviceRGB (_feb [0],_feb [1],_feb [2]);case 4:_ffcc .FillColor =_eg .NewPdfColorDeviceCMYK (_feb [0],_feb [1],_feb [2],_feb [3]);
default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_feb ));
};};return nil ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_eg .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_eg .PdfFieldButton ,error ){if page ==nil {return nil ,_cf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_cf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_cf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_faeg :=_eg .NewPdfField ();_ecfg :=&_eg .PdfFieldButton {};_ecfg .PdfField =_faeg ;_faeg .SetContext (_ecfg );_ecfg .SetType (_eg .ButtonTypePush );_ecfg .T =_eb .MakeString (name );_gcd :=_eg .NewPdfAnnotationWidget ();_gcd .Rect =_eb .MakeArrayFromFloats (rect );
_gcd .P =page .ToPdfObject ();_gcd .F =_eb .MakeInteger (4);_gcd .Parent =_ecfg .ToPdfObject ();_bbc :=rect [2]-rect [0];_egc :=rect [3]-rect [1];_gggg :=opt ._ddeg ;_bbaf :=_g .NewContentCreator ();if _gggg .BorderSize > 0{_agg (_bbaf ,_gggg ,_bbc ,_egc );
};if _gggg .DrawAlignmentReticle {_gfg :=_gggg ;_gfg .BorderSize =0.2;_cab (_bbaf ,_gfg ,_bbc ,_egc );};_gbbg ,_fdge :=_dbg (_bbc ,_egc ,opt .Image ,_gggg );if _fdge !=nil {return nil ,_fdge ;};_ggef ,_efed :=_eb .GetDict (_gcd .MK );if _efed {_ggef .Set ("\u006c",_gbbg .ToPdfObject ());
};_bdddf :=_eb .MakeDict ();_bdddf .Set ("\u0046\u0052\u004d",_gbbg .ToPdfObject ());_bfa :=_eg .NewPdfPageResources ();_bfa .ProcSet =_eb .MakeArray (_eb .MakeName ("\u0050\u0044\u0046"));_bfa .XObject =_bdddf ;_bddf :=_bbc -2;_cfgd :=_egc -2;_bbaf .Add_q ();
_bbaf .Add_re (1,1,_bddf ,_cfgd );_bbaf .Add_W ();_bbaf .Add_n ();_bddf -=2;_cfgd -=2;_bbaf .Add_q ();_bbaf .Add_re (2,2,_bddf ,_cfgd );_bbaf .Add_W ();_bbaf .Add_n ();_gee :=_ee .Min (_bddf /float64 (opt .Image .Width ),_cfgd /float64 (opt .Image .Height ));
_bbaf .Add_cm (_gee ,0,0,_gee ,(_bbc /2)-(float64 (opt .Image .Width )*_gee /2)+2,2);_bbaf .Add_Do ("\u0046\u0052\u004d");_bbaf .Add_Q ();_bbaf .Add_Q ();_fea :=_eg .NewXObjectForm ();_fea .FormType =_eb .MakeInteger (1);_fea .Resources =_bfa ;_fea .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_bbc ,_egc });
_fea .Matrix =_eb .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_fea .SetContentStream (_bbaf .Bytes (),_eedc ());_dddbe :=_eb .MakeDict ();_dddbe .Set ("\u004e",_fea .ToPdfObject ());_gcd .AP =_dddbe ;_ecfg .Annotations =append (_ecfg .Annotations ,_gcd );
return _ecfg ,nil ;};func _eed (_dec *_eg .PdfAnnotationWidget ,_cbf *_eg .PdfFieldButton ,_cfga *_eg .PdfPageResources ,_fbc AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_ecce ,_ddf :=_eb .GetArray (_dec .Rect );if !_ddf {return nil ,_cf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_aeg ,_aee :=_eg .NewPdfRectangle (*_ecce );if _aee !=nil {return nil ,_aee ;};_ffea ,_bdd :=_aeg .Width (),_aeg .Height ();_eggc ,_bfd :=_ffea ,_bdd ;_e .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_dec .BS );
_bba ,_aee :=_eg .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _aee !=nil {return nil ,_aee ;};_adb ,_ede :=_eb .GetDict (_dec .MK );if _ede {_afc ,_ :=_eb .GetDict (_dec .BS );_dfea :=_fbc .applyAppearanceCharacteristics (_adb ,_afc ,_bba );
if _dfea !=nil {return nil ,_dfea ;};};_bag :=_eg .NewXObjectForm ();{_dfd :=_g .NewContentCreator ();if _fbc .BorderSize > 0{_agg (_dfd ,_fbc ,_ffea ,_bdd );};if _fbc .DrawAlignmentReticle {_ccee :=_fbc ;_ccee .BorderSize =0.2;_cab (_dfd ,_ccee ,_ffea ,_bdd );
};_ffea ,_bdd =_fbc .applyRotation (_adb ,_ffea ,_bdd ,_dfd );_cbfc :=_fbc .AutoFontSizeFraction *_bdd ;_cdff ,_bef :=_bba .GetRuneMetrics (_fbc .CheckmarkRune );if !_bef {return nil ,_cf .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_gcec :=_bba .Encoder ();_ecb :=_gcec .Encode (string (_fbc .CheckmarkRune ));_bbb :=_cdff .Wx *_cbfc /1000.0;_ffa :=705.0;_fcbc :=_ffa /1000.0*_cbfc ;_fcbg :=_ce ;if _fbc .MarginLeft !=nil {_fcbg =*_fbc .MarginLeft ;};_bgg :=1.0;if _bbb < _ffea {_fcbg =(_ffea -_bbb )/2.0;
};if _fcbc < _bdd {_bgg =(_bdd -_fcbc )/2.0;};_dfd .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_cbfc ).Add_Td (_fcbg ,_bgg ).Add_Tj (*_eb .MakeStringFromBytes (_ecb )).Add_ET ().Add_Q ();_bag .Resources =_eg .NewPdfPageResources ();
_bag .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_bba .ToPdfObject ());_bag .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_eggc ,_bfd });_bag .SetContentStream (_dfd .Bytes (),_eedc ());};_bagb :=_eg .NewXObjectForm ();{_gdgg :=_g .NewContentCreator ();
if _fbc .BorderSize > 0{_agg (_gdgg ,_fbc ,_ffea ,_bdd );};_bagb .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_eggc ,_bfd });_bagb .SetContentStream (_gdgg .Bytes (),_eedc ());};_cdd :=_eb .MakeDict ();_cdd .Set ("\u004f\u0066\u0066",_bagb .ToPdfObject ());
_cdd .Set ("\u0059\u0065\u0073",_bag .ToPdfObject ());_fbcd :=_eb .MakeDict ();_fbcd .Set ("\u004e",_cdd );return _fbcd ,nil ;};func _dbg (_geb ,_eddd float64 ,_fdc *_eg .Image ,_gedd AppearanceStyle )(*_eg .XObjectForm ,error ){_bge ,_bff :=_eg .NewXObjectImageFromImage (_fdc ,nil ,_eb .NewFlateEncoder ());
if _bff !=nil {return nil ,_bff ;};_bge .Decode =_eb .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});_babg :=_eg .NewPdfPageResources ();_babg .ProcSet =_eb .MakeArray (_eb .MakeName ("\u0050\u0044\u0046"),_eb .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));
_babg .SetXObjectImageByName (_eb .PdfObjectName ("\u0049\u006d\u0030"),_bge );_bfdb :=_g .NewContentCreator ();_bfdb .Add_q ();_bfdb .Add_cm (float64 (_fdc .Width ),0,0,float64 (_fdc .Height ),0,0);_bfdb .Add_Do ("\u0049\u006d\u0030");_bfdb .Add_Q ();
_cgde :=_eg .NewXObjectForm ();_cgde .FormType =_eb .MakeInteger (1);_cgde .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,float64 (_fdc .Width ),float64 (_fdc .Height )});_cgde .Resources =_babg ;_cgde .SetContentStream (_bfdb .Bytes (),_eedc ());return _cgde ,nil ;
};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _eg .PdfColor ;FillColor _eg .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;};func (_abfg *AppearanceStyle )applyRotation (_agc *_eb .PdfObjectDictionary ,_ebbc ,_agf float64 ,_dce *_g .ContentCreator )(float64 ,float64 ){if !_abfg .AllowMK {return _ebbc ,_agf ;};if _agc ==nil {return _ebbc ,_agf ;};_fdf ,_ :=_eb .GetNumberAsFloat (_agc .Get ("\u0052"));
if _fdf ==0{return _ebbc ,_agf ;};_caab :=-_fdf ;_afda :=_gd .Path {Points :[]_gd .Point {_gd .NewPoint (0,0).Rotate (_caab ),_gd .NewPoint (_ebbc ,0).Rotate (_caab ),_gd .NewPoint (0,_agf ).Rotate (_caab ),_gd .NewPoint (_ebbc ,_agf ).Rotate (_caab )}}.GetBoundingBox ();
_dce .RotateDeg (_fdf );_dce .Translate (_afda .X ,_afda .Y );return _afda .Width ,_afda .Height ;};func _aca (_dgfb *_eg .PdfAnnotationWidget ,_dcd *_eg .PdfFieldText ,_faa *_eg .PdfPageResources ,_db AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_ffd :=_eg .NewPdfPageResources ();
_egg ,_gc :=_eb .GetArray (_dgfb .Rect );if !_gc {return nil ,_cf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fae ,_afg :=_eg .NewPdfRectangle (*_egg );if _afg !=nil {return nil ,_afg ;};_aed ,_gfd :=_fae .Width (),_fae .Height ();
_eff ,_gb :=_aed ,_gfd ;_fe ,_ebfb :=_eb .GetDict (_dgfb .MK );if _ebfb {_ebb ,_ :=_eb .GetDict (_dgfb .BS );_afd :=_db .applyAppearanceCharacteristics (_fe ,_ebb ,nil );if _afd !=nil {return nil ,_afd ;};};_bf ,_afg :=_g .NewContentStreamParser (_dbda (_dcd .PdfField )).Parse ();
if _afg !=nil {return nil ,_afg ;};_fg :=_g .NewContentCreator ();if _db .BorderSize > 0{_agg (_fg ,_db ,_aed ,_gfd );};if _db .DrawAlignmentReticle {_fdb :=_db ;_fdb .BorderSize =0.2;_cab (_fg ,_fdb ,_aed ,_gfd );};_fg .Add_BMC ("\u0054\u0078");_fg .Add_q ();
_aed ,_gfd =_db .applyRotation (_fe ,_aed ,_gfd ,_fg );_fg .Add_BT ();_ebfe ,_gda ,_afg :=_db .processDA (_dcd .PdfField ,_bf ,_faa ,_ffd ,_fg );if _afg !=nil {return nil ,_afg ;};_caa :=_ebfe .Font ;_ged :=_ebfe .Size ;_gaf :=_eb .MakeName (_ebfe .Name );
_fdg :=_ged ==0;if _fdg &&_gda {_ged =_gfd *_db .AutoFontSizeFraction ;};_ggae :=_caa .Encoder ();if _ggae ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_ggae =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_fb ,_afg :=_caa .GetFontDescriptor ();if _afg !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _dca string ;if _faab ,_gbb :=_eb .GetString (_dcd .V );_gbb {_dca =_faab .Decoded ();};if len (_dca )==0{return nil ,nil ;};_baf :=[]string {_dca };_dd :=false ;if _dcd .Flags ().Has (_eg .FieldFlagMultiline ){_dd =true ;_dca =_fd .Replace (_dca ,"\u000d\u000a","\u000a",-1);
_dca =_fd .Replace (_dca ,"\u000d","\u000a",-1);_baf =_fd .Split (_dca ,"\u000a");};_cae :=make ([]string ,len (_baf ));copy (_cae ,_baf );_aeb :=_db .MultilineLineHeight ;_eba :=0.0;_gdf :=0;if _ggae !=nil {for _ged >=0{_dbd :=make ([]string ,len (_baf ));
copy (_dbd ,_baf );_cec :=make ([]string ,len (_cae ));copy (_cec ,_cae );_eba =0.0;_gdf =0;_abe :=len (_dbd );_eec :=0;for _eec < _abe {var _dgc float64 ;_faag :=-1;_aae :=_ce ;if _db .MarginLeft !=nil {_aae =*_db .MarginLeft ;};for _gad ,_fde :=range _dbd [_eec ]{if _fde ==' '{_faag =_gad ;
};_fdbb ,_df :=_caa .GetRuneMetrics (_fde );if !_df {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_fde );
continue ;};_dgc =_aae ;_aae +=_fdbb .Wx ;if _dd &&!_fdg &&_ged *_aae /1000.0> _aed {_fdbe :=_gad ;_abeg :=_gad ;if _faag > 0{_fdbe =_faag +1;_abeg =_faag ;};_bd :=_dbd [_eec ][_fdbe :];_afdf :=_cec [_eec ][_fdbe :];if _eec < len (_dbd )-1{_dbd =append (_dbd [:_eec +1],_dbd [_eec :]...);
_dbd [_eec +1]=_bd ;_cec =append (_cec [:_eec +1],_cec [_eec :]...);_cec [_eec +1]=_afdf ;}else {_dbd =append (_dbd ,_bd );_cec =append (_cec ,_afdf );};_dbd [_eec ]=_dbd [_eec ][0:_abeg ];_cec [_eec ]=_cec [_eec ][0:_abeg ];_abe ++;_aae =_dgc ;break ;
};};if _aae > _eba {_eba =_aae ;};_dbd [_eec ]=string (_ggae .Encode (_dbd [_eec ]));if len (_dbd [_eec ])> 0{_gdf ++;};_eec ++;};_aced :=_ged ;if _gdf > 1{_aced *=_aeb ;};_faf :=float64 (_gdf )*_aced ;if _fdg ||_faf <=_gfd {_baf =_dbd ;_cae =_cec ;break ;
};_ged --;};};_gce :=_ce ;if _db .MarginLeft !=nil {_gce =*_db .MarginLeft ;};if _ged ==0||_fdg &&_eba > 0&&_gce +_eba *_ged /1000.0> _aed {_ged =0.95*1000.0*(_aed -_gce )/_eba ;};_ea :=_eeg ;{if _gdg ,_fcf :=_eb .GetIntVal (_dcd .Q );_fcf {switch _gdg {case 0:_ea =_eeg ;
case 1:_ea =_fa ;case 2:_ea =_cc ;default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_gdg );
};};};_ecg :=_ged ;if _dd &&_gdf > 1{_ecg =_aeb *_ged ;};var _acge float64 ;if _fb !=nil {_acge ,_afg =_fb .GetCapHeight ();if _afg !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_afg );
};};if int (_acge )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_acge =1000;};_bea :=_acge /1000.0*_ged ;_ffe :=0.0;{_gbd :=float64 (_gdf )*_ecg ;if _fdg &&_ffe +_gbd > _gfd {_ged =0.95*(_gfd -_ffe )/float64 (_gdf );_ecg =_ged ;if _dd &&_gdf > 1{_ecg =_aeb *_ged ;};_bea =_acge /1000.0*_ged ;_gbd =float64 (_gdf )*_ecg ;
};if _gfd > _gbd {if _dd {if _db .MultilineVAlignMiddle {_cg :=(_gfd -(_gbd +_bea ))/2.0;_gbc :=_cg +_gbd +_bea -_ecg ;_ffe =_gbc ;if _gdf > 1{_ffe =_ffe +(_gbd /_ged *float64 (_gdf ))-_ecg -_bea ;};if _ffe < _gbd {_ffe =(_gfd -_bea )/2.0;};}else {_ffe =_gfd -_ecg ;
if _ffe > _ged {_cge :=0.0;if _dd &&_db .MultilineLineHeight > 1&&_gdf > 1{_cge =_db .MultilineLineHeight -1;};_ffe -=_ged *(0.5-_cge );};};}else {_ffe =(_gfd -_bea )/2.0;};};};_fg .Add_Tf (*_gaf ,_ged );_fg .Add_Td (_gce ,_ffe );_cbg :=_gce ;_dff :=_gce ;
for _ffg ,_cce :=range _baf {_caaf :=0.0;for _ ,_abc :=range _cae [_ffg ]{_dfe ,_ggd :=_caa .GetRuneMetrics (_abc );if !_ggd {continue ;};_caaf +=_dfe .Wx ;};_acb :=_caaf /1000.0*_ged ;_ebbe :=_aed -_acb ;var _beb float64 ;switch _ea {case _eeg :_beb =_cbg ;
case _fa :_beb =_ebbe /2;case _cc :_beb =_ebbe ;};_gce =_beb -_dff ;if _gce > 0.0{_fg .Add_Td (_gce ,0);};_dff =_beb ;_fg .Add_Tj (*_eb .MakeString (_cce ));if _ffg < len (_baf )-1{_fg .Add_Td (0,-_ged *_aeb );};};_fg .Add_ET ();_fg .Add_Q ();_fg .Add_EMC ();
_abf :=_eg .NewXObjectForm ();_abf .Resources =_ffd ;_abf .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_eff ,_gb });_abf .SetContentStream (_fg .Bytes (),_eedc ());_dcad :=_eb .MakeDict ();_dcad .Set ("\u004e",_abf .ToPdfObject ());return _dcad ,nil ;
};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};func _ege (_ec CircleAnnotationDef ,_dcf string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_edc :=_gd .Circle {X :_ec .X ,Y :_ec .Y ,Width :_ec .Width ,Height :_ec .Height ,FillEnabled :_ec .FillEnabled ,FillColor :_ec .FillColor ,BorderEnabled :_ec .BorderEnabled ,BorderWidth :_ec .BorderWidth ,BorderColor :_ec .BorderColor ,Opacity :_ec .Opacity };
_gge ,_cb ,_ag :=_edc .Draw (_dcf );if _ag !=nil {return nil ,nil ,nil ,_ag ;};_ba :=&_eg .PdfRectangle {};_ba .Llx =_ec .X +_cb .Llx ;_ba .Lly =_ec .Y +_cb .Lly ;_ba .Urx =_ec .X +_cb .Urx ;_ba .Ury =_ec .Y +_cb .Ury ;return _gge ,_cb ,_ba ,nil ;};func (_afe *AppearanceStyle )processDA (_dddb *_eg .PdfField ,_ggfg *_g .ContentStreamOperations ,_dceb ,_faabf *_eg .PdfPageResources ,_efb *_g .ContentCreator )(*AppearanceFont ,bool ,error ){var _fba *AppearanceFont ;
var _dfb bool ;if _afe .Fonts !=nil {if _afe .Fonts .Fallback !=nil {_fba =_afe .Fonts .Fallback ;};if _dedg :=_afe .Fonts .FieldFallbacks ;_dedg !=nil {if _gaa ,_dcc :=_dedg [_dddb .PartialName ()];_dcc {_fba =_gaa ;}else if _cbb ,_bfb :=_dddb .FullName ();
_bfb ==nil {if _geg ,_cdb :=_dedg [_cbb ];_cdb {_fba =_geg ;};};};_dfb =_afe .Fonts .ForceReplace ;};var _dbe string ;var _dgeb float64 ;var _bgb bool ;if _ggfg !=nil {for _ ,_cdea :=range *_ggfg {if _cdea .Operand =="\u0054\u0066"&&len (_cdea .Params )==2{if _ecdf ,_egd :=_eb .GetNameVal (_cdea .Params [0]);
_egd {_dbe =_ecdf ;};if _cbe ,_cadb :=_eb .GetNumberAsFloat (_cdea .Params [1]);_cadb ==nil {_dgeb =_cbe ;};_bgb =true ;continue ;};_efb .AddOperand (*_cdea );};};var _ccba *AppearanceFont ;var _dde _eb .PdfObject ;if _dfb &&_fba !=nil {_ccba =_fba ;}else {if _dceb !=nil &&_dbe !=""{if _abd ,_babe :=_dceb .GetFontByName (*_eb .MakeName (_dbe ));
_babe {if _fdab ,_ccgg :=_eg .NewPdfFontFromPdfObject (_abd );_ccgg ==nil {_dde =_abd ;_ccba =&AppearanceFont {Name :_dbe ,Font :_fdab ,Size :_dgeb };}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_ccgg );
};};};if _ccba ==nil &&_fba !=nil {_ccba =_fba ;};if _ccba ==nil {_gefg ,_dfa :=_eg .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _dfa !=nil {return nil ,false ,_dfa ;};_ccba =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_gefg ,Size :_dgeb };
};};if _ccba .Size <=0&&_afe .Fonts !=nil &&_afe .Fonts .FallbackSize > 0{_ccba .Size =_afe .Fonts .FallbackSize ;};_bbd :=*_eb .MakeName (_ccba .Name );if _dde ==nil {_dde =_ccba .Font .ToPdfObject ();};if _dceb !=nil &&!_dceb .HasFontByName (_bbd ){_dceb .SetFontByName (_bbd ,_dde );
};if _faabf !=nil &&!_faabf .HasFontByName (_bbd ){_faabf .SetFontByName (_bbd ,_dde );};return _ccba ,_bgb ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_eg .PdfAnnotation ,error ){_fga :=_eg .NewPdfAnnotationLine ();_fga .L =_eb .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_fccb :=_eb .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_gd .LineEndingStyleArrow {_fccb =_eb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_fgg :=_eb .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_gd .LineEndingStyleArrow {_fgg =_eb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_fga .LE =_eb .MakeArray (_fccb ,_fgg );if lineDef .Opacity < 1.0{_fga .CA =_eb .MakeFloat (lineDef .Opacity );};_ffge ,_ebcc ,_beg :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_fga .IC =_eb .MakeArrayFromFloats ([]float64 {_ffge ,_ebcc ,_beg });
_fga .C =_eb .MakeArrayFromFloats ([]float64 {_ffge ,_ebcc ,_beg });_cdeaf :=_eg .NewBorderStyle ();_cdeaf .SetBorderWidth (lineDef .LineWidth );_fga .BS =_cdeaf .ToPdfObject ();_cgee ,_bbcf ,_eece :=_caf (lineDef );if _eece !=nil {return nil ,_eece ;};
_fga .AP =_cgee ;_fga .Rect =_eb .MakeArrayFromFloats ([]float64 {_bbcf .Llx ,_bbcf .Lly ,_bbcf .Urx ,_bbcf .Ury });return _fga .PdfAnnotation ,nil ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_eg .PdfAnnotation ,error ){_da :=_eg .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_aa ,_ab ,_ebc :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_da .C =_eb .MakeArrayFromFloats ([]float64 {_aa ,_ab ,_ebc });
_cfd :=_eg .NewBorderStyle ();_cfd .SetBorderWidth (circDef .BorderWidth );_da .BS =_cfd .ToPdfObject ();};if circDef .FillEnabled {_gg ,_ac ,_af :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_da .IC =_eb .MakeArrayFromFloats ([]float64 {_gg ,_ac ,_af });
}else {_da .IC =_eb .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_da .CA =_eb .MakeFloat (circDef .Opacity );};_gf ,_gga ,_gdc :=_ge (circDef );if _gdc !=nil {return nil ,_gdc ;};_da .AP =_gf ;_da .Rect =_eb .MakeArrayFromFloats ([]float64 {_gga .Llx ,_gga .Lly ,_gga .Urx ,_gga .Ury });
return _da .PdfAnnotation ,nil ;};const (_eeg quadding =0;_fa quadding =1;_cc quadding =2;_ce float64 =2.0;);func _abcf (_gfe _ca .Image ,_fgb string ,_eecd *SignatureFieldOpts ,_cegb []float64 ,_dae *_g .ContentCreator )(*_eb .PdfObjectName ,*_eg .XObjectImage ,error ){_fdag ,_fafc :=_eg .DefaultImageHandler {}.NewImageFromGoImage (_gfe );
if _fafc !=nil {return nil ,nil ,_fafc ;};_ggec ,_fafc :=_eg .NewXObjectImageFromImage (_fdag ,nil ,_eecd .Encoder );if _fafc !=nil {return nil ,nil ,_fafc ;};_bfe ,_aef :=float64 (*_ggec .Width ),float64 (*_ggec .Height );_ggdc :=_cegb [2]-_cegb [0];_fce :=_cegb [3]-_cegb [1];
if _eecd .AutoSize {_fbae :=_ee .Min (_ggdc /_bfe ,_fce /_aef );_bfe *=_fbae ;_aef *=_fbae ;_cegb [0]=_cegb [0]+(_ggdc /2)-(_bfe /2);_cegb [1]=_cegb [1]+(_fce /2)-(_aef /2);};var _fcaa *_eb .PdfObjectName ;if _gag ,_dfde :=_eb .GetName (_ggec .Name );_dfde {_fcaa =_gag ;
}else {_fcaa =_eb .MakeName (_fgb );};if _dae !=nil {_dae .Add_q ().Translate (_cegb [0],_cegb [1]).Scale (_bfe ,_aef ).Add_Do (*_fcaa ).Add_Q ();}else {return nil ,nil ,_cf .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _fcaa ,_ggec ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};

// SetStyle applies appearance `style` to `fa`.
func (_bfba *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_bfba ._abba =&style };

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _aeda (_dfcd *_eg .PdfField ,_aec ,_fge float64 ,_cfdg string ,_bdgb AppearanceStyle ,_dadg *_g .ContentStreamOperations ,_ebgd *_eg .PdfPageResources ,_fafg *_eb .PdfObjectDictionary )(*_eg .XObjectForm ,error ){_cde :=_eg .NewPdfPageResources ();
_abb ,_fddc :=_aec ,_fge ;_ddac :=_g .NewContentCreator ();if _bdgb .BorderSize > 0{_agg (_ddac ,_bdgb ,_aec ,_fge );};if _bdgb .DrawAlignmentReticle {_fefd :=_bdgb ;_fefd .BorderSize =0.2;_cab (_ddac ,_fefd ,_aec ,_fge );};_ddac .Add_BMC ("\u0054\u0078");
_ddac .Add_q ();_ddac .Add_BT ();_aec ,_fge =_bdgb .applyRotation (_fafg ,_aec ,_fge ,_ddac );_fed ,_dacc ,_ffaf :=_bdgb .processDA (_dfcd ,_dadg ,_ebgd ,_cde ,_ddac );if _ffaf !=nil {return nil ,_ffaf ;};_bc :=_fed .Font ;_ecd :=_fed .Size ;_ffef :=_eb .MakeName (_fed .Name );
_ecbd :=_ecd ==0;if _ecbd &&_dacc {_ecd =_fge *_bdgb .AutoFontSizeFraction ;};_dag :=_bc .Encoder ();if _dag ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_dag =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_cfdg )==0{return nil ,nil ;};_dab :=_ce ;if _bdgb .MarginLeft !=nil {_dab =*_bdgb .MarginLeft ;};_acf :=0.0;if _dag !=nil {for _ ,_gadf :=range _cfdg {_bebd ,_efc :=_bc .GetRuneMetrics (_gadf );
if !_efc {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_gadf );
continue ;};_acf +=_bebd .Wx ;};_cfdg =string (_dag .Encode (_cfdg ));};if _ecd ==0||_ecbd &&_acf > 0&&_dab +_acf *_ecd /1000.0> _aec {_ecd =0.95*1000.0*(_aec -_dab )/_acf ;};_ffb :=1.0*_ecd ;_bggg :=2.0;{_dcbbf :=_ffb ;if _ecbd &&_bggg +_dcbbf > _fge {_ecd =0.95*(_fge -_bggg );
_ffb =1.0*_ecd ;_dcbbf =_ffb ;};if _fge > _dcbbf {_bggg =(_fge -_dcbbf )/2.0;_bggg +=1.50;};};_ddac .Add_Tf (*_ffef ,_ecd );_ddac .Add_Td (_dab ,_bggg );_ddac .Add_Tj (*_eb .MakeString (_cfdg ));_ddac .Add_ET ();_ddac .Add_Q ();_ddac .Add_EMC ();_cgb :=_eg .NewXObjectForm ();
_cgb .Resources =_cde ;_cgb .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_abb ,_fddc });_cgb .SetContentStream (_ddac .Bytes (),_eedc ());return _cgb ,nil ;};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_eg .Image ;_ddeg AppearanceStyle ;};func _fddd (_fgf *_eg .PdfFieldButton ,_dba *_eg .PdfAnnotationWidget ,_ceed AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_acfe ,_bca :=_eb .GetArray (_dba .Rect );if !_bca {return nil ,_cf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_bed ,_aff :=_eg .NewPdfRectangle (*_acfe );if _aff !=nil {return nil ,_aff ;};_gcc ,_cgbe :=_bed .Width (),_bed .Height ();_cfef :=_g .NewContentCreator ();if _ceed .BorderSize > 0{_agg (_cfef ,_ceed ,_gcc ,_cgbe );};if _ceed .DrawAlignmentReticle {_eedf :=_ceed ;
_eedf .BorderSize =0.2;_cab (_cfef ,_eedf ,_gcc ,_cgbe );};_bacg :=_fgf .GetFillImage ();_ggfga ,_aff :=_dbg (_gcc ,_cgbe ,_bacg ,_ceed );if _aff !=nil {return nil ,_aff ;};_eeffbc ,_gadd :=_eb .GetDict (_dba .MK );if _gadd {_eeffbc .Set ("\u006c",_ggfga .ToPdfObject ());
};_bcdb :=_eb .MakeDict ();_bcdb .Set ("\u0046\u0052\u004d",_ggfga .ToPdfObject ());_cecf :=_eg .NewPdfPageResources ();_cecf .ProcSet =_eb .MakeArray (_eb .MakeName ("\u0050\u0044\u0046"));_cecf .XObject =_bcdb ;_fefg :=_gcc -2;_gadc :=_cgbe -2;_cfef .Add_q ();
_cfef .Add_re (1,1,_fefg ,_gadc );_cfef .Add_W ();_cfef .Add_n ();_fefg -=2;_gadc -=2;_cfef .Add_q ();_cfef .Add_re (2,2,_fefg ,_gadc );_cfef .Add_W ();_cfef .Add_n ();_fabf :=_ee .Min (_fefg /float64 (_bacg .Width ),_gadc /float64 (_bacg .Height ));_cfef .Add_cm (_fabf ,0,0,_fabf ,(_gcc /2)-(float64 (_bacg .Width )*_fabf /2)+2,2);
_cfef .Add_Do ("\u0046\u0052\u004d");_cfef .Add_Q ();_cfef .Add_Q ();_dcfa :=_eg .NewXObjectForm ();_dcfa .FormType =_eb .MakeInteger (1);_dcfa .Resources =_cecf ;_dcfa .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_gcc ,_cgbe });_dcfa .Matrix =_eb .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});
_dcfa .SetContentStream (_cfef .Bytes (),_eedc ());_gede :=_eb .MakeDict ();_gede .Set ("\u004e",_dcfa .ToPdfObject ());return _gede ,nil ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_eg .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_eg .NewPdfColorDeviceGray (0),BorderColor :_eg .NewPdfColorDeviceGray (0),FillColor :_eg .NewPdfColorDeviceGray (1),Encoder :_eb .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_fc FieldAppearance )Style ()AppearanceStyle {if _fc ._gac !=nil {return *_fc ._gac ;};_ff :=_ce ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_eg .NewPdfColorDeviceGray (0),FillColor :_eg .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_ff };
};

// SetStyle applies appearance `style` to `fa`.
func (_ae *FieldAppearance )SetStyle (style AppearanceStyle ){_ae ._gac =&style };

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_ecff ImageFieldAppearance )GenerateAppearanceDict (form *_eg .PdfAcroForm ,field *_eg .PdfField ,wa *_eg .PdfAnnotationWidget )(*_eb .PdfObjectDictionary ,error ){_ ,_cceb :=field .GetContext ().(*_eg .PdfFieldButton );if !_cceb {_e .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_bbdf ,_eca :=_eb .GetDict (wa .AP );if _eca &&_ecff .OnlyIfMissing {_e .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _bbdf ,nil ;};if form .DR ==nil {form .DR =_eg .NewPdfPageResources ();};switch _fbg :=field .GetContext ().(type ){case *_eg .PdfFieldButton :if _fbg .IsPush (){_gaaa ,_dgag :=_fddd (_fbg ,wa ,_ecff .Style ());if _dgag !=nil {return nil ,_dgag ;
};return _gaaa ,nil ;};};return nil ,nil ;};func _caf (_cddd LineAnnotationDef )(*_eb .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_cebb :=_eg .NewXObjectForm ();_cebb .Resources =_eg .NewPdfPageResources ();_edf :="";if _cddd .Opacity < 1.0{_bbdfc :=_eb .MakeDict ();
_bbdfc .Set ("\u0063\u0061",_eb .MakeFloat (_cddd .Opacity ));_fffd :=_cebb .Resources .AddExtGState ("\u0067\u0073\u0031",_bbdfc );if _fffd !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_fffd ;};_edf ="\u0067\u0073\u0031";};_gbf ,_eab ,_acac ,_gbbc :=_ebff (_cddd ,_edf );if _gbbc !=nil {return nil ,nil ,_gbbc ;};_gbbc =_cebb .SetContentStream (_gbf ,nil );if _gbbc !=nil {return nil ,nil ,_gbbc ;};_cebb .BBox =_eab .ToPdfObject ();
_fee :=_eb .MakeDict ();_fee .Set ("\u004e",_cebb .ToPdfObject ());return _fee ,_acac ,nil ;};