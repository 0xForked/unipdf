//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_g "bytes";_bg "errors";_e "github.com/unidoc/unipdf/v3/common";_ga "github.com/unidoc/unipdf/v3/contentstream";_age "github.com/unidoc/unipdf/v3/contentstream/draw";_ag "github.com/unidoc/unipdf/v3/core";_c "github.com/unidoc/unipdf/v3/internal/textencoding";
_d "github.com/unidoc/unipdf/v3/model";_fc "image";_f "math";_b "strings";_ae "unicode";);

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_d .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_d .PdfFieldButton ,error ){if page ==nil {return nil ,_bg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dfe ,_bff :=_d .NewStandard14Font (_d .ZapfDingbatsName );if _bff !=nil {return nil ,_bff ;};_gbaec :=_d .NewPdfField ();_fagc :=&_d .PdfFieldButton {};_gbaec .SetContext (_fagc );_fagc .PdfField =_gbaec ;_fagc .T =_ag .MakeString (name );_fagc .SetType (_d .ButtonTypeCheckbox );
_bce :="\u004f\u0066\u0066";if opt .Checked {_bce ="\u0059\u0065\u0073";};_fagc .V =_ag .MakeName (_bce );_acgc :=_d .NewPdfAnnotationWidget ();_acgc .Rect =_ag .MakeArrayFromFloats (rect );_acgc .P =page .ToPdfObject ();_acgc .F =_ag .MakeInteger (4);
_acgc .Parent =_fagc .ToPdfObject ();_aedb :=rect [2]-rect [0];_ggcf :=rect [3]-rect [1];var _fbb _g .Buffer ;_fbb .WriteString ("\u0071\u000a");_fbb .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_fbb .WriteString ("\u0042\u0054\u000a");
_fbb .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_fbb .WriteString ("\u0045\u0054\u000a");_fbb .WriteString ("\u0051\u000a");_bdd :=_ga .NewContentCreator ();_bdd .Add_q ();_bdd .Add_rg (0,0,1);_bdd .Add_BT ();_bdd .Add_Tf (*_ag .MakeName ("\u005a\u0061\u0044\u0062"),12);
_bdd .Add_Td (0,0);_bdd .Add_ET ();_bdd .Add_Q ();_bac :=_d .NewXObjectForm ();_bac .SetContentStream (_bdd .Bytes (),_ag .NewRawEncoder ());_bac .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_aedb ,_ggcf });_bac .Resources =_d .NewPdfPageResources ();
_bac .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_dfe .ToPdfObject ());_bdd =_ga .NewContentCreator ();_bdd .Add_q ();_bdd .Add_re (0,0,_aedb ,_ggcf );_bdd .Add_W ().Add_n ();_bdd .Add_rg (0,0,1);_bdd .Translate (0,3.0);_bdd .Add_BT ();_bdd .Add_Tf (*_ag .MakeName ("\u005a\u0061\u0044\u0062"),12);
_bdd .Add_Td (0,0);_bdd .Add_Tj (*_ag .MakeString ("\u0034"));_bdd .Add_ET ();_bdd .Add_Q ();_aae :=_d .NewXObjectForm ();_aae .SetContentStream (_bdd .Bytes (),_ag .NewRawEncoder ());_aae .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_aedb ,_ggcf });
_aae .Resources =_d .NewPdfPageResources ();_aae .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_dfe .ToPdfObject ());_fabb :=_ag .MakeDict ();_fabb .Set ("\u004f\u0066\u0066",_bac .ToPdfObject ());_fabb .Set ("\u0059\u0065\u0073",_aae .ToPdfObject ());
_gada :=_ag .MakeDict ();_gada .Set ("\u004e",_fabb );_acgc .AP =_gada ;_acgc .AS =_ag .MakeName (_bce );_fagc .Annotations =append (_fagc .Annotations ,_acgc );return _fagc ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_fcec FieldAppearance )WrapContentStream (page *_d .PdfPage )error {_gfe ,_dbfb :=page .GetAllContentStreams ();if _dbfb !=nil {return _dbfb ;};_ebfg :=_ga .NewContentStreamParser (_gfe );_bgb ,_dbfb :=_ebfg .Parse ();if _dbfb !=nil {return _dbfb ;
};_bgb .WrapIfNeeded ();_cbfa :=[]string {_bgb .String ()};return page .SetContentStreams (_cbfa ,_ffaf ());};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _d .PdfColor ;FillColor _d .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;};const (_abc quadding =0;_df quadding =1;_db quadding =2;_ffg float64 =2.0;);

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_ggdf *AppearanceStyle ;};func _ebac (_fgg *_d .PdfAnnotationWidget ,_gbf *_d .PdfFieldText ,_fccf *_d .PdfPageResources ,_bbf AppearanceStyle )(*_ag .PdfObjectDictionary ,error ){_agc :=_d .NewPdfPageResources ();
_bda ,_cfd :=_ag .GetArray (_fgg .Rect );if !_cfd {return nil ,_bg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fag ,_eae :=_d .NewPdfRectangle (*_bda );if _eae !=nil {return nil ,_eae ;};_agd ,_add :=_fag .Width (),_fag .Height ();
_gcd ,_feg :=_agd ,_add ;_cag ,_ggg :=_ag .GetDict (_fgg .MK );if _ggg {_bbc ,_ :=_ag .GetDict (_fgg .BS );_ce :=_bbf .applyAppearanceCharacteristics (_cag ,_bbc ,nil );if _ce !=nil {return nil ,_ce ;};};_ggcc ,_ggg :=_ag .GetIntVal (_gbf .MaxLen );if !_ggg {return nil ,_bg .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if _ggcc <=0{return nil ,_bg .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aebd :=_agd /float64 (_ggcc );_gba ,_eae :=_ga .NewContentStreamParser (_baad (_gbf .PdfField )).Parse ();if _eae !=nil {return nil ,_eae ;
};_ebdg :=_ga .NewContentCreator ();if _bbf .BorderSize > 0{_dfd (_ebdg ,_bbf ,_agd ,_add );};if _bbf .DrawAlignmentReticle {_cbbf :=_bbf ;_cbbf .BorderSize =0.2;_afg (_ebdg ,_cbbf ,_agd ,_add );};_ebdg .Add_BMC ("\u0054\u0078");_ebdg .Add_q ();_ ,_add =_bbf .applyRotation (_cag ,_agd ,_add ,_ebdg );
_ebdg .Add_BT ();_dfa ,_bfbf ,_eae :=_bbf .processDA (_gbf .PdfField ,_gba ,_fccf ,_agc ,_ebdg );if _eae !=nil {return nil ,_eae ;};_gace :=_dfa .Font ;_bgdf :=_ag .MakeName (_dfa .Name );_efdd :=_dfa .Size ;_bbcf :=_efdd ==0;if _bbcf &&_bfbf {_efdd =_add *_bbf .AutoFontSizeFraction ;
};_ede :=_gace .Encoder ();if _ede ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_ede =_c .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _bfa string ;if _gcge ,_bgg :=_ag .GetString (_gbf .V );_bgg {_bfa =_gcge .Decoded ();};_ebdg .Add_Tf (*_bgdf ,_efdd );var _dbf float64 ;for _ ,_fccd :=range _bfa {_edg ,_bcf :=_gace .GetRuneMetrics (_fccd );
if !_bcf {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_fccd );
continue ;};_agb :=_edg .Wy ;if int (_agb )<=0{_agb =_edg .Wx ;};if _agb > _dbf {_dbf =_agb ;};};if int (_dbf )==0{_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_dbf =1000;};_cfc ,_eae :=_gace .GetFontDescriptor ();if _eae !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _baa float64 ;if _cfc !=nil {_baa ,_eae =_cfc .GetCapHeight ();if _eae !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_eae );
};};if int (_baa )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_baa =1000.0;};_bbfe :=_baa /1000.0*_efdd ;_gcf :=0.0;_eaeg :=1.0*_efdd *(_dbf /1000.0);{_ecb :=_eaeg ;if _bbcf &&_gcf +_ecb > _add {_efdd =0.95*(_add -_gcf );_bbfe =_baa /1000.0*_efdd ;};if _add > _bbfe {_gcf =(_add -_bbfe )/2.0;};};_ebdg .Add_Td (0,_gcf );
if _bdg ,_ddc :=_ag .GetIntVal (_gbf .Q );_ddc {switch _bdg {case 2:if len (_bfa )< _ggcc {_afe :=float64 (_ggcc -len (_bfa ))*_aebd ;_ebdg .Add_Td (_afe ,0);};};};for _geae ,_eea :=range _bfa {_gde :=_ffg ;if _bbf .MarginLeft !=nil {_gde =*_bbf .MarginLeft ;
};_ccb :=string (_eea );if _ede !=nil {_cdb ,_adc :=_gace .GetRuneMetrics (_eea );if !_adc {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_eea );
continue ;};_ccb =string (_ede .Encode (_ccb ));_cee :=_efdd *_cdb .Wx /1000.0;_gbg :=(_aebd -_cee )/2;_gde =_gbg ;};_ebdg .Add_Td (_gde ,0);_ebdg .Add_Tj (*_ag .MakeString (_ccb ));if _geae !=len (_bfa )-1{_ebdg .Add_Td (_aebd -_gde ,0);};};_ebdg .Add_ET ();
_ebdg .Add_Q ();_ebdg .Add_EMC ();_efbe :=_d .NewXObjectForm ();_efbe .Resources =_agc ;_efbe .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_gcd ,_feg });_efbe .SetContentStream (_ebdg .Bytes (),_ffaf ());_efa :=_ag .MakeDict ();_efa .Set ("\u004e",_efbe .ToPdfObject ());
return _efa ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_bd *AppearanceStyle ;};func _edeca (_geb *_d .PdfFieldButton ,_ccgd *_d .PdfAnnotationWidget ,_egc AppearanceStyle )(*_ag .PdfObjectDictionary ,error ){_acf ,_egeb :=_ag .GetArray (_ccgd .Rect );
if !_egeb {return nil ,_bg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ggf ,_bdge :=_d .NewPdfRectangle (*_acf );if _bdge !=nil {return nil ,_bdge ;};_edde ,_afge :=_ggf .Width (),_ggf .Height ();_dgfe :=_ga .NewContentCreator ();
if _egc .BorderSize > 0{_dfd (_dgfe ,_egc ,_edde ,_afge );};if _egc .DrawAlignmentReticle {_eed :=_egc ;_eed .BorderSize =0.2;_afg (_dgfe ,_eed ,_edde ,_afge );};_acec :=_geb .GetFillImage ();_gag ,_bdge :=_gabc (_edde ,_afge ,_acec ,_egc );if _bdge !=nil {return nil ,_bdge ;
};_abbg ,_ffda :=_ag .GetDict (_ccgd .MK );if _ffda {_abbg .Set ("\u006c",_gag .ToPdfObject ());};_bgad :=_ag .MakeDict ();_bgad .Set ("\u0046\u0052\u004d",_gag .ToPdfObject ());_adab :=_d .NewPdfPageResources ();_adab .ProcSet =_ag .MakeArray (_ag .MakeName ("\u0050\u0044\u0046"));
_adab .XObject =_bgad ;_dbed :=_edde -2;_ebag :=_afge -2;_dgfe .Add_q ();_dgfe .Add_re (1,1,_dbed ,_ebag );_dgfe .Add_W ();_dgfe .Add_n ();_dbed -=2;_ebag -=2;_dgfe .Add_q ();_dgfe .Add_re (2,2,_dbed ,_ebag );_dgfe .Add_W ();_dgfe .Add_n ();_ebc :=_f .Min (_dbed /float64 (_acec .Width ),_ebag /float64 (_acec .Height ));
_dgfe .Add_cm (_ebc ,0,0,_ebc ,(_edde /2)-(float64 (_acec .Width )*_ebc /2)+2,2);_dgfe .Add_Do ("\u0046\u0052\u004d");_dgfe .Add_Q ();_dgfe .Add_Q ();_egcg :=_d .NewXObjectForm ();_egcg .FormType =_ag .MakeInteger (1);_egcg .Resources =_adab ;_egcg .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_edde ,_afge });
_egcg .Matrix =_ag .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_egcg .SetContentStream (_dgfe .Bytes (),_ffaf ());_fffc :=_ag .MakeDict ();_fffc .Set ("\u004e",_egcg .ToPdfObject ());return _fffc ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_agfd *FieldAppearance )SetStyle (style AppearanceStyle ){_agfd ._bd =&style };

// SetStyle applies appearance `style` to `fa`.
func (_dabg *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_dabg ._ggdf =&style };func _fgcb (_bded RectangleAnnotationDef ,_fefg string )([]byte ,*_d .PdfRectangle ,*_d .PdfRectangle ,error ){_acd :=_age .Rectangle {X :0,Y :0,Width :_bded .Width ,Height :_bded .Height ,FillEnabled :_bded .FillEnabled ,FillColor :_bded .FillColor ,BorderEnabled :_bded .BorderEnabled ,BorderWidth :2*_bded .BorderWidth ,BorderColor :_bded .BorderColor ,Opacity :_bded .Opacity };
_aaga ,_cffg ,_bggg :=_acd .Draw (_fefg );if _bggg !=nil {return nil ,nil ,nil ,_bggg ;};_eagc :=&_d .PdfRectangle {};_eagc .Llx =_bded .X +_cffg .Llx ;_eagc .Lly =_bded .Y +_cffg .Lly ;_eagc .Urx =_bded .X +_cffg .Urx ;_eagc .Ury =_bded .Y +_cffg .Ury ;
return _aaga ,_cffg ,_eagc ,nil ;};func _afg (_eaag *_ga .ContentCreator ,_fga AppearanceStyle ,_gce ,_fbc float64 ){_eaag .Add_q ().Add_re (0,0,_gce ,_fbc ).Add_re (0,_fbc /2,_gce ,_fbc /2).Add_re (0,0,_gce ,_fbc ).Add_re (_gce /2,0,_gce /2,_fbc ).Add_w (_fga .BorderSize ).SetStrokingColor (_fga .BorderColor ).SetNonStrokingColor (_fga .FillColor ).Add_B ().Add_Q ();
};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_d .PdfAnnotation ,error ){_ab :=_d .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_ea ,_gd ,_bgd :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_ab .C =_ag .MakeArrayFromFloats ([]float64 {_ea ,_gd ,_bgd });
_fb :=_d .NewBorderStyle ();_fb .SetBorderWidth (circDef .BorderWidth );_ab .BS =_fb .ToPdfObject ();};if circDef .FillEnabled {_ec ,_ef ,_bb :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_ab .IC =_ag .MakeArrayFromFloats ([]float64 {_ec ,_ef ,_bb });
}else {_ab .IC =_ag .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_ab .CA =_ag .MakeFloat (circDef .Opacity );};_cd ,_bf ,_agf :=_aea (circDef );if _agf !=nil {return nil ,_agf ;};_ab .AP =_cd ;_ab .Rect =_ag .MakeArrayFromFloats ([]float64 {_bf .Llx ,_bf .Lly ,_bf .Urx ,_bf .Ury });
return _ab .PdfAnnotation ,nil ;};func _aea (_ge CircleAnnotationDef )(*_ag .PdfObjectDictionary ,*_d .PdfRectangle ,error ){_fcb :=_d .NewXObjectForm ();_fcb .Resources =_d .NewPdfPageResources ();_cf :="";if _ge .Opacity < 1.0{_eac :=_ag .MakeDict ();
_eac .Set ("\u0063\u0061",_ag .MakeFloat (_ge .Opacity ));_eac .Set ("\u0043\u0041",_ag .MakeFloat (_ge .Opacity ));_fa :=_fcb .Resources .AddExtGState ("\u0067\u0073\u0031",_eac );if _fa !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_fa ;};_cf ="\u0067\u0073\u0031";};_af ,_cc ,_gee ,_bgf :=_faa (_ge ,_cf );if _bgf !=nil {return nil ,nil ,_bgf ;};_bgf =_fcb .SetContentStream (_af ,nil );if _bgf !=nil {return nil ,nil ,_bgf ;};_fcb .BBox =_cc .ToPdfObject ();_ff :=_ag .MakeDict ();
_ff .Set ("\u004e",_fcb .ToPdfObject ());return _ff ,_gee ,nil ;};func _faa (_gf CircleAnnotationDef ,_ac string )([]byte ,*_d .PdfRectangle ,*_d .PdfRectangle ,error ){_fe :=_age .Circle {X :_gf .X ,Y :_gf .Y ,Width :_gf .Width ,Height :_gf .Height ,FillEnabled :_gf .FillEnabled ,FillColor :_gf .FillColor ,BorderEnabled :_gf .BorderEnabled ,BorderWidth :_gf .BorderWidth ,BorderColor :_gf .BorderColor ,Opacity :_gf .Opacity };
_efb ,_ged ,_gc :=_fe .Draw (_ac );if _gc !=nil {return nil ,nil ,nil ,_gc ;};_aba :=&_d .PdfRectangle {};_aba .Llx =_gf .X +_ged .Llx ;_aba .Lly =_gf .Y +_ged .Lly ;_aba .Urx =_gf .X +_ged .Urx ;_aba .Ury =_gf .Y +_ged .Ury ;return _efb ,_ged ,_aba ,nil ;
};func _cce (_ggaa *_d .PdfField ,_ecbd ,_ffga float64 ,_fdgf string ,_gbdc AppearanceStyle ,_abbfg *_ga .ContentStreamOperations ,_cfe *_d .PdfPageResources ,_fce *_ag .PdfObjectDictionary )(*_d .XObjectForm ,error ){_bab :=_d .NewPdfPageResources ();
_ggb ,_egbd :=_ecbd ,_ffga ;_ggbg :=_ga .NewContentCreator ();if _gbdc .BorderSize > 0{_dfd (_ggbg ,_gbdc ,_ecbd ,_ffga );};if _gbdc .DrawAlignmentReticle {_fba :=_gbdc ;_fba .BorderSize =0.2;_afg (_ggbg ,_fba ,_ecbd ,_ffga );};_ggbg .Add_BMC ("\u0054\u0078");
_ggbg .Add_q ();_ggbg .Add_BT ();_ecbd ,_ffga =_gbdc .applyRotation (_fce ,_ecbd ,_ffga ,_ggbg );_egbg ,_fedag ,_abg :=_gbdc .processDA (_ggaa ,_abbfg ,_cfe ,_bab ,_ggbg );if _abg !=nil {return nil ,_abg ;};_gef :=_egbg .Font ;_ded :=_egbg .Size ;_egf :=_ag .MakeName (_egbg .Name );
_ada :=_ded ==0;if _ada &&_fedag {_ded =_ffga *_gbdc .AutoFontSizeFraction ;};_dea :=_gef .Encoder ();if _dea ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_dea =_c .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_fdgf )==0{return nil ,nil ;};_gfd :=_ffg ;if _gbdc .MarginLeft !=nil {_gfd =*_gbdc .MarginLeft ;};_cdg :=0.0;if _dea !=nil {for _ ,_bgc :=range _fdgf {_ccd ,_eec :=_gef .GetRuneMetrics (_bgc );
if !_eec {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_bgc );
continue ;};_cdg +=_ccd .Wx ;};_fdgf =string (_dea .Encode (_fdgf ));};if _ded ==0||_ada &&_cdg > 0&&_gfd +_cdg *_ded /1000.0> _ecbd {_ded =0.95*1000.0*(_ecbd -_gfd )/_cdg ;};_daeb :=1.0*_ded ;_eaaa :=2.0;{_cac :=_daeb ;if _ada &&_eaaa +_cac > _ffga {_ded =0.95*(_ffga -_eaaa );
_daeb =1.0*_ded ;_cac =_daeb ;};if _ffga > _cac {_eaaa =(_ffga -_cac )/2.0;_eaaa +=1.50;};};_ggbg .Add_Tf (*_egf ,_ded );_ggbg .Add_Td (_gfd ,_eaaa );_ggbg .Add_Tj (*_ag .MakeString (_fdgf ));_ggbg .Add_ET ();_ggbg .Add_Q ();_ggbg .Add_EMC ();_faad :=_d .NewXObjectForm ();
_faad .Resources =_bab ;_faad .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_ggb ,_egbd });_faad .SetContentStream (_ggbg .Bytes (),_ffaf ());return _faad ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_d .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_eaf FieldAppearance )Style ()AppearanceStyle {if _eaf ._bd !=nil {return *_eaf ._bd ;};_gb :=_ffg ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_d .NewPdfColorDeviceGray (0),FillColor :_d .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_gb };
};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_efdf ImageFieldAppearance )Style ()AppearanceStyle {if _efdf ._ggdf !=nil {return *_efdf ._ggdf ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_d .NewPdfColorDeviceGray (0),FillColor :_d .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_d .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_d .PdfFieldSignature ,error ){if signature ==nil {return nil ,_bg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_afca ,_dafb :=_gfg (lines ,opts );if _dafb !=nil {return nil ,_dafb ;};_edcf :=_d .NewPdfFieldSignature (signature );_edcf .Rect =_ag .MakeArrayFromFloats (opts .Rect );_edcf .AP =_afca ;return _edcf ,nil ;};func (_efad *AppearanceStyle )applyAppearanceCharacteristics (_badb *_ag .PdfObjectDictionary ,_aeeb *_ag .PdfObjectDictionary ,_agda *_d .PdfFont )error {if !_efad .AllowMK {return nil ;
};if CA ,_daa :=_ag .GetString (_badb .Get ("\u0043\u0041"));_daa &&_agda !=nil {_gedd :=CA .Bytes ();if len (_gedd )!=0{_cff :=[]rune (_agda .Encoder ().Decode (_gedd ));if len (_cff )==1{_efad .CheckmarkRune =_cff [0];};};};if BC ,_fbg :=_ag .GetArray (_badb .Get ("\u0042\u0043"));
_fbg {_cfga ,_aeg :=BC .ToFloat64Array ();if _aeg !=nil {return _aeg ;};switch len (_cfga ){case 1:_efad .BorderColor =_d .NewPdfColorDeviceGray (_cfga [0]);case 3:_efad .BorderColor =_d .NewPdfColorDeviceRGB (_cfga [0],_cfga [1],_cfga [2]);case 4:_efad .BorderColor =_d .NewPdfColorDeviceCMYK (_cfga [0],_cfga [1],_cfga [2],_cfga [3]);
default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cfga ));
};if _aeeb !=nil {if _eecf ,_cfa :=_ag .GetNumberAsFloat (_aeeb .Get ("\u0057"));_cfa ==nil {_efad .BorderSize =_eecf ;};};};if BG ,_dgb :=_ag .GetArray (_badb .Get ("\u0042\u0047"));_dgb {_cbef ,_edb :=BG .ToFloat64Array ();if _edb !=nil {return _edb ;
};switch len (_cbef ){case 1:_efad .FillColor =_d .NewPdfColorDeviceGray (_cbef [0]);case 3:_efad .FillColor =_d .NewPdfColorDeviceRGB (_cbef [0],_cbef [1],_cbef [2]);case 4:_efad .FillColor =_d .NewPdfColorDeviceCMYK (_cbef [0],_cbef [1],_cbef [2],_cbef [3]);
default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cbef ));
};};return nil ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_d .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_d .NewPdfColorDeviceGray (0),BorderColor :_d .NewPdfColorDeviceGray (0),FillColor :_d .NewPdfColorDeviceGray (1),Encoder :_ag .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_d .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_d .PdfColorDeviceRGB ;Opacity float64 ;};const (SignatureImageLeft SignatureImagePosition =iota ;
SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_eb FieldAppearance )GenerateAppearanceDict (form *_d .PdfAcroForm ,field *_d .PdfField ,wa *_d .PdfAnnotationWidget )(*_ag .PdfObjectDictionary ,error ){_e .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_eg :=field .GetContext ().(*_d .PdfFieldText );_bc ,_be :=_ag .GetDict (wa .AP );if _be &&_eb .OnlyIfMissing &&(!_eg ||!_eb .RegenerateTextFields ){_e .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _bc ,nil ;};if form .DR ==nil {form .DR =_d .NewPdfPageResources ();};switch _gea :=field .GetContext ().(type ){case *_d .PdfFieldText :_aa :=_gea ;if _ccg :=_baad (_aa .PdfField );_ccg ==""{_aa .DA =form .DA ;};switch {case _aa .Flags ().Has (_d .FieldFlagPassword ):return nil ,nil ;
case _aa .Flags ().Has (_d .FieldFlagFileSelect ):return nil ,nil ;case _aa .Flags ().Has (_d .FieldFlagComb ):if _aa .MaxLen !=nil {_de ,_ba :=_ebac (wa ,_aa ,form .DR ,_eb .Style ());if _ba !=nil {return nil ,_ba ;};return _de ,nil ;};};_fg ,_aaf :=_bae (wa ,_aa ,form .DR ,_eb .Style ());
if _aaf !=nil {return nil ,_aaf ;};return _fg ,nil ;case *_d .PdfFieldButton :_fgf :=_gea ;if _fgf .IsCheckbox (){_aab ,_fca :=_eaaf (wa ,_fgf ,form .DR ,_eb .Style ());if _fca !=nil {return nil ,_fca ;};return _aab ,nil ;};_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_fgf .GetType ());
case *_d .PdfFieldChoice :_fgd :=_gea ;switch {case _fgd .Flags ().Has (_d .FieldFlagCombo ):_ecc ,_efd :=_aed (form ,wa ,_fgd ,_eb .Style ());if _efd !=nil {return nil ,_efd ;};return _ecc ,nil ;default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_fgd .Flags ().String ());
};default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gea );};return nil ,nil ;};func _gded (_adae LineAnnotationDef )(*_ag .PdfObjectDictionary ,*_d .PdfRectangle ,error ){_afcf :=_d .NewXObjectForm ();
_afcf .Resources =_d .NewPdfPageResources ();_acc :="";if _adae .Opacity < 1.0{_cgfb :=_ag .MakeDict ();_cgfb .Set ("\u0063\u0061",_ag .MakeFloat (_adae .Opacity ));_cgc :=_afcf .Resources .AddExtGState ("\u0067\u0073\u0031",_cgfb );if _cgc !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_cgc ;};_acc ="\u0067\u0073\u0031";};_fagb ,_dba ,_cca ,_aadg :=_cea (_adae ,_acc );if _aadg !=nil {return nil ,nil ,_aadg ;};_aadg =_afcf .SetContentStream (_fagb ,nil );if _aadg !=nil {return nil ,nil ,_aadg ;};_afcf .BBox =_dba .ToPdfObject ();
_fgc :=_ag .MakeDict ();_fgc .Set ("\u004e",_afcf .ToPdfObject ());return _fgc ,_cca ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_d .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_d .PdfColorDeviceRGB ;Opacity float64 ;};func _cea (_ggfa LineAnnotationDef ,_ffbc string )([]byte ,*_d .PdfRectangle ,*_d .PdfRectangle ,error ){_cacc :=_age .Line {X1 :0,Y1 :0,X2 :_ggfa .X2 -_ggfa .X1 ,Y2 :_ggfa .Y2 -_ggfa .Y1 ,LineColor :_ggfa .LineColor ,Opacity :_ggfa .Opacity ,LineWidth :_ggfa .LineWidth ,LineEndingStyle1 :_ggfa .LineEndingStyle1 ,LineEndingStyle2 :_ggfa .LineEndingStyle2 };
_bdaa ,_eda ,_beb :=_cacc .Draw (_ffbc );if _beb !=nil {return nil ,nil ,nil ,_beb ;};_gbga :=&_d .PdfRectangle {};_gbga .Llx =_ggfa .X1 +_eda .Llx ;_gbga .Lly =_ggfa .Y1 +_eda .Lly ;_gbga .Urx =_ggfa .X1 +_eda .Urx ;_gbga .Ury =_ggfa .Y1 +_eda .Ury ;return _bdaa ,_eda ,_gbga ,nil ;
};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_ccga ImageFieldAppearance )GenerateAppearanceDict (form *_d .PdfAcroForm ,field *_d .PdfField ,wa *_d .PdfAnnotationWidget )(*_ag .PdfObjectDictionary ,error ){_ ,_abe :=field .GetContext ().(*_d .PdfFieldButton );if !_abe {_e .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_bgeb ,_cab :=_ag .GetDict (wa .AP );if _cab &&_ccga .OnlyIfMissing {_e .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _bgeb ,nil ;};if form .DR ==nil {form .DR =_d .NewPdfPageResources ();};switch _bgdb :=field .GetContext ().(type ){case *_d .PdfFieldButton :if _bgdb .IsPush (){_gfgc ,_dge :=_edeca (_bgdb ,wa ,_ccga .Style ());if _dge !=nil {return nil ,_dge ;
};return _gfgc ,nil ;};};return nil ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_d .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _d .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _d .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _d .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _fc .Image ;

// Image represents the image used for the signature appearance.
Image _fc .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _ag .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _dcba (_geee _fc .Image ,_ceb string ,_cfeg *SignatureFieldOpts ,_dggb []float64 ,_aeeg *_ga .ContentCreator )(*_ag .PdfObjectName ,*_d .XObjectImage ,error ){_cdef ,_ffb :=_d .DefaultImageHandler {}.NewImageFromGoImage (_geee );
if _ffb !=nil {return nil ,nil ,_ffb ;};_bga ,_ffb :=_d .NewXObjectImageFromImage (_cdef ,nil ,_cfeg .Encoder );if _ffb !=nil {return nil ,nil ,_ffb ;};_ddff ,_dcc :=float64 (*_bga .Width ),float64 (*_bga .Height );_gdge :=_dggb [2]-_dggb [0];_bdb :=_dggb [3]-_dggb [1];
if _cfeg .AutoSize {_bgdff :=_f .Min (_gdge /_ddff ,_bdb /_dcc );_ddff *=_bgdff ;_dcc *=_bgdff ;_dggb [0]=_dggb [0]+(_gdge /2)-(_ddff /2);_dggb [1]=_dggb [1]+(_bdb /2)-(_dcc /2);};var _ddg *_ag .PdfObjectName ;if _edca ,_aafd :=_ag .GetName (_bga .Name );
_aafd {_ddg =_edca ;}else {_ddg =_ag .MakeName (_ceb );};if _aeeg !=nil {_aeeg .Add_q ().Translate (_dggb [0],_dggb [1]).Scale (_ddff ,_dcc ).Add_Do (*_ddg ).Add_Q ();}else {return nil ,nil ,_bg .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _ddg ,_bga ,nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _eaaf (_ebab *_d .PdfAnnotationWidget ,_bfc *_d .PdfFieldButton ,_ebde *_d .PdfPageResources ,_fcbb AppearanceStyle )(*_ag .PdfObjectDictionary ,error ){_bfd ,_gffe :=_ag .GetArray (_ebab .Rect );if !_gffe {return nil ,_bg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_cagf ,_aafb :=_d .NewPdfRectangle (*_bfd );if _aafb !=nil {return nil ,_aafb ;};_cfg ,_fcbe :=_cagf .Width (),_cagf .Height ();_eeb ,_adcd :=_cfg ,_fcbe ;_e .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_ebab .BS );
_cae ,_aafb :=_d .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _aafb !=nil {return nil ,_aafb ;};_def ,_fcd :=_ag .GetDict (_ebab .MK );if _fcd {_geg ,_ :=_ag .GetDict (_ebab .BS );_fgee :=_fcbb .applyAppearanceCharacteristics (_def ,_geg ,_cae );
if _fgee !=nil {return nil ,_fgee ;};};_dab :=_d .NewXObjectForm ();{_fbdc :=_ga .NewContentCreator ();if _fcbb .BorderSize > 0{_dfd (_fbdc ,_fcbb ,_cfg ,_fcbe );};if _fcbb .DrawAlignmentReticle {_dgd :=_fcbb ;_dgd .BorderSize =0.2;_afg (_fbdc ,_dgd ,_cfg ,_fcbe );
};_cfg ,_fcbe =_fcbb .applyRotation (_def ,_cfg ,_fcbe ,_fbdc );_begf :=_fcbb .AutoFontSizeFraction *_fcbe ;_daf ,_bfe :=_cae .GetRuneMetrics (_fcbb .CheckmarkRune );if !_bfe {return nil ,_bg .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_afc :=_cae .Encoder ();_feda :=_afc .Encode (string (_fcbb .CheckmarkRune ));_dcg :=_daf .Wx *_begf /1000.0;_dae :=705.0;_fcbbd :=_dae /1000.0*_begf ;_baeb :=_ffg ;if _fcbb .MarginLeft !=nil {_baeb =*_fcbb .MarginLeft ;};_geaf :=1.0;if _dcg < _cfg {_baeb =(_cfg -_dcg )/2.0;
};if _fcbbd < _fcbe {_geaf =(_fcbe -_fcbbd )/2.0;};_fbdc .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_begf ).Add_Td (_baeb ,_geaf ).Add_Tj (*_ag .MakeStringFromBytes (_feda )).Add_ET ().Add_Q ();_dab .Resources =_d .NewPdfPageResources ();
_dab .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cae .ToPdfObject ());_dab .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_eeb ,_adcd });_dab .SetContentStream (_fbdc .Bytes (),_ffaf ());};_dad :=_d .NewXObjectForm ();{_ddd :=_ga .NewContentCreator ();
if _fcbb .BorderSize > 0{_dfd (_ddd ,_fcbb ,_cfg ,_fcbe );};_dad .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_eeb ,_adcd });_dad .SetContentStream (_ddd .Bytes (),_ffaf ());};_cfgc :=_ag .MakeDict ();_cfgc .Set ("\u004f\u0066\u0066",_dad .ToPdfObject ());
_cfgc .Set ("\u0059\u0065\u0073",_dab .ToPdfObject ());_ffgb :=_ag .MakeDict ();_ffgb .Set ("\u004e",_cfgc );return _ffgb ,nil ;};func _ffaf ()_ag .StreamEncoder {return _ag .NewFlateEncoder ()};func (_dbfg *AppearanceStyle )applyRotation (_edec *_ag .PdfObjectDictionary ,_cffb ,_eddf float64 ,_fbee *_ga .ContentCreator )(float64 ,float64 ){if !_dbfg .AllowMK {return _cffb ,_eddf ;
};if _edec ==nil {return _cffb ,_eddf ;};_bcbc ,_ :=_ag .GetNumberAsFloat (_edec .Get ("\u0052"));if _bcbc ==0{return _cffb ,_eddf ;};_cbg :=-_bcbc ;_deg :=_age .Path {Points :[]_age .Point {_age .NewPoint (0,0).Rotate (_cbg ),_age .NewPoint (_cffb ,0).Rotate (_cbg ),_age .NewPoint (0,_eddf ).Rotate (_cbg ),_age .NewPoint (_cffb ,_eddf ).Rotate (_cbg )}}.GetBoundingBox ();
_fbee .RotateDeg (_bcbc );_fbee .Translate (_deg .X ,_deg .Y );return _deg .Width ,_deg .Height ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_d .PdfAnnotation ,error ){_eddce :=_d .NewPdfAnnotationLine ();_eddce .L =_ag .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_gcgec :=_ag .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_age .LineEndingStyleArrow {_gcgec =_ag .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_afb :=_ag .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_age .LineEndingStyleArrow {_afb =_ag .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_eddce .LE =_ag .MakeArray (_gcgec ,_afb );if lineDef .Opacity < 1.0{_eddce .CA =_ag .MakeFloat (lineDef .Opacity );};_edf ,_ebca ,_fcff :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_eddce .IC =_ag .MakeArrayFromFloats ([]float64 {_edf ,_ebca ,_fcff });
_eddce .C =_ag .MakeArrayFromFloats ([]float64 {_edf ,_ebca ,_fcff });_fbge :=_d .NewBorderStyle ();_fbge .SetBorderWidth (lineDef .LineWidth );_eddce .BS =_fbge .ToPdfObject ();_aad ,_fccc ,_bdeb :=_gded (lineDef );if _bdeb !=nil {return nil ,_bdeb ;};
_eddce .AP =_aad ;_eddce .Rect =_ag .MakeArrayFromFloats ([]float64 {_fccc .Llx ,_fccc .Lly ,_fccc .Urx ,_fccc .Ury });return _eddce .PdfAnnotation ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_d .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_d .PdfFieldText ,error ){if page ==nil {return nil ,_bg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_bg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_baee :=_d .NewPdfField ();_fbf :=&_d .PdfFieldText {};_baee .SetContext (_fbf );_fbf .PdfField =_baee ;_fbf .T =_ag .MakeString (name );
if opt .MaxLen > 0{_fbf .MaxLen =_ag .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_fbf .V =_ag .MakeString (opt .Value );};_bea :=_d .NewPdfAnnotationWidget ();_bea .Rect =_ag .MakeArrayFromFloats (rect );_bea .P =page .ToPdfObject ();
_bea .F =_ag .MakeInteger (4);_bea .Parent =_fbf .ToPdfObject ();_fbf .Annotations =append (_fbf .Annotations ,_bea );return _fbf ,nil ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_d .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_d .PdfFieldButton ,error ){if page ==nil {return nil ,_bg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};
if len (name )<=0{return nil ,_bg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bdee :=_d .NewPdfField ();_cecg :=&_d .PdfFieldButton {};_cecg .PdfField =_bdee ;_bdee .SetContext (_cecg );_cecg .SetType (_d .ButtonTypePush );_cecg .T =_ag .MakeString (name );_cdd :=_d .NewPdfAnnotationWidget ();_cdd .Rect =_ag .MakeArrayFromFloats (rect );
_cdd .P =page .ToPdfObject ();_cdd .F =_ag .MakeInteger (4);_cdd .Parent =_cecg .ToPdfObject ();_ega :=rect [2]-rect [0];_fef :=rect [3]-rect [1];_ffab :=opt ._cbeb ;_fgeg :=_ga .NewContentCreator ();if _ffab .BorderSize > 0{_dfd (_fgeg ,_ffab ,_ega ,_fef );
};if _ffab .DrawAlignmentReticle {_adeb :=_ffab ;_adeb .BorderSize =0.2;_afg (_fgeg ,_adeb ,_ega ,_fef );};_dcd ,_agbb :=_gabc (_ega ,_fef ,opt .Image ,_ffab );if _agbb !=nil {return nil ,_agbb ;};_cfega ,_face :=_ag .GetDict (_cdd .MK );if _face {_cfega .Set ("\u006c",_dcd .ToPdfObject ());
};_bgbd :=_ag .MakeDict ();_bgbd .Set ("\u0046\u0052\u004d",_dcd .ToPdfObject ());_cbcc :=_d .NewPdfPageResources ();_cbcc .ProcSet =_ag .MakeArray (_ag .MakeName ("\u0050\u0044\u0046"));_cbcc .XObject =_bgbd ;_ebace :=_ega -2;_gcfg :=_fef -2;_fgeg .Add_q ();
_fgeg .Add_re (1,1,_ebace ,_gcfg );_fgeg .Add_W ();_fgeg .Add_n ();_ebace -=2;_gcfg -=2;_fgeg .Add_q ();_fgeg .Add_re (2,2,_ebace ,_gcfg );_fgeg .Add_W ();_fgeg .Add_n ();_gdda :=_f .Min (_ebace /float64 (opt .Image .Width ),_gcfg /float64 (opt .Image .Height ));
_fgeg .Add_cm (_gdda ,0,0,_gdda ,(_ega /2)-(float64 (opt .Image .Width )*_gdda /2)+2,2);_fgeg .Add_Do ("\u0046\u0052\u004d");_fgeg .Add_Q ();_fgeg .Add_Q ();_bfgf :=_d .NewXObjectForm ();_bfgf .FormType =_ag .MakeInteger (1);_bfgf .Resources =_cbcc ;_bfgf .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_ega ,_fef });
_bfgf .Matrix =_ag .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_bfgf .SetContentStream (_fgeg .Bytes (),_ffaf ());_efc :=_ag .MakeDict ();_efc .Set ("\u004e",_bfgf .ToPdfObject ());_cdd .AP =_efc ;_cecg .Annotations =append (_cecg .Annotations ,_cdd );
return _cecg ,nil ;};func _gfg (_fcf []*SignatureLine ,_eab *SignatureFieldOpts )(*_ag .PdfObjectDictionary ,error ){if _eab ==nil {_eab =NewSignatureFieldOpts ();};var _cadd error ;var _faba *_ag .PdfObjectName ;_gcgf :=_eab .Font ;if _gcgf !=nil {_babb ,_ :=_gcgf .GetFontDescriptor ();
if _babb !=nil {if _gcc ,_adb :=_babb .FontName .(*_ag .PdfObjectName );_adb {_faba =_gcc ;};};if _faba ==nil {_faba =_ag .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _gcgf ,_cadd =_d .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
_cadd !=nil {return nil ,_cadd ;};_faba =_ag .MakeName ("\u0048\u0065\u006c\u0076");};_ffd :=_eab .FontSize ;if _ffd <=0{_ffd =10;};if _eab .LineHeight <=0{_eab .LineHeight =1;};_fceb :=_eab .LineHeight *_ffd ;_dbb ,_fac :=_gcgf .GetRuneMetrics (' ');if !_fac {return nil ,_bg .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_bcg :=_dbb .Wx ;var _fage float64 ;var _gggc []string ;for _ ,_bcfc :=range _fcf {if _bcfc .Text ==""{continue ;};_baea :=_bcfc .Text ;if _bcfc .Desc !=""{_baea =_bcfc .Desc +"\u003a\u0020"+_baea ;};_gggc =append (_gggc ,_baea );var _fadg float64 ;for _ ,_aegg :=range _baea {_bcgb ,_dbcd :=_gcgf .GetRuneMetrics (_aegg );
if !_dbcd {continue ;};_fadg +=_bcgb .Wx ;};if _fadg > _fage {_fage =_fadg ;};};_fage =_fage *_ffd /1000.0;_bef :=float64 (len (_gggc ))*_fceb ;_gbae :=_eab .Image !=nil ;_gcae :=_eab .Rect ;if _gcae ==nil {_gcae =[]float64 {0,0,_fage ,_bef };if _gbae {_gcae [2]=_fage *2;
_gcae [3]=_bef *2;};_eab .Rect =_gcae ;};_bde :=_gcae [2]-_gcae [0];_aag :=_gcae [3]-_gcae [1];_ddae ,_dafa :=_gcae ,_gcae ;var _cbgf ,_bfab float64 ;if _gbae &&len (_gggc )> 0{if _eab .ImagePosition <=SignatureImageRight {_cbd :=[]float64 {_gcae [0],_gcae [1],_gcae [0]+(_bde /2),_gcae [3]};
_gbfg :=[]float64 {_gcae [0]+(_bde /2),_gcae [1],_gcae [2],_gcae [3]};if _eab .ImagePosition ==SignatureImageLeft {_ddae ,_dafa =_cbd ,_gbfg ;}else {_ddae ,_dafa =_gbfg ,_cbd ;};}else {_abad :=[]float64 {_gcae [0],_gcae [1],_gcae [2],_gcae [1]+(_aag /2)};
_fdb :=[]float64 {_gcae [0],_gcae [1]+(_aag /2),_gcae [2],_gcae [3]};if _eab .ImagePosition ==SignatureImageTop {_ddae ,_dafa =_fdb ,_abad ;}else {_ddae ,_dafa =_abad ,_fdb ;};};};_cbgf =_dafa [2]-_dafa [0];_bfab =_dafa [3]-_dafa [1];var _aac float64 ;
if _eab .AutoSize {if _fage > _cbgf ||_bef > _bfab {_fcad :=_f .Min (_cbgf /_fage ,_bfab /_bef );_ffd *=_fcad ;};_fceb =_eab .LineHeight *_ffd ;_aac +=(_bfab -float64 (len (_gggc ))*_fceb )/2;};_fee :=_ga .NewContentCreator ();_dffd :=_d .NewPdfPageResources ();
_dffd .SetFontByName (*_faba ,_gcgf .ToPdfObject ());if _eab .BorderSize <=0{_eab .BorderSize =0;_eab .BorderColor =_d .NewPdfColorDeviceGray (1);};if _eab .BorderColor ==nil {_eab .BorderColor =_d .NewPdfColorDeviceGray (1);};if _eab .FillColor ==nil {_eab .FillColor =_d .NewPdfColorDeviceGray (1);
};_fee .Add_q ().SetNonStrokingColor (_eab .FillColor ).SetStrokingColor (_eab .BorderColor ).Add_w (_eab .BorderSize ).Add_re (_gcae [0],_gcae [1],_bde ,_aag ).Add_B ().Add_Q ();if _eab .WatermarkImage !=nil {_bbg :=[]float64 {_gcae [0],_gcae [1],_gcae [2],_gcae [3]};
_daaf ,_eaec ,_gfcb :=_dcba (_eab .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_eab ,_bbg ,_fee );if _gfcb !=nil {return nil ,_gfcb ;};_dffd .SetXObjectImageByName (*_daaf ,_eaec );};_fee .Add_q ();
_fee .Translate (_dafa [0],_dafa [3]-_fceb -_aac );_fee .Add_BT ();_gbc :=_gcgf .Encoder ();for _ ,_aagb :=range _gggc {var _agcf []byte ;for _ ,_ddce :=range _aagb {if _ae .IsSpace (_ddce ){if len (_agcf )> 0{_fee .SetNonStrokingColor (_eab .TextColor ).Add_Tf (*_faba ,_ffd ).Add_TL (_fceb ).Add_TJ ([]_ag .PdfObject {_ag .MakeStringFromBytes (_agcf )}...);
_agcf =nil ;};_fee .Add_Tf (*_faba ,_ffd ).Add_TL (_fceb ).Add_TJ ([]_ag .PdfObject {_ag .MakeFloat (-_bcg )}...);}else {_agcf =append (_agcf ,_gbc .Encode (string (_ddce ))...);};};if len (_agcf )> 0{_fee .SetNonStrokingColor (_eab .TextColor ).Add_Tf (*_faba ,_ffd ).Add_TL (_fceb ).Add_TJ ([]_ag .PdfObject {_ag .MakeStringFromBytes (_agcf )}...);
};_fee .Add_Td (0,-_fceb );};_fee .Add_ET ();_fee .Add_Q ();if _gbae {_ccc ,_bfdf ,_fccfc :=_dcba (_eab .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_eab ,_ddae ,_fee );if _fccfc !=nil {return nil ,_fccfc ;};
_dffd .SetXObjectImageByName (*_ccc ,_bfdf );};_gdbf :=_d .NewXObjectForm ();_gdbf .Resources =_dffd ;_gdbf .BBox =_ag .MakeArrayFromFloats (_gcae );_gdbf .SetContentStream (_fee .Bytes (),_ffaf ());_ebdgb :=_ag .MakeDict ();_ebdgb .Set ("\u004e",_gdbf .ToPdfObject ());
return _ebdgb ,nil ;};type quadding int ;func _bae (_cb *_d .PdfAnnotationWidget ,_abae *_d .PdfFieldText ,_ebg *_d .PdfPageResources ,_gaa AppearanceStyle )(*_ag .PdfObjectDictionary ,error ){_cbb :=_d .NewPdfPageResources ();_ee ,_dbg :=_ag .GetArray (_cb .Rect );
if !_dbg {return nil ,_bg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ffc ,_egd :=_d .NewPdfRectangle (*_ee );if _egd !=nil {return nil ,_egd ;};_ebgg ,_fbd :=_ffc .Width (),_ffc .Height ();_fbdg ,_gab :=_ebgg ,_fbd ;
_gg ,_beg :=_ag .GetDict (_cb .MK );if _beg {_da ,_ :=_ag .GetDict (_cb .BS );_ed :=_gaa .applyAppearanceCharacteristics (_gg ,_da ,nil );if _ed !=nil {return nil ,_ed ;};};_abb ,_egd :=_ga .NewContentStreamParser (_baad (_abae .PdfField )).Parse ();if _egd !=nil {return nil ,_egd ;
};_dg :=_ga .NewContentCreator ();if _gaa .BorderSize > 0{_dfd (_dg ,_gaa ,_ebgg ,_fbd );};if _gaa .DrawAlignmentReticle {_edc :=_gaa ;_edc .BorderSize =0.2;_afg (_dg ,_edc ,_ebgg ,_fbd );};_dg .Add_BMC ("\u0054\u0078");_dg .Add_q ();_ebgg ,_fbd =_gaa .applyRotation (_gg ,_ebgg ,_fbd ,_dg );
_dg .Add_BT ();_gbd ,_ca ,_egd :=_gaa .processDA (_abae .PdfField ,_abb ,_ebg ,_cbb ,_dg );if _egd !=nil {return nil ,_egd ;};_bfg :=_gbd .Font ;_agg :=_gbd .Size ;_fed :=_ag .MakeName (_gbd .Name );_fd :=_agg ==0;if _fd &&_ca {_agg =_fbd *_gaa .AutoFontSizeFraction ;
};_dac :=_bfg .Encoder ();if _dac ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_dac =_c .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_gdb ,_egd :=_bfg .GetFontDescriptor ();if _egd !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _fcc string ;if _ffa ,_fcac :=_ag .GetString (_abae .V );_fcac {_fcc =_ffa .Decoded ();};if len (_fcc )==0{return nil ,nil ;};_cde :=[]string {_fcc };_ebd :=false ;if _abae .Flags ().Has (_d .FieldFlagMultiline ){_ebd =true ;_fcc =_b .Replace (_fcc ,"\u000d\u000a","\u000a",-1);
_fcc =_b .Replace (_fcc ,"\u000d","\u000a",-1);_cde =_b .Split (_fcc ,"\u000a");};_fge :=make ([]string ,len (_cde ));copy (_fge ,_cde );_dgg :=_gaa .MultilineLineHeight ;_dfb :=0.0;_ad :=0;if _dac !=nil {for _agg >=0{_fab :=make ([]string ,len (_cde ));
copy (_fab ,_cde );_bag :=make ([]string ,len (_fge ));copy (_bag ,_fge );_dfb =0.0;_ad =0;_gac :=len (_fab );_aee :=0;for _aee < _gac {var _eaa float64 ;_dc :=-1;_gcg :=_ffg ;if _gaa .MarginLeft !=nil {_gcg =*_gaa .MarginLeft ;};for _gdd ,_acgf :=range _fab [_aee ]{if _acgf ==' '{_dc =_gdd ;
};_dbc ,_eba :=_bfg .GetRuneMetrics (_acgf );if !_eba {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_acgf );
continue ;};_eaa =_gcg ;_gcg +=_dbc .Wx ;if _ebd &&!_fd &&_agg *_gcg /1000.0> _ebgg {_bdf :=_gdd ;_edd :=_gdd ;if _dc > 0{_bdf =_dc +1;_edd =_dc ;};_ffgf :=_fab [_aee ][_bdf :];_cba :=_bag [_aee ][_bdf :];if _aee < len (_fab )-1{_fab =append (_fab [:_aee +1],_fab [_aee :]...);
_fab [_aee +1]=_ffgf ;_bag =append (_bag [:_aee +1],_bag [_aee :]...);_bag [_aee +1]=_cba ;}else {_fab =append (_fab ,_ffgf );_bag =append (_bag ,_cba );};_fab [_aee ]=_fab [_aee ][0:_edd ];_bag [_aee ]=_bag [_aee ][0:_edd ];_gac ++;_gcg =_eaa ;break ;
};};if _gcg > _dfb {_dfb =_gcg ;};_fab [_aee ]=string (_dac .Encode (_fab [_aee ]));if len (_fab [_aee ])> 0{_ad ++;};_aee ++;};_aaff :=_agg ;if _ad > 1{_aaff *=_dgg ;};_fdc :=float64 (_ad )*_aaff ;if _fd ||_fdc <=_fbd {_cde =_fab ;_fge =_bag ;break ;};
_agg --;};};_gad :=_ffg ;if _gaa .MarginLeft !=nil {_gad =*_gaa .MarginLeft ;};if _agg ==0||_fd &&_dfb > 0&&_gad +_dfb *_agg /1000.0> _ebgg {_agg =0.95*1000.0*(_ebgg -_gad )/_dfb ;};_bcb :=_abc ;{if _fgdf ,_gca :=_ag .GetIntVal (_abae .Q );_gca {switch _fgdf {case 0:_bcb =_abc ;
case 1:_bcb =_df ;case 2:_bcb =_db ;default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_fgdf );
};};};_cbc :=_agg ;if _ebd &&_ad > 1{_cbc =_dgg *_agg ;};var _cg float64 ;if _gdb !=nil {_cg ,_egd =_gdb .GetCapHeight ();if _egd !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_egd );
};};if int (_cg )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cg =1000;};_cbf :=_cg /1000.0*_agg ;_dag :=0.0;{_fdg :=float64 (_ad )*_cbc ;if _fd &&_dag +_fdg > _fbd {_agg =0.95*(_fbd -_dag )/float64 (_ad );_cbc =_agg ;if _ebd &&_ad > 1{_cbc =_dgg *_agg ;};_cbf =_cg /1000.0*_agg ;_fdg =float64 (_ad )*_cbc ;};if _fbd > _fdg {if _ebd {if _gaa .MultilineVAlignMiddle {_ggc :=(_fbd -(_fdg +_cbf ))/2.0;
_ebdc :=_ggc +_fdg +_cbf -_cbc ;_dag =_ebdc ;if _ad > 1{_dag =_dag +(_fdg /_agg *float64 (_ad ))-_cbc -_cbf ;};if _dag < _fdg {_dag =(_fbd -_cbf )/2.0;};}else {_dag =_fbd -_cbc ;if _dag > _agg {_dag -=_agg *0.5;};};}else {_dag =(_fbd -_cbf )/2.0;};};};
_dg .Add_Tf (*_fed ,_agg );_dg .Add_Td (_gad ,_dag );_gga :=_gad ;_cbe :=_gad ;for _bad ,_eag :=range _cde {_aaba :=0.0;for _ ,_efg :=range _fge [_bad ]{_cge ,_abbf :=_bfg .GetRuneMetrics (_efg );if !_abbf {continue ;};_aaba +=_cge .Wx ;};_eef :=_aaba /1000.0*_agg ;
_aeb :=_ebgg -_eef ;var _dd float64 ;switch _bcb {case _abc :_dd =_gga ;case _df :_dd =_aeb /2;case _db :_dd =_aeb ;};_gad =_dd -_cbe ;if _gad > 0.0{_dg .Add_Td (_gad ,0);};_cbe =_dd ;_dg .Add_Tj (*_ag .MakeString (_eag ));if _bad < len (_cde )-1{_dg .Add_Td (0,-_agg *_dgg );
};};_dg .Add_ET ();_dg .Add_Q ();_dg .Add_EMC ();_gff :=_d .NewXObjectForm ();_gff .Resources =_cbb ;_gff .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,_fbdg ,_gab });_gff .SetContentStream (_dg .Bytes (),_ffaf ());_fgfc :=_ag .MakeDict ();_fgfc .Set ("\u004e",_gff .ToPdfObject ());
return _fgfc ,nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _dfd (_aff *_ga .ContentCreator ,_eacc AppearanceStyle ,_aebc ,_efba float64 ){_aff .Add_q ().Add_re (0,0,_aebc ,_efba ).Add_w (_eacc .BorderSize ).SetStrokingColor (_eacc .BorderColor ).SetNonStrokingColor (_eacc .FillColor ).Add_B ().Add_Q ();
};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_d .PdfAnnotation ,error ){_ecbde :=_d .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_dgc ,_dgec ,_dacc :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_ecbde .C =_ag .MakeArrayFromFloats ([]float64 {_dgc ,_dgec ,_dacc });_ebcg :=_d .NewBorderStyle ();_ebcg .SetBorderWidth (rectDef .BorderWidth );_ecbde .BS =_ebcg .ToPdfObject ();};if rectDef .FillEnabled {_bfba ,_faf ,_ebcb :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_ecbde .IC =_ag .MakeArrayFromFloats ([]float64 {_bfba ,_faf ,_ebcb });}else {_ecbde .IC =_ag .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_ecbde .CA =_ag .MakeFloat (rectDef .Opacity );};_cbde ,_fbea ,_ceea :=_dged (rectDef );if _ceea !=nil {return nil ,_ceea ;
};_ecbde .AP =_cbde ;_ecbde .Rect =_ag .MakeArrayFromFloats ([]float64 {_fbea .Llx ,_fbea .Lly ,_fbea .Urx ,_fbea .Ury });return _ecbde .PdfAnnotation ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_d .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_d .PdfFieldChoice ,error ){if page ==nil {return nil ,_bg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ace :=_d .NewPdfField ();_ecca :=&_d .PdfFieldChoice {};_ace .SetContext (_ecca );_ecca .PdfField =_ace ;_ecca .T =_ag .MakeString (name );_ecca .Opt =_ag .MakeArray ();for _ ,_dbdc :=range opt .Choices {_ecca .Opt .Append (_ag .MakeString (_dbdc ));
};_ecca .SetFlag (_d .FieldFlagCombo );_eff :=_d .NewPdfAnnotationWidget ();_eff .Rect =_ag .MakeArrayFromFloats (rect );_eff .P =page .ToPdfObject ();_eff .F =_ag .MakeInteger (4);_eff .Parent =_ecca .ToPdfObject ();_ecca .Annotations =append (_ecca .Annotations ,_eff );
return _ecca ,nil ;};func _aed (_bec *_d .PdfAcroForm ,_gaceg *_d .PdfAnnotationWidget ,_bge *_d .PdfFieldChoice ,_fae AppearanceStyle )(*_ag .PdfObjectDictionary ,error ){_dcb ,_faab :=_ag .GetArray (_gaceg .Rect );if !_faab {return nil ,_bg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_fbe ,_dbe :=_d .NewPdfRectangle (*_dcb );if _dbe !=nil {return nil ,_dbe ;};_eddc ,_abf :=_fbe .Width (),_fbe .Height ();_e .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_gaceg .BS );
_eeae ,_dbe :=_ga .NewContentStreamParser (_baad (_bge .PdfField )).Parse ();if _dbe !=nil {return nil ,_dbe ;};_gfc ,_eeg :=_ag .GetDict (_gaceg .MK );if _eeg {_ecbf ,_ :=_ag .GetDict (_gaceg .BS );_dgf :=_fae .applyAppearanceCharacteristics (_gfc ,_ecbf ,nil );
if _dgf !=nil {return nil ,_dgf ;};};_eefb :=_ag .MakeDict ();for _ ,_abaea :=range _bge .Opt .Elements (){if _eebd ,_eaee :=_ag .GetArray (_abaea );_eaee &&_eebd .Len ()==2{_abaea =_eebd .Get (1);};var _egb string ;if _ggd ,_caf :=_ag .GetString (_abaea );
_caf {_egb =_ggd .Decoded ();}else if _gaf ,_dadc :=_ag .GetName (_abaea );_dadc {_egb =_gaf .String ();}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_abaea );
return nil ,_bg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_egb )> 0{_ege ,_gbfb :=_cce (_bge .PdfField ,_eddc ,_abf ,_egb ,_fae ,_eeae ,_bec .DR ,_gfc );if _gbfb !=nil {return nil ,_gbfb ;
};_eefb .Set (*_ag .MakeName (_egb ),_ege .ToPdfObject ());};};_bcc :=_ag .MakeDict ();_bcc .Set ("\u004e",_eefb );return _bcc ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _baad (_deaa *_d .PdfField )string {if _deaa ==nil {return "";};_fgfa ,_cad :=_deaa .GetContext ().(*_d .PdfFieldText );if !_cad {return _baad (_deaa .Parent );};if _fgfa .DA !=nil {return _fgfa .DA .Str ();
};return _baad (_fgfa .Parent );};func _dged (_fdgfe RectangleAnnotationDef )(*_ag .PdfObjectDictionary ,*_d .PdfRectangle ,error ){_ggcce :=_d .NewXObjectForm ();_ggcce .Resources =_d .NewPdfPageResources ();_fdd :="";if _fdgfe .Opacity < 1.0{_bdeg :=_ag .MakeDict ();
_bdeg .Set ("\u0063\u0061",_ag .MakeFloat (_fdgfe .Opacity ));_bdeg .Set ("\u0043\u0041",_ag .MakeFloat (_fdgfe .Opacity ));_edag :=_ggcce .Resources .AddExtGState ("\u0067\u0073\u0031",_bdeg );if _edag !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_edag ;};_fdd ="\u0067\u0073\u0031";};_cbee ,_ebgb ,_faec ,_eca :=_fgcb (_fdgfe ,_fdd );if _eca !=nil {return nil ,nil ,_eca ;};_eca =_ggcce .SetContentStream (_cbee ,nil );if _eca !=nil {return nil ,nil ,_eca ;};_ggcce .BBox =_ebgb .ToPdfObject ();
_gebc :=_ag .MakeDict ();_gebc .Set ("\u004e",_ggcce .ToPdfObject ());return _gebc ,_faec ,nil ;};func (_cdba *AppearanceStyle )processDA (_fec *_d .PdfField ,_gdg *_ga .ContentStreamOperations ,_fea ,_dbd *_d .PdfPageResources ,_dbce *_ga .ContentCreator )(*AppearanceFont ,bool ,error ){var _bfeb *AppearanceFont ;
var _cgb bool ;if _cdba .Fonts !=nil {if _cdba .Fonts .Fallback !=nil {_bfeb =_cdba .Fonts .Fallback ;};if _gacd :=_cdba .Fonts .FieldFallbacks ;_gacd !=nil {if _cbgb ,_gaba :=_gacd [_fec .PartialName ()];_gaba {_bfeb =_cbgb ;}else if _ebf ,_dda :=_fec .FullName ();
_dda ==nil {if _gfa ,_fcab :=_gacd [_ebf ];_fcab {_bfeb =_gfa ;};};};_cgb =_cdba .Fonts .ForceReplace ;};var _cga string ;var _bggd float64 ;var _gefc bool ;if _gdg !=nil {for _ ,_cbbc :=range *_gdg {if _cbbc .Operand =="\u0054\u0066"&&len (_cbbc .Params )==2{if _cgaf ,_acgb :=_ag .GetNameVal (_cbbc .Params [0]);
_acgb {_cga =_cgaf ;};if _gefa ,_dff :=_ag .GetNumberAsFloat (_cbbc .Params [1]);_dff ==nil {_bggd =_gefa ;};_gefc =true ;continue ;};_dbce .AddOperand (*_cbbc );};};var _ccdg *AppearanceFont ;var _cec _ag .PdfObject ;if _cgb &&_bfeb !=nil {_ccdg =_bfeb ;
}else {if _fea !=nil &&_cga !=""{if _fedae ,_ecd :=_fea .GetFontByName (*_ag .MakeName (_cga ));_ecd {if _ffcb ,_fabf :=_d .NewPdfFontFromPdfObject (_fedae );_fabf ==nil {_cec =_fedae ;_ccdg =&AppearanceFont {Name :_cga ,Font :_ffcb ,Size :_bggd };}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_fabf );
};};};if _ccdg ==nil &&_bfeb !=nil {_ccdg =_bfeb ;};if _ccdg ==nil {_dgbe ,_fad :=_d .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _fad !=nil {return nil ,false ,_fad ;};_ccdg =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_dgbe ,Size :_bggd };
};};if _ccdg .Size <=0&&_cdba .Fonts !=nil &&_cdba .Fonts .FallbackSize > 0{_ccdg .Size =_cdba .Fonts .FallbackSize ;};_ecg :=*_ag .MakeName (_ccdg .Name );if _cec ==nil {_cec =_ccdg .Font .ToPdfObject ();};if _fea !=nil &&!_fea .HasFontByName (_ecg ){_fea .SetFontByName (_ecg ,_cec );
};if _dbd !=nil &&!_dbd .HasFontByName (_ecg ){_dbd .SetFontByName (_ecg ,_cec );};return _ccdg ,_gefc ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_d .Image ;_cbeb AppearanceStyle ;};func _gabc (_ggab ,_adf float64 ,_bdae *_d .Image ,_fbad AppearanceStyle )(*_d .XObjectForm ,error ){_dbfe ,_aeggf :=_d .NewXObjectImageFromImage (_bdae ,nil ,_ag .NewFlateEncoder ());
if _aeggf !=nil {return nil ,_aeggf ;};_dbfe .Decode =_ag .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});_egea :=_d .NewPdfPageResources ();_egea .ProcSet =_ag .MakeArray (_ag .MakeName ("\u0050\u0044\u0046"),_ag .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));
_egea .SetXObjectImageByName (_ag .PdfObjectName ("\u0049\u006d\u0030"),_dbfe );_efff :=_ga .NewContentCreator ();_efff .Add_q ();_efff .Add_cm (float64 (_bdae .Width ),0,0,float64 (_bdae .Height ),0,0);_efff .Add_Do ("\u0049\u006d\u0030");_efff .Add_Q ();
_caa :=_d .NewXObjectForm ();_caa .FormType =_ag .MakeInteger (1);_caa .BBox =_ag .MakeArrayFromFloats ([]float64 {0,0,float64 (_bdae .Width ),float64 (_bdae .Height )});_caa .Resources =_egea ;_caa .SetContentStream (_efff .Bytes (),_ffaf ());return _caa ,nil ;
};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_ddgg ImageFieldAppearance )WrapContentStream (page *_d .PdfPage )error {_gfgb ,_aca :=page .GetAllContentStreams ();if _aca !=nil {return _aca ;};_cgf :=_ga .NewContentStreamParser (_gfgb );_adba ,_aca :=_cgf .Parse ();if _aca !=nil {return _aca ;
};_adba .WrapIfNeeded ();_aacd :=[]string {_adba .String ()};return page .SetContentStreams (_aacd ,_ffaf ());};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_d .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _age .LineEndingStyle ;LineEndingStyle2 _age .LineEndingStyle ;};