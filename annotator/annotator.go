//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_a "bytes";_b "errors";_g "github.com/unidoc/unipdf/v3/common";_ac "github.com/unidoc/unipdf/v3/contentstream";_fe "github.com/unidoc/unipdf/v3/contentstream/draw";_fg "github.com/unidoc/unipdf/v3/core";_f "github.com/unidoc/unipdf/v3/internal/textencoding";
_fa "github.com/unidoc/unipdf/v3/model";_d "image";_eg "math";_ff "strings";_e "unicode";);func _ceed (_ddd *_fa .PdfAnnotationWidget ,_acd *_fa .PdfFieldText ,_gfgg *_fa .PdfPageResources ,_fab AppearanceStyle )(*_fg .PdfObjectDictionary ,error ){_bge :=_fa .NewPdfPageResources ();
_bbcf ,_bdd :=_fg .GetArray (_ddd .Rect );if !_bdd {return nil ,_b .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_gfd ,_dga :=_fa .NewPdfRectangle (*_bbcf );if _dga !=nil {return nil ,_dga ;};_gbg ,_edg :=_gfd .Width (),_gfd .Height ();
_bgc ,_ge :=_gbg ,_edg ;_fgab ,_ee :=_fg .GetDict (_ddd .MK );if _ee {_fc ,_ :=_fg .GetDict (_ddd .BS );_acbb :=_fab .applyAppearanceCharacteristics (_fgab ,_fc ,nil );if _acbb !=nil {return nil ,_acbb ;};};_cab ,_ee :=_fg .GetIntVal (_acd .MaxLen );if !_ee {return nil ,_b .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if _cab <=0{return nil ,_b .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eggb :=_gbg /float64 (_cab );_gba ,_dga :=_ac .NewContentStreamParser (_eef (_acd .PdfField )).Parse ();if _dga !=nil {return nil ,_dga ;
};_bgea :=_ac .NewContentCreator ();if _fab .BorderSize > 0{_daae (_bgea ,_fab ,_gbg ,_edg );};if _fab .DrawAlignmentReticle {_bea :=_fab ;_bea .BorderSize =0.2;_acbe (_bgea ,_bea ,_gbg ,_edg );};_bgea .Add_BMC ("\u0054\u0078");_bgea .Add_q ();_ ,_edg =_fab .applyRotation (_fgab ,_gbg ,_edg ,_bgea );
_bgea .Add_BT ();_ada ,_cga ,_dga :=_fab .processDA (_acd .PdfField ,_gba ,_gfgg ,_bge ,_bgea );if _dga !=nil {return nil ,_dga ;};_cdc :=_ada .Font ;_ebc :=_fg .MakeName (_ada .Name );_dddf :=_ada .Size ;_bf :=_dddf ==0;if _bf &&_cga {_dddf =_edg *_fab .AutoFontSizeFraction ;
};_cce :=_cdc .Encoder ();if _cce ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_cce =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _cdd string ;if _egd ,_gbad :=_fg .GetString (_acd .V );_gbad {_cdd =_egd .Decoded ();};_bgea .Add_Tf (*_ebc ,_dddf );var _ccdb float64 ;for _ ,_ece :=range _cdd {_dfc ,_fdaa :=_cdc .GetRuneMetrics (_ece );
if !_fdaa {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_ece );
continue ;};_gdf :=_dfc .Wy ;if int (_gdf )<=0{_gdf =_dfc .Wx ;};if _gdf > _ccdb {_ccdb =_gdf ;};};if int (_ccdb )==0{_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_ccdb =1000;};_debd ,_dga :=_cdc .GetFontDescriptor ();if _dga !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _gec float64 ;if _debd !=nil {_gec ,_dga =_debd .GetCapHeight ();if _dga !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dga );
};};if int (_gec )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_gec =1000.0;};_ffef :=_gec /1000.0*_dddf ;_eaec :=0.0;_acdd :=1.0*_dddf *(_ccdb /1000.0);{_cfba :=_acdd ;if _bf &&_eaec +_cfba > _edg {_dddf =0.95*(_edg -_eaec );_ffef =_gec /1000.0*_dddf ;};if _edg > _ffef {_eaec =(_edg -_ffef )/2.0;};};_bgea .Add_Td (0,_eaec );
if _bgg ,_afca :=_fg .GetIntVal (_acd .Q );_afca {switch _bgg {case 2:if len (_cdd )< _cab {_abbe :=float64 (_cab -len (_cdd ))*_eggb ;_bgea .Add_Td (_abbe ,0);};};};for _ebb ,_gee :=range _cdd {_fbg :=_efd ;if _fab .MarginLeft !=nil {_fbg =*_fab .MarginLeft ;
};_fce :=string (_gee );if _cce !=nil {_fge ,_eaeb :=_cdc .GetRuneMetrics (_gee );if !_eaeb {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_gee );
continue ;};_fce =string (_cce .Encode (_fce ));_gbb :=_dddf *_fge .Wx /1000.0;_edfee :=(_eggb -_gbb )/2;_fbg =_edfee ;};_bgea .Add_Td (_fbg ,0);_bgea .Add_Tj (*_fg .MakeString (_fce ));if _ebb !=len (_cdd )-1{_bgea .Add_Td (_eggb -_fbg ,0);};};_bgea .Add_ET ();
_bgea .Add_Q ();_bgea .Add_EMC ();_bcg :=_fa .NewXObjectForm ();_bcg .Resources =_bge ;_bcg .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_bgc ,_ge });_bcg .SetContentStream (_bgea .Bytes (),_dfg ());_cgd :=_fg .MakeDict ();_cgd .Set ("\u004e",_bcg .ToPdfObject ());
return _cgd ,nil ;};func _cdgf (_fee ,_bace float64 ,_aecc *_fa .Image ,_bgdc AppearanceStyle )(*_fa .XObjectForm ,error ){_egbd ,_daac :=_fa .NewXObjectImageFromImage (_aecc ,nil ,_fg .NewFlateEncoder ());if _daac !=nil {return nil ,_daac ;};_egbd .Decode =_fg .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});
_cafg :=_fa .NewPdfPageResources ();_cafg .ProcSet =_fg .MakeArray (_fg .MakeName ("\u0050\u0044\u0046"),_fg .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));_cafg .SetXObjectImageByName (_fg .PdfObjectName ("\u0049\u006d\u0030"),_egbd );_fcg :=_ac .NewContentCreator ();
_fcg .Add_q ();_fcg .Add_cm (float64 (_aecc .Width ),0,0,float64 (_aecc .Height ),0,0);_fcg .Add_Do ("\u0049\u006d\u0030");_fcg .Add_Q ();_afce :=_fa .NewXObjectForm ();_afce .FormType =_fg .MakeInteger (1);_afce .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,float64 (_aecc .Width ),float64 (_aecc .Height )});
_afce .Resources =_cafg ;_afce .SetContentStream (_fcg .Bytes (),_dfg ());return _afce ,nil ;};func (_cgab *AppearanceStyle )processDA (_dca *_fa .PdfField ,_eaef *_ac .ContentStreamOperations ,_beac ,_cec *_fa .PdfPageResources ,_gdd *_ac .ContentCreator )(*AppearanceFont ,bool ,error ){var _geec *AppearanceFont ;
var _gced bool ;if _cgab .Fonts !=nil {if _cgab .Fonts .Fallback !=nil {_geec =_cgab .Fonts .Fallback ;};if _bcc :=_cgab .Fonts .FieldFallbacks ;_bcc !=nil {if _gbd ,_feag :=_bcc [_dca .PartialName ()];_feag {_geec =_gbd ;}else if _cgdf ,_ffd :=_dca .FullName ();
_ffd ==nil {if _adg ,_bcgc :=_bcc [_cgdf ];_bcgc {_geec =_adg ;};};};if _geec !=nil {_geec .fillName ();};_gced =_cgab .Fonts .ForceReplace ;};var _bca string ;var _egaa float64 ;var _agcd bool ;if _eaef !=nil {for _ ,_fbeg :=range *_eaef {if _fbeg .Operand =="\u0054\u0066"&&len (_fbeg .Params )==2{if _ddb ,_adfg :=_fg .GetNameVal (_fbeg .Params [0]);
_adfg {_bca =_ddb ;};if _ccfd ,_dgbg :=_fg .GetNumberAsFloat (_fbeg .Params [1]);_dgbg ==nil {_egaa =_ccfd ;};_agcd =true ;continue ;};_gdd .AddOperand (*_fbeg );};};var _acbc *AppearanceFont ;var _bac _fg .PdfObject ;if _gced &&_geec !=nil {_acbc =_geec ;
}else {if _beac !=nil &&_bca !=""{if _fed ,_bae :=_beac .GetFontByName (*_fg .MakeName (_bca ));_bae {if _abba ,_adca :=_fa .NewPdfFontFromPdfObject (_fed );_adca ==nil {_bac =_fed ;_acbc =&AppearanceFont {Name :_bca ,Font :_abba ,Size :_egaa };}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_adca );
};};};if _acbc ==nil &&_geec !=nil {_acbc =_geec ;};if _acbc ==nil {_ebe ,_ffea :=_fa .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _ffea !=nil {return nil ,false ,_ffea ;};_acbc =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_ebe ,Size :_egaa };
};};if _acbc .Size <=0&&_cgab .Fonts !=nil &&_cgab .Fonts .FallbackSize > 0{_acbc .Size =_cgab .Fonts .FallbackSize ;};_ccce :=*_fg .MakeName (_acbc .Name );if _bac ==nil {_bac =_acbc .Font .ToPdfObject ();};if _beac !=nil &&!_beac .HasFontByName (_ccce ){_beac .SetFontByName (_ccce ,_bac );
};if _cec !=nil &&!_cec .HasFontByName (_ccce ){_cec .SetFontByName (_ccce ,_bac );};return _acbc ,_agcd ,nil ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_fa .PdfAnnotation ,error ){_ca :=_fa .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_ad ,_gc ,_cc :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_ca .C =_fg .MakeArrayFromFloats ([]float64 {_ad ,_gc ,_cc });
_fgb :=_fa .NewBorderStyle ();_fgb .SetBorderWidth (circDef .BorderWidth );_ca .BS =_fgb .ToPdfObject ();};if circDef .FillEnabled {_ce ,_ccc ,_df :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_ca .IC =_fg .MakeArrayFromFloats ([]float64 {_ce ,_ccc ,_df });
}else {_ca .IC =_fg .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_ca .CA =_fg .MakeFloat (circDef .Opacity );};_cee ,_fd ,_af :=_eb (circDef );if _af !=nil {return nil ,_af ;};_ca .AP =_cee ;_ca .Rect =_fg .MakeArrayFromFloats ([]float64 {_fd .Llx ,_fd .Lly ,_fd .Urx ,_fd .Ury });
return _ca .PdfAnnotation ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_fa .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_fa .PdfColorDeviceRGB ;Opacity float64 ;};func _eef (_fca *_fa .PdfField )string {if _fca ==nil {return "";
};_bafg ,_dgac :=_fca .GetContext ().(*_fa .PdfFieldText );if !_dgac {return _eef (_fca .Parent );};if _bafg .DA !=nil {return _bafg .DA .Str ();};return _eef (_bafg .Parent );};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_dgb *AppearanceStyle ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_fced ImageFieldAppearance )Style ()AppearanceStyle {if _fced ._cca !=nil {return *_fced ._cca ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_fa .NewPdfColorDeviceGray (0),FillColor :_fa .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_fa .PdfAnnotation ,error ){_cabd :=_fa .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_cebc ,_baad ,_adba :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_cabd .C =_fg .MakeArrayFromFloats ([]float64 {_cebc ,_baad ,_adba });_fgd :=_fa .NewBorderStyle ();_fgd .SetBorderWidth (rectDef .BorderWidth );_cabd .BS =_fgd .ToPdfObject ();};if rectDef .FillEnabled {_geg ,_cgff ,_degb :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_cabd .IC =_fg .MakeArrayFromFloats ([]float64 {_geg ,_cgff ,_degb });}else {_cabd .IC =_fg .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_cabd .CA =_fg .MakeFloat (rectDef .Opacity );};_eaed ,_dcaf ,_eeg :=_ebbg (rectDef );if _eeg !=nil {return nil ,_eeg ;
};_cabd .AP =_eaed ;_cabd .Rect =_fg .MakeArrayFromFloats ([]float64 {_dcaf .Llx ,_dcaf .Lly ,_dcaf .Urx ,_dcaf .Ury });return _cabd .PdfAnnotation ,nil ;};func _de (_fb CircleAnnotationDef ,_fgc string )([]byte ,*_fa .PdfRectangle ,*_fa .PdfRectangle ,error ){_fbf :=_fe .Circle {X :_fb .X ,Y :_fb .Y ,Width :_fb .Width ,Height :_fb .Height ,FillEnabled :_fb .FillEnabled ,FillColor :_fb .FillColor ,BorderEnabled :_fb .BorderEnabled ,BorderWidth :_fb .BorderWidth ,BorderColor :_fb .BorderColor ,Opacity :_fb .Opacity };
_be ,_bc ,_gce :=_fbf .Draw (_fgc );if _gce !=nil {return nil ,nil ,nil ,_gce ;};_ag :=&_fa .PdfRectangle {};_ag .Llx =_fb .X +_bc .Llx ;_ag .Lly =_fb .Y +_bc .Lly ;_ag .Urx =_fb .X +_bc .Urx ;_ag .Ury =_fb .Y +_bc .Ury ;return _be ,_bc ,_ag ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_ddf ImageFieldAppearance )WrapContentStream (page *_fa .PdfPage )error {_gaa ,_cagg :=page .GetAllContentStreams ();if _cagg !=nil {return _cagg ;};_bggg :=_ac .NewContentStreamParser (_gaa );_gdfe ,_cagg :=_bggg .Parse ();if _cagg !=nil {return _cagg ;
};_gdfe .WrapIfNeeded ();_bcaf :=[]string {_gdfe .String ()};return page .SetContentStreams (_bcaf ,_dfg ());};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_cea FieldAppearance )Style ()AppearanceStyle {if _cea ._dgb !=nil {return *_cea ._dgb ;};_cbd :=_efd ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_fa .NewPdfColorDeviceGray (0),FillColor :_fa .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_cbd };
};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_gg FieldAppearance )GenerateAppearanceDict (form *_fa .PdfAcroForm ,field *_fa .PdfField ,wa *_fa .PdfAnnotationWidget )(*_fg .PdfObjectDictionary ,error ){_g .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_ed :=field .GetContext ().(*_fa .PdfFieldText );_dbf ,_egg :=_fg .GetDict (wa .AP );if _egg &&_gg .OnlyIfMissing &&(!_ed ||!_gg .RegenerateTextFields ){_g .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _dbf ,nil ;};if form .DR ==nil {form .DR =_fa .NewPdfPageResources ();};switch _gf :=field .GetContext ().(type ){case *_fa .PdfFieldText :_ffe :=_gf ;if _aaad :=_eef (_ffe .PdfField );_aaad ==""{_ffe .DA =form .DA ;};switch {case _ffe .Flags ().Has (_fa .FieldFlagPassword ):return nil ,nil ;
case _ffe .Flags ().Has (_fa .FieldFlagFileSelect ):return nil ,nil ;case _ffe .Flags ().Has (_fa .FieldFlagComb ):if _ffe .MaxLen !=nil {_bbc ,_ccf :=_ceed (wa ,_ffe ,form .DR ,_gg .Style ());if _ccf !=nil {return nil ,_ccf ;};return _bbc ,nil ;};};_fff ,_fef :=_gcea (wa ,_ffe ,form .DR ,_gg .Style ());
if _fef !=nil {return nil ,_fef ;};return _fff ,nil ;case *_fa .PdfFieldButton :_gd :=_gf ;if _gd .IsCheckbox (){_ec ,_ga :=_eff (wa ,_gd ,form .DR ,_gg .Style ());if _ga !=nil {return nil ,_ga ;};return _ec ,nil ;};_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_gd .GetType ());
case *_fa .PdfFieldChoice :_eba :=_gf ;switch {case _eba .Flags ().Has (_fa .FieldFlagCombo ):_gge ,_cae :=_ffbg (form ,wa ,_eba ,_gg .Style ());if _cae !=nil {return nil ,_cae ;};return _gge ,nil ;default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_eba .Flags ().String ());
};default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gf );};return nil ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_fa .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_fa .PdfFieldButton ,error ){if page ==nil {return nil ,_b .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};
if len (name )<=0{return nil ,_b .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_b .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cbe :=_fa .NewPdfField ();_dfgg :=&_fa .PdfFieldButton {};_dfgg .PdfField =_cbe ;_cbe .SetContext (_dfgg );_dfgg .SetType (_fa .ButtonTypePush );_dfgg .T =_fg .MakeString (name );_gcdc :=_fa .NewPdfAnnotationWidget ();_gcdc .Rect =_fg .MakeArrayFromFloats (rect );
_gcdc .P =page .ToPdfObject ();_gcdc .F =_fg .MakeInteger (4);_gcdc .Parent =_dfgg .ToPdfObject ();_ebg :=rect [2]-rect [0];_debc :=rect [3]-rect [1];_fbaf :=opt ._fdf ;_aggg :=_ac .NewContentCreator ();if _fbaf .BorderSize > 0{_daae (_aggg ,_fbaf ,_ebg ,_debc );
};if _fbaf .DrawAlignmentReticle {_fbdc :=_fbaf ;_fbdc .BorderSize =0.2;_acbe (_aggg ,_fbdc ,_ebg ,_debc );};_acg ,_ebcd :=_cdgf (_ebg ,_debc ,opt .Image ,_fbaf );if _ebcd !=nil {return nil ,_ebcd ;};_ccfb ,_agb :=_fg .GetDict (_gcdc .MK );if _agb {_ccfb .Set ("\u006c",_acg .ToPdfObject ());
};_fedb :=_fg .MakeDict ();_fedb .Set ("\u0046\u0052\u004d",_acg .ToPdfObject ());_acff :=_fa .NewPdfPageResources ();_acff .ProcSet =_fg .MakeArray (_fg .MakeName ("\u0050\u0044\u0046"));_acff .XObject =_fedb ;_agea :=_ebg -2;_cfg :=_debc -2;_aggg .Add_q ();
_aggg .Add_re (1,1,_agea ,_cfg );_aggg .Add_W ();_aggg .Add_n ();_agea -=2;_cfg -=2;_aggg .Add_q ();_aggg .Add_re (2,2,_agea ,_cfg );_aggg .Add_W ();_aggg .Add_n ();_cge :=_eg .Min (_agea /float64 (opt .Image .Width ),_cfg /float64 (opt .Image .Height ));
_aggg .Add_cm (_cge ,0,0,_cge ,(_ebg /2)-(float64 (opt .Image .Width )*_cge /2)+2,2);_aggg .Add_Do ("\u0046\u0052\u004d");_aggg .Add_Q ();_aggg .Add_Q ();_bfg :=_fa .NewXObjectForm ();_bfg .FormType =_fg .MakeInteger (1);_bfg .Resources =_acff ;_bfg .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_ebg ,_debc });
_bfg .Matrix =_fg .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_bfg .SetContentStream (_aggg .Bytes (),_dfg ());_bccd :=_fg .MakeDict ();_bccd .Set ("\u004e",_bfg .ToPdfObject ());_gcdc .AP =_bccd ;_dfgg .Annotations =append (_dfgg .Annotations ,_gcdc );
return _dfgg ,nil ;};func (_feaf *AppearanceStyle )applyAppearanceCharacteristics (_cdbg *_fg .PdfObjectDictionary ,_deba *_fg .PdfObjectDictionary ,_agd *_fa .PdfFont )error {if !_feaf .AllowMK {return nil ;};if CA ,_gfdb :=_fg .GetString (_cdbg .Get ("\u0043\u0041"));
_gfdb &&_agd !=nil {_ggf :=CA .Bytes ();if len (_ggf )!=0{_dcc :=[]rune (_agd .Encoder ().Decode (_ggf ));if len (_dcc )==1{_feaf .CheckmarkRune =_dcc [0];};};};if BC ,_ebcc :=_fg .GetArray (_cdbg .Get ("\u0042\u0043"));_ebcc {_adb ,_cebe :=BC .ToFloat64Array ();
if _cebe !=nil {return _cebe ;};switch len (_adb ){case 1:_feaf .BorderColor =_fa .NewPdfColorDeviceGray (_adb [0]);case 3:_feaf .BorderColor =_fa .NewPdfColorDeviceRGB (_adb [0],_adb [1],_adb [2]);case 4:_feaf .BorderColor =_fa .NewPdfColorDeviceCMYK (_adb [0],_adb [1],_adb [2],_adb [3]);
default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_adb ));
};if _deba !=nil {if _gbf ,_bgf :=_fg .GetNumberAsFloat (_deba .Get ("\u0057"));_bgf ==nil {_feaf .BorderSize =_gbf ;};};};if BG ,_fegc :=_fg .GetArray (_cdbg .Get ("\u0042\u0047"));_fegc {_eaeca ,_dbfg :=BG .ToFloat64Array ();if _dbfg !=nil {return _dbfg ;
};switch len (_eaeca ){case 1:_feaf .FillColor =_fa .NewPdfColorDeviceGray (_eaeca [0]);case 3:_feaf .FillColor =_fa .NewPdfColorDeviceRGB (_eaeca [0],_eaeca [1],_eaeca [2]);case 4:_feaf .FillColor =_fa .NewPdfColorDeviceCMYK (_eaeca [0],_eaeca [1],_eaeca [2],_eaeca [3]);
default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_eaeca ));
};};return nil ;};type quadding int ;

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_fa .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};func _ebbg (_gbdg RectangleAnnotationDef )(*_fg .PdfObjectDictionary ,*_fa .PdfRectangle ,error ){_gddc :=_fa .NewXObjectForm ();_gddc .Resources =_fa .NewPdfPageResources ();_fdca :="";if _gbdg .Opacity < 1.0{_fcca :=_fg .MakeDict ();_fcca .Set ("\u0063\u0061",_fg .MakeFloat (_gbdg .Opacity ));
_fcca .Set ("\u0043\u0041",_fg .MakeFloat (_gbdg .Opacity ));_fdcb :=_gddc .Resources .AddExtGState ("\u0067\u0073\u0031",_fcca );if _fdcb !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_fdcb ;};_fdca ="\u0067\u0073\u0031";};_agccg ,_cfca ,_dad ,_dacb :=_gfdd (_gbdg ,_fdca );if _dacb !=nil {return nil ,nil ,_dacb ;};_dacb =_gddc .SetContentStream (_agccg ,nil );if _dacb !=nil {return nil ,nil ,_dacb ;};_gddc .BBox =_cfca .ToPdfObject ();
_bgag :=_fg .MakeDict ();_bgag .Set ("\u004e",_gddc .ToPdfObject ());return _bgag ,_dad ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_fa .PdfAnnotation ,error ){_agfd :=_fa .NewPdfAnnotationLine ();_agfd .L =_fg .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_ddbg :=_fg .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_fe .LineEndingStyleArrow {_ddbg =_fg .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_gefa :=_fg .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_fe .LineEndingStyleArrow {_gefa =_fg .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_agfd .LE =_fg .MakeArray (_ddbg ,_gefa );if lineDef .Opacity < 1.0{_agfd .CA =_fg .MakeFloat (lineDef .Opacity );};_fdcf ,_dcge ,_bde :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_agfd .IC =_fg .MakeArrayFromFloats ([]float64 {_fdcf ,_dcge ,_bde });
_agfd .C =_fg .MakeArrayFromFloats ([]float64 {_fdcf ,_dcge ,_bde });_caddg :=_fa .NewBorderStyle ();_caddg .SetBorderWidth (lineDef .LineWidth );_agfd .BS =_caddg .ToPdfObject ();_begb ,_ffdeg ,_bcfc :=_cdfc (lineDef );if _bcfc !=nil {return nil ,_bcfc ;
};_agfd .AP =_begb ;_agfd .Rect =_fg .MakeArrayFromFloats ([]float64 {_ffdeg .Llx ,_ffdeg .Lly ,_ffdeg .Urx ,_ffdeg .Ury });return _agfd .PdfAnnotation ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// InkAnnotationDef holds base information for constructing an ink annotation.
type InkAnnotationDef struct{

// Paths is the array of stroked paths which compose the annotation.
Paths []_fe .Path ;

// Color is the color of the line. Default to black.
Color *_fa .PdfColorDeviceRGB ;

// LineWidth is the width of the line.
LineWidth float64 ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_fa .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_fa .PdfFieldButton ,error ){if page ==nil {return nil ,_b .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_b .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_b .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_agcc ,_afdc :=_fa .NewStandard14Font (_fa .ZapfDingbatsName );if _afdc !=nil {return nil ,_afdc ;};_dba :=_fa .NewPdfField ();_cgfd :=&_fa .PdfFieldButton {};_dba .SetContext (_cgfd );_cgfd .PdfField =_dba ;_cgfd .T =_fg .MakeString (name );_cgfd .SetType (_fa .ButtonTypeCheckbox );
_gda :="\u004f\u0066\u0066";if opt .Checked {_gda ="\u0059\u0065\u0073";};_cgfd .V =_fg .MakeName (_gda );_deg :=_fa .NewPdfAnnotationWidget ();_deg .Rect =_fg .MakeArrayFromFloats (rect );_deg .P =page .ToPdfObject ();_deg .F =_fg .MakeInteger (4);_deg .Parent =_cgfd .ToPdfObject ();
_dda :=rect [2]-rect [0];_fabg :=rect [3]-rect [1];var _dfd _a .Buffer ;_dfd .WriteString ("\u0071\u000a");_dfd .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_dfd .WriteString ("\u0042\u0054\u000a");_dfd .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");
_dfd .WriteString ("\u0045\u0054\u000a");_dfd .WriteString ("\u0051\u000a");_aef :=_ac .NewContentCreator ();_aef .Add_q ();_aef .Add_rg (0,0,1);_aef .Add_BT ();_aef .Add_Tf (*_fg .MakeName ("\u005a\u0061\u0044\u0062"),12);_aef .Add_Td (0,0);_aef .Add_ET ();
_aef .Add_Q ();_dcg :=_fa .NewXObjectForm ();_dcg .SetContentStream (_aef .Bytes (),_fg .NewRawEncoder ());_dcg .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_dda ,_fabg });_dcg .Resources =_fa .NewPdfPageResources ();_dcg .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_agcc .ToPdfObject ());
_aef =_ac .NewContentCreator ();_aef .Add_q ();_aef .Add_re (0,0,_dda ,_fabg );_aef .Add_W ().Add_n ();_aef .Add_rg (0,0,1);_aef .Translate (0,3.0);_aef .Add_BT ();_aef .Add_Tf (*_fg .MakeName ("\u005a\u0061\u0044\u0062"),12);_aef .Add_Td (0,0);_aef .Add_Tj (*_fg .MakeString ("\u0034"));
_aef .Add_ET ();_aef .Add_Q ();_cdee :=_fa .NewXObjectForm ();_cdee .SetContentStream (_aef .Bytes (),_fg .NewRawEncoder ());_cdee .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_dda ,_fabg });_cdee .Resources =_fa .NewPdfPageResources ();_cdee .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_agcc .ToPdfObject ());
_gbae :=_fg .MakeDict ();_gbae .Set ("\u004f\u0066\u0066",_dcg .ToPdfObject ());_gbae .Set ("\u0059\u0065\u0073",_cdee .ToPdfObject ());_feac :=_fg .MakeDict ();_feac .Set ("\u004e",_gbae );_deg .AP =_feac ;_deg .AS =_fg .MakeName (_gda );_cgfd .Annotations =append (_cgfd .Annotations ,_deg );
return _cgfd ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_fa .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_fa .PdfColorDeviceRGB ;Opacity float64 ;};func _bbcb (_fdcg []*SignatureLine ,_eedb *SignatureFieldOpts )(*_fg .PdfObjectDictionary ,error ){if _eedb ==nil {_eedb =NewSignatureFieldOpts ();
};var _dfeda error ;var _bgb *_fg .PdfObjectName ;_fffg :=_eedb .Font ;if _fffg !=nil {_bddg ,_ :=_fffg .GetFontDescriptor ();if _bddg !=nil {if _ecga ,_cfce :=_bddg .FontName .(*_fg .PdfObjectName );_cfce {_bgb =_ecga ;};};if _bgb ==nil {_bgb =_fg .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _fffg ,_dfeda =_fa .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_dfeda !=nil {return nil ,_dfeda ;};_bgb =_fg .MakeName ("\u0048\u0065\u006c\u0076");};_bedc :=_eedb .FontSize ;if _bedc <=0{_bedc =10;};if _eedb .LineHeight <=0{_eedb .LineHeight =1;
};_fagb :=_eedb .LineHeight *_bedc ;_gaba ,_ffde :=_fffg .GetRuneMetrics (' ');if !_ffde {return nil ,_b .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_cgca :=_gaba .Wx ;var _cad float64 ;var _gga []string ;for _ ,_edfeed :=range _fdcg {if _edfeed .Text ==""{continue ;};_aadd :=_edfeed .Text ;if _edfeed .Desc !=""{_aadd =_edfeed .Desc +"\u003a\u0020"+_aadd ;};_gga =append (_gga ,_aadd );var _fae float64 ;
for _ ,_eca :=range _aadd {_cead ,_dbg :=_fffg .GetRuneMetrics (_eca );if !_dbg {continue ;};_fae +=_cead .Wx ;};if _fae > _cad {_cad =_fae ;};};_cad =_cad *_bedc /1000.0;_fdd :=float64 (len (_gga ))*_fagb ;_eefd :=_eedb .Image !=nil ;_cbc :=_eedb .Rect ;
if _cbc ==nil {_cbc =[]float64 {0,0,_cad ,_fdd };if _eefd {_cbc [2]=_cad *2;_cbc [3]=_fdd *2;};_eedb .Rect =_cbc ;};_bfff :=_cbc [2]-_cbc [0];_dfca :=_cbc [3]-_cbc [1];_gag ,_cdgg :=_cbc ,_cbc ;var _aebb ,_accf float64 ;if _eefd &&len (_gga )> 0{if _eedb .ImagePosition <=SignatureImageRight {_dfaa :=[]float64 {_cbc [0],_cbc [1],_cbc [0]+(_bfff /2),_cbc [3]};
_egf :=[]float64 {_cbc [0]+(_bfff /2),_cbc [1],_cbc [2],_cbc [3]};if _eedb .ImagePosition ==SignatureImageLeft {_gag ,_cdgg =_dfaa ,_egf ;}else {_gag ,_cdgg =_egf ,_dfaa ;};}else {_cbdc :=[]float64 {_cbc [0],_cbc [1],_cbc [2],_cbc [1]+(_dfca /2)};_aafbb :=[]float64 {_cbc [0],_cbc [1]+(_dfca /2),_cbc [2],_cbc [3]};
if _eedb .ImagePosition ==SignatureImageTop {_gag ,_cdgg =_aafbb ,_cbdc ;}else {_gag ,_cdgg =_cbdc ,_aafbb ;};};};_aebb =_cdgg [2]-_cdgg [0];_accf =_cdgg [3]-_cdgg [1];var _gef float64 ;if _eedb .AutoSize {if _cad > _aebb ||_fdd > _accf {_ecd :=_eg .Min (_aebb /_cad ,_accf /_fdd );
_bedc *=_ecd ;};_fagb =_eedb .LineHeight *_bedc ;_gef +=(_accf -float64 (len (_gga ))*_fagb )/2;};_debdg :=_ac .NewContentCreator ();_dde :=_fa .NewPdfPageResources ();_dde .SetFontByName (*_bgb ,_fffg .ToPdfObject ());if _eedb .BorderSize <=0{_eedb .BorderSize =0;
_eedb .BorderColor =_fa .NewPdfColorDeviceGray (1);};_debdg .Add_q ();if _eedb .FillColor !=nil {_debdg .SetNonStrokingColor (_eedb .FillColor );};if _eedb .BorderColor !=nil {_debdg .SetStrokingColor (_eedb .BorderColor );};_debdg .Add_w (_eedb .BorderSize ).Add_re (_cbc [0],_cbc [1],_bfff ,_dfca );
if _eedb .FillColor !=nil &&_eedb .BorderColor !=nil {_debdg .Add_B ();}else if _eedb .FillColor !=nil {_debdg .Add_f ();}else if _eedb .BorderColor !=nil {_debdg .Add_S ();};_debdg .Add_Q ();if _eedb .WatermarkImage !=nil {_dfef :=[]float64 {_cbc [0],_cbc [1],_cbc [2],_cbc [3]};
_faag ,_efge ,_ggegc :=_eec (_eedb .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_eedb ,_dfef ,_debdg );if _ggegc !=nil {return nil ,_ggegc ;};_dde .SetXObjectImageByName (*_faag ,_efge );};_debdg .Add_q ();
_debdg .Translate (_cdgg [0],_cdgg [3]-_fagb -_gef );_debdg .Add_BT ();_ffcc :=_fffg .Encoder ();for _ ,_gfgf :=range _gga {var _ccee []byte ;for _ ,_daee :=range _gfgf {if _e .IsSpace (_daee ){if len (_ccee )> 0{_debdg .SetNonStrokingColor (_eedb .TextColor ).Add_Tf (*_bgb ,_bedc ).Add_TL (_fagb ).Add_TJ ([]_fg .PdfObject {_fg .MakeStringFromBytes (_ccee )}...);
_ccee =nil ;};_debdg .Add_Tf (*_bgb ,_bedc ).Add_TL (_fagb ).Add_TJ ([]_fg .PdfObject {_fg .MakeFloat (-_cgca )}...);}else {_ccee =append (_ccee ,_ffcc .Encode (string (_daee ))...);};};if len (_ccee )> 0{_debdg .SetNonStrokingColor (_eedb .TextColor ).Add_Tf (*_bgb ,_bedc ).Add_TL (_fagb ).Add_TJ ([]_fg .PdfObject {_fg .MakeStringFromBytes (_ccee )}...);
};_debdg .Add_Td (0,-_fagb );};_debdg .Add_ET ();_debdg .Add_Q ();if _eefd {_fbd ,_daeea ,_ffa :=_eec (_eedb .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_eedb ,_gag ,_debdg );if _ffa !=nil {return nil ,_ffa ;
};_dde .SetXObjectImageByName (*_fbd ,_daeea );};_dbb :=_fa .NewXObjectForm ();_dbb .Resources =_dde ;_dbb .BBox =_fg .MakeArrayFromFloats (_cbc );_dbb .SetContentStream (_debdg .Bytes (),_dfg ());_adff :=_fg .MakeDict ();_adff .Set ("\u004e",_dbb .ToPdfObject ());
return _adff ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};const (_cg quadding =0;_db quadding =1;_eac quadding =2;_efd float64 =2.0;);func _edefe (_fdeg *InkAnnotationDef )([]byte ,*_fa .PdfRectangle ,error ){_faeb :=[][]_fe .CubicBezierCurve {};for _ ,_ggdf :=range _fdeg .Paths {if _ggdf .Length ()==0{continue ;
};_afdg :=_ggdf .Points ;_fcbe ,_fagg ,_dfab :=_fede (_afdg );if _dfab !=nil {return nil ,nil ,_dfab ;};if len (_fcbe )!=len (_fagg ){return nil ,nil ,_b .New ("\u0049\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u006e\u0064\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0063\u006f\u006e\u0074\u0072o\u006c\u0020\u0070\u006f\u0069n\u0074");
};_gfdc :=[]_fe .CubicBezierCurve {};for _dgg :=0;_dgg < len (_fcbe );_dgg ++{_gfdc =append (_gfdc ,_fe .CubicBezierCurve {P0 :_afdg [_dgg ],P1 :_fcbe [_dgg ],P2 :_fagg [_dgg ],P3 :_afdg [_dgg +1]});};if len (_gfdc )> 0{_faeb =append (_faeb ,_gfdc );};
};_cfa ,_ddab ,_fabe :=_cbbb (_faeb ,_fdeg .Color ,_fdeg .LineWidth );if _fabe !=nil {return nil ,nil ,_fabe ;};return _cfa ,_ddab ,nil ;};func _dgc (_bdb *_fa .PdfFieldButton ,_cdf *_fa .PdfAnnotationWidget ,_fcb AppearanceStyle )(*_fg .PdfObjectDictionary ,error ){_abfd ,_cggf :=_fg .GetArray (_cdf .Rect );
if !_cggf {return nil ,_b .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_gfgc ,_ffdef :=_fa .NewPdfRectangle (*_abfd );if _ffdef !=nil {return nil ,_ffdef ;};_ffad ,_bfa :=_gfgc .Width (),_gfgc .Height ();_aaag :=_ac .NewContentCreator ();
if _fcb .BorderSize > 0{_daae (_aaag ,_fcb ,_ffad ,_bfa );};if _fcb .DrawAlignmentReticle {_edbe :=_fcb ;_edbe .BorderSize =0.2;_acbe (_aaag ,_edbe ,_ffad ,_bfa );};_ceeef :=_bdb .GetFillImage ();_ced ,_ffdef :=_cdgf (_ffad ,_bfa ,_ceeef ,_fcb );if _ffdef !=nil {return nil ,_ffdef ;
};_fdg ,_accg :=_fg .GetDict (_cdf .MK );if _accg {_fdg .Set ("\u006c",_ced .ToPdfObject ());};_ebef :=_fg .MakeDict ();_ebef .Set ("\u0046\u0052\u004d",_ced .ToPdfObject ());_fcc :=_fa .NewPdfPageResources ();_fcc .ProcSet =_fg .MakeArray (_fg .MakeName ("\u0050\u0044\u0046"));
_fcc .XObject =_ebef ;_gbff :=_ffad -2;_agfa :=_bfa -2;_aaag .Add_q ();_aaag .Add_re (1,1,_gbff ,_agfa );_aaag .Add_W ();_aaag .Add_n ();_gbff -=2;_agfa -=2;_aaag .Add_q ();_aaag .Add_re (2,2,_gbff ,_agfa );_aaag .Add_W ();_aaag .Add_n ();_fafc :=_eg .Min (_gbff /float64 (_ceeef .Width ),_agfa /float64 (_ceeef .Height ));
_aaag .Add_cm (_fafc ,0,0,_fafc ,(_ffad /2)-(float64 (_ceeef .Width )*_fafc /2)+2,2);_aaag .Add_Do ("\u0046\u0052\u004d");_aaag .Add_Q ();_aaag .Add_Q ();_dabd :=_fa .NewXObjectForm ();_dabd .FormType =_fg .MakeInteger (1);_dabd .Resources =_fcc ;_dabd .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_ffad ,_bfa });
_dabd .Matrix =_fg .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_dabd .SetContentStream (_aaag .Bytes (),_dfg ());_fedd :=_fg .MakeDict ();_fedd .Set ("\u004e",_dabd .ToPdfObject ());return _fedd ,nil ;};func _daae (_fcf *_ac .ContentCreator ,_bfeb AppearanceStyle ,_edca ,_gae float64 ){_fcf .Add_q ().Add_re (0,0,_edca ,_gae ).Add_w (_bfeb .BorderSize ).SetStrokingColor (_bfeb .BorderColor ).SetNonStrokingColor (_bfeb .FillColor ).Add_B ().Add_Q ();
};func _fede (_dgca []_fe .Point )(_caa []_fe .Point ,_bgeg []_fe .Point ,_fgad error ){_ffgbg :=len (_dgca )-1;if len (_dgca )< 1{return nil ,nil ,_b .New ("\u0041\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0070\u006f\u0069\u006e\u0074s \u0072e\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0020\u0063\u0075\u0072\u0076\u0065\u0020\u0063\u006f\u006e\u0074r\u006f\u006c\u0020\u0070\u006f\u0069\u006e\u0074\u0073");
};if _ffgbg ==1{_adfa :=_fe .Point {X :(2*_dgca [0].X +_dgca [1].X )/3,Y :(2*_dgca [0].Y +_dgca [1].Y )/3};_caa =append (_caa ,_adfa );_bgeg =append (_bgeg ,_fe .Point {X :2*_adfa .X -_dgca [0].X ,Y :2*_adfa .Y -_dgca [0].Y });return _caa ,_bgeg ,nil ;
};_bbfe :=make ([]float64 ,_ffgbg );for _bddbe :=1;_bddbe < _ffgbg -1;_bddbe ++{_bbfe [_bddbe ]=4*_dgca [_bddbe ].X +2*_dgca [_bddbe +1].X ;};_bbfe [0]=_dgca [0].X +2*_dgca [1].X ;_bbfe [_ffgbg -1]=(8*_dgca [_ffgbg -1].X +_dgca [_ffgbg ].X )/2.0;_bcgca :=_feff (_bbfe );
for _bfec :=1;_bfec < _ffgbg -1;_bfec ++{_bbfe [_bfec ]=4*_dgca [_bfec ].Y +2*_dgca [_bfec +1].Y ;};_bbfe [0]=_dgca [0].Y +2*_dgca [1].Y ;_bbfe [_ffgbg -1]=(8*_dgca [_ffgbg -1].Y +_dgca [_ffgbg ].Y )/2.0;_cdab :=_feff (_bbfe );_caa =make ([]_fe .Point ,_ffgbg );
_bgeg =make ([]_fe .Point ,_ffgbg );for _geeg :=0;_geeg < _ffgbg ;_geeg ++{_caa [_geeg ]=_fe .Point {X :_bcgca [_geeg ],Y :_cdab [_geeg ]};if _geeg < _ffgbg -1{_bgeg [_geeg ]=_fe .Point {X :2*_dgca [_geeg +1].X -_bcgca [_geeg +1],Y :2*_dgca [_geeg +1].Y -_cdab [_geeg +1]};
}else {_bgeg [_geeg ]=_fe .Point {X :(_dgca [_ffgbg ].X +_bcgca [_ffgbg -1])/2,Y :(_dgca [_ffgbg ].Y +_cdab [_ffgbg -1])/2};};};return _caa ,_bgeg ,nil ;};func (_fag *AppearanceStyle )applyRotation (_gbgb *_fg .PdfObjectDictionary ,_cgc ,_eeff float64 ,_baa *_ac .ContentCreator )(float64 ,float64 ){if !_fag .AllowMK {return _cgc ,_eeff ;
};if _gbgb ==nil {return _cgc ,_eeff ;};_gcb ,_ :=_fg .GetNumberAsFloat (_gbgb .Get ("\u0052"));if _gcb ==0{return _cgc ,_eeff ;};_dac :=-_gcb ;_baaf :=_fe .Path {Points :[]_fe .Point {_fe .NewPoint (0,0).Rotate (_dac ),_fe .NewPoint (_cgc ,0).Rotate (_dac ),_fe .NewPoint (0,_eeff ).Rotate (_dac ),_fe .NewPoint (_cgc ,_eeff ).Rotate (_dac )}}.GetBoundingBox ();
_baa .RotateDeg (_gcb );_baa .Translate (_baaf .X ,_baaf .Y );return _baaf .Width ,_baaf .Height ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_fgfg ImageFieldAppearance )GenerateAppearanceDict (form *_fa .PdfAcroForm ,field *_fa .PdfField ,wa *_fa .PdfAnnotationWidget )(*_fg .PdfObjectDictionary ,error ){_ ,_afbb :=field .GetContext ().(*_fa .PdfFieldButton );if !_afbb {_g .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_efbe ,_bafd :=_fg .GetDict (wa .AP );if _bafd &&_fgfg .OnlyIfMissing {_g .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _efbe ,nil ;};if form .DR ==nil {form .DR =_fa .NewPdfPageResources ();};switch _dce :=field .GetContext ().(type ){case *_fa .PdfFieldButton :if _dce .IsPush (){_edef ,_gdcbe :=_dgc (_dce ,wa ,_fgfg .Style ());if _gdcbe !=nil {return nil ,_gdcbe ;
};return _edef ,nil ;};};return nil ,nil ;};func _cdfc (_ggad LineAnnotationDef )(*_fg .PdfObjectDictionary ,*_fa .PdfRectangle ,error ){_daf :=_fa .NewXObjectForm ();_daf .Resources =_fa .NewPdfPageResources ();_aea :="";if _ggad .Opacity < 1.0{_dega :=_fg .MakeDict ();
_dega .Set ("\u0063\u0061",_fg .MakeFloat (_ggad .Opacity ));_ggdb :=_daf .Resources .AddExtGState ("\u0067\u0073\u0031",_dega );if _ggdb !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_ggdb ;};_aea ="\u0067\u0073\u0031";};_gade ,_fbgg ,_aade ,_fcef :=_aggd (_ggad ,_aea );if _fcef !=nil {return nil ,nil ,_fcef ;};_fcef =_daf .SetContentStream (_gade ,nil );if _fcef !=nil {return nil ,nil ,_fcef ;};_daf .BBox =_fbgg .ToPdfObject ();
_edea :=_fg .MakeDict ();_edea .Set ("\u004e",_daf .ToPdfObject ());return _edea ,_aade ,nil ;};func _ffbg (_cgf *_fa .PdfAcroForm ,_ffg *_fa .PdfAnnotationWidget ,_cdg *_fa .PdfFieldChoice ,_ggb AppearanceStyle )(*_fg .PdfObjectDictionary ,error ){_ceee ,_eggc :=_fg .GetArray (_ffg .Rect );
if !_eggc {return nil ,_b .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fbb ,_gad :=_fa .NewPdfRectangle (*_ceee );if _gad !=nil {return nil ,_gad ;};_ebca ,_ffed :=_fbb .Width (),_fbb .Height ();_g .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_ffg .BS );
_adf ,_gad :=_ac .NewContentStreamParser (_eef (_cdg .PdfField )).Parse ();if _gad !=nil {return nil ,_gad ;};_gcdb ,_cbdd :=_fg .GetDict (_ffg .MK );if _cbdd {_dfcc ,_ :=_fg .GetDict (_ffg .BS );_ba :=_ggb .applyAppearanceCharacteristics (_gcdb ,_dfcc ,nil );
if _ba !=nil {return nil ,_ba ;};};_cgdd :=_fg .MakeDict ();for _ ,_gcee :=range _cdg .Opt .Elements (){if _beg ,_aafb :=_fg .GetArray (_gcee );_aafb &&_beg .Len ()==2{_gcee =_beg .Get (1);};var _dfbb string ;if _agcg ,_ecg :=_fg .GetString (_gcee );_ecg {_dfbb =_agcg .Decoded ();
}else if _agg ,_ccb :=_fg .GetName (_gcee );_ccb {_dfbb =_agg .String ();}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_gcee );
return nil ,_b .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_dfbb )> 0{_acc ,_edc :=_adc (_cdg .PdfField ,_ebca ,_ffed ,_dfbb ,_ggb ,_adf ,_cgf .DR ,_gcdb );if _edc !=nil {return nil ,_edc ;
};_cgdd .Set (*_fg .MakeName (_dfbb ),_acc .ToPdfObject ());};};_edgd :=_fg .MakeDict ();_edgd .Set ("\u004e",_cgdd );return _edgd ,nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;func _eb (_aa CircleAnnotationDef )(*_fg .PdfObjectDictionary ,*_fa .PdfRectangle ,error ){_ea :=_fa .NewXObjectForm ();_ea .Resources =_fa .NewPdfPageResources ();_ega :="";if _aa .Opacity < 1.0{_dg :=_fg .MakeDict ();
_dg .Set ("\u0063\u0061",_fg .MakeFloat (_aa .Opacity ));_dg .Set ("\u0043\u0041",_fg .MakeFloat (_aa .Opacity ));_dd :=_ea .Resources .AddExtGState ("\u0067\u0073\u0031",_dg );if _dd !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_dd ;};_ega ="\u0067\u0073\u0031";};_bb ,_da ,_ef ,_dae :=_de (_aa ,_ega );if _dae !=nil {return nil ,nil ,_dae ;};_dae =_ea .SetContentStream (_bb ,nil );if _dae !=nil {return nil ,nil ,_dae ;};_ea .BBox =_da .ToPdfObject ();_cb :=_fg .MakeDict ();
_cb .Set ("\u004e",_ea .ToPdfObject ());return _cb ,_ef ,nil ;};func _adc (_eaga *_fa .PdfField ,_gaf ,_bddb float64 ,_ebab string ,_fdac AppearanceStyle ,_gfb *_ac .ContentStreamOperations ,_ecf *_fa .PdfPageResources ,_aec *_fg .PdfObjectDictionary )(*_fa .XObjectForm ,error ){_dge :=_fa .NewPdfPageResources ();
_gbgde ,_fba :=_gaf ,_bddb ;_dgd :=_ac .NewContentCreator ();if _fdac .BorderSize > 0{_daae (_dgd ,_fdac ,_gaf ,_bddb );};if _fdac .DrawAlignmentReticle {_feaa :=_fdac ;_feaa .BorderSize =0.2;_acbe (_dgd ,_feaa ,_gaf ,_bddb );};_dgd .Add_BMC ("\u0054\u0078");
_dgd .Add_q ();_dgd .Add_BT ();_gaf ,_bddb =_fdac .applyRotation (_aec ,_gaf ,_bddb ,_dgd );_bga ,_bec ,_baf :=_fdac .processDA (_eaga ,_gfb ,_ecf ,_dge ,_dgd );if _baf !=nil {return nil ,_baf ;};_eaf :=_bga .Font ;_gdcb :=_bga .Size ;_ace :=_fg .MakeName (_bga .Name );
_afcb :=_gdcb ==0;if _afcb &&_bec {_gdcb =_bddb *_fdac .AutoFontSizeFraction ;};_gfbd :=_eaf .Encoder ();if _gfbd ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_gfbd =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_ebab )==0{return nil ,nil ;};_faf :=_efd ;if _fdac .MarginLeft !=nil {_faf =*_fdac .MarginLeft ;};_efef :=0.0;if _gfbd !=nil {for _ ,_gbe :=range _ebab {_eggg ,_bbg :=_eaf .GetRuneMetrics (_gbe );
if !_bbg {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_gbe );
continue ;};_efef +=_eggg .Wx ;};_ebab =string (_gfbd .Encode (_ebab ));};if _gdcb ==0||_afcb &&_efef > 0&&_faf +_efef *_gdcb /1000.0> _gaf {_gdcb =0.95*1000.0*(_gaf -_faf )/_efef ;};_eacf :=1.0*_gdcb ;_bef :=2.0;{_bfe :=_eacf ;if _afcb &&_bef +_bfe > _bddb {_gdcb =0.95*(_bddb -_bef );
_eacf =1.0*_gdcb ;_bfe =_eacf ;};if _bddb > _bfe {_bef =(_bddb -_bfe )/2.0;_bef +=1.50;};};_dgd .Add_Tf (*_ace ,_gdcb );_dgd .Add_Td (_faf ,_bef );_dgd .Add_Tj (*_fg .MakeString (_ebab ));_dgd .Add_ET ();_dgd .Add_Q ();_dgd .Add_EMC ();_fgef :=_fa .NewXObjectForm ();
_fgef .Resources =_dge ;_fgef .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_gbgde ,_fba });_fgef .SetContentStream (_dgd .Bytes (),_dfg ());return _fgef ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_fa .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_fa .PdfFieldText ,error ){if page ==nil {return nil ,_b .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_b .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_b .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cacg :=_fa .NewPdfField ();_bffa :=&_fa .PdfFieldText {};_cacg .SetContext (_bffa );_bffa .PdfField =_cacg ;_bffa .T =_fg .MakeString (name );
if opt .MaxLen > 0{_bffa .MaxLen =_fg .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_bffa .V =_fg .MakeString (opt .Value );};_def :=_fa .NewPdfAnnotationWidget ();_def .Rect =_fg .MakeArrayFromFloats (rect );_def .P =page .ToPdfObject ();
_def .F =_fg .MakeInteger (4);_def .Parent =_bffa .ToPdfObject ();_bffa .Annotations =append (_bffa .Annotations ,_def );return _bffa ,nil ;};func _eec (_gafc _d .Image ,_gddb string ,_ceaa *SignatureFieldOpts ,_acdf []float64 ,_ffbgc *_ac .ContentCreator )(*_fg .PdfObjectName ,*_fa .XObjectImage ,error ){_eecf ,_efb :=_fa .DefaultImageHandler {}.NewImageFromGoImage (_gafc );
if _efb !=nil {return nil ,nil ,_efb ;};_efa ,_efb :=_fa .NewXObjectImageFromImage (_eecf ,nil ,_ceaa .Encoder );if _efb !=nil {return nil ,nil ,_efb ;};_faba ,_fabf :=float64 (*_efa .Width ),float64 (*_efa .Height );_acfb :=_acdf [2]-_acdf [0];_cfcb :=_acdf [3]-_acdf [1];
if _ceaa .AutoSize {_ecge :=_eg .Min (_acfb /_faba ,_cfcb /_fabf );_faba *=_ecge ;_fabf *=_ecge ;_acdf [0]=_acdf [0]+(_acfb /2)-(_faba /2);_acdf [1]=_acdf [1]+(_cfcb /2)-(_fabf /2);};var _ebd *_fg .PdfObjectName ;if _afaf ,_fec :=_fg .GetName (_efa .Name );
_fec {_ebd =_afaf ;}else {_ebd =_fg .MakeName (_gddb );};if _ffbgc !=nil {_ffbgc .Add_q ().Translate (_acdf [0],_acdf [1]).Scale (_faba ,_fabf ).Add_Do (*_ebd ).Add_Q ();}else {return nil ,nil ,_b .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _ebd ,_efa ,nil ;};func _gfdd (_ged RectangleAnnotationDef ,_eabd string )([]byte ,*_fa .PdfRectangle ,*_fa .PdfRectangle ,error ){_ebdg :=_fe .Rectangle {X :0,Y :0,Width :_ged .Width ,Height :_ged .Height ,FillEnabled :_ged .FillEnabled ,FillColor :_ged .FillColor ,BorderEnabled :_ged .BorderEnabled ,BorderWidth :2*_ged .BorderWidth ,BorderColor :_ged .BorderColor ,Opacity :_ged .Opacity };
_ebba ,_cgb ,_ecee :=_ebdg .Draw (_eabd );if _ecee !=nil {return nil ,nil ,nil ,_ecee ;};_edd :=&_fa .PdfRectangle {};_edd .Llx =_ged .X +_cgb .Llx ;_edd .Lly =_ged .Y +_cgb .Lly ;_edd .Urx =_ged .X +_cgb .Urx ;_edd .Ury =_ged .Y +_cgb .Ury ;return _ebba ,_cgb ,_edd ,nil ;
};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_fa .Image ;_fdf AppearanceStyle ;};func _aggd (_adfaa LineAnnotationDef ,_cebf string )([]byte ,*_fa .PdfRectangle ,*_fa .PdfRectangle ,error ){_befa :=_fe .Line {X1 :0,Y1 :0,X2 :_adfaa .X2 -_adfaa .X1 ,Y2 :_adfaa .Y2 -_adfaa .Y1 ,LineColor :_adfaa .LineColor ,Opacity :_adfaa .Opacity ,LineWidth :_adfaa .LineWidth ,LineEndingStyle1 :_adfaa .LineEndingStyle1 ,LineEndingStyle2 :_adfaa .LineEndingStyle2 };
_eaba ,_ceg ,_abbd :=_befa .Draw (_cebf );if _abbd !=nil {return nil ,nil ,nil ,_abbd ;};_ccfc :=&_fa .PdfRectangle {};_ccfc .Llx =_adfaa .X1 +_ceg .Llx ;_ccfc .Lly =_adfaa .Y1 +_ceg .Lly ;_ccfc .Urx =_adfaa .X1 +_ceg .Urx ;_ccfc .Ury =_adfaa .Y1 +_ceg .Ury ;
return _eaba ,_ceg ,_ccfc ,nil ;};

// CreateInkAnnotation creates an ink annotation object that can be added to the annotation list of a PDF page.
func CreateInkAnnotation (inkDef InkAnnotationDef )(*_fa .PdfAnnotation ,error ){_aebg :=_fa .NewPdfAnnotationInk ();_bcad :=_fg .MakeArray ();for _ ,_aag :=range inkDef .Paths {if _aag .Length ()==0{continue ;};_fde :=[]float64 {};for _ ,_gbge :=range _aag .Points {_fde =append (_fde ,_gbge .X ,_gbge .Y );
};_bcad .Append (_fg .MakeArrayFromFloats (_fde ));};_aebg .InkList =_bcad ;if inkDef .Color ==nil {inkDef .Color =_fa .NewPdfColorDeviceRGB (0.0,0.0,0.0);};_aebg .C =_fg .MakeArrayFromFloats ([]float64 {inkDef .Color .R (),inkDef .Color .G (),inkDef .Color .B ()});
_efdf ,_cbg ,_gaae :=_aefb (&inkDef );if _gaae !=nil {return nil ,_gaae ;};_aebg .AP =_efdf ;_aebg .Rect =_fg .MakeArrayFromFloats ([]float64 {_cbg .Llx ,_cbg .Lly ,_cbg .Urx ,_cbg .Ury });return _aebg .PdfAnnotation ,nil ;};func _dfg ()_fg .StreamEncoder {return _fg .NewFlateEncoder ()};
const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);func _feff (_aff []float64 )[]float64 {var (_ggef =len (_aff );_bda =make ([]float64 ,_ggef );_fafe =make ([]float64 ,_ggef ););_ebbd :=2.0;
_bda [0]=_aff [0]/_ebbd ;for _dfdg :=1;_dfdg < _ggef ;_dfdg ++{_fafe [_dfdg ]=1/_ebbd ;if _dfdg < _ggef -1{_ebbd =4.0;}else {_ebbd =3.5;};_ebbd -=_fafe [_dfdg ];_bda [_dfdg ]=(_aff [_dfdg ]-_bda [_dfdg -1])/_ebbd ;};for _fcaf :=1;_fcaf < _ggef ;_fcaf ++{_bda [_ggef -_fcaf -1]-=_fafe [_ggef -_fcaf ]*_bda [_ggef -_fcaf ];
};return _bda ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_fa .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_fa .PdfFieldChoice ,error ){if page ==nil {return nil ,_b .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_b .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_b .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gdca :=_fa .NewPdfField ();_acfc :=&_fa .PdfFieldChoice {};_gdca .SetContext (_acfc );_acfc .PdfField =_gdca ;_acfc .T =_fg .MakeString (name );_acfc .Opt =_fg .MakeArray ();for _ ,_baea :=range opt .Choices {_acfc .Opt .Append (_fg .MakeString (_baea ));
};_acfc .SetFlag (_fa .FieldFlagCombo );_deae :=_fa .NewPdfAnnotationWidget ();_deae .Rect =_fg .MakeArrayFromFloats (rect );_deae .P =page .ToPdfObject ();_deae .F =_fg .MakeInteger (4);_deae .Parent =_acfc .ToPdfObject ();_acfc .Annotations =append (_acfc .Annotations ,_deae );
return _acfc ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _eff (_faa *_fa .PdfAnnotationWidget ,_ceb *_fa .PdfFieldButton ,_gab *_fa .PdfPageResources ,_afb AppearanceStyle )(*_fg .PdfObjectDictionary ,error ){_ebbb ,_afad :=_fg .GetArray (_faa .Rect );
if !_afad {return nil ,_b .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cggb ,_efg :=_fa .NewPdfRectangle (*_ebbb );if _efg !=nil {return nil ,_efg ;};_dfed ,_gbbf :=_cggb .Width (),_cggb .Height ();_fgae ,_bbf :=_dfed ,_gbbf ;
_g .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_faa .BS );_feg ,_efg :=_fa .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _efg !=nil {return nil ,_efg ;
};_cbb ,_gbgd :=_fg .GetDict (_faa .MK );if _gbgd {_bed ,_ :=_fg .GetDict (_faa .BS );_dag :=_afb .applyAppearanceCharacteristics (_cbb ,_bed ,_feg );if _dag !=nil {return nil ,_dag ;};};_gdc :=_fa .NewXObjectForm ();{_cda :=_ac .NewContentCreator ();if _afb .BorderSize > 0{_daae (_cda ,_afb ,_dfed ,_gbbf );
};if _afb .DrawAlignmentReticle {_fea :=_afb ;_fea .BorderSize =0.2;_acbe (_cda ,_fea ,_dfed ,_gbbf );};_dfed ,_gbbf =_afb .applyRotation (_cbb ,_dfed ,_gbbf ,_cda );_eee :=_afb .AutoFontSizeFraction *_gbbf ;_gdg ,_dedd :=_feg .GetRuneMetrics (_afb .CheckmarkRune );
if !_dedd {return nil ,_b .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_debf :=_feg .Encoder ();_ffb :=_debf .Encode (string (_afb .CheckmarkRune ));_caf :=_gdg .Wx *_eee /1000.0;_cdb :=705.0;_acdb :=_cdb /1000.0*_eee ;
_bfc :=_efd ;if _afb .MarginLeft !=nil {_bfc =*_afb .MarginLeft ;};_bgd :=1.0;if _caf < _dfed {_bfc =(_dfed -_caf )/2.0;};if _acdb < _gbbf {_bgd =(_gbbf -_acdb )/2.0;};_cda .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_eee ).Add_Td (_bfc ,_bgd ).Add_Tj (*_fg .MakeStringFromBytes (_ffb )).Add_ET ().Add_Q ();
_gdc .Resources =_fa .NewPdfPageResources ();_gdc .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_feg .ToPdfObject ());_gdc .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_fgae ,_bbf });_gdc .SetContentStream (_cda .Bytes (),_dfg ());};_aed :=_fa .NewXObjectForm ();
{_aee :=_ac .NewContentCreator ();if _afb .BorderSize > 0{_daae (_aee ,_afb ,_dfed ,_gbbf );};_aed .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_fgae ,_bbf });_aed .SetContentStream (_aee .Bytes (),_dfg ());};_fdaea :=_fg .MakeDict ();_fdaea .Set ("\u004f\u0066\u0066",_aed .ToPdfObject ());
_fdaea .Set ("\u0059\u0065\u0073",_gdc .ToPdfObject ());_cag :=_fg .MakeDict ();_cag .Set ("\u004e",_fdaea );return _cag ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_cbaa FieldAppearance )WrapContentStream (page *_fa .PdfPage )error {_ffgb ,_eceb :=page .GetAllContentStreams ();if _eceb !=nil {return _eceb ;};_eed :=_ac .NewContentStreamParser (_ffgb );_cbddc ,_eceb :=_eed .Parse ();if _eceb !=nil {return _eceb ;
};_cbddc .WrapIfNeeded ();_dedc :=[]string {_cbddc .String ()};return page .SetContentStreams (_dedc ,_dfg ());};func _cbbb (_bad [][]_fe .CubicBezierCurve ,_beb *_fa .PdfColorDeviceRGB ,_fdab float64 )([]byte ,*_fa .PdfRectangle ,error ){_eafg :=_ac .NewContentCreator ();
_eafg .Add_q ().SetStrokingColor (_beb ).Add_w (_fdab );_bfccf :=_fe .NewCubicBezierPath ();for _ ,_cadd :=range _bad {_bfccf .Curves =append (_bfccf .Curves ,_cadd ...);for _gbfb ,_gdbe :=range _cadd {if _gbfb ==0{_eafg .Add_m (_gdbe .P0 .X ,_gdbe .P0 .Y );
}else {_eafg .Add_l (_gdbe .P0 .X ,_gdbe .P0 .Y );};_eafg .Add_c (_gdbe .P1 .X ,_gdbe .P1 .Y ,_gdbe .P2 .X ,_gdbe .P2 .Y ,_gdbe .P3 .X ,_gdbe .P3 .Y );};};_eafg .Add_S ().Add_Q ();return _eafg .Bytes (),_bfccf .GetBoundingBox ().ToPdfRectangle (),nil ;
};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_fa .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_fa .NewPdfColorDeviceGray (0),BorderColor :_fa .NewPdfColorDeviceGray (0),FillColor :_fa .NewPdfColorDeviceGray (1),Encoder :_fg .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _fa .PdfColor ;FillColor _fa .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_cca *AppearanceStyle ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_fa .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _fe .LineEndingStyle ;LineEndingStyle2 _fe .LineEndingStyle ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_fa .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _fa .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _fa .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _fa .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _d .Image ;

// Image represents the image used for the signature appearance.
Image _d .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _fg .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _gcea (_afc *_fa .PdfAnnotationWidget ,_cf *_fa .PdfFieldText ,_fad *_fa .PdfPageResources ,_gcd AppearanceStyle )(*_fg .PdfObjectDictionary ,error ){_dgbc :=_fa .NewPdfPageResources ();_aga ,_dfb :=_fg .GetArray (_afc .Rect );
if !_dfb {return nil ,_b .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fga ,_deb :=_fa .NewPdfRectangle (*_aga );if _deb !=nil {return nil ,_deb ;};_gdb ,_ded :=_fga .Width (),_fga .Height ();_dbd ,_dfe :=_gdb ,_ded ;_efe ,_dec :=_fg .GetDict (_afc .MK );
if _dec {_cfb ,_ :=_fg .GetDict (_afc .BS );_afa :=_gcd .applyAppearanceCharacteristics (_efe ,_cfb ,nil );if _afa !=nil {return nil ,_afa ;};};_dc ,_deb :=_ac .NewContentStreamParser (_eef (_cf .PdfField )).Parse ();if _deb !=nil {return nil ,_deb ;};
_dbfe :=_ac .NewContentCreator ();if _gcd .BorderSize > 0{_daae (_dbfe ,_gcd ,_gdb ,_ded );};if _gcd .DrawAlignmentReticle {_cfe :=_gcd ;_cfe .BorderSize =0.2;_acbe (_dbfe ,_cfe ,_gdb ,_ded );};_dbfe .Add_BMC ("\u0054\u0078");_dbfe .Add_q ();_gdb ,_ded =_gcd .applyRotation (_efe ,_gdb ,_ded ,_dbfe );
_dbfe .Add_BT ();_egb ,_fbe ,_deb :=_gcd .processDA (_cf .PdfField ,_dc ,_fad ,_dgbc ,_dbfe );if _deb !=nil {return nil ,_deb ;};_age :=_egb .Font ;_cd :=_egb .Size ;_gb :=_fg .MakeName (_egb .Name );_cac :=_cd ==0;if _cac &&_fbe {_cd =_ded *_gcd .AutoFontSizeFraction ;
};_cde :=_age .Encoder ();if _cde ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_cde =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_eaa ,_deb :=_age .GetFontDescriptor ();if _deb !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _dab string ;if _ggeg ,_ggd :=_fg .GetString (_cf .V );_ggd {_dab =_ggeg .Decoded ();};if len (_dab )==0{return nil ,nil ;};_deac :=[]string {_dab };_agf :=false ;if _cf .Flags ().Has (_fa .FieldFlagMultiline ){_agf =true ;_dab =_ff .Replace (_dab ,"\u000d\u000a","\u000a",-1);
_dab =_ff .Replace (_dab ,"\u000d","\u000a",-1);_deac =_ff .Split (_dab ,"\u000a");};_deab :=make ([]string ,len (_deac ));copy (_deab ,_deac );_gfa :=_gcd .MultilineLineHeight ;_cfc :=0.0;_cgg :=0;if _cde !=nil {for _cd >=0{_fgg :=make ([]string ,len (_deac ));
copy (_fgg ,_deac );_ddc :=make ([]string ,len (_deab ));copy (_ddc ,_deab );_cfc =0.0;_cgg =0;_edf :=len (_fgg );_bg :=0;for _bg < _edf {var _abd float64 ;_ffc :=-1;_dgba :=_efd ;if _gcd .MarginLeft !=nil {_dgba =*_gcd .MarginLeft ;};for _ddce ,_ffcg :=range _fgg [_bg ]{if _ffcg ==' '{_ffc =_ddce ;
};_agabe ,_aad :=_age .GetRuneMetrics (_ffcg );if !_aad {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ffcg );
continue ;};_abd =_dgba ;_dgba +=_agabe .Wx ;if _agf &&!_cac &&_cd *_dgba /1000.0> _gdb {_bcf :=_ddce ;_dfa :=_ddce ;if _ffc > 0{_bcf =_ffc +1;_dfa =_ffc ;};_bcd :=_fgg [_bg ][_bcf :];_gbc :=_ddc [_bg ][_bcf :];if _bg < len (_fgg )-1{_fgg =append (_fgg [:_bg +1],_fgg [_bg :]...);
_fgg [_bg +1]=_bcd ;_ddc =append (_ddc [:_bg +1],_ddc [_bg :]...);_ddc [_bg +1]=_gbc ;}else {_fgg =append (_fgg ,_bcd );_ddc =append (_ddc ,_gbc );};_fgg [_bg ]=_fgg [_bg ][0:_dfa ];_ddc [_bg ]=_ddc [_bg ][0:_dfa ];_edf ++;_dgba =_abd ;break ;};};if _dgba > _cfc {_cfc =_dgba ;
};_fgg [_bg ]=string (_cde .Encode (_fgg [_bg ]));if len (_fgg [_bg ])> 0{_cgg ++;};_bg ++;};_edfe :=_cd ;if _cgg > 1{_edfe *=_gfa ;};_gfg :=float64 (_cgg )*_edfe ;if _cac ||_gfg <=_ded {_deac =_fgg ;_deab =_ddc ;break ;};_cd --;};};_ccd :=_efd ;if _gcd .MarginLeft !=nil {_ccd =*_gcd .MarginLeft ;
};if _cd ==0||_cac &&_cfc > 0&&_ccd +_cfc *_cd /1000.0> _gdb {_cd =0.95*1000.0*(_gdb -_ccd )/_cfc ;};_ddcd :=_cg ;{if _daa ,_agec :=_fg .GetIntVal (_cf .Q );_agec {switch _daa {case 0:_ddcd =_cg ;case 1:_ddcd =_db ;case 2:_ddcd =_eac ;default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_daa );
};};};_afd :=_cd ;if _agf &&_cgg > 1{_afd =_gfa *_cd ;};var _cba float64 ;if _eaa !=nil {_cba ,_deb =_eaa .GetCapHeight ();if _deb !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_deb );
};};if int (_cba )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cba =1000;};_fdc :=_cba /1000.0*_cd ;_eab :=0.0;{_eae :=float64 (_cgg )*_afd ;if _cac &&_eab +_eae > _ded {_cd =0.95*(_ded -_eab )/float64 (_cgg );_afd =_cd ;if _agf &&_cgg > 1{_afd =_gfa *_cd ;};_fdc =_cba /1000.0*_cd ;_eae =float64 (_cgg )*_afd ;};if _ded > _eae {if _agf {if _gcd .MultilineVAlignMiddle {_acf :=(_ded -(_eae +_fdc ))/2.0;
_ebf :=_acf +_eae +_fdc -_afd ;_eab =_ebf ;if _cgg > 1{_eab =_eab +(_eae /_cd *float64 (_cgg ))-_afd -_fdc ;};if _eab < _eae {_eab =(_ded -_fdc )/2.0;};}else {_eab =_ded -_afd ;if _eab > _cd {_bd :=0.0;if _agf &&_gcd .MultilineLineHeight > 1&&_cgg > 1{_bd =_gcd .MultilineLineHeight -1;
};_eab -=_cd *(0.5-_bd );};};}else {_eab =(_ded -_fdc )/2.0;};};};_dbfe .Add_Tf (*_gb ,_cd );_dbfe .Add_Td (_ccd ,_eab );_agc :=_ccd ;_fda :=_ccd ;for _dbc ,_abf :=range _deac {_ege :=0.0;for _ ,_fgf :=range _deab [_dbc ]{_dfeg ,_cfcd :=_age .GetRuneMetrics (_fgf );
if !_cfcd {continue ;};_ege +=_dfeg .Wx ;};_edb :=_ege /1000.0*_cd ;_abb :=_gdb -_edb ;var _acbd float64 ;switch _ddcd {case _cg :_acbd =_agc ;case _db :_acbd =_abb /2;case _eac :_acbd =_abb ;};_ccd =_acbd -_fda ;if _ccd > 0.0{_dbfe .Add_Td (_ccd ,0);};
_fda =_acbd ;_dbfe .Add_Tj (*_fg .MakeString (_abf ));if _dbc < len (_deac )-1{_dbfe .Add_Td (0,-_cd *_gfa );};};_dbfe .Add_ET ();_dbfe .Add_Q ();_dbfe .Add_EMC ();_eag :=_fa .NewXObjectForm ();_eag .Resources =_dgbc ;_eag .BBox =_fg .MakeArrayFromFloats ([]float64 {0,0,_dbd ,_dfe });
_eag .SetContentStream (_dbfe .Bytes (),_dfg ());_fdae :=_fg .MakeDict ();_fdae .Set ("\u004e",_eag .ToPdfObject ());return _fdae ,nil ;};func (_dea *AppearanceFont )fillName (){if _dea .Font ==nil ||_dea .Name !=""{return ;};_ab :=_dea .Font .FontDescriptor ();
if _ab ==nil ||_ab .FontName ==nil {return ;};_dea .Name =_ab .FontName .String ();};func _acbe (_ade *_ac .ContentCreator ,_abe AppearanceStyle ,_fcfc ,_fadb float64 ){_ade .Add_q ().Add_re (0,0,_fcfc ,_fadb ).Add_re (0,_fadb /2,_fcfc ,_fadb /2).Add_re (0,0,_fcfc ,_fadb ).Add_re (_fcfc /2,0,_fcfc /2,_fadb ).Add_w (_abe .BorderSize ).SetStrokingColor (_abe .BorderColor ).SetNonStrokingColor (_abe .FillColor ).Add_B ().Add_Q ();
};

// SetStyle applies appearance `style` to `fa`.
func (_dcag *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_dcag ._cca =&style };

// SetStyle applies appearance `style` to `fa`.
func (_acb *FieldAppearance )SetStyle (style AppearanceStyle ){_acb ._dgb =&style };

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_fa .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_fa .PdfFieldSignature ,error ){if signature ==nil {return nil ,_b .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_abbf ,_dagf :=_bbcb (lines ,opts );if _dagf !=nil {return nil ,_dagf ;};_aac :=_fa .NewPdfFieldSignature (signature );_aac .Rect =_fg .MakeArrayFromFloats (opts .Rect );_aac .AP =_abbf ;return _aac ,nil ;};func _aefb (_cdbf *InkAnnotationDef )(*_fg .PdfObjectDictionary ,*_fa .PdfRectangle ,error ){_aeg :=_fa .NewXObjectForm ();
_fac ,_bdbc ,_gcf :=_edefe (_cdbf );if _gcf !=nil {return nil ,nil ,_gcf ;};_gcf =_aeg .SetContentStream (_fac ,nil );if _gcf !=nil {return nil ,nil ,_gcf ;};_aeg .BBox =_bdbc .ToPdfObject ();_aeg .Resources =_fa .NewPdfPageResources ();_aeg .Resources .ProcSet =_fg .MakeArray (_fg .MakeName ("\u0050\u0044\u0046"));
_ebbba :=_fg .MakeDict ();_ebbba .Set ("\u004e",_aeg .ToPdfObject ());return _ebbba ,_bdbc ,nil ;};