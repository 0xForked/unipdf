//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_e "bytes";_bd "errors";_bg "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/contentstream";_ag "github.com/unidoc/unipdf/v3/contentstream/draw";_db "github.com/unidoc/unipdf/v3/core";_bgc "github.com/unidoc/unipdf/v3/internal/textencoding";_a "github.com/unidoc/unipdf/v3/model";_g "math";_d "strings";_ff "unicode";);

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _a .PdfColor ;FillColor _a .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func _ddeb (_fgfd LineAnnotationDef )(*_db .PdfObjectDictionary ,*_a .PdfRectangle ,error ){_fefg :=_a .NewXObjectForm ();_fefg .Resources =_a .NewPdfPageResources ();_ecd :="";if _fgfd .Opacity < 1.0{_eeed :=_db .MakeDict ();_eeed .Set ("\u0063\u0061",_db .MakeFloat (_fgfd .Opacity ));_ccce :=_fefg .Resources .AddExtGState ("\u0067\u0073\u0031",_eeed );if _ccce !=nil {_bg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_ccce ;};_ecd ="\u0067\u0073\u0031";};_cgd ,_cab ,_gce ,_fdac :=_dcdga (_fgfd ,_ecd );if _fdac !=nil {return nil ,nil ,_fdac ;};_fdac =_fefg .SetContentStream (_cgd ,nil );if _fdac !=nil {return nil ,nil ,_fdac ;};_fefg .BBox =_cab .ToPdfObject ();_daf :=_db .MakeDict ();_daf .Set ("\u004e",_fefg .ToPdfObject ());return _daf ,_gce ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_egfa FieldAppearance )WrapContentStream (page *_a .PdfPage )error {_bbff ,_dcee :=page .GetAllContentStreams ();if _dcee !=nil {return _dcee ;};_cgf :=_f .NewContentStreamParser (_bbff );_ccad ,_dcee :=_cgf .Parse ();if _dcee !=nil {return _dcee ;};_ccad .WrapIfNeeded ();_acc :=[]string {_ccad .String ()};return page .SetContentStreams (_acc ,_eged ());};func (_cfag *AppearanceStyle )applyRotation (_begg *_db .PdfObjectDictionary ,_aae ,_eed float64 ,_dfac *_f .ContentCreator )(float64 ,float64 ){if !_cfag .AllowMK {return _aae ,_eed ;};if _begg ==nil {return _aae ,_eed ;};_facc ,_ :=_db .GetNumberAsFloat (_begg .Get ("\u0052"));if _facc ==0{return _aae ,_eed ;};_cead :=-_facc ;_edc :=_ag .Path {Points :[]_ag .Point {_ag .NewPoint (0,0).Rotate (_cead ),_ag .NewPoint (_aae ,0).Rotate (_cead ),_ag .NewPoint (0,_eed ).Rotate (_cead ),_ag .NewPoint (_aae ,_eed ).Rotate (_cead )}}.GetBoundingBox ();_dfac .RotateDeg (_facc );_dfac .Translate (_edc .X ,_edc .Y );return _edc .Width ,_edc .Height ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};func _bba (_eab *_a .PdfAnnotationWidget ,_bbab *_a .PdfFieldButton ,_ecb *_a .PdfPageResources ,_dfg AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_gee ,_cda :=_db .GetArray (_eab .Rect );if !_cda {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cccd ,_ddd :=_a .NewPdfRectangle (*_gee );if _ddd !=nil {return nil ,_ddd ;};_cdgd ,_gcab :=_cccd .Width (),_cccd .Height ();_fgca ,_fgf :=_cdgd ,_gcab ;_bg .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_eab .BS );_ggc ,_ddd :=_a .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _ddd !=nil {return nil ,_ddd ;};_bec ,_dfd :=_db .GetDict (_eab .MK );if _dfd {_gba ,_ :=_db .GetDict (_eab .BS );_eaf :=_dfg .applyAppearanceCharacteristics (_bec ,_gba ,_ggc );if _eaf !=nil {return nil ,_eaf ;};};_gbf :=_a .NewXObjectForm ();{_efbb :=_f .NewContentCreator ();if _dfg .BorderSize > 0{_bbda (_efbb ,_dfg ,_cdgd ,_gcab );};if _dfg .DrawAlignmentReticle {_dcaf :=_dfg ;_dcaf .BorderSize =0.2;_cbef (_efbb ,_dcaf ,_cdgd ,_gcab );};_cdgd ,_gcab =_dfg .applyRotation (_bec ,_cdgd ,_gcab ,_efbb );_aace :=_dfg .AutoFontSizeFraction *_gcab ;_ggd ,_gfag :=_ggc .GetRuneMetrics (_dfg .CheckmarkRune );if !_gfag {return nil ,_bd .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fbe :=_ggc .Encoder ();_fbg :=_fbe .Encode (string (_dfg .CheckmarkRune ));_cdb :=_ggd .Wx *_aace /1000.0;_ccgf :=705.0;_ggda :=_ccgf /1000.0*_aace ;_dcb :=2.0;_fac :=1.0;if _cdb < _cdgd {_dcb =(_cdgd -_cdb )/2.0;};if _ggda < _gcab {_fac =(_gcab -_ggda )/2.0;};_efbb .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_aace ).Add_Td (_dcb ,_fac ).Add_Tj (*_db .MakeStringFromBytes (_fbg )).Add_ET ().Add_Q ();_gbf .Resources =_a .NewPdfPageResources ();_gbf .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_ggc .ToPdfObject ());_gbf .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_fgca ,_fgf });_gbf .SetContentStream (_efbb .Bytes (),_eged ());};_ggb :=_a .NewXObjectForm ();{_ecg :=_f .NewContentCreator ();if _dfg .BorderSize > 0{_bbda (_ecg ,_dfg ,_cdgd ,_gcab );};_ggb .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_fgca ,_fgf });_ggb .SetContentStream (_ecg .Bytes (),_eged ());};_cccdc :=_db .MakeDict ();_cccdc .Set ("\u004f\u0066\u0066",_ggb .ToPdfObject ());_cccdc .Set ("\u0059\u0065\u0073",_gbf .ToPdfObject ());_bea :=_db .MakeDict ();_bea .Set ("\u004e",_cccdc );return _bea ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_a .PdfAnnotation ,error ){_fe :=_a .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_fc ,_bdc ,_c :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_fe .C =_db .MakeArrayFromFloats ([]float64 {_fc ,_bdc ,_c });_bgg :=_a .NewBorderStyle ();_bgg .SetBorderWidth (circDef .BorderWidth );_fe .BS =_bgg .ToPdfObject ();};if circDef .FillEnabled {_fd ,_fed ,_bf :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_fe .IC =_db .MakeArrayFromFloats ([]float64 {_fd ,_fed ,_bf });}else {_fe .IC =_db .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_fe .CA =_db .MakeFloat (circDef .Opacity );};_eb ,_ab ,_ef :=_gc (circDef );if _ef !=nil {return nil ,_ef ;};_fe .AP =_eb ;_fe .Rect =_db .MakeArrayFromFloats ([]float64 {_ab .Llx ,_ab .Lly ,_ab .Urx ,_ab .Ury });return _fe .PdfAnnotation ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_a .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_a .PdfFieldSignature ,error ){if signature ==nil {return nil ,_bd .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_egbd ,_fda :=_cfba (lines ,opts );if _fda !=nil {return nil ,_fda ;};_dbeca :=_a .NewPdfFieldSignature (signature );_dbeca .Rect =_db .MakeArrayFromFloats (opts .Rect );_dbeca .AP =_egbd ;return _dbeca ,nil ;};func _gb (_bb CircleAnnotationDef ,_dbe string )([]byte ,*_a .PdfRectangle ,*_a .PdfRectangle ,error ){_bc :=_ag .Circle {X :_bb .X ,Y :_bb .Y ,Width :_bb .Width ,Height :_bb .Height ,FillEnabled :_bb .FillEnabled ,FillColor :_bb .FillColor ,BorderEnabled :_bb .BorderEnabled ,BorderWidth :_bb .BorderWidth ,BorderColor :_bb .BorderColor ,Opacity :_bb .Opacity };_eg ,_cf ,_bff :=_bc .Draw (_dbe );if _bff !=nil {return nil ,nil ,nil ,_bff ;};_ga :=&_a .PdfRectangle {};_ga .Llx =_bb .X +_cf .Llx ;_ga .Lly =_bb .Y +_cf .Lly ;_ga .Urx =_bb .X +_cf .Urx ;_ga .Ury =_bb .Y +_cf .Ury ;return _eg ,_cf ,_ga ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_fcd FieldAppearance )GenerateAppearanceDict (form *_a .PdfAcroForm ,field *_a .PdfField ,wa *_a .PdfAnnotationWidget )(*_db .PdfObjectDictionary ,error ){_bg .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_bbf :=field .GetContext ().(*_a .PdfFieldText );_be ,_cbg :=_db .GetDict (wa .AP );if _cbg &&_fcd .OnlyIfMissing &&(!_bbf ||!_fcd .RegenerateTextFields ){_bg .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _be ,nil ;};if form .DR ==nil {form .DR =_a .NewPdfPageResources ();};switch _af :=field .GetContext ().(type ){case *_a .PdfFieldText :_ca :=_af ;switch {case _ca .Flags ().Has (_a .FieldFlagPassword ):return nil ,nil ;case _ca .Flags ().Has (_a .FieldFlagFileSelect ):return nil ,nil ;case _ca .Flags ().Has (_a .FieldFlagComb ):if _ca .MaxLen !=nil {_gd ,_cd :=_gea (wa ,_ca ,form .DR ,_fcd .Style ());if _cd !=nil {return nil ,_cd ;};return _gd ,nil ;};};_de ,_efe :=_gf (wa ,_ca ,form .DR ,_fcd .Style ());if _efe !=nil {return nil ,_efe ;};return _de ,nil ;case *_a .PdfFieldButton :_ec :=_af ;if _ec .IsCheckbox (){_ead ,_fg :=_bba (wa ,_ec ,form .DR ,_fcd .Style ());if _fg !=nil {return nil ,_fg ;};return _ead ,nil ;};_bg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_ec .GetType ());case *_a .PdfFieldChoice :_ddb :=_af ;switch {case _ddb .Flags ().Has (_a .FieldFlagCombo ):_gac ,_ge :=_aabg (form ,wa ,_ddb ,_fcd .Style ());if _ge !=nil {return nil ,_ge ;};return _gac ,nil ;default:_bg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_ddb .Flags ().String ());};default:_bg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_af );};return nil ,nil ;};func _cbef (_ccdg *_f .ContentCreator ,_fefd AppearanceStyle ,_eee ,_bcd float64 ){_ccdg .Add_q ().Add_re (0,0,_eee ,_bcd ).Add_re (0,_bcd /2,_eee ,_bcd /2).Add_re (0,0,_eee ,_bcd ).Add_re (_eee /2,0,_eee /2,_bcd ).Add_w (_fefd .BorderSize ).SetStrokingColor (_fefd .BorderColor ).SetNonStrokingColor (_fefd .FillColor ).Add_B ().Add_Q ();};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_a .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_a .PdfFieldButton ,error ){if page ==nil {return nil ,_bd .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_afae ,_afcc :=_a .NewStandard14Font (_a .ZapfDingbatsName );if _afcc !=nil {return nil ,_afcc ;};_dage :=_a .NewPdfField ();_ddg :=&_a .PdfFieldButton {};_dage .SetContext (_ddg );_ddg .PdfField =_dage ;_ddg .T =_db .MakeString (name );_ddg .SetType (_a .ButtonTypeCheckbox );_aeac :="\u004f\u0066\u0066";if opt .Checked {_aeac ="\u0059\u0065\u0073";};_ddg .V =_db .MakeName (_aeac );_faff :=_a .NewPdfAnnotationWidget ();_faff .Rect =_db .MakeArrayFromFloats (rect );_faff .P =page .ToPdfObject ();_faff .F =_db .MakeInteger (4);_faff .Parent =_ddg .ToPdfObject ();_adgc :=rect [2]-rect [0];_cccb :=rect [3]-rect [1];var _gece _e .Buffer ;_gece .WriteString ("\u0071\u000a");_gece .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_gece .WriteString ("\u0042\u0054\u000a");_gece .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_gece .WriteString ("\u0045\u0054\u000a");_gece .WriteString ("\u0051\u000a");_fgab :=_f .NewContentCreator ();_fgab .Add_q ();_fgab .Add_rg (0,0,1);_fgab .Add_BT ();_fgab .Add_Tf (*_db .MakeName ("\u005a\u0061\u0044\u0062"),12);_fgab .Add_Td (0,0);_fgab .Add_ET ();_fgab .Add_Q ();_aeda :=_a .NewXObjectForm ();_aeda .SetContentStream (_fgab .Bytes (),_db .NewRawEncoder ());_aeda .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_adgc ,_cccb });_aeda .Resources =_a .NewPdfPageResources ();_aeda .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_afae .ToPdfObject ());_fgab =_f .NewContentCreator ();_fgab .Add_q ();_fgab .Add_re (0,0,_adgc ,_cccb );_fgab .Add_W ().Add_n ();_fgab .Add_rg (0,0,1);_fgab .Translate (0,3.0);_fgab .Add_BT ();_fgab .Add_Tf (*_db .MakeName ("\u005a\u0061\u0044\u0062"),12);_fgab .Add_Td (0,0);_fgab .Add_Tj (*_db .MakeString ("\u0034"));_fgab .Add_ET ();_fgab .Add_Q ();_edb :=_a .NewXObjectForm ();_edb .SetContentStream (_fgab .Bytes (),_db .NewRawEncoder ());_edb .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_adgc ,_cccb });_edb .Resources =_a .NewPdfPageResources ();_edb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_afae .ToPdfObject ());_aad :=_db .MakeDict ();_aad .Set ("\u004f\u0066\u0066",_aeda .ToPdfObject ());_aad .Set ("\u0059\u0065\u0073",_edb .ToPdfObject ());_bffd :=_db .MakeDict ();_bffd .Set ("\u004e",_aad );_faff .AP =_bffd ;_faff .AS =_db .MakeName (_aeac );_ddg .Annotations =append (_ddg .Annotations ,_faff );return _ddg ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_a .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_a .PdfFieldText ,error ){if page ==nil {return nil ,_bd .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_geee :=_a .NewPdfField ();_efcc :=&_a .PdfFieldText {};_geee .SetContext (_efcc );_efcc .PdfField =_geee ;_efcc .T =_db .MakeString (name );if opt .MaxLen > 0{_efcc .MaxLen =_db .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_efcc .V =_db .MakeString (opt .Value );};_bdag :=_a .NewPdfAnnotationWidget ();_bdag .Rect =_db .MakeArrayFromFloats (rect );_bdag .P =page .ToPdfObject ();_bdag .F =_db .MakeInteger (4);_bdag .Parent =_efcc .ToPdfObject ();_efcc .Annotations =append (_efcc .Annotations ,_bdag );return _efcc ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_a .PdfAnnotation ,error ){_dde :=_a .NewPdfAnnotationLine ();_dde .L =_db .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_afca :=_db .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_ag .LineEndingStyleArrow {_afca =_db .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_cff :=_db .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_ag .LineEndingStyleArrow {_cff =_db .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_dde .LE =_db .MakeArray (_afca ,_cff );if lineDef .Opacity < 1.0{_dde .CA =_db .MakeFloat (lineDef .Opacity );};_dbbf ,_abca ,_aaed :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_dde .IC =_db .MakeArrayFromFloats ([]float64 {_dbbf ,_abca ,_aaed });_dde .C =_db .MakeArrayFromFloats ([]float64 {_dbbf ,_abca ,_aaed });_edegb :=_a .NewBorderStyle ();_edegb .SetBorderWidth (lineDef .LineWidth );_dde .BS =_edegb .ToPdfObject ();_aee ,_bfg ,_acg :=_ddeb (lineDef );if _acg !=nil {return nil ,_acg ;};_dde .AP =_aee ;_dde .Rect =_db .MakeArrayFromFloats ([]float64 {_bfg .Llx ,_bfg .Lly ,_bfg .Urx ,_bfg .Ury });return _dde .PdfAnnotation ,nil ;};func _gc (_cb CircleAnnotationDef )(*_db .PdfObjectDictionary ,*_a .PdfRectangle ,error ){_bgf :=_a .NewXObjectForm ();_bgf .Resources =_a .NewPdfPageResources ();_efb :="";if _cb .Opacity < 1.0{_gg :=_db .MakeDict ();_gg .Set ("\u0063\u0061",_db .MakeFloat (_cb .Opacity ));_gg .Set ("\u0043\u0041",_db .MakeFloat (_cb .Opacity ));_efc :=_bgf .Resources .AddExtGState ("\u0067\u0073\u0031",_gg );if _efc !=nil {_bg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_efc ;};_efb ="\u0067\u0073\u0031";};_dd ,_cc ,_aa ,_ea :=_gb (_cb ,_efb );if _ea !=nil {return nil ,nil ,_ea ;};_ea =_bgf .SetContentStream (_dd ,nil );if _ea !=nil {return nil ,nil ,_ea ;};_bgf .BBox =_cc .ToPdfObject ();_eac :=_db .MakeDict ();_eac .Set ("\u004e",_bgf .ToPdfObject ());return _eac ,_aa ,nil ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_bdcf *AppearanceStyle ;};func _dcdga (_bgd LineAnnotationDef ,_gdb string )([]byte ,*_a .PdfRectangle ,*_a .PdfRectangle ,error ){_cbbc :=_ag .Line {X1 :0,Y1 :0,X2 :_bgd .X2 -_bgd .X1 ,Y2 :_bgd .Y2 -_bgd .Y1 ,LineColor :_bgd .LineColor ,Opacity :_bgd .Opacity ,LineWidth :_bgd .LineWidth ,LineEndingStyle1 :_bgd .LineEndingStyle1 ,LineEndingStyle2 :_bgd .LineEndingStyle2 };_ccdge ,_gcg ,_fcgb :=_cbbc .Draw (_gdb );if _fcgb !=nil {return nil ,nil ,nil ,_fcgb ;};_ffbe :=&_a .PdfRectangle {};_ffbe .Llx =_bgd .X1 +_gcg .Llx ;_ffbe .Lly =_bgd .Y1 +_gcg .Lly ;_ffbe .Urx =_bgd .X1 +_gcg .Urx ;_ffbe .Ury =_bgd .Y1 +_gcg .Ury ;return _ccdge ,_gcg ,_ffbe ,nil ;};func _cbe (_gabb *_a .PdfField )string {if _gabb ==nil {return "";};_ege ,_egbe :=_gabb .GetContext ().(*_a .PdfFieldText );if !_egbe {return _cbe (_gabb .Parent );};if _ege .DA !=nil {return _ege .DA .Str ();};return _cbe (_ege .Parent );};type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_a .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_a .PdfColorDeviceRGB ;Opacity float64 ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_a .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_a .NewPdfColorDeviceGray (0),BorderColor :_a .NewPdfColorDeviceGray (0),FillColor :_a .NewPdfColorDeviceGray (1)};};

// SetStyle applies appearance `style` to `fa`.
func (_ad *FieldAppearance )SetStyle (style AppearanceStyle ){_ad ._bdcf =&style };func _bead (_eaebc RectangleAnnotationDef ,_edegf string )([]byte ,*_a .PdfRectangle ,*_a .PdfRectangle ,error ){_eeg :=_ag .Rectangle {X :0,Y :0,Width :_eaebc .Width ,Height :_eaebc .Height ,FillEnabled :_eaebc .FillEnabled ,FillColor :_eaebc .FillColor ,BorderEnabled :_eaebc .BorderEnabled ,BorderWidth :2*_eaebc .BorderWidth ,BorderColor :_eaebc .BorderColor ,Opacity :_eaebc .Opacity };_bce ,_aeb ,_aacd :=_eeg .Draw (_edegf );if _aacd !=nil {return nil ,nil ,nil ,_aacd ;};_dcgf :=&_a .PdfRectangle {};_dcgf .Llx =_eaebc .X +_aeb .Llx ;_dcgf .Lly =_eaebc .Y +_aeb .Lly ;_dcgf .Urx =_eaebc .X +_aeb .Urx ;_dcgf .Ury =_eaebc .Y +_aeb .Ury ;return _bce ,_aeb ,_dcgf ,nil ;};func _eged ()_db .StreamEncoder {return _db .NewFlateEncoder ()};func (_eec *AppearanceStyle )applyAppearanceCharacteristics (_gdc *_db .PdfObjectDictionary ,_cga *_db .PdfObjectDictionary ,_bagb *_a .PdfFont )error {if !_eec .AllowMK {return nil ;};if _cga !=nil {if _ccfg ,_adf :=_db .GetNumberAsFloat (_cga .Get ("\u0057"));_adf ==nil {_eec .BorderSize =_ccfg ;};};if CA ,_edf :=_db .GetString (_gdc .Get ("\u0043\u0041"));_edf &&_bagb !=nil {_gda :=CA .Bytes ();if len (_gda )!=0{_acd :=[]rune (_bagb .Encoder ().Decode (_gda ));if len (_acd )==1{_eec .CheckmarkRune =_acd [0];};};};if BC ,_bee :=_db .GetArray (_gdc .Get ("\u0042\u0043"));_bee {_edg ,_dbb :=BC .ToFloat64Array ();if _dbb !=nil {return _dbb ;};switch len (_edg ){case 1:_eec .BorderColor =_a .NewPdfColorDeviceGray (_edg [0]);case 3:_eec .BorderColor =_a .NewPdfColorDeviceRGB (_edg [0],_edg [1],_edg [2]);case 4:_eec .BorderColor =_a .NewPdfColorDeviceCMYK (_edg [0],_edg [1],_edg [2],_edg [3]);default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_edg ));};};if BG ,_bfe :=_db .GetArray (_gdc .Get ("\u0042\u0047"));_bfe {_dcg ,_cbed :=BG .ToFloat64Array ();if _cbed !=nil {return _cbed ;};switch len (_dcg ){case 1:_eec .FillColor =_a .NewPdfColorDeviceGray (_dcg [0]);case 3:_eec .FillColor =_a .NewPdfColorDeviceRGB (_dcg [0],_dcg [1],_dcg [2]);case 4:_eec .FillColor =_a .NewPdfColorDeviceCMYK (_dcg [0],_dcg [1],_dcg [2],_dcg [3]);default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_dcg ));};};return nil ;};const (_dc quadding =0;_df quadding =1;_ba quadding =2;);

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_gcc FieldAppearance )Style ()AppearanceStyle {if _gcc ._bdcf !=nil {return *_gcc ._bdcf ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_a .NewPdfColorDeviceGray (0),FillColor :_a .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};func (_gfb *AppearanceStyle )processDA (_cbea *_a .PdfField ,_gfc *_f .ContentStreamOperations ,_dagd ,_cfe *_a .PdfPageResources ,_cfec *_f .ContentCreator )(*AppearanceFont ,bool ,error ){var _egge *AppearanceFont ;var _babe bool ;if _gfb .Fonts !=nil {if _gfb .Fonts .Fallback !=nil {_egge =_gfb .Fonts .Fallback ;};if _faf :=_gfb .Fonts .FieldFallbacks ;_faf !=nil {if _edeg ,_fcg :=_faf [_cbea .PartialName ()];_fcg {_egge =_edeg ;}else if _fae ,_egff :=_cbea .FullName ();_egff ==nil {if _gbe ,_cgg :=_faf [_fae ];_cgg {_egge =_gbe ;};};};_babe =_gfb .Fonts .ForceReplace ;};var _bgcg string ;var _cgc float64 ;var _cefb bool ;if _gfc !=nil {for _ ,_egdd :=range *_gfc {if _egdd .Operand =="\u0054\u0066"&&len (_egdd .Params )==2{if _beef ,_dbac :=_db .GetNameVal (_egdd .Params [0]);_dbac {_bgcg =_beef ;};if _fcba ,_bcdf :=_db .GetNumberAsFloat (_egdd .Params [1]);_bcdf ==nil {_cgc =_fcba ;};_cefb =true ;continue ;};_cfec .AddOperand (*_egdd );};};var _fca *AppearanceFont ;var _aef _db .PdfObject ;if _babe &&_egge !=nil {_fca =_egge ;}else {if _dagd !=nil &&_bgcg !=""{if _dab ,_gec :=_dagd .GetFontByName (*_db .MakeName (_bgcg ));_gec {if _aeg ,_ecgf :=_a .NewPdfFontFromPdfObject (_dab );_ecgf ==nil {_aef =_dab ;_fca =&AppearanceFont {Name :_bgcg ,Font :_aeg ,Size :_cgc };}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_ecgf );};};};if _fca ==nil &&_egge !=nil {_fca =_egge ;};if _fca ==nil {_feda ,_eagf :=_a .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _eagf !=nil {return nil ,false ,_eagf ;};_fca =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_feda ,Size :_cgc };};};_geae :=*_db .MakeName (_fca .Name );if _aef ==nil {_aef =_fca .Font .ToPdfObject ();};if _dagd !=nil &&!_dagd .HasFontByName (_geae ){_dagd .SetFontByName (_geae ,_aef );};if _cfe !=nil &&!_cfe .HasFontByName (_geae ){_cfe .SetFontByName (_geae ,_aef );};return _fca ,_cefb ,nil ;};func _gea (_dge *_a .PdfAnnotationWidget ,_eaa *_a .PdfFieldText ,_ebc *_a .PdfPageResources ,_bge AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_dgb :=_a .NewPdfPageResources ();_cdde ,_bab :=_db .GetArray (_dge .Rect );if !_bab {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fb ,_ceb :=_a .NewPdfRectangle (*_cdde );if _ceb !=nil {return nil ,_ceb ;};_aaf ,_bgee :=_fb .Width (),_fb .Height ();_cfb ,_fcdc :=_aaf ,_bgee ;_dbdb ,_gab :=_db .GetDict (_dge .MK );if _gab {_bbd ,_ :=_db .GetDict (_dge .BS );_gaa :=_bge .applyAppearanceCharacteristics (_dbdb ,_bbd ,nil );if _gaa !=nil {return nil ,_gaa ;};};_bbe ,_gab :=_db .GetIntVal (_eaa .MaxLen );if !_gab {return nil ,_bd .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _bbe <=0{return nil ,_bd .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gbb :=float64 (_aaf )/float64 (_bbe );_gca ,_ceb :=_f .NewContentStreamParser (_cbe (_eaa .PdfField )).Parse ();if _ceb !=nil {return nil ,_ceb ;};_ggf :=_f .NewContentCreator ();if _bge .BorderSize > 0{_bbda (_ggf ,_bge ,_aaf ,_bgee );};if _bge .DrawAlignmentReticle {_ebb :=_bge ;_ebb .BorderSize =0.2;_cbef (_ggf ,_ebb ,_aaf ,_bgee );};_ggf .Add_BMC ("\u0054\u0078");_ggf .Add_q ();_aaf ,_bgee =_bge .applyRotation (_dbdb ,_aaf ,_bgee ,_ggf );_ggf .Add_BT ();_eae ,_gbg ,_ceb :=_bge .processDA (_eaa .PdfField ,_gca ,_ebc ,_dgb ,_ggf );if _ceb !=nil {return nil ,_ceb ;};_dbf :=_eae .Font ;_fggb :=_db .MakeName (_eae .Name );_abc :=_eae .Size ;_ffa :=_abc ==0;if _ffa &&_gbg {_abc =_bgee *_bge .AutoFontSizeFraction ;};_dbfd :=_dbf .Encoder ();if _dbfd ==nil {_bg .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_dbfd =_bgc .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _fba string ;if _egfg ,_dga :=_db .GetString (_eaa .V );_dga {_fba =_egfg .Decoded ();};_ggf .Add_Tf (*_fggb ,_abc );var _ffb float64 ;for _ ,_fbag :=range _fba {_eba ,_eaab :=_dbf .GetRuneMetrics (_fbag );if !_eaab {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_fbag );continue ;};_eag :=_eba .Wy ;if int (_eag )<=0{_eag =_eba .Wx ;};if _eag > _ffb {_ffb =_eag ;};};if int (_ffb )==0{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_ffb =1000;};_dca ,_ceb :=_dbf .GetFontDescriptor ();if _ceb !=nil {_bg .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _bde float64 ;if _dca !=nil {_bde ,_ceb =_dca .GetCapHeight ();if _ceb !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ceb );};};if int (_bde )<=0{_bg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_bde =1000.0;};_ac :=_bde /1000.0*_abc ;_gae :=0.0;_bgb :=1.0*_abc *(_ffb /1000.0);{_dbec :=_bgb ;if _ffa &&_gae +_dbec > _bgee {_abc =0.95*(_bgee -_gae );_bgb =1.0*_abc ;_dbec =_bgb ;_ac =_bde /1000.0*_abc ;};if _bgee > _ac {_gae =(_bgee -_ac )/2.0;};};_ggf .Add_Td (0,_gae );if _egb ,_decg :=_db .GetIntVal (_eaa .Q );_decg {switch _egb {case 2:if len (_fba )< _bbe {_edd :=float64 (_bbe -len (_fba ))*_gbb ;_ggf .Add_Td (_edd ,0);};};};for _efd ,_dcdd :=range _fba {_cef :=2.0;_gdd :=string (_dcdd );if _dbfd !=nil {_bdg ,_bcfb :=_dbf .GetRuneMetrics (_dcdd );if !_bcfb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_dcdd );continue ;};_gdd =string (_dbfd .Encode (_gdd ));_cdg :=_abc *_bdg .Wx /1000.0;_gbba :=(_gbb -_cdg )/2;_cef =_gbba ;};_ggf .Add_Td (_cef ,0);_ggf .Add_Tj (*_db .MakeString (_gdd ));if _efd !=len (_fba )-1{_ggf .Add_Td (_gbb -_cef ,0);};};_ggf .Add_ET ();_ggf .Add_Q ();_ggf .Add_EMC ();_aea :=_a .NewXObjectForm ();_aea .Resources =_dgb ;_aea .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_cfb ,_fcdc });_aea .SetContentStream (_ggf .Bytes (),_eged ());_agg :=_db .MakeDict ();_agg .Set ("\u004e",_aea .ToPdfObject ());return _agg ,nil ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_a .PdfAnnotation ,error ){_dfca :=_a .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_fea ,_dcf ,_gead :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_dfca .C =_db .MakeArrayFromFloats ([]float64 {_fea ,_dcf ,_gead });_eaed :=_a .NewBorderStyle ();_eaed .SetBorderWidth (rectDef .BorderWidth );_dfca .BS =_eaed .ToPdfObject ();};if rectDef .FillEnabled {_feb ,_ece ,_cgcf :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_dfca .IC =_db .MakeArrayFromFloats ([]float64 {_feb ,_ece ,_cgcf });}else {_dfca .IC =_db .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_dfca .CA =_db .MakeFloat (rectDef .Opacity );};_gccd ,_gccg ,_efac :=_eccb (rectDef );if _efac !=nil {return nil ,_efac ;};_dfca .AP =_gccd ;_dfca .Rect =_db .MakeArrayFromFloats ([]float64 {_gccg .Llx ,_gccg .Lly ,_gccg .Urx ,_gccg .Ury });return _dfca .PdfAnnotation ,nil ;};func _ccgdf (_cdf *_a .PdfField ,_babf ,_dgd float64 ,_bac string ,_add AppearanceStyle ,_dda *_f .ContentStreamOperations ,_bcfbd *_a .PdfPageResources ,_beg *_db .PdfObjectDictionary )(*_a .XObjectForm ,error ){_efec :=_a .NewPdfPageResources ();_bbc ,_cfc :=_babf ,_dgd ;_afe :=_f .NewContentCreator ();if _add .BorderSize > 0{_bbda (_afe ,_add ,_babf ,_dgd );};if _add .DrawAlignmentReticle {_bda :=_add ;_bda .BorderSize =0.2;_cbef (_afe ,_bda ,_babf ,_dgd );};_afe .Add_BMC ("\u0054\u0078");_afe .Add_q ();_afe .Add_BT ();_babf ,_dgd =_add .applyRotation (_beg ,_babf ,_dgd ,_afe );_dce ,_efa ,_bccc :=_add .processDA (_cdf ,_dda ,_bcfbd ,_efec ,_afe );if _bccc !=nil {return nil ,_bccc ;};_cfbe :=_dce .Font ;_aed :=_dce .Size ;_ccf :=_db .MakeName (_dce .Name );_ega :=_aed ==0;if _ega &&_efa {_aed =_dgd *_add .AutoFontSizeFraction ;};_cdfc :=_cfbe .Encoder ();if _cdfc ==nil {_bg .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_cdfc =_bgc .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_bac )==0{return nil ,nil ;};_dgbg :=2.0;_egd :=0.0;if _cdfc !=nil {for _ ,_ceba :=range _bac {_dgdg ,_gdfd :=_cfbe .GetRuneMetrics (_ceba );if !_gdfd {_bg .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ceba );continue ;};_egd +=_dgdg .Wx ;};_bac =string (_cdfc .Encode (_bac ));};if _aed ==0||_ega &&_egd > 0&&_dgbg +_egd *_aed /1000.0> _babf {_aed =0.95*1000.0*(_babf -_dgbg )/_egd ;};_ggfa :=1.0*_aed ;_efecg :=2.0;{_dgf :=_ggfa ;if _ega &&_efecg +_dgf > _dgd {_aed =0.95*(_dgd -_efecg );_ggfa =1.0*_aed ;_dgf =_ggfa ;};if _dgd > _dgf {_efecg =(_dgd -_dgf )/2.0;_efecg +=1.50;};};_afe .Add_Tf (*_ccf ,_aed );_afe .Add_Td (_dgbg ,_efecg );_afe .Add_Tj (*_db .MakeString (_bac ));_afe .Add_ET ();_afe .Add_Q ();_afe .Add_EMC ();_dfga :=_a .NewXObjectForm ();_dfga .Resources =_efec ;_dfga .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_bbc ,_cfc });_dfga .SetContentStream (_afe .Bytes (),_eged ());return _dfga ,nil ;};func _eccb (_aec RectangleAnnotationDef )(*_db .PdfObjectDictionary ,*_a .PdfRectangle ,error ){_cggg :=_a .NewXObjectForm ();_cggg .Resources =_a .NewPdfPageResources ();_cbd :="";if _aec .Opacity < 1.0{_afec :=_db .MakeDict ();_afec .Set ("\u0063\u0061",_db .MakeFloat (_aec .Opacity ));_afec .Set ("\u0043\u0041",_db .MakeFloat (_aec .Opacity ));_gdce :=_cggg .Resources .AddExtGState ("\u0067\u0073\u0031",_afec );if _gdce !=nil {_bg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_gdce ;};_cbd ="\u0067\u0073\u0031";};_abe ,_gbgf ,_bcce ,_dafb :=_bead (_aec ,_cbd );if _dafb !=nil {return nil ,nil ,_dafb ;};_dafb =_cggg .SetContentStream (_abe ,nil );if _dafb !=nil {return nil ,nil ,_dafb ;};_cggg .BBox =_gbgf .ToPdfObject ();_ccfd :=_db .MakeDict ();_ccfd .Set ("\u004e",_cggg .ToPdfObject ());return _ccfd ,_bcce ,nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_a .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_a .PdfColorDeviceRGB ;Opacity float64 ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_a .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _a .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _a .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _a .PdfColor ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};func _cfba (_dbff []*SignatureLine ,_eaad *SignatureFieldOpts )(*_db .PdfObjectDictionary ,error ){if _eaad ==nil {_eaad =NewSignatureFieldOpts ();};var _gfad error ;var _efag *_db .PdfObjectName ;_faeg :=_eaad .Font ;if _faeg !=nil {_fgaf ,_ :=_faeg .GetFontDescriptor ();if _fgaf !=nil {if _edgd ,_eaea :=_fgaf .FontName .(*_db .PdfObjectName );_eaea {_efag =_edgd ;};};if _efag ==nil {_efag =_db .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _faeg ,_gfad =_a .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_gfad !=nil {return nil ,_gfad ;};_efag =_db .MakeName ("\u0048\u0065\u006c\u0076");};_eea :=_eaad .FontSize ;if _eea <=0{_eea =10;};if _eaad .LineHeight <=0{_eaad .LineHeight =1;};_cccdd :=_eaad .LineHeight *_eea ;_fffa ,_cbb :=_faeg .GetRuneMetrics (' ');if !_cbb {return nil ,_bd .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_dcdg :=_fffa .Wx ;var _dfeg float64 ;var _dbdg []string ;for _ ,_gecb :=range _dbff {if _gecb .Text ==""{continue ;};_fdeb :=_gecb .Text ;if _gecb .Desc !=""{_fdeb =_gecb .Desc +"\u003a\u0020"+_fdeb ;};_dbdg =append (_dbdg ,_fdeb );var _fgba float64 ;for _ ,_gaab :=range _fdeb {_edge ,_bbaa :=_faeg .GetRuneMetrics (_gaab );if !_bbaa {continue ;};_fgba +=_edge .Wx ;};if _fgba > _dfeg {_dfeg =_fgba ;};};_dfeg =_dfeg *_eea /1000.0;_dbfe :=float64 (len (_dbdg ))*_cccdd ;_ebd :=_eaad .Rect ;if _ebd ==nil {_ebd =[]float64 {0,0,_dfeg ,_dbfe };_eaad .Rect =_ebd ;};_badc :=_ebd [2]-_ebd [0];_fbee :=_ebd [3]-_ebd [1];var _cfbc float64 ;if _eaad .AutoSize {if _dfeg > _badc ||_dbfe > _fbee {_cbae :=_g .Min (_badc /_dfeg ,_fbee /_dbfe );_eea *=_cbae ;};_cccdd =_eaad .LineHeight *_eea ;_cfbc +=(_fbee -float64 (len (_dbdg ))*_cccdd )/2;};_cdbe :=_f .NewContentCreator ();if _eaad .BorderSize <=0{_eaad .BorderSize =0;_eaad .BorderColor =_a .NewPdfColorDeviceGray (1);};if _eaad .BorderColor ==nil {_eaad .BorderColor =_a .NewPdfColorDeviceGray (1);};if _eaad .FillColor ==nil {_eaad .FillColor =_a .NewPdfColorDeviceGray (1);};_cdbe .Add_q ().SetNonStrokingColor (_eaad .FillColor ).SetStrokingColor (_eaad .BorderColor ).Add_w (_eaad .BorderSize ).Add_re (_ebd [0],_ebd [1],_badc ,_fbee ).Add_B ().Add_Q ();_cdbe .Add_q ();_cdbe .Translate (_ebd [0],_ebd [3]-_cccdd -_cfbc );_cdbe .Add_BT ();_afb :=_faeg .Encoder ();for _ ,_becc :=range _dbdg {var _cdfca []byte ;for _ ,_bbce :=range _becc {if _ff .IsSpace (_bbce ){if len (_cdfca )> 0{_cdbe .SetNonStrokingColor (_eaad .TextColor ).Add_Tf (*_efag ,_eea ).Add_TL (_cccdd ).Add_TJ ([]_db .PdfObject {_db .MakeStringFromBytes (_cdfca )}...);_cdfca =nil ;};_cdbe .Add_Tf (*_efag ,_eea ).Add_TL (_cccdd ).Add_TJ ([]_db .PdfObject {_db .MakeFloat (-_dcdg )}...);}else {_cdfca =append (_cdfca ,_afb .Encode (string (_bbce ))...);};};if len (_cdfca )> 0{_cdbe .SetNonStrokingColor (_eaad .TextColor ).Add_Tf (*_efag ,_eea ).Add_TL (_cccdd ).Add_TJ ([]_db .PdfObject {_db .MakeStringFromBytes (_cdfca )}...);};_cdbe .Add_Td (0,-_cccdd );};_cdbe .Add_ET ();_cdbe .Add_Q ();_dfc :=_a .NewPdfPageResources ();_dfc .SetFontByName (*_efag ,_faeg .ToPdfObject ());_fbge :=_a .NewXObjectForm ();_fbge .Resources =_dfc ;_fbge .BBox =_db .MakeArrayFromFloats (_ebd );_fbge .SetContentStream (_cdbe .Bytes (),_eged ());_acdf :=_db .MakeDict ();_acdf .Set ("\u004e",_fbge .ToPdfObject ());return _acdf ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_a .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};type quadding int ;func _bbda (_dae *_f .ContentCreator ,_afce AppearanceStyle ,_bcg ,_dag float64 ){_dae .Add_q ().Add_re (0,0,_bcg ,_dag ).Add_w (_afce .BorderSize ).SetStrokingColor (_afce .BorderColor ).SetNonStrokingColor (_afce .FillColor ).Add_B ().Add_Q ();};func _gf (_fdee *_a .PdfAnnotationWidget ,_gff *_a .PdfFieldText ,_afa *_a .PdfPageResources ,_gfa AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_fce :=_a .NewPdfPageResources ();_bbg ,_afc :=_db .GetArray (_fdee .Rect );if !_afc {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ged ,_fge :=_a .NewPdfRectangle (*_bbg );if _fge !=nil {return nil ,_fge ;};_bfd ,_dec :=_ged .Width (),_ged .Height ();_ccc ,_ffe :=_bfd ,_dec ;_fgb ,_ce :=_db .GetDict (_fdee .MK );if _ce {_age ,_ :=_db .GetDict (_fdee .BS );_dcd :=_gfa .applyAppearanceCharacteristics (_fgb ,_age ,nil );if _dcd !=nil {return nil ,_dcd ;};};_dfa ,_fge :=_f .NewContentStreamParser (_cbe (_gff .PdfField )).Parse ();if _fge !=nil {return nil ,_fge ;};_gedg :=_f .NewContentCreator ();if _gfa .BorderSize > 0{_bbda (_gedg ,_gfa ,_bfd ,_dec );};if _gfa .DrawAlignmentReticle {_bcc :=_gfa ;_bcc .BorderSize =0.2;_cbef (_gedg ,_bcc ,_bfd ,_dec );};_gedg .Add_BMC ("\u0054\u0078");_gedg .Add_q ();_bfd ,_dec =_gfa .applyRotation (_fgb ,_bfd ,_dec ,_gedg );_gedg .Add_BT ();_dfb ,_dfe ,_fge :=_gfa .processDA (_gff .PdfField ,_dfa ,_afa ,_fce ,_gedg );if _fge !=nil {return nil ,_fge ;};_egf :=_dfb .Font ;_egc :=_dfb .Size ;_ada :=_db .MakeName (_dfb .Name );_agc :=_egc ==0;if _agc &&_dfe {_egc =_dec *_gfa .AutoFontSizeFraction ;};_ee :=_egf .Encoder ();if _ee ==nil {_bg .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_ee =_bgc .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_dba ,_fge :=_egf .GetFontDescriptor ();if _fge !=nil {_bg .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _fga string ;if _cfg ,_bag :=_db .GetString (_gff .V );_bag {_fga =_cfg .Decoded ();};if len (_fga )==0{return nil ,nil ;};_def :=[]string {_fga };_cce :=false ;if _gff .Flags ().Has (_a .FieldFlagMultiline ){_cce =true ;_fga =_d .Replace (_fga ,"\u000d\u000a","\u000a",-1);_fga =_d .Replace (_fga ,"\u000d","\u000a",-1);_def =_d .Split (_fga ,"\u000a");};_adg :=0.0;_ced :=0;if _ee !=nil {_dfec :=len (_def );_dg :=0;for _dg < _dfec {var _ae float64 ;_adc :=-1;_fef :=0.0;for _beb ,_gbd :=range _def [_dg ]{if _gbd ==' '{_adc =_beb ;_ae =_fef ;};_bdca ,_bgfb :=_egf .GetRuneMetrics (_gbd );if !_bgfb {_bg .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_gbd );continue ;};_fef +=_bdca .Wx ;if _cce &&!_agc &&_egc *_fef /1000.0> _bfd &&_adc > 0{_dbd :=_def [_dg ][_adc +1:];if _dg < len (_def )-1{_def [_dg +1]+=_dbd ;}else {_def =append (_def ,_dbd );_dfec ++;};_def [_dg ]=_def [_dg ][0:_adc ];_fef =_ae ;break ;};};if _fef > _adg {_adg =_fef ;};_def [_dg ]=string (_ee .Encode (_def [_dg ]));if len (_def [_dg ])> 0{_ced ++;};_dg ++;};};_caf :=2.0;if _egc ==0||_agc &&_adg > 0&&_caf +_adg *_egc /1000.0> _bfd {_egc =0.95*1000.0*(_bfd -_caf )/_adg ;};_cdd :=_dc ;{if _dbg ,_fgg :=_db .GetIntVal (_gff .Q );_fgg {switch _dbg {case 0:_cdd =_dc ;case 1:_cdd =_df ;case 2:_cdd =_ba ;default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_dbg );};};};_cba :=_gfa .MultilineLineHeight ;_bga :=_egc ;if _cce &&_ced > 1{_bga =_cba *_egc ;};var _ffed float64 ;if _dba !=nil {_ffed ,_fge =_dba .GetCapHeight ();if _fge !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_fge );};};if int (_ffed )<=0{_bg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_ffed =1000;};_ggg :=_ffed /1000.0*_egc ;_fdg :=0.0;{_egg :=float64 (_ced )*_bga ;if _agc &&_fdg +_egg > _dec {_egc =0.95*(_dec -_fdg )/float64 (_ced );_bga =_egc ;if _cce &&_ced > 1{_bga =_cba *_egc ;};_ggg =_ffed /1000.0*_egc ;_egg =float64 (_ced )*_bga ;};if _dec > _egg {if _cce {if _gfa .MultilineVAlignMiddle {_ffc :=(_dec -_egg )/2.0;_gdf :=_ffc +_egg -_bga ;_fdg =_gdf ;}else {_fdg =_dec -_bga ;_fdg -=_egc *0.5;};}else {_fdg =(_dec -_ggg )/2.0;};};};_gedg .Add_Tf (*_ada ,_egc );_gedg .Add_Td (_caf ,_fdg );_bad :=_caf ;_ed :=_caf ;for _ecc ,_bcf :=range _def {_cg :=0.0;for _ ,_fa :=range _bcf {_fab ,_fdgg :=_egf .GetRuneMetrics (_fa );if !_fdgg {continue ;};_cg +=_fab .Wx ;};_aab :=_cg /1000.0*_egc ;_ccg :=_bfd -_aab ;var _ccgd float64 ;switch _cdd {case _dc :_ccgd =_bad ;case _df :_ccgd =_ccg /2;case _ba :_ccgd =_ccg ;};_caf =_ccgd -_ed ;if _caf > 0.0{_gedg .Add_Td (_caf ,0);};_ed =_ccgd ;_gedg .Add_Tj (*_db .MakeString (_bcf ));if _ecc < len (_def )-1{_gedg .Add_Td (0,-_bga *_cba );};};_gedg .Add_ET ();_gedg .Add_Q ();_gedg .Add_EMC ();_fcb :=_a .NewXObjectForm ();_fcb .Resources =_fce ;_fcb .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_ccc ,_ffe });_fcb .SetContentStream (_gedg .Bytes (),_eged ());_fedg :=_db .MakeDict ();_fedg .Set ("\u004e",_fcb .ToPdfObject ());return _fedg ,nil ;};func _aabg (_ccd *_a .PdfAcroForm ,_fgd *_a .PdfAnnotationWidget ,_cca *_a .PdfFieldChoice ,_bfdg AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_ffd ,_fbagd :=_db .GetArray (_fgd .Rect );if !_fbagd {return nil ,_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_eda ,_aga :=_a .NewPdfRectangle (*_ffd );if _aga !=nil {return nil ,_aga ;};_dgaa ,_bdd :=_eda .Width (),_eda .Height ();_bg .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_fgd .BS );_adb ,_aga :=_f .NewContentStreamParser (_cbe (_cca .PdfField )).Parse ();if _aga !=nil {return nil ,_aga ;};_gbc ,_efbg :=_db .GetDict (_fgd .MK );if _efbg {_eaeb ,_ :=_db .GetDict (_fgd .BS );_aba :=_bfdg .applyAppearanceCharacteristics (_gbc ,_eaeb ,nil );if _aba !=nil {return nil ,_aba ;};};_da :=_db .MakeDict ();for _ ,_bfa :=range _cca .Opt .Elements (){if _eade ,_fdb :=_db .GetArray (_bfa );_fdb &&_eade .Len ()==2{_bfa =_eade .Get (1);};var _cea string ;if _fff ,_cbgf :=_db .GetString (_bfa );_cbgf {_cea =_fff .Decoded ();}else if _cfa ,_ede :=_db .GetName (_bfa );_ede {_cea =_cfa .String ();}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_bfa );return nil ,_bd .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_cea )> 0{_cdgc ,_gfe :=_ccgdf (_cca .PdfField ,_dgaa ,_bdd ,_cea ,_bfdg ,_adb ,_ccd .DR ,_gbc );if _gfe !=nil {return nil ,_gfe ;};_da .Set (*_db .MakeName (_cea ),_cdgc .ToPdfObject ());};};_gcd :=_db .MakeDict ();_gcd .Set ("\u004e",_da );return _gcd ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_a .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _ag .LineEndingStyle ;LineEndingStyle2 _ag .LineEndingStyle ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_a .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_a .PdfFieldChoice ,error ){if page ==nil {return nil ,_bd .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bggb :=_a .NewPdfField ();_abd :=&_a .PdfFieldChoice {};_bggb .SetContext (_abd );_abd .PdfField =_bggb ;_abd .T =_db .MakeString (name );_abd .Opt =_db .MakeArray ();for _ ,_bffdg :=range opt .Choices {_abd .Opt .Append (_db .MakeString (_bffdg ));};_abd .SetFlag (_a .FieldFlagCombo );_abcc :=_a .NewPdfAnnotationWidget ();_abcc .Rect =_db .MakeArrayFromFloats (rect );_abcc .P =page .ToPdfObject ();_abcc .F =_db .MakeInteger (4);_abcc .Parent =_abd .ToPdfObject ();_abd .Annotations =append (_abd .Annotations ,_abcc );return _abd ,nil ;};