//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_b "bytes";_gc "errors";_g "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/contentstream";_dd "github.com/unidoc/unipdf/v3/contentstream/draw";_bb "github.com/unidoc/unipdf/v3/core";_aa "github.com/unidoc/unipdf/v3/internal/textencoding";
_ff "github.com/unidoc/unipdf/v3/model";_dc "image";_c "math";_gb "strings";_d "unicode";);func _egdaf (_aecc *_ff .PdfField ,_cbf ,_ded float64 ,_egce string ,_ddfg AppearanceStyle ,_ddcg *_f .ContentStreamOperations ,_deag *_ff .PdfPageResources ,_deg *_bb .PdfObjectDictionary )(*_ff .XObjectForm ,error ){_gged :=_ff .NewPdfPageResources ();
_bdeb ,_fdb :=_cbf ,_ded ;_gafa :=_f .NewContentCreator ();if _ddfg .BorderSize > 0{_bef (_gafa ,_ddfg ,_cbf ,_ded );};if _ddfg .DrawAlignmentReticle {_ccea :=_ddfg ;_ccea .BorderSize =0.2;_ebee (_gafa ,_ccea ,_cbf ,_ded );};_gafa .Add_BMC ("\u0054\u0078");
_gafa .Add_q ();_gafa .Add_BT ();_cbf ,_ded =_ddfg .applyRotation (_deg ,_cbf ,_ded ,_gafa );_cfe ,_gec ,_egde :=_ddfg .processDA (_aecc ,_ddcg ,_deag ,_gged ,_gafa );if _egde !=nil {return nil ,_egde ;};_edf :=_cfe .Font ;_aabc :=_cfe .Size ;_fgd :=_bb .MakeName (_cfe .Name );
_dbe :=_aabc ==0;if _dbe &&_gec {_aabc =_ded *_ddfg .AutoFontSizeFraction ;};_ggg :=_edf .Encoder ();if _ggg ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_ggg =_aa .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_egce )==0{return nil ,nil ;};_fce :=_cge ;if _ddfg .MarginLeft !=nil {_fce =*_ddfg .MarginLeft ;};_ebgd :=0.0;if _ggg !=nil {for _ ,_ecf :=range _egce {_fec ,_bgc :=_edf .GetRuneMetrics (_ecf );
if !_bgc {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ecf );
continue ;};_ebgd +=_fec .Wx ;};_egce =string (_ggg .Encode (_egce ));};if _aabc ==0||_dbe &&_ebgd > 0&&_fce +_ebgd *_aabc /1000.0> _cbf {_aabc =0.95*1000.0*(_cbf -_fce )/_ebgd ;};_efg :=1.0*_aabc ;_ebb :=2.0;{_afed :=_efg ;if _dbe &&_ebb +_afed > _ded {_aabc =0.95*(_ded -_ebb );
_efg =1.0*_aabc ;_afed =_efg ;};if _ded > _afed {_ebb =(_ded -_afed )/2.0;_ebb +=1.50;};};_gafa .Add_Tf (*_fgd ,_aabc );_gafa .Add_Td (_fce ,_ebb );_gafa .Add_Tj (*_bb .MakeString (_egce ));_gafa .Add_ET ();_gafa .Add_Q ();_gafa .Add_EMC ();_cfc :=_ff .NewXObjectForm ();
_cfc .Resources =_gged ;_cfc .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_bdeb ,_fdb });_cfc .SetContentStream (_gafa .Bytes (),_fccf ());return _cfc ,nil ;};func _bgdb (_abad LineAnnotationDef )(*_bb .PdfObjectDictionary ,*_ff .PdfRectangle ,error ){_fced :=_ff .NewXObjectForm ();
_fced .Resources =_ff .NewPdfPageResources ();_ggae :="";if _abad .Opacity < 1.0{_bfae :=_bb .MakeDict ();_bfae .Set ("\u0063\u0061",_bb .MakeFloat (_abad .Opacity ));_cdb :=_fced .Resources .AddExtGState ("\u0067\u0073\u0031",_bfae );if _cdb !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_cdb ;};_ggae ="\u0067\u0073\u0031";};_cccf ,_fgaf ,_bcbe ,_fbeb :=_edda (_abad ,_ggae );if _fbeb !=nil {return nil ,nil ,_fbeb ;};_fbeb =_fced .SetContentStream (_cccf ,nil );if _fbeb !=nil {return nil ,nil ,_fbeb ;};_fced .BBox =_fgaf .ToPdfObject ();
_gfgd :=_bb .MakeDict ();_gfgd .Set ("\u004e",_fced .ToPdfObject ());return _gfgd ,_bcbe ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_dcb FieldAppearance )GenerateAppearanceDict (form *_ff .PdfAcroForm ,field *_ff .PdfField ,wa *_ff .PdfAnnotationWidget )(*_bb .PdfObjectDictionary ,error ){_g .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_bad :=field .GetContext ().(*_ff .PdfFieldText );_faf ,_eeb :=_bb .GetDict (wa .AP );if _eeb &&_dcb .OnlyIfMissing &&(!_bad ||!_dcb .RegenerateTextFields ){_g .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _faf ,nil ;};if form .DR ==nil {form .DR =_ff .NewPdfPageResources ();};switch _fe :=field .GetContext ().(type ){case *_ff .PdfFieldText :_gba :=_fe ;if _cab :=_cceg (_gba .PdfField );_cab ==""{_gba .DA =form .DA ;};switch {case _gba .Flags ().Has (_ff .FieldFlagPassword ):return nil ,nil ;
case _gba .Flags ().Has (_ff .FieldFlagFileSelect ):return nil ,nil ;case _gba .Flags ().Has (_ff .FieldFlagComb ):if _gba .MaxLen !=nil {_fed ,_eff :=_cdc (wa ,_gba ,form .DR ,_dcb .Style ());if _eff !=nil {return nil ,_eff ;};return _fed ,nil ;};};_eg ,_bbe :=_de (wa ,_gba ,form .DR ,_dcb .Style ());
if _bbe !=nil {return nil ,_bbe ;};return _eg ,nil ;case *_ff .PdfFieldButton :_gfg :=_fe ;if _gfg .IsCheckbox (){_dde ,_abb :=_fcg (wa ,_gfg ,form .DR ,_dcb .Style ());if _abb !=nil {return nil ,_abb ;};return _dde ,nil ;};_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_gfg .GetType ());
case *_ff .PdfFieldChoice :_egc :=_fe ;switch {case _egc .Flags ().Has (_ff .FieldFlagCombo ):_aeb ,_ffc :=_agc (form ,wa ,_egc ,_dcb .Style ());if _ffc !=nil {return nil ,_ffc ;};return _aeb ,nil ;default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_egc .Flags ().String ());
};default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fe );};return nil ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_ff .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_ff .PdfFieldText ,error ){if page ==nil {return nil ,_gc .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_gc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_gc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dacc :=_ff .NewPdfField ();_fgdc :=&_ff .PdfFieldText {};_dacc .SetContext (_fgdc );_fgdc .PdfField =_dacc ;_fgdc .T =_bb .MakeString (name );
if opt .MaxLen > 0{_fgdc .MaxLen =_bb .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_fgdc .V =_bb .MakeString (opt .Value );};_dedg :=_ff .NewPdfAnnotationWidget ();_dedg .Rect =_bb .MakeArrayFromFloats (rect );_dedg .P =page .ToPdfObject ();
_dedg .F =_bb .MakeInteger (4);_dedg .Parent =_fgdc .ToPdfObject ();_fgdc .Annotations =append (_fgdc .Annotations ,_dedg );return _fgdc ,nil ;};func _fbeg (_eegd *InkAnnotationDef )(*_bb .PdfObjectDictionary ,*_ff .PdfRectangle ,error ){_degb :=_ff .NewXObjectForm ();
_cacg ,_cegf ,_fgdg :=_gcfd (_eegd );if _fgdg !=nil {return nil ,nil ,_fgdg ;};_fgdg =_degb .SetContentStream (_cacg ,nil );if _fgdg !=nil {return nil ,nil ,_fgdg ;};_degb .BBox =_cegf .ToPdfObject ();_degb .Resources =_ff .NewPdfPageResources ();_degb .Resources .ProcSet =_bb .MakeArray (_bb .MakeName ("\u0050\u0044\u0046"));
_afff :=_bb .MakeDict ();_afff .Set ("\u004e",_degb .ToPdfObject ());return _afff ,_cegf ,nil ;};func _agc (_dec *_ff .PdfAcroForm ,_caae *_ff .PdfAnnotationWidget ,_bdb *_ff .PdfFieldChoice ,_bada AppearanceStyle )(*_bb .PdfObjectDictionary ,error ){_dgg ,_gega :=_bb .GetArray (_caae .Rect );
if !_gega {return nil ,_gc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cbcb ,_agcd :=_ff .NewPdfRectangle (*_dgg );if _agcd !=nil {return nil ,_agcd ;};_gead ,_gefg :=_cbcb .Width (),_cbcb .Height ();_g .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_caae .BS );
_faba ,_agcd :=_f .NewContentStreamParser (_cceg (_bdb .PdfField )).Parse ();if _agcd !=nil {return nil ,_agcd ;};_ddac ,_gbg :=_bb .GetDict (_caae .MK );if _gbg {_egg ,_ :=_bb .GetDict (_caae .BS );_aab :=_bada .applyAppearanceCharacteristics (_ddac ,_egg ,nil );
if _aab !=nil {return nil ,_aab ;};};_fdfd :=_bb .MakeDict ();for _ ,_dfb :=range _bdb .Opt .Elements (){if _cad ,_eaef :=_bb .GetArray (_dfb );_eaef &&_cad .Len ()==2{_dfb =_cad .Get (1);};var _abe string ;if _geaa ,_bge :=_bb .GetString (_dfb );_bge {_abe =_geaa .Decoded ();
}else if _faca ,_gga :=_bb .GetName (_dfb );_gga {_abe =_faca .String ();}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_dfb );
return nil ,_gc .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_abe )> 0{_dbc ,_gaf :=_egdaf (_bdb .PdfField ,_gead ,_gefg ,_abe ,_bada ,_faba ,_dec .DR ,_ddac );if _gaf !=nil {return nil ,_gaf ;
};_fdfd .Set (*_bb .MakeName (_abe ),_dbc .ToPdfObject ());};};_ced :=_bb .MakeDict ();_ced .Set ("\u004e",_fdfd );return _ced ,nil ;};func _cceg (_fge *_ff .PdfField )string {if _fge ==nil {return "";};_bcad ,_dfed :=_fge .GetContext ().(*_ff .PdfFieldText );
if !_dfed {return _cceg (_fge .Parent );};if _bcad .DA !=nil {return _bcad .DA .Str ();};return _cceg (_bcad .Parent );};func _cecb (_deda *_ff .PdfFieldButton ,_decc *_ff .PdfAnnotationWidget ,_acff AppearanceStyle )(*_bb .PdfObjectDictionary ,error ){_ece ,_fcfa :=_bb .GetArray (_decc .Rect );
if !_fcfa {return nil ,_gc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fecd ,_ddga :=_ff .NewPdfRectangle (*_ece );if _ddga !=nil {return nil ,_ddga ;};_gdge ,_abec :=_fecd .Width (),_fecd .Height ();_dbcd :=_f .NewContentCreator ();
if _acff .BorderSize > 0{_bef (_dbcd ,_acff ,_gdge ,_abec );};if _acff .DrawAlignmentReticle {_aff :=_acff ;_aff .BorderSize =0.2;_ebee (_dbcd ,_aff ,_gdge ,_abec );};_cbd :=_deda .GetFillImage ();_efc ,_ddga :=_bgbf (_gdge ,_abec ,_cbd ,_acff );if _ddga !=nil {return nil ,_ddga ;
};_ggce ,_faa :=_bb .GetDict (_decc .MK );if _faa {_ggce .Set ("\u006c",_efc .ToPdfObject ());};_eafd :=_bb .MakeDict ();_eafd .Set ("\u0046\u0052\u004d",_efc .ToPdfObject ());_efab :=_ff .NewPdfPageResources ();_efab .ProcSet =_bb .MakeArray (_bb .MakeName ("\u0050\u0044\u0046"));
_efab .XObject =_eafd ;_abbb :=_gdge -2;_acb :=_abec -2;_dbcd .Add_q ();_dbcd .Add_re (1,1,_abbb ,_acb );_dbcd .Add_W ();_dbcd .Add_n ();_abbb -=2;_acb -=2;_dbcd .Add_q ();_dbcd .Add_re (2,2,_abbb ,_acb );_dbcd .Add_W ();_dbcd .Add_n ();_ddfc :=_c .Min (_abbb /float64 (_cbd .Width ),_acb /float64 (_cbd .Height ));
_dbcd .Add_cm (_ddfc ,0,0,_ddfc ,(_gdge /2)-(float64 (_cbd .Width )*_ddfc /2)+2,2);_dbcd .Add_Do ("\u0046\u0052\u004d");_dbcd .Add_Q ();_dbcd .Add_Q ();_bcba :=_ff .NewXObjectForm ();_bcba .FormType =_bb .MakeInteger (1);_bcba .Resources =_efab ;_bcba .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_gdge ,_abec });
_bcba .Matrix =_bb .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_bcba .SetContentStream (_dbcd .Bytes (),_fccf ());_gece :=_bb .MakeDict ();_gece .Set ("\u004e",_bcba .ToPdfObject ());return _gece ,nil ;};func (_aee *AppearanceFont )fillName (){if _aee .Font ==nil ||_aee .Name !=""{return ;
};_cd :=_aee .Font .FontDescriptor ();if _cd ==nil ||_cd .FontName ==nil {return ;};_aee .Name =_cd .FontName .String ();};func _edda (_acgd LineAnnotationDef ,_fgge string )([]byte ,*_ff .PdfRectangle ,*_ff .PdfRectangle ,error ){_gfbe :=_dd .Line {X1 :0,Y1 :0,X2 :_acgd .X2 -_acgd .X1 ,Y2 :_acgd .Y2 -_acgd .Y1 ,LineColor :_acgd .LineColor ,Opacity :_acgd .Opacity ,LineWidth :_acgd .LineWidth ,LineEndingStyle1 :_acgd .LineEndingStyle1 ,LineEndingStyle2 :_acgd .LineEndingStyle2 };
_gac ,_bbd ,_dbbab :=_gfbe .Draw (_fgge );if _dbbab !=nil {return nil ,nil ,nil ,_dbbab ;};_addc :=&_ff .PdfRectangle {};_addc .Llx =_acgd .X1 +_bbd .Llx ;_addc .Lly =_acgd .Y1 +_bbd .Lly ;_addc .Urx =_acgd .X1 +_bbd .Urx ;_addc .Ury =_acgd .Y1 +_bbd .Ury ;
return _gac ,_bbd ,_addc ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_fgdb ImageFieldAppearance )Style ()AppearanceStyle {if _fgdb ._aaf !=nil {return *_fgdb ._aaf ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_ff .NewPdfColorDeviceGray (0),FillColor :_ff .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_ff .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _dd .LineEndingStyle ;LineEndingStyle2 _dd .LineEndingStyle ;};func _ebc (_fbcf _bb .PdfObject ,_ccfe *_ff .PdfPageResources )(*_bb .PdfObjectName ,float64 ,bool ){var (_edc *_bb .PdfObjectName ;
_fcaf float64 ;_cdff bool ;);if _efb ,_cbbd :=_bb .GetDict (_fbcf );_cbbd &&_efb !=nil {_adec :=_bb .TraceToDirectObject (_efb .Get ("\u004e"));switch _fgg :=_adec .(type ){case *_bb .PdfObjectStream :_dac ,_bdebg :=_bb .DecodeStream (_fgg );if _bdebg !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_bdebg .Error ());
return nil ,0,false ;};_cafd ,_bdebg :=_f .NewContentStreamParser (string (_dac )).Parse ();if _bdebg !=nil {_g .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_bdebg .Error ());
return nil ,0,false ;};_gcaf :=_f .NewContentStreamProcessor (*_cafd );_gcaf .AddHandler (_f .HandlerConditionEnumOperand ,"\u0054\u0066",func (_feeg *_f .ContentStreamOperation ,_efdg _f .GraphicsState ,_adecd *_ff .PdfPageResources )error {if len (_feeg .Params )==2{if _bcd ,_fgcf :=_bb .GetName (_feeg .Params [0]);
_fgcf {_edc =_bcd ;};if _gfbd ,_fgde :=_bb .GetNumberAsFloat (_feeg .Params [1]);_fgde ==nil {_fcaf =_gfbd ;};_cdff =true ;return _f .ErrEarlyExit ;};return nil ;});_gcaf .Process (_ccfe );return _edc ,_fcaf ,_cdff ;};};return nil ,0,false ;};const (_gddd quadding =0;
_ace quadding =1;_da quadding =2;_cge float64 =2.0;);func _beab (_dgb []float64 )[]float64 {var (_bece =len (_dgb );_fbd =make ([]float64 ,_bece );_agfc =make ([]float64 ,_bece ););_bbff :=2.0;_fbd [0]=_dgb [0]/_bbff ;for _cffc :=1;_cffc < _bece ;_cffc ++{_agfc [_cffc ]=1/_bbff ;
if _cffc < _bece -1{_bbff =4.0;}else {_bbff =3.5;};_bbff -=_agfc [_cffc ];_fbd [_cffc ]=(_dgb [_cffc ]-_fbd [_cffc -1])/_bbff ;};for _bddd :=1;_bddd < _bece ;_bddd ++{_fbd [_bece -_bddd -1]-=_agfc [_bece -_bddd ]*_fbd [_bece -_bddd ];};return _fbd ;};

// InkAnnotationDef holds base information for constructing an ink annotation.
type InkAnnotationDef struct{

// Paths is the array of stroked paths which compose the annotation.
Paths []_dd .Path ;

// Color is the color of the line. Default to black.
Color *_ff .PdfColorDeviceRGB ;

// LineWidth is the width of the line.
LineWidth float64 ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_ff .PdfAnnotation ,error ){_e :=_ff .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_fg ,_gd ,_eb :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_e .C =_bb .MakeArrayFromFloats ([]float64 {_fg ,_gd ,_eb });
_ee :=_ff .NewBorderStyle ();_ee .SetBorderWidth (circDef .BorderWidth );_e .BS =_ee .ToPdfObject ();};if circDef .FillEnabled {_ea ,_ga ,_bc :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_e .IC =_bb .MakeArrayFromFloats ([]float64 {_ea ,_ga ,_bc });
}else {_e .IC =_bb .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_e .CA =_bb .MakeFloat (circDef .Opacity );};_ab ,_ge ,_geg :=_eef (circDef );if _geg !=nil {return nil ,_geg ;};_e .AP =_ab ;_e .Rect =_bb .MakeArrayFromFloats ([]float64 {_ge .Llx ,_ge .Lly ,_ge .Urx ,_ge .Ury });
return _e .PdfAnnotation ,nil ;};func _bef (_gbgc *_f .ContentCreator ,_ccd AppearanceStyle ,_agg ,_eefb float64 ){_gbgc .Add_q ().Add_re (0,0,_agg ,_eefb ).Add_w (_ccd .BorderSize ).SetStrokingColor (_ccd .BorderColor ).SetNonStrokingColor (_ccd .FillColor ).Add_B ().Add_Q ();
};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_gf FieldAppearance )Style ()AppearanceStyle {if _gf ._gegf !=nil {return *_gf ._gegf ;};_ef :=_cge ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_ff .NewPdfColorDeviceGray (0),FillColor :_ff .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_ef };
};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_ff .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_ff .NewPdfColorDeviceGray (0),BorderColor :_ff .NewPdfColorDeviceGray (0),FillColor :_ff .NewPdfColorDeviceGray (1),Encoder :_bb .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};

// SetStyle applies appearance `style` to `fa`.
func (_gdg *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_gdg ._aaf =&style };

// CreateInkAnnotation creates an ink annotation object that can be added to the annotation list of a PDF page.
func CreateInkAnnotation (inkDef InkAnnotationDef )(*_ff .PdfAnnotation ,error ){_adfa :=_ff .NewPdfAnnotationInk ();_fef :=_bb .MakeArray ();for _ ,_acbb :=range inkDef .Paths {if _acbb .Length ()==0{continue ;};_abdc :=[]float64 {};for _ ,_fgba :=range _acbb .Points {_abdc =append (_abdc ,_fgba .X ,_fgba .Y );
};_fef .Append (_bb .MakeArrayFromFloats (_abdc ));};_adfa .InkList =_fef ;if inkDef .Color ==nil {inkDef .Color =_ff .NewPdfColorDeviceRGB (0.0,0.0,0.0);};_adfa .C =_bb .MakeArrayFromFloats ([]float64 {inkDef .Color .R (),inkDef .Color .G (),inkDef .Color .B ()});
_ccef ,_aabb ,_dgd :=_fbeg (&inkDef );if _dgd !=nil {return nil ,_dgd ;};_adfa .AP =_ccef ;_adfa .Rect =_bb .MakeArrayFromFloats ([]float64 {_aabb .Llx ,_aabb .Lly ,_aabb .Urx ,_aabb .Ury });return _adfa .PdfAnnotation ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_ff .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_ff .PdfFieldChoice ,error ){if page ==nil {return nil ,_gc .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_gc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_gc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ebcd :=_ff .NewPdfField ();_daffd :=&_ff .PdfFieldChoice {};_ebcd .SetContext (_daffd );_daffd .PdfField =_ebcd ;_daffd .T =_bb .MakeString (name );_daffd .Opt =_bb .MakeArray ();for _ ,_caca :=range opt .Choices {_daffd .Opt .Append (_bb .MakeString (_caca ));
};_daffd .SetFlag (_ff .FieldFlagCombo );_aefc :=_ff .NewPdfAnnotationWidget ();_aefc .Rect =_bb .MakeArrayFromFloats (rect );_aefc .P =page .ToPdfObject ();_aefc .F =_bb .MakeInteger (4);_aefc .Parent =_daffd .ToPdfObject ();_daffd .Annotations =append (_daffd .Annotations ,_aefc );
return _daffd ,nil ;};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_aaf *AppearanceStyle ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_gegf *AppearanceStyle ;};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_ff .Image ;_cada AppearanceStyle ;};func _cagb (_cfee RectangleAnnotationDef ,_fgfa string )([]byte ,*_ff .PdfRectangle ,*_ff .PdfRectangle ,error ){_dedb :=_dd .Rectangle {X :0,Y :0,Width :_cfee .Width ,Height :_cfee .Height ,FillEnabled :_cfee .FillEnabled ,FillColor :_cfee .FillColor ,BorderEnabled :_cfee .BorderEnabled ,BorderWidth :2*_cfee .BorderWidth ,BorderColor :_cfee .BorderColor ,Opacity :_cfee .Opacity };
_dbcc ,_fgef ,_fefb :=_dedb .Draw (_fgfa );if _fefb !=nil {return nil ,nil ,nil ,_fefb ;};_bdeaf :=&_ff .PdfRectangle {};_bdeaf .Llx =_cfee .X +_fgef .Llx ;_bdeaf .Lly =_cfee .Y +_fgef .Lly ;_bdeaf .Urx =_cfee .X +_fgef .Urx ;_bdeaf .Ury =_cfee .Y +_fgef .Ury ;
return _dbcc ,_fgef ,_bdeaf ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_ff .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _ff .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _ff .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _ff .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _dc .Image ;

// Image represents the image used for the signature appearance.
Image _dc .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _bb .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_ff .PdfAnnotation ,error ){_cfg :=_ff .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_egb ,_fde ,_ceeb :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_cfg .C =_bb .MakeArrayFromFloats ([]float64 {_egb ,_fde ,_ceeb });_dcbcg :=_ff .NewBorderStyle ();_dcbcg .SetBorderWidth (rectDef .BorderWidth );_cfg .BS =_dcbcg .ToPdfObject ();};if rectDef .FillEnabled {_fafb ,_caeb ,_ddeb :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_cfg .IC =_bb .MakeArrayFromFloats ([]float64 {_fafb ,_caeb ,_ddeb });}else {_cfg .IC =_bb .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_cfg .CA =_bb .MakeFloat (rectDef .Opacity );};_gcae ,_gfdd ,_gcce :=_abee (rectDef );if _gcce !=nil {return nil ,_gcce ;
};_cfg .AP =_gcae ;_cfg .Rect =_bb .MakeArrayFromFloats ([]float64 {_gfdd .Llx ,_gfdd .Lly ,_gfdd .Urx ,_gfdd .Ury });return _cfg .PdfAnnotation ,nil ;};func _dbca (_dggd [][]_dd .CubicBezierCurve ,_gagc *_ff .PdfColorDeviceRGB ,_gdec float64 )([]byte ,*_ff .PdfRectangle ,error ){_faef :=_f .NewContentCreator ();
_faef .Add_q ().SetStrokingColor (_gagc ).Add_w (_gdec );_aceg :=_dd .NewCubicBezierPath ();for _ ,_fefg :=range _dggd {_aceg .Curves =append (_aceg .Curves ,_fefg ...);for _agdg ,_eafb :=range _fefg {if _agdg ==0{_faef .Add_m (_eafb .P0 .X ,_eafb .P0 .Y );
}else {_faef .Add_l (_eafb .P0 .X ,_eafb .P0 .Y );};_faef .Add_c (_eafb .P1 .X ,_eafb .P1 .Y ,_eafb .P2 .X ,_eafb .P2 .Y ,_eafb .P3 .X ,_eafb .P3 .Y );};};_faef .Add_S ().Add_Q ();return _faef .Bytes (),_aceg .GetBoundingBox ().ToPdfRectangle (),nil ;};


// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_ff .PdfAnnotation ,error ){_dbcf :=_ff .NewPdfAnnotationLine ();_dbcf .L =_bb .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_bbed :=_bb .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_dd .LineEndingStyleArrow {_bbed =_bb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_fcgd :=_bb .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_dd .LineEndingStyleArrow {_fcgd =_bb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_dbcf .LE =_bb .MakeArray (_bbed ,_fcgd );if lineDef .Opacity < 1.0{_dbcf .CA =_bb .MakeFloat (lineDef .Opacity );};_cagc ,_fbee ,_facag :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_dbcf .IC =_bb .MakeArrayFromFloats ([]float64 {_cagc ,_fbee ,_facag });
_dbcf .C =_bb .MakeArrayFromFloats ([]float64 {_cagc ,_fbee ,_facag });_bdea :=_ff .NewBorderStyle ();_bdea .SetBorderWidth (lineDef .LineWidth );_dbcf .BS =_bdea .ToPdfObject ();_bag ,_bfee ,_eefc :=_bgdb (lineDef );if _eefc !=nil {return nil ,_eefc ;
};_dbcf .AP =_bag ;_dbcf .Rect =_bb .MakeArrayFromFloats ([]float64 {_bfee .Llx ,_bfee .Lly ,_bfee .Urx ,_bfee .Ury });return _dbcf .PdfAnnotation ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_ff .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_ff .PdfFieldSignature ,error ){if signature ==nil {return nil ,_gc .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_affd ,_cbbe :=_cbb (lines ,opts );if _cbbe !=nil {return nil ,_cbbe ;};_ccfc :=_ff .NewPdfFieldSignature (signature );_ccfc .Rect =_bb .MakeArrayFromFloats (opts .Rect );_ccfc .AP =_affd ;return _ccfc ,nil ;};func _gcfd (_ceec *InkAnnotationDef )([]byte ,*_ff .PdfRectangle ,error ){_gfbc :=[][]_dd .CubicBezierCurve {};
for _ ,_acef :=range _ceec .Paths {if _acef .Length ()==0{continue ;};_gebcf :=_acef .Points ;_fdfe ,_ecbc ,_agbc :=_fbegb (_gebcf );if _agbc !=nil {return nil ,nil ,_agbc ;};if len (_fdfe )!=len (_ecbc ){return nil ,nil ,_gc .New ("\u0049\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u006e\u0064\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0063\u006f\u006e\u0074\u0072o\u006c\u0020\u0070\u006f\u0069n\u0074");
};_bbgf :=[]_dd .CubicBezierCurve {};for _fega :=0;_fega < len (_fdfe );_fega ++{_bbgf =append (_bbgf ,_dd .CubicBezierCurve {P0 :_gebcf [_fega ],P1 :_fdfe [_fega ],P2 :_ecbc [_fega ],P3 :_gebcf [_fega +1]});};if len (_bbgf )> 0{_gfbc =append (_gfbc ,_bbgf );
};};_dbgg ,_bbgb ,_gdae :=_dbca (_gfbc ,_ceec .Color ,_ceec .LineWidth );if _gdae !=nil {return nil ,nil ,_gdae ;};return _dbgg ,_bbgb ,nil ;};func _cbb (_efe []*SignatureLine ,_eafg *SignatureFieldOpts )(*_bb .PdfObjectDictionary ,error ){if _eafg ==nil {_eafg =NewSignatureFieldOpts ();
};var _adf error ;var _dgga *_bb .PdfObjectName ;_fdfdb :=_eafg .Font ;if _fdfdb !=nil {_age ,_ :=_fdfdb .GetFontDescriptor ();if _age !=nil {if _bgb ,_cddg :=_age .FontName .(*_bb .PdfObjectName );_cddg {_dgga =_bgb ;};};if _dgga ==nil {_dgga =_bb .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _fdfdb ,_adf =_ff .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_adf !=nil {return nil ,_adf ;};_dgga =_bb .MakeName ("\u0048\u0065\u006c\u0076");};_cac :=_eafg .FontSize ;if _cac <=0{_cac =10;};if _eafg .LineHeight <=0{_eafg .LineHeight =1;
};_bbf :=_eafg .LineHeight *_cac ;_dfcfe ,_ecb :=_fdfdb .GetRuneMetrics (' ');if !_ecb {return nil ,_gc .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_eede :=_dfcfe .Wx ;var _bee float64 ;var _cae []string ;for _ ,_daf :=range _efe {if _daf .Text ==""{continue ;};_eaea :=_daf .Text ;if _daf .Desc !=""{_eaea =_daf .Desc +"\u003a\u0020"+_eaea ;};_cae =append (_cae ,_eaea );var _ecad float64 ;for _ ,_dbde :=range _eaea {_ceea ,_bdfb :=_fdfdb .GetRuneMetrics (_dbde );
if !_bdfb {continue ;};_ecad +=_ceea .Wx ;};if _ecad > _bee {_bee =_ecad ;};};_bee =_bee *_cac /1000.0;_bbbbd :=float64 (len (_cae ))*_bbf ;_eba :=_eafg .Image !=nil ;_ccg :=_eafg .Rect ;if _ccg ==nil {_ccg =[]float64 {0,0,_bee ,_bbbbd };if _eba {_ccg [2]=_bee *2;
_ccg [3]=_bbbbd *2;};_eafg .Rect =_ccg ;};_bcaae :=_ccg [2]-_ccg [0];_cbe :=_ccg [3]-_ccg [1];_eaad ,_fabb :=_ccg ,_ccg ;var _gfdb ,_ffd float64 ;if _eba &&len (_cae )> 0{if _eafg .ImagePosition <=SignatureImageRight {_abed :=[]float64 {_ccg [0],_ccg [1],_ccg [0]+(_bcaae /2),_ccg [3]};
_fag :=[]float64 {_ccg [0]+(_bcaae /2),_ccg [1],_ccg [2],_ccg [3]};if _eafg .ImagePosition ==SignatureImageLeft {_eaad ,_fabb =_abed ,_fag ;}else {_eaad ,_fabb =_fag ,_abed ;};}else {_gcfb :=[]float64 {_ccg [0],_ccg [1],_ccg [2],_ccg [1]+(_cbe /2)};_eafe :=[]float64 {_ccg [0],_ccg [1]+(_cbe /2),_ccg [2],_ccg [3]};
if _eafg .ImagePosition ==SignatureImageTop {_eaad ,_fabb =_eafe ,_gcfb ;}else {_eaad ,_fabb =_gcfb ,_eafe ;};};};_gfdb =_fabb [2]-_fabb [0];_ffd =_fabb [3]-_fabb [1];var _gbff float64 ;if _eafg .AutoSize {if _bee > _gfdb ||_bbbbd > _ffd {_ceg :=_c .Min (_gfdb /_bee ,_ffd /_bbbbd );
_cac *=_ceg ;};_bbf =_eafg .LineHeight *_cac ;_gbff +=(_ffd -float64 (len (_cae ))*_bbf )/2;};_adef :=_f .NewContentCreator ();_fdgd :=_ff .NewPdfPageResources ();_fdgd .SetFontByName (*_dgga ,_fdfdb .ToPdfObject ());if _eafg .BorderSize <=0{_eafg .BorderSize =0;
_eafg .BorderColor =_ff .NewPdfColorDeviceGray (1);};_adef .Add_q ();if _eafg .FillColor !=nil {_adef .SetNonStrokingColor (_eafg .FillColor );};if _eafg .BorderColor !=nil {_adef .SetStrokingColor (_eafg .BorderColor );};_adef .Add_w (_eafg .BorderSize ).Add_re (_ccg [0],_ccg [1],_bcaae ,_cbe );
if _eafg .FillColor !=nil &&_eafg .BorderColor !=nil {_adef .Add_B ();}else if _eafg .FillColor !=nil {_adef .Add_f ();}else if _eafg .BorderColor !=nil {_adef .Add_S ();};_adef .Add_Q ();if _eafg .WatermarkImage !=nil {_dbg :=[]float64 {_ccg [0],_ccg [1],_ccg [2],_ccg [3]};
_gbdc ,_adb ,_aga :=_abbg (_eafg .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_eafg ,_dbg ,_adef );if _aga !=nil {return nil ,_aga ;};_fdgd .SetXObjectImageByName (*_gbdc ,_adb );};_adef .Add_q ();_adef .Translate (_fabb [0],_fabb [3]-_bbf -_gbff );
_adef .Add_BT ();_cdfd :=_fdfdb .Encoder ();for _ ,_cegd :=range _cae {var _dgcg []byte ;for _ ,_daff :=range _cegd {if _d .IsSpace (_daff ){if len (_dgcg )> 0{_adef .SetNonStrokingColor (_eafg .TextColor ).Add_Tf (*_dgga ,_cac ).Add_TL (_bbf ).Add_TJ ([]_bb .PdfObject {_bb .MakeStringFromBytes (_dgcg )}...);
_dgcg =nil ;};_adef .Add_Tf (*_dgga ,_cac ).Add_TL (_bbf ).Add_TJ ([]_bb .PdfObject {_bb .MakeFloat (-_eede )}...);}else {_dgcg =append (_dgcg ,_cdfd .Encode (string (_daff ))...);};};if len (_dgcg )> 0{_adef .SetNonStrokingColor (_eafg .TextColor ).Add_Tf (*_dgga ,_cac ).Add_TL (_bbf ).Add_TJ ([]_bb .PdfObject {_bb .MakeStringFromBytes (_dgcg )}...);
};_adef .Add_Td (0,-_bbf );};_adef .Add_ET ();_adef .Add_Q ();if _eba {_egfc ,_fgcg ,_ecce :=_abbg (_eafg .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_eafg ,_eaad ,_adef );if _ecce !=nil {return nil ,_ecce ;
};_fdgd .SetXObjectImageByName (*_egfc ,_fgcg );};_gaaa :=_ff .NewXObjectForm ();_gaaa .Resources =_fdgd ;_gaaa .BBox =_bb .MakeArrayFromFloats (_ccg );_gaaa .SetContentStream (_adef .Bytes (),_fccf ());_fbc :=_bb .MakeDict ();_fbc .Set ("\u004e",_gaaa .ToPdfObject ());
return _fbc ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ff .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ff .PdfColorDeviceRGB ;Opacity float64 ;};func _ebee (_aad *_f .ContentCreator ,_dadb AppearanceStyle ,_gbfe ,_fff float64 ){_aad .Add_q ().Add_re (0,0,_gbfe ,_fff ).Add_re (0,_fff /2,_gbfe ,_fff /2).Add_re (0,0,_gbfe ,_fff ).Add_re (_gbfe /2,0,_gbfe /2,_fff ).Add_w (_dadb .BorderSize ).SetStrokingColor (_dadb .BorderColor ).SetNonStrokingColor (_dadb .FillColor ).Add_B ().Add_Q ();
};

// SetStyle applies appearance `style` to `fa`.
func (_eae *FieldAppearance )SetStyle (style AppearanceStyle ){_eae ._gegf =&style };type quadding int ;

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _ff .PdfColor ;FillColor _ff .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func (_badbd *AppearanceStyle )processDA (_gde *_ff .PdfField ,_ccf *_f .ContentStreamOperations ,_dag ,_baba *_ff .PdfPageResources ,_dcdg *_f .ContentCreator )(*AppearanceFont ,bool ,error ){var _cag *AppearanceFont ;
var _aeca bool ;if _badbd .Fonts !=nil {if _badbd .Fonts .Fallback !=nil {_cag =_badbd .Fonts .Fallback ;};if _cedb :=_badbd .Fonts .FieldFallbacks ;_cedb !=nil {if _cdcd ,_gbgce :=_cedb [_gde .PartialName ()];_gbgce {_cag =_cdcd ;}else if _eed ,_eag :=_gde .FullName ();
_eag ==nil {if _deaa ,_bfc :=_cedb [_eed ];_bfc {_cag =_deaa ;};};};if _cag !=nil {_cag .fillName ();};_aeca =_badbd .Fonts .ForceReplace ;};var _dge string ;var _fba float64 ;var _gda bool ;if _ccf !=nil {for _ ,_gecc :=range *_ccf {if _gecc .Operand =="\u0054\u0066"&&len (_gecc .Params )==2{if _gbbg ,_abce :=_bb .GetNameVal (_gecc .Params [0]);
_abce {_dge =_gbbg ;};if _fbf ,_abfa :=_bb .GetNumberAsFloat (_gecc .Params [1]);_abfa ==nil {_fba =_fbf ;};_gda =true ;continue ;};_dcdg .AddOperand (*_gecc );};};var _afca *AppearanceFont ;var _ebbf _bb .PdfObject ;if _aeca &&_cag !=nil {_afca =_cag ;
}else {if _dag !=nil &&_dge !=""{if _ddb ,_bfaa :=_dag .GetFontByName (*_bb .MakeName (_dge ));_bfaa {if _aea ,_bggd :=_ff .NewPdfFontFromPdfObject (_ddb );_bggd ==nil {_ebbf =_ddb ;_afca =&AppearanceFont {Name :_dge ,Font :_aea ,Size :_fba };}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_bggd );
};};};if _afca ==nil &&_cag !=nil {_afca =_cag ;};if _afca ==nil {_cfa ,_eee :=_ff .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _eee !=nil {return nil ,false ,_eee ;};_afca =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_cfa ,Size :_fba };
};};if _afca .Size <=0&&_badbd .Fonts !=nil &&_badbd .Fonts .FallbackSize > 0{_afca .Size =_badbd .Fonts .FallbackSize ;};_abdd :=*_bb .MakeName (_afca .Name );if _ebbf ==nil {_ebbf =_afca .Font .ToPdfObject ();};if _dag !=nil &&!_dag .HasFontByName (_abdd ){_dag .SetFontByName (_abdd ,_ebbf );
};if _baba !=nil &&!_baba .HasFontByName (_abdd ){_baba .SetFontByName (_abdd ,_ebbf );};return _afca ,_gda ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_cff ImageFieldAppearance )WrapContentStream (page *_ff .PdfPage )error {_gbfb ,_ddec :=page .GetAllContentStreams ();if _ddec !=nil {return _ddec ;};_abcc :=_f .NewContentStreamParser (_gbfb );_aeg ,_ddec :=_abcc .Parse ();if _ddec !=nil {return _ddec ;
};_aeg .WrapIfNeeded ();_gbdb :=[]string {_aeg .String ()};return page .SetContentStreams (_gbdb ,_fccf ());};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_fabe FieldAppearance )WrapContentStream (page *_ff .PdfPage )error {_abca ,_fbef :=page .GetAllContentStreams ();if _fbef !=nil {return _fbef ;};_dab :=_f .NewContentStreamParser (_abca );_feg ,_fbef :=_dab .Parse ();if _fbef !=nil {return _fbef ;
};_feg .WrapIfNeeded ();_gdef :=[]string {_feg .String ()};return page .SetContentStreams (_gdef ,_fccf ());};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_ff .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ff .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ff .PdfColorDeviceRGB ;Opacity float64 ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _dfc (_ed CircleAnnotationDef ,_be string )([]byte ,*_ff .PdfRectangle ,*_ff .PdfRectangle ,error ){_ac :=_dd .Circle {X :_ed .X ,Y :_ed .Y ,Width :_ed .Width ,Height :_ed .Height ,FillEnabled :_ed .FillEnabled ,FillColor :_ed .FillColor ,BorderEnabled :_ed .BorderEnabled ,BorderWidth :_ed .BorderWidth ,BorderColor :_ed .BorderColor ,Opacity :_ed .Opacity };
_ca ,_eeff ,_fa :=_ac .Draw (_be );if _fa !=nil {return nil ,nil ,nil ,_fa ;};_fda :=&_ff .PdfRectangle {};_fda .Llx =_ed .X +_eeff .Llx ;_fda .Lly =_ed .Y +_eeff .Lly ;_fda .Urx =_ed .X +_eeff .Urx ;_fda .Ury =_ed .Y +_eeff .Ury ;return _ca ,_eeff ,_fda ,nil ;
};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_ff .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_ff .PdfFieldButton ,error ){if page ==nil {return nil ,_gc .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_gc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_gc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cafa :=_ff .NewPdfField ();_bcg :=&_ff .PdfFieldButton {};_bcg .PdfField =_cafa ;_cafa .SetContext (_bcg );_bcg .SetType (_ff .ButtonTypePush );_bcg .T =_bb .MakeString (name );_cgg :=_ff .NewPdfAnnotationWidget ();_cgg .Rect =_bb .MakeArrayFromFloats (rect );
_cgg .P =page .ToPdfObject ();_cgg .F =_bb .MakeInteger (4);_cgg .Parent =_bcg .ToPdfObject ();_ebac :=rect [2]-rect [0];_ddab :=rect [3]-rect [1];_ecfg :=opt ._cada ;_eaff :=_f .NewContentCreator ();if _ecfg .BorderSize > 0{_bef (_eaff ,_ecfg ,_ebac ,_ddab );
};if _ecfg .DrawAlignmentReticle {_gffb :=_ecfg ;_gffb .BorderSize =0.2;_ebee (_eaff ,_gffb ,_ebac ,_ddab );};_ggbg ,_dcf :=_bgbf (_ebac ,_ddab ,opt .Image ,_ecfg );if _dcf !=nil {return nil ,_dcf ;};_gcca ,_gbfg :=_bb .GetDict (_cgg .MK );if _gbfg {_gcca .Set ("\u006c",_ggbg .ToPdfObject ());
};_dceg :=_bb .MakeDict ();_dceg .Set ("\u0046\u0052\u004d",_ggbg .ToPdfObject ());_cgdc :=_ff .NewPdfPageResources ();_cgdc .ProcSet =_bb .MakeArray (_bb .MakeName ("\u0050\u0044\u0046"));_cgdc .XObject =_dceg ;_adea :=_ebac -2;_dgce :=_ddab -2;_eaff .Add_q ();
_eaff .Add_re (1,1,_adea ,_dgce );_eaff .Add_W ();_eaff .Add_n ();_adea -=2;_dgce -=2;_eaff .Add_q ();_eaff .Add_re (2,2,_adea ,_dgce );_eaff .Add_W ();_eaff .Add_n ();_cgfg :=_c .Min (_adea /float64 (opt .Image .Width ),_dgce /float64 (opt .Image .Height ));
_eaff .Add_cm (_cgfg ,0,0,_cgfg ,(_ebac /2)-(float64 (opt .Image .Width )*_cgfg /2)+2,2);_eaff .Add_Do ("\u0046\u0052\u004d");_eaff .Add_Q ();_eaff .Add_Q ();_ffa :=_ff .NewXObjectForm ();_ffa .FormType =_bb .MakeInteger (1);_ffa .Resources =_cgdc ;_ffa .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_ebac ,_ddab });
_ffa .Matrix =_bb .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_ffa .SetContentStream (_eaff .Bytes (),_fccf ());_cggf :=_bb .MakeDict ();_cggf .Set ("\u004e",_ffa .ToPdfObject ());_cgg .AP =_cggf ;_bcg .Annotations =append (_bcg .Annotations ,_cgg );
return _bcg ,nil ;};func _fbegb (_ebdb []_dd .Point )(_eggf []_dd .Point ,_aae []_dd .Point ,_bff error ){_beg :=len (_ebdb )-1;if len (_ebdb )< 1{return nil ,nil ,_gc .New ("\u0041\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0070\u006f\u0069\u006e\u0074s \u0072e\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0020\u0063\u0075\u0072\u0076\u0065\u0020\u0063\u006f\u006e\u0074r\u006f\u006c\u0020\u0070\u006f\u0069\u006e\u0074\u0073");
};if _beg ==1{_aefd :=_dd .Point {X :(2*_ebdb [0].X +_ebdb [1].X )/3,Y :(2*_ebdb [0].Y +_ebdb [1].Y )/3};_eggf =append (_eggf ,_aefd );_aae =append (_aae ,_dd .Point {X :2*_aefd .X -_ebdb [0].X ,Y :2*_aefd .Y -_ebdb [0].Y });return _eggf ,_aae ,nil ;};
_dca :=make ([]float64 ,_beg );for _gfdc :=1;_gfdc < _beg -1;_gfdc ++{_dca [_gfdc ]=4*_ebdb [_gfdc ].X +2*_ebdb [_gfdc +1].X ;};_dca [0]=_ebdb [0].X +2*_ebdb [1].X ;_dca [_beg -1]=(8*_ebdb [_beg -1].X +_ebdb [_beg ].X )/2.0;_bfeg :=_beab (_dca );for _adfe :=1;
_adfe < _beg -1;_adfe ++{_dca [_adfe ]=4*_ebdb [_adfe ].Y +2*_ebdb [_adfe +1].Y ;};_dca [0]=_ebdb [0].Y +2*_ebdb [1].Y ;_dca [_beg -1]=(8*_ebdb [_beg -1].Y +_ebdb [_beg ].Y )/2.0;_ffe :=_beab (_dca );_eggf =make ([]_dd .Point ,_beg );_aae =make ([]_dd .Point ,_beg );
for _gcb :=0;_gcb < _beg ;_gcb ++{_eggf [_gcb ]=_dd .Point {X :_bfeg [_gcb ],Y :_ffe [_gcb ]};if _gcb < _beg -1{_aae [_gcb ]=_dd .Point {X :2*_ebdb [_gcb +1].X -_bfeg [_gcb +1],Y :2*_ebdb [_gcb +1].Y -_ffe [_gcb +1]};}else {_aae [_gcb ]=_dd .Point {X :(_ebdb [_beg ].X +_bfeg [_beg -1])/2,Y :(_ebdb [_beg ].Y +_ffe [_beg -1])/2};
};};return _eggf ,_aae ,nil ;};func _abbg (_ccad _dc .Image ,_agga string ,_gegae *SignatureFieldOpts ,_ceff []float64 ,_dfae *_f .ContentCreator )(*_bb .PdfObjectName ,*_ff .XObjectImage ,error ){_baca ,_edea :=_ff .DefaultImageHandler {}.NewImageFromGoImage (_ccad );
if _edea !=nil {return nil ,nil ,_edea ;};_fged ,_edea :=_ff .NewXObjectImageFromImage (_baca ,nil ,_gegae .Encoder );if _edea !=nil {return nil ,nil ,_edea ;};_gede ,_gdea :=float64 (*_fged .Width ),float64 (*_fged .Height );_eeg :=_ceff [2]-_ceff [0];
_ebeg :=_ceff [3]-_ceff [1];if _gegae .AutoSize {_bae :=_c .Min (_eeg /_gede ,_ebeg /_gdea );_gede *=_bae ;_gdea *=_bae ;_ceff [0]=_ceff [0]+(_eeg /2)-(_gede /2);_ceff [1]=_ceff [1]+(_ebeg /2)-(_gdea /2);};var _fcae *_bb .PdfObjectName ;if _acfe ,_aac :=_bb .GetName (_fged .Name );
_aac {_fcae =_acfe ;}else {_fcae =_bb .MakeName (_agga );};if _dfae !=nil {_dfae .Add_q ().Translate (_ceff [0],_ceff [1]).Scale (_gede ,_gdea ).Add_Do (*_fcae ).Add_Q ();}else {return nil ,nil ,_gc .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _fcae ,_fged ,nil ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _de (_ad *_ff .PdfAnnotationWidget ,_gea *_ff .PdfFieldText ,_fc *_ff .PdfPageResources ,_gcc AppearanceStyle )(*_bb .PdfObjectDictionary ,error ){_fac :=_ff .NewPdfPageResources ();_dg ,_bac :=_bb .GetArray (_ad .Rect );
if !_bac {return nil ,_gc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bd ,_badc :=_ff .NewPdfRectangle (*_dg );if _badc !=nil {return nil ,_badc ;};_bf ,_gad :=_bd .Width (),_bd .Height ();_deb ,_bcee :=_bf ,_gad ;_caf ,_egd :=_bb .GetDict (_ad .MK );
if _egd {_ddg ,_ :=_bb .GetDict (_ad .BS );_acf :=_gcc .applyAppearanceCharacteristics (_caf ,_ddg ,nil );if _acf !=nil {return nil ,_acf ;};};_bdf ,_badc :=_f .NewContentStreamParser (_cceg (_gea .PdfField )).Parse ();if _badc !=nil {return nil ,_badc ;
};_aaa :=_f .NewContentCreator ();if _gcc .BorderSize > 0{_bef (_aaa ,_gcc ,_bf ,_gad );};if _gcc .DrawAlignmentReticle {_bbb :=_gcc ;_bbb .BorderSize =0.2;_ebee (_aaa ,_bbb ,_bf ,_gad );};_aaa .Add_BMC ("\u0054\u0078");_aaa .Add_q ();_bf ,_gad =_gcc .applyRotation (_caf ,_bf ,_gad ,_aaa );
_aaa .Add_BT ();_db ,_ec ,_badc :=_gcc .processDA (_gea .PdfField ,_bdf ,_fc ,_fac ,_aaa );if _badc !=nil {return nil ,_badc ;};_ag :=_db .Font ;_ebg :=_db .Size ;_gfe :=_bb .MakeName (_db .Name );if _gea .Flags ().Has (_ff .FieldFlagMultiline )&&_gea .MaxLen !=nil {_g .Log .Debug ("\u004c\u006f\u006f\u006b\u0020\u0066\u006f\u0072\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0066\u006f\u0072 \u004e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
if _eaf ,_fgc ,_aag :=_ebc (_ad .PdfAnnotation .AP ,_fc );_aag {_gfe =_eaf ;_ebg =_fgc ;_ec =true ;};};_facc :=_ebg ==0;if _facc &&_ec {_ebg =_gad *_gcc .AutoFontSizeFraction ;};_bg :=_ag .Encoder ();if _bg ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_bg =_aa .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_cdd ,_badc :=_ag .GetFontDescriptor ();if _badc !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _efd string ;if _dcd ,_bcc :=_bb .GetString (_gea .V );_bcc {_efd =_dcd .Decoded ();};if len (_efd )==0{return nil ,nil ;};_fgb :=[]string {_efd };_baa :=false ;if _gea .Flags ().Has (_ff .FieldFlagMultiline ){_baa =true ;_efd =_gb .Replace (_efd ,"\u000d\u000a","\u000a",-1);
_efd =_gb .Replace (_efd ,"\u000d","\u000a",-1);_fgb =_gb .Split (_efd ,"\u000a");};_bcf :=make ([]string ,len (_fgb ));copy (_bcf ,_fgb );_dcc :=_gcc .MultilineLineHeight ;_fca :=0.0;_af :=0;if _bg !=nil {for _ebg >=0{_fcf :=make ([]string ,len (_fgb ));
copy (_fcf ,_fgb );_bgd :=make ([]string ,len (_bcf ));copy (_bgd ,_bcf );_fca =0.0;_af =0;_bfa :=len (_fcf );_ggc :=0;for _ggc < _bfa {var _fb float64 ;_fea :=-1;_fdg :=_cge ;if _gcc .MarginLeft !=nil {_fdg =*_gcc .MarginLeft ;};for _gaa ,_eca :=range _fcf [_ggc ]{if _eca ==' '{_fea =_gaa ;
};_bec ,_egda :=_ag .GetRuneMetrics (_eca );if !_egda {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_eca );
continue ;};_fb =_fdg ;_fdg +=_bec .Wx ;if _baa &&!_facc &&_ebg *_fdg /1000.0> _bf {_cb :=_gaa ;_gcd :=_gaa ;if _fea > 0{_cb =_fea +1;_gcd =_fea ;};_cc :=_fcf [_ggc ][_cb :];_cbc :=_bgd [_ggc ][_cb :];if _ggc < len (_fcf )-1{_fcf =append (_fcf [:_ggc +1],_fcf [_ggc :]...);
_fcf [_ggc +1]=_cc ;_bgd =append (_bgd [:_ggc +1],_bgd [_ggc :]...);_bgd [_ggc +1]=_cbc ;}else {_fcf =append (_fcf ,_cc );_bgd =append (_bgd ,_cbc );};_fcf [_ggc ]=_fcf [_ggc ][0:_gcd ];_bgd [_ggc ]=_bgd [_ggc ][0:_gcd ];_bfa ++;_fdg =_fb ;break ;};};if _fdg > _fca {_fca =_fdg ;
};_fcf [_ggc ]=string (_bg .Encode (_fcf [_ggc ]));if len (_fcf [_ggc ])> 0{_af ++;};_ggc ++;};_afa :=_ebg ;if _af > 1{_afa *=_dcc ;};_fafg :=float64 (_af )*_afa ;if _facc ||_fafg <=_gad {_fgb =_fcf ;_bcf =_bgd ;break ;};_ebg --;};};_bde :=_cge ;if _gcc .MarginLeft !=nil {_bde =*_gcc .MarginLeft ;
};if _ebg ==0||_facc &&_fca > 0&&_bde +_fca *_ebg /1000.0> _bf {_ebg =0.95*1000.0*(_bf -_bde )/_fca ;};_fdd :=_gddd ;{if _egf ,_aaaa :=_bb .GetIntVal (_gea .Q );_aaaa {switch _egf {case 0:_fdd =_gddd ;case 1:_fdd =_ace ;case 2:_fdd =_da ;default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_egf );
};};};_abf :=_ebg ;if _baa &&_af > 1{_abf =_dcc *_ebg ;};var _cgc float64 ;if _cdd !=nil {_cgc ,_badc =_cdd .GetCapHeight ();if _badc !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_badc );
};};if int (_cgc )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cgc =1000;};_bca :=_cgc /1000.0*_ebg ;_gff :=0.0;{_becc :=float64 (_af )*_abf ;if _facc &&_gff +_becc > _gad {_ebg =0.95*(_gad -_gff )/float64 (_af );_abf =_ebg ;if _baa &&_af > 1{_abf =_dcc *_ebg ;};_bca =_cgc /1000.0*_ebg ;_becc =float64 (_af )*_abf ;
};if _gad > _becc {if _baa {if _gcc .MultilineVAlignMiddle {_acg :=(_gad -(_becc +_bca ))/2.0;_gegd :=_acg +_becc +_bca -_abf ;_gff =_gegd ;if _af > 1{_gff =_gff +(_becc /_ebg *float64 (_af ))-_abf -_bca ;};if _gff < _becc {_gff =(_gad -_bca )/2.0;};}else {_gff =_gad -_abf ;
if _gff > _ebg {_eafc :=0.0;if _baa &&_gcc .MultilineLineHeight > 1&&_af > 1{_eafc =_gcc .MultilineLineHeight -1;};_gff -=_ebg *(0.5-_eafc );};};}else {_gff =(_gad -_bca )/2.0;};};};_aaa .Add_Tf (*_gfe ,_ebg );_aaa .Add_Td (_bde ,_gff );_abff :=_bde ;_ce :=_bde ;
for _ege ,_eaa :=range _fgb {_bba :=0.0;for _ ,_bfd :=range _bcf [_ege ]{_fcc ,_gbd :=_ag .GetRuneMetrics (_bfd );if !_gbd {continue ;};_bba +=_fcc .Wx ;};_dea :=_bba /1000.0*_ebg ;_dda :=_bf -_dea ;var _ddf float64 ;switch _fdd {case _gddd :_ddf =_abff ;
case _ace :_ddf =_dda /2;case _da :_ddf =_dda ;};_bde =_ddf -_ce ;if _bde > 0.0{_aaa .Add_Td (_bde ,0);};_ce =_ddf ;_aaa .Add_Tj (*_bb .MakeString (_eaa ));if _ege < len (_fgb )-1{_aaa .Add_Td (0,-_ebg *_dcc );};};_aaa .Add_ET ();_aaa .Add_Q ();_aaa .Add_EMC ();
_aeeg :=_ff .NewXObjectForm ();_aeeg .Resources =_fac ;_aeeg .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_deb ,_bcee });_aeeg .SetContentStream (_aaa .Bytes (),_fccf ());_add :=_bb .MakeDict ();_add .Set ("\u004e",_aeeg .ToPdfObject ());return _add ,nil ;
};func _eef (_gag CircleAnnotationDef )(*_bb .PdfObjectDictionary ,*_ff .PdfRectangle ,error ){_ae :=_ff .NewXObjectForm ();_ae .Resources =_ff .NewPdfPageResources ();_df :="";if _gag .Opacity < 1.0{_bce :=_bb .MakeDict ();_bce .Set ("\u0063\u0061",_bb .MakeFloat (_gag .Opacity ));
_bce .Set ("\u0043\u0041",_bb .MakeFloat (_gag .Opacity ));_gg :=_ae .Resources .AddExtGState ("\u0067\u0073\u0031",_bce );if _gg !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_gg ;};_df ="\u0067\u0073\u0031";};_ba ,_gdd ,_cg ,_fd :=_dfc (_gag ,_df );if _fd !=nil {return nil ,nil ,_fd ;};_fd =_ae .SetContentStream (_ba ,nil );if _fd !=nil {return nil ,nil ,_fd ;};_ae .BBox =_gdd .ToPdfObject ();_abc :=_bb .MakeDict ();
_abc .Set ("\u004e",_ae .ToPdfObject ());return _abc ,_cg ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_cfcb ImageFieldAppearance )GenerateAppearanceDict (form *_ff .PdfAcroForm ,field *_ff .PdfField ,wa *_ff .PdfAnnotationWidget )(*_bb .PdfObjectDictionary ,error ){_ ,_afd :=field .GetContext ().(*_ff .PdfFieldButton );if !_afd {_g .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_cfb ,_egab :=_bb .GetDict (wa .AP );if _egab &&_cfcb .OnlyIfMissing {_g .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _cfb ,nil ;};if form .DR ==nil {form .DR =_ff .NewPdfPageResources ();};switch _dabc :=field .GetContext ().(type ){case *_ff .PdfFieldButton :if _dabc .IsPush (){_bccb ,_deagf :=_cecb (_dabc ,wa ,_cfcb .Style ());if _deagf !=nil {return nil ,_deagf ;
};return _bccb ,nil ;};};return nil ,nil ;};func _abee (_aafa RectangleAnnotationDef )(*_bb .PdfObjectDictionary ,*_ff .PdfRectangle ,error ){_gaaf :=_ff .NewXObjectForm ();_gaaf .Resources =_ff .NewPdfPageResources ();_gdc :="";if _aafa .Opacity < 1.0{_cfef :=_bb .MakeDict ();
_cfef .Set ("\u0063\u0061",_bb .MakeFloat (_aafa .Opacity ));_cfef .Set ("\u0043\u0041",_bb .MakeFloat (_aafa .Opacity ));_bfag :=_gaaf .Resources .AddExtGState ("\u0067\u0073\u0031",_cfef );if _bfag !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_bfag ;};_gdc ="\u0067\u0073\u0031";};_cba ,_fggd ,_afbb ,_aegd :=_cagb (_aafa ,_gdc );if _aegd !=nil {return nil ,nil ,_aegd ;};_aegd =_gaaf .SetContentStream (_cba ,nil );if _aegd !=nil {return nil ,nil ,_aegd ;};_gaaf .BBox =_fggd .ToPdfObject ();
_ggac :=_bb .MakeDict ();_ggac .Set ("\u004e",_gaaf .ToPdfObject ());return _ggac ,_afbb ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_ff .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_ff .PdfFieldButton ,error ){if page ==nil {return nil ,_gc .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_gc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_gc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_aagcd ,_ebag :=_ff .NewStandard14Font (_ff .ZapfDingbatsName );if _ebag !=nil {return nil ,_ebag ;};_fddd :=_ff .NewPdfField ();_feaa :=&_ff .PdfFieldButton {};_fddd .SetContext (_feaa );_feaa .PdfField =_fddd ;_feaa .T =_bb .MakeString (name );_feaa .SetType (_ff .ButtonTypeCheckbox );
_cgcb :="\u004f\u0066\u0066";if opt .Checked {_cgcb ="\u0059\u0065\u0073";};_feaa .V =_bb .MakeName (_cgcb );_bdg :=_ff .NewPdfAnnotationWidget ();_bdg .Rect =_bb .MakeArrayFromFloats (rect );_bdg .P =page .ToPdfObject ();_bdg .F =_bb .MakeInteger (4);
_bdg .Parent =_feaa .ToPdfObject ();_ceee :=rect [2]-rect [0];_adbe :=rect [3]-rect [1];var _eec _b .Buffer ;_eec .WriteString ("\u0071\u000a");_eec .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_eec .WriteString ("\u0042\u0054\u000a");
_eec .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_eec .WriteString ("\u0045\u0054\u000a");_eec .WriteString ("\u0051\u000a");_aedb :=_f .NewContentCreator ();_aedb .Add_q ();_aedb .Add_rg (0,0,1);_aedb .Add_BT ();
_aedb .Add_Tf (*_bb .MakeName ("\u005a\u0061\u0044\u0062"),12);_aedb .Add_Td (0,0);_aedb .Add_ET ();_aedb .Add_Q ();_fafea :=_ff .NewXObjectForm ();_fafea .SetContentStream (_aedb .Bytes (),_bb .NewRawEncoder ());_fafea .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_ceee ,_adbe });
_fafea .Resources =_ff .NewPdfPageResources ();_fafea .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_aagcd .ToPdfObject ());_aedb =_f .NewContentCreator ();_aedb .Add_q ();_aedb .Add_re (0,0,_ceee ,_adbe );_aedb .Add_W ().Add_n ();_aedb .Add_rg (0,0,1);
_aedb .Translate (0,3.0);_aedb .Add_BT ();_aedb .Add_Tf (*_bb .MakeName ("\u005a\u0061\u0044\u0062"),12);_aedb .Add_Td (0,0);_aedb .Add_Tj (*_bb .MakeString ("\u0034"));_aedb .Add_ET ();_aedb .Add_Q ();_eeea :=_ff .NewXObjectForm ();_eeea .SetContentStream (_aedb .Bytes (),_bb .NewRawEncoder ());
_eeea .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_ceee ,_adbe });_eeea .Resources =_ff .NewPdfPageResources ();_eeea .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_aagcd .ToPdfObject ());_gebc :=_bb .MakeDict ();_gebc .Set ("\u004f\u0066\u0066",_fafea .ToPdfObject ());
_gebc .Set ("\u0059\u0065\u0073",_eeea .ToPdfObject ());_bgad :=_bb .MakeDict ();_bgad .Set ("\u004e",_gebc );_bdg .AP =_bgad ;_bdg .AS =_bb .MakeName (_cgcb );_feaa .Annotations =append (_feaa .Annotations ,_bdg );return _feaa ,nil ;};func (_fcad *AppearanceStyle )applyRotation (_bga *_bb .PdfObjectDictionary ,_edg ,_cee float64 ,_geb *_f .ContentCreator )(float64 ,float64 ){if !_fcad .AllowMK {return _edg ,_cee ;
};if _bga ==nil {return _edg ,_cee ;};_badbe ,_ :=_bb .GetNumberAsFloat (_bga .Get ("\u0052"));if _badbe ==0{return _edg ,_cee ;};_cabc :=-_badbe ;_fafe :=_dd .Path {Points :[]_dd .Point {_dd .NewPoint (0,0).Rotate (_cabc ),_dd .NewPoint (_edg ,0).Rotate (_cabc ),_dd .NewPoint (0,_cee ).Rotate (_cabc ),_dd .NewPoint (_edg ,_cee ).Rotate (_cabc )}}.GetBoundingBox ();
_geb .RotateDeg (_badbe );_geb .Translate (_fafe .X ,_fafe .Y );return _fafe .Width ,_fafe .Height ;};func _fcg (_ead *_ff .PdfAnnotationWidget ,_fgcb *_ff .PdfFieldButton ,_fdf *_ff .PdfPageResources ,_gab AppearanceStyle )(*_bb .PdfObjectDictionary ,error ){_caa ,_ega :=_bb .GetArray (_ead .Rect );
if !_ega {return nil ,_gc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bbbb ,_gef :=_ff .NewPdfRectangle (*_caa );if _gef !=nil {return nil ,_gef ;};_aeff ,_gcg :=_bbbb .Width (),_bbbb .Height ();_ddge ,_abd :=_aeff ,_gcg ;
_g .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_ead .BS );_ebe ,_gef :=_ff .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _gef !=nil {return nil ,_gef ;
};_afc ,_dfcf :=_bb .GetDict (_ead .MK );if _dfcf {_fbe ,_ :=_bb .GetDict (_ead .BS );_gcfe :=_gab .applyAppearanceCharacteristics (_afc ,_fbe ,_ebe );if _gcfe !=nil {return nil ,_gcfe ;};};_afe :=_ff .NewXObjectForm ();{_ddgg :=_f .NewContentCreator ();
if _gab .BorderSize > 0{_bef (_ddgg ,_gab ,_aeff ,_gcg );};if _gab .DrawAlignmentReticle {_agf :=_gab ;_agf .BorderSize =0.2;_ebee (_ddgg ,_agf ,_aeff ,_gcg );};_aeff ,_gcg =_gab .applyRotation (_afc ,_aeff ,_gcg ,_ddgg );_fad :=_gab .AutoFontSizeFraction *_gcg ;
_aebg ,_dcbc :=_ebe .GetRuneMetrics (_gab .CheckmarkRune );if !_dcbc {return nil ,_gc .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_efff :=_ebe .Encoder ();_dce :=_efff .Encode (string (_gab .CheckmarkRune ));
_ddc :=_aebg .Wx *_fad /1000.0;_agdb :=705.0;_gffgf :=_agdb /1000.0*_fad ;_cf :=_cge ;if _gab .MarginLeft !=nil {_cf =*_gab .MarginLeft ;};_cafe :=1.0;if _ddc < _aeff {_cf =(_aeff -_ddc )/2.0;};if _gffgf < _gcg {_cafe =(_gcg -_gffgf )/2.0;};_ddgg .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_fad ).Add_Td (_cf ,_cafe ).Add_Tj (*_bb .MakeStringFromBytes (_dce )).Add_ET ().Add_Q ();
_afe .Resources =_ff .NewPdfPageResources ();_afe .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_ebe .ToPdfObject ());_afe .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_ddge ,_abd });_afe .SetContentStream (_ddgg .Bytes (),_fccf ());};_bcfc :=_ff .NewXObjectForm ();
{_fae :=_f .NewContentCreator ();if _gab .BorderSize > 0{_bef (_fae ,_gab ,_aeff ,_gcg );};_bcfc .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_ddge ,_abd });_bcfc .SetContentStream (_fae .Bytes (),_fccf ());};_fdac :=_bb .PdfObjectName ("\u0059\u0065\u0073");
_bbgg ,_dfcf :=_bb .GetDict (_ead .PdfAnnotation .AP );if _dfcf &&_bbgg !=nil {_ede :=_bb .TraceToDirectObject (_bbgg .Get ("\u004e"));switch _deaf :=_ede .(type ){case *_bb .PdfObjectDictionary :_eaeb :=_deaf .Keys ();for _ ,_dfa :=range _eaeb {if _dfa !="\u004f\u0066\u0066"{_fdac =_dfa ;
};};};};_gca :=_bb .MakeDict ();_gca .Set ("\u004f\u0066\u0066",_bcfc .ToPdfObject ());_gca .Set (_fdac ,_afe .ToPdfObject ());_cgd :=_bb .MakeDict ();_cgd .Set ("\u004e",_gca );return _cgd ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};func _fccf ()_bb .StreamEncoder {return _bb .NewFlateEncoder ()};func _cdc (_gge *_ff .PdfAnnotationWidget ,_cec *_ff .PdfFieldText ,_bed *_ff .PdfPageResources ,_ffca AppearanceStyle )(*_bb .PdfObjectDictionary ,error ){_fgf :=_ff .NewPdfPageResources ();
_cef ,_bcab :=_bb .GetArray (_gge .Rect );if !_bcab {return nil ,_gc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ada ,_adc :=_ff .NewPdfRectangle (*_cef );if _adc !=nil {return nil ,_adc ;};_dbb ,_bbg :=_ada .Width (),_ada .Height ();
_bcb ,_fbg :=_dbb ,_bbg ;_dbd ,_badf :=_bb .GetDict (_gge .MK );if _badf {_bdfc ,_ :=_bb .GetDict (_gge .BS );_dgc :=_ffca .applyAppearanceCharacteristics (_dbd ,_bdfc ,nil );if _dgc !=nil {return nil ,_dgc ;};};_aec ,_badf :=_bb .GetIntVal (_cec .MaxLen );
if !_badf {return nil ,_gc .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _aec <=0{return nil ,_gc .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_addf :=_dbb /float64 (_aec );
_gbe ,_adc :=_f .NewContentStreamParser (_cceg (_cec .PdfField )).Parse ();if _adc !=nil {return nil ,_adc ;};_fee :=_f .NewContentCreator ();if _ffca .BorderSize > 0{_bef (_fee ,_ffca ,_dbb ,_bbg );};if _ffca .DrawAlignmentReticle {_ebd :=_ffca ;_ebd .BorderSize =0.2;
_ebee (_fee ,_ebd ,_dbb ,_bbg );};_fee .Add_BMC ("\u0054\u0078");_fee .Add_q ();_ ,_bbg =_ffca .applyRotation (_dbd ,_dbb ,_bbg ,_fee );_fee .Add_BT ();_bbag ,_aef ,_adc :=_ffca .processDA (_cec .PdfField ,_gbe ,_bed ,_fgf ,_fee );if _adc !=nil {return nil ,_adc ;
};_eea :=_bbag .Font ;_fbb :=_bb .MakeName (_bbag .Name );_gbdf :=_bbag .Size ;_gbb :=_gbdf ==0;if _gbb &&_aef {_gbdf =_bbg *_ffca .AutoFontSizeFraction ;};_agd :=_eea .Encoder ();if _agd ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_agd =_aa .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _ceb string ;if _bdd ,_gcf :=_bb .GetString (_cec .V );_gcf {_ceb =_bdd .Decoded ();};_fee .Add_Tf (*_fbb ,_gbdf );var _gfd float64 ;for _ ,_ecg :=range _ceb {_badb ,_bgg :=_eea .GetRuneMetrics (_ecg );
if !_bgg {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_ecg );
continue ;};_cce :=_badb .Wy ;if int (_cce )<=0{_cce =_badb .Wx ;};if _cce > _gfd {_gfd =_cce ;};};if int (_gfd )==0{_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_gfd =1000;};_bfe ,_adc :=_eea .GetFontDescriptor ();if _adc !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _ggb float64 ;
if _bfe !=nil {_ggb ,_adc =_bfe .GetCapHeight ();if _adc !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_adc );
};};if int (_ggb )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_ggb =1000.0;};_eefe :=_ggb /1000.0*_gbdf ;_cdf :=0.0;_gee :=1.0*_gbdf *(_gfd /1000.0);{_bea :=_gee ;if _gbb &&_cdf +_bea > _bbg {_gbdf =0.95*(_bbg -_cdf );_eefe =_ggb /1000.0*_gbdf ;};if _bbg > _eefe {_cdf =(_bbg -_eefe )/2.0;};};_fee .Add_Td (0,_cdf );
if _gfgg ,_dfe :=_bb .GetIntVal (_cec .Q );_dfe {switch _gfgg {case 2:if len (_ceb )< _aec {_bab :=float64 (_aec -len (_ceb ))*_addf ;_fee .Add_Td (_bab ,0);};};};for _acgf ,_gbf :=range _ceb {_bced :=_cge ;if _ffca .MarginLeft !=nil {_bced =*_ffca .MarginLeft ;
};_dad :=string (_gbf );if _agd !=nil {_ggcc ,_ecac :=_eea .GetRuneMetrics (_gbf );if !_ecac {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_gbf );
continue ;};_dad =string (_agd .Encode (_dad ));_cgf :=_gbdf *_ggcc .Wx /1000.0;_gffg :=(_addf -_cgf )/2;_bced =_gffg ;};_fee .Add_Td (_bced ,0);_fee .Add_Tj (*_bb .MakeString (_dad ));if _acgf !=len (_ceb )-1{_fee .Add_Td (_addf -_bced ,0);};};_fee .Add_ET ();
_fee .Add_Q ();_fee .Add_EMC ();_ccc :=_ff .NewXObjectForm ();_ccc .Resources =_fgf ;_ccc .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,_bcb ,_fbg });_ccc .SetContentStream (_fee .Bytes (),_fccf ());_gbc :=_bb .MakeDict ();_gbc .Set ("\u004e",_ccc .ToPdfObject ());
return _gbc ,nil ;};func (_ecc *AppearanceStyle )applyAppearanceCharacteristics (_cda *_bb .PdfObjectDictionary ,_ged *_bb .PdfObjectDictionary ,_bgca *_ff .PdfFont )error {if !_ecc .AllowMK {return nil ;};if CA ,_adda :=_bb .GetString (_cda .Get ("\u0043\u0041"));
_adda &&_bgca !=nil {_afea :=CA .Bytes ();if len (_afea )!=0{_aed :=[]rune (_bgca .Encoder ().Decode (_afea ));if len (_aed )==1{_ecc .CheckmarkRune =_aed [0];};};};if BC ,_decb :=_bb .GetArray (_cda .Get ("\u0042\u0043"));_decb {_fga ,_bcaa :=BC .ToFloat64Array ();
if _bcaa !=nil {return _bcaa ;};switch len (_fga ){case 1:_ecc .BorderColor =_ff .NewPdfColorDeviceGray (_fga [0]);case 3:_ecc .BorderColor =_ff .NewPdfColorDeviceRGB (_fga [0],_fga [1],_fga [2]);case 4:_ecc .BorderColor =_ff .NewPdfColorDeviceCMYK (_fga [0],_fga [1],_fga [2],_fga [3]);
default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_fga ));
};if _ged !=nil {if _bgf ,_edb :=_bb .GetNumberAsFloat (_ged .Get ("\u0057"));_edb ==nil {_ecc .BorderSize =_bgf ;};};};if BG ,_ggbd :=_bb .GetArray (_cda .Get ("\u0042\u0047"));_ggbd {_afg ,_efa :=BG .ToFloat64Array ();if _efa !=nil {return _efa ;};switch len (_afg ){case 1:_ecc .FillColor =_ff .NewPdfColorDeviceGray (_afg [0]);
case 3:_ecc .FillColor =_ff .NewPdfColorDeviceRGB (_afg [0],_afg [1],_afg [2]);case 4:_ecc .FillColor =_ff .NewPdfColorDeviceCMYK (_afg [0],_afg [1],_afg [2],_afg [3]);default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_afg ));
};};return nil ;};func _bgbf (_aedbe ,_adbf float64 ,_fgcba *_ff .Image ,_aeaa AppearanceStyle )(*_ff .XObjectForm ,error ){_eaae ,_agb :=_ff .NewXObjectImageFromImage (_fgcba ,nil ,_bb .NewFlateEncoder ());if _agb !=nil {return nil ,_agb ;};_eaae .Decode =_bb .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});
_cegg :=_ff .NewPdfPageResources ();_cegg .ProcSet =_bb .MakeArray (_bb .MakeName ("\u0050\u0044\u0046"),_bb .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));_cegg .SetXObjectImageByName (_bb .PdfObjectName ("\u0049\u006d\u0030"),_eaae );_fgcgd :=_f .NewContentCreator ();
_fgcgd .Add_q ();_fgcgd .Add_cm (float64 (_fgcba .Width ),0,0,float64 (_fgcba .Height ),0,0);_fgcgd .Add_Do ("\u0049\u006d\u0030");_fgcgd .Add_Q ();_fabba :=_ff .NewXObjectForm ();_fabba .FormType =_bb .MakeInteger (1);_fabba .BBox =_bb .MakeArrayFromFloats ([]float64 {0,0,float64 (_fgcba .Width ),float64 (_fgcba .Height )});
_fabba .Resources =_cegg ;_fabba .SetContentStream (_fgcgd .Bytes (),_fccf ());return _fabba ,nil ;};