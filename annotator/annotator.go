//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_bf "bytes";_af "errors";_c "github.com/unidoc/unipdf/v3/common";_fa "github.com/unidoc/unipdf/v3/contentstream";_bb "github.com/unidoc/unipdf/v3/contentstream/draw";_cf "github.com/unidoc/unipdf/v3/core";_f "github.com/unidoc/unipdf/v3/internal/textencoding";_db "github.com/unidoc/unipdf/v3/model";_fb "math";_a "strings";_d "unicode";);

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_cgb FieldAppearance )GenerateAppearanceDict (form *_db .PdfAcroForm ,field *_db .PdfField ,wa *_db .PdfAnnotationWidget )(*_cf .PdfObjectDictionary ,error ){_c .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_caa :=field .GetContext ().(*_db .PdfFieldText );_dag ,_gd :=_cf .GetDict (wa .AP );if _gd &&_cgb .OnlyIfMissing &&(!_caa ||!_cgb .RegenerateTextFields ){_c .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _dag ,nil ;};if form .DR ==nil {form .DR =_db .NewPdfPageResources ();};switch _eg :=field .GetContext ().(type ){case *_db .PdfFieldText :_ba :=_eg ;switch {case _ba .Flags ().Has (_db .FieldFlagPassword ):return nil ,nil ;case _ba .Flags ().Has (_db .FieldFlagFileSelect ):return nil ,nil ;case _ba .Flags ().Has (_db .FieldFlagComb ):if _ba .MaxLen !=nil {_bgb ,_bc :=_abea (wa ,_ba ,form .DR ,_cgb .Style ());if _bc !=nil {return nil ,_bc ;};return _bgb ,nil ;};};_aaa ,_cae :=_gae (wa ,_ba ,form .DR ,_cgb .Style ());if _cae !=nil {return nil ,_cae ;};return _aaa ,nil ;case *_db .PdfFieldButton :_bad :=_eg ;if _bad .IsCheckbox (){_bcd ,_ea :=_beef (wa ,_bad ,form .DR ,_cgb .Style ());if _ea !=nil {return nil ,_ea ;};return _bcd ,nil ;};_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_bad .GetType ());case *_db .PdfFieldChoice :_fcg :=_eg ;switch {case _fcg .Flags ().Has (_db .FieldFlagCombo ):_gge ,_cgbg :=_gfae (form ,wa ,_fcg ,_cgb .Style ());if _cgbg !=nil {return nil ,_cgbg ;};return _gge ,nil ;default:_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_fcg .Flags ().String ());};default:_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_eg );};return nil ,nil ;};const (_bd quadding =0;_ce quadding =1;_afac quadding =2;);func _gfae (_dfg *_db .PdfAcroForm ,_dgg *_db .PdfAnnotationWidget ,_acd *_db .PdfFieldChoice ,_cfgb AppearanceStyle )(*_cf .PdfObjectDictionary ,error ){_ace ,_ebfc :=_cf .GetArray (_dgg .Rect );if !_ebfc {return nil ,_af .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_dbe ,_agf :=_db .NewPdfRectangle (*_ace );if _agf !=nil {return nil ,_agf ;};_gaec ,_gfce :=_dbe .Width (),_dbe .Height ();_c .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_dgg .BS );_ebff ,_agf :=_fa .NewContentStreamParser (_abb (_acd .PdfField )).Parse ();if _agf !=nil {return nil ,_agf ;};_bfc ,_fab :=_cf .GetDict (_dgg .MK );if _fab {_feda ,_ :=_cf .GetDict (_dgg .BS );_bbac :=_cfgb .applyAppearanceCharacteristics (_bfc ,_feda ,nil );if _bbac !=nil {return nil ,_bbac ;};};_bbb :=_cf .MakeDict ();for _ ,_ebfg :=range _acd .Opt .Elements (){if _cgdf ,_geca :=_cf .GetArray (_ebfg );_geca &&_cgdf .Len ()==2{_ebfg =_cgdf .Get (1);};var _cbc string ;if _dga ,_ggg :=_cf .GetString (_ebfg );_ggg {_cbc =_dga .Decoded ();}else if _aedf ,_ggb :=_cf .GetName (_ebfg );_ggb {_cbc =_aedf .String ();}else {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_ebfg );return nil ,_af .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_cbc )> 0{_abf ,_bdc :=_ffaa (_acd .PdfField ,_gaec ,_gfce ,_cbc ,_cfgb ,_ebff ,_dfg .DR ,_bfc );if _bdc !=nil {return nil ,_bdc ;};_bbb .Set (*_cf .MakeName (_cbc ),_abf .ToPdfObject ());};};_ege :=_cf .MakeDict ();_ege .Set ("\u004e",_bbb );return _ege ,nil ;};func (_fdbf *AppearanceStyle )applyRotation (_fdd *_cf .PdfObjectDictionary ,_aec ,_bcc float64 ,_agb *_fa .ContentCreator )(float64 ,float64 ){if !_fdbf .AllowMK {return _aec ,_bcc ;};if _fdd ==nil {return _aec ,_bcc ;};_eaec ,_ :=_cf .GetNumberAsFloat (_fdd .Get ("\u0052"));if _eaec ==0{return _aec ,_bcc ;};_cfag :=-_eaec ;_dff :=_bb .Path {Points :[]_bb .Point {_bb .NewPoint (0,0).Rotate (_cfag ),_bb .NewPoint (_aec ,0).Rotate (_cfag ),_bb .NewPoint (0,_bcc ).Rotate (_cfag ),_bb .NewPoint (_aec ,_bcc ).Rotate (_cfag )}}.GetBoundingBox ();_agb .RotateDeg (_eaec );_agb .Translate (_dff .X ,_dff .Y );return _dff .Width ,_dff .Height ;};func (_ceg *AppearanceStyle )processDA (_edd *_db .PdfField ,_ddg *_fa .ContentStreamOperations ,_ffeg ,_edbe *_db .PdfPageResources ,_ebg *_fa .ContentCreator )(*AppearanceFont ,bool ,error ){var _gabc *AppearanceFont ;var _bfgg bool ;if _ceg .Fonts !=nil {if _ceg .Fonts .Fallback !=nil {_gabc =_ceg .Fonts .Fallback ;};if _cdg :=_ceg .Fonts .FieldFallbacks ;_cdg !=nil {if _aba ,_age :=_cdg [_edd .PartialName ()];_age {_gabc =_aba ;}else if _cege ,_ebe :=_edd .FullName ();_ebe ==nil {if _gffg ,_fgfb :=_cdg [_cege ];_fgfb {_gabc =_gffg ;};};};_bfgg =_ceg .Fonts .ForceReplace ;};var _ffae string ;var _gaaf float64 ;var _dedde bool ;if _ddg !=nil {for _ ,_bgaeb :=range *_ddg {if _bgaeb .Operand =="\u0054\u0066"&&len (_bgaeb .Params )==2{if _afdd ,_acbg :=_cf .GetNameVal (_bgaeb .Params [0]);_acbg {_ffae =_afdd ;};if _eabb ,_bec :=_cf .GetNumberAsFloat (_bgaeb .Params [1]);_bec ==nil {_gaaf =_eabb ;};_dedde =true ;continue ;};_ebg .AddOperand (*_bgaeb );};};var _fegg *AppearanceFont ;var _ggbbg _cf .PdfObject ;if _bfgg &&_gabc !=nil {_fegg =_gabc ;}else {if _ffeg !=nil &&_ffae !=""{if _edbc ,_gdea :=_ffeg .GetFontByName (*_cf .MakeName (_ffae ));_gdea {if _gdf ,_fgg :=_db .NewPdfFontFromPdfObject (_edbc );_fgg ==nil {_ggbbg =_edbc ;_fegg =&AppearanceFont {Name :_ffae ,Font :_gdf ,Size :_gaaf };}else {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_fgg );};};};if _fegg ==nil &&_gabc !=nil {_fegg =_gabc ;};if _fegg ==nil {_eba ,_gac :=_db .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _gac !=nil {return nil ,false ,_gac ;};_fegg =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_eba ,Size :_gaaf };};};_ccd :=*_cf .MakeName (_fegg .Name );if _ggbbg ==nil {_ggbbg =_fegg .Font .ToPdfObject ();};if _ffeg !=nil &&!_ffeg .HasFontByName (_ccd ){_ffeg .SetFontByName (_ccd ,_ggbbg );};if _edbe !=nil &&!_edbe .HasFontByName (_ccd ){_edbe .SetFontByName (_ccd ,_ggbbg );};return _fegg ,_dedde ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_db .PdfAnnotation ,error ){_ebda :=_db .NewPdfAnnotationLine ();_ebda .L =_cf .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_ffgb :=_cf .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_bb .LineEndingStyleArrow {_ffgb =_cf .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_adbe :=_cf .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_bb .LineEndingStyleArrow {_adbe =_cf .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_ebda .LE =_cf .MakeArray (_ffgb ,_adbe );if lineDef .Opacity < 1.0{_ebda .CA =_cf .MakeFloat (lineDef .Opacity );};_eda ,_edfb ,_ceaf :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_ebda .IC =_cf .MakeArrayFromFloats ([]float64 {_eda ,_edfb ,_ceaf });_ebda .C =_cf .MakeArrayFromFloats ([]float64 {_eda ,_edfb ,_ceaf });_efgb :=_db .NewBorderStyle ();_efgb .SetBorderWidth (lineDef .LineWidth );_ebda .BS =_efgb .ToPdfObject ();_daf ,_bbag ,_faac :=_dfbd (lineDef );if _faac !=nil {return nil ,_faac ;};_ebda .AP =_daf ;_ebda .Rect =_cf .MakeArrayFromFloats ([]float64 {_bbag .Llx ,_bbag .Lly ,_bbag .Urx ,_bbag .Ury });return _ebda .PdfAnnotation ,nil ;};func _fcdf (_fgd []*SignatureLine ,_dbeg *SignatureFieldOpts )(*_cf .PdfObjectDictionary ,error ){if _dbeg ==nil {_dbeg =NewSignatureFieldOpts ();};var _gfgc error ;var _dbee *_cf .PdfObjectName ;_ccb :=_dbeg .Font ;if _ccb !=nil {_cbca ,_ :=_ccb .GetFontDescriptor ();if _cbca !=nil {if _gafeb ,_eea :=_cbca .FontName .(*_cf .PdfObjectName );_eea {_dbee =_gafeb ;};};if _dbee ==nil {_dbee =_cf .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _ccb ,_gfgc =_db .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_gfgc !=nil {return nil ,_gfgc ;};_dbee =_cf .MakeName ("\u0048\u0065\u006c\u0076");};_bbe :=_dbeg .FontSize ;if _bbe <=0{_bbe =10;};if _dbeg .LineHeight <=0{_dbeg .LineHeight =1;};_gfba :=_dbeg .LineHeight *_bbe ;_gfge ,_eac :=_ccb .GetRuneMetrics (' ');if !_eac {return nil ,_af .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_ccde :=_gfge .Wx ;var _egd float64 ;var _cee []string ;for _ ,_bdd :=range _fgd {if _bdd .Text ==""{continue ;};_abg :=_bdd .Text ;if _bdd .Desc !=""{_abg =_bdd .Desc +"\u003a\u0020"+_abg ;};_cee =append (_cee ,_abg );var _fecc float64 ;for _ ,_dcgf :=range _abg {_gad ,_bbed :=_ccb .GetRuneMetrics (_dcgf );if !_bbed {continue ;};_fecc +=_gad .Wx ;};if _fecc > _egd {_egd =_fecc ;};};_egd =_egd *_bbe /1000.0;_bbc :=float64 (len (_cee ))*_gfba ;_fece :=_dbeg .Rect ;if _fece ==nil {_fece =[]float64 {0,0,_egd ,_bbc };_dbeg .Rect =_fece ;};_gddf :=_fece [2]-_fece [0];_acad :=_fece [3]-_fece [1];var _faa float64 ;if _dbeg .AutoSize {if _egd > _gddf ||_bbc > _acad {_fabge :=_fb .Min (_gddf /_egd ,_acad /_bbc );_bbe *=_fabge ;};_gfba =_dbeg .LineHeight *_bbe ;_faa +=(_acad -float64 (len (_cee ))*_gfba )/2;};_ccba :=_fa .NewContentCreator ();if _dbeg .BorderSize <=0{_dbeg .BorderSize =0;_dbeg .BorderColor =_db .NewPdfColorDeviceGray (1);};if _dbeg .BorderColor ==nil {_dbeg .BorderColor =_db .NewPdfColorDeviceGray (1);};if _dbeg .FillColor ==nil {_dbeg .FillColor =_db .NewPdfColorDeviceGray (1);};_ccba .Add_q ().SetNonStrokingColor (_dbeg .FillColor ).SetStrokingColor (_dbeg .BorderColor ).Add_w (_dbeg .BorderSize ).Add_re (_fece [0],_fece [1],_gddf ,_acad ).Add_B ().Add_Q ();_ccba .Add_q ();_ccba .Translate (_fece [0],_fece [3]-_gfba -_faa );_ccba .Add_BT ();_fgcg :=_ccb .Encoder ();for _ ,_abgd :=range _cee {var _gba []byte ;for _ ,_bfdg :=range _abgd {if _d .IsSpace (_bfdg ){if len (_gba )> 0{_ccba .SetNonStrokingColor (_dbeg .TextColor ).Add_Tf (*_dbee ,_bbe ).Add_TL (_gfba ).Add_TJ ([]_cf .PdfObject {_cf .MakeStringFromBytes (_gba )}...);_gba =nil ;};_ccba .Add_Tf (*_dbee ,_bbe ).Add_TL (_gfba ).Add_TJ ([]_cf .PdfObject {_cf .MakeFloat (-_ccde )}...);}else {_gba =append (_gba ,_fgcg .Encode (string (_bfdg ))...);};};if len (_gba )> 0{_ccba .SetNonStrokingColor (_dbeg .TextColor ).Add_Tf (*_dbee ,_bbe ).Add_TL (_gfba ).Add_TJ ([]_cf .PdfObject {_cf .MakeStringFromBytes (_gba )}...);};_ccba .Add_Td (0,-_gfba );};_ccba .Add_ET ();_ccba .Add_Q ();_cfec :=_db .NewPdfPageResources ();_cfec .SetFontByName (*_dbee ,_ccb .ToPdfObject ());_gabb :=_db .NewXObjectForm ();_gabb .Resources =_cfec ;_gabb .BBox =_cf .MakeArrayFromFloats (_fece );_gabb .SetContentStream (_ccba .Bytes (),_fcgd ());_dage :=_cf .MakeDict ();_dage .Set ("\u004e",_gabb .ToPdfObject ());return _dage ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_ec FieldAppearance )Style ()AppearanceStyle {if _ec ._acc !=nil {return *_ec ._acc ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_db .NewPdfColorDeviceGray (0),FillColor :_db .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _bfg (_gc CircleAnnotationDef )(*_cf .PdfObjectDictionary ,*_db .PdfRectangle ,error ){_ab :=_db .NewXObjectForm ();_ab .Resources =_db .NewPdfPageResources ();_fe :="";if _gc .Opacity < 1.0{_aa :=_cf .MakeDict ();_aa .Set ("\u0063\u0061",_cf .MakeFloat (_gc .Opacity ));_aa .Set ("\u0043\u0041",_cf .MakeFloat (_gc .Opacity ));_df :=_ab .Resources .AddExtGState ("\u0067\u0073\u0031",_aa );if _df !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_df ;};_fe ="\u0067\u0073\u0031";};_fed ,_dg ,_afa ,_cd :=_bg (_gc ,_fe );if _cd !=nil {return nil ,nil ,_cd ;};_cd =_ab .SetContentStream (_fed ,nil );if _cd !=nil {return nil ,nil ,_cd ;};_ab .BBox =_dg .ToPdfObject ();_ca :=_cf .MakeDict ();_ca .Set ("\u004e",_ab .ToPdfObject ());return _ca ,_afa ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_e *FieldAppearance )SetStyle (style AppearanceStyle ){_e ._acc =&style };func _ffaa (_cgdd *_db .PdfField ,_ade ,_bfcf float64 ,_ebfgg string ,_afd AppearanceStyle ,_gcgg *_fa .ContentStreamOperations ,_fae *_db .PdfPageResources ,_bea *_cf .PdfObjectDictionary )(*_db .XObjectForm ,error ){_acb :=_db .NewPdfPageResources ();_ggc ,_eed :=_ade ,_bfcf ;_cdda :=_fa .NewContentCreator ();if _afd .BorderSize > 0{_fdf (_cdda ,_afd ,_ade ,_bfcf );};if _afd .DrawAlignmentReticle {_edf :=_afd ;_edf .BorderSize =0.2;_fbcf (_cdda ,_edf ,_ade ,_bfcf );};_cdda .Add_BMC ("\u0054\u0078");_cdda .Add_q ();_cdda .Add_BT ();_ade ,_bfcf =_afd .applyRotation (_bea ,_ade ,_bfcf ,_cdda );_faee ,_gdg ,_gebd :=_afd .processDA (_cgdd ,_gcgg ,_fae ,_acb ,_cdda );if _gebd !=nil {return nil ,_gebd ;};_cfe :=_faee .Font ;_ecc :=_faee .Size ;_fcd :=_cf .MakeName (_faee .Name );_dbdf :=_ecc ==0;if _dbdf &&_gdg {_ecc =_bfcf *_afd .AutoFontSizeFraction ;};_fbc :=_cfe .Encoder ();if _fbc ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_fbc =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_ebfgg )==0{return nil ,nil ;};_dgge :=2.0;_eca :=0.0;if _fbc !=nil {for _ ,_cfee :=range _ebfgg {_feb ,_fdb :=_cfe .GetRuneMetrics (_cfee );if !_fdb {_c .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_cfee );continue ;};_eca +=_feb .Wx ;};_ebfgg =string (_fbc .Encode (_ebfgg ));};if _ecc ==0||_dbdf &&_eca > 0&&_dgge +_eca *_ecc /1000.0> _ade {_ecc =0.95*1000.0*(_ade -_dgge )/_eca ;};_gcbd :=1.0*_ecc ;_gff :=2.0;{_bcbc :=_gcbd ;if _dbdf &&_gff +_bcbc > _bfcf {_ecc =0.95*(_bfcf -_gff );_gcbd =1.0*_ecc ;_bcbc =_gcbd ;};if _bfcf > _bcbc {_gff =(_bfcf -_bcbc )/2.0;_gff +=1.50;};};_cdda .Add_Tf (*_fcd ,_ecc );_cdda .Add_Td (_dgge ,_gff );_cdda .Add_Tj (*_cf .MakeString (_ebfgg ));_cdda .Add_ET ();_cdda .Add_Q ();_cdda .Add_EMC ();_egb :=_db .NewXObjectForm ();_egb .Resources =_acb ;_egb .BBox =_cf .MakeArrayFromFloats ([]float64 {0,0,_ggc ,_eed });_egb .SetContentStream (_cdda .Bytes (),_fcgd ());return _egb ,nil ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_acc *AppearanceStyle ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_db .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _bb .LineEndingStyle ;LineEndingStyle2 _bb .LineEndingStyle ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_db .PdfAnnotation ,error ){_cfb :=_db .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_fc ,_bff ,_g :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_cfb .C =_cf .MakeArrayFromFloats ([]float64 {_fc ,_bff ,_g });_gf :=_db .NewBorderStyle ();_gf .SetBorderWidth (circDef .BorderWidth );_cfb .BS =_gf .ToPdfObject ();};if circDef .FillEnabled {_gg ,_ge ,_cg :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_cfb .IC =_cf .MakeArrayFromFloats ([]float64 {_gg ,_ge ,_cg });}else {_cfb .IC =_cf .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_cfb .CA =_cf .MakeFloat (circDef .Opacity );};_de ,_gfe ,_cb :=_bfg (circDef );if _cb !=nil {return nil ,_cb ;};_cfb .AP =_de ;_cfb .Rect =_cf .MakeArrayFromFloats ([]float64 {_gfe .Llx ,_gfe .Lly ,_gfe .Urx ,_gfe .Ury });return _cfb .PdfAnnotation ,nil ;};func _abb (_dbde *_db .PdfField )string {if _dbde ==nil {return "";};_dgc ,_ggbb :=_dbde .GetContext ().(*_db .PdfFieldText );if !_ggbb {return _abb (_dbde .Parent );};if _dgc .DA !=nil {return _dgc .DA .Str ();};return _abb (_dgc .Parent );};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _db .PdfColor ;FillColor _db .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func _beef (_gfc *_db .PdfAnnotationWidget ,_bffc *_db .PdfFieldButton ,_eegf *_db .PdfPageResources ,_efg AppearanceStyle )(*_cf .PdfObjectDictionary ,error ){_dbc ,_cdd :=_cf .GetArray (_gfc .Rect );if !_cdd {return nil ,_af .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_gab ,_edb :=_db .NewPdfRectangle (*_dbc );if _edb !=nil {return nil ,_edb ;};_bfeg ,_edg :=_gab .Width (),_gab .Height ();_afc ,_dfcb :=_bfeg ,_edg ;_c .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_gfc .BS );_bdb ,_edb :=_db .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _edb !=nil {return nil ,_edb ;};_gee ,_cdbg :=_cf .GetDict (_gfc .MK );if _cdbg {_add ,_ :=_cf .GetDict (_gfc .BS );_cag :=_efg .applyAppearanceCharacteristics (_gee ,_add ,_bdb );if _cag !=nil {return nil ,_cag ;};};_fac :=_db .NewXObjectForm ();{_gecc :=_fa .NewContentCreator ();if _efg .BorderSize > 0{_fdf (_gecc ,_efg ,_bfeg ,_edg );};if _efg .DrawAlignmentReticle {_dcg :=_efg ;_dcg .BorderSize =0.2;_fbcf (_gecc ,_dcg ,_bfeg ,_edg );};_bfeg ,_edg =_efg .applyRotation (_gee ,_bfeg ,_edg ,_gecc );_agc :=_efg .AutoFontSizeFraction *_edg ;_fbd ,_geb :=_bdb .GetRuneMetrics (_efg .CheckmarkRune );if !_geb {return nil ,_af .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dda :=_bdb .Encoder ();_gcb :=_dda .Encode (string (_efg .CheckmarkRune ));_bcb :=_fbd .Wx *_agc /1000.0;_dea :=705.0;_dcb :=_dea /1000.0*_agc ;_agd :=2.0;_afe :=1.0;if _bcb < _bfeg {_agd =(_bfeg -_bcb )/2.0;};if _dcb < _edg {_afe =(_edg -_dcb )/2.0;};_gecc .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_agc ).Add_Td (_agd ,_afe ).Add_Tj (*_cf .MakeStringFromBytes (_gcb )).Add_ET ().Add_Q ();_fac .Resources =_db .NewPdfPageResources ();_fac .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_bdb .ToPdfObject ());_fac .BBox =_cf .MakeArrayFromFloats ([]float64 {0,0,_afc ,_dfcb });_fac .SetContentStream (_gecc .Bytes (),_fcgd ());};_gdab :=_db .NewXObjectForm ();{_caag :=_fa .NewContentCreator ();if _efg .BorderSize > 0{_fdf (_caag ,_efg ,_bfeg ,_edg );};_gdab .BBox =_cf .MakeArrayFromFloats ([]float64 {0,0,_afc ,_dfcb });_gdab .SetContentStream (_caag .Bytes (),_fcgd ());};_cgg :=_cf .MakeDict ();_cgg .Set ("\u004f\u0066\u0066",_gdab .ToPdfObject ());_cgg .Set ("\u0059\u0065\u0073",_fac .ToPdfObject ());_bfgb :=_cf .MakeDict ();_bfgb .Set ("\u004e",_cgg );return _bfgb ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_db .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_db .PdfFieldChoice ,error ){if page ==nil {return nil ,_af .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_af .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_af .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ebdc :=_db .NewPdfField ();_cegg :=&_db .PdfFieldChoice {};_ebdc .SetContext (_cegg );_cegg .PdfField =_ebdc ;_cegg .T =_cf .MakeString (name );_cegg .Opt =_cf .MakeArray ();for _ ,_beg :=range opt .Choices {_cegg .Opt .Append (_cf .MakeString (_beg ));};_cegg .SetFlag (_db .FieldFlagCombo );_cdbe :=_db .NewPdfAnnotationWidget ();_cdbe .Rect =_cf .MakeArrayFromFloats (rect );_cdbe .P =page .ToPdfObject ();_cdbe .F =_cf .MakeInteger (4);_cdbe .Parent =_cegg .ToPdfObject ();_cegg .Annotations =append (_cegg .Annotations ,_cdbe );return _cegg ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_db .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_db .PdfAnnotation ,error ){_fef :=_db .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_dbg ,_ged ,_ccg :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_fef .C =_cf .MakeArrayFromFloats ([]float64 {_dbg ,_ged ,_ccg });_fgab :=_db .NewBorderStyle ();_fgab .SetBorderWidth (rectDef .BorderWidth );_fef .BS =_fgab .ToPdfObject ();};if rectDef .FillEnabled {_becd ,_bdba ,_dgee :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_fef .IC =_cf .MakeArrayFromFloats ([]float64 {_becd ,_bdba ,_dgee });}else {_fef .IC =_cf .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_fef .CA =_cf .MakeFloat (rectDef .Opacity );};_fgec ,_bdcg ,_acef :=_efga (rectDef );if _acef !=nil {return nil ,_acef ;};_fef .AP =_fgec ;_fef .Rect =_cf .MakeArrayFromFloats ([]float64 {_bdcg .Llx ,_bdcg .Lly ,_bdcg .Urx ,_bdcg .Ury });return _fef .PdfAnnotation ,nil ;};func _gae (_fg *_db .PdfAnnotationWidget ,_ega *_db .PdfFieldText ,_dd *_db .PdfPageResources ,_bfa AppearanceStyle )(*_cf .PdfObjectDictionary ,error ){_fad :=_db .NewPdfPageResources ();_gdb ,_cec :=_cf .GetArray (_fg .Rect );if !_cec {return nil ,_af .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ag ,_gcc :=_db .NewPdfRectangle (*_gdb );if _gcc !=nil {return nil ,_gcc ;};_ff ,_ae :=_ag .Width (),_ag .Height ();_fff ,_gaa :=_ff ,_ae ;_eb ,_cad :=_cf .GetDict (_fg .MK );if _cad {_fag ,_ :=_cf .GetDict (_fg .BS );_dfb :=_bfa .applyAppearanceCharacteristics (_eb ,_fag ,nil );if _dfb !=nil {return nil ,_dfb ;};};_adb ,_gcc :=_fa .NewContentStreamParser (_abb (_ega .PdfField )).Parse ();if _gcc !=nil {return nil ,_gcc ;};_bfd :=_fa .NewContentCreator ();if _bfa .BorderSize > 0{_fdf (_bfd ,_bfa ,_ff ,_ae );};if _bfa .DrawAlignmentReticle {_fbg :=_bfa ;_fbg .BorderSize =0.2;_fbcf (_bfd ,_fbg ,_ff ,_ae );};_bfd .Add_BMC ("\u0054\u0078");_bfd .Add_q ();_ff ,_ae =_bfa .applyRotation (_eb ,_ff ,_ae ,_bfd );_bfd .Add_BT ();_gec ,_aaaf ,_gcc :=_bfa .processDA (_ega .PdfField ,_adb ,_dd ,_fad ,_bfd );if _gcc !=nil {return nil ,_gcc ;};_cfa :=_gec .Font ;_eae :=_gec .Size ;_gda :=_cf .MakeName (_gec .Name );_dgf :=_eae ==0;if _dgf &&_aaaf {_eae =_ae *_bfa .AutoFontSizeFraction ;};_ee :=_cfa .Encoder ();if _ee ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_ee =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_bgg ,_gcc :=_cfa .GetFontDescriptor ();if _gcc !=nil {_c .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _bdf string ;if _ed ,_cbf :=_cf .GetString (_ega .V );_cbf {_bdf =_ed .Decoded ();};if len (_bdf )==0{return nil ,nil ;};_be :=[]string {_bdf };_fge :=false ;if _ega .Flags ().Has (_db .FieldFlagMultiline ){_fge =true ;_bdf =_a .Replace (_bdf ,"\u000d\u000a","\u000a",-1);_bdf =_a .Replace (_bdf ,"\u000d","\u000a",-1);_be =_a .Split (_bdf ,"\u000a");};_bac :=0.0;_bgc :=0;if _ee !=nil {_baa :=len (_be );_aac :=0;for _aac < _baa {var _cfg float64 ;_dfda :=-1;_gb :=0.0;for _adc ,_eeg :=range _be [_aac ]{if _eeg ==' '{_dfda =_adc ;_cfg =_gb ;};_dgfb ,_bee :=_cfa .GetRuneMetrics (_eeg );if !_bee {_c .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_eeg );continue ;};_gb +=_dgfb .Wx ;if _fge &&!_dgf &&_eae *_gb /1000.0> _ff &&_dfda > 0{_aeg :=_be [_aac ][_dfda +1:];if _aac < len (_be )-1{_be [_aac +1]+=_aeg ;}else {_be =append (_be ,_aeg );_baa ++;};_be [_aac ]=_be [_aac ][0:_dfda ];_gb =_cfg ;break ;};};if _gb > _bac {_bac =_gb ;};_be [_aac ]=string (_ee .Encode (_be [_aac ]));if len (_be [_aac ])> 0{_bgc ++;};_aac ++;};};_abe :=2.0;if _eae ==0||_dgf &&_bac > 0&&_abe +_bac *_eae /1000.0> _ff {_eae =0.95*1000.0*(_ff -_abe )/_bac ;};_dde :=_bd ;{if _aegc ,_bgd :=_cf .GetIntVal (_ega .Q );_bgd {switch _aegc {case 0:_dde =_bd ;case 1:_dde =_ce ;case 2:_dde =_afac ;default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_aegc );};};};_caed :=_bfa .MultilineLineHeight ;_gfg :=_eae ;if _fge &&_bgc > 1{_gfg =_caed *_eae ;};var _aeb float64 ;if _bgg !=nil {_aeb ,_gcc =_bgg .GetCapHeight ();if _gcc !=nil {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_gcc );};};if int (_aeb )<=0{_c .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_aeb =1000;};_gcf :=_aeb /1000.0*_eae ;_aab :=0.0;{_ebd :=float64 (_bgc )*_gfg ;if _dgf &&_aab +_ebd > _ae {_eae =0.95*(_ae -_aab )/float64 (_bgc );_gfg =_eae ;if _fge &&_bgc > 1{_gfg =_caed *_eae ;};_gcf =_aeb /1000.0*_eae ;_ebd =float64 (_bgc )*_gfg ;};if _ae > _ebd {if _fge {if _bfa .MultilineVAlignMiddle {_aga :=(_ae -_ebd )/2.0;_dad :=_aga +_ebd -_gfg ;_aab =_dad ;}else {_aab =_ae -_gfg ;_aab -=_eae *0.5;};}else {_aab =(_ae -_gcf )/2.0;};};};_bfd .Add_Tf (*_gda ,_eae );_bfd .Add_Td (_abe ,_aab );_bfbg :=_abe ;_bcda :=_abe ;for _gcg ,_bga :=range _be {_cgc :=0.0;for _ ,_ffb :=range _bga {_ffa ,_gfa :=_cfa .GetRuneMetrics (_ffb );if !_gfa {continue ;};_cgc +=_ffa .Wx ;};_egad :=_cgc /1000.0*_eae ;_adg :=_ff -_egad ;var _bgf float64 ;switch _dde {case _bd :_bgf =_bfbg ;case _ce :_bgf =_adg /2;case _afac :_bgf =_adg ;};_abe =_bgf -_bcda ;if _abe > 0.0{_bfd .Add_Td (_abe ,0);};_bcda =_bgf ;_bfd .Add_Tj (*_cf .MakeString (_bga ));if _gcg < len (_be )-1{_bfd .Add_Td (0,-_gfg *_caed );};};_bfd .Add_ET ();_bfd .Add_Q ();_bfd .Add_EMC ();_ded :=_db .NewXObjectForm ();_ded .Resources =_fad ;_ded .BBox =_cf .MakeArrayFromFloats ([]float64 {0,0,_fff ,_gaa });_ded .SetContentStream (_bfd .Bytes (),_fcgd ());_gfb :=_cf .MakeDict ();_gfb .Set ("\u004e",_ded .ToPdfObject ());return _gfb ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_db .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _db .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _db .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _db .PdfColor ;};type quadding int ;

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_db .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_db .PdfFieldText ,error ){if page ==nil {return nil ,_af .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_af .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_af .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cfd :=_db .NewPdfField ();_gccd :=&_db .PdfFieldText {};_cfd .SetContext (_gccd );_gccd .PdfField =_cfd ;_gccd .T =_cf .MakeString (name );if opt .MaxLen > 0{_gccd .MaxLen =_cf .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_gccd .V =_cf .MakeString (opt .Value );};_gfbf :=_db .NewPdfAnnotationWidget ();_gfbf .Rect =_cf .MakeArrayFromFloats (rect );_gfbf .P =page .ToPdfObject ();_gfbf .F =_cf .MakeInteger (4);_gfbf .Parent =_gccd .ToPdfObject ();_gccd .Annotations =append (_gccd .Annotations ,_gfbf );return _gccd ,nil ;};type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_db .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_db .PdfColorDeviceRGB ;Opacity float64 ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_db .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_db .PdfFieldButton ,error ){if page ==nil {return nil ,_af .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_af .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_af .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ebffg ,_fbgd :=_db .NewStandard14Font (_db .ZapfDingbatsName );if _fbgd !=nil {return nil ,_fbgd ;};_dadc :=_db .NewPdfField ();_addf :=&_db .PdfFieldButton {};_dadc .SetContext (_addf );_addf .PdfField =_dadc ;_addf .T =_cf .MakeString (name );_addf .SetType (_db .ButtonTypeCheckbox );_fadc :="\u004f\u0066\u0066";if opt .Checked {_fadc ="\u0059\u0065\u0073";};_addf .V =_cf .MakeName (_fadc );_gcae :=_db .NewPdfAnnotationWidget ();_gcae .Rect =_cf .MakeArrayFromFloats (rect );_gcae .P =page .ToPdfObject ();_gcae .F =_cf .MakeInteger (4);_gcae .Parent =_addf .ToPdfObject ();_aae :=rect [2]-rect [0];_gfbb :=rect [3]-rect [1];var _dfe _bf .Buffer ;_dfe .WriteString ("\u0071\u000a");_dfe .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_dfe .WriteString ("\u0042\u0054\u000a");_dfe .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_dfe .WriteString ("\u0045\u0054\u000a");_dfe .WriteString ("\u0051\u000a");_bcf :=_fa .NewContentCreator ();_bcf .Add_q ();_bcf .Add_rg (0,0,1);_bcf .Add_BT ();_bcf .Add_Tf (*_cf .MakeName ("\u005a\u0061\u0044\u0062"),12);_bcf .Add_Td (0,0);_bcf .Add_ET ();_bcf .Add_Q ();_eag :=_db .NewXObjectForm ();_eag .SetContentStream (_bcf .Bytes (),_cf .NewRawEncoder ());_eag .BBox =_cf .MakeArrayFromFloats ([]float64 {0,0,_aae ,_gfbb });_eag .Resources =_db .NewPdfPageResources ();_eag .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_ebffg .ToPdfObject ());_bcf =_fa .NewContentCreator ();_bcf .Add_q ();_bcf .Add_re (0,0,_aae ,_gfbb );_bcf .Add_W ().Add_n ();_bcf .Add_rg (0,0,1);_bcf .Translate (0,3.0);_bcf .Add_BT ();_bcf .Add_Tf (*_cf .MakeName ("\u005a\u0061\u0044\u0062"),12);_bcf .Add_Td (0,0);_bcf .Add_Tj (*_cf .MakeString ("\u0034"));_bcf .Add_ET ();_bcf .Add_Q ();_fcgf :=_db .NewXObjectForm ();_fcgf .SetContentStream (_bcf .Bytes (),_cf .NewRawEncoder ());_fcgf .BBox =_cf .MakeArrayFromFloats ([]float64 {0,0,_aae ,_gfbb });_fcgf .Resources =_db .NewPdfPageResources ();_fcgf .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_ebffg .ToPdfObject ());_fcf :=_cf .MakeDict ();_fcf .Set ("\u004f\u0066\u0066",_eag .ToPdfObject ());_fcf .Set ("\u0059\u0065\u0073",_fcgf .ToPdfObject ());_eec :=_cf .MakeDict ();_eec .Set ("\u004e",_fcf );_gcae .AP =_eec ;_gcae .AS =_cf .MakeName (_fadc );_addf .Annotations =append (_addf .Annotations ,_gcae );return _addf ,nil ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};func _fbcf (_gde *_fa .ContentCreator ,_cggg AppearanceStyle ,_afb ,_fea float64 ){_gde .Add_q ().Add_re (0,0,_afb ,_fea ).Add_re (0,_fea /2,_afb ,_fea /2).Add_re (0,0,_afb ,_fea ).Add_re (_afb /2,0,_afb /2,_fea ).Add_w (_cggg .BorderSize ).SetStrokingColor (_cggg .BorderColor ).SetNonStrokingColor (_cggg .FillColor ).Add_B ().Add_Q ();};func _dfbd (_cfgg LineAnnotationDef )(*_cf .PdfObjectDictionary ,*_db .PdfRectangle ,error ){_cbeg :=_db .NewXObjectForm ();_cbeg .Resources =_db .NewPdfPageResources ();_acadb :="";if _cfgg .Opacity < 1.0{_cbea :=_cf .MakeDict ();_cbea .Set ("\u0063\u0061",_cf .MakeFloat (_cfgg .Opacity ));_dcgg :=_cbeg .Resources .AddExtGState ("\u0067\u0073\u0031",_cbea );if _dcgg !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_dcgg ;};_acadb ="\u0067\u0073\u0031";};_agdg ,_ecf ,_aabc ,_dbce :=_faad (_cfgg ,_acadb );if _dbce !=nil {return nil ,nil ,_dbce ;};_dbce =_cbeg .SetContentStream (_agdg ,nil );if _dbce !=nil {return nil ,nil ,_dbce ;};_cbeg .BBox =_ecf .ToPdfObject ();_ceb :=_cf .MakeDict ();_ceb .Set ("\u004e",_cbeg .ToPdfObject ());return _ceb ,_aabc ,nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _fdf (_bae *_fa .ContentCreator ,_baf AppearanceStyle ,_ddeg ,_fcda float64 ){_bae .Add_q ().Add_re (0,0,_ddeg ,_fcda ).Add_w (_baf .BorderSize ).SetStrokingColor (_baf .BorderColor ).SetNonStrokingColor (_baf .FillColor ).Add_B ().Add_Q ();};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_db .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_db .PdfColorDeviceRGB ;Opacity float64 ;};func _gef (_gfd RectangleAnnotationDef ,_eagb string )([]byte ,*_db .PdfRectangle ,*_db .PdfRectangle ,error ){_abdb :=_bb .Rectangle {X :0,Y :0,Width :_gfd .Width ,Height :_gfd .Height ,FillEnabled :_gfd .FillEnabled ,FillColor :_gfd .FillColor ,BorderEnabled :_gfd .BorderEnabled ,BorderWidth :2*_gfd .BorderWidth ,BorderColor :_gfd .BorderColor ,Opacity :_gfd .Opacity };_fgeca ,_cab ,_bffcg :=_abdb .Draw (_eagb );if _bffcg !=nil {return nil ,nil ,nil ,_bffcg ;};_gccb :=&_db .PdfRectangle {};_gccb .Llx =_gfd .X +_cab .Llx ;_gccb .Lly =_gfd .Y +_cab .Lly ;_gccb .Urx =_gfd .X +_cab .Urx ;_gccb .Ury =_gfd .Y +_cab .Ury ;return _fgeca ,_cab ,_gccb ,nil ;};func _bg (_ga CircleAnnotationDef ,_da string )([]byte ,*_db .PdfRectangle ,*_db .PdfRectangle ,error ){_dfd :=_bb .Circle {X :_ga .X ,Y :_ga .Y ,Width :_ga .Width ,Height :_ga .Height ,FillEnabled :_ga .FillEnabled ,FillColor :_ga .FillColor ,BorderEnabled :_ga .BorderEnabled ,BorderWidth :_ga .BorderWidth ,BorderColor :_ga .BorderColor ,Opacity :_ga .Opacity };_cff ,_bfb ,_ac :=_dfd .Draw (_da );if _ac !=nil {return nil ,nil ,nil ,_ac ;};_fba :=&_db .PdfRectangle {};_fba .Llx =_ga .X +_bfb .Llx ;_fba .Lly =_ga .Y +_bfb .Lly ;_fba .Urx =_ga .X +_bfb .Urx ;_fba .Ury =_ga .Y +_bfb .Ury ;return _cff ,_bfb ,_fba ,nil ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_db .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_db .NewPdfColorDeviceGray (0),BorderColor :_db .NewPdfColorDeviceGray (0),FillColor :_db .NewPdfColorDeviceGray (1)};};func _abea (_fgf *_db .PdfAnnotationWidget ,_bba *_db .PdfFieldText ,_feg *_db .PdfPageResources ,_cfbe AppearanceStyle )(*_cf .PdfObjectDictionary ,error ){_bfe :=_db .NewPdfPageResources ();_dbd ,_aed :=_cf .GetArray (_fgf .Rect );if !_aed {return nil ,_af .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fec ,_cade :=_db .NewPdfRectangle (*_dbd );if _cade !=nil {return nil ,_cade ;};_dc ,_fegc :=_fec .Width (),_fec .Height ();_bbd ,_bggb :=_dc ,_fegc ;_bgae ,_gaeg :=_cf .GetDict (_fgf .MK );if _gaeg {_gdd ,_ :=_cf .GetDict (_fgf .BS );_cdc :=_cfbe .applyAppearanceCharacteristics (_bgae ,_gdd ,nil );if _cdc !=nil {return nil ,_cdc ;};};_fca ,_gaeg :=_cf .GetIntVal (_bba .MaxLen );if !_gaeg {return nil ,_af .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _fca <=0{return nil ,_af .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ece :=float64 (_dc )/float64 (_fca );_bggbe ,_cade :=_fa .NewContentStreamParser (_abb (_bba .PdfField )).Parse ();if _cade !=nil {return nil ,_cade ;};_bgcf :=_fa .NewContentCreator ();if _cfbe .BorderSize > 0{_fdf (_bgcf ,_cfbe ,_dc ,_fegc );};if _cfbe .DrawAlignmentReticle {_gaag :=_cfbe ;_gaag .BorderSize =0.2;_fbcf (_bgcf ,_gaag ,_dc ,_fegc );};_bgcf .Add_BMC ("\u0054\u0078");_bgcf .Add_q ();_dc ,_fegc =_cfbe .applyRotation (_bgae ,_dc ,_fegc ,_bgcf );_bgcf .Add_BT ();_fga ,_cdb ,_cade :=_cfbe .processDA (_bba .PdfField ,_bggbe ,_feg ,_bfe ,_bgcf );if _cade !=nil {return nil ,_cade ;};_dedd :=_fga .Font ;_dgfbe :=_cf .MakeName (_fga .Name );_aaad :=_fga .Size ;_fagf :=_aaad ==0;if _fagf &&_cdb {_aaad =_fegc *_cfbe .AutoFontSizeFraction ;};_gaf :=_dedd .Encoder ();if _gaf ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_gaf =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _aca string ;if _ebb ,_gag :=_cf .GetString (_bba .V );_gag {_aca =_ebb .Decoded ();};_bgcf .Add_Tf (*_dgfbe ,_aaad );var _ef float64 ;for _ ,_cgde :=range _aca {_ffg ,_dac :=_dedd .GetRuneMetrics (_cgde );if !_dac {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_cgde );continue ;};_cbe :=_ffg .Wy ;if int (_cbe )<=0{_cbe =_ffg .Wx ;};if _cbe > _ef {_ef =_cbe ;};};if int (_ef )==0{_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_ef =1000;};_cgdg ,_cade :=_dedd .GetFontDescriptor ();if _cade !=nil {_c .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _efe float64 ;if _cgdg !=nil {_efe ,_cade =_cgdg .GetCapHeight ();if _cade !=nil {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cade );};};if int (_efe )<=0{_c .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_efe =1000.0;};_aee :=_efe /1000.0*_aaad ;_cfab :=0.0;_ecb :=1.0*_aaad *(_ef /1000.0);{_fbf :=_ecb ;if _fagf &&_cfab +_fbf > _fegc {_aaad =0.95*(_fegc -_cfab );_ecb =1.0*_aaad ;_fbf =_ecb ;_aee =_efe /1000.0*_aaad ;};if _fegc > _aee {_cfab =(_fegc -_aee )/2.0;};};_bgcf .Add_Td (0,_cfab );if _eab ,_cge :=_cf .GetIntVal (_bba .Q );_cge {switch _eab {case 2:if len (_aca )< _fca {_gafe :=float64 (_fca -len (_aca ))*_ece ;_bgcf .Add_Td (_gafe ,0);};};};for _fde ,_bgce :=range _aca {_baab :=2.0;_beea :=string (_bgce );if _gaf !=nil {_dfc ,_dfdg :=_dedd .GetRuneMetrics (_bgce );if !_dfdg {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_bgce );continue ;};_beea =string (_gaf .Encode (_beea ));_geg :=_aaad *_dfc .Wx /1000.0;_cffd :=(_ece -_geg )/2;_baab =_cffd ;};_bgcf .Add_Td (_baab ,0);_bgcf .Add_Tj (*_cf .MakeString (_beea ));if _fde !=len (_aca )-1{_bgcf .Add_Td (_ece -_baab ,0);};};_bgcf .Add_ET ();_bgcf .Add_Q ();_bgcf .Add_EMC ();_gca :=_db .NewXObjectForm ();_gca .Resources =_bfe ;_gca .BBox =_cf .MakeArrayFromFloats ([]float64 {0,0,_bbd ,_bggb });_gca .SetContentStream (_bgcf .Bytes (),_fcgd ());_cfgd :=_cf .MakeDict ();_cfgd .Set ("\u004e",_gca .ToPdfObject ());return _cfgd ,nil ;};func _efga (_gbd RectangleAnnotationDef )(*_cf .PdfObjectDictionary ,*_db .PdfRectangle ,error ){_eaa :=_db .NewXObjectForm ();_eaa .Resources =_db .NewPdfPageResources ();_aabb :="";if _gbd .Opacity < 1.0{_fbe :=_cf .MakeDict ();_fbe .Set ("\u0063\u0061",_cf .MakeFloat (_gbd .Opacity ));_fbe .Set ("\u0043\u0041",_cf .MakeFloat (_gbd .Opacity ));_bfgd :=_eaa .Resources .AddExtGState ("\u0067\u0073\u0031",_fbe );if _bfgd !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_bfgd ;};_aabb ="\u0067\u0073\u0031";};_gdbb ,_ggbbe ,_eaag ,_gddg :=_gef (_gbd ,_aabb );if _gddg !=nil {return nil ,nil ,_gddg ;};_gddg =_eaa .SetContentStream (_gdbb ,nil );if _gddg !=nil {return nil ,nil ,_gddg ;};_eaa .BBox =_ggbbe .ToPdfObject ();_gecaf :=_cf .MakeDict ();_gecaf .Set ("\u004e",_eaa .ToPdfObject ());return _gecaf ,_eaag ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_gdde FieldAppearance )WrapContentStream (page *_db .PdfPage )error {_aacc ,_agbd :=page .GetAllContentStreams ();if _agbd !=nil {return _agbd ;};_gafc :=_fa .NewContentStreamParser (_aacc );_fgc ,_agbd :=_gafc .Parse ();if _agbd !=nil {return _agbd ;};_fgc .WrapIfNeeded ();_cfaac :=[]string {_fgc .String ()};return page .SetContentStreams (_cfaac ,_fcgd ());};func (_bfcff *AppearanceStyle )applyAppearanceCharacteristics (_beec *_cf .PdfObjectDictionary ,_cfbb *_cf .PdfObjectDictionary ,_caac *_db .PdfFont )error {if !_bfcff .AllowMK {return nil ;};if _cfbb !=nil {if _cffe ,_fda :=_cf .GetNumberAsFloat (_cfbb .Get ("\u0057"));_fda ==nil {_bfcff .BorderSize =_cffe ;};};if CA ,_abd :=_cf .GetString (_beec .Get ("\u0043\u0041"));_abd &&_caac !=nil {_fabg :=CA .Bytes ();if len (_fabg )!=0{_fbfb :=[]rune (_caac .Encoder ().Decode (_fabg ));if len (_fbfb )==1{_bfcff .CheckmarkRune =_fbfb [0];};};};if BC ,_cfaa :=_cf .GetArray (_beec .Get ("\u0042\u0043"));_cfaa {_cgbc ,_cbce :=BC .ToFloat64Array ();if _cbce !=nil {return _cbce ;};switch len (_cgbc ){case 1:_bfcff .BorderColor =_db .NewPdfColorDeviceGray (_cgbc [0]);case 3:_bfcff .BorderColor =_db .NewPdfColorDeviceRGB (_cgbc [0],_cgbc [1],_cgbc [2]);case 4:_bfcff .BorderColor =_db .NewPdfColorDeviceCMYK (_cgbc [0],_cgbc [1],_cgbc [2],_cgbc [3]);default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cgbc ));};};if BG ,_cgeb :=_cf .GetArray (_beec .Get ("\u0042\u0047"));_cgeb {_cagg ,_bef :=BG .ToFloat64Array ();if _bef !=nil {return _bef ;};switch len (_cagg ){case 1:_bfcff .FillColor =_db .NewPdfColorDeviceGray (_cagg [0]);case 3:_bfcff .FillColor =_db .NewPdfColorDeviceRGB (_cagg [0],_cagg [1],_cagg [2]);case 4:_bfcff .FillColor =_db .NewPdfColorDeviceCMYK (_cagg [0],_cagg [1],_cagg [2],_cagg [3]);default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cagg ));};};return nil ;};func _faad (_gaae LineAnnotationDef ,_ggce string )([]byte ,*_db .PdfRectangle ,*_db .PdfRectangle ,error ){_bcbcb :=_bb .Line {X1 :0,Y1 :0,X2 :_gaae .X2 -_gaae .X1 ,Y2 :_gaae .Y2 -_gaae .Y1 ,LineColor :_gaae .LineColor ,Opacity :_gaae .Opacity ,LineWidth :_gaae .LineWidth ,LineEndingStyle1 :_gaae .LineEndingStyle1 ,LineEndingStyle2 :_gaae .LineEndingStyle2 };_ecaf ,_ccc ,_fbgdc :=_bcbcb .Draw (_ggce );if _fbgdc !=nil {return nil ,nil ,nil ,_fbgdc ;};_dee :=&_db .PdfRectangle {};_dee .Llx =_gaae .X1 +_ccc .Llx ;_dee .Lly =_gaae .Y1 +_ccc .Lly ;_dee .Urx =_gaae .X1 +_ccc .Urx ;_dee .Ury =_gaae .Y1 +_ccc .Ury ;return _ecaf ,_ccc ,_dee ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_db .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_db .PdfFieldSignature ,error ){if signature ==nil {return nil ,_af .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_cea ,_dge :=_fcdf (lines ,opts );if _dge !=nil {return nil ,_dge ;};_caaca :=_db .NewPdfFieldSignature (signature );_caaca .Rect =_cf .MakeArrayFromFloats (opts .Rect );_caaca .AP =_cea ;return _caaca ,nil ;};func _fcgd ()_cf .StreamEncoder {return _cf .NewFlateEncoder ()};