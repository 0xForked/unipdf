//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_ce "bytes";_a "encoding/binary";_f "errors";_bc "fmt";_ad "github.com/unidoc/unipdf/v3/common";_ega "github.com/unidoc/unipdf/v3/common/license";_bcf "github.com/unidoc/unipdf/v3/core";_ae "github.com/unidoc/unipdf/v3/core/security";_da "github.com/unidoc/unipdf/v3/core/security/crypt";_df "github.com/unidoc/unipdf/v3/internal/cmap";_ceb "github.com/unidoc/unipdf/v3/internal/imageutil";_bd "github.com/unidoc/unipdf/v3/internal/sampling";_dc "github.com/unidoc/unipdf/v3/internal/textencoding";_cb "github.com/unidoc/unipdf/v3/model/internal/fonts";_dg "github.com/unidoc/unipdf/v3/ps";_ee "github.com/unidoc/unitype";_gcb "golang.org/x/xerrors";_g "image";_cg "image/color";_ "image/gif";_ "image/png";_eg "io";_gc "io/ioutil";_db "math";_e "math/rand";_ed "os";_cc "regexp";_ccc "sort";_bed "strconv";_be "strings";_ba "time";_gd "unicode";_d "unicode/utf8";);

// ToPdfObject implements interface PdfModel.
func (_ceg *PdfActionNamed )ToPdfObject ()_bcf .PdfObject {_ceg .PdfAction .ToPdfObject ();_bebe :=_ceg ._ge ;_ca :=_bebe .PdfObject .(*_bcf .PdfObjectDictionary );_ca .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeNamed )));_ca .SetIfNotNil ("\u004e",_ceg .N );return _bebe ;};func _cdae (_cafa *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_bbge ,_eede :=_bcf .GetDict (_cafa .AP );if !_eede {return nil ,nil ,_f .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _bbge ==nil {return nil ,nil ,nil ;};_decb ,_eede :=_bcf .GetArray (_cafa .Rect );if !_eede ||_decb .Len ()!=4{return nil ,nil ,_f .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gbdb ,_abdf :=NewPdfRectangle (*_decb );if _abdf !=nil {return nil ,nil ,_abdf ;};_fecf :=_bcf .TraceToDirectObject (_bbge .Get ("\u004e"));switch _bacd :=_fecf .(type ){case *_bcf .PdfObjectStream :_cgbd :=_bacd ;_dbdca ,_afaeg :=NewXObjectFormFromStream (_cgbd );return _dbdca ,_gbdb ,_afaeg ;case *_bcf .PdfObjectDictionary :_dgdc :=_bacd ;_ddccf ,_eabfe :=_bcf .GetName (_cafa .AS );if !_eabfe {return nil ,nil ,nil ;};if _dgdc .Get (*_ddccf )==nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_ecef ,_eabfe :=_bcf .GetStream (_dgdc .Get (*_ddccf ));if !_eabfe {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ddccf );return nil ,nil ,_f .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_cabc ,_egge :=NewXObjectFormFromStream (_ecef );return _cabc ,_gbdb ,_egge ;};_ad .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fecf );return nil ,nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bcf .PdfObject ;Movie _bcf .PdfObject ;A _bcf .PdfObject ;};

// String returns a human readable description of `fontfile`.
func (_fbaag *fontFile )String ()string {_fcdb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fbaag ._ffcba !=nil {_fcdb =_fbaag ._ffcba .String ();};return _bc .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fbaag ._bbgab ,_fcdb );};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_efef *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bccc ,_cbed :=_bcf .GetNumbersAsFloat (objects );if _cbed !=nil {return nil ,_cbed ;};return _efef .ColorFromFloats (_bccc );};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ddaebd []byte )(_bgebe int ,_fbcec error );};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_cadce *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _cadce .baseFields ()._debbe !=nil {return _cadce .baseFields ()._debbe ;};if _bdcd :=_cadce ._cefc .getFontDescriptor ();_bdcd !=nil {return _bdcd ;};_ad .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_cadce );return nil ;};

// SetBorderWidth sets the style's border width.
func (_eddc *PdfBorderStyle )SetBorderWidth (width float64 ){_eddc .W =&width };

// ToInteger convert to an integer format.
func (_deaa *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_ccec :=_db .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_ccec *_deaa .C ()),uint32 (_ccec *_deaa .M ()),uint32 (_ccec *_deaa .Y ()),uint32 (_ccec *_deaa .K ())};};func _dbegc (_gffgb *_bcf .PdfObjectDictionary )(*PdfShadingType6 ,error ){_aacfa :=PdfShadingType6 {};_gffa :=_gffgb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gffa ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_badbf ,_efbbd :=_gffa .(*_bcf .PdfObjectInteger );if !_efbbd {_ad .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gffa );return nil ,_bcf .ErrTypeError ;};_aacfa .BitsPerCoordinate =_badbf ;_gffa =_gffgb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gffa ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_badbf ,_efbbd =_gffa .(*_bcf .PdfObjectInteger );if !_efbbd {_ad .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gffa );return nil ,_bcf .ErrTypeError ;};_aacfa .BitsPerComponent =_badbf ;_gffa =_gffgb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gffa ==nil {_ad .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_badbf ,_efbbd =_gffa .(*_bcf .PdfObjectInteger );if !_efbbd {_ad .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gffa );return nil ,_bcf .ErrTypeError ;};_aacfa .BitsPerComponent =_badbf ;_gffa =_gffgb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gffa ==nil {_ad .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cfgff ,_efbbd :=_gffa .(*_bcf .PdfObjectArray );if !_efbbd {_ad .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gffa );return nil ,_bcf .ErrTypeError ;};_aacfa .Decode =_cfgff ;if _ceabb :=_gffgb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ceabb !=nil {_aacfa .Function =[]PdfFunction {};if _edfaf ,_daedc :=_ceabb .(*_bcf .PdfObjectArray );_daedc {for _ ,_gbfac :=range _edfaf .Elements (){_ddaca ,_dfcgb :=_afag (_gbfac );if _dfcgb !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfcgb );return nil ,_dfcgb ;};_aacfa .Function =append (_aacfa .Function ,_ddaca );};}else {_fffge ,_begb :=_afag (_ceabb );if _begb !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_begb );return nil ,_begb ;};_aacfa .Function =append (_aacfa .Function ,_fffge );};};return &_aacfa ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_edcae *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _edcae .Alternate ==nil {if _edcae .N ==1{_feeb :=NewPdfColorspaceDeviceGray ();return _feeb .ColorFromFloats (vals );}else if _edcae .N ==3{_cebg :=NewPdfColorspaceDeviceRGB ();return _cebg .ColorFromFloats (vals );}else if _edcae .N ==4{_cbbgc :=NewPdfColorspaceDeviceCMYK ();return _cbbgc .ColorFromFloats (vals );}else {return nil ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _edcae .Alternate .ColorFromFloats (vals );};func (_dabf *PdfAppender )replaceObject (_gebe ,_aceb _bcf .PdfObject ){switch _bcac :=_gebe .(type ){case *_bcf .PdfIndirectObject :_dabf ._aeddf [_aceb ]=_bcac .ObjectNumber ;case *_bcf .PdfObjectStream :_dabf ._aeddf [_aceb ]=_bcac .ObjectNumber ;};};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_dgb :=NewPdfAnnotation ();_fcde :=&PdfAnnotationSquiggly {};_fcde .PdfAnnotation =_dgb ;_fcde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgb .SetContext (_fcde );return _fcde ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bcf .PdfObject ;Name _bcf .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ec *PdfAction )GetContainingPdfObject ()_bcf .PdfObject {return _ec ._ge };func _gded (_fdbbb *_bcf .PdfObjectDictionary ,_dcce *fontCommon )(*pdfCIDFontType2 ,error ){if _dcce ._ddcbb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ad .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dcce );return nil ,_bcf .ErrRangeError ;};_bcge :=_gbcab (_dcce );_ebeab ,_babc :=_bcf .GetDict (_fdbbb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_babc {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dcce );return nil ,ErrRequiredAttributeMissing ;};_bcge .CIDSystemInfo =_ebeab ;_bcge .DW =_fdbbb .Get ("\u0044\u0057");_bcge .W =_fdbbb .Get ("\u0057");_bcge .DW2 =_fdbbb .Get ("\u0044\u0057\u0032");_bcge .W2 =_fdbbb .Get ("\u0057\u0032");_bcge .CIDToGIDMap =_fdbbb .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_bcge ._bafc =1000.0;if _bcagb ,_bbgae :=_bcf .GetNumberAsFloat (_bcge .DW );_bbgae ==nil {_bcge ._bafc =_bcagb ;};_defg ,_gbdf :=_fegc (_bcge .W );if _gbdf !=nil {return nil ,_gbdf ;};if _defg ==nil {_defg =map[_dc .CharCode ]float64 {};};_bcge ._cbea =_defg ;return _bcge ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ebe :=NewPdfAction ();_bef :=&PdfActionURI {};_bef .PdfAction =_ebe ;_ebe .SetContext (_bef );return _bef ;};func (_cedf fontCommon )isCIDFont ()bool {if _cedf ._ddcbb ==""{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cedf );};_ggbd :=false ;switch _cedf ._ddcbb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ggbd =true ;};_ad .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_ggbd ,_cedf );return _ggbd ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_bagd :=PdfPage {};_bagd ._dbafe =_bcf .MakeDict ();_bagd .Resources =NewPdfPageResources ();_gdcg :=_bcf .PdfIndirectObject {};_gdcg .PdfObject =_bagd ._dbafe ;_bagd ._cbaab =&_gdcg ;return &_bagd ;};

// ToPdfObject implements interface PdfModel.
func (_bcab *PdfAnnotationText )ToPdfObject ()_bcf .PdfObject {_bcab .PdfAnnotation .ToPdfObject ();_ebdf :=_bcab ._fab ;_bcga :=_ebdf .PdfObject .(*_bcf .PdfObjectDictionary );if _bcab .PdfAnnotationMarkup !=nil {_bcab .PdfAnnotationMarkup .appendToPdfDictionary (_bcga );};_bcga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0054\u0065\u0078\u0074"));_bcga .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bcab .Open );_bcga .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcab .Name );_bcga .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bcab .State );_bcga .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_bcab .StateModel );return _ebdf ;};func (_edg *PdfReader )newPdfActionImportDataFromDict (_ggac *_bcf .PdfObjectDictionary )(*PdfActionImportData ,error ){_ffd ,_daeb :=_dec (_ggac .Get ("\u0046"));if _daeb !=nil {return nil ,_daeb ;};return &PdfActionImportData {F :_ffd },nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bcf .PdfObject ;PreserveRB _bcf .PdfObject ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_deca :=NewPdfAnnotation ();_faa :=&PdfAnnotationText {};_faa .PdfAnnotation =_deca ;_faa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_deca .SetContext (_faa );return _faa ;};func (_fgcc *PdfReader )newPdfAnnotationSoundFromDict (_gacgg *_bcf .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_daf :=PdfAnnotationSound {};_feee ,_dfeg :=_fgcc .newPdfAnnotationMarkupFromDict (_gacgg );if _dfeg !=nil {return nil ,_dfeg ;};_daf .PdfAnnotationMarkup =_feee ;_daf .Name =_gacgg .Get ("\u004e\u0061\u006d\u0065");_daf .Sound =_gacgg .Get ("\u0053\u006f\u0075n\u0064");return &_daf ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffebe *PdfShadingType6 )ToPdfObject ()_bcf .PdfObject {_ffebe .PdfShading .ToPdfObject ();_aeea ,_gbeg :=_ffebe .getShadingDict ();if _gbeg !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ffebe .BitsPerCoordinate !=nil {_aeea .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ffebe .BitsPerCoordinate );};if _ffebe .BitsPerComponent !=nil {_aeea .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffebe .BitsPerComponent );};if _ffebe .BitsPerFlag !=nil {_aeea .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ffebe .BitsPerFlag );};if _ffebe .Decode !=nil {_aeea .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffebe .Decode );};if _ffebe .Function !=nil {if len (_ffebe .Function )==1{_aeea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffebe .Function [0].ToPdfObject ());}else {_fdea :=_bcf .MakeArray ();for _ ,_ddgcb :=range _ffebe .Function {_fdea .Append (_ddgcb .ToPdfObject ());};_aeea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdea );};};return _ffebe ._aeddc ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_egdeg *PdfReader )Decrypt (password []byte )(bool ,error ){_cdca ,_cgaedf :=_egdeg ._eagdg .Decrypt (password );if _cgaedf !=nil {return false ,_cgaedf ;};if !_cdca {return false ,nil ;};_cgaedf =_egdeg .loadStructure ();if _cgaedf !=nil {_ad .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_cgaedf );return false ,_cgaedf ;};return true ,nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cggca :=&PdfPageResources {};_cggca ._agfbd =_bcf .MakeDict ();return _cggca ;};

// ToPdfObject implements interface PdfModel.
func (_bfe *PdfActionURI )ToPdfObject ()_bcf .PdfObject {_bfe .PdfAction .ToPdfObject ();_cbe :=_bfe ._ge ;_gcf :=_cbe .PdfObject .(*_bcf .PdfObjectDictionary );_gcf .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeURI )));_gcf .SetIfNotNil ("\u0055\u0052\u0049",_bfe .URI );_gcf .SetIfNotNil ("\u0049\u0073\u004da\u0070",_bfe .IsMap );return _cbe ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_ebdd *_bcf .PdfIndirectObject ;_caceg *_bcf .PdfIndirectObject ;_eedeb map[_bcf .PdfObject ]struct{};_bdgbd []_bcf .PdfObject ;_ccecce map[_bcf .PdfObject ]struct{};_cfbeg []*_bcf .PdfIndirectObject ;_cdaf *PdfOutlineTreeNode ;_feagf *_bcf .PdfObjectDictionary ;_bdgea []_bcf .PdfObject ;_cacdb *_bcf .PdfIndirectObject ;_bcddb *_c .Writer ;_cebd int64 ;_dbdaa error ;_badd *_bcf .PdfCrypt ;_ecggc *_bcf .PdfObjectDictionary ;_gcdfe *_bcf .PdfIndirectObject ;_cffga *_bcf .PdfObjectArray ;_aaffa int ;_gacbg int ;_bgebb *bool ;_ebaac map[_bcf .PdfObject ][]*_bcf .PdfObjectDictionary ;_afebgf *PdfAcroForm ;_aagcc Optimizer ;_ffafa map[int ]crossReference ;_eeecb int64 ;ObjNumOffset int ;_aegee bool ;_gcbbf _bcf .XrefTable ;_abfba int64 ;_gdfea int64 ;_cccff map[_bcf .PdfObject ]int64 ;_gfeb map[_bcf .PdfObject ]struct{};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfbee *PdfShadingType7 )ToPdfObject ()_bcf .PdfObject {_gfbee .PdfShading .ToPdfObject ();_dead ,_afgcg :=_gfbee .getShadingDict ();if _afgcg !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gfbee .BitsPerCoordinate !=nil {_dead .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gfbee .BitsPerCoordinate );};if _gfbee .BitsPerComponent !=nil {_dead .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gfbee .BitsPerComponent );};if _gfbee .BitsPerFlag !=nil {_dead .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gfbee .BitsPerFlag );};if _gfbee .Decode !=nil {_dead .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfbee .Decode );};if _gfbee .Function !=nil {if len (_gfbee .Function )==1{_dead .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfbee .Function [0].ToPdfObject ());}else {_gfdg :=_bcf .MakeArray ();for _ ,_fggec :=range _gfbee .Function {_gfdg .Append (_fggec .ToPdfObject ());};_dead .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfdg );};};return _gfbee ._aeddc ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ffe :=NewPdfAnnotation ();_gfca :=&PdfAnnotationWatermark {};_gfca .PdfAnnotation =_ffe ;_ffe .SetContext (_gfca );return _gfca ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ba .Time ;};func _bbaea (_dgeb _bcf .PdfObject )(*PdfBorderStyle ,error ){_afaaf :=&PdfBorderStyle {};_afaaf ._eafd =_dgeb ;var _cfbfe *_bcf .PdfObjectDictionary ;_dgeb =_bcf .TraceToDirectObject (_dgeb );_cfbfe ,_acfd :=_dgeb .(*_bcf .PdfObjectDictionary );if !_acfd {return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _aacga :=_cfbfe .Get ("\u0054\u0079\u0070\u0065");_aacga !=nil {_aebf ,_fcgg :=_aacga .(*_bcf .PdfObjectName );if !_fcgg {_ad .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_aacga );}else {if *_aebf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ad .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_aebf );};};};if _fbgb :=_cfbfe .Get ("\u0057");_fbgb !=nil {_cdb ,_cbbca :=_bcf .GetNumberAsFloat (_fbgb );if _cbbca !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cbbca );return nil ,_cbbca ;};_afaaf .W =&_cdb ;};if _eafg :=_cfbfe .Get ("\u0053");_eafg !=nil {_gfcc ,_fbae :=_eafg .(*_bcf .PdfObjectName );if !_fbae {return nil ,_f .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _cgca BorderStyle ;switch *_gfcc {case "\u0053":_cgca =BorderStyleSolid ;case "\u0044":_cgca =BorderStyleDashed ;case "\u0042":_cgca =BorderStyleBeveled ;case "\u0049":_cgca =BorderStyleInset ;case "\u0055":_cgca =BorderStyleUnderline ;default:_ad .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gfcc );return nil ,_f .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_afaaf .S =&_cgca ;};if _cdaa :=_cfbfe .Get ("\u0044");_cdaa !=nil {_cde ,_degb :=_cdaa .(*_bcf .PdfObjectArray );if !_degb {_ad .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cdaa );return nil ,_f .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_fgde ,_eege :=_cde .ToIntegerArray ();if _eege !=nil {_ad .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_eege );return nil ,_eege ;};_afaaf .D =&_fgde ;};return _afaaf ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_cfbb *PdfReader )newPdfAnnotationWatermarkFromDict (_dbce *_bcf .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bgf :=PdfAnnotationWatermark {};_bgf .FixedPrint =_dbce .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_bgf ,nil ;};func (_bdaaf *PdfWriter )writeObject (_caeb int ,_bdce _bcf .PdfObject ){_ad .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_caeb );if _eafcdc ,_abbg :=_bdce .(*_bcf .PdfIndirectObject );_abbg {_bdaaf ._ffafa [_caeb ]=crossReference {Type :1,Offset :_bdaaf ._cebd ,Generation :_eafcdc .GenerationNumber };_gaagb :=_bc .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_caeb );if _fedaa ,_gafg :=_eafcdc .PdfObject .(*pdfSignDictionary );_gafg {_fedaa ._bgfad =_bdaaf ._cebd +int64 (len (_gaagb ));};if _eafcdc .PdfObject ==nil {_ad .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_eafcdc .PdfObject =_bcf .MakeNull ();};_gaagb +=_eafcdc .PdfObject .WriteString ();_gaagb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bdaaf .writeString (_gaagb );return ;};if _egbfe ,_fgbc :=_bdce .(*_bcf .PdfObjectStream );_fgbc {_bdaaf ._ffafa [_caeb ]=crossReference {Type :1,Offset :_bdaaf ._cebd ,Generation :_egbfe .GenerationNumber };_faacd :=_bc .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_caeb );_faacd +=_egbfe .PdfObjectDictionary .WriteString ();_faacd +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdaaf .writeString (_faacd );_bdaaf .writeBytes (_egbfe .Stream );_bdaaf .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gbffg ,_bcadb :=_bdce .(*_bcf .PdfObjectStreams );_bcadb {_bdaaf ._ffafa [_caeb ]=crossReference {Type :1,Offset :_bdaaf ._cebd ,Generation :_gbffg .GenerationNumber };_acaad :=_bc .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_caeb );var _dcdgf []string ;var _acebd string ;var _ecdae int64 ;for _dfaaca ,_dcfd :=range _gbffg .Elements (){_ececa ,_efdba :=_dcfd .(*_bcf .PdfIndirectObject );if !_efdba {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_caeb ,_dcfd );continue ;};_defba :=_ececa .PdfObject .WriteString ()+"\u0020";_acebd =_acebd +_defba ;_dcdgf =append (_dcdgf ,_bc .Sprintf ("\u0025\u0064\u0020%\u0064",_ececa .ObjectNumber ,_ecdae ));_bdaaf ._ffafa [int (_ececa .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_caeb ,Index :_dfaaca };_ecdae =_ecdae +int64 (len ([]byte (_defba )));};_ededd :=_be .Join (_dcdgf ,"\u0020")+"\u0020";_dgdfb :=_bcf .NewFlateEncoder ();_cafbe :=_dgdfb .MakeStreamDict ();_cafbe .Set (_bcf .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bcf .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_ggff :=int64 (_gbffg .Len ());_cafbe .Set (_bcf .PdfObjectName ("\u004e"),_bcf .MakeInteger (_ggff ));_dcceg :=int64 (len (_ededd ));_cafbe .Set (_bcf .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bcf .MakeInteger (_dcceg ));_gfdgf ,_ :=_dgdfb .EncodeBytes ([]byte (_ededd +_acebd ));_eddfde :=int64 (len (_gfdgf ));_cafbe .Set (_bcf .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bcf .MakeInteger (_eddfde ));_acaad +=_cafbe .WriteString ();_acaad +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdaaf .writeString (_acaad );_bdaaf .writeBytes (_gfdgf );_bdaaf .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bdaaf .writeString (_bdce .WriteString ());};

// ToPdfObject implements interface PdfModel.
func (_feg *PdfActionResetForm )ToPdfObject ()_bcf .PdfObject {_feg .PdfAction .ToPdfObject ();_egb :=_feg ._ge ;_ddd :=_egb .PdfObject .(*_bcf .PdfObjectDictionary );_ddd .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeResetForm )));_ddd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_feg .Fields );_ddd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_feg .Flags );return _egb ;};func _gdbe (_aeac *PdfPage )map[_bcf .PdfObjectName ]_bcf .PdfObject {_faca :=make (map[_bcf .PdfObjectName ]_bcf .PdfObject );if _aeac .Resources ==nil {return _faca ;};if _aeac .Resources .Font !=nil {if _gfac ,_gffc :=_bcf .GetDict (_aeac .Resources .Font );_gffc {for _ ,_acec :=range _gfac .Keys (){_faca [_acec ]=_gfac .Get (_acec );};};};if _aeac .Resources .ExtGState !=nil {if _debf ,_eda :=_bcf .GetDict (_aeac .Resources .ExtGState );_eda {for _ ,_agff :=range _debf .Keys (){_faca [_agff ]=_debf .Get (_agff );};};};if _aeac .Resources .XObject !=nil {if _ebbab ,_egbd :=_bcf .GetDict (_aeac .Resources .XObject );_egbd {for _ ,_bedd :=range _ebbab .Keys (){_faca [_bedd ]=_ebbab .Get (_bedd );};};};if _aeac .Resources .Pattern !=nil {if _dagf ,_ffa :=_bcf .GetDict (_aeac .Resources .Pattern );_ffa {for _ ,_egca :=range _dagf .Keys (){_faca [_egca ]=_dagf .Get (_egca );};};};if _aeac .Resources .Shading !=nil {if _ded ,_cgce :=_bcf .GetDict (_aeac .Resources .Shading );_cgce {for _ ,_cage :=range _ded .Keys (){_faca [_cage ]=_ded .Get (_cage );};};};if _aeac .Resources .ProcSet !=nil {if _fdbf ,_egdd :=_bcf .GetDict (_aeac .Resources .ProcSet );_egdd {for _ ,_gcgb :=range _fdbf .Keys (){_faca [_gcgb ]=_fdbf .Get (_gcgb );};};};if _aeac .Resources .Properties !=nil {if _adce ,_bgde :=_bcf .GetDict (_aeac .Resources .Properties );_bgde {for _ ,_gdae :=range _adce .Keys (){_faca [_gdae ]=_adce .Get (_gdae );};};};return _faca ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_edfb *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_daad :=func (_cbfed float64 )float64 {if _cbfed >=6.0/29{return _cbfed *_cbfed *_cbfed ;};return 108.0/841*(_cbfed -4/29);};_dcgb :=img ._afdd ;if len (_dcgb )!=6{_ad .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_dcgb =_edfb .DecodeArray ();};_cbdd :=_bd .NewReader (img .getBase ());_gbcf :=_ceb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._bgdfb ,img ._afdd );_gdef :=_bd .NewWriter (_gbcf );_gead :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_ffff :=make ([]uint32 ,3);var (_cbfa error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fedaee ,_dbfa ,_abf float64 ;);for {_cbfa =_cbdd .ReadSamples (_ffff );if _cbfa ==_eg .EOF {break ;}else if _cbfa !=nil {return img ,_cbfa ;};Ls =float64 (_ffff [0])/_gead ;As =float64 (_ffff [1])/_gead ;Bs =float64 (_ffff [2])/_gead ;Ls =_ceb .LinearInterpolate (Ls ,0.0,1.0,_dcgb [0],_dcgb [1]);As =_ceb .LinearInterpolate (As ,0.0,1.0,_dcgb [2],_dcgb [3]);Bs =_ceb .LinearInterpolate (Bs ,0.0,1.0,_dcgb [4],_dcgb [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_edfb .WhitePoint [0]*_daad (L );Y =_edfb .WhitePoint [1]*_daad (M );Z =_edfb .WhitePoint [2]*_daad (N );_fedaee =3.240479*X +-1.537150*Y +-0.498535*Z ;_dbfa =-0.969256*X +1.875992*Y +0.041556*Z ;_abf =0.055648*X +-0.204043*Y +1.057311*Z ;_fedaee =_db .Min (_db .Max (_fedaee ,0),1.0);_dbfa =_db .Min (_db .Max (_dbfa ,0),1.0);_abf =_db .Min (_db .Max (_abf ,0),1.0);_ffff [0]=uint32 (_fedaee *_gead );_ffff [1]=uint32 (_dbfa *_gead );_ffff [2]=uint32 (_abf *_gead );if _cbfa =_gdef .WriteSamples (_ffff );_cbfa !=nil {return img ,_cbfa ;};};return _edfe (&_gbcf ),nil ;};

// IsCID returns true if the underlying font is CID.
func (_cfdd *PdfFont )IsCID ()bool {return _cfdd .baseFields ().isCIDFont ()};var _ pdfFont =(*pdfFontSimple )(nil );const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fbaa *PdfFieldButton )SetType (btype ButtonType ){_dgdgd :=uint32 (0);if _fbaa .Ff !=nil {_dgdgd =uint32 (*_fbaa .Ff );};switch btype {case ButtonTypePush :_dgdgd |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dgdgd |=FieldFlagRadio .Mask ();};_fbaa .Ff =_bcf .MakeInteger (int64 (_dgdgd ));};func _fdbac ()_ba .Time {return _gefc };

// MergePageWith appends page content to source Pdf file page content.
func (_egcb *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dceb :=pageNum -1;var _dagb *PdfPage ;for _bccd ,_dgdb :=range _egcb ._eeeg {if _bccd ==_dceb {_dagb =_dgdb ;};};if _dagb ==nil {return _bc .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _dagb ._cbaab !=nil &&_dagb ._cbaab .GetParser ()==_egcb ._bdfd ._eagdg {_dagb =_dagb .Duplicate ();_egcb ._eeeg [_dceb ]=_dagb ;};page =page .Duplicate ();_dcef (page );_afb :=_gdbe (_dagb );_gddf :=_gdbe (page );_cdbg :=make (map[_bcf .PdfObjectName ]_bcf .PdfObjectName );for _begf :=range _gddf {if _ ,_dgdg :=_afb [_begf ];_dgdg {for _fbdf :=1;true ;_fbdf ++{_gcgce :=_bcf .PdfObjectName (string (_begf )+_bed .Itoa (_fbdf ));if _ ,_dcfe :=_afb [_gcgce ];!_dcfe {_cdbg [_begf ]=_gcgce ;break ;};};};};_aabf ,_fbec :=page .GetContentStreams ();if _fbec !=nil {return _fbec ;};_gabg ,_fbec :=_dagb .GetContentStreams ();if _fbec !=nil {return _fbec ;};for _fcdd ,_acbd :=range _aabf {for _bece ,_efb :=range _cdbg {_acbd =_be .Replace (_acbd ,"\u002f"+string (_bece ),"\u002f"+string (_efb ),-1);};_aabf [_fcdd ]=_acbd ;};_gabg =append (_gabg ,_aabf ...);if _dgabc :=_dagb .SetContentStreams (_gabg ,_bcf .NewFlateEncoder ());_dgabc !=nil {return _dgabc ;};for _ ,_cgfa :=range page ._gbgd {_dagb ._gbgd =append (_dagb ._gbgd ,_cgfa );};if _dagb .Resources ==nil {_dagb .Resources =NewPdfPageResources ();};if page .Resources !=nil {_dagb .Resources .Font =_egcb .mergeResources (_dagb .Resources .Font ,page .Resources .Font ,_cdbg );_dagb .Resources .XObject =_egcb .mergeResources (_dagb .Resources .XObject ,page .Resources .XObject ,_cdbg );_dagb .Resources .Properties =_egcb .mergeResources (_dagb .Resources .Properties ,page .Resources .Properties ,_cdbg );if _dagb .Resources .ProcSet ==nil {_dagb .Resources .ProcSet =page .Resources .ProcSet ;};_dagb .Resources .Shading =_egcb .mergeResources (_dagb .Resources .Shading ,page .Resources .Shading ,_cdbg );_dagb .Resources .ExtGState =_egcb .mergeResources (_dagb .Resources .ExtGState ,page .Resources .ExtGState ,_cdbg );};_fbaf ,_fbec :=_dagb .GetMediaBox ();if _fbec !=nil {return _fbec ;};_dcdd ,_fbec :=page .GetMediaBox ();if _fbec !=nil {return _fbec ;};var _gcbe bool ;if _fbaf .Llx > _dcdd .Llx {_fbaf .Llx =_dcdd .Llx ;_gcbe =true ;};if _fbaf .Lly > _dcdd .Lly {_fbaf .Lly =_dcdd .Lly ;_gcbe =true ;};if _fbaf .Urx < _dcdd .Urx {_fbaf .Urx =_dcdd .Urx ;_gcbe =true ;};if _fbaf .Ury < _dcdd .Ury {_fbaf .Ury =_dcdd .Ury ;_gcbe =true ;};if _gcbe {_dagb .MediaBox =_fbaf ;};return nil ;};func (_dcbd *PdfReader )newPdfAnnotation3DFromDict (_bda *_bcf .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_gcee :=PdfAnnotation3D {};_gcee .T3DD =_bda .Get ("\u0033\u0044\u0044");_gcee .T3DV =_bda .Get ("\u0033\u0044\u0056");_gcee .T3DA =_bda .Get ("\u0033\u0044\u0041");_gcee .T3DI =_bda .Get ("\u0033\u0044\u0049");_gcee .T3DB =_bda .Get ("\u0033\u0044\u0042");return &_gcee ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bcf .PdfObjectArray ;TI *_bcf .PdfObjectInteger ;I *_bcf .PdfObjectArray ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_beda *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bcf .PdfObjectStream )(*XObjectImage ,error ){_adfd :=&XObjectImage {};_adfd ._dabeg =stream ;_cfged :=*(stream .PdfObjectDictionary );_accec ,_bdecc :=_bcf .NewEncoderFromStream (stream );if _bdecc !=nil {return nil ,_bdecc ;};_adfd .Filter =_accec ;if _eggee :=_bcf .TraceToDirectObject (_cfged .Get ("\u0057\u0069\u0064t\u0068"));_eggee !=nil {_ebccg ,_geedf :=_eggee .(*_bcf .PdfObjectInteger );if !_geedf {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_ebgcd :=int64 (*_ebccg );_adfd .Width =&_ebgcd ;}else {return nil ,_f .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cacf :=_bcf .TraceToDirectObject (_cfged .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_cacf !=nil {_adcdc ,_fegde :=_cacf .(*_bcf .PdfObjectInteger );if !_fegde {return nil ,_f .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_effbc :=int64 (*_adcdc );_adfd .Height =&_effbc ;}else {return nil ,_f .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cbafd :=_bcf .TraceToDirectObject (_cfged .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_cbafd !=nil {_gdafa ,_eedabd :=NewPdfColorspaceFromPdfObject (_cbafd );if _eedabd !=nil {return nil ,_eedabd ;};_adfd .ColorSpace =_gdafa ;}else {_ad .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_adfd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fcadg :=_bcf .TraceToDirectObject (_cfged .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fcadg !=nil {_aagfd ,_fafabc :=_fcadg .(*_bcf .PdfObjectInteger );if !_fafabc {return nil ,_f .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_abfgc :=int64 (*_aagfd );_adfd .BitsPerComponent =&_abfgc ;};_adfd .Intent =_cfged .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_adfd .ImageMask =_cfged .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_adfd .Mask =_cfged .Get ("\u004d\u0061\u0073\u006b");_adfd .Decode =_cfged .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_adfd .Interpolate =_cfged .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_adfd .Alternatives =_cfged .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_adfd .SMask =_cfged .Get ("\u0053\u004d\u0061s\u006b");_adfd .SMaskInData =_cfged .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_adfd .Matte =_cfged .Get ("\u004d\u0061\u0074t\u0065");_adfd .Name =_cfged .Get ("\u004e\u0061\u006d\u0065");_adfd .StructParent =_cfged .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_adfd .ID =_cfged .Get ("\u0049\u0044");_adfd .OPI =_cfged .Get ("\u004f\u0050\u0049");_adfd .Metadata =_cfged .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_adfd .OC =_cfged .Get ("\u004f\u0043");_adfd .Stream =stream .Stream ;return _adfd ,nil ;};func (_bbab *PdfReader )newPdfAnnotationStampFromDict (_dcgg *_bcf .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_cgf :=PdfAnnotationStamp {};_fcbb ,_gbag :=_bbab .newPdfAnnotationMarkupFromDict (_dcgg );if _gbag !=nil {return nil ,_gbag ;};_cgf .PdfAnnotationMarkup =_fcbb ;_cgf .Name =_dcgg .Get ("\u004e\u0061\u006d\u0065");return &_cgf ,nil ;};func _bafaa (_gbbfc *_bcf .PdfObjectArray )(float64 ,error ){_bcbgaf ,_bgebeb :=_gbbfc .ToFloat64Array ();if _bgebeb !=nil {_ad .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gbbfc ,_bgebeb );};switch len (_bcbgaf ){case 1:return _bcbgaf [0],nil ;case 3:_fdebc :=PdfColorspaceDeviceRGB {};_bbefa ,_bbgbcf :=_fdebc .ColorFromFloats (_bcbgaf );if _bbgbcf !=nil {return 0.0,_bbgbcf ;};return _bbefa .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_dbfae :=PdfColorspaceDeviceCMYK {};_gbcdb ,_ecbce :=_dbfae .ColorFromFloats (_bcbgaf );if _ecbce !=nil {return 0.0,_ecbce ;};_bdbdb ,_ecbce :=_dbfae .ColorToRGB (_gbcdb .(*PdfColorDeviceCMYK ));if _ecbce !=nil {return 0.0,_ecbce ;};return _bdbdb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_bgebeb =_f .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ad .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gbbfc ,_bgebeb );return 0.0,_bgebeb ;};

// SetImage updates XObject Image with new image data.
func (_dbbd *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_dbbd .Filter .UpdateParams (img .GetParamsDict ());_bdgc ,_gface :=_dbbd .Filter .EncodeBytes (img .Data );if _gface !=nil {return _gface ;};_dbbd .Stream =_bdgc ;_efgdg :=img .Width ;_dbbd .Width =&_efgdg ;_eegfc :=img .Height ;_dbbd .Height =&_eegfc ;_dagd :=img .BitsPerComponent ;_dbbd .BitsPerComponent =&_dagd ;if cs ==nil {if img .ColorComponents ==1{_dbbd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dbbd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dbbd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _f .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dbbd .ColorSpace =cs ;};return nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// ColorToRGB converts gray -> rgb for a single color component.
func (_fgdea *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ebff ,_cbdc :=color .(*PdfColorDeviceGray );if !_cbdc {_ad .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_ebff ),float64 (*_ebff ),float64 (*_ebff )),nil ;};

// GetNumComponents returns the number of color components.
func (_fggeg *PdfColorspaceICCBased )GetNumComponents ()int {return _fggeg .N };

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ToPdfObject implements interface PdfModel.
func (_fcfb *PdfAnnotationPrinterMark )ToPdfObject ()_bcf .PdfObject {_fcfb .PdfAnnotation .ToPdfObject ();_fcdc :=_fcfb ._fab ;_eaa :=_fcdc .PdfObject .(*_bcf .PdfObjectDictionary );_eaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_eaa .SetIfNotNil ("\u004d\u004e",_fcfb .MN );return _fcdc ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bcf .PdfObject ;Name _bcf .PdfObject ;};

// String returns a string describing the font descriptor.
func (_eedf *PdfFontDescriptor )String ()string {var _dcagg []string ;if _eedf .FontName !=nil {_dcagg =append (_dcagg ,_eedf .FontName .String ());};if _eedf .FontFamily !=nil {_dcagg =append (_dcagg ,_eedf .FontFamily .String ());};if _eedf .fontFile !=nil {_dcagg =append (_dcagg ,_eedf .fontFile .String ());};if _eedf ._cgdgc !=nil {_dcagg =append (_dcagg ,_eedf ._cgdgc .String ());};_dcagg =append (_dcagg ,_bc .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_eedf .FontFile3 !=nil ));return _bc .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_be .Join (_dcagg ,"\u002c\u0020"));};func (_gbbff *pdfFontSimple )getFontEncoding ()(_efedb string ,_affg map[_dc .CharCode ]_dc .GlyphName ,_gfacb error ){_efedb ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _eeee ,_ecefa :=_fcaa [_gbbff ._agaf ];_ecefa {_efedb =_eeee ;}else if _gbbff .fontFlags ()&_dcdda !=0{for _bbcef ,_cgcf :=range _fcaa {if _be .Contains (_gbbff ._agaf ,_bbcef ){_efedb =_cgcf ;break ;};};};if _gbbff .Encoding ==nil {return _efedb ,nil ,nil ;};switch _cbgdc :=_gbbff .Encoding .(type ){case *_bcf .PdfObjectName :return string (*_cbgdc ),nil ,nil ;case *_bcf .PdfObjectDictionary :_afdee ,_aabg :=_bcf .GetName (_cbgdc .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _aabg {_efedb =_afdee .String ();};if _ecgd :=_cbgdc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_ecgd !=nil {_cdbab ,_cgfb :=_bcf .GetArray (_ecgd );if !_cgfb {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cbgdc ,_cbgdc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_bcf .ErrTypeError ;};_affg ,_gfacb =_dc .FromFontDifferences (_cdbab );};return _efedb ,_affg ,_gfacb ;default:_ad .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gbbff .Encoding ,_gbbff .Encoding );return "",nil ,_bcf .ErrTypeError ;};};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fcbg *PdfOutlineItem )ToPdfObject ()_bcf .PdfObject {_caac :=_fcbg ._dcdea ;_abgcf :=_caac .PdfObject .(*_bcf .PdfObjectDictionary );_abgcf .Set ("\u0054\u0069\u0074l\u0065",_fcbg .Title );if _fcbg .A !=nil {_abgcf .Set ("\u0041",_fcbg .A );};if _cgcef :=_abgcf .Get ("\u0053\u0045");_cgcef !=nil {_abgcf .Remove ("\u0053\u0045");};if _fcbg .C !=nil {_abgcf .Set ("\u0043",_fcbg .C );};if _fcbg .Dest !=nil {_abgcf .Set ("\u0044\u0065\u0073\u0074",_fcbg .Dest );};if _fcbg .F !=nil {_abgcf .Set ("\u0046",_fcbg .F );};if _fcbg .Count !=nil {_abgcf .Set ("\u0043\u006f\u0075n\u0074",_bcf .MakeInteger (*_fcbg .Count ));};if _fcbg .Next !=nil {_abgcf .Set ("\u004e\u0065\u0078\u0074",_fcbg .Next .ToPdfObject ());};if _fcbg .First !=nil {_abgcf .Set ("\u0046\u0069\u0072s\u0074",_fcbg .First .ToPdfObject ());};if _fcbg .Prev !=nil {_abgcf .Set ("\u0050\u0072\u0065\u0076",_fcbg .Prev .GetContext ().GetContainingPdfObject ());};if _fcbg .Last !=nil {_abgcf .Set ("\u004c\u0061\u0073\u0074",_fcbg .Last .GetContext ().GetContainingPdfObject ());};if _fcbg .Parent !=nil {_abgcf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fcbg .Parent .GetContext ().GetContainingPdfObject ());};return _caac ;};func _dbae (_gcaeg _bcf .PdfObject )(*_bcf .PdfObjectDictionary ,*fontCommon ,error ){_gaff :=&fontCommon {};if _ddac ,_efceb :=_gcaeg .(*_bcf .PdfIndirectObject );_efceb {_gaff ._gecg =_ddac .ObjectNumber ;};_beeda ,_dgaea :=_bcf .GetDict (_gcaeg );if !_dgaea {_ad .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gcaeg );return nil ,nil ,ErrFontNotSupported ;};_fdbfg ,_dgaea :=_bcf .GetNameVal (_beeda .Get ("\u0054\u0079\u0070\u0065"));if !_dgaea {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _fdbfg !="\u0046\u006f\u006e\u0074"{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fdbfg ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_bcf .ErrTypeError ;};_abbba ,_dgaea :=_bcf .GetNameVal (_beeda .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dgaea {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_gaff ._ddcbb =_abbba ;_ecea ,_dgaea :=_bcf .GetNameVal (_beeda .Get ("\u004e\u0061\u006d\u0065"));if _dgaea {_gaff ._bfge =_ecea ;};if _abbba =="\u0054\u0079\u0070e\u0033"{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_beeda );return _beeda ,_gaff ,ErrType3FontNotSupported ;};_dfff ,_dgaea :=_bcf .GetNameVal (_beeda .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dgaea {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _beeda ,_gaff ,ErrRequiredAttributeMissing ;};_gaff ._agaf =_dfff ;_cdea :=_beeda .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _cdea !=nil {_gfcb ,_cbdf :=_eadfa (_cdea );if _cbdf !=nil {_ad .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbdf );return _beeda ,_gaff ,_cbdf ;};_gaff ._debbe =_gfcb ;};_egdb :=_beeda .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _egdb !=nil {_gaff ._bcae =_bcf .TraceToDirectObject (_egdb );_aagca ,_fgeed :=_egea (_gaff ._bcae ,_gaff );if _fgeed !=nil {return _beeda ,_gaff ,_fgeed ;};_gaff ._ecba =_aagca ;}else if _abbba =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_abbba =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dfec ,_eeba :=_df .NewCIDSystemInfo (_beeda .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _eeba !=nil {return _beeda ,_gaff ,_eeba ;};_ceee :=_bc .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dfec .Registry ,_dfec .Ordering );if _df .IsPredefinedCMap (_ceee ){_gaff ._ecba ,_eeba =_df .LoadPredefinedCMap (_ceee );if _eeba !=nil {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ceee ,_eeba );};};};return _beeda ,_gaff ,nil ;};func (_fcf *PdfReader )newPdfActionSoundFromDict (_fbg *_bcf .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_fbg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_fbg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_fbg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_fbg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_fbg .Get ("\u004d\u0069\u0078")},nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dagaf *PdfReader )CheckAccessRights (password []byte )(bool ,_ae .Permissions ,error ){return _dagaf ._eagdg .CheckAccessRights (password );};

// ToPdfObject converts rectangle to a PDF object.
func (_fdgdg *PdfRectangle )ToPdfObject ()_bcf .PdfObject {return _bcf .MakeArray (_bcf .MakeFloat (_fdgdg .Llx ),_bcf .MakeFloat (_fdgdg .Lly ),_bcf .MakeFloat (_fdgdg .Urx ),_bcf .MakeFloat (_fdgdg .Ury ));};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bcf .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_fedab *_bcf .PdfIndirectObject ;};func _bgcg (_cebe _bcf .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ad .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cebe .String (),_cebe );_acfg :=NewPdfColorspaceSpecialPattern ();if _gcdg ,_bgbcc :=_cebe .(*_bcf .PdfIndirectObject );_bgbcc {_acfg ._egcc =_gcdg ;};_cebe =_bcf .TraceToDirectObject (_cebe );if _ecebf ,_cffg :=_cebe .(*_bcf .PdfObjectName );_cffg {if *_ecebf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_bc .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _acfg ,nil ;};_aafd ,_acdee :=_cebe .(*_bcf .PdfObjectArray );if !_acdee {_ad .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cebe );return nil ,_bc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _aafd .Len ()!=1&&_aafd .Len ()!=2{_ad .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_aafd );return nil ,_bc .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cebe =_aafd .Get (0);if _cabe ,_ebde :=_cebe .(*_bcf .PdfObjectName );_ebde {if *_cabe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ad .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_cabe );return nil ,_bc .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _aafd .Len ()> 1{_cebe =_aafd .Get (1);_cebe =_bcf .TraceToDirectObject (_cebe );_efggg ,_daaaf :=NewPdfColorspaceFromPdfObject (_cebe );if _daaaf !=nil {return nil ,_daaaf ;};_acfg .UnderlyingCS =_efggg ;};_ad .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_acfg .UnderlyingCS );return _acfg ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_eabac *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_dccaa *PdfAnnotationPopup )ToPdfObject ()_bcf .PdfObject {_dccaa .PdfAnnotation .ToPdfObject ();_gdcd :=_dccaa ._fab ;_abgb :=_gdcd .PdfObject .(*_bcf .PdfObjectDictionary );_abgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0050\u006f\u0070u\u0070"));_abgb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dccaa .Parent );_abgb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dccaa .Open );return _gdcd ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bcf .PdfObject ;LE _bcf .PdfObject ;BS _bcf .PdfObject ;IC _bcf .PdfObject ;BE _bcf .PdfObject ;IT _bcf .PdfObject ;Measure _bcf .PdfObject ;};func _fedfd (_ggedg *_bcf .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dggd :=PdfShadingType7 {};_gdab :=_ggedg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gdab ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gaef ,_gfbea :=_gdab .(*_bcf .PdfObjectInteger );if !_gfbea {_ad .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdab );return nil ,_bcf .ErrTypeError ;};_dggd .BitsPerCoordinate =_gaef ;_gdab =_ggedg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gdab ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gaef ,_gfbea =_gdab .(*_bcf .PdfObjectInteger );if !_gfbea {_ad .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gdab );return nil ,_bcf .ErrTypeError ;};_dggd .BitsPerComponent =_gaef ;_gdab =_ggedg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gdab ==nil {_ad .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_gaef ,_gfbea =_gdab .(*_bcf .PdfObjectInteger );if !_gfbea {_ad .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gdab );return nil ,_bcf .ErrTypeError ;};_dggd .BitsPerComponent =_gaef ;_gdab =_ggedg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gdab ==nil {_ad .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_ddeeb ,_gfbea :=_gdab .(*_bcf .PdfObjectArray );if !_gfbea {_ad .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdab );return nil ,_bcf .ErrTypeError ;};_dggd .Decode =_ddeeb ;if _gafba :=_ggedg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gafba !=nil {_dggd .Function =[]PdfFunction {};if _eafcg ,_bfcdc :=_gafba .(*_bcf .PdfObjectArray );_bfcdc {for _ ,_ecbfd :=range _eafcg .Elements (){_cbff ,_abgcg :=_afag (_ecbfd );if _abgcg !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abgcg );return nil ,_abgcg ;};_dggd .Function =append (_dggd .Function ,_cbff );};}else {_cceg ,_acfge :=_afag (_gafba );if _acfge !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acfge );return nil ,_acfge ;};_dggd .Function =append (_dggd .Function ,_cceg );};};return &_dggd ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_fbceg *Image )GetParamsDict ()*_bcf .PdfObjectDictionary {_dbba :=_bcf .MakeDict ();_dbba .Set ("\u0057\u0069\u0064t\u0068",_bcf .MakeInteger (_fbceg .Width ));_dbba .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcf .MakeInteger (_fbceg .Height ));_dbba .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcf .MakeInteger (int64 (_fbceg .ColorComponents )));_dbba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcf .MakeInteger (_fbceg .BitsPerComponent ));return _dbba ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bcf .PdfObjectDictionary )(*PdfPageResources ,error ){_cdgdg :=NewPdfPageResources ();if _adbcdc :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_adbcdc !=nil {_cdgdg .ExtGState =_adbcdc ;};if _aade :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_aade !=nil &&!_bcf .IsNullObject (_aade ){_cdgdg .ColorSpace =_aade ;};if _bgdde :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_bgdde !=nil {_cdgdg .Pattern =_bgdde ;};if _agab :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_agab !=nil {_cdgdg .Shading =_agab ;};if _cbef :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cbef !=nil {_cdgdg .XObject =_cbef ;};if _afdbb :=_bcf .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_afdbb !=nil {_cdgdg .Font =_afdbb ;};if _abfbf :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_abfbf !=nil {_cdgdg .ProcSet =_abfbf ;};if _gbeeda :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gbeeda !=nil {_cdgdg .Properties =_gbeeda ;};return _cdgdg ,nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};func (_cdcfd *pdfFontSimple )addEncoding ()error {var (_fdcea string ;_fcdg map[_dc .CharCode ]_dc .GlyphName ;_gfbe _dc .SimpleEncoder ;);if _cdcfd .Encoder ()!=nil {_cgbbc ,_dbbee :=_cdcfd .Encoder ().(_dc .SimpleEncoder );if _dbbee &&_cgbbc !=nil {_fdcea =_cgbbc .BaseName ();};};if _cdcfd .Encoding !=nil {_aeca ,_edegg ,_gede :=_cdcfd .getFontEncoding ();if _gede !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdcfd ._agaf ,_cdcfd ._ddcbb ,_cdcfd .Encoding ,_cdcfd .Encoding ,_gede );return _gede ;};if _aeca !=""{_fdcea =_aeca ;};_gfbe ,_gede =_dc .NewSimpleTextEncoder (_fdcea ,_edegg );if _gede !=nil {return _gede ;};};if _gfbe ==nil {_bcdc :=_cdcfd ._debbe ;if _bcdc !=nil {switch _cdcfd ._ddcbb {case "\u0054\u0079\u0070e\u0031":if _bcdc .fontFile !=nil &&_bcdc .fontFile ._ffcba !=nil {_ad .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_gfbe =_bcdc .fontFile ._ffcba ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _bcdc ._cgdgc !=nil {_ad .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_agdga ,_feaee :=_bcdc ._cgdgc .MakeEncoder ();if _feaee ==nil {_gfbe =_agdga ;};};};};};if _gfbe !=nil {if _fcdg !=nil {_ad .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcdg ,_cdcfd .baseFields ());_gfbe =_dc .ApplyDifferences (_gfbe ,_fcdg );};_cdcfd .SetEncoder (_gfbe );};return nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_beaa *PdfOutlineItem )GetContainingPdfObject ()_bcf .PdfObject {return _beaa ._dcdea };

// ToPdfObject returns the PDF representation of the colorspace.
func (_gfff *PdfColorspaceDeviceGray )ToPdfObject ()_bcf .PdfObject {return _bcf .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bcf .PdfObject ;RichMediaContent _bcf .PdfObject ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_dedc *PdfPattern )GetContainingPdfObject ()_bcf .PdfObject {return _dedc ._gebbd };

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_edbg *PdfPage )SetContentStreams (cStreams []string ,encoder _bcf .StreamEncoder )error {if len (cStreams )==0{_edbg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bcf .NewRawEncoder ();};var _geded []*_bcf .PdfObjectStream ;for _ ,_dbcgc :=range cStreams {_bbede :=&_bcf .PdfObjectStream {};_ebbga :=encoder .MakeStreamDict ();_gabgd ,_aefde :=encoder .EncodeBytes ([]byte (_dbcgc ));if _aefde !=nil {return _aefde ;};_ebbga .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcf .MakeInteger (int64 (len (_gabgd ))));_bbede .PdfObjectDictionary =_ebbga ;_bbede .Stream =[]byte (_gabgd );_geded =append (_geded ,_bbede );};if len (_geded )==1{_edbg .Contents =_geded [0];}else {_eadcc :=_bcf .MakeArray ();for _ ,_ddffe :=range _geded {_eadcc .Append (_ddffe );};_edbg .Contents =_eadcc ;};return nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_bcagg *PdfWriter )AddPage (page *PdfPage )error {_dcef (page );_ffbb :=page .ToPdfObject ();_ad .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_ad .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ffbb );_gggba ,_dafe :=_bcf .GetIndirect (_ffbb );if !_dafe {return _f .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_ad .Log .Trace ("\u0025\u0073",_gggba );_ad .Log .Trace ("\u0025\u0073",_gggba .PdfObject );_cecee ,_dafe :=_bcf .GetDict (_gggba .PdfObject );if !_dafe {return _f .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fedfdb ,_dafe :=_bcf .GetName (_cecee .Get ("\u0054\u0079\u0070\u0065"));if !_dafe {return _bc .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_cecee .Get ("\u0054\u0079\u0070\u0065"));};if _fedfdb .String ()!="\u0050\u0061\u0067\u0065"{return _f .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_ccdfb :=[]_bcf .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_ggefc ,_aefaee :=_bcf .GetIndirect (_cecee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ad .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_cecee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_aefaee );for _aefaee {_ad .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ggefc );_dabffa ,_affcf :=_bcf .GetDict (_ggefc .PdfObject );if !_affcf {return _f .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_bdeda :=range _ccdfb {_ad .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bdeda );if _cecee .Get (_bdeda )!=nil {_ad .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _aeddd :=_dabffa .Get (_bdeda );_aeddd !=nil {_ad .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bdeda );_cecee .Set (_bdeda ,_aeddd );};};_ggefc ,_aefaee =_bcf .GetIndirect (_dabffa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ad .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dabffa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ad .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_cecee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bcagg ._caceg );_gggba .PdfObject =_cecee ;_dgbe ,_dafe :=_bcf .GetDict (_bcagg ._caceg .PdfObject );if !_dafe {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_cgged ,_dafe :=_bcf .GetArray (_dgbe .Get ("\u004b\u0069\u0064\u0073"));if !_dafe {return _f .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_cgged .Append (_gggba );_bcagg ._eedeb [_cecee ]=struct{}{};_gdaf ,_dafe :=_bcf .GetInt (_dgbe .Get ("\u0043\u006f\u0075n\u0074"));if !_dafe {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_gdaf =*_gdaf +1;_bcagg .addObject (_gggba );_dcgff :=_bcagg .addObjects (_cecee );if _dcgff !=nil {return _dcgff ;};return nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_fdff PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fdff ._cefc .getFontDescriptor (),nil ;};func _adebb (_baaa StdFontName )(pdfFontSimple ,error ){_fcage ,_egef :=_cb .NewStdFontByName (_baaa );if !_egef {return pdfFontSimple {},ErrFontNotSupported ;};_bgef :=_gefe (_fcage );return _bgef ,nil ;};

// ToInteger convert to an integer format.
func (_dfcdf *PdfColorCalGray )ToInteger (bits int )uint32 {_adeg :=_db .Pow (2,float64 (bits ))-1;return uint32 (_adeg *_dfcdf .Val ());};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bcf .PdfObject ;B _bcf .PdfObject ;};

// Subtype returns the font's "Subtype" field.
func (_dcae *PdfFont )Subtype ()string {_fcef :=_dcae .baseFields ()._ddcbb ;if _eecb ,_gafdb :=_dcae ._cefc .(*pdfFontType0 );_gafdb {_fcef =_fcef +"\u003a"+_eecb .DescendantFont .Subtype ();};return _fcef ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_dcff :=NewPdfAnnotation ();_cce :=&PdfAnnotationTrapNet {};_cce .PdfAnnotation =_dcff ;_dcff .SetContext (_cce );return _cce ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcf .PdfObject ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bcgg :=NewPdfAnnotation ();_eea :=&PdfAnnotationUnderline {};_eea .PdfAnnotation =_bcgg ;_eea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcgg .SetContext (_eea );return _eea ;};

// SetReason sets the `Reason` field of the signature.
func (_ffebg *PdfSignature )SetReason (reason string ){_ffebg .Reason =_bcf .MakeString (reason )};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_aegd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbee :=vals [0];if _gbee < 0.0||_gbee > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccgf :=vals [1];if _ccgf < 0.0||_ccgf > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abbab :=vals [2];if _abbab < 0.0||_abbab > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeedg :=NewPdfColorCalRGB (_gbee ,_ccgf ,_abbab );return _aeedg ,nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_egac *_bcf .PdfIndirectObject ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ffaed *PdfPage )GetContainingPdfObject ()_bcf .PdfObject {return _ffaed ._cbaab };func _eadfa (_bcaf _bcf .PdfObject )(*PdfFontDescriptor ,error ){_adbge :=&PdfFontDescriptor {};_bcaf =_bcf .ResolveReference (_bcaf );if _fdcg ,_adbff :=_bcaf .(*_bcf .PdfIndirectObject );_adbff {_adbge ._aaea =_fdcg ;_bcaf =_fdcg .PdfObject ;};_gacae ,_eadgc :=_bcf .GetDict (_bcaf );if !_eadgc {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bcaf );return nil ,_bcf .ErrTypeError ;};if _eged :=_gacae .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_eged !=nil {_adbge .FontName =_eged ;}else {_ad .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_daafe ,_ :=_bcf .GetName (_adbge .FontName );if _ggcdda :=_gacae .Get ("\u0054\u0079\u0070\u0065");_ggcdda !=nil {_egfa ,_bcfdb :=_ggcdda .(*_bcf .PdfObjectName );if !_bcfdb ||string (*_egfa )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ad .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ggcdda ,_daafe ,_adbge .FontName );};}else {_ad .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_daafe ,_adbge .FontName );};_adbge .FontFamily =_gacae .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_adbge .FontStretch =_gacae .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_adbge .FontWeight =_gacae .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_adbge .Flags =_gacae .Get ("\u0046\u006c\u0061g\u0073");_adbge .FontBBox =_gacae .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_adbge .ItalicAngle =_gacae .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_adbge .Ascent =_gacae .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_adbge .Descent =_gacae .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_adbge .Leading =_gacae .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_adbge .CapHeight =_gacae .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_adbge .XHeight =_gacae .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_adbge .StemV =_gacae .Get ("\u0053\u0074\u0065m\u0056");_adbge .StemH =_gacae .Get ("\u0053\u0074\u0065m\u0048");_adbge .AvgWidth =_gacae .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_adbge .MaxWidth =_gacae .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_adbge .MissingWidth =_gacae .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_adbge .FontFile =_gacae .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_adbge .FontFile2 =_gacae .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_adbge .FontFile3 =_gacae .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_adbge .CharSet =_gacae .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_adbge .Style =_gacae .Get ("\u0053\u0074\u0079l\u0065");_adbge .Lang =_gacae .Get ("\u004c\u0061\u006e\u0067");_adbge .FD =_gacae .Get ("\u0046\u0044");_adbge .CIDSet =_gacae .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _adbge .Flags !=nil {if _fbac ,_aaceb :=_bcf .GetIntVal (_adbge .Flags );_aaceb {_adbge ._gfdbc =_fbac ;};};if _adbge .MissingWidth !=nil {if _gcgd ,_ebagb :=_bcf .GetNumberAsFloat (_adbge .MissingWidth );_ebagb ==nil {_adbge ._ffaf =_gcgd ;};};if _adbge .FontFile !=nil {_degg ,_cfbgf :=_dcgbg (_adbge .FontFile );if _cfbgf !=nil {return _adbge ,_cfbgf ;};_ad .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_degg );_adbge .fontFile =_degg ;};if _adbge .FontFile2 !=nil {_ccbe ,_edcb :=_cb .NewFontFile2FromPdfObject (_adbge .FontFile2 );if _edcb !=nil {return _adbge ,_edcb ;};_ad .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ccbe .String ());_adbge ._cgdgc =&_ccbe ;};return _adbge ,nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dcfa *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aegg :=vals [0];if _aegg < 0.0||_aegg > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bddd :=vals [1];if _bddd < 0.0||_bddd > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgaf :=vals [2];if _fgaf < 0.0||_fgaf > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbaac :=vals [3];if _bbaac < 0.0||_bbaac > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egbf :=NewPdfColorDeviceCMYK (_aegg ,_bddd ,_fgaf ,_bbaac );return _egbf ,nil ;};func (_ebffe *PdfWriter )copyObjects (){_ccdad :=make (map[_bcf .PdfObject ]_bcf .PdfObject );_ecccf :=make ([]_bcf .PdfObject ,0,len (_ebffe ._bdgbd ));_fccdf :=make (map[_bcf .PdfObject ]struct{},len (_ebffe ._bdgbd ));_gbded :=make (map[_bcf .PdfObject ]struct{});for _ ,_gefcf :=range _ebffe ._bdgbd {_ggadf :=_ebffe .copyObject (_gefcf ,_ccdad ,_gbded ,false );if _ ,_ebgca :=_gbded [_gefcf ];_ebgca {continue ;};_ecccf =append (_ecccf ,_ggadf );_fccdf [_ggadf ]=struct{}{};};_ebffe ._bdgbd =_ecccf ;_ebffe ._ccecce =_fccdf ;_ebffe ._cacdb =_ebffe .copyObject (_ebffe ._cacdb ,_ccdad ,nil ,false ).(*_bcf .PdfIndirectObject );_ebffe ._ebdd =_ebffe .copyObject (_ebffe ._ebdd ,_ccdad ,nil ,false ).(*_bcf .PdfIndirectObject );if _ebffe ._gcdfe !=nil {_ebffe ._gcdfe =_ebffe .copyObject (_ebffe ._gcdfe ,_ccdad ,nil ,false ).(*_bcf .PdfIndirectObject );};if _ebffe ._aegee {_dabea :=make (map[_bcf .PdfObject ]int64 );for _eaeeb ,_dcddc :=range _ebffe ._cccff {if _ggeff ,_cbagf :=_ccdad [_eaeeb ];_cbagf {_dabea [_ggeff ]=_dcddc ;}else {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_ebffe ._cccff =_dabea ;};};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ecca *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_adeb :=&PdfAnnotation {};_adeb ._fab =_bcf .MakeIndirectObject (_bcf .MakeDict ());return _adeb ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bfce *PdfAnnotation )ToPdfObject ()_bcf .PdfObject {_dcde :=_bfce ._fab ;_ecec :=_dcde .PdfObject .(*_bcf .PdfObjectDictionary );_ecec .Clear ();_ecec .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0041\u006e\u006eo\u0074"));_ecec .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bfce .Rect );_ecec .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bfce .Contents );_ecec .SetIfNotNil ("\u0050",_bfce .P );_ecec .SetIfNotNil ("\u004e\u004d",_bfce .NM );_ecec .SetIfNotNil ("\u004d",_bfce .M );_ecec .SetIfNotNil ("\u0046",_bfce .F );_ecec .SetIfNotNil ("\u0041\u0050",_bfce .AP );_ecec .SetIfNotNil ("\u0041\u0053",_bfce .AS );_ecec .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bfce .Border );_ecec .SetIfNotNil ("\u0043",_bfce .C );_ecec .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bfce .StructParent );_ecec .SetIfNotNil ("\u004f\u0043",_bfce .OC );return _dcde ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_egcc *_bcf .PdfIndirectObject ;};

// RemovePage removes a page by number.
func (_efgfc *PdfAppender )RemovePage (pageNum int ){_adbc :=pageNum -1;_efgfc ._eeeg =append (_efgfc ._eeeg [0:_adbc ],_efgfc ._eeeg [pageNum :]...);};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bbebb *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bbebb .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bbebb ._feeec =acroForm ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_edbcc *pdfCIDFontType2 )baseFields ()*fontCommon {return &_edbcc .fontCommon };func (_dcbga *PdfReader )newPdfAnnotationUnderlineFromDict (_aafa *_bcf .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bbdf :=PdfAnnotationUnderline {};_edbe ,_bfbba :=_dcbga .newPdfAnnotationMarkupFromDict (_aafa );if _bfbba !=nil {return nil ,_bfbba ;};_bbdf .PdfAnnotationMarkup =_edbe ;_bbdf .QuadPoints =_aafa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbdf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_feag *PdfBorderStyle )ToPdfObject ()_bcf .PdfObject {_gbca :=_bcf .MakeDict ();if _feag ._eafd !=nil {if _cfff ,_bcb :=_feag ._eafd .(*_bcf .PdfIndirectObject );_bcb {_cfff .PdfObject =_gbca ;};};_gbca .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _feag .W !=nil {_gbca .Set ("\u0057",_bcf .MakeFloat (*_feag .W ));};if _feag .S !=nil {_gbca .Set ("\u0053",_bcf .MakeName (_feag .S .GetPdfName ()));};if _feag .D !=nil {_gbca .Set ("\u0044",_bcf .MakeArrayFromIntegers (*_feag .D ));};if _feag ._eafd !=nil {return _feag ._eafd ;};return _gbca ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bfdb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _ffgg []float64 ;for _gcae :=0;_gcae < _bfdb .GetNumComponents ();_gcae ++{_ffgg =append (_ffgg ,0.0,1.0);};return _ffgg ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_badg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_ecbb *PdfFont )CharcodesToStrings (charcodes []_dc .CharCode )([]string ,int ,int ){_bgead :=_ecbb .baseFields ();_cfac :=make ([]string ,0,len (charcodes ));_cfbd :=0;for _ ,_dbdcb :=range charcodes {if _bgead ._ecba !=nil {if _aagf ,_fgda :=_bgead ._ecba .CharcodeToUnicode (_df .CharCode (_dbdcb ));_fgda {_cfac =append (_cfac ,_aagf );continue ;};};_fbdce :=_ecbb .Encoder ();if _fbdce !=nil {if _ggage ,_ffge :=_fbdce .CharcodeToRune (_dbdcb );_ffge {_cfac =append (_cfac ,string (_ggage ));continue ;};};_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dbdcb ,charcodes ,_bgead .isCIDFont (),_ecbb ,_fbdce );_cfbd ++;_cfac =append (_cfac ,_df .MissingCodeString );};if _cfbd !=0{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cfbd ,_ecbb );};return _cfac ,len (_cfac ),_cfbd ;};

// ToPdfObject implements interface PdfModel.
func (_cffaa *PdfAnnotationSound )ToPdfObject ()_bcf .PdfObject {_cffaa .PdfAnnotation .ToPdfObject ();_eddd :=_cffaa ._fab ;_dgef :=_eddd .PdfObject .(*_bcf .PdfObjectDictionary );_cffaa .PdfAnnotationMarkup .appendToPdfDictionary (_dgef );_dgef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0053\u006f\u0075n\u0064"));_dgef .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_cffaa .Sound );_dgef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cffaa .Name );return _eddd ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_dfg :=NewPdfAction ();_bfa :=&PdfActionHide {};_bfa .PdfAction =_dfg ;_dfg .SetContext (_bfa );return _bfa ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_cec PdfModel ;Type _bcf .PdfObject ;S _bcf .PdfObject ;Next _bcf .PdfObject ;_ge *_bcf .PdfIndirectObject ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_caef :=PdfColorCalRGB {a ,b ,c };return &_caef ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ffebb *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ffebb ._fbgec .(*PdfTilingPattern );};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_acfbd *_bcf .PdfIndirectObject ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_fecea :=&XObjectImage {};_ebdbe :=&_bcf .PdfObjectStream {};_ebdbe .PdfObjectDictionary =_bcf .MakeDict ();_fecea ._dabeg =_ebdbe ;return _fecea ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cgdbf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_cgdbf .NumInputs {_ad .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_f .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _cgdbf ._eedcgg ==nil {_dbcg :=_cgdbf .processSamples ();if _dbcg !=nil {return nil ,_dbcg ;};};_egddc :=_cgdbf .Encode ;if _egddc ==nil {_egddc =[]float64 {};for _ddfd :=0;_ddfd < len (_cgdbf .Size );_ddfd ++{_egddc =append (_egddc ,0);_egddc =append (_egddc ,float64 (_cgdbf .Size [_ddfd ]-1));};};_fdac :=_cgdbf .Decode ;if _fdac ==nil {_fdac =_cgdbf .Range ;};_ccfg :=make ([]int ,len (x ));for _dacd :=0;_dacd < len (x );_dacd ++{_bdbge :=x [_dacd ];_ebbd :=_db .Min (_db .Max (_bdbge ,_cgdbf .Domain [2*_dacd ]),_cgdbf .Domain [2*_dacd +1]);_gdfbg :=_ceb .LinearInterpolate (_ebbd ,_cgdbf .Domain [2*_dacd ],_cgdbf .Domain [2*_dacd +1],_egddc [2*_dacd ],_egddc [2*_dacd +1]);_fddcf :=_db .Min (_db .Max (_gdfbg ,0),float64 (_cgdbf .Size [_dacd ]-1));_ggggf :=int (_db .Floor (_fddcf +0.5));if _ggggf < 0{_ggggf =0;}else if _ggggf > _cgdbf .Size [_dacd ]{_ggggf =_cgdbf .Size [_dacd ]-1;};_ccfg [_dacd ]=_ggggf ;};_dddag :=_ccfg [0];for _bbagg :=1;_bbagg < _cgdbf .NumInputs ;_bbagg ++{_fgbed :=_ccfg [_bbagg ];for _bggd :=0;_bggd < _bbagg ;_bggd ++{_fgbed *=_cgdbf .Size [_bggd ];};_dddag +=_fgbed ;};_dddag *=_cgdbf .NumOutputs ;var _bded []float64 ;for _adcgf :=0;_adcgf < _cgdbf .NumOutputs ;_adcgf ++{_fbfd :=_dddag +_adcgf ;if _fbfd >=len (_cgdbf ._eedcgg ){_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_eeage :=_cgdbf ._eedcgg [_fbfd ];_badaf :=_ceb .LinearInterpolate (float64 (_eeage ),0,_db .Pow (2,float64 (_cgdbf .BitsPerSample )),_fdac [2*_adcgf ],_fdac [2*_adcgf +1]);_cefg :=_db .Min (_db .Max (_badaf ,_cgdbf .Range [2*_adcgf ]),_cgdbf .Range [2*_adcgf +1]);_bded =append (_bded ,_cefg );};return _bded ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_eefe *PdfPageResources )GetXObjectFormByName (keyName _bcf .PdfObjectName )(*XObjectForm ,error ){_ccfce ,_edacf :=_eefe .GetXObjectByName (keyName );if _ccfce ==nil {return nil ,nil ;};if _edacf !=XObjectTypeForm {return nil ,_f .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_eedbe ,_gfdecg :=NewXObjectFormFromStream (_ccfce );if _gfdecg !=nil {return nil ,_gfdecg ;};return _eedbe ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dafgd *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_faec *PdfReader )newPdfPageFromDict (_bbgf *_bcf .PdfObjectDictionary )(*PdfPage ,error ){_cbaae :=NewPdfPage ();_cbaae ._dbafe =_bbgf ;_daeac :=*_bbgf ;_gfefb ,_fdafb :=_daeac .Get ("\u0054\u0079\u0070\u0065").(*_bcf .PdfObjectName );if !_fdafb {return nil ,_f .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_gfefb !="\u0050\u0061\u0067\u0065"{return nil ,_f .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _afbda :=_daeac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_afbda !=nil {_cbaae .Parent =_afbda ;};if _ecdef :=_daeac .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ecdef !=nil {_cbdfe ,_acaff :=_bcf .GetString (_ecdef );if !_acaff {return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_gbbc ,_fcbdb :=NewPdfDate (_cbdfe .Str ());if _fcbdb !=nil {return nil ,_fcbdb ;};_cbaae .LastModified =&_gbbc ;};if _cbebf :=_daeac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cbebf !=nil &&!_bcf .IsNullObject (_cbebf ){_fddcg ,_adefa :=_bcf .GetDict (_cbebf );if !_adefa {return nil ,_bc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cbebf );};var _eafdc error ;_cbaae .Resources ,_eafdc =NewPdfPageResourcesFromDict (_fddcg );if _eafdc !=nil {return nil ,_eafdc ;};}else {_fadfc ,_fbcg :=_cbaae .getParentResources ();if _fbcg !=nil {return nil ,_fbcg ;};if _fadfc ==nil {_fadfc =NewPdfPageResources ();};_cbaae .Resources =_fadfc ;};if _dede :=_daeac .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dede !=nil {_effd ,_bfeb :=_bcf .GetArray (_dede );if !_bfeb {return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _ddabe error ;_cbaae .MediaBox ,_ddabe =NewPdfRectangle (*_effd );if _ddabe !=nil {return nil ,_ddabe ;};};if _daffc :=_daeac .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_daffc !=nil {_effga ,_gbcabf :=_bcf .GetArray (_daffc );if !_gbcabf {return nil ,_f .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _baccc error ;_cbaae .CropBox ,_baccc =NewPdfRectangle (*_effga );if _baccc !=nil {return nil ,_baccc ;};};if _efggb :=_daeac .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_efggb !=nil {_egec ,_gbbb :=_bcf .GetArray (_efggb );if !_gbbb {return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fdefa error ;_cbaae .BleedBox ,_fdefa =NewPdfRectangle (*_egec );if _fdefa !=nil {return nil ,_fdefa ;};};if _afdbf :=_daeac .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_afdbf !=nil {_dgfe ,_caea :=_bcf .GetArray (_afdbf );if !_caea {return nil ,_f .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _efbc error ;_cbaae .TrimBox ,_efbc =NewPdfRectangle (*_dgfe );if _efbc !=nil {return nil ,_efbc ;};};if _effb :=_daeac .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_effb !=nil {_bgfdfa ,_daeg :=_bcf .GetArray (_effb );if !_daeg {return nil ,_f .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _aggc error ;_cbaae .ArtBox ,_aggc =NewPdfRectangle (*_bgfdfa );if _aggc !=nil {return nil ,_aggc ;};};if _ecafb :=_daeac .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_ecafb !=nil {_cbaae .BoxColorInfo =_ecafb ;};if _cbfbe :=_daeac .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cbfbe !=nil {_cbaae .Contents =_cbfbe ;};if _cefcb :=_daeac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cefcb !=nil {_ecgcd ,_dabaa :=_bcf .GetInt (_cefcb );if !_dabaa {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_ccdcg :=int64 (*_ecgcd );_cbaae .Rotate =&_ccdcg ;};if _eggb :=_daeac .Get ("\u0047\u0072\u006fu\u0070");_eggb !=nil {_cbaae .Group =_eggb ;};if _ceaeb :=_daeac .Get ("\u0054\u0068\u0075m\u0062");_ceaeb !=nil {_cbaae .Thumb =_ceaeb ;};if _bgfc :=_daeac .Get ("\u0042");_bgfc !=nil {_cbaae .B =_bgfc ;};if _ceaf :=_daeac .Get ("\u0044\u0075\u0072");_ceaf !=nil {_cbaae .Dur =_ceaf ;};if _bfcdb :=_daeac .Get ("\u0054\u0072\u0061n\u0073");_bfcdb !=nil {_cbaae .Trans =_bfcdb ;};if _gega :=_daeac .Get ("\u0041\u0041");_gega !=nil {_cbaae .AA =_gega ;};if _dadg :=_daeac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dadg !=nil {_cbaae .Metadata =_dadg ;};if _defac :=_daeac .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_defac !=nil {_cbaae .PieceInfo =_defac ;};if _fcege :=_daeac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fcege !=nil {_cbaae .StructParents =_fcege ;};if _gcbd :=_daeac .Get ("\u0049\u0044");_gcbd !=nil {_cbaae .ID =_gcbd ;};if _defbf :=_daeac .Get ("\u0050\u005a");_defbf !=nil {_cbaae .PZ =_defbf ;};if _febdd :=_daeac .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_febdd !=nil {_cbaae .SeparationInfo =_febdd ;};if _cgggd :=_daeac .Get ("\u0054\u0061\u0062\u0073");_cgggd !=nil {_cbaae .Tabs =_cgggd ;};if _edbfg :=_daeac .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_edbfg !=nil {_cbaae .TemplateInstantiated =_edbfg ;};if _faecb :=_daeac .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_faecb !=nil {_cbaae .PresSteps =_faecb ;};if _debbc :=_daeac .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_debbc !=nil {_cbaae .UserUnit =_debbc ;};if _bfdca :=_daeac .Get ("\u0056\u0050");_bfdca !=nil {_cbaae .VP =_bfdca ;};if _fgdef :=_daeac .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fgdef !=nil {_cbaae .Annots =_fgdef ;};_cbaae ._fccg =_faec ;return _cbaae ,nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bcf .PdfObjectInteger ;BitsPerComponent *_bcf .PdfObjectInteger ;VerticesPerRow *_bcf .PdfObjectInteger ;Decode *_bcf .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ebaed :=&PdfOutlineItem {_dcdea :_bcf .MakeIndirectObject (_bcf .MakeDict ())};_ebaed ._badg =_ebaed ;return _ebaed ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dfafbb *_bcf .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_dgf *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_gegbg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gegbg .AlternateSpace ==nil {return nil ,_f .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _gegbg .AlternateSpace .ColorToRGB (color );};

// WriteString outputs the object as it is to be written to file.
func (_fadg *pdfSignDictionary )WriteString ()string {_fadg ._babbb =0;_fadg ._bagba =0;_fadg ._eebfc =0;_fadg ._bcfgbd =0;_gagb :=_ce .NewBuffer (nil );_gagb .WriteString ("\u003c\u003c");for _ ,_addc :=range _fadg .Keys (){_geabc :=_fadg .Get (_addc );switch _addc {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gagb .WriteString (_addc .WriteString ());_gagb .WriteString ("\u0020");_fadg ._eebfc =_gagb .Len ();_gagb .WriteString (_geabc .WriteString ());_gagb .WriteString ("\u0020");_fadg ._bcfgbd =_gagb .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gagb .WriteString (_addc .WriteString ());_gagb .WriteString ("\u0020");_fadg ._babbb =_gagb .Len ();_gagb .WriteString (_geabc .WriteString ());_gagb .WriteString ("\u0020");_fadg ._bagba =_gagb .Len ()-1;default:_gagb .WriteString (_addc .WriteString ());_gagb .WriteString ("\u0020");_gagb .WriteString (_geabc .WriteString ());};};_gagb .WriteString ("\u003e\u003e");return _gagb .String ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_acgc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _acgc .UnderlyingCS ==nil {return nil ,_f .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _acgc .UnderlyingCS .ColorFromFloats (vals );};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_aeeff :=PdfWriter {};_aeeff ._ccecce =map[_bcf .PdfObject ]struct{}{};_aeeff ._bdgbd =[]_bcf .PdfObject {};_aeeff ._ebaac =map[_bcf .PdfObject ][]*_bcf .PdfObjectDictionary {};_aeeff ._gfeb =map[_bcf .PdfObject ]struct{}{};_aeeff ._aaffa =1;_aeeff ._gacbg =3;_gbbbf :=_bcf .MakeDict ();_ecfa :=[]struct{_ddeba _bcf .PdfObjectName ;_egccc string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bdeeg ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_fgccd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_deea ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_bbacd ()},{"\u0054\u0069\u0074l\u0065",_fdedf ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bfbc ()}};for _ ,_geccb :=range _ecfa {if _geccb ._egccc !=""{_gbbbf .Set (_geccb ._ddeba ,_bcf .MakeString (_geccb ._egccc ));};};if _cecb :=_fdbac ();!_cecb .IsZero (){if _dcdga ,_bbbebc :=NewPdfDateFromTime (_cecb );_bbbebc ==nil {_gbbbf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dcdga .ToPdfObject ());};};if _debca :=_bacdd ();!_debca .IsZero (){if _egead ,_gedf :=NewPdfDateFromTime (_debca );_gedf ==nil {_gbbbf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_egead .ToPdfObject ());};};_aefbe :=_bcf .PdfIndirectObject {};_aefbe .PdfObject =_gbbbf ;_aeeff ._cacdb =&_aefbe ;_aeeff .addObject (&_aefbe );_feadg :=_bcf .PdfIndirectObject {};_dcfca :=_bcf .MakeDict ();_dcfca .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_feadg .PdfObject =_dcfca ;_aeeff ._ebdd =&_feadg ;_aeeff .addObject (_aeeff ._ebdd );_ddeeg :=_bcf .PdfIndirectObject {};_dadadc :=_bcf .MakeDict ();_dadadc .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0050\u0061\u0067e\u0073"));_cabfc :=_bcf .PdfObjectArray {};_dadadc .Set ("\u004b\u0069\u0064\u0073",&_cabfc );_dadadc .Set ("\u0043\u006f\u0075n\u0074",_bcf .MakeInteger (0));_ddeeg .PdfObject =_dadadc ;_aeeff ._caceg =&_ddeeg ;_aeeff ._eedeb =map[_bcf .PdfObject ]struct{}{};_aeeff .addObject (_aeeff ._caceg );_dcfca .Set ("\u0050\u0061\u0067e\u0073",&_ddeeg );_aeeff ._feagf =_dcfca ;_ad .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_feadg );return _aeeff ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_egegf :_bcf .MakeIndirectObject (_bcf .MakeDict ())}};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bcf .PdfObjectString ;Q *_bcf .PdfObjectInteger ;DS *_bcf .PdfObjectString ;RV _bcf .PdfObject ;MaxLen *_bcf .PdfObjectInteger ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_caffac *XObjectImage )ToImage ()(*Image ,error ){_bgdacc :=&Image {};if _caffac .Height ==nil {return nil ,_f .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bgdacc .Height =*_caffac .Height ;if _caffac .Width ==nil {return nil ,_f .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bgdacc .Width =*_caffac .Width ;if _caffac .BitsPerComponent ==nil {return nil ,_f .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_bgdacc .BitsPerComponent =*_caffac .BitsPerComponent ;_bgdacc .ColorComponents =_caffac .ColorSpace .GetNumComponents ();_caffac ._dabeg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcf .MakeInteger (int64 (_bgdacc .ColorComponents )));_feabd ,_decba :=_bcf .DecodeStream (_caffac ._dabeg );if _decba !=nil {return nil ,_decba ;};_bgdacc .Data =_feabd ;if _caffac .Decode !=nil {_added ,_bgca :=_caffac .Decode .(*_bcf .PdfObjectArray );if !_bgca {_ad .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_f .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_fgcde ,_ebgga :=_added .ToFloat64Array ();if _ebgga !=nil {return nil ,_ebgga ;};_bgdacc ._afdd =_fgcde ;};return _bgdacc ,nil ;};type pdfFontSimple struct{fontCommon ;_bebbf *_bcf .PdfIndirectObject ;_adbbb map[_dc .CharCode ]float64 ;_gcdgc _dc .TextEncoder ;_efgfcd _dc .TextEncoder ;_dcge *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bcf .PdfObject ;LastChar _bcf .PdfObject ;Widths _bcf .PdfObject ;Encoding _bcf .PdfObject ;_agcc map[rune ]_cb .CharMetrics ;};func (_ead *PdfReader )newPdfActionURIFromDict (_ccdg *_bcf .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_ccdg .Get ("\u0055\u0052\u0049"),IsMap :_ccdg .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_accd *PdfAnnotationHighlight )ToPdfObject ()_bcf .PdfObject {_accd .PdfAnnotation .ToPdfObject ();_bbeb :=_accd ._fab ;_gdggc :=_bbeb .PdfObject .(*_bcf .PdfObjectDictionary );_accd .PdfAnnotationMarkup .appendToPdfDictionary (_gdggc );_gdggc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_gdggc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_accd .QuadPoints );return _bbeb ;};

// HasXObjectByName checks if has XObject resource by name.
func (_bcacf *PdfPage )HasXObjectByName (name _bcf .PdfObjectName )bool {_abbd ,_dfgdd :=_bcacf .Resources .XObject .(*_bcf .PdfObjectDictionary );if !_dfgdd {return false ;};if _fbffc :=_abbd .Get (name );_fbffc !=nil {return true ;};return false ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bbgd *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ad .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ad .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_ad .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ad .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_cbfd ,_bedfg :=_ceb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bgdfb ,img ._afdd );if _bedfg !=nil {return Image {},_bedfg ;};_cdfbc ,_bedfg :=_ceb .NRGBAConverter .Convert (_cbfd );if _bedfg !=nil {return Image {},_bedfg ;};return _edfe (_cdfbc .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggce *PdfAnnotationStrikeOut )ToPdfObject ()_bcf .PdfObject {_ggce .PdfAnnotation .ToPdfObject ();_fae :=_ggce ._fab ;_fad :=_fae .PdfObject .(*_bcf .PdfObjectDictionary );_ggce .PdfAnnotationMarkup .appendToPdfDictionary (_fad );_fad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_fad .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ggce .QuadPoints );return _fae ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bcf .PdfObjectArray ;ExtGState _bcf .PdfObject ;};func _caec (_fcag _bcf .PdfObject )(*PdfColorspaceCalRGB ,error ){_dbbe :=NewPdfColorspaceCalRGB ();if _fffd ,_efgbg :=_fcag .(*_bcf .PdfIndirectObject );_efgbg {_dbbe ._bccdd =_fffd ;};_fcag =_bcf .TraceToDirectObject (_fcag );_bfee ,_gdbd :=_fcag .(*_bcf .PdfObjectArray );if !_gdbd {return nil ,_bc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfee .Len ()!=2{return nil ,_bc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fcag =_bcf .TraceToDirectObject (_bfee .Get (0));_fbga ,_gdbd :=_fcag .(*_bcf .PdfObjectName );if !_gdbd {return nil ,_bc .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_fbga !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_bc .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fcag =_bcf .TraceToDirectObject (_bfee .Get (1));_bafe ,_gdbd :=_fcag .(*_bcf .PdfObjectDictionary );if !_gdbd {return nil ,_bc .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_fcag =_bafe .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fcag =_bcf .TraceToDirectObject (_fcag );_badc ,_gdbd :=_fcag .(*_bcf .PdfObjectArray );if !_gdbd {return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _badc .Len ()!=3{return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bbad ,_cga :=_badc .GetAsFloat64Slice ();if _cga !=nil {return nil ,_cga ;};_dbbe .WhitePoint =_bbad ;_fcag =_bafe .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fcag !=nil {_fcag =_bcf .TraceToDirectObject (_fcag );_afbd ,_bfffa :=_fcag .(*_bcf .PdfObjectArray );if !_bfffa {return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _afbd .Len ()!=3{return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_acecb ,_egafg :=_afbd .GetAsFloat64Slice ();if _egafg !=nil {return nil ,_egafg ;};_dbbe .BlackPoint =_acecb ;};_fcag =_bafe .Get ("\u0047\u0061\u006dm\u0061");if _fcag !=nil {_fcag =_bcf .TraceToDirectObject (_fcag );_ceea ,_ccfe :=_fcag .(*_bcf .PdfObjectArray );if !_ccfe {return nil ,_bc .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _ceea .Len ()!=3{return nil ,_bc .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_bgcf ,_adad :=_ceea .GetAsFloat64Slice ();if _adad !=nil {return nil ,_adad ;};_dbbe .Gamma =_bgcf ;};_fcag =_bafe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fcag !=nil {_fcag =_bcf .TraceToDirectObject (_fcag );_ggbe ,_dfdf :=_fcag .(*_bcf .PdfObjectArray );if !_dfdf {return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _ggbe .Len ()!=9{_ad .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_ggbe .String ());return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_dcebb ,_fedf :=_ggbe .GetAsFloat64Slice ();if _fedf !=nil {return nil ,_fedf ;};_dbbe .Matrix =_dcebb ;};return _dbbe ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fbef *PdfReader )GetPageLabels ()(_bcf .PdfObject ,error ){_fefgb :=_bcf .ResolveReference (_fbef ._fbcgg .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _fefgb ==nil {return nil ,nil ;};if !_fbef ._eddddc {_fdbc :=_fbef .traverseObjectData (_fefgb );if _fdbc !=nil {return nil ,_fdbc ;};};return _fefgb ,nil ;};func (_geef *PdfReader )newPdfActionJavaScriptFromDict (_ddc *_bcf .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_ddc .Get ("\u004a\u0053")},nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_daab *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_ggg *PdfReader )newPdfActionGoTo3DViewFromDict (_bbed *_bcf .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bbed .Get ("\u0054\u0041"),V :_bbed .Get ("\u0056")},nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fceb :=NewPdfAnnotation ();_daa :=&PdfAnnotationFreeText {};_daa .PdfAnnotation =_fceb ;_daa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fceb .SetContext (_daa );return _daa ;};

// ToPdfObject implements interface PdfModel.
func (_ccb *PdfAnnotationMovie )ToPdfObject ()_bcf .PdfObject {_ccb .PdfAnnotation .ToPdfObject ();_bbfd :=_ccb ._fab ;_ddgb :=_bbfd .PdfObject .(*_bcf .PdfObjectDictionary );_ddgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u004d\u006f\u0076i\u0065"));_ddgb .SetIfNotNil ("\u0054",_ccb .T );_ddgb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ccb .Movie );_ddgb .SetIfNotNil ("\u0041",_ccb .A );return _bbfd ;};

// C returns the value of the C component of the color.
func (_cbdb *PdfColorCalRGB )C ()float64 {return float64 (_cbdb [2])};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ecgef *PdfOutlineTreeNode )ToPdfObject ()_bcf .PdfObject {return _ecgef .GetContext ().ToPdfObject ();};func (_bada *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// AddPages adds pages to be appended to the end of the source PDF.
func (_fef *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ggcd :=range pages {_ggcd =_ggcd .Duplicate ();_dcef (_ggcd );_fef ._eeeg =append (_fef ._eeeg ,_ggcd );};return ;};func _befd (_agbgc *_bcf .PdfObjectDictionary )(*PdfShadingPattern ,error ){_egbfa :=&PdfShadingPattern {};_bgfda :=_agbgc .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _bgfda ==nil {_ad .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_feed ,_fafdb :=_bdcde (_bgfda );if _fafdb !=nil {_ad .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fafdb );return nil ,_fafdb ;};_egbfa .Shading =_feed ;if _ccedf :=_agbgc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ccedf !=nil {_efgbd ,_ecfgd :=_ccedf .(*_bcf .PdfObjectArray );if !_ecfgd {_ad .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccedf );return nil ,_bcf .ErrTypeError ;};_egbfa .Matrix =_efgbd ;};if _cdcce :=_agbgc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cdcce !=nil {_egbfa .ExtGState =_cdcce ;};return _egbfa ,nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_dcag :=NewPdfAnnotation ();_fcb :=&PdfAnnotationStrikeOut {};_fcb .PdfAnnotation =_dcag ;_fcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcag .SetContext (_fcb );return _fcb ;};

// ToInteger convert to an integer format.
func (_aeae *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ccaac :=_db .Pow (2,float64 (bits ))-1;return uint32 (_ccaac *_aeae .Val ());};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcf .PdfObject ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_edega *_bcf .PdfObjectDictionary ;_bccdd *_bcf .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_bgd *PdfActionMovie )ToPdfObject ()_bcf .PdfObject {_bgd .PdfAction .ToPdfObject ();_ecf :=_bgd ._ge ;_gcg :=_ecf .PdfObject .(*_bcf .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeMovie )));_gcg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_bgd .Annotation );_gcg .SetIfNotNil ("\u0054",_bgd .T );_gcg .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_bgd .Operation );return _ecf ;};func (_bega *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ReplacePage replaces the original page to a new page.
func (_cbd *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_cbg :=pageNum -1;for _eaegg :=range _cbd ._eeeg {if _eaegg ==_cbg {_cagba :=page .Duplicate ();_dcef (_cagba );_cbd ._eeeg [_eaegg ]=_cagba ;};};};

// ToPdfObject implements interface PdfModel.
func (_ffdad *PdfAnnotationPolyLine )ToPdfObject ()_bcf .PdfObject {_ffdad .PdfAnnotation .ToPdfObject ();_acc :=_ffdad ._fab ;_ceeg :=_acc .PdfObject .(*_bcf .PdfObjectDictionary );_ffdad .PdfAnnotationMarkup .appendToPdfDictionary (_ceeg );_ceeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_ceeg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ffdad .Vertices );_ceeg .SetIfNotNil ("\u004c\u0045",_ffdad .LE );_ceeg .SetIfNotNil ("\u0042\u0053",_ffdad .BS );_ceeg .SetIfNotNil ("\u0049\u0043",_ffdad .IC );_ceeg .SetIfNotNil ("\u0042\u0045",_ffdad .BE );_ceeg .SetIfNotNil ("\u0049\u0054",_ffdad .IT );_ceeg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ffdad .Measure );return _acc ;};func (_fbbg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_gced *_bcf .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gfda :=PdfAnnotationFileAttachment {};_cda ,_aff :=_fbbg .newPdfAnnotationMarkupFromDict (_gced );if _aff !=nil {return nil ,_aff ;};_gfda .PdfAnnotationMarkup =_cda ;_gfda .FS =_gced .Get ("\u0046\u0053");_gfda .Name =_gced .Get ("\u004e\u0061\u006d\u0065");return &_gfda ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fcade *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_cgd :=0.3*_fcade .R ()+0.59*_fcade .G ()+0.11*_fcade .B ();_cgd =_db .Min (_db .Max (_cgd ,0.0),1.0);return NewPdfColorDeviceGray (_cgd );};func (_fbbbf *PdfReader )newPdfSignatureFromIndirect (_abcag *_bcf .PdfIndirectObject )(*PdfSignature ,error ){_dfaac ,_ddafd :=_abcag .PdfObject .(*_bcf .PdfObjectDictionary );if !_ddafd {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _dbged ,_cebec :=_fbbbf ._adaff .GetModelFromPrimitive (_abcag ).(*PdfSignature );_cebec {return _dbged ,nil ;};_fdfeeg :=&PdfSignature {};_fdfeeg ._gdgcbf =_abcag ;_fdfeeg .Type ,_ =_bcf .GetName (_dfaac .Get ("\u0054\u0079\u0070\u0065"));_fdfeeg .Filter ,_ddafd =_bcf .GetName (_dfaac .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_ddafd {_ad .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_fdfeeg .SubFilter ,_ =_bcf .GetName (_dfaac .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_fdfeeg .Contents ,_ddafd =_bcf .GetString (_dfaac .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_ddafd {_ad .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_fdfeeg .Cert =_dfaac .Get ("\u0043\u0065\u0072\u0074");_fdfeeg .ByteRange ,_ =_bcf .GetArray (_dfaac .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_fdfeeg .Reference ,_ =_bcf .GetArray (_dfaac .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_fdfeeg .Changes ,_ =_bcf .GetArray (_dfaac .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_fdfeeg .Name ,_ =_bcf .GetString (_dfaac .Get ("\u004e\u0061\u006d\u0065"));_fdfeeg .M ,_ =_bcf .GetString (_dfaac .Get ("\u004d"));_fdfeeg .Location ,_ =_bcf .GetString (_dfaac .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_fdfeeg .Reason ,_ =_bcf .GetString (_dfaac .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_fdfeeg .ContactInfo ,_ =_bcf .GetString (_dfaac .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_fdfeeg .R ,_ =_bcf .GetInt (_dfaac .Get ("\u0052"));_fdfeeg .V ,_ =_bcf .GetInt (_dfaac .Get ("\u0056"));_fdfeeg .PropBuild ,_ =_bcf .GetDict (_dfaac .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_fdfeeg .PropAuthTime ,_ =_bcf .GetInt (_dfaac .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_fdfeeg .PropAuthType ,_ =_bcf .GetName (_dfaac .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _fdfeeg ,nil ;};

// PartialName returns the partial name of the field.
func (_dcbe *PdfField )PartialName ()string {_ebbf :="";if _dcbe .T !=nil {_ebbf =_dcbe .T .Decoded ();}else {_ad .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _ebbf ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bebg *Image )ToJBIG2Image ()(*_bcf .JBIG2Image ,error ){_agcg ,_aggb :=_bebg .ToGoImage ();if _aggb !=nil {return nil ,_aggb ;};return _bcf .GoImageToJBIG2 (_agcg ,_bcf .JB2ImageAutoThreshold );};func (_feab *PdfReader )buildOutlineTree (_bccfb _bcf .PdfObject ,_fdaeac *PdfOutlineTreeNode ,_adfba *PdfOutlineTreeNode ,_fgcdb map[_bcf .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _fgcdb ==nil {_fgcdb =map[_bcf .PdfObject ]struct{}{};};_fgcdb [_bccfb ]=struct{}{};_fggfc ,_eade :=_bccfb .(*_bcf .PdfIndirectObject );if !_eade {return nil ,nil ,_bc .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bccfb );};_cedg ,_fccff :=_fggfc .PdfObject .(*_bcf .PdfObjectDictionary );if !_fccff {return nil ,nil ,_f .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ad .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_cedg ,_fggfc ,_fggfc );if _ceggc :=_cedg .Get ("\u0054\u0069\u0074l\u0065");_ceggc !=nil {_eccfc ,_fgff :=_feab .newPdfOutlineItemFromIndirectObject (_fggfc );if _fgff !=nil {return nil ,nil ,_fgff ;};_eccfc .Parent =_fdaeac ;_eccfc .Prev =_adfba ;_bgbba :=_bcf .ResolveReference (_cedg .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_gdaef :=_fgcdb [_bgbba ];_bgbba !=nil &&_bgbba !=_fggfc &&!_gdaef {if !_bcf .IsNullObject (_bgbba ){_bbefc ,_fdcgg ,_deafe :=_feab .buildOutlineTree (_bgbba ,&_eccfc .PdfOutlineTreeNode ,nil ,_fgcdb );if _deafe !=nil {_ad .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_deafe );}else {_eccfc .First =_bbefc ;_eccfc .Last =_fdcgg ;};};};_gbagdf :=_bcf .ResolveReference (_cedg .Get ("\u004e\u0065\u0078\u0074"));if _ ,_gcbb :=_fgcdb [_gbagdf ];_gbagdf !=nil &&_gbagdf !=_fggfc &&!_gcbb {if !_bcf .IsNullObject (_gbagdf ){_cgega ,_eeffc ,_adcd :=_feab .buildOutlineTree (_gbagdf ,_fdaeac ,&_eccfc .PdfOutlineTreeNode ,_fgcdb );if _adcd !=nil {_ad .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_adcd );}else {_eccfc .Next =_cgega ;return &_eccfc .PdfOutlineTreeNode ,_eeffc ,nil ;};};};return &_eccfc .PdfOutlineTreeNode ,&_eccfc .PdfOutlineTreeNode ,nil ;};_egdeb ,_gdca :=_bceb (_fggfc );if _gdca !=nil {return nil ,nil ,_gdca ;};_egdeb .Parent =_fdaeac ;if _fdefd :=_cedg .Get ("\u0046\u0069\u0072s\u0074");_fdefd !=nil {_fdefd =_bcf .ResolveReference (_fdefd );_affgca :=_bcf .TraceToDirectObject (_fdefd );if _ ,_efefc :=_affgca .(*_bcf .PdfObjectNull );!_efefc &&_affgca !=nil {_gddgbg ,_gcbab ,_cgeef :=_feab .buildOutlineTree (_fdefd ,&_egdeb .PdfOutlineTreeNode ,nil ,_fgcdb );if _cgeef !=nil {_ad .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_cgeef );}else {_egdeb .First =_gddgbg ;_egdeb .Last =_gcbab ;};};};return &_egdeb .PdfOutlineTreeNode ,&_egdeb .PdfOutlineTreeNode ,nil ;};

// Val returns the value of the color.
func (_fdaf *PdfColorCalGray )Val ()float64 {return float64 (*_fdaf )};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_cb .CharMetrics ;

// ToPdfObject returns the PDF representation of the shading pattern.
func (_badbb *PdfShadingPattern )ToPdfObject ()_bcf .PdfObject {_badbb .PdfPattern .ToPdfObject ();_ggbb :=_badbb .getDict ();if _badbb .Shading !=nil {_ggbb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_badbb .Shading .ToPdfObject ());};if _badbb .Matrix !=nil {_ggbb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_badbb .Matrix );};if _badbb .ExtGState !=nil {_ggbb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_badbb .ExtGState );};return _badbb ._gebbd ;};

// Items returns all children outline items.
func (_baad *OutlineItem )Items ()[]*OutlineItem {return _baad .Entries };

// G returns the value of the green component of the color.
func (_dafg *PdfColorDeviceRGB )G ()float64 {return float64 (_dafg [1])};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cgbdg *PdfPageResources )GetShadingByName (keyName _bcf .PdfObjectName )(*PdfShading ,bool ){if _cgbdg .Shading ==nil {return nil ,false ;};_gffgg ,_daeaba :=_bcf .TraceToDirectObject (_cgbdg .Shading ).(*_bcf .PdfObjectDictionary );if !_daeaba {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgbdg .Shading );return nil ,false ;};if _fgfbc :=_gffgg .Get (keyName );_fgfbc !=nil {_adgab ,_efbb :=_bdcde (_fgfbc );if _efbb !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_efbb );return nil ,false ;};return _adgab ,true ;};return nil ,false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acaa *PdfShadingType5 )ToPdfObject ()_bcf .PdfObject {_acaa .PdfShading .ToPdfObject ();_ggab ,_bcbfc :=_acaa .getShadingDict ();if _bcbfc !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _acaa .BitsPerCoordinate !=nil {_ggab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_acaa .BitsPerCoordinate );};if _acaa .BitsPerComponent !=nil {_ggab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_acaa .BitsPerComponent );};if _acaa .VerticesPerRow !=nil {_ggab .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_acaa .VerticesPerRow );};if _acaa .Decode !=nil {_ggab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_acaa .Decode );};if _acaa .Function !=nil {if len (_acaa .Function )==1{_ggab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acaa .Function [0].ToPdfObject ());}else {_afgac :=_bcf .MakeArray ();for _ ,_babgd :=range _acaa .Function {_afgac .Append (_babgd .ToPdfObject ());};_ggab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afgac );};};return _acaa ._aeddc ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_fgba :=PdfDate {};_bcead :=_bbfg .FindAllStringSubmatch (dateStr ,1);if len (_bcead )< 1{return _fgba ,_bc .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_bcead [0])!=10{return _fgba ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_fgba ._gedge ,_ =_bed .ParseInt (_bcead [0][1],10,32);_fgba ._gggdd ,_ =_bed .ParseInt (_bcead [0][2],10,32);_fgba ._efacd ,_ =_bed .ParseInt (_bcead [0][3],10,32);_fgba ._dgcgc ,_ =_bed .ParseInt (_bcead [0][4],10,32);_fgba ._efcac ,_ =_bed .ParseInt (_bcead [0][5],10,32);_fgba ._bfaf ,_ =_bed .ParseInt (_bcead [0][6],10,32);if len (_bcead [0][7])> 0{_fgba ._edgdg =_bcead [0][7][0];}else {_fgba ._edgdg ='+';};if len (_bcead [0][8])> 0{_fgba ._debef ,_ =_bed .ParseInt (_bcead [0][8],10,32);}else {_fgba ._debef =0;};if len (_bcead [0][9])> 0{_fgba ._cfggf ,_ =_bed .ParseInt (_bcead [0][9],10,32);}else {_fgba ._cfggf =0;};return _fgba ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_cb .StdFontName ;

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_ebgb *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfgf ,_acbb :=_bcf .GetNumbersAsFloat (objects );if _acbb !=nil {return nil ,_acbb ;};return _ebgb .ColorFromFloats (_gfgf );};var (ErrRequiredAttributeMissing =_f .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_f .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_eacc =_f .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_f .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_f .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_gcb .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bcf .ErrNotSupported );ErrType1CFontNotSupported =_gcb .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bcf .ErrNotSupported );ErrType3FontNotSupported =_gcb .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bcf .ErrNotSupported );ErrTTCmapNotSupported =_gcb .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bcf .ErrNotSupported );ErrSignNotEnoughSpace =_gcb .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073"););

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_cefc pdfFont };func (_fegg *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_acea *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bcf .PdfObjectArray ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_fcdgb *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_feac :=_fcdgb .GetContentStreamObjs ();wrapContents =wrapContents &&len (_feac )> 0;_cfbda :=_bcf .NewFlateEncoder ();_edff :=_bcf .MakeArray ();if wrapContents {_befbg ,_ffeeg :=_bcf .MakeStream ([]byte ("\u0071\u000a"),_cfbda );if _ffeeg !=nil {return _ffeeg ;};_edff .Append (_befbg );};_edff .Append (_feac ...);if wrapContents {_ebfag ,_dgfbe :=_bcf .MakeStream ([]byte ("\u000a\u0051\u000a"),_cfbda );if _dgfbe !=nil {return _dgfbe ;};_edff .Append (_ebfag );};_dfgea ,_bgdad :=_bcf .MakeStream (cs ,_cfbda );if _bgdad !=nil {return _bgdad ;};_edff .Append (_dfgea );_fcdgb .Contents =_edff ;return nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bcf .PdfObject ;ColorSpace _bcf .PdfObject ;Pattern _bcf .PdfObject ;Shading _bcf .PdfObject ;XObject _bcf .PdfObject ;Font _bcf .PdfObject ;ProcSet _bcf .PdfObject ;Properties _bcf .PdfObject ;_agfbd *_bcf .PdfObjectDictionary ;_aggdc *PdfPageResourcesColorspaces ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_efag *pdfCIDFontType0 )ToPdfObject ()_bcf .PdfObject {return _bcf .MakeNull ()};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fefd *PdfOutlineTreeNode )GetContainingPdfObject ()_bcf .PdfObject {return _fefd .GetContext ().GetContainingPdfObject ();};

// Val returns the color value.
func (_bcfaa *PdfColorDeviceGray )Val ()float64 {return float64 (*_bcfaa )};

// ToPdfObject returns the PDF representation of the function.
func (_gfbcf *PdfFunctionType4 )ToPdfObject ()_bcf .PdfObject {_bfag :=_gfbcf ._bfbbd ;if _bfag ==nil {_gfbcf ._bfbbd =&_bcf .PdfObjectStream {};_bfag =_gfbcf ._bfbbd ;};_ceab :=_bcf .MakeDict ();_ceab .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcf .MakeInteger (4));_cbgf :=&_bcf .PdfObjectArray {};for _ ,_ebbdb :=range _gfbcf .Domain {_cbgf .Append (_bcf .MakeFloat (_ebbdb ));};_ceab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cbgf );_cfafc :=&_bcf .PdfObjectArray {};for _ ,_eace :=range _gfbcf .Range {_cfafc .Append (_bcf .MakeFloat (_eace ));};_ceab .Set ("\u0052\u0061\u006eg\u0065",_cfafc );if _gfbcf ._fbeae ==nil &&_gfbcf .Program !=nil {_gfbcf ._fbeae =[]byte (_gfbcf .Program .String ());};_ceab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcf .MakeInteger (int64 (len (_gfbcf ._fbeae ))));_bfag .Stream =_gfbcf ._fbeae ;_bfag .PdfObjectDictionary =_ceab ;return _bfag ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_fcgga *PdfColorspaceLab )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fffc ,_fdegc :=_bcf .GetNumbersAsFloat (objects );if _fdegc !=nil {return nil ,_fdegc ;};return _fcgga .ColorFromFloats (_fffc );};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ea :=NewPdfAction ();_bedf :=&PdfActionGoTo3DView {};_bedf .PdfAction =_ea ;_ea .SetContext (_bedf );return _bedf ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_cadc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_agfa *PdfReader )GetIndirectObjectByNumber (number int )(_bcf .PdfObject ,error ){_gggbdg ,_afgaf :=_agfa ._eagdg .LookupByNumber (number );return _gggbdg ,_afgaf ;};func _egea (_bbbab _bcf .PdfObject ,_affef *fontCommon )(*_df .CMap ,error ){_cgae ,_eeedc :=_bcf .GetStream (_bbbab );if !_eeedc {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_bbbab );return nil ,_bcf .ErrTypeError ;};_bcedf ,_daebg :=_bcf .DecodeStream (_cgae );if _daebg !=nil {return nil ,_daebg ;};_dcbf ,_daebg :=_df .LoadCmapFromData (_bcedf ,!_affef .isCIDFont ());if _daebg !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_cgae .ObjectNumber ,_daebg );};return _dcbf ,_daebg ;};

// String returns a string that describes `base`.
func (_badef fontCommon )String ()string {return _bc .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_badef .coreString ());};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_aafbb *PdfReader )Inspect ()(map[string ]int ,error ){return _aafbb ._eagdg .Inspect ()};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_babg pdfFontSimple )GetCharMetrics (code _dc .CharCode )(_cb .CharMetrics ,bool ){if _agffe ,_bfed :=_babg ._adbbb [code ];_bfed {return _cb .CharMetrics {Wx :_agffe },true ;};if _cb .IsStdFont (_cb .StdFontName (_babg ._agaf )){return _cb .CharMetrics {Wx :250},true ;};return _cb .CharMetrics {},false ;};func (_ebeac fontCommon )coreString ()string {_afcgb :="";if _ebeac ._debbe !=nil {_afcgb =_ebeac ._debbe .String ();};return _bc .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ebeac ._ddcbb ,_ebeac ._agaf ,_ebeac ._bfge ,_ebeac ._gecg ,_ebeac ._bcae !=nil ,_ebeac .fontFlags (),_afcgb );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bcf .PdfObject ;_cegc []byte ;_dbcda *_bcf .PdfIndirectObject ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_gffbd *PdfReader )GetOutlines ()(*Outline ,error ){if _gffbd ==nil {return nil ,_f .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_gaaee :=_gffbd .GetOutlineTree ();if _gaaee ==nil {return nil ,_f .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _cfdec func (_decad *PdfOutlineTreeNode ,_baefe *[]*OutlineItem );_cfdec =func (_gdgdc *PdfOutlineTreeNode ,_caegd *[]*OutlineItem ){if _gdgdc ==nil {return ;};if _gdgdc ._badg ==nil {_ad .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _eaeac *OutlineItem ;if _baeecg ,_cffef :=_gdgdc ._badg .(*PdfOutlineItem );_cffef {_badgd :=_baeecg .Dest ;if (_badgd ==nil ||_bcf .IsNullObject (_badgd ))&&_baeecg .A !=nil {if _debfa ,_aeffd :=_bcf .GetDict (_baeecg .A );_aeffd {_badgd ,_ =_bcf .GetArray (_debfa .Get ("\u0044"));};};var _dfeb OutlineDest ;if _badgd !=nil &&!_bcf .IsNullObject (_badgd ){if _gdbcf ,_eabfdg :=_agcdb (_badgd ,_gffbd );_eabfdg ==nil {_dfeb =*_gdbcf ;}else {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_badgd ,_eabfdg );};};_eaeac =NewOutlineItem (_baeecg .Title .Decoded (),_dfeb );*_caegd =append (*_caegd ,_eaeac );if _baeecg .Next !=nil {_cfdec (_baeecg .Next ,_caegd );};};if _gdgdc .First !=nil {if _eaeac !=nil {_caegd =&_eaeac .Entries ;};_cfdec (_gdgdc .First ,_caegd );};};_ecbcg :=NewOutline ();_cfdec (_gaaee ,&_ecbcg .Entries );return _ecbcg ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_gfc :=NewPdfAnnotation ();_bcdf :=&PdfAnnotationPolyLine {};_bcdf .PdfAnnotation =_gfc ;_bcdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfc .SetContext (_bcdf );return _bcdf ;};

// Write writes out the PDF.
func (_gfgb *PdfWriter )Write (writer _eg .Writer )error {_ad .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_cfaff :=_ega .GetLicenseKey ();if (_cfaff ==nil ||!_cfaff .IsLicensed ())&&!_dabae {_bc .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_bc .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _f .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _gfgb ._cdaf !=nil {_ad .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gfgb ._cdaf );_egfeb :=_gfgb ._cdaf .ToPdfObject ();_ad .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_egfeb ,_egfeb ,_egfeb );_gfgb ._feagf .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_egfeb );_eaegbc :=_gfgb .addObjects (_egfeb );if _eaegbc !=nil {return _eaegbc ;};};if _gfgb ._afebgf !=nil {_ad .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_gbcga :=_gfgb ._afebgf .ToPdfObject ();_ad .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gbcga );_gfgb ._feagf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gbcga );_gbfab :=_gfgb .addObjects (_gbcga );if _gbfab !=nil {return _gbfab ;};};for _fcefd ,_bccfe :=range _gfgb ._ebaac {if !_gfgb .hasObject (_fcefd ){_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_fcefd ,_fcefd ,_fcefd );for _ ,_efced :=range _bccfe {for _ ,_fdedfg :=range _efced .Keys (){_cdef :=_efced .Get (_fdedfg );if _cdef ==_fcefd {_ad .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_efced .Set (_fdedfg ,_bcf .MakeNull ());break ;};};};};};_gfgb ._feagf .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bcf .MakeName (_bc .Sprintf ("\u0025\u0064\u002e%\u0064",_gfgb ._aaffa ,_gfgb ._gacbg )));_gfgb .copyObjects ();if _gfgb ._aagcc !=nil {var _cggb error ;_gfgb ._bdgbd ,_cggb =_gfgb ._aagcc .Optimize (_gfgb ._bdgbd );if _cggb !=nil {return _cggb ;};_geaaf :=make (map[_bcf .PdfObject ]struct{},len (_gfgb ._bdgbd ));for _ ,_gceff :=range _gfgb ._bdgbd {_geaaf [_gceff ]=struct{}{};};_gfgb ._ccecce =_geaaf ;};_gfgb ._cebd =_gfgb ._eeecb ;_gfgb ._bcddb =_c .NewWriter (writer );_cbdcf :=_gfgb ._aaffa > 1||(_gfgb ._aaffa ==1&&_gfgb ._gacbg > 4);if _gfgb ._bgebb !=nil {_cbdcf =*_gfgb ._bgebb ;};_fefca :=make (map[_bcf .PdfObject ]bool );for _ ,_cgfce :=range _gfgb ._bdgbd {if _gddc ,_baeb :=_cgfce .(*_bcf .PdfObjectStreams );_baeb {_cbdcf =true ;for _ ,_dbcge :=range _gddc .Elements (){_fefca [_dbcge ]=true ;if _caffa ,_bgcd :=_dbcge .(*_bcf .PdfIndirectObject );_bgcd {_fefca [_caffa .PdfObject ]=true ;};};};};if _cbdcf &&_gfgb ._aaffa ==1&&_gfgb ._gacbg < 5{_gfgb ._gacbg =5;};if _gfgb ._aegee {_gfgb .writeString ("\u000a");}else {_gfgb .writeString (_bc .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gfgb ._aaffa ,_gfgb ._gacbg ));_gfgb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_gfgb .updateObjectNumbers ();_ad .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gfgb ._bdgbd ));_gfgb ._ffafa =make (map[int ]crossReference );_gfgb ._ffafa [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gfgb ._gcbbf .ObjectMap !=nil {for _acgbe ,_dedf :=range _gfgb ._gcbbf .ObjectMap {if _acgbe ==0{continue ;};if _dedf .XType ==_bcf .XrefTypeObjectStream {_aebgd :=crossReference {Type :2,ObjectNumber :_dedf .OsObjNumber ,Index :_dedf .OsObjIndex };_gfgb ._ffafa [_acgbe ]=_aebgd ;};if _dedf .XType ==_bcf .XrefTypeTableEntry {_babe :=crossReference {Type :1,ObjectNumber :_dedf .ObjectNumber ,Offset :_dedf .Offset };_gfgb ._ffafa [_acgbe ]=_babe ;};};};for _ ,_dagad :=range _gfgb ._bdgbd {if _cffed :=_fefca [_dagad ];_cffed {continue ;};_cacbfc :=int64 (0);switch _fbdg :=_dagad .(type ){case *_bcf .PdfIndirectObject :_cacbfc =_fbdg .ObjectNumber ;case *_bcf .PdfObjectStream :_cacbfc =_fbdg .ObjectNumber ;case *_bcf .PdfObjectStreams :_cacbfc =_fbdg .ObjectNumber ;default:_ad .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_dagad );return ErrTypeCheck ;};if _gfgb ._badd !=nil &&_dagad !=_gfgb ._gcdfe {_dgebef :=_gfgb ._badd .Encrypt (_dagad ,int64 (_cacbfc ),0);if _dgebef !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dgebef );return _dgebef ;};};_gfgb .writeObject (int (_cacbfc ),_dagad );};_agcfc :=_gfgb ._cebd ;var _cgcb int ;for _geecg :=range _gfgb ._ffafa {if _geecg > _cgcb {_cgcb =_geecg ;};};if _cbdcf {_gfdaf :=_cgcb +1;_gfgb ._ffafa [_gfdaf ]=crossReference {Type :1,ObjectNumber :_gfdaf ,Offset :_agcfc };_dbef :=_ce .NewBuffer (nil );_aeebb :=_bcf .MakeArray ();for _defga :=0;_defga <=_cgcb ;{for ;_defga <=_cgcb ;_defga ++{_cfda ,_aagcae :=_gfgb ._ffafa [_defga ];if _aagcae &&(!_gfgb ._aegee ||_gfgb ._aegee &&(_cfda .Type ==1&&_cfda .Offset >=_gfgb ._gdfea ||_cfda .Type ==0)){break ;};};var _geagd int ;for _geagd =_defga +1;_geagd <=_cgcb ;_geagd ++{_fbee ,_cabdb :=_gfgb ._ffafa [_geagd ];if _cabdb &&(!_gfgb ._aegee ||_gfgb ._aegee &&(_fbee .Type ==1&&_fbee .Offset > _gfgb ._gdfea )){continue ;};break ;};_aeebb .Append (_bcf .MakeInteger (int64 (_defga )),_bcf .MakeInteger (int64 (_geagd -_defga )));for _fccfcb :=_defga ;_fccfcb < _geagd ;_fccfcb ++{_bcffb :=_gfgb ._ffafa [_fccfcb ];switch _bcffb .Type {case 0:_a .Write (_dbef ,_a .BigEndian ,byte (0));_a .Write (_dbef ,_a .BigEndian ,uint32 (0));_a .Write (_dbef ,_a .BigEndian ,uint16 (0xFFFF));case 1:_a .Write (_dbef ,_a .BigEndian ,byte (1));_a .Write (_dbef ,_a .BigEndian ,uint32 (_bcffb .Offset ));_a .Write (_dbef ,_a .BigEndian ,uint16 (_bcffb .Generation ));case 2:_a .Write (_dbef ,_a .BigEndian ,byte (2));_a .Write (_dbef ,_a .BigEndian ,uint32 (_bcffb .ObjectNumber ));_a .Write (_dbef ,_a .BigEndian ,uint16 (_bcffb .Index ));};};_defga =_geagd +1;};_egedf ,_ccbef :=_bcf .MakeStream (_dbef .Bytes (),_bcf .NewFlateEncoder ());if _ccbef !=nil {return _ccbef ;};_egedf .ObjectNumber =int64 (_gfdaf );_egedf .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0058\u0052\u0065\u0066"));_egedf .PdfObjectDictionary .Set ("\u0057",_bcf .MakeArray (_bcf .MakeInteger (1),_bcf .MakeInteger (4),_bcf .MakeInteger (2)));_egedf .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_aeebb );_egedf .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bcf .MakeInteger (int64 (_gfdaf +1)));_egedf .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gfgb ._cacdb );_egedf .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gfgb ._ebdd );if _gfgb ._aegee &&_gfgb ._abfba > 0{_egedf .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bcf .MakeInteger (_gfgb ._abfba ));};if _gfgb ._badd !=nil {_egedf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gfgb ._gcdfe );_egedf .Set ("\u0049\u0044",_gfgb ._cffga );_ad .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gfgb ._cffga );};_gfgb .writeObject (int (_egedf .ObjectNumber ),_egedf );}else {_gfgb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _gbfd :=0;_gbfd <=_cgcb ;{for ;_gbfd <=_cgcb ;_gbfd ++{_fddeg ,_gegcd :=_gfgb ._ffafa [_gbfd ];if _gegcd &&(!_gfgb ._aegee ||_gfgb ._aegee &&(_fddeg .Type ==1&&_fddeg .Offset >=_gfgb ._gdfea ||_fddeg .Type ==0)){break ;};};var _gcaac int ;for _gcaac =_gbfd +1;_gcaac <=_cgcb ;_gcaac ++{_baaed ,_cgeddd :=_gfgb ._ffafa [_gcaac ];if _cgeddd &&(!_gfgb ._aegee ||_gfgb ._aegee &&(_baaed .Type ==1&&_baaed .Offset > _gfgb ._gdfea )){continue ;};break ;};_egagcg :=_bc .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_gbfd ,_gcaac -_gbfd );_gfgb .writeString (_egagcg );for _eagb :=_gbfd ;_eagb < _gcaac ;_eagb ++{_acgdb :=_gfgb ._ffafa [_eagb ];switch _acgdb .Type {case 0:_egagcg =_bc .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_gfgb .writeString (_egagcg );case 1:_egagcg =_bc .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_acgdb .Offset ,0);_gfgb .writeString (_egagcg );};};_gbfd =_gcaac +1;};_deggb :=_bcf .MakeDict ();_deggb .Set ("\u0049\u006e\u0066\u006f",_gfgb ._cacdb );_deggb .Set ("\u0052\u006f\u006f\u0074",_gfgb ._ebdd );_deggb .Set ("\u0053\u0069\u007a\u0065",_bcf .MakeInteger (int64 (_cgcb +1)));if _gfgb ._aegee &&_gfgb ._abfba > 0{_deggb .Set ("\u0050\u0072\u0065\u0076",_bcf .MakeInteger (_gfgb ._abfba ));};if _gfgb ._badd !=nil {_deggb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gfgb ._gcdfe );_deggb .Set ("\u0049\u0044",_gfgb ._cffga );_ad .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gfgb ._cffga );};_gfgb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gfgb .writeString (_deggb .WriteString ());_gfgb .writeString ("\u000a");};_cgedf :=_bc .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_agcfc );_gfgb .writeString (_cgedf );_gfgb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _gfgb ._dbdaa ==nil {_gfgb ._dbdaa =_gfgb ._bcddb .Flush ();};return _gfgb ._dbdaa ;};

// C returns the value of the cyan component of the color.
func (_dcgf *PdfColorDeviceCMYK )C ()float64 {return float64 (_dcgf [0])};func (_abfe *XObjectImage )getParamsDict ()*_bcf .PdfObjectDictionary {_edbd :=_bcf .MakeDict ();_edbd .Set ("\u0057\u0069\u0064t\u0068",_bcf .MakeInteger (*_abfe .Width ));_edbd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcf .MakeInteger (*_abfe .Height ));_edbd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcf .MakeInteger (int64 (_abfe .ColorSpace .GetNumComponents ())));_edbd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcf .MakeInteger (*_abfe .BitsPerComponent ));return _edbd ;};

// Encoder returns the font's text encoder.
func (_ebaea pdfCIDFontType2 )Encoder ()_dc .TextEncoder {return _ebaea ._ageg };

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_fade *PdfPattern )GetContext ()PdfModel {return _fade ._fbgec };

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_edbcb :map[_bcf .PdfObject ]struct{}{},_adaff :_edfg (),_eagdg :_bcf .NewParserFromString (txt )};};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_bfdaa *PdfPageResources )SetXObjectByName (keyName _bcf .PdfObjectName ,stream *_bcf .PdfObjectStream )error {if _bfdaa .XObject ==nil {_bfdaa .XObject =_bcf .MakeDict ();};_bcefe :=_bcf .TraceToDirectObject (_bfdaa .XObject );_ecece ,_egeea :=_bcefe .(*_bcf .PdfObjectDictionary );if !_egeea {_ad .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_bfdaa .XObject ,_bcefe );return _f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecece .Set (keyName ,stream );return nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dagfg *modelManager )GetModelFromPrimitive (primitive _bcf .PdfObject )PdfModel {model ,_ddcbgf :=_dagfg ._efbgf [primitive ];if !_ddcbgf {return nil ;};return model ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fbdb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efab ,_cgef :=_bcf .GetNumbersAsFloat (objects );if _cgef !=nil {return nil ,_cgef ;};return _fbdb .ColorFromFloats (_efab );};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_aaeb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _aaeb ._fbgec .(*PdfShadingPattern );};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gdefb *PdfPage )GetPageDict ()*_bcf .PdfObjectDictionary {_agbea :=_gdefb ._dbafe ;_agbea .Clear ();_agbea .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0050\u0061\u0067\u0065"));_agbea .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdefb .Parent );if _gdefb .LastModified !=nil {_agbea .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gdefb .LastModified .ToPdfObject ());};if _gdefb .Resources !=nil {_agbea .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gdefb .Resources .ToPdfObject ());};if _gdefb .CropBox !=nil {_agbea .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gdefb .CropBox .ToPdfObject ());};if _gdefb .MediaBox !=nil {_agbea .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gdefb .MediaBox .ToPdfObject ());};if _gdefb .BleedBox !=nil {_agbea .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gdefb .BleedBox .ToPdfObject ());};if _gdefb .TrimBox !=nil {_agbea .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gdefb .TrimBox .ToPdfObject ());};if _gdefb .ArtBox !=nil {_agbea .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gdefb .ArtBox .ToPdfObject ());};_agbea .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gdefb .BoxColorInfo );_agbea .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gdefb .Contents );if _gdefb .Rotate !=nil {_agbea .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bcf .MakeInteger (*_gdefb .Rotate ));};_agbea .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gdefb .Group );_agbea .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gdefb .Thumb );_agbea .SetIfNotNil ("\u0042",_gdefb .B );_agbea .SetIfNotNil ("\u0044\u0075\u0072",_gdefb .Dur );_agbea .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gdefb .Trans );_agbea .SetIfNotNil ("\u0041\u0041",_gdefb .AA );_agbea .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gdefb .Metadata );_agbea .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gdefb .PieceInfo );_agbea .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gdefb .StructParents );_agbea .SetIfNotNil ("\u0049\u0044",_gdefb .ID );_agbea .SetIfNotNil ("\u0050\u005a",_gdefb .PZ );_agbea .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gdefb .SeparationInfo );_agbea .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gdefb .Tabs );_agbea .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gdefb .TemplateInstantiated );_agbea .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gdefb .PresSteps );_agbea .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gdefb .UserUnit );_agbea .SetIfNotNil ("\u0056\u0050",_gdefb .VP );if _gdefb ._gbgd !=nil {_dbfec :=_bcf .MakeArray ();for _ ,_bgfg :=range _gdefb ._gbgd {if _gcec :=_bgfg .GetContext ();_gcec !=nil {_dbfec .Append (_gcec .ToPdfObject ());}else {_dbfec .Append (_bgfg .ToPdfObject ());};};if _dbfec .Len ()> 0{_agbea .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_dbfec );};}else if _gdefb .Annots !=nil {_agbea .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gdefb .Annots );};return _agbea ;};func _fdad (_deccc *PdfField ,_fbfae _bcf .PdfObject ){for _ ,_aadgf :=range _deccc .Annotations {_aadgf .AS =_fbfae ;_aadgf .ToPdfObject ();};};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_acfdd *PdfField )IsTerminal ()bool {return len (_acfdd .Kids )==0};func (_bdf *PdfReader )newPdfAnnotationHighlightFromDict (_cffab *_bcf .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_ebae :=PdfAnnotationHighlight {};_decf ,_ebba :=_bdf .newPdfAnnotationMarkupFromDict (_cffab );if _ebba !=nil {return nil ,_ebba ;};_ebae .PdfAnnotationMarkup =_decf ;_ebae .QuadPoints =_cffab .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ebae ,nil ;};var (CourierName =_cb .CourierName ;CourierBoldName =_cb .CourierBoldName ;CourierObliqueName =_cb .CourierObliqueName ;CourierBoldObliqueName =_cb .CourierBoldObliqueName ;HelveticaName =_cb .HelveticaName ;HelveticaBoldName =_cb .HelveticaBoldName ;HelveticaObliqueName =_cb .HelveticaObliqueName ;HelveticaBoldObliqueName =_cb .HelveticaBoldObliqueName ;SymbolName =_cb .SymbolName ;ZapfDingbatsName =_cb .ZapfDingbatsName ;TimesRomanName =_cb .TimesRomanName ;TimesBoldName =_cb .TimesBoldName ;TimesItalicName =_cb .TimesItalicName ;TimesBoldItalicName =_cb .TimesBoldItalicName ;);

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ffeg :=&PdfOutline {_acgbd :_bcf .MakeIndirectObject (_bcf .MakeDict ())};_ffeg ._badg =_ffeg ;return _ffeg ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// SetFlag sets the flag for the field.
func (_fafb *PdfField )SetFlag (flag FieldFlag ){_fafb .Ff =_bcf .MakeInteger (int64 (flag ))};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_edcf *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_efcf :=&PdfColorPattern {};_feeea ,_ccecb :=objects [len (objects )-1].(*_bcf .PdfObjectName );if !_ccecb {_ad .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_efcf .PatternName =*_feeea ;if len (objects )> 1{_faege :=objects [0:len (objects )-1];if _edcf .UnderlyingCS ==nil {_ad .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_f .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_dgcb ,_afgf :=_edcf .UnderlyingCS .ColorFromPdfObjects (_faege );if _afgf !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_afgf );return nil ,_afgf ;};_efcf .Color =_dgcb ;};return _efcf ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_edgfa DefaultImageHandler )NewImageFromGoImage (goimg _g .Image )(*Image ,error ){_agea ,_ebfbg :=_ceb .FromGoImage (goimg );if _ebfbg !=nil {return nil ,_ebfbg ;};_agdbb :=_edfe (_agea .Base ());return &_agdbb ,nil ;};func (_efbcf *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _efbcf ._eagdg .GetCrypter ()!=nil &&!_efbcf ._eagdg .IsAuthenticated (){return nil ,_bc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gcab :=_efbcf ._fbcgg ;_daef :=_gcab .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _daef ==nil {return nil ,nil ;};_cafb ,_ :=_bcf .GetIndirect (_daef );_daef =_bcf .TraceToDirectObject (_daef );if _bcf .IsNullObject (_daef ){_ad .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_cbaaa ,_fbbd :=_bcf .GetDict (_daef );if !_fbbd {_ad .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_daef );_ad .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_bc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_daef );};_ad .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_ad .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_efbcf ._eddddc {_fgaacg :=_efbcf .traverseObjectData (_cbaaa );if _fgaacg !=nil {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_fgaacg );return nil ,_fgaacg ;};};_bbgfc ,_afcb :=_efbcf .newPdfAcroFormFromDict (_cafb ,_cbaaa );if _afcb !=nil {return nil ,_afcb ;};return _bbgfc ,nil ;};

// IsColored specifies if the pattern is colored.
func (_ebfc *PdfTilingPattern )IsColored ()bool {if _ebfc .PaintType !=nil &&*_ebfc .PaintType ==1{return true ;};return false ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bcf .PdfObject ;Flags _bcf .PdfObject ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_aafg :=&PdfFilespec {};_aafg ._dedbd =_bcf .MakeIndirectObject (_bcf .MakeDict ());return _aafg ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_beeb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_abgbb ,_cgde :=color .(*PdfColorDeviceCMYK );if !_cgde {_ad .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gacca :=_abgbb .C ();_acce :=_abgbb .M ();_decaf :=_abgbb .Y ();_abed :=_abgbb .K ();_gacca =_gacca *(1-_abed )+_abed ;_acce =_acce *(1-_abed )+_abed ;_decaf =_decaf *(1-_abed )+_abed ;_affe :=1-_gacca ;_bgc :=1-_acce ;_egaba :=1-_decaf ;return NewPdfColorDeviceRGB (_affe ,_bgc ,_egaba ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bcdd *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebefe ,_cdfd :=_bcf .GetNumbersAsFloat (objects );if _cdfd !=nil {return nil ,_cdfd ;};return _bcdd .ColorFromFloats (_ebefe );};

// SetContext set the sub annotation (context).
func (_fbcbd *PdfShading )SetContext (ctx PdfModel ){_fbcbd ._accbb =ctx };

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_aec :=&PdfAction {};_aec ._ge =_bcf .MakeIndirectObject (_bcf .MakeDict ());return _aec ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bbgbc *PdfSignature )GetContainingPdfObject ()_bcf .PdfObject {return _bbgbc ._gdgcbf };func (_ebga *PdfFunctionType0 )processSamples ()error {_dfega :=_bd .ResampleBytes (_ebga ._gadfcf ,_ebga .BitsPerSample );_ebga ._eedcgg =_dfega ;return nil ;};func (_dcd *PdfReader )newPdfActionMovieFromDict (_cfbf *_bcf .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cfbf .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cfbf .Get ("\u0054"),Operation :_cfbf .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_daed *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _daed ._aggdc !=nil {return _daed ._aggdc ,nil ;};if _daed .ColorSpace ==nil {return nil ,nil ;};_dfaad ,_caddc :=_aagag (_daed .ColorSpace );if _caddc !=nil {return nil ,_caddc ;};_daed ._aggdc =_dfaad ;return _daed ._aggdc ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _eg .ReadSeeker )(*PdfReader ,error ){_cabcg :=&PdfReader {_ebabc :rs ,_edbcb :map[_bcf .PdfObject ]struct{}{},_adaff :_edfg (),_eddddc :true };_ggda ,_cabdf :=_bcf .NewParser (rs );if _cabdf !=nil {return nil ,_cabdf ;};_cabcg ._eagdg =_ggda ;_aaebe ,_cabdf :=_cabcg .IsEncrypted ();if _cabdf !=nil {return nil ,_cabdf ;};if !_aaebe {_cabdf =_cabcg .loadStructure ();if _cabdf !=nil {return nil ,_cabdf ;};};return _cabcg ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bcf .PdfObject ;};var _acegg =_cc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_gcdf *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_f .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_eafdg ,_agfb :=_ceb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bgdfb ,img ._afdd );if _agfb !=nil {return img ,_agfb ;};_dbeg ,_agfb :=_ceb .NRGBAConverter .Convert (_eafdg );if _agfb !=nil {return img ,_agfb ;};_ced :=_edfe (_dbeg .Base ());_ad .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ad .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ad .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ced .Data );_ad .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ced );return _ced ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bcf .PdfObjectInteger ;BitsPerComponent *_bcf .PdfObjectInteger ;BitsPerFlag *_bcf .PdfObjectInteger ;Decode *_bcf .PdfObjectArray ;Function []PdfFunction ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bcf .PdfObject ;Name _bcf .PdfObject ;State _bcf .PdfObject ;StateModel _bcf .PdfObject ;};

// GetBorderWidth returns the border style's width.
func (_eaeg *PdfBorderStyle )GetBorderWidth ()float64 {if _eaeg .W ==nil {return 1;};return *_eaeg .W ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_def :=NewPdfAnnotation ();_edb :=&PdfAnnotationRichMedia {};_edb .PdfAnnotation =_def ;_def .SetContext (_edb );return _edb ;};

// ToPdfObject returns a stream object.
func (_bcffg *XObjectImage )ToPdfObject ()_bcf .PdfObject {_ecceb :=_bcffg ._dabeg ;_dbfc :=_ecceb .PdfObjectDictionary ;if _bcffg .Filter !=nil {_dbfc =_bcffg .Filter .MakeStreamDict ();_ecceb .PdfObjectDictionary =_dbfc ;};_dbfc .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_dbfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0049\u006d\u0061g\u0065"));_dbfc .Set ("\u0057\u0069\u0064t\u0068",_bcf .MakeInteger (*(_bcffg .Width )));_dbfc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcf .MakeInteger (*(_bcffg .Height )));if _bcffg .BitsPerComponent !=nil {_dbfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcf .MakeInteger (*(_bcffg .BitsPerComponent )));};if _bcffg .ColorSpace !=nil {_dbfc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bcffg .ColorSpace .ToPdfObject ());};_dbfc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_bcffg .Intent );_dbfc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_bcffg .ImageMask );_dbfc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_bcffg .Mask );_dbfc .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_bcffg .Decode );_dbfc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_bcffg .Interpolate );_dbfc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_bcffg .Alternatives );_dbfc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_bcffg .SMask );_dbfc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_bcffg .SMaskInData );_dbfc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bcffg .Matte );_dbfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcffg .Name );_dbfc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bcffg .StructParent );_dbfc .SetIfNotNil ("\u0049\u0044",_bcffg .ID );_dbfc .SetIfNotNil ("\u004f\u0050\u0049",_bcffg .OPI );_dbfc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bcffg .Metadata );_dbfc .SetIfNotNil ("\u004f\u0043",_bcffg .OC );_dbfc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcf .MakeInteger (int64 (len (_bcffg .Stream ))));_ecceb .Stream =_bcffg .Stream ;return _ecceb ;};func (_gdc *PdfReader )newPdfAnnotationProjectionFromDict (_dagg *_bcf .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_aaab :=&PdfAnnotationProjection {};_beg ,_ddgc :=_gdc .newPdfAnnotationMarkupFromDict (_dagg );if _ddgc !=nil {return nil ,_ddgc ;};_aaab .PdfAnnotationMarkup =_beg ;return _aaab ,nil ;};var _gfge ="";

// GetNumComponents returns the number of color components (3 for Lab).
func (_eegea *PdfColorLab )GetNumComponents ()int {return 3};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_afdf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _afdf ._gbgd !=nil {return _afdf ._gbgd ,nil ;};if _afdf .Annots ==nil {_afdf ._gbgd =[]*PdfAnnotation {};return nil ,nil ;};if _afdf ._fccg ==nil {_afdf ._gbgd =[]*PdfAnnotation {};return nil ,nil ;};_ecgeff ,_gdgcb :=_afdf ._fccg .loadAnnotations (_afdf .Annots );if _gdgcb !=nil {return nil ,_gdgcb ;};if _ecgeff ==nil {_afdf ._gbgd =[]*PdfAnnotation {};};_afdf ._gbgd =_ecgeff ;return _afdf ._gbgd ,nil ;};var _ecgee =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// PdfVersion returns version of the PDF file.
func (_abcbe *PdfReader )PdfVersion ()_bcf .Version {return _abcbe ._eagdg .PdfVersion ()};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dbda :=PdfColorDeviceGray (grayVal );return &_dbda ;};func (_ecga *PdfAppender )mergeResources (_caged ,_adfc _bcf .PdfObject ,_fcba map[_bcf .PdfObjectName ]_bcf .PdfObjectName )_bcf .PdfObject {if _adfc ==nil &&_caged ==nil {return nil ;};if _adfc ==nil {return _caged ;};_agdba ,_ddff :=_bcf .GetDict (_adfc );if !_ddff {return _caged ;};if _caged ==nil {_baf :=_bcf .MakeDict ();_baf .Merge (_agdba );return _adfc ;};_bcbc ,_ddff :=_bcf .GetDict (_caged );if !_ddff {_ad .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_bcbc =_bcf .MakeDict ();};for _ ,_cccb :=range _agdba .Keys (){if _bge ,_fgcd :=_fcba [_cccb ];_fgcd {_bcbc .Set (_bge ,_agdba .Get (_cccb ));}else {_bcbc .Set (_cccb ,_agdba .Get (_cccb ));};};return _bcbc ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dgg :=NewPdfAnnotation ();_faac :=&PdfAnnotationPolygon {};_faac .PdfAnnotation =_dgg ;_faac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgg .SetContext (_faac );return _faac ;};func (_fcbbg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_fbgd *_bcf .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_gdag :=PdfAnnotationPrinterMark {};_gdag .MN =_fbgd .Get ("\u004d\u004e");return &_gdag ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bcf .PdfObject ;IC _bcf .PdfObject ;BE _bcf .PdfObject ;RD _bcf .PdfObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_dg .PSProgram ;_dggce *_dg .PSExecutor ;_fbeae []byte ;_bfbbd *_bcf .PdfObjectStream ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bgeg *PdfPage )error ;};func (_dedbe Image )getBase ()_ceb .ImageBase {return _ceb .NewImageBase (int (_dedbe .Width ),int (_dedbe .Height ),int (_dedbe .BitsPerComponent ),_dedbe .ColorComponents ,_dedbe .Data ,_dedbe ._bgdfb ,_dedbe ._afdd );};func (_gaeg *PdfReader )newPdfAnnotationCaretFromDict (_gaea *_bcf .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_cac :=PdfAnnotationCaret {};_cfe ,_ccag :=_gaeg .newPdfAnnotationMarkupFromDict (_gaea );if _ccag !=nil {return nil ,_ccag ;};_cac .PdfAnnotationMarkup =_cfe ;_cac .RD =_gaea .Get ("\u0052\u0044");_cac .Sy =_gaea .Get ("\u0053\u0079");return &_cac ,nil ;};

// A returns the value of the A component of the color.
func (_caefc *PdfColorCalRGB )A ()float64 {return float64 (_caefc [0])};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gfg :=NewPdfAction ();_cee :=&PdfActionNamed {};_cee .PdfAction =_gfg ;_gfg .SetContext (_cee );return _cee ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bgega *Image )SetSamples (samples []uint32 ){if _bgega .BitsPerComponent < 8{samples =_bgega .samplesAddPadding (samples );};_afcfd :=_bd .ResampleUint32 (samples ,int (_bgega .BitsPerComponent ),8);_bfagd :=make ([]byte ,len (_afcfd ));for _daca ,_dfaa :=range _afcfd {_bfagd [_daca ]=byte (_dfaa );};_bgega .Data =_bfagd ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_eecg *_bcf .PdfIndirectObject ;};

// SetContext sets the sub action (context).
func (_bg *PdfAction )SetContext (ctx PdfModel ){_bg ._cec =ctx };

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_adg :=NewPdfAction ();_cbc :=&PdfActionThread {};_cbc .PdfAction =_adg ;_adg .SetContext (_cbc );return _cbc ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_bbaa :=&PdfBorderStyle {};return _bbaa };

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gbagd *PdfField )FullName ()(string ,error ){var _agfg _ce .Buffer ;_ccge :=[]string {};if _gbagd .T !=nil {_ccge =append (_ccge ,_gbagd .T .Decoded ());};_ebcbd :=map[*PdfField ]bool {};_ebcbd [_gbagd ]=true ;_deeg :=_gbagd .Parent ;for _deeg !=nil {if _ ,_fbfa :=_ebcbd [_deeg ];_fbfa {return _agfg .String (),_f .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _deeg .T ==nil {return _agfg .String (),_f .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ccge =append (_ccge ,_deeg .T .Decoded ());_ebcbd [_deeg ]=true ;_deeg =_deeg .Parent ;};for _agca :=len (_ccge )-1;_agca >=0;_agca --{_agfg .WriteString (_ccge [_agca ]);if _agca > 0{_agfg .WriteString ("\u002e");};};return _agfg .String (),nil ;};

// GetNumPages returns the number of pages in the document.
func (_abebg *PdfReader )GetNumPages ()(int ,error ){if _abebg ._eagdg .GetCrypter ()!=nil &&!_abebg ._eagdg .IsAuthenticated (){return 0,_bc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_abebg ._ffbf ),nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bcf .PdfObject )(PdfColorspace ,error ){var _egdf *_bcf .PdfIndirectObject ;var _dgebb *_bcf .PdfObjectName ;var _dfac *_bcf .PdfObjectArray ;if _abbb ,_egeg :=obj .(*_bcf .PdfIndirectObject );_egeg {_egdf =_abbb ;};obj =_bcf .TraceToDirectObject (obj );switch _ebgc :=obj .(type ){case *_bcf .PdfObjectArray :_dfac =_ebgc ;case *_bcf .PdfObjectName :_dgebb =_ebgc ;};if _dgebb !=nil {switch *_dgebb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_ad .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_dgebb );return nil ,_eacc ;};};if _dfac !=nil &&_dfac .Len ()> 0{var _daeab _bcf .PdfObject =_egdf ;if _egdf ==nil {_daeab =_dfac ;};if _fcga ,_dcada :=_bcf .GetName (_dfac .Get (0));_dcada {switch _fcga .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _dfac .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _dfac .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dfac .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ebage (_daeab );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _caec (_daeab );case "\u004c\u0061\u0062":return _gbbf (_daeab );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _afeb (_daeab );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bgcg (_daeab );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _bfefb (_daeab );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _cggc (_daeab );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cdad (_daeab );default:_ad .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_fcga );};};};_ad .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_afaeb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_dcgc :=PdfColorDeviceRGB {r ,g ,b };return &_dcgc ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_geccc *PdfPage )Duplicate ()*PdfPage {var _gecgf PdfPage ;_gecgf =*_geccc ;_gecgf ._dbafe =_bcf .MakeDict ();_gecgf ._cbaab =_bcf .MakeIndirectObject (_gecgf ._dbafe );return &_gecgf ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func _aegb (_egddcg *_bcf .PdfObjectDictionary )(*PdfTilingPattern ,error ){_gecd :=&PdfTilingPattern {};_ddbd :=_egddcg .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ddbd ==nil {_ad .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bgedc ,_afce :=_ddbd .(*_bcf .PdfObjectInteger );if !_afce {_ad .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddbd );return nil ,_bcf .ErrTypeError ;};_gecd .PaintType =_bgedc ;_ddbd =_egddcg .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ddbd ==nil {_ad .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bdfed ,_afce :=_ddbd .(*_bcf .PdfObjectInteger );if !_afce {_ad .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddbd );return nil ,_bcf .ErrTypeError ;};_gecd .TilingType =_bdfed ;_ddbd =_egddcg .Get ("\u0042\u0042\u006f\u0078");if _ddbd ==nil {_ad .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ddbd =_bcf .TraceToDirectObject (_ddbd );_ddbb ,_afce :=_ddbd .(*_bcf .PdfObjectArray );if !_afce {_ad .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddbd );return nil ,_bcf .ErrTypeError ;};_abca ,_deag :=NewPdfRectangle (*_ddbb );if _deag !=nil {_ad .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_deag );return nil ,_deag ;};_gecd .BBox =_abca ;_ddbd =_egddcg .Get ("\u0058\u0053\u0074e\u0070");if _ddbd ==nil {_ad .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_agfga ,_deag :=_bcf .GetNumberAsFloat (_ddbd );if _deag !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_agfga );return nil ,_deag ;};_gecd .XStep =_bcf .MakeFloat (_agfga );_ddbd =_egddcg .Get ("\u0059\u0053\u0074e\u0070");if _ddbd ==nil {_ad .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_edabd ,_deag :=_bcf .GetNumberAsFloat (_ddbd );if _deag !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_edabd );return nil ,_deag ;};_gecd .YStep =_bcf .MakeFloat (_edabd );_ddbd =_egddcg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ddbd ==nil {_ad .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_egddcg ,_afce =_bcf .TraceToDirectObject (_ddbd ).(*_bcf .PdfObjectDictionary );if !_afce {return nil ,_bc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddbd );};_fedeb ,_deag :=NewPdfPageResourcesFromDict (_egddcg );if _deag !=nil {return nil ,_deag ;};_gecd .Resources =_fedeb ;if _dadad :=_egddcg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dadad !=nil {_addacb ,_eebdb :=_dadad .(*_bcf .PdfObjectArray );if !_eebdb {_ad .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dadad );return nil ,_bcf .ErrTypeError ;};_gecd .Matrix =_addacb ;};return _gecd ,nil ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eegc *PdfPageResources )SetColorspaceByName (keyName _bcf .PdfObjectName ,cs PdfColorspace )error {_gfbd ,_adgcd :=_eegc .GetColorspaces ();if _adgcd !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_adgcd );return _adgcd ;};if _gfbd ==nil {_gfbd =NewPdfPageResourcesColorspaces ();_eegc .SetColorSpace (_gfbd );};_gfbd .Set (keyName ,cs );return nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_ebad *PdfColorspaceCalGray )ToPdfObject ()_bcf .PdfObject {_cdeg :=&_bcf .PdfObjectArray {};_cdeg .Append (_bcf .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_bcef :=_bcf .MakeDict ();if _ebad .WhitePoint !=nil {_bcef .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bcf .MakeArray (_bcf .MakeFloat (_ebad .WhitePoint [0]),_bcf .MakeFloat (_ebad .WhitePoint [1]),_bcf .MakeFloat (_ebad .WhitePoint [2])));}else {_ad .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _ebad .BlackPoint !=nil {_bcef .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bcf .MakeArray (_bcf .MakeFloat (_ebad .BlackPoint [0]),_bcf .MakeFloat (_ebad .BlackPoint [1]),_bcf .MakeFloat (_ebad .BlackPoint [2])));};_bcef .Set ("\u0047\u0061\u006dm\u0061",_bcf .MakeFloat (_ebad .Gamma ));_cdeg .Append (_bcef );if _ebad ._dfafbb !=nil {_ebad ._dfafbb .PdfObject =_cdeg ;return _ebad ._dfafbb ;};return _cdeg ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_badca ,_bdbf :=_cb .NewStdFontByName (HelveticaName );if !_bdbf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_cbee :=_gefe (_badca );return &PdfFont {_cefc :&_cbee };};func (_eeagc *PdfWriter )seekByName (_cgad _bcf .PdfObject ,_baegf []string ,_gfeee string )([]_bcf .PdfObject ,error ){_ad .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cgad );var _dadd []_bcf .PdfObject ;if _bdbea ,_ffaeg :=_cgad .(*_bcf .PdfIndirectObject );_ffaeg {return _eeagc .seekByName (_bdbea .PdfObject ,_baegf ,_gfeee );};if _gfafe ,_cccd :=_cgad .(*_bcf .PdfObjectStream );_cccd {return _eeagc .seekByName (_gfafe .PdfObjectDictionary ,_baegf ,_gfeee );};if _bcdaa ,_ecgf :=_cgad .(*_bcf .PdfObjectDictionary );_ecgf {_ad .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_cfeb :=range _bcdaa .Keys (){_gbbga :=_bcdaa .Get (_cfeb );if string (_cfeb )==_gfeee {_dadd =append (_dadd ,_gbbga );};for _ ,_gegcg :=range _baegf {if string (_cfeb )==_gegcg {_ad .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gegcg );_ggdgf ,_cacegg :=_eeagc .seekByName (_gbbga ,_baegf ,_gfeee );if _cacegg !=nil {return _dadd ,_cacegg ;};for _ ,_facef :=range _ggdgf {_dadd =append (_dadd ,_facef );};break ;};};};return _dadd ,nil ;};return _dadd ,nil ;};func _afeb (_dcac _bcf .PdfObject )(*PdfColorspaceICCBased ,error ){_dcbdg :=&PdfColorspaceICCBased {};if _cdcf ,_ebca :=_dcac .(*_bcf .PdfIndirectObject );_ebca {_dcbdg ._cdgea =_cdcf ;};_dcac =_bcf .TraceToDirectObject (_dcac );_gbcb ,_fgcbf :=_dcac .(*_bcf .PdfObjectArray );if !_fgcbf {return nil ,_bc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbcb .Len ()!=2{return nil ,_bc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_dcac =_bcf .TraceToDirectObject (_gbcb .Get (0));_ccbd ,_fgcbf :=_dcac .(*_bcf .PdfObjectName );if !_fgcbf {return nil ,_bc .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ccbd !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_bc .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_dcac =_gbcb .Get (1);_dcfae ,_fgcbf :=_bcf .GetStream (_dcac );if !_fgcbf {_ad .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dcac );return nil ,_bc .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_geag :=_dcfae .PdfObjectDictionary ;_fdbe ,_fgcbf :=_geag .Get ("\u004e").(*_bcf .PdfObjectInteger );if !_fgcbf {return nil ,_bc .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fdbe !=1&&*_fdbe !=3&&*_fdbe !=4{return nil ,_bc .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_dcbdg .N =int (*_fdbe );if _dffb :=_geag .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dffb !=nil {_dbab ,_baeg :=NewPdfColorspaceFromPdfObject (_dffb );if _baeg !=nil {return nil ,_baeg ;};_dcbdg .Alternate =_dbab ;};if _cade :=_geag .Get ("\u0052\u0061\u006eg\u0065");_cade !=nil {_cade =_bcf .TraceToDirectObject (_cade );_debd ,_acde :=_cade .(*_bcf .PdfObjectArray );if !_acde {return nil ,_bc .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _debd .Len ()!=2*_dcbdg .N {return nil ,_bc .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_aabc ,_bfdc :=_debd .GetAsFloat64Slice ();if _bfdc !=nil {return nil ,_bfdc ;};_dcbdg .Range =_aabc ;}else {_dcbdg .Range =make ([]float64 ,2*_dcbdg .N );for _cffdb :=0;_cffdb < _dcbdg .N ;_cffdb ++{_dcbdg .Range [2*_cffdb ]=0.0;_dcbdg .Range [2*_cffdb +1]=1.0;};};if _bbff :=_geag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bbff !=nil {_gegbc ,_affb :=_bbff .(*_bcf .PdfObjectStream );if !_affb {return nil ,_bc .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_dcbdg .Metadata =_gegbc ;};_aga ,_ddgca :=_bcf .DecodeStream (_dcfae );if _ddgca !=nil {return nil ,_ddgca ;};_dcbdg .Data =_aga ;_dcbdg ._fdbd =_dcfae ;return _dcbdg ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ggge *PdfColorspaceSpecialPattern )ToPdfObject ()_bcf .PdfObject {if _ggge .UnderlyingCS ==nil {return _bcf .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_gcgcee :=_bcf .MakeArray (_bcf .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gcgcee .Append (_ggge .UnderlyingCS .ToPdfObject ());if _ggge ._egcc !=nil {_ggge ._egcc .PdfObject =_gcgcee ;return _ggge ._egcc ;};return _gcgcee ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gfbg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gfbg .RunesToCharcodeBytes ([]rune (str ));};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gbde *PdfFont )GetCharMetrics (code _dc .CharCode )(CharMetrics ,bool ){var _dbag _cb .CharMetrics ;switch _cedb :=_gbde ._cefc .(type ){case *pdfFontSimple :if _bedc ,_bbbg :=_cedb .GetCharMetrics (code );_bbbg {return _bedc ,_bbbg ;};case *pdfFontType0 :if _agdge ,_aedg :=_cedb .GetCharMetrics (code );_aedg {return _agdge ,_aedg ;};case *pdfCIDFontType0 :if _caeg ,_befe :=_cedb .GetCharMetrics (code );_befe {return _caeg ,_befe ;};case *pdfCIDFontType2 :if _fffaf ,_edec :=_cedb .GetCharMetrics (code );_edec {return _fffaf ,_edec ;};default:_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gbde ._cefc );return _dbag ,false ;};if _dabfd ,_eded :=_gbde .GetFontDescriptor ();_eded ==nil &&_dabfd !=nil {return _cb .CharMetrics {Wx :_dabfd ._ffaf },true ;};_ad .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gbde );return _dbag ,false ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_adgac =title };func (_gcbed *PdfReader )newPdfAcroFormFromDict (_gebc *_bcf .PdfIndirectObject ,_ffbg *_bcf .PdfObjectDictionary )(*PdfAcroForm ,error ){_dgbbd :=NewPdfAcroForm ();if _gebc !=nil {_dgbbd ._eafeb =_gebc ;_gebc .PdfObject =_bcf .MakeDict ();};if _cbbd :=_ffbg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cbbd !=nil {_bbgca ,_afad :=_bcf .GetArray (_cbbd );if !_afad {return nil ,_bc .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cbbd );};var _defc []*PdfField ;for _ ,_bbfcc :=range _bbgca .Elements (){_bceab ,_caab :=_bcf .GetIndirect (_bbfcc );if !_caab {if _ ,_bfedb :=_bbfcc .(*_bcf .PdfObjectNull );_bfedb {_ad .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_ad .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bbfcc );return nil ,_bc .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dafa ,_ccca :=_gcbed .newPdfFieldFromIndirectObject (_bceab ,nil );if _ccca !=nil {return nil ,_ccca ;};_ad .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_dafa );_defc =append (_defc ,_dafa );};_dgbbd .Fields =&_defc ;};if _egbbf :=_ffbg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_egbbf !=nil {_ccbg ,_cgda :=_bcf .GetBool (_egbbf );if _cgda {_dgbbd .NeedAppearances =_ccbg ;}else {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_egbbf );};};if _egegfe :=_ffbg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_egegfe !=nil {_abce ,_fcfaf :=_bcf .GetInt (_egegfe );if _fcfaf {_dgbbd .SigFlags =_abce ;}else {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egegfe );};};if _fdbg :=_ffbg .Get ("\u0043\u004f");_fdbg !=nil {_eced ,_ffdg :=_bcf .GetArray (_fdbg );if _ffdg {_dgbbd .CO =_eced ;}else {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fdbg );};};if _dbge :=_ffbg .Get ("\u0044\u0052");_dbge !=nil {if _edfab ,_faegf :=_bcf .GetDict (_dbge );_faegf {_edac ,_baaf :=NewPdfPageResourcesFromDict (_edfab );if _baaf !=nil {_ad .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_baaf );return nil ,_baaf ;};_dgbbd .DR =_edac ;}else {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dbge );};};if _abbf :=_ffbg .Get ("\u0044\u0041");_abbf !=nil {_dgbgfg ,_eagd :=_bcf .GetString (_abbf );if _eagd {_dgbbd .DA =_dgbgfg ;}else {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_abbf );};};if _fegf :=_ffbg .Get ("\u0051");_fegf !=nil {_dddd ,_bgbccb :=_bcf .GetInt (_fegf );if _bgbccb {_dgbbd .Q =_dddd ;}else {_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fegf );};};if _cbaa :=_ffbg .Get ("\u0058\u0046\u0041");_cbaa !=nil {_dgbbd .XFA =_cbaa ;};return _dgbbd ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cfbfc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ad .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fced :=[]float64 {0.0};if _cfbfc .C0 !=nil {_fced =_cfbfc .C0 ;};_gcdb :=[]float64 {1.0};if _cfbfc .C1 !=nil {_gcdb =_cfbfc .C1 ;};var _fcge []float64 ;for _addg :=0;_addg < len (_fced );_addg ++{_abfcg :=_fced [_addg ]+_db .Pow (x [0],_cfbfc .N )*(_gcdb [_addg ]-_fced [_addg ]);_fcge =append (_fcge ,_abfcg );};return _fcge ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_add :=NewPdfAnnotation ();_adaf :=&PdfAnnotationHighlight {};_adaf .PdfAnnotation =_add ;_adaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_add .SetContext (_adaf );return _adaf ;};func (_adafg *PdfPage )setContainer (_edbfa *_bcf .PdfIndirectObject ){_edbfa .PdfObject =_adafg ._dbafe ;_adafg ._cbaab =_edbfa ;};func (_bfbe *pdfFontSimple )baseFields ()*fontCommon {return &_bfbe .fontCommon };func (_bddf *PdfAcroForm )filteredFields (_efec FieldFilterFunc ,_bbgaeb bool )[]*PdfField {if _bddf ==nil {return nil ;};return _dgbff (_bddf .Fields ,_efec ,_bbgaeb );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_acag *PdfFieldChoice )ToPdfObject ()_bcf .PdfObject {_acag .PdfField .ToPdfObject ();_aefd :=_acag ._egegf ;_eccgd :=_aefd .PdfObject .(*_bcf .PdfObjectDictionary );_eccgd .Set ("\u0046\u0054",_bcf .MakeName ("\u0043\u0068"));if _acag .Opt !=nil {_eccgd .Set ("\u004f\u0070\u0074",_acag .Opt );};if _acag .TI !=nil {_eccgd .Set ("\u0054\u0049",_acag .TI );};if _acag .I !=nil {_eccgd .Set ("\u0049",_acag .I );};return _aefd ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_dggcd PdfModel ;_egegf *_bcf .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bcf .PdfObjectName ;T *_bcf .PdfObjectString ;TU *_bcf .PdfObjectString ;TM *_bcf .PdfObjectString ;Ff *_bcf .PdfObjectInteger ;V _bcf .PdfObject ;DV _bcf .PdfObject ;AA _bcf .PdfObject ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_ddcd *PdfPageResources )SetXObjectFormByName (keyName _bcf .PdfObjectName ,xform *XObjectForm )error {_efgd :=xform .ToPdfObject ().(*_bcf .PdfObjectStream );_dbdff :=_ddcd .SetXObjectByName (keyName ,_efgd );return _dbdff ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fbbba *PdfPageResources )GetExtGState (keyName _bcf .PdfObjectName )(_bcf .PdfObject ,bool ){if _fbbba .ExtGState ==nil {return nil ,false ;};_dceeb ,_gaeac :=_bcf .TraceToDirectObject (_fbbba .ExtGState ).(*_bcf .PdfObjectDictionary );if !_gaeac {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbbba .ExtGState );return nil ,false ;};if _fccaa :=_dceeb .Get (keyName );_fccaa !=nil {return _fccaa ,true ;};return nil ,false ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bcf .PdfObject ;};

// B returns the value of the B component of the color.
func (_bacc *PdfColorCalRGB )B ()float64 {return float64 (_bacc [1])};func (_beed *PdfReader )newPdfActionLaunchFromDict (_eeg *_bcf .PdfObjectDictionary )(*PdfActionLaunch ,error ){_cfb ,_bbf :=_dec (_eeg .Get ("\u0046"));if _bbf !=nil {return nil ,_bbf ;};return &PdfActionLaunch {Win :_eeg .Get ("\u0057\u0069\u006e"),Mac :_eeg .Get ("\u004d\u0061\u0063"),Unix :_eeg .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_eeg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cfb },nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cedd *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bcf .GetNumberAsFloat (_cedd .CapHeight );};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dcg :=NewPdfAction ();_bac :=&PdfActionSetOCGState {};_bac .PdfAction =_dcg ;_dcg .SetContext (_bac );return _bac ;};func (_faacad *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ceag []*PdfFieldSignature ;for _ ,_cgbg :=range _faacad .AllFields (){switch _bbefb :=_cgbg .GetContext ().(type ){case *PdfFieldSignature :_bdbc :=_bbefb ;_ceag =append (_ceag ,_bdbc );};};return _ceag ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bcf .PdfObject ;Popup *PdfAnnotationPopup ;CA _bcf .PdfObject ;RC _bcf .PdfObject ;CreationDate _bcf .PdfObject ;IRT _bcf .PdfObject ;Subj _bcf .PdfObject ;RT _bcf .PdfObject ;IT _bcf .PdfObject ;ExData _bcf .PdfObject ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bfbac *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bfbac .ToPdfOutline ().PdfOutlineTreeNode ;};

// Register registers (caches) a model to primitive object relationship.
func (_aebbc *modelManager )Register (primitive _bcf .PdfObject ,model PdfModel ){_aebbc ._fcbcd [model ]=primitive ;_aebbc ._efbgf [primitive ]=model ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fdfe *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adbcd :=vals [0];if _adbcd < 0.0||_adbcd > 1.0{_ad .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _adbcd < 0.0{_adbcd =0.0;}else if _adbcd > 1.0{_adbcd =1.0;};return NewPdfColorDeviceGray (_adbcd ),nil ;};func _gbcab (_dfcb *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_dfcb }};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ffb PdfModel ;Rect _bcf .PdfObject ;Contents _bcf .PdfObject ;P _bcf .PdfObject ;NM _bcf .PdfObject ;M _bcf .PdfObject ;F _bcf .PdfObject ;AP _bcf .PdfObject ;AS _bcf .PdfObject ;Border _bcf .PdfObject ;C _bcf .PdfObject ;StructParent _bcf .PdfObject ;OC _bcf .PdfObject ;_fab *_bcf .PdfIndirectObject ;};func (_addad *PdfWriter )writeString (_eecbg string ){if _addad ._dbdaa !=nil {return ;};_dgebc ,_caced :=_addad ._bcddb .WriteString (_eecbg );_addad ._cebd +=int64 (_dgebc );_addad ._dbdaa =_caced ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func _adba (_dgcd *_bcf .PdfObjectDictionary ,_fdfa *fontCommon )(*pdfFontType0 ,error ){_faage ,_bgcc :=_bcf .GetArray (_dgcd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_bgcc {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fdfa );return nil ,_bcf .ErrRangeError ;};if _faage .Len ()!=1{_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_faage .Len ());return nil ,_bcf .ErrRangeError ;};_ggcc ,_baae :=_aebe (_faage .Get (0),false );if _baae !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_baae ,_fdfa );return nil ,_baae ;};_bdcdb :=_cffb (_fdfa );_bdcdb .DescendantFont =_ggcc ;_aded ,_bgcc :=_bcf .GetNameVal (_dgcd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bgcc {if _aded =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_aded =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bdcdb ._fdfd =_dc .NewIdentityTextEncoder (_aded );}else if _df .IsPredefinedCMap (_aded ){_bdcdb ._dbdg ,_baae =_df .LoadPredefinedCMap (_aded );if _baae !=nil {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_aded ,_baae );};}else {_ad .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_aded );};};if _bbgbf :=_ggcc .baseFields ()._ecba ;_bbgbf !=nil {if _acdd :=_bbgbf .Name ();_acdd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_acdd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_acdd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_acdd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bdcdb ._fdfd =_dc .NewCMapEncoder (_aded ,_bdcdb ._dbdg ,_bbgbf );};};return _bdcdb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gfce *PdfAnnotationCircle )ToPdfObject ()_bcf .PdfObject {_gfce .PdfAnnotation .ToPdfObject ();_bcgac :=_gfce ._fab ;_bfd :=_bcgac .PdfObject .(*_bcf .PdfObjectDictionary );_gfce .PdfAnnotationMarkup .appendToPdfDictionary (_bfd );_bfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_bfd .SetIfNotNil ("\u0042\u0053",_gfce .BS );_bfd .SetIfNotNil ("\u0049\u0043",_gfce .IC );_bfd .SetIfNotNil ("\u0042\u0045",_gfce .BE );_bfd .SetIfNotNil ("\u0052\u0044",_gfce .RD );return _bcgac ;};

// ImageToRGB convert an indexed image to RGB.
func (_deaae *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_deaae .Base .GetNumComponents ();if N < 1{return Image {},_bc .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_egdab :=_ceb .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._bgdfb ,img ._afdd );_agcd :=_bd .NewReader (img .getBase ());_fgdcf :=_bd .NewWriter (_egdab );var (_edaba uint32 ;_aged int ;_fcce error ;);for {_edaba ,_fcce =_agcd .ReadSample ();if _fcce ==_eg .EOF {break ;}else if _fcce !=nil {return img ,_fcce ;};_aged =int (_edaba );_ad .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_aged ,N ,len (_deaae ._cegc ));if (_aged +1)*N > len (_deaae ._cegc ){_aged =len (_deaae ._cegc )/N -1;_ad .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_aged );if _aged < 0{_ad .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _ccddg :=_aged *N ;_ccddg < (_aged +1)*N ;_ccddg ++{if _fcce =_fgdcf .WriteSample (uint32 (_deaae ._cegc [_ccddg ]));_fcce !=nil {return img ,_fcce ;};};};return _deaae .Base .ImageToRGB (_edfe (&_egdab ));};func _gefe (_baacf _cb .StdFont )pdfFontSimple {_bcbcef :=_baacf .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ddcbb :"\u0054\u0079\u0070e\u0031",_agaf :_baacf .Name ()},_agcc :_baacf .GetMetricsTable (),_dcge :&PdfFontDescriptor {FontName :_bcf .MakeName (string (_bcbcef .Name )),FontFamily :_bcf .MakeName (_bcbcef .Family ),FontWeight :_bcf .MakeFloat (float64 (_bcbcef .Weight )),Flags :_bcf .MakeInteger (int64 (_bcbcef .Flags )),FontBBox :_bcf .MakeArrayFromFloats (_bcbcef .BBox [:]),ItalicAngle :_bcf .MakeFloat (_bcbcef .ItalicAngle ),Ascent :_bcf .MakeFloat (_bcbcef .Ascent ),Descent :_bcf .MakeFloat (_bcbcef .Descent ),CapHeight :_bcf .MakeFloat (_bcbcef .CapHeight ),XHeight :_bcf .MakeFloat (_bcbcef .XHeight ),StemV :_bcf .MakeFloat (_bcbcef .StemV ),StemH :_bcf .MakeFloat (_bcbcef .StemH )},_efgfcd :_baacf .Encoder ()};};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cebb *XObjectForm )SetContentStream (content []byte ,encoder _bcf .StreamEncoder )error {_bdbfa :=content ;if encoder ==nil {if _cebb .Filter !=nil {encoder =_cebb .Filter ;}else {encoder =_bcf .NewRawEncoder ();};};_beba ,_edegae :=encoder .EncodeBytes (_bdbfa );if _edegae !=nil {return _edegae ;};_bdbfa =_beba ;_cebb .Stream =_bdbfa ;_cebb .Filter =encoder ;return nil ;};

// SetVersion sets the PDF version of the output file.
func (_dddb *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_dddb ._aaffa =majorVersion ;_dddb ._gacbg =minorVersion ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bacea *PdfShading )ToPdfObject ()_bcf .PdfObject {_gaefc :=_bacea ._aeddc ;_faab ,_bcfeb :=_bacea .getShadingDict ();if _bcfeb !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bacea .ShadingType !=nil {_faab .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bacea .ShadingType );};if _bacea .ColorSpace !=nil {_faab .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bacea .ColorSpace .ToPdfObject ());};if _bacea .Background !=nil {_faab .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bacea .Background );};if _bacea .BBox !=nil {_faab .Set ("\u0042\u0042\u006f\u0078",_bacea .BBox .ToPdfObject ());};if _bacea .AntiAlias !=nil {_faab .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bacea .AntiAlias );};return _gaefc ;};func (_ggdbe *Image )samplesAddPadding (_cccgg []uint32 )[]uint32 {_eddfd :=_ceb .BytesPerLine (int (_ggdbe .Width ),int (_ggdbe .BitsPerComponent ),_ggdbe .ColorComponents )*(8/int (_ggdbe .BitsPerComponent ));_ecfdf :=_eddfd *int (_ggdbe .Height );if len (_cccgg )==_ecfdf {return _cccgg ;};_ffcdc :=make ([]uint32 ,_ecfdf );_gfffc :=int (_ggdbe .Width )*_ggdbe .ColorComponents ;for _bbfdb :=0;_bbfdb < int (_ggdbe .Height );_bbfdb ++{_fbafe :=_bbfdb *int (_ggdbe .Width );_aaffe :=_bbfdb *_eddfd ;for _daffg :=0;_daffg < _gfffc ;_daffg ++{_ffcdc [_aaffe +_daffg ]=_cccgg [_fbafe +_daffg ];};};return _ffcdc ;};

// ToPdfObject implements interface PdfModel.
func (_ageb *PdfAnnotationFileAttachment )ToPdfObject ()_bcf .PdfObject {_ageb .PdfAnnotation .ToPdfObject ();_eadd :=_ageb ._fab ;_cafg :=_eadd .PdfObject .(*_bcf .PdfObjectDictionary );_ageb .PdfAnnotationMarkup .appendToPdfDictionary (_cafg );_cafg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_cafg .SetIfNotNil ("\u0046\u0053",_ageb .FS );_cafg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ageb .Name );return _eadd ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_affc *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _efff []*PdfField ;_fafab :=map[*_bcf .PdfIndirectObject ]struct{}{};for _ ,_dcab :=range _affc .PageList {_bbagf ,_agcb :=_dcab .GetAnnotations ();if _agcb !=nil {return _agcb ;};for _ ,_cgbe :=range _bbagf {var _aaeab *PdfField ;switch _aggae :=_cgbe .GetContext ().(type ){case *PdfAnnotationWidget :if _aggae ._efc !=nil {_aaeab =_aggae ._efc ;break ;};if _ccfae ,_gaegd :=_bcf .GetIndirect (_aggae .Parent );_gaegd {_aaeab ,_agcb =_affc .newPdfFieldFromIndirectObject (_ccfae ,nil );if _agcb ==nil {break ;};_ad .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ccfae ,_agcb );};if _aggae ._fab !=nil {_aaeab ,_agcb =_affc .newPdfFieldFromIndirectObject (_aggae ._fab ,nil );if _agcb ==nil {break ;};_ad .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aggae ._fab ,_agcb );};};if _aaeab ==nil {continue ;};if _ ,_fafaa :=_fafab [_aaeab ._egegf ];_fafaa {continue ;};_fafab [_aaeab ._egegf ]=struct{}{};_efff =append (_efff ,_aaeab );};};if len (_efff )==0{return nil ;};if _affc .AcroForm ==nil {_affc .AcroForm =NewPdfAcroForm ();};_affc .AcroForm .Fields =&_efff ;return nil ;};func (_ffga PdfFont )actualFont ()pdfFont {if _ffga ._cefc ==nil {_ad .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ffga );};return _ffga ._cefc ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bcf .PdfObject ;FontFamily _bcf .PdfObject ;FontStretch _bcf .PdfObject ;FontWeight _bcf .PdfObject ;Flags _bcf .PdfObject ;FontBBox _bcf .PdfObject ;ItalicAngle _bcf .PdfObject ;Ascent _bcf .PdfObject ;Descent _bcf .PdfObject ;Leading _bcf .PdfObject ;CapHeight _bcf .PdfObject ;XHeight _bcf .PdfObject ;StemV _bcf .PdfObject ;StemH _bcf .PdfObject ;AvgWidth _bcf .PdfObject ;MaxWidth _bcf .PdfObject ;MissingWidth _bcf .PdfObject ;FontFile _bcf .PdfObject ;FontFile2 _bcf .PdfObject ;FontFile3 _bcf .PdfObject ;CharSet _bcf .PdfObject ;_gfdbc int ;_ffaf float64 ;*fontFile ;_cgdgc *_cb .TtfType ;

// Additional entries for CIDFonts
Style _bcf .PdfObject ;Lang _bcf .PdfObject ;FD _bcf .PdfObject ;CIDSet _bcf .PdfObject ;_aaea *_bcf .PdfIndirectObject ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_feagg *PdfPage )GetAllContentStreams ()(string ,error ){_fgbeg ,_fcbgb :=_feagg .GetContentStreams ();if _fcbgb !=nil {return "",_fcbgb ;};return _be .Join (_fgbeg ,"\u0020"),nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_aabdd *PdfPage )AddContentStreamByString (contentStr string )error {_cdgg ,_bfbfb :=_bcf .MakeStream ([]byte (contentStr ),_bcf .NewFlateEncoder ());if _bfbfb !=nil {return _bfbfb ;};if _aabdd .Contents ==nil {_aabdd .Contents =_cdgg ;}else {_bafee :=_bcf .TraceToDirectObject (_aabdd .Contents );_ffebag ,_eafed :=_bafee .(*_bcf .PdfObjectArray );if !_eafed {_ffebag =_bcf .MakeArray (_bafee );};_ffebag .Append (_cdgg );_aabdd .Contents =_ffebag ;};return nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bedg :=NewPdfAnnotation ();_fda :=&PdfAnnotationCircle {};_fda .PdfAnnotation =_bedg ;_fda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bedg .SetContext (_fda );return _fda ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gggbb *PdfPage )GetContentStreamObjs ()[]_bcf .PdfObject {if _gggbb .Contents ==nil {return nil ;};_fccfc :=_bcf .TraceToDirectObject (_gggbb .Contents );if _efaee ,_fggef :=_fccfc .(*_bcf .PdfObjectArray );_fggef {return _efaee .Elements ();};return []_bcf .PdfObject {_fccfc };};

// ToPdfObject implements interface PdfModel.
func (_eeaa *PdfAnnotation3D )ToPdfObject ()_bcf .PdfObject {_eeaa .PdfAnnotation .ToPdfObject ();_bfgd :=_eeaa ._fab ;_gbb :=_bfgd .PdfObject .(*_bcf .PdfObjectDictionary );_gbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0033\u0044"));_gbb .SetIfNotNil ("\u0033\u0044\u0044",_eeaa .T3DD );_gbb .SetIfNotNil ("\u0033\u0044\u0056",_eeaa .T3DV );_gbb .SetIfNotNil ("\u0033\u0044\u0041",_eeaa .T3DA );_gbb .SetIfNotNil ("\u0033\u0044\u0049",_eeaa .T3DI );_gbb .SetIfNotNil ("\u0033\u0044\u0042",_eeaa .T3DB );return _bfgd ;};func (_gcd *PdfReader )newPdfAnnotationScreenFromDict (_beff *_bcf .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_dbff :=PdfAnnotationScreen {};_dbff .T =_beff .Get ("\u0054");_dbff .MK =_beff .Get ("\u004d\u004b");_dbff .A =_beff .Get ("\u0041");_dbff .AA =_beff .Get ("\u0041\u0041");return &_dbff ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_cfacg *PdfPage )GetPageAsIndirectObject ()*_bcf .PdfIndirectObject {return _cfacg ._cbaab };func (_dcad *PdfReader )newPdfAnnotationTextFromDict (_gca *_bcf .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gcaa :=PdfAnnotationText {};_afccd ,_gae :=_dcad .newPdfAnnotationMarkupFromDict (_gca );if _gae !=nil {return nil ,_gae ;};_gcaa .PdfAnnotationMarkup =_afccd ;_gcaa .Open =_gca .Get ("\u004f\u0070\u0065\u006e");_gcaa .Name =_gca .Get ("\u004e\u0061\u006d\u0065");_gcaa .State =_gca .Get ("\u0053\u0074\u0061t\u0065");_gcaa .StateModel =_gca .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gcaa ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_fgaa *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _fgaa .Alternate ==nil {_ad .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _fgaa .N ==1{_ad .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_efd :=NewPdfColorspaceDeviceGray ();return _efd .ImageToRGB (img );}else if _fgaa .N ==3{_ad .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _fgaa .N ==4{_ad .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_cfde :=NewPdfColorspaceDeviceCMYK ();return _cfde .ImageToRGB (img );}else {return img ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ad .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_fgaa );_gefg ,_fgag :=_fgaa .Alternate .ImageToRGB (img );_ad .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ad .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_gefg );return _gefg ,_fgag ;};

// AddFont adds a font dictionary to the Font resources.
func (_dbcf *PdfPage )AddFont (name _bcf .PdfObjectName ,font _bcf .PdfObject )error {if _dbcf .Resources ==nil {_dbcf .Resources =NewPdfPageResources ();};if _dbcf .Resources .Font ==nil {_dbcf .Resources .Font =_bcf .MakeDict ();};_dfag ,_gfbb :=_bcf .TraceToDirectObject (_dbcf .Resources .Font ).(*_bcf .PdfObjectDictionary );if !_gfbb {_ad .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bcf .TraceToDirectObject (_dbcf .Resources .Font ));return _f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfag .Set (name ,font );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_befg *PdfAnnotationTrapNet )ToPdfObject ()_bcf .PdfObject {_befg .PdfAnnotation .ToPdfObject ();_aefb :=_befg ._fab ;_eaeb :=_aefb .PdfObject .(*_bcf .PdfObjectDictionary );_eaeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _aefb ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_caeac *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _caeac .MediaBox !=nil {return _caeac .MediaBox ,nil ;};_ebab :=_caeac .Parent ;for _ebab !=nil {_dffc ,_adcede :=_bcf .GetDict (_ebab );if !_adcede {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _ebfg :=_dffc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ebfg !=nil {_cdbgbe ,_fddcgg :=_bcf .GetArray (_ebfg );if !_fddcgg {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_adae ,_dcfag :=NewPdfRectangle (*_cdbgbe );if _dcfag !=nil {return nil ,_dcfag ;};return _adae ,nil ;};_ebab =_dffc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_f .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};func _cdad (_gfdeg _bcf .PdfObject )(*PdfColorspaceDeviceN ,error ){_dccc :=NewPdfColorspaceDeviceN ();if _aabce ,_daaag :=_gfdeg .(*_bcf .PdfIndirectObject );_daaag {_dccc ._fedab =_aabce ;};_gfdeg =_bcf .TraceToDirectObject (_gfdeg );_cfdf ,_ddab :=_gfdeg .(*_bcf .PdfObjectArray );if !_ddab {return nil ,_bc .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _cfdf .Len ()!=4&&_cfdf .Len ()!=5{return nil ,_bc .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gfdeg =_cfdf .Get (0);_dfedg ,_ddab :=_gfdeg .(*_bcf .PdfObjectName );if !_ddab {return nil ,_bc .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_dfedg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_bc .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gfdeg =_cfdf .Get (1);_gfdeg =_bcf .TraceToDirectObject (_gfdeg );_beef ,_ddab :=_gfdeg .(*_bcf .PdfObjectArray );if !_ddab {return nil ,_bc .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_dccc .ColorantNames =_beef ;_gfdeg =_cfdf .Get (2);_eafea ,_geaad :=NewPdfColorspaceFromPdfObject (_gfdeg );if _geaad !=nil {return nil ,_geaad ;};_dccc .AlternateSpace =_eafea ;_cfgf ,_geaad :=_afag (_cfdf .Get (3));if _geaad !=nil {return nil ,_geaad ;};_dccc .TintTransform =_cfgf ;if _cfdf .Len ()==5{_dedb ,_gdbc :=_bbcg (_cfdf .Get (4));if _gdbc !=nil {return nil ,_gdbc ;};_dccc .Attributes =_dedb ;};return _dccc ,nil ;};func (_bfae *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_afebg *PdfPage )ToPdfObject ()_bcf .PdfObject {_ecgdg :=_afebg ._cbaab ;_afebg .GetPageDict ();return _ecgdg ;};

// SetContext sets the sub annotation (context).
func (_fec *PdfAnnotation )SetContext (ctx PdfModel ){_fec ._ffb =ctx };

// ToInteger convert to an integer format.
func (_adgg *PdfColorLab )ToInteger (bits int )[3]uint32 {_ddee :=_db .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ddee *_adgg .L ()),uint32 (_ddee *_adgg .A ()),uint32 (_ddee *_adgg .B ())};};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_eafeb :_bcf .MakeIndirectObject (_bcf .MakeDict ())};};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_eafd _bcf .PdfObject ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cbge *PdfReader )GetNamedDestinations ()(_bcf .PdfObject ,error ){_dfdae :=_bcf .ResolveReference (_cbge ._fbcgg .Get ("\u004e\u0061\u006de\u0073"));if _dfdae ==nil {return nil ,nil ;};if !_cbge ._eddddc {_cfdee :=_cbge .traverseObjectData (_dfdae );if _cfdee !=nil {return nil ,_cfdee ;};};return _dfdae ,nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bcf .PdfObjectName ;Colorants _bcf .PdfObject ;Process _bcf .PdfObject ;MixingHints _bcf .PdfObject ;_fbeca *_bcf .PdfIndirectObject ;};func _agcdb (_ccffc _bcf .PdfObject ,_ceeeg *PdfReader )(*OutlineDest ,error ){_ecbc ,_fadcbe :=_bcf .GetArray (_ccffc );if !_fadcbe {return nil ,_f .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_aebea :=_ecbc .Len ();if _aebea < 2{return nil ,_bc .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_aebea );};_fcecf :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_aeff :=_ecbc .Get (0);if _eeacf ,_gebcd :=_bcf .GetIndirect (_aeff );_gebcd {if _ ,_dfccc ,_cadd :=_ceeeg .PageFromIndirectObject (_eeacf );_cadd ==nil {_fcecf .Page =int64 (_dfccc -1);}else {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_eeacf );};_fcecf .PageObj =_eeacf ;}else if _fcea ,_fbgdd :=_bcf .GetIntVal (_aeff );_fbgdd {if _fcea >=0&&_fcea < len (_ceeeg .PageList ){_fcecf .PageObj =_ceeeg .PageList [_fcea ].GetPageAsIndirectObject ();}else {_ad .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_fcea );};_fcecf .Page =int64 (_fcea );}else {return nil ,_bc .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_aeff );};_bbfdd ,_fadcbe :=_bcf .GetNameVal (_ecbc .Get (1));if !_fadcbe {_ad .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_ecbc .Get (1));return _fcecf ,nil ;};switch _bbfdd {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _aebea > 2{_fcecf .Y ,_ =_bcf .GetNumberAsFloat (_bcf .TraceToDirectObject (_ecbc .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _aebea > 2{_fcecf .X ,_ =_bcf .GetNumberAsFloat (_bcf .TraceToDirectObject (_ecbc .Get (2)));};case "\u0058\u0059\u005a":if _aebea > 4{_fcecf .X ,_ =_bcf .GetNumberAsFloat (_bcf .TraceToDirectObject (_ecbc .Get (2)));_fcecf .Y ,_ =_bcf .GetNumberAsFloat (_bcf .TraceToDirectObject (_ecbc .Get (3)));_fcecf .Zoom ,_ =_bcf .GetNumberAsFloat (_bcf .TraceToDirectObject (_ecbc .Get (4)));};default:_bbfdd ="\u0046\u0069\u0074";};_fcecf .Mode =_bbfdd ;return _fcecf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcc *PdfActionThread )ToPdfObject ()_bcf .PdfObject {_dcc .PdfAction .ToPdfObject ();_aac :=_dcc ._ge ;_bdc :=_aac .PdfObject .(*_bcf .PdfObjectDictionary );_bdc .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeThread )));if _dcc .F !=nil {_bdc .Set ("\u0046",_dcc .F .ToPdfObject ());};_bdc .SetIfNotNil ("\u0044",_dcc .D );_bdc .SetIfNotNil ("\u0042",_dcc .B );return _aac ;};func _eaeae ()string {return _ad .Version };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_dcaf :=NewPdfAnnotation ();_afd :=&PdfAnnotationWidget {};_afd .PdfAnnotation =_dcaf ;_dcaf .SetContext (_afd );return _afd ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_adegc *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbb ,_feebf :=_bcf .GetNumbersAsFloat (objects );if _feebf !=nil {return nil ,_feebf ;};return _adegc .ColorFromFloats (_gdbb );};

// Width returns the width of `rect`.
func (_ccagf *PdfRectangle )Width ()float64 {return _db .Abs (_ccagf .Urx -_ccagf .Llx )};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fcbfg DefaultImageHandler )NewGrayImageFromGoImage (goimg _g .Image )(*Image ,error ){_cbde :=goimg .Bounds ();_fddfgf :=&Image {Width :int64 (_cbde .Dx ()),Height :int64 (_cbde .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _bgdfe :=goimg .(type ){case *_g .Gray :if len (_bgdfe .Pix )!=_cbde .Dx ()*_cbde .Dy (){_dcgbb ,_dcade :=_ceb .GrayConverter .Convert (goimg );if _dcade !=nil {return nil ,_dcade ;};_fddfgf .Data =_dcgbb .Pix ();}else {_fddfgf .Data =_bgdfe .Pix ;};case *_g .Gray16 :_fddfgf .BitsPerComponent =16;if len (_bgdfe .Pix )!=_cbde .Dx ()*_cbde .Dy ()*2{_gaab ,_dcede :=_ceb .Gray16Converter .Convert (goimg );if _dcede !=nil {return nil ,_dcede ;};_fddfgf .Data =_gaab .Pix ();}else {_fddfgf .Data =_bgdfe .Pix ;};default:_cdaac ,_bafa :=_ceb .GrayConverter .Convert (goimg );if _bafa !=nil {return nil ,_bafa ;};_fddfgf .Data =_cdaac .Pix ();};return _fddfgf ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_beb :=NewPdfAction ();_dada :=&PdfActionLaunch {};_dada .PdfAction =_beb ;_beb .SetContext (_dada );return _dada ;};func _aaadc (_accba string )(map[_dc .CharCode ]_dc .GlyphName ,error ){_ebgfc :=_be .Split (_accba ,"\u000a");_bccgc :=make (map[_dc .CharCode ]_dc .GlyphName );for _ ,_acbdc :=range _ebgfc {_badba :=_dbca .FindStringSubmatch (_acbdc );if _badba ==nil {continue ;};_dfge ,_gabb :=_badba [1],_badba [2];_gcca ,_cgaac :=_bed .Atoi (_dfge );if _cgaac !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_acbdc );return nil ,_bcf .ErrTypeError ;};_bccgc [_dc .CharCode (_gcca )]=_dc .GlyphName (_gabb );};_ad .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bccgc );return _bccgc ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gab :=NewPdfAnnotation ();_eeda :=&PdfAnnotationPopup {};_eeda .PdfAnnotation =_gab ;_gab .SetContext (_eeda );return _eeda ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_bdaff :=PdfColorLab {l ,a ,b };return &_bdaff };

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_fa :=NewPdfAction ();_bfb :=&PdfActionSubmitForm {};_bfb .PdfAction =_fa ;_fa .SetContext (_bfb );return _bfb ;};func _deea ()string {return _gfge };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcf .PdfObject ;IC _bcf .PdfObject ;RO _bcf .PdfObject ;OverlayText _bcf .PdfObject ;Repeat _bcf .PdfObject ;DA _bcf .PdfObject ;Q _bcf .PdfObject ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// String returns a string that describes `font`.
func (_cgdd *PdfFont )String ()string {_ccbbb :="";if _cgdd ._cefc .Encoder ()!=nil {_ccbbb =_cgdd ._cefc .Encoder ().String ();};return _bc .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_cgdd ._cefc ,_cgdd .baseFields ().coreString (),_ccbbb );};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_bdfc *PdfReader )GetObjectNums ()[]int {return _bdfc ._eagdg .GetObjectNums ()};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bcf .PdfObject ;H _bcf .PdfObject ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_dad *PdfAction )GetContext ()PdfModel {if _dad ==nil {return nil ;};return _dad ._cec ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_fb *PdfReader )newPdfActionFromIndirectObject (_ggd *_bcf .PdfIndirectObject )(*PdfAction ,error ){_fba ,_dca :=_ggd .PdfObject .(*_bcf .PdfObjectDictionary );if !_dca {return nil ,_bc .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_fb ._adaff .GetModelFromPrimitive (_fba );model !=nil {_cff ,_fg :=model .(*PdfAction );if !_fg {return nil ,_bc .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _cff ,nil ;};_bfef :=&PdfAction {};_bfef ._ge =_ggd ;_fb ._adaff .Register (_fba ,_bfef );if _dge :=_fba .Get ("\u0054\u0079\u0070\u0065");_dge !=nil {_bec ,_gbg :=_dge .(*_bcf .PdfObjectName );if !_gbg {_ad .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dge );}else {if *_bec !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ad .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bec );};_bfef .Type =_bec ;};};if _eaf :=_fba .Get ("\u004e\u0065\u0078\u0074");_eaf !=nil {_bfef .Next =_eaf ;};if _dfgb :=_fba .Get ("\u0053");_dfgb !=nil {_bfef .S =_dfgb ;};_cca ,_cd :=_bfef .S .(*_bcf .PdfObjectName );if !_cd {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bfef .S );return nil ,_bc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bfef .S );};_fgc :=PdfActionType (_cca .String ());switch _fgc {case ActionTypeGoTo :_ebd ,_cfg :=_fb .newPdfActionGotoFromDict (_fba );if _cfg !=nil {return nil ,_cfg ;};_ebd .PdfAction =_bfef ;_bfef ._cec =_ebd ;return _bfef ,nil ;case ActionTypeGoToR :_fcg ,_adb :=_fb .newPdfActionGotoRFromDict (_fba );if _adb !=nil {return nil ,_adb ;};_fcg .PdfAction =_bfef ;_bfef ._cec =_fcg ;return _bfef ,nil ;case ActionTypeGoToE :_cdc ,_bdb :=_fb .newPdfActionGotoEFromDict (_fba );if _bdb !=nil {return nil ,_bdb ;};_cdc .PdfAction =_bfef ;_bfef ._cec =_cdc ;return _bfef ,nil ;case ActionTypeLaunch :_bbg ,_af :=_fb .newPdfActionLaunchFromDict (_fba );if _af !=nil {return nil ,_af ;};_bbg .PdfAction =_bfef ;_bfef ._cec =_bbg ;return _bfef ,nil ;case ActionTypeThread :_dfb ,_eab :=_fb .newPdfActionThreadFromDict (_fba );if _eab !=nil {return nil ,_eab ;};_dfb .PdfAction =_bfef ;_bfef ._cec =_dfb ;return _bfef ,nil ;case ActionTypeURI :_egag ,_aed :=_fb .newPdfActionURIFromDict (_fba );if _aed !=nil {return nil ,_aed ;};_egag .PdfAction =_bfef ;_bfef ._cec =_egag ;return _bfef ,nil ;case ActionTypeSound :_cfgc ,_cdg :=_fb .newPdfActionSoundFromDict (_fba );if _cdg !=nil {return nil ,_cdg ;};_cfgc .PdfAction =_bfef ;_bfef ._cec =_cfgc ;return _bfef ,nil ;case ActionTypeMovie :_ecdg ,_acfb :=_fb .newPdfActionMovieFromDict (_fba );if _acfb !=nil {return nil ,_acfb ;};_ecdg .PdfAction =_bfef ;_bfef ._cec =_ecdg ;return _bfef ,nil ;case ActionTypeHide :_ga ,_de :=_fb .newPdfActionHideFromDict (_fba );if _de !=nil {return nil ,_de ;};_ga .PdfAction =_bfef ;_bfef ._cec =_ga ;return _bfef ,nil ;case ActionTypeNamed :_aba ,_bdbg :=_fb .newPdfActionNamedFromDict (_fba );if _bdbg !=nil {return nil ,_bdbg ;};_aba .PdfAction =_bfef ;_bfef ._cec =_aba ;return _bfef ,nil ;case ActionTypeSubmitForm :_ff ,_cgg :=_fb .newPdfActionSubmitFormFromDict (_fba );if _cgg !=nil {return nil ,_cgg ;};_ff .PdfAction =_bfef ;_bfef ._cec =_ff ;return _bfef ,nil ;case ActionTypeResetForm :_bce ,_fce :=_fb .newPdfActionResetFormFromDict (_fba );if _fce !=nil {return nil ,_fce ;};_bce .PdfAction =_bfef ;_bfef ._cec =_bce ;return _bfef ,nil ;case ActionTypeImportData :_aeg ,_bcd :=_fb .newPdfActionImportDataFromDict (_fba );if _bcd !=nil {return nil ,_bcd ;};_aeg .PdfAction =_bfef ;_bfef ._cec =_aeg ;return _bfef ,nil ;case ActionTypeSetOCGState :_gbc ,_cbcd :=_fb .newPdfActionSetOCGStateFromDict (_fba );if _cbcd !=nil {return nil ,_cbcd ;};_gbc .PdfAction =_bfef ;_bfef ._cec =_gbc ;return _bfef ,nil ;case ActionTypeRendition :_cbb ,_aag :=_fb .newPdfActionRenditionFromDict (_fba );if _aag !=nil {return nil ,_aag ;};_cbb .PdfAction =_bfef ;_bfef ._cec =_cbb ;return _bfef ,nil ;case ActionTypeTrans :_fag ,_eae :=_fb .newPdfActionTransFromDict (_fba );if _eae !=nil {return nil ,_eae ;};_fag .PdfAction =_bfef ;_bfef ._cec =_fag ;return _bfef ,nil ;case ActionTypeGoTo3DView :_aege ,_ggdc :=_fb .newPdfActionGoTo3DViewFromDict (_fba );if _ggdc !=nil {return nil ,_ggdc ;};_aege .PdfAction =_bfef ;_bfef ._cec =_aege ;return _bfef ,nil ;case ActionTypeJavaScript :_agc ,_dbf :=_fb .newPdfActionJavaScriptFromDict (_fba );if _dbf !=nil {return nil ,_dbf ;};_agc .PdfAction =_bfef ;_bfef ._cec =_agc ;return _bfef ,nil ;};_ad .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fgc );return nil ,nil ;};func _cbadc (_ccgc *_bcf .PdfObjectDictionary )(*PdfShadingType4 ,error ){_geacg :=PdfShadingType4 {};_egacc :=_ccgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _egacc ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_daaagb ,_ecbbf :=_egacc .(*_bcf .PdfObjectInteger );if !_ecbbf {_ad .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egacc );return nil ,_bcf .ErrTypeError ;};_geacg .BitsPerCoordinate =_daaagb ;_egacc =_ccgc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _egacc ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_daaagb ,_ecbbf =_egacc .(*_bcf .PdfObjectInteger );if !_ecbbf {_ad .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_egacc );return nil ,_bcf .ErrTypeError ;};_geacg .BitsPerComponent =_daaagb ;_egacc =_ccgc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _egacc ==nil {_ad .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_daaagb ,_ecbbf =_egacc .(*_bcf .PdfObjectInteger );if !_ecbbf {_ad .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_egacc );return nil ,_bcf .ErrTypeError ;};_geacg .BitsPerComponent =_daaagb ;_egacc =_ccgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _egacc ==nil {_ad .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_fdcfg ,_ecbbf :=_egacc .(*_bcf .PdfObjectArray );if !_ecbbf {_ad .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egacc );return nil ,_bcf .ErrTypeError ;};_geacg .Decode =_fdcfg ;_egacc =_ccgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _egacc ==nil {_ad .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_geacg .Function =[]PdfFunction {};if _ccfag ,_ffcg :=_egacc .(*_bcf .PdfObjectArray );_ffcg {for _ ,_acbgd :=range _ccfag .Elements (){_dcbafc ,_gdacf :=_afag (_acbgd );if _gdacf !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdacf );return nil ,_gdacf ;};_geacg .Function =append (_geacg .Function ,_dcbafc );};}else {_edeca ,_dbafac :=_afag (_egacc );if _dbafac !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbafac );return nil ,_dbafac ;};_geacg .Function =append (_geacg .Function ,_edeca );};return &_geacg ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gabe ,_dgfb :=_ed .Open (filePath );if _dgfb !=nil {_ad .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dgfb );return nil ,_dgfb ;};defer _gabe .Close ();return NewCompositePdfFontFromTTF (_gabe );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dgag *PdfShadingType2 )ToPdfObject ()_bcf .PdfObject {_dgag .PdfShading .ToPdfObject ();_ebcae ,_fagc :=_dgag .getShadingDict ();if _fagc !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ebcae ==nil {_ad .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _dgag .Coords !=nil {_ebcae .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_dgag .Coords );};if _dgag .Domain !=nil {_ebcae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgag .Domain );};if _dgag .Function !=nil {if len (_dgag .Function )==1{_ebcae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgag .Function [0].ToPdfObject ());}else {_gdec :=_bcf .MakeArray ();for _ ,_agbc :=range _dgag .Function {_gdec .Append (_agbc .ToPdfObject ());};_ebcae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdec );};};if _dgag .Extend !=nil {_ebcae .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_dgag .Extend );};return _dgag ._aeddc ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_ddda :=&PdfColorspaceCalRGB {};_ddda .BlackPoint =[]float64 {0.0,0.0,0.0};_ddda .Gamma =[]float64 {1.0,1.0,1.0};_ddda .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _ddda ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bcf .PdfObject ;Volume _bcf .PdfObject ;Synchronous _bcf .PdfObject ;Repeat _bcf .PdfObject ;Mix _bcf .PdfObject ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_egefd *PdfPageResources )SetShadingByName (keyName _bcf .PdfObjectName ,shadingObj _bcf .PdfObject )error {if _egefd .Shading ==nil {_egefd .Shading =_bcf .MakeDict ();};_dgff ,_gffba :=_egefd .Shading .(*_bcf .PdfObjectDictionary );if !_gffba {return _bcf .ErrTypeError ;};_dgff .Set (keyName ,shadingObj );return nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_abff *PdfFieldButton )IsRadio ()bool {return _abff .GetType ()==ButtonTypeRadio };

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bcf .PdfObjectArray ;Domain *_bcf .PdfObjectArray ;Function []PdfFunction ;Extend *_bcf .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_ccg *PdfAnnotationFreeText )ToPdfObject ()_bcf .PdfObject {_ccg .PdfAnnotation .ToPdfObject ();_bdaa :=_ccg ._fab ;_ecfb :=_bdaa .PdfObject .(*_bcf .PdfObjectDictionary );_ccg .PdfAnnotationMarkup .appendToPdfDictionary (_ecfb );_ecfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_ecfb .SetIfNotNil ("\u0044\u0041",_ccg .DA );_ecfb .SetIfNotNil ("\u0051",_ccg .Q );_ecfb .SetIfNotNil ("\u0052\u0043",_ccg .RC );_ecfb .SetIfNotNil ("\u0044\u0053",_ccg .DS );_ecfb .SetIfNotNil ("\u0043\u004c",_ccg .CL );_ecfb .SetIfNotNil ("\u0049\u0054",_ccg .IT );_ecfb .SetIfNotNil ("\u0042\u0045",_ccg .BE );_ecfb .SetIfNotNil ("\u0052\u0044",_ccg .RD );_ecfb .SetIfNotNil ("\u0042\u0053",_ccg .BS );_ecfb .SetIfNotNil ("\u004c\u0045",_ccg .LE );return _bdaa ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_gafd *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=_gafd .GetNumComponents (){return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cabba ,_ddfcc :=_bcf .GetNumbersAsFloat (objects );if _ddfcc !=nil {return nil ,_ddfcc ;};return _gafd .ColorFromFloats (_cabba );};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bcf .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bcf .PdfObject ;Contents _bcf .PdfObject ;Rotate *int64 ;Group _bcf .PdfObject ;Thumb _bcf .PdfObject ;B _bcf .PdfObject ;Dur _bcf .PdfObject ;Trans _bcf .PdfObject ;AA _bcf .PdfObject ;Metadata _bcf .PdfObject ;PieceInfo _bcf .PdfObject ;StructParents _bcf .PdfObject ;ID _bcf .PdfObject ;PZ _bcf .PdfObject ;SeparationInfo _bcf .PdfObject ;Tabs _bcf .PdfObject ;TemplateInstantiated _bcf .PdfObject ;PresSteps _bcf .PdfObject ;UserUnit _bcf .PdfObject ;VP _bcf .PdfObject ;Annots _bcf .PdfObject ;_gbgd []*PdfAnnotation ;_dbafe *_bcf .PdfObjectDictionary ;_cbaab *_bcf .PdfIndirectObject ;_fccg *PdfReader ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_fbgec PdfModel ;_gebbd _bcf .PdfObject ;};func _bfbc ()string {return _cfgfa };

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ebf :=NewPdfAction ();_bee :=&PdfActionImportData {};_bee .PdfAction =_ebf ;_ebf .SetContext (_bee );return _bee ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gcgf *PdfColorspaceDeviceCMYK )ToPdfObject ()_bcf .PdfObject {return _bcf .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_dfc *PdfReader )newPdfAnnotationTrapNetFromDict (_bgg *_bcf .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gaec :=PdfAnnotationTrapNet {};return &_gaec ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bcf .PdfObject ;MK _bcf .PdfObject ;A _bcf .PdfObject ;AA _bcf .PdfObject ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bcf .PdfObject ;BS _bcf .PdfObject ;};func _aagag (_efcab _bcf .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cabcf :=&PdfPageResourcesColorspaces {};if _gece ,_aedgb :=_efcab .(*_bcf .PdfIndirectObject );_aedgb {_cabcf ._acfbd =_gece ;_efcab =_gece .PdfObject ;};_caae ,_cbedb :=_bcf .GetDict (_efcab );if !_cbedb {return nil ,_f .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cabcf .Names =[]string {};_cabcf .Colorspaces =map[string ]PdfColorspace {};for _ ,_bffga :=range _caae .Keys (){_fabgf :=_caae .Get (_bffga );_cabcf .Names =append (_cabcf .Names ,string (_bffga ));_aaaf ,_cdfg :=NewPdfColorspaceFromPdfObject (_fabgf );if _cdfg !=nil {return nil ,_cdfg ;};_cabcf .Colorspaces [string (_bffga )]=_aaaf ;};return _cabcf ,nil ;};func (_edddb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_edddb .fontCommon };

// ToPdfObject returns the PDF representation of the page resources.
func (_cecfg *PdfPageResources )ToPdfObject ()_bcf .PdfObject {_cbgeg :=_cecfg ._agfbd ;_cbgeg .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cecfg .ExtGState );if _cecfg ._aggdc !=nil {_cecfg .ColorSpace =_cecfg ._aggdc .ToPdfObject ();};_cbgeg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cecfg .ColorSpace );_cbgeg .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_cecfg .Pattern );_cbgeg .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cecfg .Shading );_cbgeg .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_cecfg .XObject );_cbgeg .SetIfNotNil ("\u0046\u006f\u006e\u0074",_cecfg .Font );_cbgeg .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_cecfg .ProcSet );_cbgeg .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_cecfg .Properties );return _cbgeg ;};func (_egbab *PdfReader )newPdfAnnotationPopupFromDict (_fdgb *_bcf .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_gacg :=PdfAnnotationPopup {};_gacg .Parent =_fdgb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gacg .Open =_fdgb .Get ("\u004f\u0070\u0065\u006e");return &_gacg ,nil ;};func _geec (_bcfb *_bcf .PdfObjectDictionary )(*PdfFieldText ,error ){_afbdf :=&PdfFieldText {};_afbdf .DA ,_ =_bcf .GetString (_bcfb .Get ("\u0044\u0041"));_afbdf .Q ,_ =_bcf .GetInt (_bcfb .Get ("\u0051"));_afbdf .DS ,_ =_bcf .GetString (_bcfb .Get ("\u0044\u0053"));_afbdf .RV =_bcfb .Get ("\u0052\u0056");_afbdf .MaxLen ,_ =_bcf .GetInt (_bcfb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _afbdf ,nil ;};func _gcde (_cddf *XObjectImage )error {if _cddf .SMask ==nil {return nil ;};_agfe ,_ecbcf :=_cddf .SMask .(*_bcf .PdfObjectStream );if !_ecbcf {_ad .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _bcf .ErrTypeError ;};_ebegb :=_agfe .PdfObjectDictionary ;_faaf :=_ebegb .Get ("\u004d\u0061\u0074t\u0065");if _faaf ==nil {return nil ;};_gbeae ,_fggb :=_bafaa (_faaf .(*_bcf .PdfObjectArray ));if _fggb !=nil {return _fggb ;};_ecdad :=_bcf .MakeArrayFromFloats ([]float64 {_gbeae });_ebegb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ecdad );return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bfbg *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfed :=vals [0];if _dfed < 0.0||_dfed > 100.0{_ad .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dfed );return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcb :=vals [1];_egfd :=float64 (-100);_fdbb :=float64 (100);if len (_bfbg .Range )> 1{_egfd =_bfbg .Range [0];_fdbb =_bfbg .Range [1];};if _bgcb < _egfd ||_bgcb > _fdbb {_ad .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bgcb ,_egfd ,_fdbb );return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddgf :=vals [2];_cacb :=float64 (-100);_bgdc :=float64 (100);if len (_bfbg .Range )> 3{_cacb =_bfbg .Range [2];_bgdc =_bfbg .Range [3];};if _ddgf < _cacb ||_ddgf > _bgdc {_ad .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ddgf ,_cacb ,_bgdc );return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eddb :=NewPdfColorLab (_dfed ,_bgcb ,_ddgf );return _eddb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dff *PdfAnnotationScreen )ToPdfObject ()_bcf .PdfObject {_dff .PdfAnnotation .ToPdfObject ();_fdce :=_dff ._fab ;_ebfe :=_fdce .PdfObject .(*_bcf .PdfObjectDictionary );_ebfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_ebfe .SetIfNotNil ("\u0054",_dff .T );_ebfe .SetIfNotNil ("\u004d\u004b",_dff .MK );_ebfe .SetIfNotNil ("\u0041",_dff .A );_ebfe .SetIfNotNil ("\u0041\u0041",_dff .AA );return _fdce ;};type pdfFont interface{_cb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bcf .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_ebcf *PdfAnnotationPolygon )ToPdfObject ()_bcf .PdfObject {_ebcf .PdfAnnotation .ToPdfObject ();_dde :=_ebcf ._fab ;_fgefb :=_dde .PdfObject .(*_bcf .PdfObjectDictionary );_ebcf .PdfAnnotationMarkup .appendToPdfDictionary (_fgefb );_fgefb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_fgefb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ebcf .Vertices );_fgefb .SetIfNotNil ("\u004c\u0045",_ebcf .LE );_fgefb .SetIfNotNil ("\u0042\u0053",_ebcf .BS );_fgefb .SetIfNotNil ("\u0049\u0043",_ebcf .IC );_fgefb .SetIfNotNil ("\u0042\u0045",_ebcf .BE );_fgefb .SetIfNotNil ("\u0049\u0054",_ebcf .IT );_fgefb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ebcf .Measure );return _dde ;};type pdfCIDFontType2 struct{fontCommon ;_gdff *_bcf .PdfIndirectObject ;_ageg _dc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bcf .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bcf .PdfObject ;W _bcf .PdfObject ;DW2 _bcf .PdfObject ;W2 _bcf .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bcf .PdfObject ;_cbea map[_dc .CharCode ]float64 ;_bafc float64 ;_bdgf map[rune ]int ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_fabdd *PdfColorspaceDeviceN )ToPdfObject ()_bcf .PdfObject {_bafd :=_bcf .MakeArray (_bcf .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bafd .Append (_fabdd .ColorantNames );_bafd .Append (_fabdd .AlternateSpace .ToPdfObject ());_bafd .Append (_fabdd .TintTransform .ToPdfObject ());if _fabdd .Attributes !=nil {_bafd .Append (_fabdd .Attributes .ToPdfObject ());};if _fabdd ._fedab !=nil {_fabdd ._fedab .PdfObject =_bafd ;return _fabdd ._fedab ;};return _bafd ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_fgee *PdfFieldButton )IsPush ()bool {return _fgee .GetType ()==ButtonTypePush };

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_adfe *PdfFont )ToPdfObject ()_bcf .PdfObject {if _adfe ._cefc ==nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bcf .MakeNull ();};return _adfe ._cefc .ToPdfObject ();};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_abacb *PdfField )SetContext (ctx PdfModel ){_abacb ._dggcd =ctx };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bged *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bged .Base .GetNumComponents ();_bbaeb :=int (vals [0])*N ;if _bbaeb < 0||(_bbaeb +N -1)>=len (_bged ._cegc ){return nil ,_f .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_becbc :=_bged ._cegc [_bbaeb :_bbaeb +N ];var _cdd []float64 ;for _ ,_cbfb :=range _becbc {_cdd =append (_cdd ,float64 (_cbfb )/255.0);};_cagg ,_ffeb :=_bged .Base .ColorFromFloats (_cdd );if _ffeb !=nil {return nil ,_ffeb ;};return _cagg ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_cfgg *PdfFontDescriptor )ToPdfObject ()_bcf .PdfObject {_aaef :=_bcf .MakeDict ();if _cfgg ._aaea ==nil {_cfgg ._aaea =&_bcf .PdfIndirectObject {};};_cfgg ._aaea .PdfObject =_aaef ;_aaef .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _cfgg .FontName !=nil {_aaef .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cfgg .FontName );};if _cfgg .FontFamily !=nil {_aaef .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_cfgg .FontFamily );};if _cfgg .FontStretch !=nil {_aaef .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_cfgg .FontStretch );};if _cfgg .FontWeight !=nil {_aaef .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_cfgg .FontWeight );};if _cfgg .Flags !=nil {_aaef .Set ("\u0046\u006c\u0061g\u0073",_cfgg .Flags );};if _cfgg .FontBBox !=nil {_aaef .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cfgg .FontBBox );};if _cfgg .ItalicAngle !=nil {_aaef .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_cfgg .ItalicAngle );};if _cfgg .Ascent !=nil {_aaef .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_cfgg .Ascent );};if _cfgg .Descent !=nil {_aaef .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_cfgg .Descent );};if _cfgg .Leading !=nil {_aaef .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_cfgg .Leading );};if _cfgg .CapHeight !=nil {_aaef .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_cfgg .CapHeight );};if _cfgg .XHeight !=nil {_aaef .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_cfgg .XHeight );};if _cfgg .StemV !=nil {_aaef .Set ("\u0053\u0074\u0065m\u0056",_cfgg .StemV );};if _cfgg .StemH !=nil {_aaef .Set ("\u0053\u0074\u0065m\u0048",_cfgg .StemH );};if _cfgg .AvgWidth !=nil {_aaef .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_cfgg .AvgWidth );};if _cfgg .MaxWidth !=nil {_aaef .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_cfgg .MaxWidth );};if _cfgg .MissingWidth !=nil {_aaef .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_cfgg .MissingWidth );};if _cfgg .FontFile !=nil {_aaef .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_cfgg .FontFile );};if _cfgg .FontFile2 !=nil {_aaef .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_cfgg .FontFile2 );};if _cfgg .FontFile3 !=nil {_aaef .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_cfgg .FontFile3 );};if _cfgg .CharSet !=nil {_aaef .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_cfgg .CharSet );};if _cfgg .Style !=nil {_aaef .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cfgg .FontName );};if _cfgg .Lang !=nil {_aaef .Set ("\u004c\u0061\u006e\u0067",_cfgg .Lang );};if _cfgg .FD !=nil {_aaef .Set ("\u0046\u0044",_cfgg .FD );};if _cfgg .CIDSet !=nil {_aaef .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_cfgg .CIDSet );};return _cfgg ._aaea ;};func (_dgebg *fontFile )loadFromSegments (_cgaff ,_ddaeb []byte )error {_ad .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cgaff ),len (_ddaeb ));_efabe :=_dgebg .parseASCIIPart (_cgaff );if _efabe !=nil {return _efabe ;};_ad .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_dgebg );if len (_ddaeb )==0{return nil ;};_ad .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_dgebg );return nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_fffde *PdfFieldText )ToPdfObject ()_bcf .PdfObject {_fffde .PdfField .ToPdfObject ();_cabbae :=_fffde ._egegf ;_fdccd :=_cabbae .PdfObject .(*_bcf .PdfObjectDictionary );_fdccd .Set ("\u0046\u0054",_bcf .MakeName ("\u0054\u0078"));if _fffde .DA !=nil {_fdccd .Set ("\u0044\u0041",_fffde .DA );};if _fffde .Q !=nil {_fdccd .Set ("\u0051",_fffde .Q );};if _fffde .DS !=nil {_fdccd .Set ("\u0044\u0053",_fffde .DS );};if _fffde .RV !=nil {_fdccd .Set ("\u0052\u0056",_fffde .RV );};if _fffde .MaxLen !=nil {_fdccd .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_fffde .MaxLen );};return _cabbae ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ddbg *XObjectForm )GetContainingPdfObject ()_bcf .PdfObject {return _ddbg ._dcedg };const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);var (_egafe =_cc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_baec =_cc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_dbca =_cc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_bbef ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_dcffg ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_ddfb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);func _ddce (_baee *PdfField )[]*PdfField {_agcf :=[]*PdfField {_baee };for _ ,_fbacf :=range _baee .Kids {_agcf =append (_agcf ,_ddce (_fbacf )...);};return _agcf ;};

// K returns the value of the key component of the color.
func (_fadc *PdfColorDeviceCMYK )K ()float64 {return float64 (_fadc [3])};

// ToPdfObject implements interface PdfModel.
func (_adf *PdfAnnotationCaret )ToPdfObject ()_bcf .PdfObject {_adf .PdfAnnotation .ToPdfObject ();_eabf :=_adf ._fab ;_edeg :=_eabf .PdfObject .(*_bcf .PdfObjectDictionary );_adf .PdfAnnotationMarkup .appendToPdfDictionary (_edeg );_edeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0043\u0061\u0072e\u0074"));_edeg .SetIfNotNil ("\u0052\u0044",_adf .RD );_edeg .SetIfNotNil ("\u0053\u0079",_adf .Sy );return _eabf ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_fgfg *OutlineItem )ToPdfObject ()_bcf .PdfObject {_befaa ,_ :=_fgfg .ToPdfOutlineItem ();return _befaa .ToPdfObject ();};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_aagb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gbcdf *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gbcdf .AlternateSpace ==nil {return nil ,_f .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _gbcdf .AlternateSpace .ColorToRGB (color );};func (_efeb *PdfReader )loadAction (_agdg _bcf .PdfObject )(*PdfAction ,error ){if _cbcf ,_fga :=_bcf .GetIndirect (_agdg );_fga {_cfa ,_bfea :=_efeb .newPdfActionFromIndirectObject (_cbcf );if _bfea !=nil {return nil ,_bfea ;};return _cfa ,nil ;}else if !_bcf .IsNullObject (_agdg ){return nil ,_f .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};func _ageff (_gfdd _bcf .PdfObject )(*PdfFunctionType3 ,error ){_gbcg :=&PdfFunctionType3 {};var _agedf *_bcf .PdfObjectDictionary ;if _daacf ,_ggafc :=_gfdd .(*_bcf .PdfIndirectObject );_ggafc {_ggbcb ,_ddeb :=_daacf .PdfObject .(*_bcf .PdfObjectDictionary );if !_ddeb {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbcg ._eecg =_daacf ;_agedf =_ggbcb ;}else if _ceefb ,_cdcfe :=_gfdd .(*_bcf .PdfObjectDictionary );_cdcfe {_agedf =_ceefb ;}else {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cceda ,_bbbe :=_bcf .TraceToDirectObject (_agedf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcf .PdfObjectArray );if !_bbbe {_ad .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cceda .Len ()!=2{_ad .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ffgb ,_eegag :=_cceda .ToFloat64Array ();if _eegag !=nil {return nil ,_eegag ;};_gbcg .Domain =_ffgb ;_cceda ,_bbbe =_bcf .TraceToDirectObject (_agedf .Get ("\u0052\u0061\u006eg\u0065")).(*_bcf .PdfObjectArray );if _bbbe {if _cceda .Len ()< 0||_cceda .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ebbc ,_cgcgf :=_cceda .ToFloat64Array ();if _cgcgf !=nil {return nil ,_cgcgf ;};_gbcg .Range =_ebbc ;};_cceda ,_bbbe =_bcf .TraceToDirectObject (_agedf .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bcf .PdfObjectArray );if !_bbbe {_ad .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gbcg .Functions =[]PdfFunction {};for _ ,_afga :=range _cceda .Elements (){_ccaab ,_aecbb :=_afag (_afga );if _aecbb !=nil {return nil ,_aecbb ;};_gbcg .Functions =append (_gbcg .Functions ,_ccaab );};_cceda ,_bbbe =_bcf .TraceToDirectObject (_agedf .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bcf .PdfObjectArray );if !_bbbe {_ad .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_adbbg ,_eegag :=_cceda .ToFloat64Array ();if _eegag !=nil {return nil ,_eegag ;};_gbcg .Bounds =_adbbg ;if len (_gbcg .Bounds )!=len (_gbcg .Functions )-1{_ad .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_gbcg .Bounds ),len (_gbcg .Functions ));return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cceda ,_bbbe =_bcf .TraceToDirectObject (_agedf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bcf .PdfObjectArray );if !_bbbe {_ad .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ggea ,_eegag :=_cceda .ToFloat64Array ();if _eegag !=nil {return nil ,_eegag ;};_gbcg .Encode =_ggea ;if len (_gbcg .Encode )!=2*len (_gbcg .Functions ){_ad .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_gbcg .Encode ),len (_gbcg .Functions ));return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _gbcg ,nil ;};func (_dag *PdfReader )newPdfAnnotationFromIndirectObject (_fdae *_bcf .PdfIndirectObject )(*PdfAnnotation ,error ){_eedc ,_aagab :=_fdae .PdfObject .(*_bcf .PdfObjectDictionary );if !_aagab {return nil ,_bc .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_dag ._adaff .GetModelFromPrimitive (_eedc );model !=nil {_agbd ,_ebg :=model .(*PdfAnnotation );if !_ebg {return nil ,_bc .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _agbd ,nil ;};_dce :=&PdfAnnotation {};_dce ._fab =_fdae ;_dag ._adaff .Register (_eedc ,_dce );if _afc :=_eedc .Get ("\u0054\u0079\u0070\u0065");_afc !=nil {_fbag ,_egc :=_afc .(*_bcf .PdfObjectName );if !_egc {_ad .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afc );}else {if *_fbag !="\u0041\u006e\u006eo\u0074"{_ad .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_fbag );};};};if _gac :=_eedc .Get ("\u0052\u0065\u0063\u0074");_gac !=nil {_dce .Rect =_gac ;};if _bab :=_eedc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bab !=nil {_dce .Contents =_bab ;};if _eba :=_eedc .Get ("\u0050");_eba !=nil {_dce .P =_eba ;};if _fbdc :=_eedc .Get ("\u004e\u004d");_fbdc !=nil {_dce .NM =_fbdc ;};if _gdb :=_eedc .Get ("\u004d");_gdb !=nil {_dce .M =_gdb ;};if _efe :=_eedc .Get ("\u0046");_efe !=nil {_dce .F =_efe ;};if _cecf :=_eedc .Get ("\u0041\u0050");_cecf !=nil {_dce .AP =_cecf ;};if _gcc :=_eedc .Get ("\u0041\u0053");_gcc !=nil {_dce .AS =_gcc ;};if _fbb :=_eedc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fbb !=nil {_dce .Border =_fbb ;};if _acb :=_eedc .Get ("\u0043");_acb !=nil {_dce .C =_acb ;};if _ddcc :=_eedc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ddcc !=nil {_dce .StructParent =_ddcc ;};if _fed :=_eedc .Get ("\u004f\u0043");_fed !=nil {_dce .OC =_fed ;};_afa :=_eedc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _afa ==nil {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_dce ._ffb =nil ;return _dce ,nil ;};_ebb ,_gdac :=_afa .(*_bcf .PdfObjectName );if !_gdac {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_afa );return nil ,_bc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_afa );};switch *_ebb {case "\u0054\u0065\u0078\u0074":_fddf ,_addf :=_dag .newPdfAnnotationTextFromDict (_eedc );if _addf !=nil {return nil ,_addf ;};_fddf .PdfAnnotation =_dce ;_dce ._ffb =_fddf ;return _dce ,nil ;case "\u004c\u0069\u006e\u006b":_aacg ,_abg :=_dag .newPdfAnnotationLinkFromDict (_eedc );if _abg !=nil {return nil ,_abg ;};_aacg .PdfAnnotation =_dce ;_dce ._ffb =_aacg ;return _dce ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_edgc ,_dgd :=_dag .newPdfAnnotationFreeTextFromDict (_eedc );if _dgd !=nil {return nil ,_dgd ;};_edgc .PdfAnnotation =_dce ;_dce ._ffb =_edgc ;return _dce ,nil ;case "\u004c\u0069\u006e\u0065":_fcad ,_fdga :=_dag .newPdfAnnotationLineFromDict (_eedc );if _fdga !=nil {return nil ,_fdga ;};_fcad .PdfAnnotation =_dce ;_dce ._ffb =_fcad ;_ad .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dce ,_dce );_ad .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_fcad ,_fcad );_ad .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_fcad .PdfAnnotationMarkup ,_fcad .PdfAnnotationMarkup );return _dce ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bfc ,_ggb :=_dag .newPdfAnnotationSquareFromDict (_eedc );if _ggb !=nil {return nil ,_ggb ;};_bfc .PdfAnnotation =_dce ;_dce ._ffb =_bfc ;return _dce ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_agg ,_cbad :=_dag .newPdfAnnotationCircleFromDict (_eedc );if _cbad !=nil {return nil ,_cbad ;};_agg .PdfAnnotation =_dce ;_dce ._ffb =_agg ;return _dce ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_bfg ,_ffg :=_dag .newPdfAnnotationPolygonFromDict (_eedc );if _ffg !=nil {return nil ,_ffg ;};_bfg .PdfAnnotation =_dce ;_dce ._ffb =_bfg ;return _dce ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_ede ,_egab :=_dag .newPdfAnnotationPolyLineFromDict (_eedc );if _egab !=nil {return nil ,_egab ;};_ede .PdfAnnotation =_dce ;_dce ._ffb =_ede ;return _dce ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_aca ,_gccg :=_dag .newPdfAnnotationHighlightFromDict (_eedc );if _gccg !=nil {return nil ,_gccg ;};_aca .PdfAnnotation =_dce ;_dce ._ffb =_aca ;return _dce ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_eegd ,_cge :=_dag .newPdfAnnotationUnderlineFromDict (_eedc );if _cge !=nil {return nil ,_cge ;};_eegd .PdfAnnotation =_dce ;_dce ._ffb =_eegd ;return _dce ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bbfb ,_fbc :=_dag .newPdfAnnotationSquigglyFromDict (_eedc );if _fbc !=nil {return nil ,_fbc ;};_bbfb .PdfAnnotation =_dce ;_dce ._ffb =_bbfb ;return _dce ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_gbf ,_ggaf :=_dag .newPdfAnnotationStrikeOut (_eedc );if _ggaf !=nil {return nil ,_ggaf ;};_gbf .PdfAnnotation =_dce ;_dce ._ffb =_gbf ;return _dce ,nil ;case "\u0043\u0061\u0072e\u0074":_edgg ,_daaa :=_dag .newPdfAnnotationCaretFromDict (_eedc );if _daaa !=nil {return nil ,_daaa ;};_edgg .PdfAnnotation =_dce ;_dce ._ffb =_edgg ;return _dce ,nil ;case "\u0053\u0074\u0061m\u0070":_dba ,_fgd :=_dag .newPdfAnnotationStampFromDict (_eedc );if _fgd !=nil {return nil ,_fgd ;};_dba .PdfAnnotation =_dce ;_dce ._ffb =_dba ;return _dce ,nil ;case "\u0049\u006e\u006b":_dgaa ,_efa :=_dag .newPdfAnnotationInkFromDict (_eedc );if _efa !=nil {return nil ,_efa ;};_dgaa .PdfAnnotation =_dce ;_dce ._ffb =_dgaa ;return _dce ,nil ;case "\u0050\u006f\u0070u\u0070":_egda ,_gff :=_dag .newPdfAnnotationPopupFromDict (_eedc );if _gff !=nil {return nil ,_gff ;};_egda .PdfAnnotation =_dce ;_dce ._ffb =_egda ;return _dce ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_eedcc ,_eee :=_dag .newPdfAnnotationFileAttachmentFromDict (_eedc );if _eee !=nil {return nil ,_eee ;};_eedcc .PdfAnnotation =_dce ;_dce ._ffb =_eedcc ;return _dce ,nil ;case "\u0053\u006f\u0075n\u0064":_becc ,_bgda :=_dag .newPdfAnnotationSoundFromDict (_eedc );if _bgda !=nil {return nil ,_bgda ;};_becc .PdfAnnotation =_dce ;_dce ._ffb =_becc ;return _dce ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_fbgc ,_dcb :=_dag .newPdfAnnotationRichMediaFromDict (_eedc );if _dcb !=nil {return nil ,_dcb ;};_fbgc .PdfAnnotation =_dce ;_dce ._ffb =_fbgc ;return _dce ,nil ;case "\u004d\u006f\u0076i\u0065":_geea ,_egba :=_dag .newPdfAnnotationMovieFromDict (_eedc );if _egba !=nil {return nil ,_egba ;};_geea .PdfAnnotation =_dce ;_dce ._ffb =_geea ;return _dce ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_fea ,_acg :=_dag .newPdfAnnotationScreenFromDict (_eedc );if _acg !=nil {return nil ,_acg ;};_fea .PdfAnnotation =_dce ;_dce ._ffb =_fea ;return _dce ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_agdf ,_cgc :=_dag .newPdfAnnotationWidgetFromDict (_eedc );if _cgc !=nil {return nil ,_cgc ;};_agdf .PdfAnnotation =_dce ;_dce ._ffb =_agdf ;return _dce ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_fbgcf ,_aabb :=_dag .newPdfAnnotationPrinterMarkFromDict (_eedc );if _aabb !=nil {return nil ,_aabb ;};_fbgcf .PdfAnnotation =_dce ;_dce ._ffb =_fbgcf ;return _dce ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_eef ,_bgb :=_dag .newPdfAnnotationTrapNetFromDict (_eedc );if _bgb !=nil {return nil ,_bgb ;};_eef .PdfAnnotation =_dce ;_dce ._ffb =_eef ;return _dce ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gag ,_edd :=_dag .newPdfAnnotationWatermarkFromDict (_eedc );if _edd !=nil {return nil ,_edd ;};_gag .PdfAnnotation =_dce ;_dce ._ffb =_gag ;return _dce ,nil ;case "\u0033\u0044":_agbf ,_eeac :=_dag .newPdfAnnotation3DFromDict (_eedc );if _eeac !=nil {return nil ,_eeac ;};_agbf .PdfAnnotation =_dce ;_dce ._ffb =_agbf ;return _dce ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bffb ,_bbd :=_dag .newPdfAnnotationProjectionFromDict (_eedc );if _bbd !=nil {return nil ,_bbd ;};_bffb .PdfAnnotation =_dce ;_dce ._ffb =_bffb ;return _dce ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_dfef ,_ggbf :=_dag .newPdfAnnotationRedactFromDict (_eedc );if _ggbf !=nil {return nil ,_ggbf ;};_dfef .PdfAnnotation =_dce ;_dce ._ffb =_dfef ;return _dce ,nil ;};_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_ebb );return nil ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gaadg OutlineDest )ToPdfObject ()_bcf .PdfObject {if (_gaadg .PageObj ==nil &&_gaadg .Page < 0)||_gaadg .Mode ==""{return _bcf .MakeNull ();};_ccfcc :=_bcf .MakeArray ();if _gaadg .PageObj !=nil {_ccfcc .Append (_gaadg .PageObj );}else {_ccfcc .Append (_bcf .MakeInteger (_gaadg .Page ));};_ccfcc .Append (_bcf .MakeName (_gaadg .Mode ));switch _gaadg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_ccfcc .Append (_bcf .MakeFloat (_gaadg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_ccfcc .Append (_bcf .MakeFloat (_gaadg .X ));case "\u0058\u0059\u005a":_ccfcc .Append (_bcf .MakeFloat (_gaadg .X ));_ccfcc .Append (_bcf .MakeFloat (_gaadg .Y ));_ccfcc .Append (_bcf .MakeFloat (_gaadg .Zoom ));default:_ccfcc .Set (1,_bcf .MakeName ("\u0046\u0069\u0074"));};return _ccfcc ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bcf .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_fbgf *_bcf .PdfIndirectObject ;};func (_gfea *PdfField )inherit (_eacd func (*PdfField )bool )(bool ,error ){_deef :=map[*PdfField ]bool {};_bcbf :=false ;_gbabc :=_gfea ;for _gbabc !=nil {if _ ,_ddgec :=_deef [_gbabc ];_ddgec {return false ,_f .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_fbbb :=_eacd (_gbabc );if _fbbb {_bcbf =true ;break ;};_deef [_gbabc ]=true ;_gbabc =_gbabc .Parent ;};return _bcbf ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acbca *PdfShadingType3 )ToPdfObject ()_bcf .PdfObject {_acbca .PdfShading .ToPdfObject ();_ecggg ,_ffab :=_acbca .getShadingDict ();if _ffab !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _acbca .Coords !=nil {_ecggg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_acbca .Coords );};if _acbca .Domain !=nil {_ecggg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acbca .Domain );};if _acbca .Function !=nil {if len (_acbca .Function )==1{_ecggg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acbca .Function [0].ToPdfObject ());}else {_eagea :=_bcf .MakeArray ();for _ ,_efbgc :=range _acbca .Function {_eagea .Append (_efbgc .ToPdfObject ());};_ecggg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eagea );};};if _acbca .Extend !=nil {_ecggg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_acbca .Extend );};return _acbca ._aeddc ;};func (_fdc *PdfAnnotation )String ()string {_gggf :="";_dcfb ,_dcfg :=_fdc .ToPdfObject ().(*_bcf .PdfIndirectObject );if _dcfg {_gggf =_bc .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fdc ._ffb ,_dcfb .PdfObject .String ());};return _gggf ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_cbdcc *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_aefg :=NewPdfOutlineItem ();_aefg .Title =_bcf .MakeEncodedString (_cbdcc .Title ,true );_aefg .Dest =_cbdcc .Dest .ToPdfObject ();var _aaead []*PdfOutlineItem ;var _ffbdd int64 ;var _cabdd *PdfOutlineItem ;for _ ,_facfb :=range _cbdcc .Entries {_eebf ,_cbbf :=_facfb .ToPdfOutlineItem ();_eebf .Parent =&_aefg .PdfOutlineTreeNode ;if _cabdd !=nil {_cabdd .Next =&_eebf .PdfOutlineTreeNode ;_eebf .Prev =&_cabdd .PdfOutlineTreeNode ;};_aaead =append (_aaead ,_eebf );_ffbdd +=_cbbf ;_cabdd =_eebf ;};_cbcgc :=len (_aaead );_ffbdd +=int64 (_cbcgc );if _cbcgc > 0{_aefg .First =&_aaead [0].PdfOutlineTreeNode ;_aefg .Last =&_aaead [_cbcgc -1].PdfOutlineTreeNode ;_aefg .Count =&_ffbdd ;};return _aefg ,_ffbdd ;};

// GetOptimizer returns current PDF optimizer.
func (_cdcaf *PdfWriter )GetOptimizer ()Optimizer {return _cdcaf ._aagcc };func _fdedf ()string {return _adgac };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcf .PdfObject ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_beceg *Image )ConvertToBinary ()error {if _beceg .ColorComponents ==1&&_beceg .BitsPerComponent ==1{return nil ;};_afbga ,_fabdda :=_beceg .ToGoImage ();if _fabdda !=nil {return _fabdda ;};_fcgc ,_fabdda :=_ceb .MonochromeConverter .Convert (_afbga );if _fabdda !=nil {return _fabdda ;};_beceg .BitsPerComponent =1;_beceg .ColorComponents =1;_beceg .Data =_fcgc .Base ().Data ;return nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bcf .StreamEncoder )(*XObjectImage ,error ){_dfcbg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_dfcbg ,img ,cs ,encoder );};

// ToInteger convert to an integer format.
func (_fccf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gfcef :=_db .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gfcef *_fccf .A ()),uint32 (_gfcef *_fccf .B ()),uint32 (_gfcef *_fccf .C ())};};

// SetPatternByName sets a pattern resource specified by keyName.
func (_befed *PdfPageResources )SetPatternByName (keyName _bcf .PdfObjectName ,pattern _bcf .PdfObject )error {if _befed .Pattern ==nil {_befed .Pattern =_bcf .MakeDict ();};_afgd ,_eadec :=_befed .Pattern .(*_bcf .PdfObjectDictionary );if !_eadec {return _bcf .ErrTypeError ;};_afgd .Set (keyName ,pattern );return nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bcf .PdfObject ;};func _aebe (_feae _bcf .PdfObject ,_ebaab bool )(*PdfFont ,error ){_dggca ,_gecb ,_dbbf :=_dbae (_feae );if _dbbf !=nil {if _dbbf ==ErrType3FontNotSupported ||_dbbf ==ErrType1CFontNotSupported {_cffabf ,_dcccf :=_gggbd (_dggca ,_gecb ,nil );if _dcccf !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gecb ,_dcccf );return nil ,_dbbf ;};return &PdfFont {_cefc :_cffabf },_dbbf ;};return nil ,_dbbf ;};_gcga :=&PdfFont {};switch _gecb ._ddcbb {case "\u0054\u0079\u0070e\u0030":if !_ebaab {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gecb );return nil ,_f .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_geaf ,_dcfgb :=_adba (_dggca ,_gecb );if _dcfgb !=nil {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gecb ,_dcfgb );return nil ,_dcfgb ;};_gcga ._cefc =_geaf ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dgdd *pdfFontSimple ;_eedge ,_acfe :=_cb .NewStdFontByName (_cb .StdFontName (_gecb ._agaf ));if _acfe {_faaed :=_gefe (_eedge );_gcga ._cefc =&_faaed ;_gbeee :=_bcf .TraceToDirectObject (_faaed .ToPdfObject ());_agdc ,_gfdb ,_gggb :=_dbae (_gbeee );if _gggb !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gecb ,_faaed );return nil ,_gggb ;};for _ ,_cbeda :=range _dggca .Keys (){_agdc .Set (_cbeda ,_dggca .Get (_cbeda ));};_dgdd ,_gggb =_gggbd (_agdc ,_gfdb ,_faaed ._efgfcd );if _gggb !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gecb ,_faaed );return nil ,_gggb ;};_dgdd ._adbbb =_faaed ._adbbb ;_dgdd ._agcc =_faaed ._agcc ;}else {_dgdd ,_dbbf =_gggbd (_dggca ,_gecb ,nil );if _dbbf !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gecb ,_dbbf );return nil ,_dbbf ;};};_dbbf =_dgdd .addEncoding ();if _dbbf !=nil {return nil ,_dbbf ;};if _acfe {_dgdd .updateStandard14Font ();};if _acfe &&_dgdd ._gcdgc ==nil &&_dgdd ._efgfcd ==nil {_ad .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgdd );_ad .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_eedge );};if len (_dgdd ._adbbb )==0{_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dgdd );};_gcga ._cefc =_dgdd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_abcd ,_dcga :=_ffef (_dggca ,_gecb );if _dcga !=nil {_ad .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dcga );return nil ,_dcga ;};_gcga ._cefc =_abcd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bgea ,_faagb :=_gded (_dggca ,_gecb );if _faagb !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gecb ,_faagb );return nil ,_faagb ;};_gcga ._cefc =_bgea ;default:_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_gecb );return nil ,_bc .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gecb );};return _gcga ,nil ;};func (_cefe *pdfFontType0 )baseFields ()*fontCommon {return &_cefe .fontCommon };

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_fbcc *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_fdcc *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _f .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_gcea :=field .V ;if _gcea ==nil {return _f .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_dee :=pageNum -1;if _dee < 0||_dee > len (_fdcc ._eeeg )-1{return _bc .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gec :=_fdcc .Reader .PageList [_dee ];field .P =_gec .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bcf .MakeString (_bc .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_gec .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _fdcc ._feeec ==_fdcc ._bdfd .AcroForm {_fdcc ._feeec =_fdcc .Reader .AcroForm ;};_egg :=_fdcc ._feeec ;if _egg ==nil {_egg =NewPdfAcroForm ();};_egg .SigFlags =_bcf .MakeInteger (3);_cae :=append (_egg .AllFields (),field .PdfField );_egg .Fields =&_cae ;_fdcc .ReplaceAcroForm (_egg );_fdcc .UpdatePage (_gec );_fdcc ._eeeg [_dee ]=_gec ;return nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bcf .PdfObject ;};func (_efbgd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _efbgd ._debbe };

// String implements interface PdfObject.
func (_bde *PdfAction )String ()string {_bcfd ,_bf :=_bde .ToPdfObject ().(*_bcf .PdfIndirectObject );if _bf {return _bc .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bde ._cec ,_bcfd .PdfObject .String ());};return "";};

// WriteToFile writes the Appender output to file specified by path.
func (_dbcd *PdfAppender )WriteToFile (outputPath string )error {_fged ,_dagga :=_ed .Create (outputPath );if _dagga !=nil {return _dagga ;};defer _fged .Close ();return _dbcd .Write (_fged );};var _dbbcb _ba .Time ;

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_defd :=NewPdfAnnotation ();_gfe :=&PdfAnnotation3D {};_gfe .PdfAnnotation =_defd ;_defd .SetContext (_gfe );return _gfe ;};

// ValidateSignatures validates digital signatures in the document.
func (_daadg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _daadg .AcroForm ==nil {return nil ,nil ;};if _daadg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_cgedde *PdfSignature ;_dccdd *PdfField ;_fbcecg SignatureHandler ;};var _fdgd []*sigFieldPair ;for _ ,_ggdab :=range _daadg .AcroForm .AllFields (){if _ggdab .V ==nil {continue ;};if _aaafc ,_efedca :=_bcf .GetDict (_ggdab .V );_efedca {if _bfga ,_fgaaf :=_bcf .GetNameVal (_aaafc .Get ("\u0054\u0079\u0070\u0065"));_fgaaf &&_bfga =="\u0053\u0069\u0067"{_beaeg ,_dfebc :=_bcf .GetIndirect (_ggdab .V );if !_dfebc {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_cdadg ,_gebdg :=_daadg .newPdfSignatureFromIndirect (_beaeg );if _gebdg !=nil {return nil ,_gebdg ;};var _ededa SignatureHandler ;for _ ,_aefcb :=range handlers {if _aefcb .IsApplicable (_cdadg ){_ededa =_aefcb ;break ;};};_fdgd =append (_fdgd ,&sigFieldPair {_cgedde :_cdadg ,_dccdd :_ggdab ,_fbcecg :_ededa });};};};var _ccddc []SignatureValidationResult ;for _ ,_gadef :=range _fdgd {_eaddf :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gadef ._dccdd }};if _gadef ._fbcecg ==nil {_eaddf .Errors =append (_eaddf .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_ccddc =append (_ccddc ,_eaddf );continue ;};_gbafa ,_agaa :=_gadef ._fbcecg .NewDigest (_gadef ._cgedde );if _agaa !=nil {_eaddf .Errors =append (_eaddf .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_agaa .Error ());_ccddc =append (_ccddc ,_eaddf );continue ;};_egegc :=_gadef ._cgedde .ByteRange ;if _egegc ==nil {_eaddf .Errors =append (_eaddf .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_ccddc =append (_ccddc ,_eaddf );continue ;};for _bfcad :=0;_bfcad < _egegc .Len ();_bfcad =_bfcad +2{_gfgdd ,_ :=_bcf .GetNumberAsInt64 (_egegc .Get (_bfcad ));_ddcac ,_ :=_bcf .GetIntVal (_egegc .Get (_bfcad +1));if _ ,_daffa :=_daadg ._ebabc .Seek (_gfgdd ,_eg .SeekStart );_daffa !=nil {return nil ,_daffa ;};_gffbdd :=make ([]byte ,_ddcac );if _ ,_adaea :=_daadg ._ebabc .Read (_gffbdd );_adaea !=nil {return nil ,_adaea ;};_gbafa .Write (_gffbdd );};_begc ,_agaa :=_gadef ._fbcecg .Validate (_gadef ._cgedde ,_gbafa );if _agaa !=nil {return nil ,_agaa ;};_begc .Name =_gadef ._cgedde .Name .Decoded ();_begc .Reason =_gadef ._cgedde .Reason .Decoded ();if _gadef ._cgedde .M !=nil {_ggfe ,_ddegf :=NewPdfDate (_gadef ._cgedde .M .String ());if _ddegf !=nil {_begc .Errors =append (_begc .Errors ,_ddegf .Error ());continue ;};_begc .Date =_ggfe ;};_begc .ContactInfo =_gadef ._cgedde .ContactInfo .Decoded ();_begc .Location =_gadef ._cgedde .Location .Decoded ();_begc .Fields =_eaddf .Fields ;_ccddc =append (_ccddc ,_begc );};return _ccddc ,nil ;};func (_ege *PdfReader )newPdfAnnotationLineFromDict (_dfad *_bcf .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_fge :=PdfAnnotationLine {};_egcd ,_fedae :=_ege .newPdfAnnotationMarkupFromDict (_dfad );if _fedae !=nil {return nil ,_fedae ;};_fge .PdfAnnotationMarkup =_egcd ;_fge .L =_dfad .Get ("\u004c");_fge .BS =_dfad .Get ("\u0042\u0053");_fge .LE =_dfad .Get ("\u004c\u0045");_fge .IC =_dfad .Get ("\u0049\u0043");_fge .LL =_dfad .Get ("\u004c\u004c");_fge .LLE =_dfad .Get ("\u004c\u004c\u0045");_fge .Cap =_dfad .Get ("\u0043\u0061\u0070");_fge .IT =_dfad .Get ("\u0049\u0054");_fge .LLO =_dfad .Get ("\u004c\u004c\u004f");_fge .CP =_dfad .Get ("\u0043\u0050");_fge .Measure =_dfad .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_fge .CO =_dfad .Get ("\u0043\u004f");return &_fge ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eadddf *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ad .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_f .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_gfge =author };

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_cffd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_abba ,_eggc :=color .(*PdfColorDeviceRGB );if !_eggc {_ad .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _abba ,nil ;};func (_ffgd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _ffgd ._eagdg .GetCrypter ()!=nil &&!_ffgd ._eagdg .IsAuthenticated (){return nil ,_bc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_aacf :=_ffgd ._fbcgg ;_ffce :=_aacf .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _ffce ==nil {return nil ,nil ;};_ad .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_gddef :=_bcf .ResolveReference (_ffce );_ad .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_gddef );if _fbcaf :=_bcf .IsNullObject (_gddef );_fbcaf {_ad .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_addfaa ,_ebfbb :=_gddef .(*_bcf .PdfIndirectObject );if !_ebfbb {if _ ,_bfaeg :=_bcf .GetDict (_gddef );!_bfaeg {_ad .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_ad .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_addfaa =_bcf .MakeIndirectObject (_gddef );};_fded ,_ebfbb :=_addfaa .PdfObject .(*_bcf .PdfObjectDictionary );if !_ebfbb {return nil ,_f .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_ad .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fded );_ecfe ,_ ,_ebcbc :=_ffgd .buildOutlineTree (_addfaa ,nil ,nil ,nil );if _ebcbc !=nil {return nil ,_ebcbc ;};_ad .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ecfe );return _ecfe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdgc *PdfAnnotationInk )ToPdfObject ()_bcf .PdfObject {_fdgc .PdfAnnotation .ToPdfObject ();_ebdfe :=_fdgc ._fab ;_gdcb :=_ebdfe .PdfObject .(*_bcf .PdfObjectDictionary );_fdgc .PdfAnnotationMarkup .appendToPdfDictionary (_gdcb );_gdcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0049\u006e\u006b"));_gdcb .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fdgc .InkList );_gdcb .SetIfNotNil ("\u0042\u0053",_fdgc .BS );return _ebdfe ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_ecbf *PdfPage )AddExtGState (name _bcf .PdfObjectName ,egs *_bcf .PdfObjectDictionary )error {if _ecbf .Resources ==nil {_ecbf .Resources =NewPdfPageResources ();};if _ecbf .Resources .ExtGState ==nil {_ecbf .Resources .ExtGState =_bcf .MakeDict ();};_fcfg ,_babbg :=_bcf .TraceToDirectObject (_ecbf .Resources .ExtGState ).(*_bcf .PdfObjectDictionary );if !_babbg {_ad .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bcf .TraceToDirectObject (_ecbf .Resources .ExtGState ));return _f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcfg .Set (name ,egs );return nil ;};func _bbcg (_gadbg _bcf .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_afbf :=&PdfColorspaceDeviceNAttributes {};var _eadf *_bcf .PdfObjectDictionary ;if _cdfa ,_gadf :=_gadbg .(*_bcf .PdfIndirectObject );_gadf {_afbf ._fbeca =_cdfa ;var _bgfd bool ;_eadf ,_bgfd =_cdfa .PdfObject .(*_bcf .PdfObjectDictionary );if !_bgfd {_ad .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _aecc ,_cbda :=_gadbg .(*_bcf .PdfObjectDictionary );_cbda {_eadf =_aecc ;}else {_ad .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _facf :=_eadf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_facf !=nil {_babf ,_ccbc :=_bcf .TraceToDirectObject (_facf ).(*_bcf .PdfObjectName );if !_ccbc {_ad .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_afbf .Subtype =_babf ;};if _gcfa :=_eadf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gcfa !=nil {_afbf .Colorants =_gcfa ;};if _bfcc :=_eadf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_bfcc !=nil {_afbf .Process =_bfcc ;};if _bgab :=_eadf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_bgab !=nil {_afbf .MixingHints =_bgab ;};return _afbf ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_cgded *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ebge []_dc .TextEncoder ;if _bacfc :=_cgded .baseFields ()._ecba ;_bacfc !=nil {_ebge =append (_ebge ,_dc .NewCMapEncoder ("",nil ,_bacfc ));};if _bafda :=_cgded .Encoder ();_bafda !=nil {_ebge =append (_ebge ,_bafda );};var _dbea _ce .Buffer ;var _deaf int ;for _ ,_dggbc :=range data {var _cdffg bool ;for _ ,_eecc :=range _ebge {if _bdgd :=_eecc .Encode (string (_dggbc ));len (_bdgd )> 0{_dbea .Write (_bdgd );_cdffg =true ;break ;};};if !_cdffg {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dggbc );_deaf ++;};};if _deaf !=0{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_deaf ,_cgded ,_ebge );};return _dbea .Bytes (),_deaf ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_egd :=NewPdfAction ();_dd :=&PdfActionResetForm {};_dd .PdfAction =_egd ;_egd .SetContext (_dd );return _dd ;};

// GetContentStreams returns the content stream as an array of strings.
func (_cdaea *PdfPage )GetContentStreams ()([]string ,error ){_dgge :=_cdaea .GetContentStreamObjs ();var _gedgc []string ;for _ ,_cedcb :=range _dgge {_egbfd ,_fafbd :=_cgbgf (_cedcb );if _fafbd !=nil {return nil ,_fafbd ;};_gedgc =append (_gedgc ,_egbfd );};return _gedgc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cffc *PdfSignature )ToPdfObject ()_bcf .PdfObject {_gegca :=_cffc ._gdgcbf ;var _acbce *_bcf .PdfObjectDictionary ;if _bedef ,_edfdf :=_gegca .PdfObject .(*pdfSignDictionary );_edfdf {_acbce =_bedef .PdfObjectDictionary ;}else {_acbce =_gegca .PdfObject .(*_bcf .PdfObjectDictionary );};_acbce .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cffc .Type );_acbce .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_cffc .Filter );_acbce .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_cffc .SubFilter );_acbce .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cffc .ByteRange );_acbce .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cffc .Contents );_acbce .SetIfNotNil ("\u0043\u0065\u0072\u0074",_cffc .Cert );_acbce .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cffc .Name );_acbce .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_cffc .Reason );_acbce .SetIfNotNil ("\u004d",_cffc .M );_acbce .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_cffc .Reference );_acbce .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_cffc .Changes );_acbce .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_cffc .ContactInfo );return _gegca ;};

// ToPdfObject converts date to a PDF string object.
func (_fgcff *PdfDate )ToPdfObject ()_bcf .PdfObject {_gfbce :=_bc .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fgcff ._gedge ,_fgcff ._gggdd ,_fgcff ._efacd ,_fgcff ._dgcgc ,_fgcff ._efcac ,_fgcff ._bfaf ,_fgcff ._edgdg ,_fgcff ._debef ,_fgcff ._cfggf );return _bcf .MakeString (_gfbce );};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cefb *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cefb .GetNumComponents (){return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgdgc ,_gdda :=_cefb .TintTransform .Evaluate (vals );if _gdda !=nil {return nil ,_gdda ;};_fceg ,_gdda :=_cefb .AlternateSpace .ColorFromFloats (_fgdgc );if _gdda !=nil {return nil ,_gdda ;};return _fceg ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_egdabf *PdfPageResources )SetXObjectImageByName (keyName _bcf .PdfObjectName ,ximg *XObjectImage )error {_gfggd :=ximg .ToPdfObject ().(*_bcf .PdfObjectStream );_ffac :=_egdabf .SetXObjectByName (keyName ,_gfggd );return _ffac ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_aaga :=NewPdfAnnotation ();_dga :=&PdfAnnotationMovie {};_dga .PdfAnnotation =_aaga ;_aaga .SetContext (_dga );return _dga ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_fbggd *PdfPageResources )GetXObjectByName (keyName _bcf .PdfObjectName )(*_bcf .PdfObjectStream ,XObjectType ){if _fbggd .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fgeca ,_gaaa :=_bcf .TraceToDirectObject (_fbggd .XObject ).(*_bcf .PdfObjectDictionary );if !_gaaa {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcf .TraceToDirectObject (_fbggd .XObject ));return nil ,XObjectTypeUndefined ;};if _dgaced :=_fgeca .Get (keyName );_dgaced !=nil {_cgedd ,_ccdab :=_bcf .GetStream (_dgaced );if !_ccdab {_ad .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_dgaced );return nil ,XObjectTypeUndefined ;};_efbd :=_cgedd .PdfObjectDictionary ;_fgacb ,_ccdab :=_bcf .TraceToDirectObject (_efbd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bcf .PdfObjectName );if !_ccdab {_ad .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_efbd .String ());return nil ,XObjectTypeUndefined ;};if *_fgacb =="\u0049\u006d\u0061g\u0065"{return _cgedd ,XObjectTypeImage ;}else if *_fgacb =="\u0046\u006f\u0072\u006d"{return _cgedd ,XObjectTypeForm ;}else if *_fgacb =="\u0050\u0053"{return _cgedd ,XObjectTypePS ;}else {_ad .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_fgacb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// M returns the value of the magenta component of the color.
func (_dcdae *PdfColorDeviceCMYK )M ()float64 {return float64 (_dcdae [1])};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bbga pdfCIDFontType2 )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){_gfef ,_gbafd :=_bbga ._bdgf [r ];if !_gbafd {_cbga ,_bcagd :=_bcf .GetInt (_bbga .DW );if !_bcagd {return _cb .CharMetrics {},false ;};_gfef =int (*_cbga );};return _cb .CharMetrics {Wx :float64 (_gfef )},true ;};func (_gdaa *PdfWriter )writeBytes (_gfeg []byte ){if _gdaa ._dbdaa !=nil {return ;};_agabf ,_dege :=_gdaa ._bcddb .Write (_gfeg );_gdaa ._cebd +=int64 (_agabf );_gdaa ._dbdaa =_dege ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_agead *PdfOutline )GetContainingPdfObject ()_bcf .PdfObject {return _agead ._acgbd };

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bcf .PdfObject ;NewWindow _bcf .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_baaaf pdfCIDFontType0 )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){return _cb .CharMetrics {Wx :_baaaf ._dcaeb },true ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bcf .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bcf .PdfObject ;A _bcf .PdfObject ;SE _bcf .PdfObject ;C _bcf .PdfObject ;F _bcf .PdfObject ;_dcdea *_bcf .PdfIndirectObject ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bcf .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bcf .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bcf .PdfObjectBool ;_accbb PdfModel ;_aeddc _bcf .PdfObject ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_dafd :=&PdfColorspaceLab {};_dafd .BlackPoint =[]float64 {0.0,0.0,0.0};_dafd .Range =[]float64 {-100,100,-100,100};return _dafd ;};func (_bcc *PdfReader )newPdfAnnotationStrikeOut (_abb *_bcf .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fcdee :=PdfAnnotationStrikeOut {};_fdcd ,_agef :=_bcc .newPdfAnnotationMarkupFromDict (_abb );if _agef !=nil {return nil ,_agef ;};_fcdee .PdfAnnotationMarkup =_fdcd ;_fcdee .QuadPoints =_abb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fcdee ,nil ;};

// SetDate sets the `M` field of the signature.
func (_bdgg *PdfSignature )SetDate (date _ba .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bdgg .M =_bcf .MakeString (date .Format (format ));};func (_ddge *PdfReader )newPdfActionSetOCGStateFromDict (_cba *_bcf .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cba .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cba .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebc *PdfActionGoTo )ToPdfObject ()_bcf .PdfObject {_ebc .PdfAction .ToPdfObject ();_ecc :=_ebc ._ge ;_feb :=_ecc .PdfObject .(*_bcf .PdfObjectDictionary );_feb .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeGoTo )));_feb .SetIfNotNil ("\u0044",_ebc .D );return _ecc ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_fdgbg :=&PdfPageResourcesColorspaces {};_fdgbg .Names =[]string {};_fdgbg .Colorspaces =map[string ]PdfColorspace {};_fdgbg ._acfbd =&_bcf .PdfIndirectObject {};return _fdgbg ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ToPdfObject implements interface PdfModel.
func (_gbgf *PdfAnnotationUnderline )ToPdfObject ()_bcf .PdfObject {_gbgf .PdfAnnotation .ToPdfObject ();_cagb :=_gbgf ._fab ;_gegg :=_cagb .PdfObject .(*_bcf .PdfObjectDictionary );_gbgf .PdfAnnotationMarkup .appendToPdfDictionary (_gegg );_gegg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_gegg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gbgf .QuadPoints );return _cagb ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_fggg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_ebfb *PdfActionHide )ToPdfObject ()_bcf .PdfObject {_ebfb .PdfAction .ToPdfObject ();_gdgd :=_ebfb ._ge ;_bga :=_gdgd .PdfObject .(*_bcf .PdfObjectDictionary );_bga .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeHide )));_bga .SetIfNotNil ("\u0054",_ebfb .T );_bga .SetIfNotNil ("\u0048",_ebfb .H );return _gdgd ;};

// ToPdfObject implements interface PdfModel.
func (_fcca *PdfAnnotationWatermark )ToPdfObject ()_bcf .PdfObject {_fcca .PdfAnnotation .ToPdfObject ();_dffe :=_fcca ._fab ;_dade :=_dffe .PdfObject .(*_bcf .PdfObjectDictionary );_dade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_dade .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fcca .FixedPrint );return _dffe ;};var _bbfg =_cc .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _eg .ReadSeeker )(*PdfFont ,error ){const _fdcca =_dc .CharCode (32);const _bbfda =_dc .CharCode (255);_faea ,_edfa :=_gc .ReadAll (r );if _edfa !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_edfa );return nil ,_edfa ;};_bcggg ,_edfa :=_cb .TtfParse (_ce .NewReader (_faea ));if _edfa !=nil {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_edfa );return nil ,_edfa ;};_bfbea :=&pdfFontSimple {_adbbb :make (map[_dc .CharCode ]float64 ),fontCommon :fontCommon {_ddcbb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bfbea ._gcdgc =_dc .NewWinAnsiEncoder ();_bfbea ._agaf =_bcggg .PostScriptName ;_bfbea .FirstChar =_bcf .MakeInteger (int64 (_fdcca ));_bfbea .LastChar =_bcf .MakeInteger (int64 (_bbfda ));_edbca :=1000.0/float64 (_bcggg .UnitsPerEm );if len (_bcggg .Widths )<=0{return nil ,_f .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_gbgb :=_edbca *float64 (_bcggg .Widths [0]);_faega :=make ([]float64 ,0,_bbfda -_fdcca +1);for _gadfc :=_fdcca ;_gadfc <=_bbfda ;_gadfc ++{_gfec ,_gagc :=_bfbea .Encoder ().CharcodeToRune (_gadfc );if !_gagc {_ad .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gadfc );_faega =append (_faega ,_gbgb );continue ;};_cegd ,_bdfb :=_bcggg .Chars [_gfec ];if !_bdfb {_ad .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_faega =append (_faega ,_gbgb );continue ;};_fgcdg :=_edbca *float64 (_bcggg .Widths [_cegd ]);_faega =append (_faega ,_fgcdg );};_bfbea .Widths =_bcf .MakeIndirectObject (_bcf .MakeArrayFromFloats (_faega ));if len (_faega )< int (_bbfda -_fdcca +1){_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_faega ),255-32+1);return nil ,_bcf .ErrRangeError ;};for _bgfa :=_dc .CharCode (_fdcca );_bgfa <=_bbfda ;_bgfa ++{_bfbea ._adbbb [_bgfa ]=_faega [_bgfa -_fdcca ];};_bfbea .Encoding =_bcf .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bbgc :=&PdfFontDescriptor {};_bbgc .FontName =_bcf .MakeName (_bcggg .PostScriptName );_bbgc .Ascent =_bcf .MakeFloat (_edbca *float64 (_bcggg .TypoAscender ));_bbgc .Descent =_bcf .MakeFloat (_edbca *float64 (_bcggg .TypoDescender ));_bbgc .CapHeight =_bcf .MakeFloat (_edbca *float64 (_bcggg .CapHeight ));_bbgc .FontBBox =_bcf .MakeArrayFromFloats ([]float64 {_edbca *float64 (_bcggg .Xmin ),_edbca *float64 (_bcggg .Ymin ),_edbca *float64 (_bcggg .Xmax ),_edbca *float64 (_bcggg .Ymax )});_bbgc .ItalicAngle =_bcf .MakeFloat (float64 (_bcggg .ItalicAngle ));_bbgc .MissingWidth =_bcf .MakeFloat (_edbca *float64 (_bcggg .Widths [0]));_bbgbfb ,_edfa :=_bcf .MakeStream (_faea ,_bcf .NewFlateEncoder ());if _edfa !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_edfa );return nil ,_edfa ;};_bbgbfb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcf .MakeInteger (int64 (len (_faea ))));_bbgc .FontFile2 =_bbgbfb ;if _bcggg .Bold {_bbgc .StemV =_bcf .MakeInteger (120);}else {_bbgc .StemV =_bcf .MakeInteger (70);};_dfbfa :=_bffg ;if _bcggg .IsFixedPitch {_dfbfa |=_fdabe ;};if _bcggg .ItalicAngle !=0{_dfbfa |=_gdfc ;};_bbgc .Flags =_bcf .MakeInteger (int64 (_dfbfa ));_bfbea ._debbe =_bbgc ;_gacge :=&PdfFont {_cefc :_bfbea };return _gacge ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_agd *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _agd ._fbd !=nil {return _agd ._fbd ,nil ;};if _agd .A ==nil {return nil ,nil ;};if _agd ._dda ==nil {return nil ,nil ;};_fage ,_gfd :=_agd ._dda .loadAction (_agd .A );if _gfd !=nil {return nil ,_gfd ;};_agd ._fbd =_fage ;return _agd ._fbd ,nil ;};func (_bcafb *pdfFontSimple )updateStandard14Font (){_dbdgf ,_effg :=_bcafb .Encoder ().(_dc .SimpleEncoder );if !_effg {_ad .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_bcafb .Encoder (),_bcafb );return ;};_gcge :=_dbdgf .Charcodes ();_bcafb ._adbbb =make (map[_dc .CharCode ]float64 ,len (_gcge ));for _ ,_ecgb :=range _gcge {_bbdga ,_ :=_dbdgf .CharcodeToRune (_ecgb );_bcafb ._adbbb [_ecgb ]=_bcafb ._agcc [_bbdga ].Wx ;};};func (_fdafc *PdfFilespec )getDict ()*_bcf .PdfObjectDictionary {if _efga ,_ddbc :=_fdafc ._dedbd .(*_bcf .PdfIndirectObject );_ddbc {_abab ,_fefg :=_efga .PdfObject .(*_bcf .PdfObjectDictionary );if !_fefg {return nil ;};return _abab ;}else if _ccfc ,_adbd :=_fdafc ._dedbd .(*_bcf .PdfObjectDictionary );_adbd {return _ccfc ;}else {_ad .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fdafc ._dedbd );return nil ;};};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_dcfbc byte )byte ;

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bcf .PdfObject ;Sy _bcf .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_aebc *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_dbgc *PdfFont )baseFields ()*fontCommon {if _dbgc ._cefc ==nil {_ad .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _dbgc ._cefc .baseFields ();};func _aabbg (_dece ,_afca string )string {if _be .Contains (_dece ,"\u002b"){_afgfd :=_be .Split (_dece ,"\u002b");if len (_afgfd )==2{_dece =_afgfd [1];};};return _afca +"\u002b"+_dece ;};func (_ecacc *PdfReader )loadStructure ()error {if _ecacc ._eagdg .GetCrypter ()!=nil &&!_ecacc ._eagdg .IsAuthenticated (){return _bc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_cbegc :=_ecacc ._eagdg .GetTrailer ();if _cbegc ==nil {return _bc .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fdccb ,_debdcf :=_cbegc .Get ("\u0052\u006f\u006f\u0074").(*_bcf .PdfObjectReference );if !_debdcf {return _bc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_cbegc );};_cdagd ,_faed :=_ecacc ._eagdg .LookupByReference (*_fdccb );if _faed !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_faed );return _faed ;};_edffb ,_debdcf :=_cdagd .(*_bcf .PdfIndirectObject );if !_debdcf {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cdagd ,*_cbegc );return _f .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eedga ,_debdcf :=(*_edffb ).PdfObject .(*_bcf .PdfObjectDictionary );if !_debdcf {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_edffb .PdfObject );return _f .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ad .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eedga );_bacab ,_debdcf :=_eedga .Get ("\u0050\u0061\u0067e\u0073").(*_bcf .PdfObjectReference );if !_debdcf {return _f .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_dcafc ,_faed :=_ecacc ._eagdg .LookupByReference (*_bacab );if _faed !=nil {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _faed ;};_dbdf ,_debdcf :=_dcafc .(*_bcf .PdfIndirectObject );if !_debdcf {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_ad .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_dbdf );return _f .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gcbgb ,_debdcf :=_dbdf .PdfObject .(*_bcf .PdfObjectDictionary );if !_debdcf {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_dbdf );return _f .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ceeac ,_debdcf :=_bcf .GetInt (_gcbgb .Get ("\u0043\u006f\u0075n\u0074"));if !_debdcf {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _f .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_debdcf =_bcf .GetName (_gcbgb .Get ("\u0054\u0079\u0070\u0065"));!_debdcf {_ad .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_gcbgb .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0050\u0061\u0067e\u0073"));};_ecacc ._eeebc =_fdccb ;_ecacc ._fbcgg =_eedga ;_ecacc ._dbfg =_gcbgb ;_ecacc ._fegb =_dbdf ;_ecacc ._bgbac =int (*_ceeac );_ecacc ._ffbf =[]*_bcf .PdfIndirectObject {};_bfca :=map[_bcf .PdfObject ]struct{}{};_faed =_ecacc .buildPageList (_dbdf ,nil ,_bfca );if _faed !=nil {return _faed ;};_ad .Log .Trace ("\u002d\u002d\u002d");_ad .Log .Trace ("\u0054\u004f\u0043");_ad .Log .Trace ("\u0050\u0061\u0067e\u0073");_ad .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ecacc ._ffbf ),_ecacc ._ffbf );_ecacc ._ddcee ,_faed =_ecacc .loadOutlines ();if _faed !=nil {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_faed );return _faed ;};_ecacc .AcroForm ,_faed =_ecacc .loadForms ();if _faed !=nil {return _faed ;};return nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_abcg *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_abcg .HiVal )};};var _agec ="";

// GetDescent returns the Descent of the font `descriptor`.
func (_cdgdc *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bcf .GetNumberAsFloat (_cdgdc .Descent );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_cggef *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bcf .StreamEncoder ,error ){_gbff ,_bcgaf :=_cggef ._gebbd .(*_bcf .PdfObjectStream );if !_bcgaf {_ad .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cggef ._gebbd );return nil ,nil ,_bcf .ErrTypeError ;};_cddc ,_eefa :=_bcf .DecodeStream (_gbff );if _eefa !=nil {_ad .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_eefa );return nil ,nil ,_eefa ;};_cdfaa ,_eefa :=_bcf .NewEncoderFromStream (_gbff );if _eefa !=nil {_ad .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_eefa );return nil ,nil ,_eefa ;};return _cddc ,_cdfaa ,nil ;};

// SetAnnotations sets the annotations list.
func (_efdb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_efdb ._gbgd =annotations };type modelManager struct{_fcbcd map[PdfModel ]_bcf .PdfObject ;_efbgf map[_bcf .PdfObject ]PdfModel ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_facbe *PdfColorspaceSpecialIndexed )ToPdfObject ()_bcf .PdfObject {_efefa :=_bcf .MakeArray (_bcf .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_efefa .Append (_facbe .Base .ToPdfObject ());_efefa .Append (_bcf .MakeInteger (int64 (_facbe .HiVal )));_efefa .Append (_facbe .Lookup );if _facbe ._dbcda !=nil {_facbe ._dbcda .PdfObject =_efefa ;return _facbe ._dbcda ;};return _efefa ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cfc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_adgb :=NewPdfAction ();_gfa :=&PdfActionMovie {};_gfa .PdfAction =_adgb ;_adgb .SetContext (_gfa );return _gfa ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_cdac *PdfAcroForm )ToPdfObject ()_bcf .PdfObject {_abfga :=_cdac ._eafeb ;_cfbe :=_abfga .PdfObject .(*_bcf .PdfObjectDictionary );if _cdac .Fields !=nil {_eeea :=_bcf .PdfObjectArray {};for _ ,_geefb :=range *_cdac .Fields {_bddb :=_geefb .GetContext ();if _bddb !=nil {_eeea .Append (_bddb .ToPdfObject ());}else {_eeea .Append (_geefb .ToPdfObject ());};};_cfbe .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_eeea );};if _cdac .NeedAppearances !=nil {_cfbe .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_cdac .NeedAppearances );};if _cdac .SigFlags !=nil {_cfbe .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_cdac .SigFlags );};if _cdac .CO !=nil {_cfbe .Set ("\u0043\u004f",_cdac .CO );};if _cdac .DR !=nil {_cfbe .Set ("\u0044\u0052",_cdac .DR .ToPdfObject ());};if _cdac .DA !=nil {_cfbe .Set ("\u0044\u0041",_cdac .DA );};if _cdac .Q !=nil {_cfbe .Set ("\u0051",_cdac .Q );};if _cdac .XFA !=nil {_cfbe .Set ("\u0058\u0046\u0041",_cdac .XFA );};return _abfga ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_cafbb *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_cafbb ._aggdc =colorspace ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_eagdg *_bcf .PdfParser ;_eeebc _bcf .PdfObject ;_fegb *_bcf .PdfIndirectObject ;_dbfg *_bcf .PdfObjectDictionary ;_ffbf []*_bcf .PdfIndirectObject ;PageList []*PdfPage ;_bgbac int ;_fbcgg *_bcf .PdfObjectDictionary ;_ddcee *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;_adaff *modelManager ;_eddddc bool ;_edbcb map[_bcf .PdfObject ]struct{};_ebabc _eg .ReadSeeker ;};func _ggef (_daga *_bcf .PdfObjectDictionary )bool {for _ ,_dfda :=range _daga .Keys (){if _ ,_bgba :=_ecgee [_dfda .String ()];_bgba {return true ;};};return false ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bbcae *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bbcae .Range };

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bcf .PdfObjectBool ;SigFlags *_bcf .PdfObjectInteger ;CO *_bcf .PdfObjectArray ;DR *PdfPageResources ;DA *_bcf .PdfObjectString ;Q *_bcf .PdfObjectInteger ;XFA _bcf .PdfObject ;_eafeb *_bcf .PdfIndirectObject ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cdbfe *PdfReader )IsEncrypted ()(bool ,error ){return _cdbfe ._eagdg .IsEncrypted ()};type pdfSignDictionary struct{*_bcf .PdfObjectDictionary ;_cefgc *SignatureHandler ;_cadbb *PdfSignature ;_bgfad int64 ;_babbb int ;_bagba int ;_eebfc int ;_bcfgbd int ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_fdaea *PdfAppender )Write (w _eg .Writer )error {if _fdaea ._dbd {return _f .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_gbfa :=NewPdfWriter ();_gggfg ,_egfe :=_bcf .GetDict (_gbfa ._caceg );if !_egfe {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_ffcf ,_egfe :=_gggfg .Get ("\u004b\u0069\u0064\u0073").(*_bcf .PdfObjectArray );if !_egfe {return _f .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_fgge ,_egfe :=_gggfg .Get ("\u0043\u006f\u0075n\u0074").(*_bcf .PdfObjectInteger );if !_egfe {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_fcbbb :=_fdaea ._bdfd ._eagdg ;_abaa :=_fcbbb .GetTrailer ();if _abaa ==nil {return _f .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ecebd ,_egfe :=_bcf .GetIndirect (_abaa .Get ("\u0052\u006f\u006f\u0074"));if !_egfe {return _f .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fcdab ,_egfe :=_bcf .GetDict (_ecebd );if !_egfe {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ecebd ,*_abaa );return _f .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_abdb :=range _fcdab .Keys (){if _gbfa ._feagf .Get (_abdb )==nil {_dbde :=_fcdab .Get (_abdb );_gbfa ._feagf .Set (_abdb ,_dbde );};};if _fdaea ._feeec !=nil {_gbfa ._feagf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fdaea ._feeec .ToPdfObject ());_fdaea .updateObjectsDeep (_fdaea ._feeec .ToPdfObject (),nil );};_fdaea .addNewObject (_gbfa ._cacdb );_fdaea .addNewObject (_gbfa ._ebdd );_bfba :=false ;if len (_fdaea ._bdfd .PageList )!=len (_fdaea ._eeeg ){_bfba =true ;}else {for _gaa :=range _fdaea ._bdfd .PageList {switch {case _fdaea ._eeeg [_gaa ]==_fdaea ._bdfd .PageList [_gaa ]:case _fdaea ._eeeg [_gaa ]==_fdaea .Reader .PageList [_gaa ]:default:_bfba =true ;};if _bfba {break ;};};};if _bfba {_fdaea .updateObjectsDeep (_gbfa ._caceg ,nil );}else {_fdaea ._ebdb [_gbfa ._caceg ]=struct{}{};};_gbfa ._caceg .ObjectNumber =_fdaea .Reader ._fegb .ObjectNumber ;_fdaea ._aeddf [_gbfa ._caceg ]=_fdaea .Reader ._fegb .ObjectNumber ;_ggfa :=[]_bcf .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_cfga :=range _fdaea ._eeeg {_cdcc :=_cfga .ToPdfObject ();*_fgge =*_fgge +1;if _ddfe ,_bbb :=_cdcc .(*_bcf .PdfIndirectObject );_bbb &&_ddfe .GetParser ()==_fdaea ._bdfd ._eagdg {_ffcf .Append (&_ddfe .PdfObjectReference );continue ;};if _egce ,_dccd :=_bcf .GetDict (_cdcc );_dccd {_gffg ,_bgdeg :=_egce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bcf .PdfIndirectObject );for _bgdeg {_ad .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gffg );_gfb ,_ebgf :=_gffg .PdfObject .(*_bcf .PdfObjectDictionary );if !_ebgf {return _f .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_bfcf :=range _ggfa {_ad .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfcf );if _egce .Get (_bfcf )!=nil {_ad .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _ffaa :=_gfb .Get (_bfcf );_ffaa !=nil {_ad .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfcf );_egce .Set (_bfcf ,_ffaa );};};_gffg ,_bgdeg =_gfb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bcf .PdfIndirectObject );_ad .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gfb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_egce .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbfa ._caceg );};_fdaea .updateObjectsDeep (_cdcc ,nil );_ffcf .Append (_cdcc );};if _ ,_ggbg :=_fdaea ._acgg .Seek (0,_eg .SeekStart );_ggbg !=nil {return _ggbg ;};_fdba :=make (map[SignatureHandler ]_eg .Writer );_fcgd :=_bcf .MakeArray ();for _ ,_ebaf :=range _fdaea ._ebbb {if _eca ,_ccdd :=_bcf .GetIndirect (_ebaf );_ccdd {if _efce ,_ecde :=_eca .PdfObject .(*pdfSignDictionary );_ecde {_aad :=*_efce ._cefgc ;var _dbdc error ;_fdba [_aad ],_dbdc =_aad .NewDigest (_efce ._cadbb );if _dbdc !=nil {return _dbdc ;};_fcgd .Append (_bcf .MakeInteger (0xfffff),_bcf .MakeInteger (0xfffff));};};};if _fcgd .Len ()> 0{_fcgd .Append (_bcf .MakeInteger (0xfffff),_bcf .MakeInteger (0xfffff));};for _ ,_fead :=range _fdaea ._ebbb {if _cbfe ,_fbf :=_bcf .GetIndirect (_fead );_fbf {if _cdgef ,_bcff :=_cbfe .PdfObject .(*pdfSignDictionary );_bcff {_cdgef .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fcgd );};};};_ebag :=len (_fdba )> 0;var _gdgc _eg .Reader =_fdaea ._acgg ;if _ebag {_bfeg :=make ([]_eg .Writer ,0,len (_fdba ));for _ ,_fbeb :=range _fdba {_bfeg =append (_bfeg ,_fbeb );};_gdgc =_eg .TeeReader (_fdaea ._acgg ,_eg .MultiWriter (_bfeg ...));};_cgfe ,_cdfb :=_eg .Copy (w ,_gdgc );if _cdfb !=nil {return _cdfb ;};if len (_fdaea ._ebbb )==0{return nil ;};_gbfa ._eeecb =_cgfe ;_gbfa .ObjNumOffset =_fdaea ._abgg ;_gbfa ._aegee =true ;_gbfa ._gcbbf =_fdaea ._efcc ;_gbfa ._abfba =_fdaea ._eaegc ;_gbfa ._gdfea =_fdaea ._agdb ;_gbfa ._gacbg =_fdaea ._bdfd .PdfVersion ().Minor ;_gbfa ._cccff =_fdaea ._aeddf ;_abdbc :=_fdaea ._ggad .GetXrefType ();if _abdbc !=nil {_fdeg :=*_abdbc ==_bcf .XrefTypeObjectStream ;_gbfa ._bgebb =&_fdeg ;};_gbfa ._ccecce =map[_bcf .PdfObject ]struct{}{};_gbfa ._bdgbd =[]_bcf .PdfObject {};for _ ,_dcda :=range _fdaea ._ebbb {if _ ,_eafc :=_fdaea ._ebdb [_dcda ];_eafc {continue ;};_gbfa .addObject (_dcda );};_cbcb :=w ;if _ebag {_cbcb =_ce .NewBuffer (nil );};if _aeed :=_gbfa .Write (_cbcb );_aeed !=nil {return _aeed ;};if _ebag {_gbaba :=_cbcb .(*_ce .Buffer ).Bytes ();_edab :=_bcf .MakeArray ();var _ebcb []*pdfSignDictionary ;var _daea int64 ;for _ ,_bbabf :=range _gbfa ._bdgbd {if _afg ,_dggf :=_bcf .GetIndirect (_bbabf );_dggf {if _edc ,_fdgf :=_afg .PdfObject .(*pdfSignDictionary );_fdgf {_ebcb =append (_ebcb ,_edc );_gegbb :=_edc ._bgfad +int64 (_edc ._babbb );_edab .Append (_bcf .MakeInteger (_daea ),_bcf .MakeInteger (_gegbb -_daea ));_daea =_edc ._bgfad +int64 (_edc ._bagba );};};};_edab .Append (_bcf .MakeInteger (_daea ),_bcf .MakeInteger (_cgfe +int64 (len (_gbaba ))-_daea ));_bdaf :=[]byte (_edab .WriteString ());for _ ,_bffc :=range _ebcb {_cdfbf :=int (_bffc ._bgfad -_cgfe );for _egaf :=_bffc ._eebfc ;_egaf < _bffc ._bcfgbd ;_egaf ++{_gbaba [_cdfbf +_egaf ]=' ';};_afcf :=_gbaba [_cdfbf +_bffc ._eebfc :_cdfbf +_bffc ._bcfgbd ];copy (_afcf ,_bdaf );};var _efgg int ;for _ ,_ebfba :=range _ebcb {_bbag :=int (_ebfba ._bgfad -_cgfe );_fada :=_gbaba [_efgg :_bbag +_ebfba ._babbb ];_fgdg :=*_ebfba ._cefgc ;_fdba [_fgdg ].Write (_fada );_efgg =_bbag +_ebfba ._bagba ;};for _ ,_dcee :=range _ebcb {_gfdf :=_gbaba [_efgg :];_afae :=*_dcee ._cefgc ;_fdba [_afae ].Write (_gfdf );};for _ ,_dfbd :=range _ebcb {_aafe :=int (_dfbd ._bgfad -_cgfe );_egabd :=*_dfbd ._cefgc ;_agde :=_fdba [_egabd ];if _cdbb :=_egabd .Sign (_dfbd ._cadbb ,_agde );_cdbb !=nil {return _cdbb ;};_dfbd ._cadbb .ByteRange =_edab ;_eaea :=[]byte (_dfbd ._cadbb .Contents .WriteString ());for _adag :=_dfbd ._eebfc ;_adag < _dfbd ._bcfgbd ;_adag ++{_gbaba [_aafe +_adag ]=' ';};for _ddaf :=_dfbd ._babbb ;_ddaf < _dfbd ._bagba ;_ddaf ++{_gbaba [_aafe +_ddaf ]=' ';};_adbb :=_gbaba [_aafe +_dfbd ._eebfc :_aafe +_dfbd ._bcfgbd ];copy (_adbb ,_bdaf );_adbb =_gbaba [_aafe +_dfbd ._babbb :_aafe +_dfbd ._bagba ];copy (_adbb ,_eaea );};_aadd :=_ce .NewBuffer (_gbaba );_ ,_cdfb =_eg .Copy (w ,_aadd );if _cdfb !=nil {return _cdfb ;};};_fdaea ._dbd =true ;return nil ;};var _dabae =false ;

// Clear clears flag fl from the flag and returns the resulting flag.
func (_dffd FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_dffd .Mask ()&^fl .Mask ())};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_bgdfb []byte ;_afdd []float64 ;};func (_cdf *PdfReader )newPdfActionTransFromDict (_dgc *_bcf .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dgc .Get ("\u0054\u0072\u0061n\u0073")},nil ;};func _geabd ()string {_dbbc :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _dbffbc _ce .Buffer ;for _edebg :=0;_edebg < 6;_edebg ++{_dbffbc .WriteRune (rune (_dbbc [_e .Intn (len (_dbbc ))]));};return _dbffbc .String ();};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cfgec pdfFontType0 )GetCharMetrics (code _dc .CharCode )(_cb .CharMetrics ,bool ){if _cfgec .DescendantFont ==nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cfgec );return _cb .CharMetrics {},false ;};return _cfgec .DescendantFont .GetCharMetrics (code );};

// ToPdfObject implements interface PdfModel.
func (_ada *PdfActionTrans )ToPdfObject ()_bcf .PdfObject {_ada .PdfAction .ToPdfObject ();_gbe :=_ada ._ge ;_ade :=_gbe .PdfObject .(*_bcf .PdfObjectDictionary );_ade .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeTrans )));_ade .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ada .Trans );return _gbe ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_cdge :=&PdfAppender {_acgg :reader ._ebabc ,Reader :reader ,_ggad :reader ._eagdg ,_deb :reader ._edbcb };_bbce ,_cad :=_cdge ._acgg .Seek (0,_eg .SeekEnd );if _cad !=nil {return nil ,_cad ;};_cdge ._agdb =_bbce ;if _ ,_cad =_cdge ._acgg .Seek (0,_eg .SeekStart );_cad !=nil {return nil ,_cad ;};_cdge ._bdfd ,_cad =NewPdfReader (_cdge ._acgg );if _cad !=nil {return nil ,_cad ;};for _ ,_edf :=range _cdge .Reader .GetObjectNums (){if _cdge ._abgg < _edf {_cdge ._abgg =_edf ;};};_cdge ._efcc =_cdge ._ggad .GetXrefTable ();_cdge ._eaegc =_cdge ._ggad .GetXrefOffset ();_cdge ._dggb =make (map[_bcf .PdfObject ]struct{});for _ ,_dgaf :=range _cdge ._bdfd .PageList {_cdge ._eeeg =append (_cdge ._eeeg ,_dgaf );};_cdge ._aeddf =make (map[_bcf .PdfObject ]int64 );_cdge ._ebdb =make (map[_bcf .PdfObject ]struct{});_cdge ._feeec =_cdge ._bdfd .AcroForm ;return _cdge ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_afeeg *PdfAppender )UpdatePage (page *PdfPage ){_afeeg .updateObjectsDeep (page .ToPdfObject (),nil );};

// String returns the name of the colorspace (DeviceN).
func (_bege *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bafg ,_adagc :=_ed .Open (filePath );if _adagc !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_adagc );return nil ,_adagc ;};defer _bafg .Close ();return NewPdfFontFromTTF (_bafg );};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_beccc *PdfOutlineTreeNode )GetContext ()PdfModel {if _adcc ,_egbbfdc :=_beccc ._badg .(*PdfOutline );_egbbfdc {return _adcc ;};if _acfbf ,_cfca :=_beccc ._badg .(*PdfOutlineItem );_cfca {return _acfbf ;};_ad .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_deeb *PdfOutline )ToPdfObject ()_bcf .PdfObject {_geeb :=_deeb ._acgbd ;_gafdg :=_geeb .PdfObject .(*_bcf .PdfObjectDictionary );_gafdg .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _deeb .First !=nil {_gafdg .Set ("\u0046\u0069\u0072s\u0074",_deeb .First .ToPdfObject ());};if _deeb .Last !=nil {_gafdg .Set ("\u004c\u0061\u0073\u0074",_deeb .Last .GetContext ().GetContainingPdfObject ());};if _deeb .Parent !=nil {_gafdg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_deeb .Parent .GetContext ().GetContainingPdfObject ());};if _deeb .Count !=nil {_gafdg .Set ("\u0043\u006f\u0075n\u0074",_bcf .MakeInteger (*_deeb .Count ));};return _geeb ;};func _cbaf (_eebb []byte )(_ecab ,_gbgbd string ,_decc error ){_ad .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_eebb ));_fbge :=_egafe .FindIndex (_eebb );if _fbge ==nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_bcf .ErrTypeError ;};_ebeaa :=_fbge [1];_adaa :=_be .Index (string (_eebb [_ebeaa :]),_bbef );if _adaa < 0{_ecab =string (_eebb [_ebeaa :]);return _ecab ,"",nil ;};_fdfgd :=_ebeaa +_adaa ;_ecab =string (_eebb [_ebeaa :_fdfgd ]);_bfefbc :=_fdfgd ;_adaa =_be .Index (string (_eebb [_bfefbc :]),_dcffg );if _adaa < 0{_ad .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_decc );return "","",_bcf .ErrTypeError ;};_bdddc :=_bfefbc +_adaa ;_gbgbd =string (_eebb [_bfefbc :_bdddc ]);return _ecab ,_gbgbd ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ebef :=NewPdfAnnotation ();_cdgf :=&PdfAnnotationFileAttachment {};_cdgf .PdfAnnotation =_ebef ;_cdgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebef .SetContext (_cdgf );return _cdgf ;};func (_gacba *PdfReader )newPdfFieldFromIndirectObject (_adagb *_bcf .PdfIndirectObject ,_cgbbd *PdfField )(*PdfField ,error ){if _fcfe ,_ebbfg :=_gacba ._adaff .GetModelFromPrimitive (_adagb ).(*PdfField );_ebbfg {return _fcfe ,nil ;};_gaecf ,_degf :=_bcf .GetDict (_adagb );if !_degf {return nil ,_bc .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cfbg :=NewPdfField ();_cfbg ._egegf =_adagb ;_cfbg ._egegf .PdfObject =_gaecf ;if _beceb ,_efdf :=_bcf .GetName (_gaecf .Get ("\u0046\u0054"));_efdf {_cfbg .FT =_beceb ;};if _cgbbd !=nil {_cfbg .Parent =_cgbbd ;};_cfbg .T ,_ =_gaecf .Get ("\u0054").(*_bcf .PdfObjectString );_cfbg .TU ,_ =_gaecf .Get ("\u0054\u0055").(*_bcf .PdfObjectString );_cfbg .TM ,_ =_gaecf .Get ("\u0054\u004d").(*_bcf .PdfObjectString );_cfbg .Ff ,_ =_gaecf .Get ("\u0046\u0066").(*_bcf .PdfObjectInteger );_cfbg .V =_gaecf .Get ("\u0056");_cfbg .DV =_gaecf .Get ("\u0044\u0056");_cfbg .AA =_gaecf .Get ("\u0041\u0041");_bag :=_cfbg .FT ;if _bag ==nil &&_cgbbd !=nil {_bag =_cgbbd .FT ;};if _bag !=nil {switch *_bag {case "\u0054\u0078":_dfdgg ,_dcdee :=_geec (_gaecf );if _dcdee !=nil {return nil ,_dcdee ;};_dfdgg .PdfField =_cfbg ;_cfbg ._dggcd =_dfdgg ;case "\u0043\u0068":_dgcf ,_eddf :=_ffffd (_gaecf );if _eddf !=nil {return nil ,_eddf ;};_dgcf .PdfField =_cfbg ;_cfbg ._dggcd =_dgcf ;case "\u0042\u0074\u006e":_faae ,_acca :=_aeeb (_gaecf );if _acca !=nil {return nil ,_acca ;};_faae .PdfField =_cfbg ;_cfbg ._dggcd =_faae ;case "\u0053\u0069\u0067":_fdde ,_afff :=_gacba .newPdfFieldSignatureFromDict (_gaecf );if _afff !=nil {return nil ,_afff ;};_fdde .PdfField =_cfbg ;_cfbg ._dggcd =_fdde ;default:_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_cfbg .FT );return nil ,_f .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _cdec ,_gdgbbb :=_bcf .GetName (_gaecf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gdgbbb {if *_cdec =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gfdec ,_dagcg :=_gacba .newPdfAnnotationFromIndirectObject (_adagb );if _dagcg !=nil {return nil ,_dagcg ;};_geggg ,_bdfa :=_gfdec .GetContext ().(*PdfAnnotationWidget );if !_bdfa {return nil ,_f .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_geggg ._efc =_cfbg ;_geggg .Parent =_cfbg ._egegf ;_cfbg .Annotations =append (_cfbg .Annotations ,_geggg );return _cfbg ,nil ;};};_aadg :=true ;if _ebfa ,_abcbf :=_bcf .GetArray (_gaecf .Get ("\u004b\u0069\u0064\u0073"));_abcbf {_dgbb :=make ([]*_bcf .PdfIndirectObject ,0,_ebfa .Len ());for _ ,_edbb :=range _ebfa .Elements (){_adced ,_dace :=_bcf .GetIndirect (_edbb );if !_dace {_acge ,_dcbb :=_bcf .GetStream (_edbb );if _dcbb &&_acge .PdfObjectDictionary !=nil {_fgbe ,_fgga :=_bcf .GetNameVal (_acge .Get ("\u0054\u0079\u0070\u0065"));if _fgga &&_fgbe =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ad .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_f .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_fdbdf ,_bcbga :=_bcf .GetDict (_adced );if !_bcbga {return nil ,ErrTypeCheck ;};if _aadg {_aadg =!_ggef (_fdbdf );};_dgbb =append (_dgbb ,_adced );};for _ ,_gbfc :=range _dgbb {if _aadg {_decg ,_bgbbc :=_gacba .newPdfAnnotationFromIndirectObject (_gbfc );if _bgbbc !=nil {_ad .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bgbbc );return nil ,_bgbbc ;};_bcgcb ,_eecd :=_decg ._ffb .(*PdfAnnotationWidget );if !_eecd {return nil ,ErrTypeCheck ;};_bcgcb ._efc =_cfbg ;_cfbg .Annotations =append (_cfbg .Annotations ,_bcgcb );}else {_gegc ,_cadb :=_gacba .newPdfFieldFromIndirectObject (_gbfc ,_cfbg );if _cadb !=nil {_ad .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cadb );return nil ,_cadb ;};_cfbg .Kids =append (_cfbg .Kids ,_gegc );};};};return _cfbg ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_adceg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _adceg ._gbgd ==nil {_adceg .GetAnnotations ();};_adceg ._gbgd =append (_adceg ._gbgd ,annot );};func _cggc (_fgcag _bcf .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gaga :=NewPdfColorspaceSpecialSeparation ();if _egbb ,_gada :=_fgcag .(*_bcf .PdfIndirectObject );_gada {_gaga ._fbgf =_egbb ;};_fgcag =_bcf .TraceToDirectObject (_fgcag );_faaca ,_fffa :=_fgcag .(*_bcf .PdfObjectArray );if !_fffa {return nil ,_bc .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _faaca .Len ()!=4{return nil ,_bc .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fgcag =_faaca .Get (0);_fceba ,_fffa :=_fgcag .(*_bcf .PdfObjectName );if !_fffa {return nil ,_bc .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_fceba !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_bc .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_fgcag =_faaca .Get (1);_fceba ,_fffa =_fgcag .(*_bcf .PdfObjectName );if !_fffa {return nil ,_bc .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_gaga .ColorantName =_fceba ;_fgcag =_faaca .Get (2);_egcbe ,_gacaf :=NewPdfColorspaceFromPdfObject (_fgcag );if _gacaf !=nil {return nil ,_gacaf ;};_gaga .AlternateSpace =_egcbe ;_dagc ,_gacaf :=_afag (_faaca .Get (3));if _gacaf !=nil {return nil ,_gacaf ;};_gaga .TintTransform =_dagc ;return _gaga ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bfeeb =creator };func (_dbc *PdfReader )newPdfAnnotationWidgetFromDict (_gcce *_bcf .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_eeff :=PdfAnnotationWidget {};_eeff .H =_gcce .Get ("\u0048");_eeff .MK =_gcce .Get ("\u004d\u004b");_eeff .A =_gcce .Get ("\u0041");_eeff .AA =_gcce .Get ("\u0041\u0041");_eeff .BS =_gcce .Get ("\u0042\u0053");_eeff .Parent =_gcce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_eeff ,nil ;};func (_fdgbd *PdfWriter )updateObjectNumbers (){_fbced :=_fdgbd .ObjNumOffset ;_dacgb :=0;for _ ,_gacggd :=range _fdgbd ._bdgbd {_feeef :=int64 (_dacgb +1+_fbced );_fefeg :=true ;if _fdgbd ._aegee {if _edceg ,_cedff :=_fdgbd ._cccff [_gacggd ];_cedff {_feeef =_edceg ;_fefeg =false ;};};switch _gfggb :=_gacggd .(type ){case *_bcf .PdfIndirectObject :_gfggb .ObjectNumber =_feeef ;_gfggb .GenerationNumber =0;case *_bcf .PdfObjectStream :_gfggb .ObjectNumber =_feeef ;_gfggb .GenerationNumber =0;case *_bcf .PdfObjectStreams :_gfggb .ObjectNumber =_feeef ;_gfggb .GenerationNumber =0;default:_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_gfggb );continue ;};if _fefeg {_dacgb ++;};};_dgdgf :=func (_cbdfg _bcf .PdfObject )int64 {switch _dgec :=_cbdfg .(type ){case *_bcf .PdfIndirectObject :return _dgec .ObjectNumber ;case *_bcf .PdfObjectStream :return _dgec .ObjectNumber ;case *_bcf .PdfObjectStreams :return _dgec .ObjectNumber ;};return 0;};_ccc .SliceStable (_fdgbd ._bdgbd ,func (_aadf ,_dbbbg int )bool {return _dgdgf (_fdgbd ._bdgbd [_aadf ])< _dgdgf (_fdgbd ._bdgbd [_dbbbg ])});};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bccg *PdfColorspaceICCBased )ToPdfObject ()_bcf .PdfObject {_gbaa :=&_bcf .PdfObjectArray {};_gbaa .Append (_bcf .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _abfg *_bcf .PdfObjectStream ;if _bccg ._fdbd !=nil {_abfg =_bccg ._fdbd ;}else {_abfg =&_bcf .PdfObjectStream {};};_afbg :=_bcf .MakeDict ();_afbg .Set ("\u004e",_bcf .MakeInteger (int64 (_bccg .N )));if _bccg .Alternate !=nil {_afbg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bccg .Alternate .ToPdfObject ());};if _bccg .Metadata !=nil {_afbg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bccg .Metadata );};if _bccg .Range !=nil {var _bcabf []_bcf .PdfObject ;for _ ,_fcddb :=range _bccg .Range {_bcabf =append (_bcabf ,_bcf .MakeFloat (_fcddb ));};_afbg .Set ("\u0052\u0061\u006eg\u0065",_bcf .MakeArray (_bcabf ...));};_afbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcf .MakeInteger (int64 (len (_bccg .Data ))));_abfg .Stream =_bccg .Data ;_abfg .PdfObjectDictionary =_afbg ;_gbaa .Append (_abfg );if _bccg ._cdgea !=nil {_bccg ._cdgea .PdfObject =_gbaa ;return _bccg ._cdgea ;};return _gbaa ;};

// L returns the value of the L component of the color.
func (_faf *PdfColorLab )L ()float64 {return float64 (_faf [0])};var _cfgfa ="";

// ToPdfObject returns the PDF representation of the function.
func (_aadb *PdfFunctionType0 )ToPdfObject ()_bcf .PdfObject {if _aadb ._ecfgc ==nil {_aadb ._ecfgc =&_bcf .PdfObjectStream {};};_ffcdb :=_bcf .MakeDict ();_ffcdb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcf .MakeInteger (0));_abeb :=&_bcf .PdfObjectArray {};for _ ,_ffeae :=range _aadb .Domain {_abeb .Append (_bcf .MakeFloat (_ffeae ));};_ffcdb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abeb );_cgfda :=&_bcf .PdfObjectArray {};for _ ,_efcb :=range _aadb .Range {_cgfda .Append (_bcf .MakeFloat (_efcb ));};_ffcdb .Set ("\u0052\u0061\u006eg\u0065",_cgfda );_fbab :=&_bcf .PdfObjectArray {};for _ ,_eebe :=range _aadb .Size {_fbab .Append (_bcf .MakeInteger (int64 (_eebe )));};_ffcdb .Set ("\u0053\u0069\u007a\u0065",_fbab );_ffcdb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bcf .MakeInteger (int64 (_aadb .BitsPerSample )));if _aadb .Order !=1{_ffcdb .Set ("\u004f\u0072\u0064e\u0072",_bcf .MakeInteger (int64 (_aadb .Order )));};_ffcdb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcf .MakeInteger (int64 (len (_aadb ._gadfcf ))));_aadb ._ecfgc .Stream =_aadb ._gadfcf ;_aadb ._ecfgc .PdfObjectDictionary =_ffcdb ;return _aadb ._ecfgc ;};var _fcaa =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bcf .PdfObjectStream ;Data []byte ;_cdgea *_bcf .PdfIndirectObject ;_fdbd *_bcf .PdfObjectStream ;};type pdfCIDFontType0 struct{fontCommon ;_cdeaa *_bcf .PdfIndirectObject ;_aaca _dc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bcf .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bcf .PdfObject ;W _bcf .PdfObject ;DW2 _bcf .PdfObject ;W2 _bcf .PdfObject ;_cabd map[_dc .CharCode ]float64 ;_dcaeb float64 ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_edcd *PdfShading )GetContainingPdfObject ()_bcf .PdfObject {return _edcd ._aeddc };

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ddeg *PdfPattern )SetContext (ctx PdfModel ){_ddeg ._fbgec =ctx };func (_fdeab *PdfWriter )addObject (_acdc _bcf .PdfObject )bool {_ebgec :=_fdeab .hasObject (_acdc );if !_ebgec {_edgga :=_bcf .ResolveReferencesDeep (_acdc ,_fdeab ._gfeb );if _edgga !=nil {_ad .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_edgga );};_fdeab ._bdgbd =append (_fdeab ._bdgbd ,_acdc );_fdeab ._ccecce [_acdc ]=struct{}{};return true ;};return false ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_dabfe *PdfField )Flags ()FieldFlag {var _bbdfc FieldFlag ;_efca ,_gddd :=_dabfe .inherit (func (_cfgac *PdfField )bool {if _cfgac .Ff !=nil {_bbdfc =FieldFlag (*_dabfe .Ff );return true ;};return false ;});if _gddd !=nil {_ad .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gddd );};if !_efca {_ad .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bbdfc ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bcf .PdfObjectArray )(*PdfRectangle ,error ){_accdg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _acdad error ;_accdg .Llx ,_acdad =_bcf .GetNumberAsFloat (arr .Get (0));if _acdad !=nil {return nil ,_acdad ;};_accdg .Lly ,_acdad =_bcf .GetNumberAsFloat (arr .Get (1));if _acdad !=nil {return nil ,_acdad ;};_accdg .Urx ,_acdad =_bcf .GetNumberAsFloat (arr .Get (2));if _acdad !=nil {return nil ,_acdad ;};_accdg .Ury ,_acdad =_bcf .GetNumberAsFloat (arr .Get (3));if _acdad !=nil {return nil ,_acdad ;};return &_accdg ,nil ;};func (_dbcde *PdfReader )flattenFieldsWithOpts (_cdda bool ,_dddf FieldAppearanceGenerator ,_ffdc *FieldFlattenOpts )error {if _ffdc ==nil {_ffdc =&FieldFlattenOpts {};};var _gcba bool ;_agffc :=map[*PdfAnnotation ]bool {};{var _bagg []*PdfField ;_eaga :=_dbcde .AcroForm ;if _eaga !=nil {if _ffdc .FilterFunc !=nil {_bagg =_eaga .filteredFields (_ffdc .FilterFunc ,true );_gcba =_eaga .Fields !=nil &&len (*_eaga .Fields )> 0;}else {_bagg =_eaga .AllFields ();};};for _ ,_fbda :=range _bagg {for _ ,_dedd :=range _fbda .Annotations {_agffc [_dedd .PdfAnnotation ]=_fbda .V !=nil ;if _dddf !=nil {_acfbe ,_ebaa :=_dddf .GenerateAppearanceDict (_eaga ,_fbda ,_dedd );if _ebaa !=nil {return _ebaa ;};_dedd .AP =_acfbe ;};};};};if _cdda {for _ ,_afdb :=range _dbcde .PageList {_cdba ,_gagdb :=_afdb .GetAnnotations ();if _gagdb !=nil {return _gagdb ;};for _ ,_gebf :=range _cdba {_agffc [_gebf ]=true ;};};};for _ ,_cgcg :=range _dbcde .PageList {var _ecce []*PdfAnnotation ;if _dddf !=nil {if _bea :=_dddf .WrapContentStream (_cgcg );_bea !=nil {return _bea ;};};_gdfe ,_bbea :=_cgcg .GetAnnotations ();if _bbea !=nil {return _bbea ;};for _ ,_baab :=range _gdfe {_gdfb ,_gfdege :=_agffc [_baab ];if !_gfdege {_ecce =append (_ecce ,_baab );continue ;};switch _baab .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_aaacg ,_ecb ,_bcgca :=_cdae (_baab );if _bcgca !=nil {if !_gdfb {_ad .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bcgca );continue ;};if _aaacg ==nil {continue ;};_bgdb :=_cgcg .Resources .GenerateXObjectName ();_cgcg .Resources .SetXObjectFormByName (_bgdb ,_aaacg );_agaeb :=_db .Min (_ecb .Llx ,_ecb .Urx );_cafd :=_db .Min (_ecb .Lly ,_ecb .Ury );var _fdded []string ;_fdded =append (_fdded ,"\u0071");_fdded =append (_fdded ,_bc .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_agaeb ,_cafd ));_fdded =append (_fdded ,_bc .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bgdb .String ()));_fdded =append (_fdded ,"\u0051");_defb :=_be .Join (_fdded ,"\u000a");_bcgca =_cgcg .AppendContentStream (_defb );if _bcgca !=nil {return _bcgca ;};if _aaacg .Resources !=nil {_cgbbf ,_faaa :=_bcf .GetDict (_aaacg .Resources .Font );if _faaa {for _ ,_eefc :=range _cgbbf .Keys (){if !_cgcg .Resources .HasFontByName (_eefc ){_cgcg .Resources .SetFontByName (_eefc ,_cgbbf .Get (_eefc ));};};};};};if len (_ecce )> 0{_cgcg ._gbgd =_ecce ;}else {_cgcg ._gbgd =[]*PdfAnnotation {};};};if !_gcba {_dbcde .AcroForm =nil ;};return nil ;};func (_efg *PdfReader )newPdfAnnotationLinkFromDict (_ged *_bcf .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_geg :=PdfAnnotationLink {};_geg .A =_ged .Get ("\u0041");_geg .Dest =_ged .Get ("\u0044\u0065\u0073\u0074");_geg .H =_ged .Get ("\u0048");_geg .PA =_ged .Get ("\u0050\u0041");_geg .QuadPoints =_ged .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_geg .BS =_ged .Get ("\u0042\u0053");return &_geg ,nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gffb *BorderStyle )GetPdfName ()string {switch *_gffb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cdfbd pdfFontSimple )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){if _cdfbd ._agcc !=nil {_bgdec ,_edce :=_cdfbd ._agcc [r ];if _edce {return _bgdec ,true ;};};_befb :=_cdfbd .Encoder ();if _befb ==nil {_ad .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cdfbd );return _cb .CharMetrics {},false ;};_dfeag ,_dfgdg :=_befb .RuneToCharcode (r );if !_dfgdg {if r !=' '{_ad .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cdfbd );};return _cb .CharMetrics {},false ;};_dceba ,_egee :=_cdfbd .GetCharMetrics (_dfeag );return _dceba ,_egee ;};func _bbacd ()string {return _agec };

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_aedd :=NewPdfAnnotation ();_cab :=&PdfAnnotationRedact {};_cab .PdfAnnotation =_aedd ;_cab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aedd .SetContext (_cab );return _cab ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_ddb *PdfAppender )UpdateObject (obj _bcf .PdfObject ){_ddb .replaceObject (obj ,obj );if _ ,_bdcb :=_ddb ._dggb [obj ];!_bdcb {_ddb ._ebbb =append (_ddb ._ebbb ,obj );_ddb ._dggb [obj ]=struct{}{};};};func (_dbffb fontCommon )asPdfObjectDictionary (_fgeg string )*_bcf .PdfObjectDictionary {if _fgeg !=""&&_dbffb ._ddcbb !=""&&_fgeg !=_dbffb ._ddcbb {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fgeg ,_dbffb );}else if _fgeg ==""&&_dbffb ._ddcbb ==""{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dbffb );}else if _dbffb ._ddcbb ==""{_dbffb ._ddcbb =_fgeg ;};_bgdac :=_bcf .MakeDict ();_bgdac .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0046\u006f\u006e\u0074"));_bgdac .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bcf .MakeName (_dbffb ._agaf ));_bgdac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName (_dbffb ._ddcbb ));if _dbffb ._debbe !=nil {_bgdac .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dbffb ._debbe .ToPdfObject ());};if _dbffb ._bcae !=nil {_bgdac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dbffb ._bcae );}else if _dbffb ._ecba !=nil {_dfead ,_edcfa :=_dbffb ._ecba .Stream ();if _edcfa !=nil {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_edcfa );}else {_bgdac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dfead );};};return _bgdac ;};var _ pdfFont =(*pdfFontType0 )(nil );func _dgbff (_edceb *[]*PdfField ,_fafe FieldFilterFunc ,_gaebc bool )[]*PdfField {if _edceb ==nil {return nil ;};_gebg :=*_edceb ;if len (*_edceb )==0{return nil ;};_cead :=_gebg [:0];if _fafe ==nil {_fafe =func (*PdfField )bool {return true };};var _cebad []*PdfField ;for _ ,_fafd :=range _gebg {_ddcbga :=_fafe (_fafd );if _ddcbga {_cebad =append (_cebad ,_fafd );if len (_fafd .Kids )> 0{_cebad =append (_cebad ,_dgbff (&_fafd .Kids ,_fafe ,_gaebc )...);};};if !_gaebc ||!_ddcbga ||len (_fafd .Kids )> 0{_cead =append (_cead ,_fafd );};};*_edceb =_cead ;return _cebad ;};func _gbbf (_gbbd _bcf .PdfObject )(*PdfColorspaceLab ,error ){_defe :=NewPdfColorspaceLab ();if _bfgf ,_bbaga :=_gbbd .(*_bcf .PdfIndirectObject );_bbaga {_defe ._gbaf =_bfgf ;};_gbbd =_bcf .TraceToDirectObject (_gbbd );_aae ,_gbgca :=_gbbd .(*_bcf .PdfObjectArray );if !_gbgca {return nil ,_bc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aae .Len ()!=2{return nil ,_bc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_gbbd =_bcf .TraceToDirectObject (_aae .Get (0));_gdgf ,_gbgca :=_gbbd .(*_bcf .PdfObjectName );if !_gbgca {return nil ,_bc .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_gdgf !="\u004c\u0061\u0062"{return nil ,_bc .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gbbd =_bcf .TraceToDirectObject (_aae .Get (1));_gbbe ,_gbgca :=_gbbd .(*_bcf .PdfObjectDictionary );if !_gbgca {return nil ,_bc .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gbbd =_gbbe .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gbbd =_bcf .TraceToDirectObject (_gbbd );_gbea ,_gbgca :=_gbbd .(*_bcf .PdfObjectArray );if !_gbgca {return nil ,_bc .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _gbea .Len ()!=3{return nil ,_bc .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_bcgga ,_bbcc :=_gbea .GetAsFloat64Slice ();if _bbcc !=nil {return nil ,_bbcc ;};_defe .WhitePoint =_bcgga ;_gbbd =_gbbe .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gbbd !=nil {_gbbd =_bcf .TraceToDirectObject (_gbbd );_abcb ,_fdfb :=_gbbd .(*_bcf .PdfObjectArray );if !_fdfb {return nil ,_bc .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _abcb .Len ()!=3{return nil ,_bc .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_cacc ,_bfgg :=_abcb .GetAsFloat64Slice ();if _bfgg !=nil {return nil ,_bfgg ;};_defe .BlackPoint =_cacc ;};_gbbd =_gbbe .Get ("\u0052\u0061\u006eg\u0065");if _gbbd !=nil {_gbbd =_bcf .TraceToDirectObject (_gbbd );_eggcb ,_bgge :=_gbbd .(*_bcf .PdfObjectArray );if !_bgge {_ad .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_bc .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eggcb .Len ()!=4{_ad .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_bc .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fbfe ,_baa :=_eggcb .GetAsFloat64Slice ();if _baa !=nil {return nil ,_baa ;};_defe .Range =_fbfe ;};return _defe ,nil ;};func (_ccfb *PdfPage )getParentResources ()(*PdfPageResources ,error ){_baaafb :=_ccfb .Parent ;for _baaafb !=nil {_geed ,_dggfg :=_bcf .GetDict (_baaafb );if !_dggfg {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _ebadc :=_geed .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ebadc !=nil {_bbffg ,_cdeb :=_bcf .GetDict (_ebadc );if !_cdeb {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_abafb ,_bccabe :=NewPdfPageResourcesFromDict (_bbffg );if _bccabe !=nil {return nil ,_bccabe ;};return _abafb ,nil ;};_baaafb =_geed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_acgd pdfCIDFontType2 )GetCharMetrics (code _dc .CharCode )(_cb .CharMetrics ,bool ){if _bacb ,_edddd :=_acgd ._cbea [code ];_edddd {return _cb .CharMetrics {Wx :float64 (_bacb )},true ;};_adagd :=rune (code );_dcfgc ,_geeae :=_acgd ._bdgf [_adagd ];if !_geeae {_dcfgc =int (_acgd ._bafc );};return _cb .CharMetrics {Wx :float64 (_dcfgc )},true ;};func _caff (_fabg *_bcf .PdfObjectStream )(*PdfFunctionType0 ,error ){_fbedg :=&PdfFunctionType0 {};_fbedg ._ecfgc =_fabg ;_aabd :=_fabg .PdfObjectDictionary ;_eeaf ,_ebcg :=_bcf .TraceToDirectObject (_aabd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcf .PdfObjectArray );if !_ebcg {_ad .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eeaf .Len ()< 0||_eeaf .Len ()%2!=0{_ad .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fbedg .NumInputs =_eeaf .Len ()/2;_feaab ,_fcdag :=_eeaf .ToFloat64Array ();if _fcdag !=nil {return nil ,_fcdag ;};_fbedg .Domain =_feaab ;_eeaf ,_ebcg =_bcf .TraceToDirectObject (_aabd .Get ("\u0052\u0061\u006eg\u0065")).(*_bcf .PdfObjectArray );if !_ebcg {_ad .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eeaf .Len ()< 0||_eeaf .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fbedg .NumOutputs =_eeaf .Len ()/2;_cdbf ,_fcdag :=_eeaf .ToFloat64Array ();if _fcdag !=nil {return nil ,_fcdag ;};_fbedg .Range =_cdbf ;_eeaf ,_ebcg =_bcf .TraceToDirectObject (_aabd .Get ("\u0053\u0069\u007a\u0065")).(*_bcf .PdfObjectArray );if !_ebcg {_ad .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_acab ,_fcdag :=_eeaf .ToIntegerArray ();if _fcdag !=nil {return nil ,_fcdag ;};if len (_acab )!=_fbedg .NumInputs {_ad .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbedg .Size =_acab ;_cccc ,_ebcg :=_bcf .TraceToDirectObject (_aabd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bcf .PdfObjectInteger );if !_ebcg {_ad .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_cccc !=1&&*_cccc !=2&&*_cccc !=4&&*_cccc !=8&&*_cccc !=12&&*_cccc !=16&&*_cccc !=24&&*_cccc !=32{_ad .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cccc );return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbedg .BitsPerSample =int (*_cccc );_fbedg .Order =1;_fcfab ,_ebcg :=_bcf .TraceToDirectObject (_aabd .Get ("\u004f\u0072\u0064e\u0072")).(*_bcf .PdfObjectInteger );if _ebcg {if *_fcfab !=1&&*_fcfab !=3{_ad .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_fcfab );return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbedg .Order =int (*_fcfab );};_eeaf ,_ebcg =_bcf .TraceToDirectObject (_aabd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bcf .PdfObjectArray );if _ebcg {_eada ,_agacg :=_eeaf .ToFloat64Array ();if _agacg !=nil {return nil ,_agacg ;};_fbedg .Encode =_eada ;};_eeaf ,_ebcg =_bcf .TraceToDirectObject (_aabd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bcf .PdfObjectArray );if _ebcg {_cfddd ,_ggdb :=_eeaf .ToFloat64Array ();if _ggdb !=nil {return nil ,_ggdb ;};_fbedg .Decode =_cfddd ;};_gbdfd ,_fcdag :=_bcf .DecodeStream (_fabg );if _fcdag !=nil {return nil ,_fcdag ;};_fbedg ._gadfcf =_gbdfd ;return _fbedg ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_fdefdad *pdfSignDictionary )GetSubFilter ()string {_cbbgf :=_fdefdad .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _cbbgf ==nil {return "";};if _aefae ,_gfaf :=_bcf .GetNameVal (_cbbgf );_gfaf {return _aefae ;};return "";};

// Items returns all children outline items.
func (_gffge *Outline )Items ()[]*OutlineItem {return _gffge .Entries };

// ColorToRGB converts an Indexed color to an RGB color.
func (_bcdg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bcdg .Base ==nil {return nil ,_f .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _bcdg .Base .ColorToRGB (color );};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_ab :=NewPdfAction ();_ac :=&PdfActionJavaScript {};_ac .PdfAction =_ab ;_ab .SetContext (_ac );return _ac ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cadf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdced ,_bgdd :=_bcf .GetNumbersAsFloat (objects );if _bgdd !=nil {return nil ,_bgdd ;};return _cadf .ColorFromFloats (_fdced );};

// ToPdfObject implements interface PdfModel.
func (_decae *PdfAnnotationSquare )ToPdfObject ()_bcf .PdfObject {_decae .PdfAnnotation .ToPdfObject ();_ebed :=_decae ._fab ;_gcad :=_ebed .PdfObject .(*_bcf .PdfObjectDictionary );if _decae .PdfAnnotationMarkup !=nil {_decae .PdfAnnotationMarkup .appendToPdfDictionary (_gcad );};_gcad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_gcad .SetIfNotNil ("\u0042\u0053",_decae .BS );_gcad .SetIfNotNil ("\u0049\u0043",_decae .IC );_gcad .SetIfNotNil ("\u0042\u0045",_decae .BE );_gcad .SetIfNotNil ("\u0052\u0044",_decae .RD );return _ebed ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_aceec :=&PdfColorspaceDeviceN {};return _aceec ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gfcce :=&PdfColorspaceSpecialSeparation {};return _gfcce ;};

// GetPage returns the PdfPage model for the specified page number.
func (_feeg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _feeg ._eagdg .GetCrypter ()!=nil &&!_feeg ._eagdg .IsAuthenticated (){return nil ,_bc .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_feeg ._ffbf )< pageNumber {return nil ,_f .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_fadb :=pageNumber -1;if _fadb < 0{return nil ,_bc .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_geac :=_feeg .PageList [_fadb ];return _geac ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_fdg :=NewPdfAction ();_bbc :=&PdfActionTrans {};_bbc .PdfAction =_fdg ;_fdg .SetContext (_bbc );return _bbc ;};func (_edee *PdfAppender )updateObjectsDeep (_fdf _bcf .PdfObject ,_bbeg map[_bcf .PdfObject ]struct{}){if _bbeg ==nil {_bbeg =map[_bcf .PdfObject ]struct{}{};};if _ ,_cbfg :=_bbeg [_fdf ];_cbfg ||_fdf ==nil {return ;};_bbeg [_fdf ]=struct{}{};_bae :=_bcf .ResolveReferencesDeep (_fdf ,_edee ._deb );if _bae !=nil {_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bae );};switch _bfbf :=_fdf .(type ){case *_bcf .PdfIndirectObject :switch {case _bfbf .GetParser ()==_edee ._bdfd ._eagdg :return ;case _bfbf .GetParser ()==_edee .Reader ._eagdg :_debb ,_ :=_edee ._bdfd .GetIndirectObjectByNumber (int (_bfbf .ObjectNumber ));_ceba ,_bade :=_debb .(*_bcf .PdfIndirectObject );if _bade &&_ceba !=nil {if _ceba .PdfObject !=_bfbf .PdfObject &&_ceba .PdfObject .WriteString ()!=_bfbf .PdfObject .WriteString (){_edee .addNewObject (_fdf );_edee ._aeddf [_fdf ]=_bfbf .ObjectNumber ;};};default:_edee .addNewObject (_fdf );};_edee .updateObjectsDeep (_bfbf .PdfObject ,_bbeg );case *_bcf .PdfObjectArray :for _ ,_dgbga :=range _bfbf .Elements (){_edee .updateObjectsDeep (_dgbga ,_bbeg );};case *_bcf .PdfObjectDictionary :for _ ,_cgfg :=range _bfbf .Keys (){_edee .updateObjectsDeep (_bfbf .Get (_cgfg ),_bbeg );};case *_bcf .PdfObjectStreams :if _bfbf .GetParser ()!=_edee ._bdfd ._eagdg {for _ ,_cbag :=range _bfbf .Elements (){_edee .updateObjectsDeep (_cbag ,_bbeg );};};case *_bcf .PdfObjectStream :switch {case _bfbf .GetParser ()==_edee ._bdfd ._eagdg :return ;case _bfbf .GetParser ()==_edee .Reader ._eagdg :if _dea ,_dfeeb :=_edee ._bdfd ._eagdg .LookupByReference (_bfbf .PdfObjectReference );_dfeeb ==nil {var _acee bool ;if _adbf ,_eeacg :=_bcf .GetStream (_dea );_eeacg &&_ce .Equal (_adbf .Stream ,_bfbf .Stream ){_acee =true ;};if _eeged ,_ddfc :=_bcf .GetDict (_dea );_acee &&_ddfc {_acee =_eeged .WriteString ()==_bfbf .PdfObjectDictionary .WriteString ();};if _acee {return ;};};if _bfbf .ObjectNumber !=0{_edee ._aeddf [_fdf ]=_bfbf .ObjectNumber ;};default:if _ ,_ffc :=_edee ._dggb [_fdf ];!_ffc {_edee .addNewObject (_fdf );};};_edee .updateObjectsDeep (_bfbf .PdfObjectDictionary ,_bbeg );};};func _dcgbg (_dgbf _bcf .PdfObject )(*fontFile ,error ){_ad .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_dgbf );_dbgd :=&fontFile {};_dgbf =_bcf .TraceToDirectObject (_dgbf );_befef ,_eadgb :=_dgbf .(*_bcf .PdfObjectStream );if !_eadgb {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_dgbf );return nil ,_bcf .ErrTypeError ;};_aagd :=_befef .PdfObjectDictionary ;_abggf ,_aeeba :=_bcf .DecodeStream (_befef );if _aeeba !=nil {return nil ,_aeeba ;};_adgbec ,_eadgb :=_bcf .GetNameVal (_aagd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_eadgb {_dbgd ._dced =_adgbec ;if _adgbec =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ad .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_agceb ,_ :=_bcf .GetIntVal (_aagd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_efedc ,_ :=_bcf .GetIntVal (_aagd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _agceb > len (_abggf ){_agceb =len (_abggf );};if _agceb +_efedc > len (_abggf ){_efedc =len (_abggf )-_agceb ;};_badb :=_abggf [:_agceb ];var _gbbee []byte ;if _efedc > 0{_gbbee =_abggf [_agceb :_agceb +_efedc ];};if _agceb > 0&&_efedc > 0{_ebce :=_dbgd .loadFromSegments (_badb ,_gbbee );if _ebce !=nil {return nil ,_ebce ;};};return _dbgd ,nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_geeg *XObjectForm )GetContentStream ()([]byte ,error ){_dfebd ,_geefag :=_bcf .DecodeStream (_geeg ._dcedg );if _geefag !=nil {return nil ,_geefag ;};return _dfebd ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_cebc *PdfAnnotationLink )SetAction (action *PdfAction ){_cebc ._fbd =action ;if action ==nil {_cebc .A =nil ;};};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_bdeb :=NewPdfAnnotation ();_ffbd :=&PdfAnnotationScreen {};_ffbd .PdfAnnotation =_bdeb ;_bdeb .SetContext (_ffbd );return _ffbd ;};func _ffffd (_aggac *_bcf .PdfObjectDictionary )(*PdfFieldChoice ,error ){_degc :=&PdfFieldChoice {};_degc .Opt ,_ =_bcf .GetArray (_aggac .Get ("\u004f\u0070\u0074"));_degc .TI ,_ =_bcf .GetInt (_aggac .Get ("\u0054\u0049"));_degc .I ,_ =_bcf .GetArray (_aggac .Get ("\u0049"));return _degc ,nil ;};func _ebage (_eage _bcf .PdfObject )(*PdfColorspaceCalGray ,error ){_gecf :=NewPdfColorspaceCalGray ();if _eedb ,_bbda :=_eage .(*_bcf .PdfIndirectObject );_bbda {_gecf ._dfafbb =_eedb ;};_eage =_bcf .TraceToDirectObject (_eage );_gef ,_ddfg :=_eage .(*_bcf .PdfObjectArray );if !_ddfg {return nil ,_bc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gef .Len ()!=2{return nil ,_bc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_eage =_bcf .TraceToDirectObject (_gef .Get (0));_dcebe ,_ddfg :=_eage .(*_bcf .PdfObjectName );if !_ddfg {return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_dcebe !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_bc .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_eage =_bcf .TraceToDirectObject (_gef .Get (1));_bdge ,_ddfg :=_eage .(*_bcf .PdfObjectDictionary );if !_ddfg {return nil ,_bc .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_eage =_bdge .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_eage =_bcf .TraceToDirectObject (_eage );_dbfe ,_ddfg :=_eage .(*_bcf .PdfObjectArray );if !_ddfg {return nil ,_bc .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _dbfe .Len ()!=3{return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fbfb ,_edabc :=_dbfe .GetAsFloat64Slice ();if _edabc !=nil {return nil ,_edabc ;};_gecf .WhitePoint =_fbfb ;_eage =_bdge .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _eage !=nil {_eage =_bcf .TraceToDirectObject (_eage );_bbac ,_edca :=_eage .(*_bcf .PdfObjectArray );if !_edca {return nil ,_bc .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _bbac .Len ()!=3{return nil ,_bc .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fdef ,_ccdc :=_bbac .GetAsFloat64Slice ();if _ccdc !=nil {return nil ,_ccdc ;};_gecf .BlackPoint =_fdef ;};_eage =_bdge .Get ("\u0047\u0061\u006dm\u0061");if _eage !=nil {_eage =_bcf .TraceToDirectObject (_eage );_eega ,_acbbc :=_bcf .GetNumberAsFloat (_eage );if _acbbc !=nil {return nil ,_bc .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_gecf .Gamma =_eega ;};return _gecf ,nil ;};type fontCommon struct{_agaf string ;_ddcbb string ;_bfge string ;_bcae _bcf .PdfObject ;_ecba *_df .CMap ;_debbe *PdfFontDescriptor ;_gecg int64 ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_dgeba *PdfPattern )ToPdfObject ()_bcf .PdfObject {_fefb :=_dgeba .getDict ();_fefb .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fefb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bcf .MakeInteger (_dgeba .PatternType ));return _dgeba ._gebbd ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_gbaac *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_ddgdg :=_bd .NewReader (img .getBase ());_gacf :=_ceb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_gbaac .AlternateSpace .GetNumComponents (),nil ,img ._bgdfb ,nil );_ecdf :=_bd .NewWriter (_gacf );_eggcc :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_ad .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_ad .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_gbaac .TintTransform );_gdbg :=_gbaac .AlternateSpace .DecodeArray ();var (_fgdgd uint32 ;_dgdf error ;);for {_fgdgd ,_dgdf =_ddgdg .ReadSample ();if _dgdf ==_eg .EOF {break ;};if _dgdf !=nil {return img ,_dgdf ;};_cgbb :=float64 (_fgdgd )/_eggcc ;_eaff ,_aaff :=_gbaac .TintTransform .Evaluate ([]float64 {_cgbb });if _aaff !=nil {return img ,_aaff ;};for _gdgbb ,_bcca :=range _eaff {_ggeb :=_ceb .LinearInterpolate (_bcca ,_gdbg [_gdgbb *2],_gdbg [_gdgbb *2+1],0,1);if _aaff =_ecdf .WriteSample (uint32 (_ggeb *_eggcc ));_aaff !=nil {return img ,_aaff ;};};};return _gbaac .AlternateSpace .ImageToRGB (_edfe (&_gacf ));};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_gadfcf []byte ;_eedcgg []uint32 ;_ecfgc *_bcf .PdfObjectStream ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_afddb *PdfPageResources )HasColorspaceByName (keyName _bcf .PdfObjectName )bool {_cfdg ,_bgga :=_afddb .GetColorspaces ();if _bgga !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bgga );return false ;};if _cfdg ==nil {return false ;};_ ,_efda :=_cfdg .Colorspaces [string (keyName )];return _efda ;};var _ _bcf .PdfObject =&pdfSignDictionary {};func _feaf (_defbc _bcf .PdfObject )(*PdfPattern ,error ){_gfccb :=&PdfPattern {};var _cedce *_bcf .PdfObjectDictionary ;if _dbagf ,_ebfca :=_bcf .GetIndirect (_defbc );_ebfca {_gfccb ._gebbd =_dbagf ;_deecb ,_ecafa :=_dbagf .PdfObject .(*_bcf .PdfObjectDictionary );if !_ecafa {_ad .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_dbagf .PdfObject );return nil ,_bcf .ErrTypeError ;};_cedce =_deecb ;}else if _bbfbc ,_efcca :=_bcf .GetStream (_defbc );_efcca {_gfccb ._gebbd =_bbfbc ;_cedce =_bbfbc .PdfObjectDictionary ;}else {_ad .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_defbc );return nil ,_bcf .ErrTypeError ;};_aece :=_cedce .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _aece ==nil {_ad .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_fbdad ,_cfgcf :=_aece .(*_bcf .PdfObjectInteger );if !_cfgcf {_ad .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aece );return nil ,_bcf .ErrTypeError ;};if *_fbdad !=1&&*_fbdad !=2{_ad .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fbdad );return nil ,_bcf .ErrRangeError ;};_gfccb .PatternType =int64 (*_fbdad );switch *_fbdad {case 1:_ddec ,_gdcc :=_aegb (_cedce );if _gdcc !=nil {return nil ,_gdcc ;};_ddec .PdfPattern =_gfccb ;_gfccb ._fbgec =_ddec ;return _gfccb ,nil ;case 2:_ddgba ,_gefd :=_befd (_cedce );if _gefd !=nil {return nil ,_gefd ;};_ddgba .PdfPattern =_gfccb ;_gfccb ._fbgec =_ddgba ;return _gfccb ,nil ;};return nil ,_f .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};var _adgac ="";

// ColorToRGB converts a CalGray color to an RGB color.
func (_fdfc *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_geff ,_bcbce :=color .(*PdfColorCalGray );if !_bcbce {_ad .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_geff .Val ();X :=_fdfc .WhitePoint [0]*_db .Pow (ANorm ,_fdfc .Gamma );Y :=_fdfc .WhitePoint [1]*_db .Pow (ANorm ,_fdfc .Gamma );Z :=_fdfc .WhitePoint [2]*_db .Pow (ANorm ,_fdfc .Gamma );_dbbg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dabe :=-0.969256*X +1.875992*Y +0.041556*Z ;_bfcd :=0.055648*X +-0.204043*Y +1.057311*Z ;_dbbg =_db .Min (_db .Max (_dbbg ,0),1.0);_dabe =_db .Min (_db .Max (_dabe ,0),1.0);_bfcd =_db .Min (_db .Max (_bfcd ,0),1.0);return NewPdfColorDeviceRGB (_dbbg ,_dabe ,_bfcd ),nil ;};func (_adggf *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gaae :=_adggf ._debbe ;_gaae !=nil {return _gaae ;};return _adggf ._dcge ;};

// ToPdfObject implements interface PdfModel.
func (_fffff *PdfFilespec )ToPdfObject ()_bcf .PdfObject {_edge :=_fffff .getDict ();_edge .Clear ();_edge .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_edge .SetIfNotNil ("\u0046\u0053",_fffff .FS );_edge .SetIfNotNil ("\u0046",_fffff .F );_edge .SetIfNotNil ("\u0055\u0046",_fffff .UF );_edge .SetIfNotNil ("\u0044\u004f\u0053",_fffff .DOS );_edge .SetIfNotNil ("\u004d\u0061\u0063",_fffff .Mac );_edge .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fffff .Unix );_edge .SetIfNotNil ("\u0049\u0044",_fffff .ID );_edge .SetIfNotNil ("\u0056",_fffff .V );_edge .SetIfNotNil ("\u0045\u0046",_fffff .EF );_edge .SetIfNotNil ("\u0052\u0046",_fffff .RF );_edge .SetIfNotNil ("\u0044\u0065\u0073\u0063",_fffff .Desc );_edge .SetIfNotNil ("\u0043\u0049",_fffff .CI );return _fffff ._dedbd ;};func (_agfaf SignatureValidationResult )String ()string {var _bbgdf _ce .Buffer ;_bbgdf .WriteString (_bc .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_agfaf .Name ));if _agfaf .Date ._gedge > 0{_bbgdf .WriteString (_bc .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_agfaf .Date .ToGoTime ().String ()));}else {_bbgdf .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_agfaf .Reason )> 0{_bbgdf .WriteString (_bc .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_agfaf .Reason ));}else {_bbgdf .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_agfaf .Location )> 0{_bbgdf .WriteString (_bc .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_agfaf .Location ));}else {_bbgdf .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_agfaf .ContactInfo )> 0{_bbgdf .WriteString (_bc .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_agfaf .ContactInfo ));}else {_bbgdf .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_bbgdf .WriteString (_bc .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_agfaf .Fields )));if _agfaf .IsSigned {_bbgdf .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_bbgdf .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _agfaf .IsVerified {_bbgdf .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_bbgdf .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _agfaf .IsTrusted {_bbgdf .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_bbgdf .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_agfaf .GeneralizedTime .IsZero (){_bbgdf .WriteString (_bc .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_agfaf .GeneralizedTime .String ()));};return _bbgdf .String ();};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bcf .PdfObject ;T3DV _bcf .PdfObject ;T3DA _bcf .PdfObject ;T3DI _bcf .PdfObject ;T3DB _bcf .PdfObject ;};func (_dgab *PdfReader )newPdfAnnotationSquareFromDict (_aef *_bcf .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_edgd :=PdfAnnotationSquare {};_dfbe ,_beec :=_dgab .newPdfAnnotationMarkupFromDict (_aef );if _beec !=nil {return nil ,_beec ;};_edgd .PdfAnnotationMarkup =_dfbe ;_edgd .BS =_aef .Get ("\u0042\u0053");_edgd .IC =_aef .Get ("\u0049\u0043");_edgd .BE =_aef .Get ("\u0042\u0045");_edgd .RD =_aef .Get ("\u0052\u0044");return &_edgd ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_dgbc *PdfReader )PageFromIndirectObject (ind *_bcf .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_dgbc .PageList )!=len (_dgbc ._ffbf ){return nil ,0,_f .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _cgaace ,_ceadc :=range _dgbc ._ffbf {if _ceadc ==ind {return _dgbc .PageList [_cgaace ],_cgaace +1,nil ;};};return nil ,0,_f .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cacd :=PdfColorCalGray (grayVal );return &_cacd ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ddfefe *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gffbg []*PdfField ;if _ddfefe .AcroForm !=nil {_gffbg =_ddfefe .AcroForm .AllFields ();};_geae :=make (map[*PdfField ]struct{},len (_gffbg ));for _ ,_ddbba :=range _gffbg {_geae [_ddbba ]=struct{}{};};for _ ,_bgae :=range _ddfefe .PageList {_geebb ,_beeg :=_bgae .GetAnnotations ();if _beeg !=nil {return false ,_beeg ;};for _ ,_daae :=range _geebb {_cdfde ,_fbba :=_daae .GetContext ().(*PdfAnnotationWidget );if !_fbba {continue ;};_beacd :=_cdfde .Field ();if _beacd ==nil {return true ,nil ;};if _ ,_abfca :=_geae [_beacd ];!_abfca {return true ,nil ;};};};return false ,nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bcf .PdfObject ;LE _bcf .PdfObject ;BS _bcf .PdfObject ;IC _bcf .PdfObject ;BE _bcf .PdfObject ;IT _bcf .PdfObject ;Measure _bcf .PdfObject ;};func _cagf (_fbce []byte )bool {if len (_fbce )< 4{return true ;};for _eaae :=range _fbce [:4]{_bdfag :=rune (_eaae );if !_gd .Is (_gd .ASCII_Hex_Digit ,_bdfag )&&!_gd .IsSpace (_bdfag ){return true ;};};return false ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ddcag *Image )Resample (targetBitsPerComponent int64 ){if _ddcag .BitsPerComponent ==targetBitsPerComponent {return ;};_edae :=_ddcag .GetSamples ();if targetBitsPerComponent < _ddcag .BitsPerComponent {_eacca :=_ddcag .BitsPerComponent -targetBitsPerComponent ;for _gecff :=range _edae {_edae [_gecff ]>>=uint (_eacca );};}else if targetBitsPerComponent > _ddcag .BitsPerComponent {_bebc :=targetBitsPerComponent -_ddcag .BitsPerComponent ;for _gcged :=range _edae {_edae [_gcged ]<<=uint (_bebc );};};_ddcag .BitsPerComponent =targetBitsPerComponent ;if _ddcag .BitsPerComponent < 8{_ddcag .resampleLowBits (_edae );return ;};_eaab :=_ceb .BytesPerLine (int (_ddcag .Width ),int (_ddcag .BitsPerComponent ),_ddcag .ColorComponents );_bfedbf :=make ([]byte ,_eaab *int (_ddcag .Height ));var (_afaaa ,_feadf ,_dbbb ,_fdbbd int ;_dbed uint32 ;);for _dbbb =0;_dbbb < int (_ddcag .Height );_dbbb ++{_afaaa =_dbbb *_eaab ;_feadf =(_dbbb +1)*_eaab -1;_abcbfa :=_bd .ResampleUint32 (_edae [_afaaa :_feadf ],int (targetBitsPerComponent ),8);for _fdbbd ,_dbed =range _abcbfa {_bfedbf [_fdbbd +_afaaa ]=byte (_dbed );};};_ddcag .Data =_bfedbf ;};func (_gga *PdfReader )newPdfActionGotoRFromDict (_age *_bcf .PdfObjectDictionary )(*PdfActionGoToR ,error ){_eeb ,_fcd :=_dec (_age .Get ("\u0046"));if _fcd !=nil {return nil ,_fcd ;};return &PdfActionGoToR {D :_age .Get ("\u0044"),NewWindow :_age .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_eeb },nil ;};

// HasFontByName checks if has font resource by name.
func (_fgbg *PdfPage )HasFontByName (name _bcf .PdfObjectName )bool {_faba ,_dddfa :=_fgbg .Resources .Font .(*_bcf .PdfObjectDictionary );if !_dddfa {return false ;};if _gfccc :=_faba .Get (name );_gfccc !=nil {return true ;};return false ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dbeb *PdfFieldButton )IsCheckbox ()bool {return _dbeb .GetType ()==ButtonTypeCheckbox };

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_fdfbf FieldFlag )Has (fl FieldFlag )bool {return (_fdfbf .Mask ()&fl .Mask ())> 0};func _cffb (_bgbgb *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bgbgb }};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_afbb _eg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gfgg _g .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dgbd _g .Image )(*Image ,error );

// Compress an image.
Compress (_baeec *Image ,_gccfe int64 )(*Image ,error );};

// ToInteger convert to an integer format.
func (_gedd *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_eead :=_db .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eead *_gedd .R ()),uint32 (_eead *_gedd .G ()),uint32 (_eead *_gedd .B ())};};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_babb *Image )ToGoImage ()(_g .Image ,error ){_ad .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_fgceg ,_badf :=_ceb .NewImage (int (_babb .Width ),int (_babb .Height ),int (_babb .BitsPerComponent ),_babb .ColorComponents ,_babb .Data ,_babb ._bgdfb ,_babb ._afdd );if _badf !=nil {return nil ,_badf ;};return _fgceg ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bcf .PdfObject ,error );};func (_gaaf *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bcf .PdfObject ;Flags _bcf .PdfObject ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_acgg _eg .ReadSeeker ;_ggad *_bcf .PdfParser ;_bdfd *PdfReader ;Reader *PdfReader ;_eeeg []*PdfPage ;_feeec *PdfAcroForm ;_efcc _bcf .XrefTable ;_eaegc int64 ;_abgg int ;_ebbb []_bcf .PdfObject ;_dggb map[_bcf .PdfObject ]struct{};_aeddf map[_bcf .PdfObject ]int64 ;_ebdb map[_bcf .PdfObject ]struct{};_deb map[_bcf .PdfObject ]struct{};_agdb int64 ;_dbd bool ;};func (_bbdg *PdfReader )newPdfAnnotationRichMediaFromDict (_ddf *_bcf .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bbeda :=&PdfAnnotationRichMedia {};_bbeda .RichMediaSettings =_ddf .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_bbeda .RichMediaContent =_ddf .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _bbeda ,nil ;};func (_cafcg *PdfReader )loadAnnotations (_cdag _bcf .PdfObject )([]*PdfAnnotation ,error ){_baba ,_abfgag :=_bcf .GetArray (_cdag );if !_abfgag {return nil ,_bc .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _fggea []*PdfAnnotation ;for _ ,_gadac :=range _baba .Elements (){_gadac =_bcf .ResolveReference (_gadac );if _ ,_abaf :=_gadac .(*_bcf .PdfObjectNull );_abaf {continue ;};_ccee ,_geaba :=_gadac .(*_bcf .PdfObjectDictionary );_gbgg ,_gcgcb :=_gadac .(*_bcf .PdfIndirectObject );if _geaba {_gbgg =&_bcf .PdfIndirectObject {};_gbgg .PdfObject =_ccee ;}else {if !_gcgcb {return nil ,_bc .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_fccd ,_fefc :=_cafcg .newPdfAnnotationFromIndirectObject (_gbgg );if _fefc !=nil {return nil ,_fefc ;};switch _eegdcc :=_fccd .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_agbe :=range _cafcg .AcroForm .AllFields (){if _agbe ._egegf ==_eegdcc .Parent {_eegdcc ._efc =_agbe ;break ;};};};if _fccd !=nil {_fggea =append (_fggea ,_fccd );};};return _fggea ,nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cgdg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_f .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_bbbd ,_daff :=_ceb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bgdfb ,img ._afdd );if _daff !=nil {return img ,_daff ;};_bacf ,_daff :=_ceb .GrayConverter .Convert (_bbbd );if _daff !=nil {return img ,_daff ;};return _edfe (_bacf .Base ()),nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_daee :=NewPdfAnnotation ();_gfgd :=&PdfAnnotationLine {};_gfgd .PdfAnnotation =_daee ;_gfgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daee .SetContext (_gfgd );return _gfgd ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_cebgd ,_ebec :=NewStandard14Font (basefont );if _ebec !=nil {panic (_bc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _cebgd ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_gbaf *_bcf .PdfIndirectObject ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// Add appends an outline item as a child of the current outline item.
func (_cfbfd *OutlineItem )Add (item *OutlineItem ){_cfbfd .Entries =append (_cfbfd .Entries ,item )};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_feca *PdfFont )CharcodesToUnicodeWithStats (charcodes []_dc .CharCode )(_fcab []rune ,_abgce ,_cfge int ){_beddc ,_abgce ,_cfge :=_feca .CharcodesToStrings (charcodes );return []rune (_be .Join (_beddc ,"")),_abgce ,_cfge ;};func _dcdfc (_fdec *_bcf .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ebdcbc :=PdfShadingType5 {};_ggggg :=_fdec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ggggg ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ddfgb ,_adafe :=_ggggg .(*_bcf .PdfObjectInteger );if !_adafe {_ad .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggggg );return nil ,_bcf .ErrTypeError ;};_ebdcbc .BitsPerCoordinate =_ddfgb ;_ggggg =_fdec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggggg ==nil {_ad .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ddfgb ,_adafe =_ggggg .(*_bcf .PdfObjectInteger );if !_adafe {_ad .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggggg );return nil ,_bcf .ErrTypeError ;};_ebdcbc .BitsPerComponent =_ddfgb ;_ggggg =_fdec .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ggggg ==nil {_ad .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_ddfgb ,_adafe =_ggggg .(*_bcf .PdfObjectInteger );if !_adafe {_ad .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ggggg );return nil ,_bcf .ErrTypeError ;};_ebdcbc .VerticesPerRow =_ddfgb ;_ggggg =_fdec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggggg ==nil {_ad .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_ggfabf ,_adafe :=_ggggg .(*_bcf .PdfObjectArray );if !_adafe {_ad .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggggg );return nil ,_bcf .ErrTypeError ;};_ebdcbc .Decode =_ggfabf ;if _dcccg :=_fdec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dcccg !=nil {_ebdcbc .Function =[]PdfFunction {};if _aeebca ,_gfefe :=_dcccg .(*_bcf .PdfObjectArray );_gfefe {for _ ,_babff :=range _aeebca .Elements (){_bffaa ,_ebbac :=_afag (_babff );if _ebbac !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebbac );return nil ,_ebbac ;};_ebdcbc .Function =append (_ebdcbc .Function ,_bffaa );};}else {_aaae ,_gefee :=_afag (_dcccg );if _gefee !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gefee );return nil ,_gefee ;};_ebdcbc .Function =append (_ebdcbc .Function ,_aaae );};};return &_ebdcbc ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bdec *PdfWriter )SetOptimizer (optimizer Optimizer ){_bdec ._aagcc =optimizer };

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_adda *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_eabfd :=_bd .NewReader (img .getBase ());_egdff :=_ceb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_eeed :=_bd .NewWriter (_egdff );_geddd :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_agce :=make ([]uint32 ,3);var (_gbgc uint32 ;ANorm ,X ,Y ,Z ,_fgdc ,_adbe ,_eeca float64 ;_fddfg error ;);for {_gbgc ,_fddfg =_eabfd .ReadSample ();if _fddfg ==_eg .EOF {break ;}else if _fddfg !=nil {return img ,_fddfg ;};ANorm =float64 (_gbgc )/_geddd ;X =_adda .WhitePoint [0]*_db .Pow (ANorm ,_adda .Gamma );Y =_adda .WhitePoint [1]*_db .Pow (ANorm ,_adda .Gamma );Z =_adda .WhitePoint [2]*_db .Pow (ANorm ,_adda .Gamma );_fgdc =3.240479*X +-1.537150*Y +-0.498535*Z ;_adbe =-0.969256*X +1.875992*Y +0.041556*Z ;_eeca =0.055648*X +-0.204043*Y +1.057311*Z ;_fgdc =_db .Min (_db .Max (_fgdc ,0),1.0);_adbe =_db .Min (_db .Max (_adbe ,0),1.0);_eeca =_db .Min (_db .Max (_eeca ,0),1.0);_agce [0]=uint32 (_fgdc *_geddd );_agce [1]=uint32 (_adbe *_geddd );_agce [2]=uint32 (_eeca *_geddd );if _fddfg =_eeed .WriteSamples (_agce );_fddfg !=nil {return img ,_fddfg ;};};return _edfe (&_egdff ),nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_gedge int64 ;_gggdd int64 ;_efacd int64 ;_dgcgc int64 ;_efcac int64 ;_bfaf int64 ;_edgdg byte ;_debef int64 ;_cfggf int64 ;};

// ToPdfObject implements interface PdfModel.
func (_dded *PdfAnnotationProjection )ToPdfObject ()_bcf .PdfObject {_dded .PdfAnnotation .ToPdfObject ();_gbcd :=_dded ._fab ;_geab :=_gbcd .PdfObject .(*_bcf .PdfObjectDictionary );_dded .PdfAnnotationMarkup .appendToPdfDictionary (_geab );return _gbcd ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_gafc *PdfPageResourcesColorspaces )Set (key _bcf .PdfObjectName ,val PdfColorspace ){if _ ,_bage :=_gafc .Colorspaces [string (key )];!_bage {_gafc .Names =append (_gafc .Names ,string (key ));};_gafc .Colorspaces [string (key )]=val ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_agdd *OutlineItem )Insert (index uint ,item *OutlineItem ){_fbff :=uint (len (_agdd .Entries ));if index > _fbff {index =_fbff ;};_agdd .Entries =append (_agdd .Entries [:index ],append ([]*OutlineItem {item },_agdd .Entries [index :]...)...);};

// SetDecode sets the decode image float slice.
func (_fdag *Image )SetDecode (decode []float64 ){_fdag ._afdd =decode };

// ToPdfObject returns a PDF object representation of the outline.
func (_ffca *Outline )ToPdfObject ()_bcf .PdfObject {return _ffca .ToPdfOutline ().ToPdfObject ()};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_edeba DefaultImageHandler )Read (reader _eg .Reader )(*Image ,error ){_acbc ,_ ,_gcgff :=_g .Decode (reader );if _gcgff !=nil {_ad .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gcgff );return nil ,_gcgff ;};return _edeba .NewImageFromGoImage (_acbc );};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_dc .SimpleEncoder ,error ){_ffaag ,_abgc :=_adebb (basefont );if _abgc !=nil {return nil ,nil ,_abgc ;};_beae ,_ccafe :=_ffaag .Encoder ().(_dc .SimpleEncoder );if !_ccafe {return nil ,nil ,_bc .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ffaag .Encoder ());};_ggec :=make (map[rune ]_dc .GlyphName );for _acegc :=range alphabet {if _ ,_aagba :=_beae .RuneToCharcode (_acegc );!_aagba {_ ,_cfdb :=_ffaag ._agcc [_acegc ];if !_cfdb {_ad .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_acegc ,_acegc );continue ;};_acegd ,_cfdb :=_dc .RuneToGlyph (_acegc );if !_cfdb {_ad .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_acegc ,_acegc );continue ;};if len (_ggec )>=255{return nil ,nil ,_f .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_ggec [_acegc ]=_acegd ;};};var (_cbgb []_dc .CharCode ;_adfb []_dc .CharCode ;);for _fgf :=_dc .CharCode (1);_fgf <=0xff;_fgf ++{_ffeba ,_cdff :=_beae .CharcodeToRune (_fgf );if !_cdff {_cbgb =append (_cbgb ,_fgf );continue ;};if _ ,_cdff =alphabet [_ffeba ];!_cdff {_adfb =append (_adfb ,_fgf );};};_ecdd :=append (_cbgb ,_adfb ...);if len (_ecdd )< len (_ggec ){return nil ,nil ,_bc .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_ggec ),len (_ecdd ));};_gcbf :=make ([]rune ,0,len (_ggec ));for _adgc :=range _ggec {_gcbf =append (_gcbf ,_adgc );};_ccc .Slice (_gcbf ,func (_fbgfa ,_cgcge int )bool {return _gcbf [_fbgfa ]< _gcbf [_cgcge ]});_dbg :=make (map[_dc .CharCode ]_dc .GlyphName ,len (_gcbf ));for _ ,_gggg :=range _gcbf {_cafaa :=_ecdd [0];_ecdd =_ecdd [1:];_dbg [_cafaa ]=_ggec [_gggg ];};_beae =_dc .ApplyDifferences (_beae ,_dbg );_ffaag .SetEncoder (_beae );return &PdfFont {_cefc :&_ffaag },_beae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cf *PdfActionSetOCGState )ToPdfObject ()_bcf .PdfObject {_cf .PdfAction .ToPdfObject ();_bbe :=_cf ._ge ;_acff :=_bbe .PdfObject .(*_bcf .PdfObjectDictionary );_acff .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeSetOCGState )));_acff .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cf .State );_acff .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cf .PreserveRB );return _bbe ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gbbcb *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gbbcb ._cdaf =outlineTree };

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_afdc *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _afdc .UnderlyingCS .GetNumComponents ();};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bfeab *PdfField )GetContext ()PdfModel {return _bfeab ._dggcd };

// Fill populates `form` with values provided by `provider`.
func (_fddb *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fddb .fill (provider ,nil )};

// Y returns the value of the yellow component of the color.
func (_dfbf *PdfColorDeviceCMYK )Y ()float64 {return float64 (_dfbf [2])};

// Encrypt encrypts the output file with a specified user/owner password.
func (_gggdb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gaffd :=RC4_128bit ;if options !=nil {_gaffd =options .Algorithm ;};_badde :=_ae .PermOwner ;if options !=nil {_badde =options .Permissions ;};var _eccbd _da .Filter ;switch _gaffd {case RC4_128bit :_eccbd =_da .NewFilterV2 (16);case AES_128bit :_eccbd =_da .NewFilterAESV2 ();case AES_256bit :_eccbd =_da .NewFilterAESV3 ();default:return _bc .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_aagccc ,_ccfab ,_bcddf :=_bcf .PdfCryptNewEncrypt (_eccbd ,userPass ,ownerPass ,_badde );if _bcddf !=nil {return _bcddf ;};_gggdb ._badd =_aagccc ;if _ccfab .Major !=0{_gggdb .SetVersion (_ccfab .Major ,_ccfab .Minor );};_gggdb ._ecggc =_ccfab .Encrypt ;_gggdb ._cffga =_bcf .MakeArray (_bcf .MakeHexString (_ccfab .ID0 ),_bcf .MakeHexString (_ccfab .ID1 ));_bdcgb :=_bcf .MakeIndirectObject (_ccfab .Encrypt );_gggdb ._gcdfe =_bdcgb ;_gggdb .addObject (_bdcgb );return nil ;};func (_baca *PdfReader )newPdfActionSubmitFormFromDict (_dbfb *_bcf .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gba ,_cdgd :=_dec (_dbfb .Get ("\u0046"));if _cdgd !=nil {return nil ,_cdgd ;};return &PdfActionSubmitForm {F :_gba ,Fields :_dbfb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dbfb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// GetXObjectByName gets XObject by name.
func (_acfba *PdfPage )GetXObjectByName (name _bcf .PdfObjectName )(_bcf .PdfObject ,bool ){_aegef ,_cbdbb :=_acfba .Resources .XObject .(*_bcf .PdfObjectDictionary );if !_cbdbb {return nil ,false ;};if _bcfg :=_aegef .Get (name );_bcfg !=nil {return _bcfg ,true ;};return nil ,false ;};

// Encoder returns the font's text encoder.
func (_dfgdc pdfCIDFontType0 )Encoder ()_dc .TextEncoder {return _dfgdc ._aaca };

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bdcfe *Outline )Insert (index uint ,item *OutlineItem ){_afgc :=uint (len (_bdcfe .Entries ));if index > _afgc {index =_afgc ;};_bdcfe .Entries =append (_bdcfe .Entries [:index ],append ([]*OutlineItem {item },_bdcfe .Entries [index :]...)...);};var _gefc _ba .Time ;

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_ecdga *pdfCIDFontType2 )ToPdfObject ()_bcf .PdfObject {if _ecdga ._gdff ==nil {_ecdga ._gdff =&_bcf .PdfIndirectObject {};};_gacfc :=_ecdga .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_ecdga ._gdff .PdfObject =_gacfc ;if _ecdga .CIDSystemInfo !=nil {_gacfc .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_ecdga .CIDSystemInfo );};if _ecdga .DW !=nil {_gacfc .Set ("\u0044\u0057",_ecdga .DW );};if _ecdga .DW2 !=nil {_gacfc .Set ("\u0044\u0057\u0032",_ecdga .DW2 );};if _ecdga .W !=nil {_gacfc .Set ("\u0057",_ecdga .W );};if _ecdga .W2 !=nil {_gacfc .Set ("\u0057\u0032",_ecdga .W2 );};if _ecdga .CIDToGIDMap !=nil {_gacfc .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_ecdga .CIDToGIDMap );};return _ecdga ._gdff ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_agdbae *PdfFont )CharcodesToUnicode (charcodes []_dc .CharCode )[]rune {_bgbg ,_ ,_ :=_agdbae .CharcodesToUnicodeWithStats (charcodes );return _bgbg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_cgge *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _dec (_dae _bcf .PdfObject )(*PdfFilespec ,error ){if _dae ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_dae );};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dccad *PdfPageResources )HasFontByName (keyName _bcf .PdfObjectName )bool {_ ,_fbddf :=_dccad .GetFontByName (keyName );return _fbddf ;};type fontFile struct{_bbgab string ;_dced string ;_ffcba _dc .SimpleEncoder ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fdbcf *PdfPageResources )GetPatternByName (keyName _bcf .PdfObjectName )(*PdfPattern ,bool ){if _fdbcf .Pattern ==nil {return nil ,false ;};_gcbgf ,_bbfbg :=_bcf .TraceToDirectObject (_fdbcf .Pattern ).(*_bcf .PdfObjectDictionary );if !_bbfbg {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdbcf .Pattern );return nil ,false ;};if _abcgg :=_gcbgf .Get (keyName );_abcgg !=nil {_aead ,_gaag :=_feaf (_abcgg );if _gaag !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gaag );return nil ,false ;};return _aead ,true ;};return nil ,false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fdfec *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfffb :=vals [0];if _gfffb < 0.0||_gfffb > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdbd :=NewPdfColorCalGray (_gfffb );return _bdbd ,nil ;};func _bcfgb (_dcbaf *_bcf .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cceea :=PdfShadingType3 {};_dedg :=_dcbaf .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dedg ==nil {_ad .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_bfdbg ,_gfcg :=_dedg .(*_bcf .PdfObjectArray );if !_gfcg {_ad .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dedg );return nil ,_bcf .ErrTypeError ;};if _bfdbg .Len ()!=6{_ad .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bfdbg .Len ());return nil ,ErrInvalidAttribute ;};_cceea .Coords =_bfdbg ;if _bbdcg :=_dcbaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bbdcg !=nil {_bbdcg =_bcf .TraceToDirectObject (_bbdcg );_gaadb ,_bgdada :=_bbdcg .(*_bcf .PdfObjectArray );if !_bgdada {_ad .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbdcg );return nil ,_bcf .ErrTypeError ;};_cceea .Domain =_gaadb ;};_dedg =_dcbaf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dedg ==nil {_ad .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cceea .Function =[]PdfFunction {};if _ebgba ,_egdc :=_dedg .(*_bcf .PdfObjectArray );_egdc {for _ ,_ddedc :=range _ebgba .Elements (){_gecfa ,_afdea :=_afag (_ddedc );if _afdea !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afdea );return nil ,_afdea ;};_cceea .Function =append (_cceea .Function ,_gecfa );};}else {_deebg ,_fagb :=_afag (_dedg );if _fagb !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fagb );return nil ,_fagb ;};_cceea .Function =append (_cceea .Function ,_deebg );};if _bdbe :=_dcbaf .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bdbe !=nil {_bdbe =_bcf .TraceToDirectObject (_bdbe );_cacg ,_abbad :=_bdbe .(*_bcf .PdfObjectArray );if !_abbad {_ad .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdbe );return nil ,_bcf .ErrTypeError ;};if _cacg .Len ()!=2{_ad .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cacg .Len ());return nil ,ErrInvalidAttribute ;};_cceea .Extend =_cacg ;};return &_cceea ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_efcbb *Image )ColorAt (x ,y int )(_cg .Color ,error ){_ggfaf :=_ceb .BytesPerLine (int (_efcbb .Width ),int (_efcbb .BitsPerComponent ),_efcbb .ColorComponents );switch _efcbb .ColorComponents {case 1:return _ceb .ColorAtGrayscale (x ,y ,int (_efcbb .BitsPerComponent ),_ggfaf ,_efcbb .Data ,_efcbb ._afdd );case 3:return _ceb .ColorAtNRGBA (x ,y ,int (_efcbb .Width ),_ggfaf ,int (_efcbb .BitsPerComponent ),_efcbb .Data ,_efcbb ._bgdfb ,_efcbb ._afdd );case 4:return _ceb .ColorAtCMYK (x ,y ,int (_efcbb .Width ),_efcbb .Data ,_efcbb ._afdd );};_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_efcbb .ColorComponents ,_efcbb .BitsPerComponent );return nil ,_f .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_caffb *PdfTilingPattern )ToPdfObject ()_bcf .PdfObject {_caffb .PdfPattern .ToPdfObject ();_acda :=_caffb .getDict ();if _caffb .PaintType !=nil {_acda .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_caffb .PaintType );};if _caffb .TilingType !=nil {_acda .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_caffb .TilingType );};if _caffb .BBox !=nil {_acda .Set ("\u0042\u0042\u006f\u0078",_caffb .BBox .ToPdfObject ());};if _caffb .XStep !=nil {_acda .Set ("\u0058\u0053\u0074e\u0070",_caffb .XStep );};if _caffb .YStep !=nil {_acda .Set ("\u0059\u0053\u0074e\u0070",_caffb .YStep );};if _caffb .Resources !=nil {_acda .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_caffb .Resources .ToPdfObject ());};if _caffb .Matrix !=nil {_acda .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_caffb .Matrix );};return _caffb ._gebbd ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bcf .PdfObject ;GetContainingPdfObject ()_bcf .PdfObject ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bfebg *XObjectImage )SetFilter (encoder _bcf .StreamEncoder )error {_acaag :=_bfebg .Stream ;_ffccc ,_bfde :=_bfebg .Filter .DecodeBytes (_acaag );if _bfde !=nil {return _bfde ;};_bfebg .Filter =encoder ;encoder .UpdateParams (_bfebg .getParamsDict ());_acaag ,_bfde =encoder .EncodeBytes (_ffccc );if _bfde !=nil {return _bfde ;};_bfebg .Stream =_acaag ;return nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cgdbg *Outline )ToPdfOutline ()*PdfOutline {_dcaef :=NewPdfOutline ();var _fgfb []*PdfOutlineItem ;var _cfcb int64 ;var _edgcb *PdfOutlineItem ;for _ ,_dagbe :=range _cgdbg .Entries {_dfaaa ,_afec :=_dagbe .ToPdfOutlineItem ();_dfaaa .Parent =&_dcaef .PdfOutlineTreeNode ;if _edgcb !=nil {_edgcb .Next =&_dfaaa .PdfOutlineTreeNode ;_dfaaa .Prev =&_edgcb .PdfOutlineTreeNode ;};_fgfb =append (_fgfb ,_dfaaa );_cfcb +=_afec ;_edgcb =_dfaaa ;};_gggda :=int64 (len (_fgfb ));_cfcb +=int64 (_gggda );if _gggda > 0{_dcaef .First =&_fgfb [0].PdfOutlineTreeNode ;_dcaef .Last =&_fgfb [_gggda -1].PdfOutlineTreeNode ;_dcaef .Count =&_cfcb ;};return _dcaef ;};

// Encoder returns the font's text encoder.
func (_cccg *pdfFontSimple )Encoder ()_dc .TextEncoder {if _cccg ._gcdgc !=nil {return _cccg ._gcdgc ;};if _cccg ._efgfcd !=nil {return _cccg ._efgfcd ;};_caee ,_ :=_dc .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _caee ;};func (_eegb *PdfReader )newPdfActionThreadFromDict (_bede *_bcf .PdfObjectDictionary )(*PdfActionThread ,error ){_bcfda ,_bced :=_dec (_bede .Get ("\u0046"));if _bced !=nil {return nil ,_bced ;};return &PdfActionThread {D :_bede .Get ("\u0044"),B :_bede .Get ("\u0042"),F :_bcfda },nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dgdgc *XObjectImage )GetContainingPdfObject ()_bcf .PdfObject {return _dgdgc ._dabeg };func _bdeeg ()string {_ffabd :=_ega .GetLicenseKey ();if len (_fdgfc )> 0&&(_ffabd .IsLicensed ()||_dabae ){return _fdgfc ;};return _bc .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eaeae (),_ffabd .TypeToString ());};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ccbb *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_gea *PdfActionGoToE )ToPdfObject ()_bcf .PdfObject {_gea .PdfAction .ToPdfObject ();_dcf :=_gea ._ge ;_abc :=_dcf .PdfObject .(*_bcf .PdfObjectDictionary );_abc .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeGoToE )));if _gea .F !=nil {_abc .Set ("\u0046",_gea .F .ToPdfObject ());};_abc .SetIfNotNil ("\u0044",_gea .D );_abc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gea .NewWindow );_abc .SetIfNotNil ("\u0054",_gea .T );return _dcf ;};

// ToPdfObject implements interface PdfModel.
func (_fddd *PdfAnnotationSquiggly )ToPdfObject ()_bcf .PdfObject {_fddd .PdfAnnotation .ToPdfObject ();_aea :=_fddd ._fab ;_gacc :=_aea .PdfObject .(*_bcf .PdfObjectDictionary );_fddd .PdfAnnotationMarkup .appendToPdfDictionary (_gacc );_gacc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_gacc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fddd .QuadPoints );return _aea ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_febcc []_bcf .PdfObject )([]_bcf .PdfObject ,error );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ceefd pdfFontType0 )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){if _ceefd .DescendantFont ==nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ceefd );return _cb .CharMetrics {},false ;};return _ceefd .DescendantFont .GetRuneMetrics (r );};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_eegaa *PdfFieldButton )ToPdfObject ()_bcf .PdfObject {_eegaa .PdfField .ToPdfObject ();_eaegb :=_eegaa ._egegf ;_cgaf :=_eaegb .PdfObject .(*_bcf .PdfObjectDictionary );_cgaf .Set ("\u0046\u0054",_bcf .MakeName ("\u0042\u0074\u006e"));if _eegaa .Opt !=nil {_cgaf .Set ("\u004f\u0070\u0074",_eegaa .Opt );};return _eaegb ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cfgef *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _cfgef .fill (provider ,appGen );};func (_becb *PdfReader )newPdfAnnotationRedactFromDict (_bcfa *_bcf .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_ccaa :=PdfAnnotationRedact {};_fabd ,_afdg :=_becb .newPdfAnnotationMarkupFromDict (_bcfa );if _afdg !=nil {return nil ,_afdg ;};_ccaa .PdfAnnotationMarkup =_fabd ;_ccaa .QuadPoints =_bcfa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ccaa .IC =_bcfa .Get ("\u0049\u0043");_ccaa .RO =_bcfa .Get ("\u0052\u004f");_ccaa .OverlayText =_bcfa .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_ccaa .Repeat =_bcfa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_ccaa .DA =_bcfa .Get ("\u0044\u0041");_ccaa .Q =_bcfa .Get ("\u0051");return &_ccaa ,nil ;};func (_dgfed *PdfWriter )addObjects (_gcada _bcf .PdfObject )error {_ad .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _dddde ,_eecde :=_gcada .(*_bcf .PdfIndirectObject );_eecde {_ad .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ad .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_gcada ,_dddde );_ad .Log .Trace ("\u002d\u0020\u0025\u0073",_dddde .PdfObject );if _dgfed .addObject (_dddde ){_dfacc :=_dgfed .addObjects (_dddde .PdfObject );if _dfacc !=nil {return _dfacc ;};};return nil ;};if _cabg ,_addca :=_gcada .(*_bcf .PdfObjectStream );_addca {_ad .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ad .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_gcada ,_gcada );if _dgfed .addObject (_cabg ){_cddbf :=_dgfed .addObjects (_cabg .PdfObjectDictionary );if _cddbf !=nil {return _cddbf ;};};return nil ;};if _afeee ,_daecf :=_gcada .(*_bcf .PdfObjectDictionary );_daecf {_ad .Log .Trace ("\u0044\u0069\u0063\u0074");_ad .Log .Trace ("\u002d\u0020\u0025\u0073",_gcada );for _ ,_fadba :=range _afeee .Keys (){_gcaeb :=_afeee .Get (_fadba );if _aadcb ,_bcfec :=_gcaeb .(*_bcf .PdfObjectReference );_bcfec {_gcaeb =_aadcb .Resolve ();_afeee .Set (_fadba ,_gcaeb );};if _fadba !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ddcde :=_dgfed .addObjects (_gcaeb );_ddcde !=nil {return _ddcde ;};}else {if _ ,_eccb :=_gcaeb .(*_bcf .PdfObjectNull );_eccb {continue ;};if _begcb :=_dgfed .hasObject (_gcaeb );!_begcb {_ad .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_gcaeb ,_gcaeb ,_gcaeb );_dgfed ._ebaac [_gcaeb ]=append (_dgfed ._ebaac [_gcaeb ],_afeee );};};};return nil ;};if _ebged ,_cbgege :=_gcada .(*_bcf .PdfObjectArray );_cbgege {_ad .Log .Trace ("\u0041\u0072\u0072a\u0079");_ad .Log .Trace ("\u002d\u0020\u0025\u0073",_gcada );if _ebged ==nil {return _f .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _dbabg ,_eegbc :=range _ebged .Elements (){if _gagbd ,_cfefd :=_eegbc .(*_bcf .PdfObjectReference );_cfefd {_eegbc =_gagbd .Resolve ();_ebged .Set (_dbabg ,_eegbc );};if _gbcge :=_dgfed .addObjects (_eegbc );_gbcge !=nil {return _gbcge ;};};return nil ;};if _ ,_cadaf :=_gcada .(*_bcf .PdfObjectReference );_cadaf {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_gcada );return _f .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bcf .PdfObject ;};func _ggcg (_bccab _bcf .PdfObject )(*PdfFunctionType2 ,error ){_bgfdf :=&PdfFunctionType2 {};var _ddeed *_bcf .PdfObjectDictionary ;if _cgfc ,_egcad :=_bccab .(*_bcf .PdfIndirectObject );_egcad {_cabbg ,_cfffc :=_cgfc .PdfObject .(*_bcf .PdfObjectDictionary );if !_cfffc {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgfdf ._egac =_cgfc ;_ddeed =_cabbg ;}else if _fede ,_eegdc :=_bccab .(*_bcf .PdfObjectDictionary );_eegdc {_ddeed =_fede ;}else {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ad .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_ddeed .String ());_fffae ,_ggdg :=_bcf .TraceToDirectObject (_ddeed .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcf .PdfObjectArray );if !_ggdg {_ad .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fffae .Len ()< 0||_fffae .Len ()%2!=0{_ad .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ecag ,_gaac :=_fffae .ToFloat64Array ();if _gaac !=nil {return nil ,_gaac ;};_bgfdf .Domain =_ecag ;_fffae ,_ggdg =_bcf .TraceToDirectObject (_ddeed .Get ("\u0052\u0061\u006eg\u0065")).(*_bcf .PdfObjectArray );if _ggdg {if _fffae .Len ()< 0||_fffae .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ffgc ,_gagab :=_fffae .ToFloat64Array ();if _gagab !=nil {return nil ,_gagab ;};_bgfdf .Range =_ffgc ;};_fffae ,_ggdg =_bcf .TraceToDirectObject (_ddeed .Get ("\u0043\u0030")).(*_bcf .PdfObjectArray );if _ggdg {_gdba ,_gccf :=_fffae .ToFloat64Array ();if _gccf !=nil {return nil ,_gccf ;};_bgfdf .C0 =_gdba ;};_fffae ,_ggdg =_bcf .TraceToDirectObject (_ddeed .Get ("\u0043\u0031")).(*_bcf .PdfObjectArray );if _ggdg {_egbbfd ,_fgec :=_fffae .ToFloat64Array ();if _fgec !=nil {return nil ,_fgec ;};_bgfdf .C1 =_egbbfd ;};if len (_bgfdf .C0 )!=len (_bgfdf .C1 ){_ad .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bcf .ErrRangeError ;};N ,_gaac :=_bcf .GetNumberAsFloat (_bcf .TraceToDirectObject (_ddeed .Get ("\u004e")));if _gaac !=nil {_ad .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_ddeed .String ());return nil ,_gaac ;};_bgfdf .N =N ;return _bgfdf ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ba .Time )(PdfDate ,error ){_eddcb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_bfbd ,_ :=_bed .ParseInt (_eddcb [1:3],10,32);_agfce ,_ :=_bed .ParseInt (_eddcb [4:6],10,32);return PdfDate {_gedge :int64 (timeObj .Year ()),_gggdd :int64 (timeObj .Month ()),_efacd :int64 (timeObj .Day ()),_dgcgc :int64 (timeObj .Hour ()),_efcac :int64 (timeObj .Minute ()),_bfaf :int64 (timeObj .Second ()),_edgdg :_eddcb [0],_debef :_bfbd ,_cfggf :_agfce },nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_dbbcd *PdfTilingPattern )SetContentStream (content []byte ,encoder _bcf .StreamEncoder )error {_bcfbd ,_gdeff :=_dbbcd ._gebbd .(*_bcf .PdfObjectStream );if !_gdeff {_ad .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbbcd ._gebbd );return _bcf .ErrTypeError ;};if encoder ==nil {encoder =_bcf .NewRawEncoder ();};_gfdbg :=_bcfbd .PdfObjectDictionary ;_ggdd :=encoder .MakeStreamDict ();_gfdbg .Merge (_ggdd );_baed ,_faace :=encoder .EncodeBytes (content );if _faace !=nil {return _faace ;};_gfdbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcf .MakeInteger (int64 (len (_baed ))));_bcfbd .Stream =[]byte (_baed );return nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_cgafg *PdfAcroForm )GetContainingPdfObject ()_bcf .PdfObject {return _cgafg ._eafeb };

// ToPdfObject returns the PDF representation of the colorspace.
func (_eabad *PdfPageResourcesColorspaces )ToPdfObject ()_bcf .PdfObject {_dfdd :=_bcf .MakeDict ();for _ ,_gddeb :=range _eabad .Names {_dfdd .Set (_bcf .PdfObjectName (_gddeb ),_eabad .Colorspaces [_gddeb ].ToPdfObject ());};if _eabad ._acfbd !=nil {_eabad ._acfbd .PdfObject =_dfdd ;return _eabad ._acfbd ;};return _dfdd ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func _dfafbbe (_acbdf _bcf .PdfObject ){_ad .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_acbdf ,_acbdf .String ());if _geefa ,_cfafe :=_acbdf .(*_bcf .PdfObjectStream );_cfafe {_abea ,_fdfbb :=_bcf .DecodeStream (_geefa );if _fdfbb !=nil {_ad .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_fdfbb );return ;};_ad .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_abea );}else if _ccaff ,_dagafa :=_acbdf .(*_bcf .PdfIndirectObject );_dagafa {_ad .Log .Debug ("\u0025\u0054\u0020%\u0076",_ccaff .PdfObject ,_ccaff .PdfObject );_ad .Log .Debug ("\u0025\u0073",_ccaff .PdfObject .String ());};};func (_eaag *Image )samplesTrimPadding (_gacbf []uint32 )[]uint32 {_cegdb :=_eaag .ColorComponents *int (_eaag .Width )*int (_eaag .Height );if len (_gacbf )==_cegdb {return _gacbf ;};_fecg :=make ([]uint32 ,_cegdb );_bcfag :=int (_eaag .Width )*_eaag .ColorComponents ;var _ggdcb ,_geece ,_fegcd ,_eeafg int ;_efcea :=_ceb .BytesPerLine (int (_eaag .Width ),int (_eaag .BitsPerComponent ),_eaag .ColorComponents );for _ggdcb =0;_ggdcb < int (_eaag .Height );_ggdcb ++{_geece =_ggdcb *int (_eaag .Width );_fegcd =_ggdcb *_efcea ;for _eeafg =0;_eeafg < _bcfag ;_eeafg ++{_fecg [_geece +_eeafg ]=_gacbf [_fegcd +_eeafg ];};};return _fecg ;};func _cgeg (_dcdg *_bcf .PdfObjectStream )(*PdfFunctionType4 ,error ){_aeef :=&PdfFunctionType4 {};_aeef ._bfbbd =_dcdg ;_ecdb :=_dcdg .PdfObjectDictionary ;_fggf ,_deec :=_bcf .TraceToDirectObject (_ecdb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcf .PdfObjectArray );if !_deec {_ad .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fggf .Len ()%2!=0{_ad .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bccdc ,_ceeecd :=_fggf .ToFloat64Array ();if _ceeecd !=nil {return nil ,_ceeecd ;};_aeef .Domain =_bccdc ;_fggf ,_deec =_bcf .TraceToDirectObject (_ecdb .Get ("\u0052\u0061\u006eg\u0065")).(*_bcf .PdfObjectArray );if _deec {if _fggf .Len ()< 0||_fggf .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ddedb ,_ggbcd :=_fggf .ToFloat64Array ();if _ggbcd !=nil {return nil ,_ggbcd ;};_aeef .Range =_ddedb ;};_cecg ,_ceeecd :=_bcf .DecodeStream (_dcdg );if _ceeecd !=nil {return nil ,_ceeecd ;};_aeef ._fbeae =_cecg ;_fbgef :=_dg .NewPSParser ([]byte (_cecg ));_bcedd ,_ceeecd :=_fbgef .Parse ();if _ceeecd !=nil {return nil ,_ceeecd ;};_aeef .Program =_bcedd ;return _aeef ,nil ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ccdf *PdfWriter )SetNamedDestinations (names _bcf .PdfObject )error {if names ==nil {return nil ;};_ad .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_ccdf ._feagf .Set ("\u004e\u0061\u006de\u0073",names );return _ccdf .addObjects (names );};

// ToPdfObject implements interface PdfModel.
func (_bffa *PdfActionRendition )ToPdfObject ()_bcf .PdfObject {_bffa .PdfAction .ToPdfObject ();_adc :=_bffa ._ge ;_cbf :=_adc .PdfObject .(*_bcf .PdfObjectDictionary );_cbf .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeRendition )));_cbf .SetIfNotNil ("\u0052",_bffa .R );_cbf .SetIfNotNil ("\u0041\u004e",_bffa .AN );_cbf .SetIfNotNil ("\u004f\u0050",_bffa .OP );_cbf .SetIfNotNil ("\u004a\u0053",_bffa .JS );return _adc ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bcf .PdfObjectInteger ;BitsPerComponent *_bcf .PdfObjectInteger ;BitsPerFlag *_bcf .PdfObjectInteger ;Decode *_bcf .PdfObjectArray ;Function []PdfFunction ;};func (_fgb *PdfReader )newPdfActionHideFromDict (_ecg *_bcf .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_ecg .Get ("\u0054"),H :_ecg .Get ("\u0048")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_bace *PdfAnnotationRedact )ToPdfObject ()_bcf .PdfObject {_bace .PdfAnnotation .ToPdfObject ();_facb :=_bace ._fab ;_ccaf :=_facb .PdfObject .(*_bcf .PdfObjectDictionary );_bace .PdfAnnotationMarkup .appendToPdfDictionary (_ccaf );_ccaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_ccaf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bace .QuadPoints );_ccaf .SetIfNotNil ("\u0049\u0043",_bace .IC );_ccaf .SetIfNotNil ("\u0052\u004f",_bace .RO );_ccaf .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_bace .OverlayText );_ccaf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bace .Repeat );_ccaf .SetIfNotNil ("\u0044\u0041",_bace .DA );_ccaf .SetIfNotNil ("\u0051",_bace .Q );return _facb ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bcf .PdfObject )(*PdfFont ,error ){return _aebe (fontObj ,true )};func _cgbgf (_cgfef _bcf .PdfObject )(string ,error ){_cgfef =_bcf .TraceToDirectObject (_cgfef );switch _ceabc :=_cgfef .(type ){case *_bcf .PdfObjectString :return _ceabc .Str (),nil ;case *_bcf .PdfObjectStream :_bbgbb ,_bfefg :=_bcf .DecodeStream (_ceabc );if _bfefg !=nil {return "",_bfefg ;};return string (_bbgbb ),nil ;};return "",_bc .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cgfef );};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_bgbbe *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bfdce :=_bd .NewReader (img .getBase ());_cfgfg :=_ceb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._bgdfb ,img ._afdd );_caagg :=_bd .NewWriter (_cfgfg );_caggd :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_dfgg :=_bgbbe .GetNumComponents ();_gdcdf :=make ([]uint32 ,_dfgg );_bedga :=make ([]float64 ,_dfgg );for {_bacgd :=_bfdce .ReadSamples (_gdcdf );if _bacgd ==_eg .EOF {break ;}else if _bacgd !=nil {return img ,_bacgd ;};for _defdb :=0;_defdb < _dfgg ;_defdb ++{_bdee :=float64 (_gdcdf [_defdb ])/_caggd ;_bedga [_defdb ]=_bdee ;};_bgad ,_bacgd :=_bgbbe .TintTransform .Evaluate (_bedga );if _bacgd !=nil {return img ,_bacgd ;};for _ ,_bggee :=range _bgad {_bggee =_db .Min (_db .Max (0,_bggee ),1.0);if _bacgd =_caagg .WriteSample (uint32 (_bggee *_caggd ));_bacgd !=nil {return img ,_bacgd ;};};};return _bgbbe .AlternateSpace .ImageToRGB (_edfe (&_cfgfg ));};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cffdbd *PdfPageResources )GetContainingPdfObject ()_bcf .PdfObject {return _cffdbd ._agfbd };

// ToPdfObject implements interface PdfModel.
func (_aab *PdfActionSound )ToPdfObject ()_bcf .PdfObject {_aab .PdfAction .ToPdfObject ();_aacd :=_aab ._ge ;_fc :=_aacd .PdfObject .(*_bcf .PdfObjectDictionary );_fc .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeSound )));_fc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_aab .Sound );_fc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_aab .Volume );_fc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_aab .Synchronous );_fc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_aab .Repeat );_fc .SetIfNotNil ("\u004d\u0069\u0078",_aab .Mix );return _aacd ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bcf .PdfObject ;BS _bcf .PdfObject ;LE _bcf .PdfObject ;IC _bcf .PdfObject ;LL _bcf .PdfObject ;LLE _bcf .PdfObject ;Cap _bcf .PdfObject ;IT _bcf .PdfObject ;LLO _bcf .PdfObject ;CP _bcf .PdfObject ;Measure _bcf .PdfObject ;CO _bcf .PdfObject ;};func _afag (_ecaf _bcf .PdfObject )(PdfFunction ,error ){_ecaf =_bcf .ResolveReference (_ecaf );if _adbcb ,_ebaeg :=_ecaf .(*_bcf .PdfObjectStream );_ebaeg {_fadca :=_adbcb .PdfObjectDictionary ;_dgad ,_aecb :=_fadca .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcf .PdfObjectInteger );if !_aecb {_ad .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dgad ==0{return _caff (_adbcb );}else if *_dgad ==4{return _cgeg (_adbcb );}else {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gebge ,_cgeeg :=_ecaf .(*_bcf .PdfIndirectObject );_cgeeg {_dgbgd ,_fcbf :=_gebge .PdfObject .(*_bcf .PdfObjectDictionary );if !_fcbf {_ad .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_cfdbf ,_fcbf :=_dgbgd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcf .PdfObjectInteger );if !_fcbf {_ad .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_cfdbf ==2{return _ggcg (_gebge );}else if *_cfdbf ==3{return _ageff (_gebge );}else {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bdae ,_egabac :=_ecaf .(*_bcf .PdfObjectDictionary );_egabac {_bbfbf ,_eeacgb :=_bdae .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcf .PdfObjectInteger );if !_eeacgb {_ad .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bbfbf ==2{return _ggcg (_bdae );}else if *_bbfbf ==3{return _ageff (_bdae );}else {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ad .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_ecaf );return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ffbe :=NewPdfAnnotation ();_fdd :=&PdfAnnotationInk {};_fdd .PdfAnnotation =_ffbe ;_fdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffbe .SetContext (_fdd );return _fdd ;};

// A returns the value of the A component of the color.
func (_agge *PdfColorLab )A ()float64 {return float64 (_agge [1])};

// ColorToRGB converts a Lab color to an RGB color.
func (_gfde *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_befa :=func (_acac float64 )float64 {if _acac >=6.0/29{return _acac *_acac *_acac ;};return 108.0/841*(_acac -4/29);};_bcce ,_febc :=color .(*PdfColorLab );if !_febc {_ad .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_bcce .L ();AStar :=_bcce .A ();BStar :=_bcce .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_gfde .WhitePoint [0]*_befa (L );Y :=_gfde .WhitePoint [1]*_befa (M );Z :=_gfde .WhitePoint [2]*_befa (N );_fffga :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eggd :=-0.969256*X +1.875992*Y +0.041556*Z ;_dfdg :=0.055648*X +-0.204043*Y +1.057311*Z ;_fffga =_db .Min (_db .Max (_fffga ,0),1.0);_eggd =_db .Min (_db .Max (_eggd ,0),1.0);_dfdg =_db .Min (_db .Max (_dfdg ,0),1.0);return NewPdfColorDeviceRGB (_fffga ,_eggd ,_dfdg ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_ddag *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if _ddag .Alternate ==nil {if _ddag .N ==1{_ddccd :=NewPdfColorspaceDeviceGray ();return _ddccd .ColorFromPdfObjects (objects );}else if _ddag .N ==3{_gadg :=NewPdfColorspaceDeviceRGB ();return _gadg .ColorFromPdfObjects (objects );}else if _ddag .N ==4{_gacb :=NewPdfColorspaceDeviceCMYK ();return _gacb .ColorFromPdfObjects (objects );}else {return nil ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _ddag .Alternate .ColorFromPdfObjects (objects );};func (_geaa *PdfReader )newPdfActionGotoEFromDict (_bba *_bcf .PdfObjectDictionary )(*PdfActionGoToE ,error ){_eceb ,_bcda :=_dec (_bba .Get ("\u0046"));if _bcda !=nil {return nil ,_bcda ;};return &PdfActionGoToE {D :_bba .Get ("\u0044"),NewWindow :_bba .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bba .Get ("\u0054"),F :_eceb },nil ;};func _fgccd ()string {if len (_bfeeb )> 0{return _bfeeb ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cece *PdfReader )GetEncryptionMethod ()string {_beca :=_cece ._eagdg .GetCrypter ();return _beca .String ();};func (_gbcaf *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_bfbb *PdfReader )newPdfAnnotationPolyLineFromDict (_ace *_bcf .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_ecee :=PdfAnnotationPolyLine {};_efgf ,_cffa :=_bfbb .newPdfAnnotationMarkupFromDict (_ace );if _cffa !=nil {return nil ,_cffa ;};_ecee .PdfAnnotationMarkup =_efgf ;_ecee .Vertices =_ace .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ecee .LE =_ace .Get ("\u004c\u0045");_ecee .BS =_ace .Get ("\u0042\u0053");_ecee .IC =_ace .Get ("\u0049\u0043");_ecee .BE =_ace .Get ("\u0042\u0045");_ecee .IT =_ace .Get ("\u0049\u0054");_ecee .Measure =_ace .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ecee ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_agb :=NewPdfAnnotation ();_afee :=&PdfAnnotationPrinterMark {};_afee .PdfAnnotation =_agb ;_agb .SetContext (_afee );return _afee ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ffcd *PdfField )GetContainingPdfObject ()_bcf .PdfObject {return _ffcd ._egegf };

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ba .Time ){_gefc =creationDate };

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_fe :=NewPdfAction ();_ag :=&PdfActionRendition {};_ag .PdfAction =_fe ;_fe .SetContext (_ag );return _ag ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_bfcag *PdfPageResources )AddExtGState (gsName _bcf .PdfObjectName ,gsDict _bcf .PdfObject )error {if _bfcag .ExtGState ==nil {_bfcag .ExtGState =_bcf .MakeDict ();};_cgdbe :=_bfcag .ExtGState ;_cdce ,_face :=_bcf .TraceToDirectObject (_cgdbe ).(*_bcf .PdfObjectDictionary );if !_face {_ad .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_cgdbe ,_bcf .TraceToDirectObject (_cgdbe ));return _bcf .ErrTypeError ;};_cdce .Set (gsName ,gsDict );return nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fbdd FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fbdd .Mask ()|fl .Mask ())};func (_dgbg *PdfReader )newPdfAnnotationSquigglyFromDict (_aebb *_bcf .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_afde :=PdfAnnotationSquiggly {};_dbe ,_bdd :=_dgbg .newPdfAnnotationMarkupFromDict (_aebb );if _bdd !=nil {return nil ,_bdd ;};_afde .PdfAnnotationMarkup =_dbe ;_afde .QuadPoints =_aebb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afde ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bcf .PdfObject )(*PdfFilespec ,error ){_bcgce :=&PdfFilespec {};var _defa *_bcf .PdfObjectDictionary ;if _bccgg ,_ddgg :=_bcf .GetIndirect (obj );_ddgg {_bcgce ._dedbd =_bccgg ;_fece ,_fbed :=_bcf .GetDict (_bccgg .PdfObject );if !_fbed {_ad .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bcf .ErrTypeError ;};_defa =_fece ;}else if _aeag ,_bbcf :=_bcf .GetDict (obj );_bbcf {_bcgce ._dedbd =_aeag ;_defa =_aeag ;}else {_ad .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bcf .ErrTypeError ;};if _defa ==nil {_ad .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_f .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bgec :=_defa .Get ("\u0054\u0079\u0070\u0065");_bgec !=nil {_fdfee ,_ebgg :=_bgec .(*_bcf .PdfObjectName );if !_ebgg {_ad .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bgec );}else {if *_fdfee !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ad .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_fdfee );};};};if _dagbb :=_defa .Get ("\u0046\u0053");_dagbb !=nil {_bcgce .FS =_dagbb ;};if _cbcg :=_defa .Get ("\u0046");_cbcg !=nil {_bcgce .F =_cbcg ;};if _abfc :=_defa .Get ("\u0055\u0046");_abfc !=nil {_bcgce .UF =_abfc ;};if _bdcf :=_defa .Get ("\u0044\u004f\u0053");_bdcf !=nil {_bcgce .DOS =_bdcf ;};if _ffdd :=_defa .Get ("\u004d\u0061\u0063");_ffdd !=nil {_bcgce .Mac =_ffdd ;};if _eddca :=_defa .Get ("\u0055\u006e\u0069\u0078");_eddca !=nil {_bcgce .Unix =_eddca ;};if _fdbab :=_defa .Get ("\u0049\u0044");_fdbab !=nil {_bcgce .ID =_fdbab ;};if _eddcf :=_defa .Get ("\u0056");_eddcf !=nil {_bcgce .V =_eddcf ;};if _cbfbb :=_defa .Get ("\u0045\u0046");_cbfbb !=nil {_bcgce .EF =_cbfbb ;};if _eedca :=_defa .Get ("\u0052\u0046");_eedca !=nil {_bcgce .RF =_eedca ;};if _aebfb :=_defa .Get ("\u0044\u0065\u0073\u0063");_aebfb !=nil {_bcgce .Desc =_aebfb ;};if _eaac :=_defa .Get ("\u0043\u0049");_eaac !=nil {_bcgce .CI =_eaac ;};return _bcgce ,nil ;};func (_addfb *PdfReader )newPdfFieldSignatureFromDict (_dcdf *_bcf .PdfObjectDictionary )(*PdfFieldSignature ,error ){_bdbgf :=&PdfFieldSignature {};_cbdaf ,_afcd :=_bcf .GetIndirect (_dcdf .Get ("\u0056"));if _afcd {var _eece error ;_bdbgf .V ,_eece =_addfb .newPdfSignatureFromIndirect (_cbdaf );if _eece !=nil {return nil ,_eece ;};};_bdbgf .Lock ,_ =_bcf .GetIndirect (_dcdf .Get ("\u004c\u006f\u0063\u006b"));_bdbgf .SV ,_ =_bcf .GetIndirect (_dcdf .Get ("\u0053\u0056"));return _bdbgf ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gdge *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gdge .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bcf .PdfObject ;};func (_fadf *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func (_fdfdg *PdfAcroForm )fill (_fdcb FieldValueProvider ,_fgefc FieldAppearanceGenerator )error {if _fdfdg ==nil {return nil ;};_acgad ,_cebcb :=_fdcb .FieldValues ();if _cebcb !=nil {return _cebcb ;};for _ ,_ddcbg :=range _fdfdg .AllFields (){_edcfc :=_ddcbg .PartialName ();_dcdb ,_gfab :=_acgad [_edcfc ];if !_gfab {if _eccf ,_bcdb :=_ddcbg .FullName ();_bcdb ==nil {_dcdb ,_gfab =_acgad [_eccf ];};};if !_gfab {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_edcfc );continue ;};if _bgfaf :=_adadc (_ddcbg ,_dcdb );_bgfaf !=nil {return _bgfaf ;};if _fgefc ==nil {continue ;};for _ ,_ecfg :=range _ddcbg .Annotations {_acece ,_eecdg :=_fgefc .GenerateAppearanceDict (_fdfdg ,_ddcbg ,_ecfg );if _eecdg !=nil {return _eecdg ;};_ecfg .AP =_acece ;_ecfg .ToPdfObject ();};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfa *PdfAction )ToPdfObject ()_bcf .PdfObject {_eec :=_dfa ._ge ;_aaf :=_eec .PdfObject .(*_bcf .PdfObjectDictionary );_aaf .Clear ();_aaf .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_aaf .SetIfNotNil ("\u0053",_dfa .S );_aaf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_dfa .Next );return _eec ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fdb :=NewPdfAnnotation ();_egae :=&PdfAnnotationLink {};_egae .PdfAnnotation =_fdb ;_fdb .SetContext (_egae );return _egae ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_gbba *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bcf .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faeg ,_ffae :=_bcf .GetNumbersAsFloat (objects );if _ffae !=nil {return nil ,_ffae ;};return _gbba .ColorFromFloats (_faeg );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bcf .PdfIndirectObject )*PdfOutlineItem {_fcfdc :=PdfOutlineItem {};_fcfdc ._badg =&_fcfdc ;_fcfdc .Title =_bcf .MakeString (title );_bafgd :=_bcf .MakeArray ();_bafgd .Append (page );_bafgd .Append (_bcf .MakeName ("\u0046\u0069\u0074"));_fcfdc .Dest =_bafgd ;return &_fcfdc ;};func (_cagee *PdfReader )lookupPageByObject (_caeec _bcf .PdfObject )(*PdfPage ,error ){return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gdg :=NewPdfAction ();_ece :=&PdfActionGoToE {};_ece .PdfAction =_gdg ;_gdg .SetContext (_ece );return _ece ;};func (_fdgbc *PdfAppender )addNewObject (_dgae _bcf .PdfObject ){if _ ,_fbgce :=_fdgbc ._dggb [_dgae ];!_fbgce {_fdgbc ._ebbb =append (_fdgbc ._ebbb ,_dgae );_fdgbc ._dggb [_dgae ]=struct{}{};};};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cggg *PdfAcroForm ,_bcag *PdfField ,_fgaac *PdfAnnotationWidget )(*_bcf .PdfObjectDictionary ,error );};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_acgbd *_bcf .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_efee *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eafe :=vals [0];if _eafe < 0.0||_eafe > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdf :=vals [1];if _gdf < 0.0||_gdf > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dabcc :=vals [2];if _dabcc < 0.0||_dabcc > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edege :=NewPdfColorDeviceRGB (_eafe ,_gdf ,_dabcc );return _edege ,nil ;};func (_cbbcda *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func _bdcde (_gafb _bcf .PdfObject )(*PdfShading ,error ){_ffgbg :=&PdfShading {};var _eccgdg *_bcf .PdfObjectDictionary ;if _bcgaa ,_fdbea :=_bcf .GetIndirect (_gafb );_fdbea {_ffgbg ._aeddc =_bcgaa ;_ggee ,_adcge :=_bcgaa .PdfObject .(*_bcf .PdfObjectDictionary );if !_adcge {_ad .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bcf .ErrTypeError ;};_eccgdg =_ggee ;}else if _bfcce ,_cfcad :=_bcf .GetStream (_gafb );_cfcad {_ffgbg ._aeddc =_bfcce ;_eccgdg =_bfcce .PdfObjectDictionary ;}else if _cffdf ,_gcbgfe :=_bcf .GetDict (_gafb );_gcbgfe {_ffgbg ._aeddc =_cffdf ;_eccgdg =_cffdf ;}else {_ad .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gafb );return nil ,_bcf .ErrTypeError ;};if _eccgdg ==nil {_ad .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_f .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gafb =_eccgdg .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gafb ==nil {_ad .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gafb =_bcf .TraceToDirectObject (_gafb );_edaac ,_dbga :=_gafb .(*_bcf .PdfObjectInteger );if !_dbga {_ad .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gafb );return nil ,_bcf .ErrTypeError ;};if *_edaac < 1||*_edaac > 7{_ad .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_edaac );return nil ,_bcf .ErrTypeError ;};_ffgbg .ShadingType =_edaac ;_gafb =_eccgdg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gafb ==nil {_ad .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bead ,_daafa :=NewPdfColorspaceFromPdfObject (_gafb );if _daafa !=nil {_ad .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_daafa );return nil ,_daafa ;};_ffgbg .ColorSpace =_bead ;_gafb =_eccgdg .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gafb !=nil {_gafb =_bcf .TraceToDirectObject (_gafb );_fdefda ,_adggb :=_gafb .(*_bcf .PdfObjectArray );if !_adggb {_ad .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gafb );return nil ,_bcf .ErrTypeError ;};_ffgbg .Background =_fdefda ;};_gafb =_eccgdg .Get ("\u0042\u0042\u006f\u0078");if _gafb !=nil {_gafb =_bcf .TraceToDirectObject (_gafb );_ggdbbb ,_abgga :=_gafb .(*_bcf .PdfObjectArray );if !_abgga {_ad .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gafb );return nil ,_bcf .ErrTypeError ;};_bbcfd ,_addfe :=NewPdfRectangle (*_ggdbbb );if _addfe !=nil {_ad .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_addfe );return nil ,_addfe ;};_ffgbg .BBox =_bbcfd ;};_gafb =_eccgdg .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _gafb !=nil {_gafb =_bcf .TraceToDirectObject (_gafb );_ebgbf ,_gbdec :=_gafb .(*_bcf .PdfObjectBool );if !_gbdec {_ad .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gafb );return nil ,_bcf .ErrTypeError ;};_ffgbg .AntiAlias =_ebgbf ;};switch *_edaac {case 1:_begg ,_agegc :=_eedab (_eccgdg );if _agegc !=nil {return nil ,_agegc ;};_begg .PdfShading =_ffgbg ;_ffgbg ._accbb =_begg ;return _ffgbg ,nil ;case 2:_beebf ,_geafb :=_dabb (_eccgdg );if _geafb !=nil {return nil ,_geafb ;};_beebf .PdfShading =_ffgbg ;_ffgbg ._accbb =_beebf ;return _ffgbg ,nil ;case 3:_feaca ,_beaca :=_bcfgb (_eccgdg );if _beaca !=nil {return nil ,_beaca ;};_feaca .PdfShading =_ffgbg ;_ffgbg ._accbb =_feaca ;return _ffgbg ,nil ;case 4:_acged ,_cccgb :=_cbadc (_eccgdg );if _cccgb !=nil {return nil ,_cccgb ;};_acged .PdfShading =_ffgbg ;_ffgbg ._accbb =_acged ;return _ffgbg ,nil ;case 5:_dadaf ,_geedc :=_dcdfc (_eccgdg );if _geedc !=nil {return nil ,_geedc ;};_dadaf .PdfShading =_ffgbg ;_ffgbg ._accbb =_dadaf ;return _ffgbg ,nil ;case 6:_ffbddd ,_edeaa :=_dbegc (_eccgdg );if _edeaa !=nil {return nil ,_edeaa ;};_ffbddd .PdfShading =_ffgbg ;_ffgbg ._accbb =_ffbddd ;return _ffgbg ,nil ;case 7:_fafc ,_bbdd :=_fedfd (_eccgdg );if _bbdd !=nil {return nil ,_bbdd ;};_fafc .PdfShading =_ffgbg ;_ffgbg ._accbb =_fafc ;return _ffgbg ,nil ;};return nil ,_f .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ba .Time ){_gefc =modifiedDate };

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gad :=NewPdfAnnotation ();_dcca :=&PdfAnnotationCaret {};_dcca .PdfAnnotation =_gad ;_dcca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gad .SetContext (_dcca );return _dcca ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gdeb *PdfAnnotation )GetContainingPdfObject ()_bcf .PdfObject {return _gdeb ._fab };var _bfeeb ="";

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_eb :=NewPdfAction ();_gf :=&PdfActionGoToR {};_gf .PdfAction =_eb ;_eb .SetContext (_gf );return _gf ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _eg .ReadSeeker )(*PdfReader ,error ){_dcgbgb :=&PdfReader {_ebabc :rs ,_edbcb :map[_bcf .PdfObject ]struct{}{},_adaff :_edfg (),_eddddc :false };_bfgfb ,_fggee :=_bcf .NewParser (rs );if _fggee !=nil {return nil ,_fggee ;};_dcgbgb ._eagdg =_bfgfb ;_ebdcb ,_fggee :=_dcgbgb .IsEncrypted ();if _fggee !=nil {return nil ,_fggee ;};if !_ebdcb {_fggee =_dcgbgb .loadStructure ();if _fggee !=nil {return nil ,_fggee ;};};return _dcgbgb ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_fdceag *PdfPageResources )GetFontByName (keyName _bcf .PdfObjectName )(_bcf .PdfObject ,bool ){if _fdceag .Font ==nil {return nil ,false ;};_agfcc ,_afaf :=_bcf .TraceToDirectObject (_fdceag .Font ).(*_bcf .PdfObjectDictionary );if !_afaf {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bcf .TraceToDirectObject (_fdceag .Font ));return nil ,false ;};if _gdcad :=_agfcc .Get (keyName );_gdcad !=nil {return _gdcad ,true ;};return nil ,false ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_cbbcd :=&PdfColorspaceCalGray {};_cbbcd .BlackPoint =[]float64 {0.0,0.0,0.0};_cbbcd .Gamma =1;return _cbbcd ;};func (_aaddd *pdfFontType0 )subsetRegistered ()error {_ccba ,_eebd :=_aaddd .DescendantFont ._cefc .(*pdfCIDFontType2 );if !_eebd {_ad .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_aaddd .DescendantFont );return nil ;};if _ccba ==nil {return nil ;};if _ccba ._debbe ==nil {_ad .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _aaddd ._fdfd ==nil {_ad .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_bgede ,_eebd :=_bcf .GetStream (_ccba ._debbe .FontFile2 );if !_eebd {_ad .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _f .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_edfc ,_eebc :=_bcf .DecodeStream (_bgede );if _eebc !=nil {_ad .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eebc );return _eebc ;};_afbe ,_eebc :=_ee .Parse (_ce .NewReader (_edfc ));if _eebc !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_bgede .Stream ));return _eebc ;};var _dacg []rune ;var _ddcf *_ee .Font ;switch _aeeg :=_aaddd ._fdfd .(type ){case *_dc .TrueTypeFontEncoder :_dacg =_aeeg .RegisteredRunes ();_ddcf ,_eebc =_afbe .SubsetKeepRunes (_dacg );if _eebc !=nil {_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebc );return _eebc ;};_aeeg .SubsetRegistered ();case *_dc .IdentityEncoder :_dacg =_aeeg .RegisteredRunes ();_ffec :=make ([]_ee .GlyphIndex ,len (_dacg ));for _fagd ,_dfab :=range _dacg {_ffec [_fagd ]=_ee .GlyphIndex (_dfab );};_ddcf ,_eebc =_afbe .SubsetKeepIndices (_ffec );if _eebc !=nil {_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebc );return _eebc ;};case _dc .SimpleEncoder :_fadcb :=_aeeg .Charcodes ();for _ ,_ffee :=range _fadcb {_eeag ,_gebee :=_aeeg .CharcodeToRune (_ffee );if !_gebee {_ad .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ffee );continue ;};_dacg =append (_dacg ,_eeag );};default:return _bc .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_aaddd ._fdfd );};var _ddggc _ce .Buffer ;_eebc =_ddcf .Write (&_ddggc );if _eebc !=nil {_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebc );return _eebc ;};if _aaddd ._ecba !=nil {_acbe :=make (map[_df .CharCode ]rune ,len (_dacg ));for _ ,_fgbf :=range _dacg {_dbabc ,_fafa :=_aaddd ._fdfd .RuneToCharcode (_fgbf );if !_fafa {continue ;};_acbe [_df .CharCode (_dbabc )]=_fgbf ;};_aaddd ._ecba =_df .NewToUnicodeCMap (_acbe );};_bgede ,_eebc =_bcf .MakeStream (_ddggc .Bytes (),_bcf .NewFlateEncoder ());if _eebc !=nil {_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebc );return _eebc ;};_bgede .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcf .MakeInteger (int64 (_ddggc .Len ())));if _eaef ,_gfbc :=_bcf .GetStream (_ccba ._debbe .FontFile2 );_gfbc {*_eaef =*_bgede ;}else {_ccba ._debbe .FontFile2 =_bgede ;};_acgb :=_geabd ();if len (_aaddd ._agaf )> 0{_aaddd ._agaf =_aabbg (_aaddd ._agaf ,_acgb );};if len (_ccba ._agaf )> 0{_ccba ._agaf =_aabbg (_ccba ._agaf ,_acgb );};if len (_aaddd ._bfge )> 0{_aaddd ._bfge =_aabbg (_aaddd ._bfge ,_acgb );};if _ccba ._debbe !=nil {_fbea ,_ccda :=_bcf .GetName (_ccba ._debbe .FontName );if _ccda &&len (_fbea .String ())> 0{_ggbec :=_aabbg (_fbea .String (),_acgb );_ccba ._debbe .FontName =_bcf .MakeName (_ggbec );};};return nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bcf .PdfObject ;AN _bcf .PdfObject ;OP _bcf .PdfObject ;JS _bcf .PdfObject ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_aaac :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_aaac ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dfd *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bcf .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToGoTime returns the date in time.Time format.
func (_cede PdfDate )ToGoTime ()_ba .Time {_fbdfe :=int (_cede ._debef *60*60+_cede ._cfggf *60);switch _cede ._edgdg {case '-':_fbdfe =-_fbdfe ;case 'Z':_fbdfe =0;};_afafb :=_bc .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_cede ._edgdg ,_cede ._debef ,_cede ._cfggf );_bdfbc :=_ba .FixedZone (_afafb ,_fbdfe );return _ba .Date (int (_cede ._gedge ),_ba .Month (_cede ._gggdd ),int (_cede ._efacd ),int (_cede ._dgcgc ),int (_cede ._efcac ),int (_cede ._bfaf ),0,_bdfbc );};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gbeed *Image )GetSamples ()[]uint32 {_degbf :=_bd .ResampleBytes (_gbeed .Data ,int (_gbeed .BitsPerComponent ));if _gbeed .BitsPerComponent < 8{_degbf =_gbeed .samplesTrimPadding (_degbf );};_adfa :=int (_gbeed .Width )*int (_gbeed .Height )*_gbeed .ColorComponents ;if len (_degbf )< _adfa {_ad .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_degbf ),_adfa );return _degbf ;}else if len (_degbf )> _adfa {_ad .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_degbf ),_adfa );_degbf =_degbf [:_adfa ];};return _degbf ;};func (_ceac *PdfWriter )hasObject (_ecfec _bcf .PdfObject )bool {_ ,_befbd :=_ceac ._ccecce [_ecfec ];return _befbd ;};var _fdgfc ="";

// ToPdfObject implements interface PdfModel.
func (_cabb *PdfAnnotationLine )ToPdfObject ()_bcf .PdfObject {_cabb .PdfAnnotation .ToPdfObject ();_efed :=_cabb ._fab ;_gcbg :=_efed .PdfObject .(*_bcf .PdfObjectDictionary );_cabb .PdfAnnotationMarkup .appendToPdfDictionary (_gcbg );_gcbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u004c\u0069\u006e\u0065"));_gcbg .SetIfNotNil ("\u004c",_cabb .L );_gcbg .SetIfNotNil ("\u0042\u0053",_cabb .BS );_gcbg .SetIfNotNil ("\u004c\u0045",_cabb .LE );_gcbg .SetIfNotNil ("\u0049\u0043",_cabb .IC );_gcbg .SetIfNotNil ("\u004c\u004c",_cabb .LL );_gcbg .SetIfNotNil ("\u004c\u004c\u0045",_cabb .LLE );_gcbg .SetIfNotNil ("\u0043\u0061\u0070",_cabb .Cap );_gcbg .SetIfNotNil ("\u0049\u0054",_cabb .IT );_gcbg .SetIfNotNil ("\u004c\u004c\u004f",_cabb .LLO );_gcbg .SetIfNotNil ("\u0043\u0050",_cabb .CP );_gcbg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cabb .Measure );_gcbg .SetIfNotNil ("\u0043\u004f",_cabb .CO );return _efed ;};

// B returns the value of the blue component of the color.
func (_acd *PdfColorDeviceRGB )B ()float64 {return float64 (_acd [2])};var _ pdfFont =(*pdfCIDFontType0 )(nil );func (_eedcg *fontFile )parseASCIIPart (_bbfa []byte )error {if len (_bbfa )< 2||string (_bbfa [:2])!="\u0025\u0021"{return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_agfc ,_fdcf ,_abdg :=_cbaf (_bbfa );if _abdg !=nil {return _abdg ;};_aggd :=_aabge (_agfc );_eedcg ._bbgab =_aggd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _eedcg ._bbgab ==""{_ad .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _fdcf !=""{_cdcd ,_fbbc :=_aaadc (_fdcf );if _fbbc !=nil {return _fbbc ;};_aedf ,_fbbc :=_dc .NewCustomSimpleTextEncoder (_cdcd ,nil );if _fbbc !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_fbbc );return nil ;};_eedcg ._ffcba =_aedf ;};return nil ;};

// SetName sets the `Name` field of the signature.
func (_feada *PdfSignature )SetName (name string ){_feada .Name =_bcf .MakeString (name )};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ggggc *PdfPageResources )GetXObjectImageByName (keyName _bcf .PdfObjectName )(*XObjectImage ,error ){_aeba ,_cfgeg :=_ggggc .GetXObjectByName (keyName );if _aeba ==nil {return nil ,nil ;};if _cfgeg !=XObjectTypeImage {return nil ,_f .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_gdbac ,_fbaaa :=NewXObjectImageFromStream (_aeba );if _fbaaa !=nil {return nil ,_fbaaa ;};return _gdbac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdcdg *PdfAnnotationWidget )ToPdfObject ()_bcf .PdfObject {_gdcdg .PdfAnnotation .ToPdfObject ();_dega :=_gdcdg ._fab ;_fgcb :=_dega .PdfObject .(*_bcf .PdfObjectDictionary );if _gdcdg ._dfafb {return _dega ;};_gdcdg ._dfafb =true ;_fgcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_fgcb .SetIfNotNil ("\u0048",_gdcdg .H );_fgcb .SetIfNotNil ("\u004d\u004b",_gdcdg .MK );_fgcb .SetIfNotNil ("\u0041",_gdcdg .A );_fgcb .SetIfNotNil ("\u0041\u0041",_gdcdg .AA );_fgcb .SetIfNotNil ("\u0042\u0053",_gdcdg .BS );_ebbe :=_gdcdg .Parent ;if _gdcdg ._efc !=nil {if _gdcdg ._efc ._egegf ==_gdcdg ._fab {_gdcdg ._efc .ToPdfObject ();};_ebbe =_gdcdg ._efc .GetContainingPdfObject ();};if _ebbe !=_dega {_fgcb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebbe );};_gdcdg ._dfafb =false ;return _dega ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_fbca *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_bdedd *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bccag ,_gdde :=range _bdedd ._bgdfb {_bdedd ._bgdfb [_bccag ]=mapFunc (_gdde );};};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cfgfa =keywords };

// ToPdfObject implements interface PdfModel.
func (_ccd *PdfActionGoTo3DView )ToPdfObject ()_bcf .PdfObject {_ccd .PdfAction .ToPdfObject ();_dfaf :=_ccd ._ge ;_gg :=_dfaf .PdfObject .(*_bcf .PdfObjectDictionary );_gg .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeGoTo3DView )));_gg .SetIfNotNil ("\u0054\u0041",_ccd .TA );_gg .SetIfNotNil ("\u0056",_ccd .V );return _dfaf ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bcbb *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dbgg :=_bcbb .actualFont ();if _dbgg ==nil {_ad .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bcbb ._cefc );return _cb .CharMetrics {},false ;};if _cgee ,_fcebg :=_dbgg .GetRuneMetrics (r );_fcebg {return _cgee ,true ;};if _gggd ,_gccb :=_bcbb .GetFontDescriptor ();_gccb ==nil &&_gggd !=nil {return _cb .CharMetrics {Wx :_gggd ._ffaf },true ;};_ad .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcbb );return _cb .CharMetrics {},false ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// Initialize initializes the PdfSignature.
func (_bcdfe *PdfSignature )Initialize ()error {if _bcdfe .Handler ==nil {return _f .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _bcdfe .Handler .InitSignature (_bcdfe );};

// String returns a string representation of what flags are set.
func (_eacb FieldFlag )String ()string {_gaafe :="";if _eacb ==FieldFlagClear {_gaafe ="\u0043\u006c\u0065a\u0072";return _gaafe ;};if _eacb &FieldFlagReadOnly > 0{_gaafe +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _eacb &FieldFlagRequired > 0{_gaafe +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _eacb &FieldFlagNoExport > 0{_gaafe +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _eacb &FieldFlagNoToggleToOff > 0{_gaafe +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _eacb &FieldFlagRadio > 0{_gaafe +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _eacb &FieldFlagPushbutton > 0{_gaafe +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _eacb &FieldFlagRadiosInUnision > 0{_gaafe +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _eacb &FieldFlagMultiline > 0{_gaafe +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _eacb &FieldFlagPassword > 0{_gaafe +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _eacb &FieldFlagFileSelect > 0{_gaafe +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _eacb &FieldFlagDoNotScroll > 0{_gaafe +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _eacb &FieldFlagComb > 0{_gaafe +="\u007c\u0043\u006fm\u0062";};if _eacb &FieldFlagRichText > 0{_gaafe +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _eacb &FieldFlagDoNotSpellCheck > 0{_gaafe +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _eacb &FieldFlagCombo > 0{_gaafe +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _eacb &FieldFlagEdit > 0{_gaafe +="\u007c\u0045\u0064i\u0074";};if _eacb &FieldFlagSort > 0{_gaafe +="\u007c\u0053\u006fr\u0074";};if _eacb &FieldFlagMultiSelect > 0{_gaafe +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _eacb &FieldFlagCommitOnSelChange > 0{_gaafe +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _be .Trim (_gaafe ,"\u007c");};func (_caa *PdfReader )newPdfActionGotoFromDict (_fca *_bcf .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fca .Get ("\u0044")},nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// SetFontByName sets the font specified by keyName to the given object.
func (_aaabe *PdfPageResources )SetFontByName (keyName _bcf .PdfObjectName ,obj _bcf .PdfObject )error {if _aaabe .Font ==nil {_aaabe .Font =_bcf .MakeDict ();};_fcdde ,_acef :=_bcf .TraceToDirectObject (_aaabe .Font ).(*_bcf .PdfObjectDictionary );if !_acef {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bcf .TraceToDirectObject (_aaabe .Font ));return _bcf .ErrTypeError ;};_fcdde .Set (keyName ,obj );return nil ;};

// Add appends a top level outline item to the outline.
func (_ceae *Outline )Add (item *OutlineItem ){_ceae .Entries =append (_ceae .Entries ,item )};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dfgc *PdfColorspaceLab )ToPdfObject ()_bcf .PdfObject {_affeg :=_bcf .MakeArray ();_affeg .Append (_bcf .MakeName ("\u004c\u0061\u0062"));_fecd :=_bcf .MakeDict ();if _dfgc .WhitePoint !=nil {_abae :=_bcf .MakeArray (_bcf .MakeFloat (_dfgc .WhitePoint [0]),_bcf .MakeFloat (_dfgc .WhitePoint [1]),_bcf .MakeFloat (_dfgc .WhitePoint [2]));_fecd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_abae );}else {_ad .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _dfgc .BlackPoint !=nil {_bacg :=_bcf .MakeArray (_bcf .MakeFloat (_dfgc .BlackPoint [0]),_bcf .MakeFloat (_dfgc .BlackPoint [1]),_bcf .MakeFloat (_dfgc .BlackPoint [2]));_fecd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bacg );};if _dfgc .Range !=nil {_cef :=_bcf .MakeArray (_bcf .MakeFloat (_dfgc .Range [0]),_bcf .MakeFloat (_dfgc .Range [1]),_bcf .MakeFloat (_dfgc .Range [2]),_bcf .MakeFloat (_dfgc .Range [3]));_fecd .Set ("\u0052\u0061\u006eg\u0065",_cef );};_affeg .Append (_fecd );if _dfgc ._gbaf !=nil {_dfgc ._gbaf .PdfObject =_affeg ;return _dfgc ._gbaf ;};return _affeg ;};func (_cafgb *PdfPattern )getDict ()*_bcf .PdfObjectDictionary {if _gcgg ,_dfcdc :=_cafgb ._gebbd .(*_bcf .PdfIndirectObject );_dfcdc {_gggdc ,_abebe :=_gcgg .PdfObject .(*_bcf .PdfObjectDictionary );if !_abebe {return nil ;};return _gggdc ;}else if _fagg ,_acbdd :=_cafgb ._gebbd .(*_bcf .PdfObjectStream );_acbdd {return _fagg .PdfObjectDictionary ;}else {_ad .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_cafgb ._gebbd );return nil ;};};func _edfg ()*modelManager {_bgdg :=modelManager {};_bgdg ._fcbcd =map[PdfModel ]_bcf .PdfObject {};_bgdg ._efbgf =map[_bcf .PdfObject ]PdfModel {};return &_bgdg ;};func _aeeb (_ecfbe *_bcf .PdfObjectDictionary )(*PdfFieldButton ,error ){_gggfgc :=&PdfFieldButton {};_gggfgc .Opt ,_ =_bcf .GetArray (_ecfbe .Get ("\u004f\u0070\u0074"));return _gggfgc ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_aafae *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _aafae .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_adef *PdfFieldSignature )ToPdfObject ()_bcf .PdfObject {if _adef .PdfAnnotationWidget !=nil {_adef .PdfAnnotationWidget .ToPdfObject ();};_adef .PdfField .ToPdfObject ();_debdc :=_adef ._egegf ;_gbec :=_debdc .PdfObject .(*_bcf .PdfObjectDictionary );_gbec .SetIfNotNil ("\u0046\u0054",_bcf .MakeName ("\u0053\u0069\u0067"));_gbec .SetIfNotNil ("\u004c\u006f\u0063\u006b",_adef .Lock );_gbec .SetIfNotNil ("\u0053\u0056",_adef .SV );if _adef .V !=nil {_gbec .SetIfNotNil ("\u0056",_adef .V .ToPdfObject ());};return _debdc ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bcf .PdfObject ;Dest _bcf .PdfObject ;H _bcf .PdfObject ;PA _bcf .PdfObject ;QuadPoints _bcf .PdfObject ;BS _bcf .PdfObject ;_fbd *PdfAction ;_dda *PdfReader ;};func (_adab *PdfReader )newPdfAnnotationMarkupFromDict (_eac *_bcf .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_adafc :=&PdfAnnotationMarkup {};if _gccc :=_eac .Get ("\u0054");_gccc !=nil {_adafc .T =_gccc ;};if _gdgb :=_eac .Get ("\u0050\u006f\u0070u\u0070");_gdgb !=nil {_fcc ,_egf :=_gdgb .(*_bcf .PdfIndirectObject );if !_egf {if _ ,_acaf :=_gdgb .(*_bcf .PdfObjectNull );!_acaf {return nil ,_f .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_abd ,_aeb :=_adab .newPdfAnnotationFromIndirectObject (_fcc );if _aeb !=nil {return nil ,_aeb ;};if _abd !=nil {_agbg ,_ccf :=_abd ._ffb .(*PdfAnnotationPopup );if !_ccf {return nil ,_f .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_adafc .Popup =_agbg ;};};};if _gbd :=_eac .Get ("\u0043\u0041");_gbd !=nil {_adafc .CA =_gbd ;};if _feda :=_eac .Get ("\u0052\u0043");_feda !=nil {_adafc .RC =_feda ;};if _fgg :=_eac .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_fgg !=nil {_adafc .CreationDate =_fgg ;};if _afcc :=_eac .Get ("\u0049\u0052\u0054");_afcc !=nil {_adafc .IRT =_afcc ;};if _bdg :=_eac .Get ("\u0053\u0075\u0062\u006a");_bdg !=nil {_adafc .Subj =_bdg ;};if _fbe :=_eac .Get ("\u0052\u0054");_fbe !=nil {_adafc .RT =_fbe ;};if _dgcg :=_eac .Get ("\u0049\u0054");_dgcg !=nil {_adafc .IT =_dgcg ;};if _ffda :=_eac .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ffda !=nil {_adafc .ExData =_ffda ;};return _adafc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdebb *PdfAnnotationLink )ToPdfObject ()_bcf .PdfObject {_gdebb .PdfAnnotation .ToPdfObject ();_eegf :=_gdebb ._fab ;_fff :=_eegf .PdfObject .(*_bcf .PdfObjectDictionary );_fff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u004c\u0069\u006e\u006b"));if _gdebb ._fbd !=nil &&_gdebb ._fbd ._cec !=nil {_fff .Set ("\u0041",_gdebb ._fbd ._cec .ToPdfObject ());}else if _gdebb .A !=nil {_fff .Set ("\u0041",_gdebb .A );};_fff .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gdebb .Dest );_fff .SetIfNotNil ("\u0048",_gdebb .H );_fff .SetIfNotNil ("\u0050\u0041",_gdebb .PA );_fff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdebb .QuadPoints );_fff .SetIfNotNil ("\u0042\u0053",_gdebb .BS );return _eegf ;};

// ToPdfObject implements interface PdfModel.
func (_ddg *PdfActionJavaScript )ToPdfObject ()_bcf .PdfObject {_ddg .PdfAction .ToPdfObject ();_gde :=_ddg ._ge ;_dfe :=_gde .PdfObject .(*_bcf .PdfObjectDictionary );_dfe .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeJavaScript )));_dfe .SetIfNotNil ("\u004a\u0053",_ddg .JS );return _gde ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_aaeg *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _fcgac []*PdfOutlineTreeNode ;var _bfadb []string ;var _edea func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_edea =func (_adcgc *PdfOutlineTreeNode ,_dccf *[]*PdfOutlineTreeNode ,_eefga *[]string ,_dcdaa int ){if _adcgc ==nil {return ;};if _adcgc ._badg ==nil {_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_aagdd ,_bfcdg :=_adcgc ._badg .(*PdfOutlineItem );if _bfcdg {*_dccf =append (*_dccf ,&_aagdd .PdfOutlineTreeNode );_aeebf :=_be .Repeat ("\u0020",_dcdaa *2)+_aagdd .Title .Decoded ();*_eefga =append (*_eefga ,_aeebf );};if _adcgc .First !=nil {_gaba :=_be .Repeat ("\u0020",_dcdaa *2)+"\u002b";*_eefga =append (*_eefga ,_gaba );_edea (_adcgc .First ,_dccf ,_eefga ,_dcdaa +1);};if _bfcdg &&_aagdd .Next !=nil {_edea (_aagdd .Next ,_dccf ,_eefga ,_dcdaa );};};_edea (_aaeg ._ddcee ,&_fcgac ,&_bfadb ,0);return _fcgac ,_bfadb ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_degcc *PdfFunctionType2 )ToPdfObject ()_bcf .PdfObject {_cbcff :=_bcf .MakeDict ();_cbcff .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcf .MakeInteger (2));_fabc :=&_bcf .PdfObjectArray {};for _ ,_eaefd :=range _degcc .Domain {_fabc .Append (_bcf .MakeFloat (_eaefd ));};_cbcff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fabc );if _degcc .Range !=nil {_aagbe :=&_bcf .PdfObjectArray {};for _ ,_gdffc :=range _degcc .Range {_aagbe .Append (_bcf .MakeFloat (_gdffc ));};_cbcff .Set ("\u0052\u0061\u006eg\u0065",_aagbe );};if _degcc .C0 !=nil {_faacg :=&_bcf .PdfObjectArray {};for _ ,_cfcd :=range _degcc .C0 {_faacg .Append (_bcf .MakeFloat (_cfcd ));};_cbcff .Set ("\u0043\u0030",_faacg );};if _degcc .C1 !=nil {_eafcd :=&_bcf .PdfObjectArray {};for _ ,_bdgff :=range _degcc .C1 {_eafcd .Append (_bcf .MakeFloat (_bdgff ));};_cbcff .Set ("\u0043\u0031",_eafcd );};_cbcff .Set ("\u004e",_bcf .MakeFloat (_degcc .N ));if _degcc ._egac !=nil {_degcc ._egac .PdfObject =_cbcff ;return _degcc ._egac ;};return _cbcff ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gge :=NewPdfAnnotation ();_cfd :=&PdfAnnotationStamp {};_cfd .PdfAnnotation =_gge ;_cfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gge .SetContext (_cfd );return _cfd ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_ggbebg *PdfPageResources )HasXObjectByName (keyName _bcf .PdfObjectName )bool {_cdbbb ,_ :=_ggbebg .GetXObjectByName (keyName );return _cdbbb !=nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_gcfac *PdfFieldButton )GetType ()ButtonType {_dfde :=ButtonTypeCheckbox ;if _gcfac .Ff !=nil {if (uint32 (*_gcfac .Ff )&FieldFlagPushbutton .Mask ())> 0{_dfde =ButtonTypePush ;}else if (uint32 (*_gcfac .Ff )&FieldFlagRadio .Mask ())> 0{_dfde =ButtonTypeRadio ;};};return _dfde ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gffac *PdfShadingType4 )ToPdfObject ()_bcf .PdfObject {_gffac .PdfShading .ToPdfObject ();_cbfec ,_aaaff :=_gffac .getShadingDict ();if _aaaff !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gffac .BitsPerCoordinate !=nil {_cbfec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gffac .BitsPerCoordinate );};if _gffac .BitsPerComponent !=nil {_cbfec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gffac .BitsPerComponent );};if _gffac .BitsPerFlag !=nil {_cbfec .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gffac .BitsPerFlag );};if _gffac .Decode !=nil {_cbfec .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gffac .Decode );};if _gffac .Function !=nil {if len (_gffac .Function )==1{_cbfec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gffac .Function [0].ToPdfObject ());}else {_dccaaf :=_bcf .MakeArray ();for _ ,_dgaec :=range _gffac .Function {_dccaaf .Append (_dgaec .ToPdfObject ());};_cbfec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dccaaf );};};return _gffac ._aeddc ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bcf .PdfObject ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_aefe *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_daba *PdfReader )newPdfOutlineItemFromIndirectObject (_bagbd *_bcf .PdfIndirectObject )(*PdfOutlineItem ,error ){_fefga ,_dcgac :=_bagbd .PdfObject .(*_bcf .PdfObjectDictionary );if !_dcgac {return nil ,_bc .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ffggdf :=NewPdfOutlineItem ();_gccff :=_fefga .Get ("\u0054\u0069\u0074l\u0065");if _gccff ==nil {return nil ,_bc .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_ddfef ,_ecae :=_bcf .GetString (_gccff );if !_ecae {return nil ,_bc .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gccff );};_ffggdf .Title =_ddfef ;if _dccae :=_fefga .Get ("\u0043\u006f\u0075n\u0074");_dccae !=nil {_abage ,_dccaf :=_dccae .(*_bcf .PdfObjectInteger );if !_dccaf {return nil ,_bc .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_dccae );};_eefb :=int64 (*_abage );_ffggdf .Count =&_eefb ;};if _cafc :=_fefga .Get ("\u0044\u0065\u0073\u0074");_cafc !=nil {_ffggdf .Dest =_bcf .ResolveReference (_cafc );if !_daba ._eddddc {_ecdfb :=_daba .traverseObjectData (_ffggdf .Dest );if _ecdfb !=nil {return nil ,_ecdfb ;};};};if _dcfga :=_fefga .Get ("\u0041");_dcfga !=nil {_ffggdf .A =_bcf .ResolveReference (_dcfga );if !_daba ._eddddc {_fcbe :=_daba .traverseObjectData (_ffggdf .A );if _fcbe !=nil {return nil ,_fcbe ;};};};if _cacbf :=_fefga .Get ("\u0053\u0045");_cacbf !=nil {_ffggdf .SE =nil ;};if _egbgf :=_fefga .Get ("\u0043");_egbgf !=nil {_ffggdf .C =_bcf .ResolveReference (_egbgf );};if _cbbcc :=_fefga .Get ("\u0046");_cbbcc !=nil {_ffggdf .F =_bcf .ResolveReference (_cbbcc );};return _ffggdf ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_bbcge :=&PdfFieldSignature {};_bbcge .PdfField =NewPdfField ();_bbcge .PdfField .SetContext (_bbcge );_bbcge .PdfAnnotationWidget =NewPdfAnnotationWidget ();_bbcge .PdfAnnotationWidget .SetContext (_bbcge );_bbcge .PdfAnnotationWidget ._fab =_bbcge .PdfField ._egegf ;_bbcge .T =_bcf .MakeString ("");_bbcge .F =_bcf .MakeInteger (132);_bbcge .V =signature ;return _bbcge ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_dgbge *modelManager )GetPrimitiveFromModel (model PdfModel )_bcf .PdfObject {_fbdag ,_dafff :=_dgbge ._fcbcd [model ];if !_dafff {return nil ;};return _fbdag ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_ddfa *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _ddfa ._dggce ==nil {_ddfa ._dggce =_dg .NewPSExecutor (_ddfa .Program );};var _adbgc []_dg .PSObject ;for _ ,_eadde :=range xVec {_adbgc =append (_adbgc ,_dg .MakeReal (_eadde ));};_eabc ,_dbbeeb :=_ddfa ._dggce .Execute (_adbgc );if _dbbeeb !=nil {return nil ,_dbbeeb ;};_bccf ,_dbbeeb :=_dg .PSObjectArrayToFloat64Array (_eabc );if _dbbeeb !=nil {return nil ,_dbbeeb ;};return _bccf ,nil ;};

// SetOCProperties sets the optional content properties.
func (_cagdf *PdfWriter )SetOCProperties (ocProperties _bcf .PdfObject )error {_fbcde :=_cagdf ._feagf ;if ocProperties !=nil {_ad .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_fbcde .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cagdf .addObjects (ocProperties );};return nil ;};func (_edbeb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _edbeb ._debbe ==nil &&_edbeb .DescendantFont !=nil {return _edbeb .DescendantFont .FontDescriptor ();};return _edbeb ._debbe ;};func (_afgg *Image )resampleLowBits (_cbeb []uint32 ){_gged :=_ceb .BytesPerLine (int (_afgg .Width ),int (_afgg .BitsPerComponent ),_afgg .ColorComponents );_gebcb :=make ([]byte ,_afgg .ColorComponents *_gged *int (_afgg .Height ));_eaadd :=int (_afgg .BitsPerComponent )*_afgg .ColorComponents *int (_afgg .Width );_fgaca :=uint8 (8);var (_febd ,_fcbab int ;_dgebe uint32 ;);for _dfbcc :=0;_dfbcc < int (_afgg .Height );_dfbcc ++{_fcbab =_dfbcc *_gged ;for _gcefe :=0;_gcefe < _eaadd ;_gcefe ++{_dgebe =_cbeb [_febd ];_fgaca -=uint8 (_afgg .BitsPerComponent );_gebcb [_fcbab ]|=byte (_dgebe )<<_fgaca ;if _fgaca ==0{_fgaca =8;_fcbab ++;};_febd ++;};};_afgg .Data =_gebcb ;};

// ToPdfObject returns a stream object.
func (_gcgac *XObjectForm )ToPdfObject ()_bcf .PdfObject {_cedeg :=_gcgac ._dcedg ;_afdab :=_cedeg .PdfObjectDictionary ;if _gcgac .Filter !=nil {_afdab =_gcgac .Filter .MakeStreamDict ();_cedeg .PdfObjectDictionary =_afdab ;};_afdab .Set ("\u0054\u0079\u0070\u0065",_bcf .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_afdab .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0046\u006f\u0072\u006d"));_afdab .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gcgac .FormType );_afdab .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gcgac .BBox );_afdab .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gcgac .Matrix );if _gcgac .Resources !=nil {_afdab .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gcgac .Resources .ToPdfObject ());};_afdab .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gcgac .Group );_afdab .SetIfNotNil ("\u0052\u0065\u0066",_gcgac .Ref );_afdab .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gcgac .MetaData );_afdab .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gcgac .PieceInfo );_afdab .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gcgac .LastModified );_afdab .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gcgac .StructParent );_afdab .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gcgac .StructParents );_afdab .SetIfNotNil ("\u004f\u0050\u0049",_gcgac .OPI );_afdab .SetIfNotNil ("\u004f\u0043",_gcgac .OC );_afdab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcgac .Name );_afdab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcf .MakeInteger (int64 (len (_gcgac .Stream ))));_cedeg .Stream =_gcgac .Stream ;return _cedeg ;};

// ToPdfObject implements interface PdfModel.
func (_bff *PdfActionGoToR )ToPdfObject ()_bcf .PdfObject {_bff .PdfAction .ToPdfObject ();_eed :=_bff ._ge ;_feba :=_eed .PdfObject .(*_bcf .PdfObjectDictionary );_feba .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeGoToR )));if _bff .F !=nil {_feba .Set ("\u0046",_bff .F .ToPdfObject ());};_feba .SetIfNotNil ("\u0044",_bff .D );_feba .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bff .NewWindow );return _eed ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dbdcd *PdfShading )GetContext ()PdfModel {return _dbdcd ._accbb };

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_ebea *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// IsTiling specifies if the pattern is a tiling pattern.
func (_fdbff *PdfPattern )IsTiling ()bool {return _fdbff .PatternType ==1};func (_bfcg *pdfFontType0 )bytesToCharcodes (_edgf []byte )([]_dc .CharCode ,bool ){if _bfcg ._dbdg ==nil {return nil ,false ;};_becf ,_edcc :=_bfcg ._dbdg .BytesToCharcodes (_edgf );if !_edcc {return nil ,false ;};_aacb :=make ([]_dc .CharCode ,len (_becf ));for _fgce ,_dcadf :=range _becf {_aacb [_fgce ]=_dc .CharCode (_dcadf );};return _aacb ,true ;};

// SetForms sets the Acroform for a PDF file.
func (_dbfaf *PdfWriter )SetForms (form *PdfAcroForm )error {_dbfaf ._afebgf =form ;return nil };

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_fdgfc =producer };

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bcf .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bcf .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_ceffg ,_ddecg :=encoder .EncodeBytes (img .Data );if _ddecg !=nil {_ad .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ddecg );return nil ,_ddecg ;};_ebgcad :=NewXObjectImage ();_ddgge :=img .Width ;_cbcdb :=img .Height ;_ebgcad .Width =&_ddgge ;_ebgcad .Height =&_cbcdb ;_ddacd :=img .BitsPerComponent ;_ebgcad .BitsPerComponent =&_ddacd ;_ebgcad .Filter =encoder ;_ebgcad .Stream =_ceffg ;if cs ==nil {if img .ColorComponents ==1{_ebgcad .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_ebgcad .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_ebgcad .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_f .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ebgcad .ColorSpace =cs ;};if len (img ._bgdfb )!=0{_cefbf :=NewXObjectImage ();_cefbf .Filter =encoder ;_fdeaf ,_ecccff :=encoder .EncodeBytes (img ._bgdfb );if _ecccff !=nil {_ad .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ecccff );return nil ,_ecccff ;};_cefbf .Stream =_fdeaf ;_cefbf .BitsPerComponent =_ebgcad .BitsPerComponent ;_cefbf .Width =&img .Width ;_cefbf .Height =&img .Height ;_cefbf .ColorSpace =NewPdfColorspaceDeviceGray ();_ebgcad .SMask =_cefbf .ToPdfObject ();}else {_ebgcad .SMask =xobjIn .SMask ;_ebgcad .ImageMask =xobjIn .ImageMask ;if _ebgcad .ColorSpace .GetNumComponents ()==1{_gcde (_ebgcad );};};return _ebgcad ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ddgd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddgd .Alternate ==nil {_ad .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _ddgd .N ==1{_ad .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_dfgd :=NewPdfColorspaceDeviceGray ();return _dfgd .ColorToRGB (color );}else if _ddgd .N ==3{_ad .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _ddgd .N ==4{_ad .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_acga :=NewPdfColorspaceDeviceCMYK ();return _acga .ColorToRGB (color );}else {return nil ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ad .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ddgd );return _ddgd .Alternate .ColorToRGB (color );};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bgbcf *PdfFont )SubsetRegistered ()error {switch _aaag :=_bgbcf ._cefc .(type ){case *pdfFontType0 :_cfdc :=_aaag .subsetRegistered ();if _cfdc !=nil {_ad .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cfdc );return _cfdc ;};if _aaag ._eaed !=nil {if _aaag ._fdfd !=nil {_aaag ._fdfd .ToPdfObject ();};_aaag .ToPdfObject ();};default:_ad .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_aaag );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_edda *PdfAnnotationStamp )ToPdfObject ()_bcf .PdfObject {_edda .PdfAnnotation .ToPdfObject ();_dbaf :=_edda ._fab ;_gddg :=_dbaf .PdfObject .(*_bcf .PdfObjectDictionary );_edda .PdfAnnotationMarkup .appendToPdfDictionary (_gddg );_gddg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0053\u0074\u0061m\u0070"));_gddg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edda .Name );return _dbaf ;};var ImageHandling ImageHandler =DefaultImageHandler {};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bcf .PdfIndirectObject ;SV *_bcf .PdfIndirectObject ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bcf .StreamEncoder ;Intent _bcf .PdfObject ;ImageMask _bcf .PdfObject ;Mask _bcf .PdfObject ;Matte _bcf .PdfObject ;Decode _bcf .PdfObject ;Interpolate _bcf .PdfObject ;Alternatives _bcf .PdfObject ;SMask _bcf .PdfObject ;SMaskInData _bcf .PdfObject ;Name _bcf .PdfObject ;StructParent _bcf .PdfObject ;ID _bcf .PdfObject ;OPI _bcf .PdfObject ;Metadata _bcf .PdfObject ;OC _bcf .PdfObject ;Stream []byte ;_dabeg *_bcf .PdfObjectStream ;};func _dabb (_adfg *_bcf .PdfObjectDictionary )(*PdfShadingType2 ,error ){_geefg :=PdfShadingType2 {};_cccbf :=_adfg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cccbf ==nil {_ad .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_ecagd ,_edacb :=_cccbf .(*_bcf .PdfObjectArray );if !_edacb {_ad .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cccbf );return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _ecagd .Len ()!=4{_ad .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ecagd .Len ());return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_geefg .Coords =_ecagd ;if _cccaf :=_adfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cccaf !=nil {_cccaf =_bcf .TraceToDirectObject (_cccaf );_bgfe ,_fegbb :=_cccaf .(*_bcf .PdfObjectArray );if !_fegbb {_ad .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cccaf );return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_geefg .Domain =_bgfe ;};_cccbf =_adfg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cccbf ==nil {_ad .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_geefg .Function =[]PdfFunction {};if _gfga ,_gcgab :=_cccbf .(*_bcf .PdfObjectArray );_gcgab {for _ ,_bgdaf :=range _gfga .Elements (){_eabb ,_dcba :=_afag (_bgdaf );if _dcba !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcba );return nil ,_dcba ;};_geefg .Function =append (_geefg .Function ,_eabb );};}else {_bdfg ,_aecba :=_afag (_cccbf );if _aecba !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aecba );return nil ,_aecba ;};_geefg .Function =append (_geefg .Function ,_bdfg );};if _efbcg :=_adfg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_efbcg !=nil {_efbcg =_bcf .TraceToDirectObject (_efbcg );_ebfff ,_fgcf :=_efbcg .(*_bcf .PdfObjectArray );if !_fgcf {_ad .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efbcg );return nil ,_bcf .ErrTypeError ;};if _ebfff .Len ()!=2{_ad .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ebfff .Len ());return nil ,ErrInvalidAttribute ;};_geefg .Extend =_ebfff ;};return &_geefg ,nil ;};func _fegc (_adadf _bcf .PdfObject )(map[_dc .CharCode ]float64 ,error ){if _adadf ==nil {return nil ,nil ;};_aceag ,_gaad :=_bcf .GetArray (_adadf );if !_gaad {return nil ,nil ;};_cbdg :=map[_dc .CharCode ]float64 {};_cdegc :=_aceag .Len ();for _dfgde :=0;_dfgde < _cdegc -1;_dfgde ++{_bcfaf :=_bcf .TraceToDirectObject (_aceag .Get (_dfgde ));_abcda ,_afea :=_bcf .GetIntVal (_bcfaf );if !_afea {return nil ,_bc .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dfgde ,_bcfaf );};_dfgde ++;if _dfgde > _cdegc -1{return nil ,_bc .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_aceag );};_addac :=_bcf .TraceToDirectObject (_aceag .Get (_dfgde ));switch _addac .(type ){case *_bcf .PdfObjectArray :_agdfd ,_ :=_bcf .GetArray (_addac );if _acaec ,_afeefg :=_agdfd .ToFloat64Array ();_afeefg ==nil {for _gdbbd :=0;_gdbbd < len (_acaec );_gdbbd ++{_cbdg [_dc .CharCode (_abcda +_gdbbd )]=_acaec [_gdbbd ];};}else {return nil ,_bc .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfgde ,_addac );};case *_bcf .PdfObjectInteger :_eggcg ,_bbffc :=_bcf .GetIntVal (_addac );if !_bbffc {return nil ,_bc .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfgde ,_addac );};_dfgde ++;if _dfgde > _cdegc -1{return nil ,_bc .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_aceag );};_bdgb :=_aceag .Get (_dfgde );_gfag ,_gebec :=_bcf .GetNumberAsFloat (_bdgb );if _gebec !=nil {return nil ,_bc .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfgde ,_bdgb );};for _cedc :=_abcda ;_cedc <=_eggcg ;_cedc ++{_cbdg [_dc .CharCode (_cedc )]=_gfag ;};default:return nil ,_bc .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfgde ,_addac );};};return _cbdg ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bcf .PdfObjectInteger ;TilingType *_bcf .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bcf .PdfObjectFloat ;YStep *_bcf .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bcf .PdfObjectArray ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bfaa DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func _dcef (_cefbe *PdfPage ){_fddcd :=_ega .GetLicenseKey ();if _fddcd !=nil &&_fddcd .IsLicensed (){return ;};_ffedc :=_bcf .PdfObjectName ("\u0055\u0046\u0031");if !_cefbe .Resources .HasFontByName (_ffedc ){_cefbe .Resources .SetFontByName (_ffedc ,DefaultFont ().ToPdfObject ());};var _acdaeg []string ;_acdaeg =append (_acdaeg ,"\u0071");_acdaeg =append (_acdaeg ,"\u0042\u0054");_acdaeg =append (_acdaeg ,_bc .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_ffedc .String ()));_acdaeg =append (_acdaeg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_acdaeg =append (_acdaeg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_dbbcbg :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_acdaeg =append (_acdaeg ,_bc .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dbbcbg ));_acdaeg =append (_acdaeg ,"\u0045\u0054");_acdaeg =append (_acdaeg ,"\u0051");_gdad :=_be .Join (_acdaeg ,"\u000a");_cefbe .AddContentStreamByString (_gdad );_cefbe .ToPdfObject ();};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gcgc *PdfAnnotation )GetContext ()PdfModel {if _gcgc ==nil {return nil ;};return _gcgc ._ffb ;};func _ffef (_effe *_bcf .PdfObjectDictionary ,_gcac *fontCommon )(*pdfCIDFontType0 ,error ){if _gcac ._ddcbb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ad .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gcac );return nil ,_bcf .ErrRangeError ;};_gcbc :=_fbcac (_gcac );_ffdb ,_afegd :=_bcf .GetDict (_effe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_afegd {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcac );return nil ,ErrRequiredAttributeMissing ;};_gcbc .CIDSystemInfo =_ffdb ;_gcbc .DW =_effe .Get ("\u0044\u0057");_gcbc .W =_effe .Get ("\u0057");_gcbc .DW2 =_effe .Get ("\u0044\u0057\u0032");_gcbc .W2 =_effe .Get ("\u0057\u0032");_gcbc ._dcaeb =1000.0;if _eccc ,_cfbgfa :=_bcf .GetNumberAsFloat (_gcbc .DW );_cfbgfa ==nil {_gcbc ._dcaeb =_eccc ;};_ecbae ,_bbada :=_fegc (_gcbc .W );if _bbada !=nil {return nil ,_bbada ;};if _ecbae ==nil {_ecbae =map[_dc .CharCode ]float64 {};};_gcbc ._cabd =_ecbae ;return _gcbc ,nil ;};func (_bbca *PdfReader )newPdfAnnotationInkFromDict (_bgbb *_bcf .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ccad :=PdfAnnotationInk {};_afaa ,_bgac :=_bbca .newPdfAnnotationMarkupFromDict (_bgbb );if _bgac !=nil {return nil ,_bgac ;};_ccad .PdfAnnotationMarkup =_afaa ;_ccad .InkList =_bgbb .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ccad .BS =_bgbb .Get ("\u0042\u0053");return &_ccad ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bcf .PdfObjectArray ;Matrix *_bcf .PdfObjectArray ;Function []PdfFunction ;};func (_ccagc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _ccagc ._debbe };

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bcf .PdfObject )(_bcf .PdfObjectName ,error ){var _aceg *_bcf .PdfObjectName ;var _daec *_bcf .PdfObjectArray ;if _agga ,_gfdad :=obj .(*_bcf .PdfIndirectObject );_gfdad {if _ggcb ,_ebacg :=_agga .PdfObject .(*_bcf .PdfObjectArray );_ebacg {_daec =_ggcb ;}else if _cccf ,_ecfd :=_agga .PdfObject .(*_bcf .PdfObjectName );_ecfd {_aceg =_cccf ;};}else if _gdce ,_dabd :=obj .(*_bcf .PdfObjectArray );_dabd {_daec =_gdce ;}else if _ddcb ,_bgbc :=obj .(*_bcf .PdfObjectName );_bgbc {_aceg =_ddcb ;};if _aceg !=nil {switch *_aceg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_aceg ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_aceg ,nil ;};};if _daec !=nil &&_daec .Len ()> 0{if _daac ,_ggcdd :=_daec .Get (0).(*_bcf .PdfObjectName );_ggcdd {switch *_daac {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _daec .Len ()==1{return *_daac ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_daac ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_daac ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_daac ,nil ;};};};return "",nil ;};func (_dggc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gdgcbf *_bcf .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bcf .PdfObjectName ;Filter *_bcf .PdfObjectName ;SubFilter *_bcf .PdfObjectName ;Contents *_bcf .PdfObjectString ;Cert _bcf .PdfObject ;ByteRange *_bcf .PdfObjectArray ;Reference *_bcf .PdfObjectArray ;Changes *_bcf .PdfObjectArray ;Name *_bcf .PdfObjectString ;M *_bcf .PdfObjectString ;Location *_bcf .PdfObjectString ;Reason *_bcf .PdfObjectString ;ContactInfo *_bcf .PdfObjectString ;R *_bcf .PdfObjectInteger ;V *_bcf .PdfObjectInteger ;PropBuild *_bcf .PdfObjectDictionary ;PropAuthTime *_bcf .PdfObjectInteger ;PropAuthType *_bcf .PdfObjectName ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_fcaaa :=&PdfSignature {Type :_bcf .MakeName ("\u0053\u0069\u0067"),Handler :handler };_dgbgg :=&pdfSignDictionary {PdfObjectDictionary :_bcf .MakeDict (),_cefgc :&handler ,_cadbb :_fcaaa };_fcaaa ._gdgcbf =_bcf .MakeIndirectObject (_dgbgg );return _fcaaa ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fccec *PdfWriter )SetPageLabels (pageLabels _bcf .PdfObject )error {if pageLabels ==nil {return nil ;};_ad .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_fccec ._feagf .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fccec .addObjects (pageLabels );};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_gaeb *PdfReader )newPdfAnnotationFreeTextFromDict (_fac *_bcf .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_aebg :=PdfAnnotationFreeText {};_gdgg ,_eafb :=_gaeb .newPdfAnnotationMarkupFromDict (_fac );if _eafb !=nil {return nil ,_eafb ;};_aebg .PdfAnnotationMarkup =_gdgg ;_aebg .DA =_fac .Get ("\u0044\u0041");_aebg .Q =_fac .Get ("\u0051");_aebg .RC =_fac .Get ("\u0052\u0043");_aebg .DS =_fac .Get ("\u0044\u0053");_aebg .CL =_fac .Get ("\u0043\u004c");_aebg .IT =_fac .Get ("\u0049\u0054");_aebg .BE =_fac .Get ("\u0042\u0045");_aebg .RD =_fac .Get ("\u0052\u0044");_aebg .BS =_fac .Get ("\u0042\u0053");_aebg .LE =_fac .Get ("\u004c\u0045");return &_aebg ,nil ;};

// AddImageResource adds an image to the XObject resources.
func (_bcgef *PdfPage )AddImageResource (name _bcf .PdfObjectName ,ximg *XObjectImage )error {var _baea *_bcf .PdfObjectDictionary ;if _bcgef .Resources .XObject ==nil {_baea =_bcf .MakeDict ();_bcgef .Resources .XObject =_baea ;}else {var _affgc bool ;_baea ,_affgc =(_bcgef .Resources .XObject ).(*_bcf .PdfObjectDictionary );if !_affgc {return _f .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_baea .Set (name ,ximg .ToPdfObject ());return nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cag :=NewPdfAnnotation ();_gda :=&PdfAnnotationSquare {};_gda .PdfAnnotation =_cag ;_gda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cag .SetContext (_gda );return _gda ;};func _bfefb (_agae _bcf .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_efbg :=NewPdfColorspaceSpecialIndexed ();if _fcagg ,_ddbe :=_agae .(*_bcf .PdfIndirectObject );_ddbe {_efbg ._dbcda =_fcagg ;};_agae =_bcf .TraceToDirectObject (_agae );_edaa ,_caag :=_agae .(*_bcf .PdfObjectArray );if !_caag {return nil ,_bc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _edaa .Len ()!=4{return nil ,_bc .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_agae =_edaa .Get (0);_ccecc ,_caag :=_agae .(*_bcf .PdfObjectName );if !_caag {return nil ,_bc .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_ccecc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_bc .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_agae =_edaa .Get (1);_fbcb ,_gagd :=DetermineColorspaceNameFromPdfObject (_agae );if _fbcb =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_fbcb =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ad .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_fbcb );return nil ,_eacc ;};_bgaf ,_gagd :=NewPdfColorspaceFromPdfObject (_agae );if _gagd !=nil {return nil ,_gagd ;};_efbg .Base =_bgaf ;_agae =_edaa .Get (2);_adbg ,_gagd :=_bcf .GetNumberAsInt64 (_agae );if _gagd !=nil {return nil ,_gagd ;};if _adbg > 255{return nil ,_bc .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_efbg .HiVal =int (_adbg );_agae =_edaa .Get (3);_efbg .Lookup =_agae ;_agae =_bcf .TraceToDirectObject (_agae );var _ebacc []byte ;if _ccfd ,_eadc :=_agae .(*_bcf .PdfObjectString );_eadc {_ebacc =_ccfd .Bytes ();_ad .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ebacc );}else if _fggd ,_fega :=_agae .(*_bcf .PdfObjectStream );_fega {_ad .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_agae .String ());_ad .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_fggd .Stream ),_fggd .Stream );_bbee ,_abag :=_bcf .DecodeStream (_fggd );if _abag !=nil {return nil ,_abag ;};_ad .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_bbee ),_bbee );_ebacc =_bbee ;}else {_ad .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_agae );return nil ,_bc .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ebacc )< _efbg .Base .GetNumComponents ()*(_efbg .HiVal +1){_ad .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_ad .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ebacc ),_efbg .Base .GetNumComponents (),_efbg .HiVal );}else {_ebacc =_ebacc [:_efbg .Base .GetNumComponents ()*(_efbg .HiVal +1)];};_efbg ._cegc =_ebacc ;return _efbg ,nil ;};func (_gbce fontCommon )fontFlags ()int {if _gbce ._debbe ==nil {return 0;};return _gbce ._debbe ._gfdbc ;};

// ToPdfObject implements interface PdfModel.
func (_dfee *PdfAnnotationRichMedia )ToPdfObject ()_bcf .PdfObject {_dfee .PdfAnnotation .ToPdfObject ();_dfcd :=_dfee ._fab ;_deg :=_dfcd .PdfObject .(*_bcf .PdfObjectDictionary );_deg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcf .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_deg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_dfee .RichMediaSettings );_deg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_dfee .RichMediaContent );return _dfcd ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_adff *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gddfd :=_bd .NewReader (img .getBase ());_eff :=_ceb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_afegf :=_bd .NewWriter (_eff );_ceef :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_cbfc :=make ([]uint32 ,3);var (_cbbg error ;_ggfab ,_beddf ,_fgac ,_edgcc ,_dcffe ,_ddae float64 ;);for {_cbbg =_gddfd .ReadSamples (_cbfc );if _cbbg ==_eg .EOF {break ;}else if _cbbg !=nil {return img ,_cbbg ;};_ggfab =float64 (_cbfc [0])/_ceef ;_beddf =float64 (_cbfc [1])/_ceef ;_fgac =float64 (_cbfc [2])/_ceef ;_edgcc =_adff .Matrix [0]*_db .Pow (_ggfab ,_adff .Gamma [0])+_adff .Matrix [3]*_db .Pow (_beddf ,_adff .Gamma [1])+_adff .Matrix [6]*_db .Pow (_fgac ,_adff .Gamma [2]);_dcffe =_adff .Matrix [1]*_db .Pow (_ggfab ,_adff .Gamma [0])+_adff .Matrix [4]*_db .Pow (_beddf ,_adff .Gamma [1])+_adff .Matrix [7]*_db .Pow (_fgac ,_adff .Gamma [2]);_ddae =_adff .Matrix [2]*_db .Pow (_ggfab ,_adff .Gamma [0])+_adff .Matrix [5]*_db .Pow (_beddf ,_adff .Gamma [1])+_adff .Matrix [8]*_db .Pow (_fgac ,_adff .Gamma [2]);_ggfab =3.240479*_edgcc +-1.537150*_dcffe +-0.498535*_ddae ;_beddf =-0.969256*_edgcc +1.875992*_dcffe +0.041556*_ddae ;_fgac =0.055648*_edgcc +-0.204043*_dcffe +1.057311*_ddae ;_ggfab =_db .Min (_db .Max (_ggfab ,0),1.0);_beddf =_db .Min (_db .Max (_beddf ,0),1.0);_fgac =_db .Min (_db .Max (_fgac ,0),1.0);_cbfc [0]=uint32 (_ggfab *_ceef );_cbfc [1]=uint32 (_beddf *_ceef );_cbfc [2]=uint32 (_fgac *_ceef );if _cbbg =_afegf .WriteSamples (_cbfc );_cbbg !=nil {return img ,_cbbg ;};};return _edfe (&_eff ),nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_dbfd *pdfFontSimple )SetEncoder (encoder _dc .TextEncoder ){_dbfd ._gcdgc =encoder };type pdfFontType0 struct{fontCommon ;_eaed *_bcf .PdfIndirectObject ;_fdfd _dc .TextEncoder ;Encoding _bcf .PdfObject ;DescendantFont *PdfFont ;_dbdg *_df .CMap ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_gbeb *PdfReader )newPdfAnnotationCircleFromDict (_efgb *_bcf .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_caf :=PdfAnnotationCircle {};_fcdf ,_cbbc :=_gbeb .newPdfAnnotationMarkupFromDict (_efgb );if _cbbc !=nil {return nil ,_cbbc ;};_caf .PdfAnnotationMarkup =_fcdf ;_caf .BS =_efgb .Get ("\u0042\u0053");_caf .IC =_efgb .Get ("\u0049\u0043");_caf .BE =_efgb .Get ("\u0042\u0045");_caf .RD =_efgb .Get ("\u0052\u0044");return &_caf ,nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_edgfd *PdfReader )GetTrailer ()(*_bcf .PdfObjectDictionary ,error ){_ffcc :=_edgfd ._eagdg .GetTrailer ();if _ffcc ==nil {return nil ,_f .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ffcc ,nil ;};

// R returns the value of the red component of the color.
func (_ggeg *PdfColorDeviceRGB )R ()float64 {return float64 (_ggeg [0])};

// Height returns the height of `rect`.
func (_gedbc *PdfRectangle )Height ()float64 {return _db .Abs (_gedbc .Ury -_gedbc .Lly )};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bcf .PdfObject ;V _bcf .PdfObject ;};

// AllFields returns a flattened list of all fields in the form.
func (_ffaea *PdfAcroForm )AllFields ()[]*PdfField {if _ffaea ==nil {return nil ;};var _bcdgc []*PdfField ;if _ffaea .Fields !=nil {for _ ,_ddgdc :=range *_ffaea .Fields {_bcdgc =append (_bcdgc ,_ddce (_ddgdc )...);};};return _bcdgc ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_dab :=NewPdfAction ();_bad :=&PdfActionGoTo {};_bad .PdfAction =_dab ;_dab .SetContext (_bad );return _bad ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dfbc FieldFlag )Mask ()uint32 {return uint32 (_dfbc )};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_eeeab *PdfPageResources )HasExtGState (keyName _bcf .PdfObjectName )bool {_ ,_cfbbc :=_eeeab .GetFontByName (keyName );return _cfbbc ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bcf .PdfObject ;IC _bcf .PdfObject ;BE _bcf .PdfObject ;RD _bcf .PdfObject ;};func (_bfgfg *PdfShading )getShadingDict ()(*_bcf .PdfObjectDictionary ,error ){_agace :=_bfgfg ._aeddc ;if _fccaf ,_beccb :=_agace .(*_bcf .PdfIndirectObject );_beccb {_cabf ,_fdabb :=_fccaf .PdfObject .(*_bcf .PdfObjectDictionary );if !_fdabb {return nil ,_bcf .ErrTypeError ;};return _cabf ,nil ;}else if _bcfab ,_ebbdc :=_agace .(*_bcf .PdfObjectStream );_ebbdc {return _bcfab .PdfObjectDictionary ,nil ;}else if _ccdge ,_dgfd :=_agace .(*_bcf .PdfObjectDictionary );_dgfd {return _ccdge ,nil ;}else {_ad .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bcf .ErrTypeError ;};};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_gdga *PdfField )ToPdfObject ()_bcf .PdfObject {_bcgc :=_gdga ._egegf ;_gfee :=_bcgc .PdfObject .(*_bcf .PdfObjectDictionary );_cgeb :=_bcf .MakeArray ();for _ ,_fcfa :=range _gdga .Kids {_cgeb .Append (_fcfa .ToPdfObject ());};for _ ,_aagc :=range _gdga .Annotations {if _aagc ._fab !=_gdga ._egegf {_cgeb .Append (_aagc .GetContext ().ToPdfObject ());};};if _gdga .Parent !=nil {_gfee .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdga .Parent .GetContainingPdfObject ());};if _cgeb .Len ()> 0{_gfee .Set ("\u004b\u0069\u0064\u0073",_cgeb );};_gfee .SetIfNotNil ("\u0046\u0054",_gdga .FT );_gfee .SetIfNotNil ("\u0054",_gdga .T );_gfee .SetIfNotNil ("\u0054\u0055",_gdga .TU );_gfee .SetIfNotNil ("\u0054\u004d",_gdga .TM );_gfee .SetIfNotNil ("\u0046\u0066",_gdga .Ff );_gfee .SetIfNotNil ("\u0056",_gdga .V );_gfee .SetIfNotNil ("\u0044\u0056",_gdga .DV );_gfee .SetIfNotNil ("\u0041\u0041",_gdga .AA );return _bcgc ;};

// Encoder returns the font's text encoder.
func (_aaee pdfFontType0 )Encoder ()_dc .TextEncoder {return _aaee ._fdfd };

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bbgb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dcebed ,_afeg :=color .(*PdfColorCalRGB );if !_afeg {_ad .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdab :=_dcebed .A ();_gfdc :=_dcebed .B ();_afeef :=_dcebed .C ();X :=_bbgb .Matrix [0]*_db .Pow (_fdab ,_bbgb .Gamma [0])+_bbgb .Matrix [3]*_db .Pow (_gfdc ,_bbgb .Gamma [1])+_bbgb .Matrix [6]*_db .Pow (_afeef ,_bbgb .Gamma [2]);Y :=_bbgb .Matrix [1]*_db .Pow (_fdab ,_bbgb .Gamma [0])+_bbgb .Matrix [4]*_db .Pow (_gfdc ,_bbgb .Gamma [1])+_bbgb .Matrix [7]*_db .Pow (_afeef ,_bbgb .Gamma [2]);Z :=_bbgb .Matrix [2]*_db .Pow (_fdab ,_bbgb .Gamma [0])+_bbgb .Matrix [5]*_db .Pow (_gfdc ,_bbgb .Gamma [1])+_bbgb .Matrix [8]*_db .Pow (_afeef ,_bbgb .Gamma [2]);_bccb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_egde :=-0.969256*X +1.875992*Y +0.041556*Z ;_bbdc :=0.055648*X +-0.204043*Y +1.057311*Z ;_bccb =_db .Min (_db .Max (_bccb ,0),1.0);_egde =_db .Min (_db .Max (_egde ,0),1.0);_bbdc =_db .Min (_db .Max (_bbdc ,0),1.0);return NewPdfColorDeviceRGB (_bccb ,_egde ,_bbdc ),nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// IsShading specifies if the pattern is a shading pattern.
func (_debc *PdfPattern )IsShading ()bool {return _debc .PatternType ==2};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func (_ggga *PdfAnnotationMarkup )appendToPdfDictionary (_gcfd *_bcf .PdfObjectDictionary ){_gcfd .SetIfNotNil ("\u0054",_ggga .T );if _ggga .Popup !=nil {_gcfd .Set ("\u0050\u006f\u0070u\u0070",_ggga .Popup .ToPdfObject ());};_gcfd .SetIfNotNil ("\u0043\u0041",_ggga .CA );_gcfd .SetIfNotNil ("\u0052\u0043",_ggga .RC );_gcfd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ggga .CreationDate );_gcfd .SetIfNotNil ("\u0049\u0052\u0054",_ggga .IRT );_gcfd .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ggga .Subj );_gcfd .SetIfNotNil ("\u0052\u0054",_ggga .RT );_gcfd .SetIfNotNil ("\u0049\u0054",_ggga .IT );_gcfd .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ggga .ExData );};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_gcef *PdfColorspaceDeviceN )GetNumComponents ()int {return _gcef .ColorantNames .Len ()};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ae .Permissions ;Algorithm EncryptionAlgorithm ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_egbg *PdfColorspaceLab )DecodeArray ()[]float64 {_ecdgc :=[]float64 {0,100};if _egbg .Range !=nil &&len (_egbg .Range )==4{_ecdgc =append (_ecdgc ,_egbg .Range ...);}else {_ecdgc =append (_ecdgc ,-100,100,-100,100);};return _ecdgc ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dac *PdfColorspaceCalRGB )ToPdfObject ()_bcf .PdfObject {_dacc :=&_bcf .PdfObjectArray {};_dacc .Append (_bcf .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ceeaa :=_bcf .MakeDict ();if _dac .WhitePoint !=nil {_bdda :=_bcf .MakeArray (_bcf .MakeFloat (_dac .WhitePoint [0]),_bcf .MakeFloat (_dac .WhitePoint [1]),_bcf .MakeFloat (_dac .WhitePoint [2]));_ceeaa .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bdda );}else {_ad .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dac .BlackPoint !=nil {_bfad :=_bcf .MakeArray (_bcf .MakeFloat (_dac .BlackPoint [0]),_bcf .MakeFloat (_dac .BlackPoint [1]),_bcf .MakeFloat (_dac .BlackPoint [2]));_ceeaa .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bfad );};if _dac .Gamma !=nil {_gcbgg :=_bcf .MakeArray (_bcf .MakeFloat (_dac .Gamma [0]),_bcf .MakeFloat (_dac .Gamma [1]),_bcf .MakeFloat (_dac .Gamma [2]));_ceeaa .Set ("\u0047\u0061\u006dm\u0061",_gcbgg );};if _dac .Matrix !=nil {_ddfce :=_bcf .MakeArray (_bcf .MakeFloat (_dac .Matrix [0]),_bcf .MakeFloat (_dac .Matrix [1]),_bcf .MakeFloat (_dac .Matrix [2]),_bcf .MakeFloat (_dac .Matrix [3]),_bcf .MakeFloat (_dac .Matrix [4]),_bcf .MakeFloat (_dac .Matrix [5]),_bcf .MakeFloat (_dac .Matrix [6]),_bcf .MakeFloat (_dac .Matrix [7]),_bcf .MakeFloat (_dac .Matrix [8]));_ceeaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ddfce );};_dacc .Append (_ceeaa );if _dac ._bccdd !=nil {_dac ._bccdd .PdfObject =_dacc ;return _dac ._bccdd ;};return _dacc ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bcf .PdfObject ;IsMap _bcf .PdfObject ;};func _aabge (_abcgf string )map[string ]string {_gfaca :=_acegg .Split (_abcgf ,-1);_gcdd :=map[string ]string {};for _ ,_gccbe :=range _gfaca {_cfdbe :=_baec .FindStringSubmatch (_gccbe );if _cfdbe ==nil {continue ;};_bcfe ,_ecda :=_cfdbe [1],_cfdbe [2];_gcdd [_bcfe ]=_ecda ;};return _gcdd ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_cgggg *pdfFontSimple )ToPdfObject ()_bcf .PdfObject {if _cgggg ._bebbf ==nil {_cgggg ._bebbf =&_bcf .PdfIndirectObject {};};_adcg :=_cgggg .baseFields ().asPdfObjectDictionary ("");_cgggg ._bebbf .PdfObject =_adcg ;if _cgggg .FirstChar !=nil {_adcg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cgggg .FirstChar );};if _cgggg .LastChar !=nil {_adcg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cgggg .LastChar );};if _cgggg .Widths !=nil {_adcg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cgggg .Widths );};if _cgggg .Encoding !=nil {_adcg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgggg .Encoding );}else if _cgggg ._gcdgc !=nil {_accb :=_cgggg ._gcdgc .ToPdfObject ();if _accb !=nil {_adcg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_accb );};};return _cgggg ._bebbf ;};func _bacdd ()_ba .Time {return _dbbcb };

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bcf .PdfObject ;T _bcf .PdfObject ;Operation _bcf .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecaa *PdfShadingType1 )ToPdfObject ()_bcf .PdfObject {_ecaa .PdfShading .ToPdfObject ();_cegb ,_dbgcb :=_ecaa .getShadingDict ();if _dbgcb !=nil {_ad .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ecaa .Domain !=nil {_cegb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ecaa .Domain );};if _ecaa .Matrix !=nil {_cegb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ecaa .Matrix );};if _ecaa .Function !=nil {if len (_ecaa .Function )==1{_cegb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecaa .Function [0].ToPdfObject ());}else {_egfae :=_bcf .MakeArray ();for _ ,_dgcbc :=range _ecaa .Function {_egfae .Append (_dgcbc .ToPdfObject ());};_cegb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egfae );};};return _ecaa ._aeddc ;};

// ToPdfObject implements interface PdfModel.
func (_bgdf *PdfActionImportData )ToPdfObject ()_bcf .PdfObject {_bgdf .PdfAction .ToPdfObject ();_gee :=_bgdf ._ge ;_bfff :=_gee .PdfObject .(*_bcf .PdfObjectDictionary );_bfff .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeImportData )));if _bgdf .F !=nil {_bfff .Set ("\u0046",_bgdf .F .ToPdfObject ());};return _gee ;};const (_fdabe =0x00001;_fcfbd =0x00002;_dcdda =0x00004;_cffde =0x00008;_bffg =0x00020;_gdfc =0x00040;_ccfa =0x10000;_eefg =0x20000;_fecda =0x40000;);

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bcf .PdfObject ;NewWindow _bcf .PdfObject ;T _bcf .PdfObject ;};func (_edba *PdfWriter )copyObject (_ffdag _bcf .PdfObject ,_ggcdb map[_bcf .PdfObject ]_bcf .PdfObject ,_eabe map[_bcf .PdfObject ]struct{},_cgbc bool )_bcf .PdfObject {_geeea :=!_edba ._aegee &&_eabe !=nil ;if _ddeea ,_eeccb :=_ggcdb [_ffdag ];_eeccb {if _geeea &&!_cgbc {delete (_eabe ,_ffdag );};return _ddeea ;};_dgbffg :=_ffdag ;switch _eegaae :=_ffdag .(type ){case *_bcf .PdfObjectArray :_ffad :=_bcf .MakeArray ();_dgbffg =_ffad ;_ggcdb [_ffdag ]=_dgbffg ;for _ ,_ddeege :=range _eegaae .Elements (){_ffad .Append (_edba .copyObject (_ddeege ,_ggcdb ,_eabe ,_cgbc ));};case *_bcf .PdfObjectStreams :_ddaddc :=&_bcf .PdfObjectStreams {PdfObjectReference :_eegaae .PdfObjectReference };_dgbffg =_ddaddc ;_ggcdb [_ffdag ]=_dgbffg ;for _ ,_bddc :=range _eegaae .Elements (){_ddaddc .Append (_edba .copyObject (_bddc ,_ggcdb ,_eabe ,_cgbc ));};case *_bcf .PdfObjectStream :_cggdb :=&_bcf .PdfObjectStream {Stream :_eegaae .Stream ,PdfObjectReference :_eegaae .PdfObjectReference };_dgbffg =_cggdb ;_ggcdb [_ffdag ]=_dgbffg ;_cggdb .PdfObjectDictionary =_edba .copyObject (_eegaae .PdfObjectDictionary ,_ggcdb ,_eabe ,_cgbc ).(*_bcf .PdfObjectDictionary );case *_bcf .PdfObjectDictionary :var _bafgf bool ;if _geeea &&!_cgbc {if _fgacg ,_ :=_bcf .GetNameVal (_eegaae .Get ("\u0054\u0079\u0070\u0065"));_fgacg =="\u0050\u0061\u0067\u0065"{_ ,_acbfe :=_edba ._eedeb [_eegaae ];_cgbc =!_acbfe ;_bafgf =_cgbc ;};};_aagaca :=_bcf .MakeDict ();_dgbffg =_aagaca ;_ggcdb [_ffdag ]=_dgbffg ;for _ ,_fbdcc :=range _eegaae .Keys (){_aagaca .Set (_fbdcc ,_edba .copyObject (_eegaae .Get (_fbdcc ),_ggcdb ,_eabe ,_cgbc ));};if _bafgf {_dgbffg =_bcf .MakeNull ();_cgbc =false ;};case *_bcf .PdfIndirectObject :_cfcg :=&_bcf .PdfIndirectObject {PdfObjectReference :_eegaae .PdfObjectReference };_dgbffg =_cfcg ;_ggcdb [_ffdag ]=_dgbffg ;_cfcg .PdfObject =_edba .copyObject (_eegaae .PdfObject ,_ggcdb ,_eabe ,_cgbc );case *_bcf .PdfObjectString :_dbgdc :=*_eegaae ;_dgbffg =&_dbgdc ;_ggcdb [_ffdag ]=_dgbffg ;case *_bcf .PdfObjectName :_aabe :=_bcf .PdfObjectName (*_eegaae );_dgbffg =&_aabe ;_ggcdb [_ffdag ]=_dgbffg ;case *_bcf .PdfObjectNull :_dgbffg =_bcf .MakeNull ();_ggcdb [_ffdag ]=_dgbffg ;case *_bcf .PdfObjectInteger :_ffed :=_bcf .PdfObjectInteger (*_eegaae );_dgbffg =&_ffed ;_ggcdb [_ffdag ]=_dgbffg ;case *_bcf .PdfObjectReference :_faece :=_bcf .PdfObjectReference (*_eegaae );_dgbffg =&_faece ;_ggcdb [_ffdag ]=_dgbffg ;case *_bcf .PdfObjectFloat :_cgefa :=_bcf .PdfObjectFloat (*_eegaae );_dgbffg =&_cgefa ;_ggcdb [_ffdag ]=_dgbffg ;case *_bcf .PdfObjectBool :_aeda :=_bcf .PdfObjectBool (*_eegaae );_dgbffg =&_aeda ;_ggcdb [_ffdag ]=_dgbffg ;case *pdfSignDictionary :_fgbege :=&pdfSignDictionary {PdfObjectDictionary :_bcf .MakeDict (),_cefgc :_eegaae ._cefgc ,_cadbb :_eegaae ._cadbb };_dgbffg =_fgbege ;_ggcdb [_ffdag ]=_dgbffg ;for _ ,_gdffg :=range _eegaae .Keys (){_fgbege .Set (_gdffg ,_edba .copyObject (_eegaae .Get (_gdffg ),_ggcdb ,_eabe ,_cgbc ));};default:_ad .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ffdag );};if _geeea &&_cgbc {_eabe [_ffdag ]=struct{}{};};return _dgbffg ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bcf .PdfObject ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bcf .PdfObjectName ;};func _gggbd (_geee *_bcf .PdfObjectDictionary ,_aeaeb *fontCommon ,_eddfg _dc .TextEncoder )(*pdfFontSimple ,error ){_abge :=_eabg (_aeaeb );_abge ._efgfcd =_eddfg ;if _eddfg ==nil {_aecf :=_geee .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aecf ==nil {_aecf =_bcf .MakeInteger (0);};_abge .FirstChar =_aecf ;_fedad ,_adbec :=_bcf .GetIntVal (_aecf );if !_adbec {_ad .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aecf );return nil ,_bcf .ErrTypeError ;};_baac :=_dc .CharCode (_fedad );_aecf =_geee .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aecf ==nil {_aecf =_bcf .MakeInteger (255);};_abge .LastChar =_aecf ;_fedad ,_adbec =_bcf .GetIntVal (_aecf );if !_adbec {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aecf );return nil ,_bcf .ErrTypeError ;};_dcggd :=_dc .CharCode (_fedad );_abge ._adbbb =make (map[_dc .CharCode ]float64 );_aecf =_geee .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aecf !=nil {_abge .Widths =_aecf ;_bgada ,_bdcc :=_bcf .GetArray (_aecf );if !_bdcc {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aecf );return nil ,_bcf .ErrTypeError ;};_ffggd ,_dffa :=_bgada .ToFloat64Array ();if _dffa !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_dffa ;};if len (_ffggd )!=int (_dcggd -_baac +1){_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dcggd -_baac +1,len (_ffggd ));return nil ,_bcf .ErrRangeError ;};for _efac ,_bdca :=range _ffggd {_abge ._adbbb [_baac +_dc .CharCode (_efac )]=_bdca ;};};};_abge .Encoding =_bcf .TraceToDirectObject (_geee .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _abge ,nil ;};func _geagg (_bdag []byte )[]byte {const _bfefc =52845;const _feaaa =22719;_afcaf :=55665;for _ ,_becfe :=range _bdag [:4]{_afcaf =(int (_becfe )+_afcaf )*_bfefc +_feaaa ;};_bagb :=make ([]byte ,len (_bdag )-4);for _cfef ,_cgdc :=range _bdag [4:]{_bagb [_cfef ]=byte (int (_cgdc )^_afcaf >>8);_afcaf =(int (_cgdc )+_afcaf )*_bfefc +_feaaa ;};return _bagb ;};

// BaseFont returns the font's "BaseFont" field.
func (_deab *PdfFont )BaseFont ()string {return _deab .baseFields ()._agaf };

// ToPdfObject implements interface PdfModel.
func (_acf *PdfActionSubmitForm )ToPdfObject ()_bcf .PdfObject {_acf .PdfAction .ToPdfObject ();_geb :=_acf ._ge ;_agf :=_geb .PdfObject .(*_bcf .PdfObjectDictionary );_agf .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeSubmitForm )));if _acf .F !=nil {_agf .Set ("\u0046",_acf .F .ToPdfObject ());};_agf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_acf .Fields );_agf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_acf .Flags );return _geb ;};func _bceb (_eeeb *_bcf .PdfIndirectObject )(*PdfOutline ,error ){_agebd ,_ddgdb :=_eeeb .PdfObject .(*_bcf .PdfObjectDictionary );if !_ddgdb {return nil ,_bc .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_eeae :=NewPdfOutline ();if _bcaa :=_agebd .Get ("\u0054\u0079\u0070\u0065");_bcaa !=nil {_eagc ,_cada :=_bcaa .(*_bcf .PdfObjectName );if _cada {if *_eagc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ad .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_eagc );};};};if _bbgcd :=_agebd .Get ("\u0043\u006f\u0075n\u0074");_bbgcd !=nil {_cffac ,_ecgg :=_bcf .GetNumberAsInt64 (_bbgcd );if _ecgg !=nil {return nil ,_ecgg ;};_eeae .Count =&_cffac ;};return _eeae ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bdcg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_feaa :=vals [0];_ecgc :=[]float64 {_feaa };_bcbg ,_fcbd :=_bdcg .TintTransform .Evaluate (_ecgc );if _fcbd !=nil {_ad .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_fcbd );_ad .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bdcg .TintTransform );return nil ,_fcbd ;};_ad .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_bcbg ,_bdcg .AlternateSpace );_fdfg ,_fcbd :=_bdcg .AlternateSpace .ColorFromFloats (_bcbg );if _fcbd !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_fcbd );return nil ,_fcbd ;};return _fdfg ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_dfgbf *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ffcfc ,_ ,_eefd :=_dfgbf .GetContentStreamWithEncoder ();return _ffcfc ,_eefd ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bcf .PdfObject ;FS _bcf .PdfObject ;F _bcf .PdfObject ;UF _bcf .PdfObject ;DOS _bcf .PdfObject ;Mac _bcf .PdfObject ;Unix _bcf .PdfObject ;ID _bcf .PdfObject ;V _bcf .PdfObject ;EF _bcf .PdfObject ;RF _bcf .PdfObject ;Desc _bcf .PdfObject ;CI _bcf .PdfObject ;_dedbd _bcf .PdfObject ;};

// AddWatermarkImage adds a watermark to the page.
func (_fcgdf *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_adfea ,_aabff :=_fcgdf .GetMediaBox ();if _aabff !=nil {return _aabff ;};_aeaeba :=_adfea .Urx -_adfea .Llx ;_edfd :=_adfea .Ury -_adfea .Lly ;_gbbg :=float64 (*ximg .Width );_efdcd :=(float64 (_aeaeba )-float64 (_gbbg ))/2;if opt .FitToWidth {_gbbg =_aeaeba ;_efdcd =0;};_aagdc :=_edfd ;_bgdbd :=float64 (0);if opt .PreserveAspectRatio {_aagdc =_gbbg *float64 (*ximg .Height )/float64 (*ximg .Width );_bgdbd =(_edfd -_aagdc )/2;};if _fcgdf .Resources ==nil {_fcgdf .Resources =NewPdfPageResources ();};_ddaeg :=0;_egcgc :=_bcf .PdfObjectName (_bc .Sprintf ("\u0049\u006d\u0077%\u0064",_ddaeg ));for _fcgdf .Resources .HasXObjectByName (_egcgc ){_ddaeg ++;_egcgc =_bcf .PdfObjectName (_bc .Sprintf ("\u0049\u006d\u0077%\u0064",_ddaeg ));};_aabff =_fcgdf .AddImageResource (_egcgc ,ximg );if _aabff !=nil {return _aabff ;};_ddaeg =0;_fgggg :=_bcf .PdfObjectName (_bc .Sprintf ("\u0047\u0053\u0025\u0064",_ddaeg ));for _fcgdf .HasExtGState (_fgggg ){_ddaeg ++;_fgggg =_bcf .PdfObjectName (_bc .Sprintf ("\u0047\u0053\u0025\u0064",_ddaeg ));};_gfcefb :=_bcf .MakeDict ();_gfcefb .Set ("\u0042\u004d",_bcf .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gfcefb .Set ("\u0043\u0041",_bcf .MakeFloat (opt .Alpha ));_gfcefb .Set ("\u0063\u0061",_bcf .MakeFloat (opt .Alpha ));_aabff =_fcgdf .AddExtGState (_fgggg ,_gfcefb );if _aabff !=nil {return _aabff ;};_gbgga :=_bc .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_fgggg ,_gbbg ,_aagdc ,_efdcd ,_bgdbd ,_egcgc );_fcgdf .AddContentStreamByString (_gbgga );return nil ;};func (_ef *PdfReader )newPdfActionNamedFromDict (_adga *_bcf .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_adga .Get ("\u004e")},nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_facgb *PdfPageResources )GenerateXObjectName ()_bcf .PdfObjectName {_feega :=1;for {_acbf :=_bcf .MakeName (_bc .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_feega ));if !_facgb .HasXObjectByName (*_acbf ){return *_acbf ;};_feega ++;};};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bcf .PdfObjectInteger ;BitsPerComponent *_bcf .PdfObjectInteger ;BitsPerFlag *_bcf .PdfObjectInteger ;Decode *_bcf .PdfObjectArray ;Function []PdfFunction ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bcf .PdfObject ;Mac _bcf .PdfObject ;Unix _bcf .PdfObject ;NewWindow _bcf .PdfObject ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_afaege :=NewPdfOutline ();_afaege ._badg =&_afaege ;return _afaege ;};func (_cea *PdfReader )newPdfActionResetFormFromDict (_bbae *_bcf .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_bbae .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bbae .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_dcfc *PdfFont )BytesToCharcodes (data []byte )[]_dc .CharCode {_ad .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _dabff ,_afda :=_dcfc ._cefc .(*pdfFontType0 );_afda &&_dabff ._dbdg !=nil {if _aafb ,_bbba :=_dabff .bytesToCharcodes (data );_bbba {return _aafb ;};};_ffcb :=make ([]_dc .CharCode ,0,len (data )+len (data )%2);if _dcfc .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _afcg :=0;_afcg < len (data );_afcg +=2{_abcgd :=uint16 (data [_afcg ])<<8|uint16 (data [_afcg +1]);_ffcb =append (_ffcb ,_dc .CharCode (_abcgd ));};}else {for _ ,_aecd :=range data {_ffcb =append (_ffcb ,_dc .CharCode (_aecd ));};};return _ffcb ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ddca :=map[rune ]int {};for _ ,_edbf :=range text {_ddca [_edbf ]++;};return _ddca ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcf .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gaca *PdfColorspaceDeviceRGB )ToPdfObject ()_bcf .PdfObject {return _bcf .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetContainingPdfObject implements interface PdfModel.
func (_ffdf *PdfFilespec )GetContainingPdfObject ()_bcf .PdfObject {return _ffdf ._dedbd };func (_dbfbf *PdfReader )newPdfAnnotationMovieFromDict (_cbeg *_bcf .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_fgef :=PdfAnnotationMovie {};_fgef .T =_cbeg .Get ("\u0054");_fgef .Movie =_cbeg .Get ("\u004d\u006f\u0076i\u0065");_fgef .A =_cbeg .Get ("\u0041");return &_fgef ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bcf .StreamEncoder ;FormType _bcf .PdfObject ;BBox _bcf .PdfObject ;Matrix _bcf .PdfObject ;Resources *PdfPageResources ;Group _bcf .PdfObject ;Ref _bcf .PdfObject ;MetaData _bcf .PdfObject ;PieceInfo _bcf .PdfObject ;LastModified _bcf .PdfObject ;StructParent _bcf .PdfObject ;StructParents _bcf .PdfObject ;OPI _bcf .PdfObject ;OC _bcf .PdfObject ;Name _bcf .PdfObject ;

// Stream data.
Stream []byte ;_dcedg *_bcf .PdfObjectStream ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bcf .PdfObject ;Q _bcf .PdfObject ;RC _bcf .PdfObject ;DS _bcf .PdfObject ;CL _bcf .PdfObject ;IT _bcf .PdfObject ;BE _bcf .PdfObject ;RD _bcf .PdfObject ;BS _bcf .PdfObject ;LE _bcf .PdfObject ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_agec =subject };

// HasExtGState checks if ExtGState name is available.
func (_bacad *PdfPage )HasExtGState (name _bcf .PdfObjectName )bool {if _bacad .Resources ==nil {return false ;};if _bacad .Resources .ExtGState ==nil {return false ;};_dedea ,_adbef :=_bcf .TraceToDirectObject (_bacad .Resources .ExtGState ).(*_bcf .PdfObjectDictionary );if !_adbef {_ad .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bcf .TraceToDirectObject (_bacad .Resources .ExtGState ));return false ;};_gdcdc :=_dedea .Get (name );_aefee :=_gdcdc !=nil ;return _aefee ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gacfg pdfCIDFontType0 )GetCharMetrics (code _dc .CharCode )(_cb .CharMetrics ,bool ){_dgdfe :=_gacfg ._dcaeb ;if _dafge ,_bdfe :=_gacfg ._cabd [code ];_bdfe {_dgdfe =_dafge ;};return _cb .CharMetrics {Wx :_dgdfe },true ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ggc :=NewPdfAnnotation ();_dbb :=&PdfAnnotationProjection {};_dbb .PdfAnnotation =_ggc ;_dbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggc .SetContext (_dbb );return _dbb ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bcf .PdfObjectStream )(*XObjectForm ,error ){_acdce :=&XObjectForm {};_acdce ._dcedg =stream ;_gdbeeb :=*(stream .PdfObjectDictionary );_cdcg ,_bgdcg :=_bcf .NewEncoderFromStream (stream );if _bgdcg !=nil {return nil ,_bgdcg ;};_acdce .Filter =_cdcg ;if _cccad :=_gdbeeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cccad !=nil {_adbdb ,_cdfdec :=_cccad .(*_bcf .PdfObjectName );if !_cdfdec {return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_adbdb !="\u0046\u006f\u0072\u006d"{_ad .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _egbgfc :=_gdbeeb .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_egbgfc !=nil {_acdce .FormType =_egbgfc ;};if _fcdgf :=_gdbeeb .Get ("\u0042\u0042\u006f\u0078");_fcdgf !=nil {_acdce .BBox =_fcdgf ;};if _eacg :=_gdbeeb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eacg !=nil {_acdce .Matrix =_eacg ;};if _cgac :=_gdbeeb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cgac !=nil {_cgac =_bcf .TraceToDirectObject (_cgac );_bacfg ,_ccfdf :=_cgac .(*_bcf .PdfObjectDictionary );if !_ccfdf {_ad .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_bcf .ErrTypeError ;};_eedaba ,_gdefa :=NewPdfPageResourcesFromDict (_bacfg );if _gdefa !=nil {_ad .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_gdefa ;};_acdce .Resources =_eedaba ;_ad .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_acdce .Resources );};_acdce .Group =_gdbeeb .Get ("\u0047\u0072\u006fu\u0070");_acdce .Ref =_gdbeeb .Get ("\u0052\u0065\u0066");_acdce .MetaData =_gdbeeb .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_acdce .PieceInfo =_gdbeeb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_acdce .LastModified =_gdbeeb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_acdce .StructParent =_gdbeeb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_acdce .StructParents =_gdbeeb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_acdce .OPI =_gdbeeb .Get ("\u004f\u0050\u0049");_acdce .OC =_gdbeeb .Get ("\u004f\u0043");_acdce .Name =_gdbeeb .Get ("\u004e\u0061\u006d\u0065");_acdce .Stream =stream .Stream ;return _acdce ,nil ;};func _fbcac (_eceaa *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_eceaa }};

// GetOutlineTree returns the outline tree.
func (_ddad *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _ddad ._ddcee };

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bcf .PdfObjectArray ;Domain *_bcf .PdfObjectArray ;Function []PdfFunction ;Extend *_bcf .PdfObjectArray ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _eg .ReadSeeker )(*PdfFont ,error ){_fgagb ,_aefa :=_gc .ReadAll (r );if _aefa !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aefa );return nil ,_aefa ;};_fecce ,_aefa :=_cb .TtfParse (_ce .NewReader (_fgagb ));if _aefa !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_aefa );return nil ,_aefa ;};_becg :=&pdfCIDFontType2 {fontCommon :fontCommon {_ddcbb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bcf .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_deba :=make ([]rune ,0,len (_fecce .Chars ));for _cgdb :=range _fecce .Chars {_deba =append (_deba ,rune (_cgdb ));};_ccc .Slice (_deba ,func (_aadc ,_adgbe int )bool {return _deba [_aadc ]< _deba [_adgbe ]});_gebb :=1000.0/float64 (_fecce .UnitsPerEm );if len (_fecce .Widths )<=0{return nil ,_f .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_gbda :=_gebb *float64 (_fecce .Widths [0]);_gceb :=make (map[rune ]int );for _ ,_egcg :=range _deba {_ceeec :=_fecce .Chars [_egcg ];_dcdfg :=_gebb *float64 (_fecce .Widths [_ceeec ]);_gceb [_egcg ]=int (_dcdfg );};_becg ._bdgf =_gceb ;_becg .DW =_bcf .MakeInteger (int64 (_gbda ));_gcaf :=_dfcc (_deba ,_gceb ,_fecce .Chars );_becg .W =_bcf .MakeIndirectObject (_gcaf );_cced :=_bcf .MakeDict ();_cced .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bcf .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_cced .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bcf .MakeString ("\u0041\u0064\u006fb\u0065"));_cced .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bcf .MakeInteger (0));_becg .CIDSystemInfo =_cced ;_cfea :=&PdfFontDescriptor {FontName :_bcf .MakeName (_fecce .PostScriptName ),Ascent :_bcf .MakeFloat (_gebb *float64 (_fecce .TypoAscender )),Descent :_bcf .MakeFloat (_gebb *float64 (_fecce .TypoDescender )),CapHeight :_bcf .MakeFloat (_gebb *float64 (_fecce .CapHeight )),FontBBox :_bcf .MakeArrayFromFloats ([]float64 {_gebb *float64 (_fecce .Xmin ),_gebb *float64 (_fecce .Ymin ),_gebb *float64 (_fecce .Xmax ),_gebb *float64 (_fecce .Ymax )}),ItalicAngle :_bcf .MakeFloat (float64 (_fecce .ItalicAngle )),MissingWidth :_bcf .MakeFloat (_gebb *float64 (_fecce .Widths [0]))};_gdbea ,_aefa :=_bcf .MakeStream (_fgagb ,_bcf .NewFlateEncoder ());if _aefa !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aefa );return nil ,_aefa ;};_gdbea .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcf .MakeInteger (int64 (len (_fgagb ))));_cfea .FontFile2 =_gdbea ;if _fecce .Bold {_cfea .StemV =_bcf .MakeInteger (120);}else {_cfea .StemV =_bcf .MakeInteger (70);};_gdfg :=_dcdda ;if _fecce .IsFixedPitch {_gdfg |=_fdabe ;};if _fecce .ItalicAngle !=0{_gdfg |=_gdfc ;};_cfea .Flags =_bcf .MakeInteger (int64 (_gdfg ));_becg ._agaf =_fecce .PostScriptName ;_becg ._debbe =_cfea ;_eaegd :=pdfFontType0 {fontCommon :fontCommon {_ddcbb :"\u0054\u0079\u0070e\u0030",_agaf :_fecce .PostScriptName },DescendantFont :&PdfFont {_cefc :_becg },Encoding :_bcf .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_fdfd :_fecce .NewEncoder ()};if len (_fecce .Chars )> 0{_agac :=make (map[_df .CharCode ]rune ,len (_fecce .Chars ));for _geadd ,_ccdcf :=range _fecce .Chars {_cgbdf :=_df .CharCode (_ccdcf );if _ebee ,_adfce :=_agac [_cgbdf ];!_adfce ||(_adfce &&_ebee > _geadd ){_agac [_cgbdf ]=_geadd ;};};_eaegd ._ecba =_df .NewToUnicodeCMap (_agac );};_dadef :=PdfFont {_cefc :&_eaegd };return &_dadef ,nil ;};func (_abgf *PdfReader )traverseObjectData (_ggfb _bcf .PdfObject )error {return _bcf .ResolveReferencesDeep (_ggfb ,_abgf ._edbcb );};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_fbefd *PdfSignature )bool ;Validate (_bfebb *PdfSignature ,_fdee Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_cafgc *PdfSignature )(Hasher ,error );Sign (_ecbbb *PdfSignature ,_dafb Hasher )error ;};

// Encoder returns the font's text encoder.
func (_fecc *PdfFont )Encoder ()_dc .TextEncoder {_fcbc :=_fecc .actualFont ();if _fcbc ==nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_fecc ._cefc );return nil ;};return _fcbc .Encoder ();};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dgac PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bcf .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gggaf []_bcf .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_dgbgf []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bcf .PdfObject ;Open _bcf .PdfObject ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_eeebcb *PdfRectangle )Normalize (){if _eeebcb .Llx > _eeebcb .Urx {_eeebcb .Llx ,_eeebcb .Urx =_eeebcb .Urx ,_eeebcb .Llx ;};if _eeebcb .Lly > _eeebcb .Ury {_eeebcb .Lly ,_eeebcb .Ury =_eeebcb .Ury ,_eeebcb .Lly ;};};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_ggag *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bcf .PdfObject {_fddc :=_bcf .MakeDict ();if _ggag .Subtype !=nil {_fddc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ggag .Subtype );};_fddc .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_ggag .Colorants );_fddc .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_ggag .Process );_fddc .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_ggag .MixingHints );if _ggag ._fbeca !=nil {_ggag ._fbeca .PdfObject =_fddc ;return _ggag ._fbeca ;};return _fddc ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_fbfeg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_aaad *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func _adadc (_cbgab *PdfField ,_cggd _bcf .PdfObject )error {switch _cbgab .GetContext ().(type ){case *PdfFieldText :switch _gadgf :=_cggd .(type ){case *_bcf .PdfObjectName :_dgdba :=_gadgf ;_ad .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_dgdba .String ());_cbgab .V =_bcf .MakeEncodedString (_gadgf .String (),true );case *_bcf .PdfObjectString :_cbgab .V =_bcf .MakeEncodedString (_gadgf .String (),true );default:_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gadgf ,_gadgf );};case *PdfFieldButton :switch _cggd .(type ){case *_bcf .PdfObjectName :if len (_cggd .String ())> 0{_cbgab .V =_cggd ;_fdad (_cbgab ,_cggd );};case *_bcf .PdfObjectString :if len (_cggd .String ())> 0{_cbgab .V =_bcf .MakeName (_cggd .String ());_fdad (_cbgab ,_cbgab .V );};default:_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cbgab .PartialName (),_cggd );_cbgab .V =_cggd ;};case *PdfFieldChoice :switch _cggd .(type ){case *_bcf .PdfObjectName :if len (_cggd .String ())> 0{_cbgab .V =_bcf .MakeString (_cggd .String ());_fdad (_cbgab ,_cggd );};case *_bcf .PdfObjectString :if len (_cggd .String ())> 0{_cbgab .V =_cggd ;_fdad (_cbgab ,_bcf .MakeName (_cggd .String ()));};default:_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cbgab .PartialName (),_cggd );_cbgab .V =_cggd ;};case *PdfFieldSignature :_ad .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cbgab .PartialName (),_cggd );};return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_cbgd *pdfFontType0 )ToPdfObject ()_bcf .PdfObject {if _cbgd ._eaed ==nil {_cbgd ._eaed =&_bcf .PdfIndirectObject {};};_bgdae :=_cbgd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cbgd ._eaed .PdfObject =_bgdae ;if _cbgd .Encoding !=nil {_bgdae .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cbgd .Encoding );}else if _cbgd ._fdfd !=nil {_bgdae .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cbgd ._fdfd .ToPdfObject ());};if _cbgd .DescendantFont !=nil {_bgdae .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bcf .MakeArray (_cbgd .DescendantFont .ToPdfObject ()));};return _cbgd ._eaed ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_gage *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_fde *PdfAnnotationWidget )Field ()*PdfField {return _fde ._efc };

// ToPdfObject returns the PDF representation of the function.
func (_befec *PdfFunctionType3 )ToPdfObject ()_bcf .PdfObject {_abfb :=_bcf .MakeDict ();_abfb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcf .MakeInteger (3));_dagbba :=&_bcf .PdfObjectArray {};for _ ,_ccadc :=range _befec .Domain {_dagbba .Append (_bcf .MakeFloat (_ccadc ));};_abfb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dagbba );if _befec .Range !=nil {_bcad :=&_bcf .PdfObjectArray {};for _ ,_cfab :=range _befec .Range {_bcad .Append (_bcf .MakeFloat (_cfab ));};_abfb .Set ("\u0052\u0061\u006eg\u0065",_bcad );};if _befec .Functions !=nil {_dfece :=&_bcf .PdfObjectArray {};for _ ,_aagac :=range _befec .Functions {_dfece .Append (_aagac .ToPdfObject ());};_abfb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_dfece );};if _befec .Bounds !=nil {_fffdc :=&_bcf .PdfObjectArray {};for _ ,_gdbee :=range _befec .Bounds {_fffdc .Append (_bcf .MakeFloat (_gdbee ));};_abfb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_fffdc );};if _befec .Encode !=nil {_ebeg :=&_bcf .PdfObjectArray {};for _ ,_bffgd :=range _befec .Encode {_ebeg .Append (_bcf .MakeFloat (_bffgd ));};_abfb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ebeg );};if _befec ._eecg !=nil {_befec ._eecg .PdfObject =_abfb ;return _befec ._eecg ;};return _abfb ;};

// B returns the value of the B component of the color.
func (_dddc *PdfColorLab )B ()float64 {return float64 (_dddc [2])};func (_gdbbg *PdfReader )buildPageList (_gefb *_bcf .PdfIndirectObject ,_afed *_bcf .PdfIndirectObject ,_dbgf map[_bcf .PdfObject ]struct{})error {if _gefb ==nil {return nil ;};if _ ,_gbad :=_dbgf [_gefb ];_gbad {_ad .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gefb .ObjectNumber );return nil ;};_dbgf [_gefb ]=struct{}{};_ggdbb ,_eceef :=_gefb .PdfObject .(*_bcf .PdfObjectDictionary );if !_eceef {return _f .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_eefbe ,_eceef :=(*_ggdbb ).Get ("\u0054\u0079\u0070\u0065").(*_bcf .PdfObjectName );if !_eceef {if _ggdbb .Get ("\u004b\u0069\u0064\u0073")==nil {return _f .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ad .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_eefbe =_bcf .MakeName ("\u0050\u0061\u0067e\u0073");_ggdbb .Set ("\u0054\u0079\u0070\u0065",_eefbe );};_ad .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_eefbe ,_gefb );if *_eefbe =="\u0050\u0061\u0067\u0065"{_dbeda ,_agcga :=_gdbbg .newPdfPageFromDict (_ggdbb );if _agcga !=nil {return _agcga ;};_dbeda .setContainer (_gefb );if _afed !=nil {_ggdbb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afed );};_gdbbg ._ffbf =append (_gdbbg ._ffbf ,_gefb );_gdbbg .PageList =append (_gdbbg .PageList ,_dbeda );return nil ;};if *_eefbe !="\u0050\u0061\u0067e\u0073"{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_eefbe );return _f .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _afed !=nil {_ggdbb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afed );};if !_gdbbg ._eddddc {_adceb :=_gdbbg .traverseObjectData (_gefb );if _adceb !=nil {return _adceb ;};};_edcg ,_ffag :=_gdbbg ._eagdg .Resolve (_ggdbb .Get ("\u004b\u0069\u0064\u0073"));if _ffag !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _ffag ;};var _addfc *_bcf .PdfObjectArray ;_addfc ,_eceef =_edcg .(*_bcf .PdfObjectArray );if !_eceef {_fbgae ,_ebfaa :=_edcg .(*_bcf .PdfIndirectObject );if !_ebfaa {return _f .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_addfc ,_eceef =_fbgae .PdfObject .(*_bcf .PdfObjectArray );if !_eceef {return _f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ad .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_addfc );for _cfedc ,_cgfde :=range _addfc .Elements (){_cbcde ,_fgbb :=_bcf .GetIndirect (_cgfde );if !_fgbb {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cbcde );return _f .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_addfc .Set (_cfedc ,_cbcde );_ffag =_gdbbg .buildPageList (_cbcde ,_gefb ,_dbgf );if _ffag !=nil {return _ffag ;};};return nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_acdae *PdfPageResources )GetColorspaceByName (keyName _bcf .PdfObjectName )(PdfColorspace ,bool ){_ddgdcb ,_gdfcf :=_acdae .GetColorspaces ();if _gdfcf !=nil {_ad .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gdfcf );return nil ,false ;};if _ddgdcb ==nil {return nil ,false ;};_fefec ,_bgeb :=_ddgdcb .Colorspaces [string (keyName )];if !_bgeb {return nil ,false ;};return _fefec ,true ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_ebdc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bcf .GetNumberAsFloat (_ebdc .Ascent );};func _edfe (_ggdgg *_ceb .ImageBase )(_fgeef Image ){_fgeef .Width =int64 (_ggdgg .Width );_fgeef .Height =int64 (_ggdgg .Height );_fgeef .BitsPerComponent =int64 (_ggdgg .BitsPerComponent );_fgeef .ColorComponents =_ggdgg .ColorComponents ;_fgeef .Data =_ggdgg .Data ;_fgeef ._afdd =_ggdgg .Decode ;_fgeef ._bgdfb =_ggdgg .Alpha ;return _fgeef ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_egbff ,_cdbgb :=_adebb (basefont );if _cdbgb !=nil {return nil ,_cdbgb ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_egbff ._gcdgc =_dc .NewWinAnsiEncoder ();};return &PdfFont {_cefc :&_egbff },nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_badgc *PdfReader )GetOCProperties ()(_bcf .PdfObject ,error ){_facg :=_badgc ._fbcgg ;_ggbeb :=_facg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ggbeb =_bcf .ResolveReference (_ggbeb );if !_badgc ._eddddc {_efbe :=_badgc .traverseObjectData (_ggbeb );if _efbe !=nil {return nil ,_efbe ;};};return _ggbeb ,nil ;};func (_gce *PdfReader )newPdfAnnotationPolygonFromDict (_adea *_bcf .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_eaba :=PdfAnnotationPolygon {};_ggbfc ,_aee :=_gce .newPdfAnnotationMarkupFromDict (_adea );if _aee !=nil {return nil ,_aee ;};_eaba .PdfAnnotationMarkup =_ggbfc ;_eaba .Vertices =_adea .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_eaba .LE =_adea .Get ("\u004c\u0045");_eaba .BS =_adea .Get ("\u0042\u0053");_eaba .IC =_adea .Get ("\u0049\u0043");_eaba .BE =_adea .Get ("\u0042\u0045");_eaba .IT =_adea .Get ("\u0049\u0054");_eaba .Measure =_adea .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_eaba ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_cgaa *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_bdac ,_ ,_edbbb :=_cgaa .CharcodesToUnicodeWithStats (_cgaa .BytesToCharcodes (data ));_degbb :=_dc .ExpandLigatures (_bdac );return _degbb ,_d .RuneCountInString (_degbb ),_edbbb ;};func (_aaa *PdfReader )newPdfActionRenditionFromDict (_bcg *_bcf .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bcg .Get ("\u0052"),AN :_bcg .Get ("\u0041\u004e"),OP :_bcg .Get ("\u004f\u0050"),JS :_bcg .Get ("\u004a\u0053")},nil ;};func (_fefe *PdfReader )resolveReference (_eedaf *_bcf .PdfObjectReference )(_bcf .PdfObject ,bool ,error ){_gceca ,_cged :=_fefe ._eagdg .ObjCache [int (_eedaf .ObjectNumber )];if !_cged {_ad .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_eedaf );_faaae ,_dacb :=_fefe ._eagdg .LookupByReference (*_eedaf );if _dacb !=nil {return nil ,false ,_dacb ;};_fefe ._eagdg .ObjCache [int (_eedaf .ObjectNumber )]=_faaae ;return _faaae ,false ,nil ;};return _gceca ,true ,nil ;};func _dfcc (_abef []rune ,_gfae map[rune ]int ,_bfcgb map[rune ]_cb .GID )*_bcf .PdfObjectArray {_ebagg :=&_bcf .PdfObjectArray {};for _ebeed :=0;_ebeed < len (_abef );{_eedgeg :=_gfae [_abef [_ebeed ]];_edgge :=_ebeed ;for _gddgb :=_ebeed +1;_gddgb < len (_abef );_gddgb ++{_ddcbd :=_gfae [_abef [_gddgb ]];if _eedgeg ==_ddcbd {_edgge =_gddgb ;}else {break ;};};_bedb :=_bfcgb [_abef [_ebeed ]];_deac :=_bfcgb [_abef [_edgge ]];_ebagg .Append (_bcf .MakeInteger (int64 (_bedb )));_ebagg .Append (_bcf .MakeInteger (int64 (_deac )));_ebagg .Append (_bcf .MakeInteger (int64 (_eedgeg )));_ebeed =_edgge +1;};return _ebagg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fffe *PdfColorspaceSpecialSeparation )ToPdfObject ()_bcf .PdfObject {_cggcf :=_bcf .MakeArray (_bcf .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_cggcf .Append (_fffe .ColorantName );_cggcf .Append (_fffe .AlternateSpace .ToPdfObject ());_cggcf .Append (_fffe .TintTransform .ToPdfObject ());if _fffe ._fbgf !=nil {_fffe ._fbgf .PdfObject =_cggcf ;return _fffe ._fbgf ;};return _cggcf ;};

// String returns a string representation of the field.
func (_deae *PdfField )String ()string {if _ecac ,_egded :=_deae .ToPdfObject ().(*_bcf .PdfIndirectObject );_egded {return _bc .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_deae ._dggcd ,_ecac .PdfObject .String ());};return "";};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_defab :=&XObjectForm {};_fdgad :=&_bcf .PdfObjectStream {};_fdgad .PdfObjectDictionary =_bcf .MakeDict ();_defab ._dcedg =_fdgad ;return _defab ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_bcea :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_bc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_bcea .N =N ;return _bcea ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bcf .PdfObject ;MK _bcf .PdfObject ;A _bcf .PdfObject ;AA _bcf .PdfObject ;BS _bcf .PdfObject ;Parent _bcf .PdfObject ;_efc *PdfField ;_dfafb bool ;};

// ToPdfObject implements interface PdfModel.
func (_ecd *PdfActionLaunch )ToPdfObject ()_bcf .PdfObject {_ecd .PdfAction .ToPdfObject ();_gb :=_ecd ._ge ;_abe :=_gb .PdfObject .(*_bcf .PdfObjectDictionary );_abe .SetIfNotNil ("\u0053",_bcf .MakeName (string (ActionTypeLaunch )));if _ecd .F !=nil {_abe .Set ("\u0046",_ecd .F .ToPdfObject ());};_abe .SetIfNotNil ("\u0057\u0069\u006e",_ecd .Win );_abe .SetIfNotNil ("\u004d\u0061\u0063",_ecd .Mac );_abe .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ecd .Unix );_abe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ecd .NewWindow );return _gb ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_eegbd :=NewPdfAnnotation ();_afe :=&PdfAnnotationSound {};_afe .PdfAnnotation =_eegbd ;_afe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eegbd .SetContext (_afe );return _afe ;};

// SetLocation sets the `Location` field of the signature.
func (_dbcfb *PdfSignature )SetLocation (location string ){_dbcfb .Location =_bcf .MakeString (location )};func _eabg (_cege *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_cege }};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gdd :=NewPdfAction ();_fd :=&PdfActionSound {};_fd .PdfAction =_gdd ;_gdd .SetContext (_fd );return _fd ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bggef *PdfPage )AppendContentStream (contentStr string )error {_gacbfe ,_eabcf :=_bggef .GetContentStreams ();if _eabcf !=nil {return _eabcf ;};if len (_gacbfe )==0{_gacbfe =[]string {contentStr };return _bggef .SetContentStreams (_gacbfe ,_bcf .NewFlateEncoder ());};var _gagea _ce .Buffer ;_gagea .WriteString (_gacbfe [len (_gacbfe )-1]);_gagea .WriteString ("\u000a");_gagea .WriteString (contentStr );_gacbfe [len (_gacbfe )-1]=_gagea .String ();return _bggef .SetContentStreams (_gacbfe ,_bcf .NewFlateEncoder ());};func _eedab (_bafcf *_bcf .PdfObjectDictionary )(*PdfShadingType1 ,error ){_adffb :=PdfShadingType1 {};if _badfa :=_bafcf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_badfa !=nil {_badfa =_bcf .TraceToDirectObject (_badfa );_cagd ,_gacbac :=_badfa .(*_bcf .PdfObjectArray );if !_gacbac {_ad .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_badfa );return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adffb .Domain =_cagd ;};if _bacae :=_bafcf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bacae !=nil {_bacae =_bcf .TraceToDirectObject (_bacae );_gbbge ,_efaec :=_bacae .(*_bcf .PdfObjectArray );if !_efaec {_ad .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bacae );return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adffb .Matrix =_gbbge ;};_affcb :=_bafcf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _affcb ==nil {_ad .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_adffb .Function =[]PdfFunction {};if _fefdg ,_gace :=_affcb .(*_bcf .PdfObjectArray );_gace {for _ ,_ceff :=range _fefdg .Elements (){_agdgee ,_aeebc :=_afag (_ceff );if _aeebc !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aeebc );return nil ,_aeebc ;};_adffb .Function =append (_adffb .Function ,_agdgee );};}else {_eebbg ,_bgbf :=_afag (_affcb );if _bgbf !=nil {_ad .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgbf );return nil ,_bgbf ;};_adffb .Function =append (_adffb .Function ,_eebbg );};return &_adffb ,nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gacga *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbgc ,_bedeb :=color .(*PdfColorPattern );if !_bedeb {_ad .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _cbgc .Color ==nil {return color ,nil ;};if _gacga .UnderlyingCS ==nil {return nil ,_f .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gacga .UnderlyingCS .ColorToRGB (_cbgc .Color );};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dggg *PdfFont )ToUnicode ()string {if _dggg .baseFields ()._ecba ==nil {return "";};return _dggg .baseFields ()._ecba .Name ();};