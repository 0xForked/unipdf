//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_ca "bufio";_ec "bytes";_dg "crypto/md5";_dc "crypto/rand";_a "crypto/sha1";_bd "crypto/x509";_gd "encoding/binary";_ge "encoding/hex";_bdf "errors";_c "fmt";_dgf "github.com/unidoc/pkcs7";_caf "github.com/unidoc/unipdf/v3/common";
_be "github.com/unidoc/unipdf/v3/core";_fa "github.com/unidoc/unipdf/v3/core/security";_dd "github.com/unidoc/unipdf/v3/core/security/crypt";_gde "github.com/unidoc/unipdf/v3/internal/cmap";_fg "github.com/unidoc/unipdf/v3/internal/imageutil";_aa "github.com/unidoc/unipdf/v3/internal/license";
_bc "github.com/unidoc/unipdf/v3/internal/sampling";_ac "github.com/unidoc/unipdf/v3/internal/textencoding";_gf "github.com/unidoc/unipdf/v3/internal/timeutils";_ff "github.com/unidoc/unipdf/v3/internal/transform";_de "github.com/unidoc/unipdf/v3/model/internal/docutil";
_ecg "github.com/unidoc/unipdf/v3/model/internal/fonts";_ag "github.com/unidoc/unipdf/v3/model/mdp";_dde "github.com/unidoc/unipdf/v3/model/sigutil";_dab "github.com/unidoc/unipdf/v3/ps";_fae "github.com/unidoc/unitype";_bfd "golang.org/x/xerrors";_g "hash";
_ced "image";_gc "image/color";_ "image/gif";_ "image/png";_dga "io";_fd "io/ioutil";_eg "math";_f "math/rand";_dag "os";_e "regexp";_da "sort";_bdbc "strconv";_bb "strings";_d "sync";_ba "time";_cg "unicode";_bdb "unicode/utf8";);

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_bcge *Image )ToGoImage ()(_ced .Image ,error ){_caf .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_geeac ,_egea :=_fg .NewImage (int (_bcge .Width ),int (_bcge .Height ),int (_bcge .BitsPerComponent ),_bcge .ColorComponents ,_bcge .Data ,_bcge ._bbbgb ,_bcge ._ffedg );
if _egea !=nil {return nil ,_egea ;};return _geeac ,nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _dga .ReadSeeker )(*PdfReader ,error ){const _gfeb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _eagga (rs ,&ReaderOpts {},false ,_gfeb );};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_eadfe *PdfFieldButton )IsRadio ()bool {return _eadfe .GetType ()==ButtonTypeRadio };func (_efef *PdfAppender )replaceObject (_cgg ,_bca _be .PdfObject ){switch _feged :=_cgg .(type ){case *_be .PdfIndirectObject :_efef ._cagc [_bca ]=_feged .ObjectNumber ;
case *_be .PdfObjectStream :_efef ._cagc [_bca ]=_feged .ObjectNumber ;};};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bcgcd :=PdfWriter {};_bcgcd ._agafe =map[_be .PdfObject ]struct{}{};_bcgcd ._gadag =[]_be .PdfObject {};_bcgcd ._dfcce =map[_be .PdfObject ][]*_be .PdfObjectDictionary {};_bcgcd ._cgcad =map[_be .PdfObject ]struct{}{};_bcgcd ._dagdf .Major =1;
_bcgcd ._dagdf .Minor =3;_dcag :=_be .MakeDict ();_dgec :=[]struct{_ffag _be .PdfObjectName ;_edbb string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_eecag ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cgdd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_dafgb ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_ggcdd ()},{"\u0054\u0069\u0074l\u0065",_bcfdb ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ddfge ()}};
for _ ,_gfbda :=range _dgec {if _gfbda ._edbb !=""{_dcag .Set (_gfbda ._ffag ,_be .MakeString (_gfbda ._edbb ));};};if _aeebe :=_ccabg ();!_aeebe .IsZero (){if _bbbgf ,_adbg :=NewPdfDateFromTime (_aeebe );_adbg ==nil {_dcag .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bbbgf .ToPdfObject ());
};};if _dgce :=_ababe ();!_dgce .IsZero (){if _gffca ,_gggc :=NewPdfDateFromTime (_dgce );_gggc ==nil {_dcag .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gffca .ToPdfObject ());};};_dcaac :=_be .PdfIndirectObject {};_dcaac .PdfObject =_dcag ;_bcgcd ._ceece =&_dcaac ;
_bcgcd .addObject (&_dcaac );_acdg :=_be .PdfIndirectObject {};_cdca :=_be .MakeDict ();_cdca .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_acdg .PdfObject =_cdca ;_bcgcd ._babab =&_acdg ;_bcgcd .addObject (_bcgcd ._babab );
_cdgaa ,_bbgff :=_dfcbc ("\u0077");if _bbgff !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbgff );};_bcgcd ._degfd =_cdgaa ;_baefe :=_be .PdfIndirectObject {};_bbaa :=_be .MakeDict ();_bbaa .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0050\u0061\u0067e\u0073"));
_ecba :=_be .PdfObjectArray {};_bbaa .Set ("\u004b\u0069\u0064\u0073",&_ecba );_bbaa .Set ("\u0043\u006f\u0075n\u0074",_be .MakeInteger (0));_baefe .PdfObject =_bbaa ;_bcgcd ._cdcg =&_baefe ;_bcgcd ._adabee =map[_be .PdfObject ]struct{}{};_bcgcd .addObject (_bcgcd ._cdcg );
_cdca .Set ("\u0050\u0061\u0067e\u0073",&_baefe );_bcgcd ._agced =_cdca ;_caf .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_acdg );return _bcgcd ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_cadgc *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gdceb :=_cadgc .actualFont ();if _gdceb ==nil {_caf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cadgc ._egbcf );
return _ecg .CharMetrics {},false ;};if _gcceb ,_fgge :=_gdceb .GetRuneMetrics (r );_fgge {return _gcceb ,true ;};if _dgfa ,_gggg :=_cadgc .GetFontDescriptor ();_gggg ==nil &&_dgfa !=nil {return _ecg .CharMetrics {Wx :_dgfa ._bccdf },true ;};_caf .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cadgc );
return _ecg .CharMetrics {},false ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bdfe pdfFontType0 )GetRuneMetrics (r rune )(_ecg .CharMetrics ,bool ){if _bdfe .DescendantFont ==nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bdfe );
return _ecg .CharMetrics {},false ;};return _bdfe .DescendantFont .GetRuneMetrics (r );};

// AddOutlineTree adds outlines to a PDF file.
func (_ecgd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_ecgd ._gbagdg =outlineTree };

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_fgca *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _fgca .baseFields ()._gfcg !=nil {return _fgca .baseFields ()._gfcg ;};if _ccee :=_fgca ._egbcf .getFontDescriptor ();_ccee !=nil {return _ccee ;};_caf .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_fgca );
return nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// ToPdfObject implements interface PdfModel.
func (_ece *PdfAnnotationCaret )ToPdfObject ()_be .PdfObject {_ece .PdfAnnotation .ToPdfObject ();_ggfd :=_ece ._dbf ;_efc :=_ggfd .PdfObject .(*_be .PdfObjectDictionary );_ece .PdfAnnotationMarkup .appendToPdfDictionary (_efc );_efc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0043\u0061\u0072e\u0074"));
_efc .SetIfNotNil ("\u0052\u0044",_ece .RD );_efc .SetIfNotNil ("\u0053\u0079",_ece .Sy );return _ggfd ;};type fontCommon struct{_abdd string ;_cfcgc string ;_egbbc string ;_eecbaf _be .PdfObject ;_baag *_gde .CMap ;_gfcg *PdfFontDescriptor ;_cgfb int64 ;
};

// ToPdfObject implements interface PdfModel.
func (_fgcb *PdfAnnotationInk )ToPdfObject ()_be .PdfObject {_fgcb .PdfAnnotation .ToPdfObject ();_fdbd :=_fgcb ._dbf ;_cbee :=_fdbd .PdfObject .(*_be .PdfObjectDictionary );_fgcb .PdfAnnotationMarkup .appendToPdfDictionary (_cbee );_cbee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0049\u006e\u006b"));
_cbee .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fgcb .InkList );_cbee .SetIfNotNil ("\u0042\u0053",_fgcb .BS );return _fdbd ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_cdcc *_be .PdfIndirectObject ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _be .PdfObject ;IC _be .PdfObject ;BE _be .PdfObject ;RD _be .PdfObject ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cgcf *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_cgcf .updateObjectsDeep (dss .ToPdfObject (),nil );};_cgcf ._bcfd =dss ;};func _cddg (_dbffc []byte )[]byte {const _cceg =52845;const _bfdae =22719;_agcaf :=55665;for _ ,_aedd :=range _dbffc [:4]{_agcaf =(int (_aedd )+_agcaf )*_cceg +_bfdae ;
};_gace :=make ([]byte ,len (_dbffc )-4);for _gfdb ,_aadg :=range _dbffc [4:]{_gace [_gfdb ]=byte (int (_aadg )^_agcaf >>8);_agcaf =(int (_aadg )+_agcaf )*_cceg +_bfdae ;};return _gace ;};

// ToPdfObject implements interface PdfModel.
func (_fc *PdfActionGoTo3DView )ToPdfObject ()_be .PdfObject {_fc .PdfAction .ToPdfObject ();_bbg :=_fc ._deb ;_acf :=_bbg .PdfObject .(*_be .PdfObjectDictionary );_acf .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeGoTo3DView )));_acf .SetIfNotNil ("\u0054\u0041",_fc .TA );
_acf .SetIfNotNil ("\u0056",_fc .V );return _bbg ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_dfb :=NewPdfAction ();_gag :=&PdfActionRendition {};_gag .PdfAction =_dfb ;_dfb .SetContext (_gag );return _gag ;};func _dgeb (_cfea *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_fgae ,_ddebf :=_be .GetDict (_cfea .AP );
if !_ddebf {return nil ,nil ,_bdf .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _fgae ==nil {return nil ,nil ,nil ;};_dfac ,_ddebf :=_be .GetArray (_cfea .Rect );
if !_ddebf ||_dfac .Len ()!=4{return nil ,nil ,_bdf .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cbcc ,_decf :=NewPdfRectangle (*_dfac );if _decf !=nil {return nil ,nil ,_decf ;};_dedgf :=_be .TraceToDirectObject (_fgae .Get ("\u004e"));
switch _cgbb :=_dedgf .(type ){case *_be .PdfObjectStream :_feffb :=_cgbb ;_adcfe ,_dgde :=NewXObjectFormFromStream (_feffb );return _adcfe ,_cbcc ,_dgde ;case *_be .PdfObjectDictionary :_cbbg :=_cgbb ;_gdff ,_gffbc :=_be .GetName (_cfea .AS );if !_gffbc {return nil ,nil ,nil ;
};if _cbbg .Get (*_gdff )==nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bcbcc ,_gffbc :=_be .GetStream (_cbbg .Get (*_gdff ));if !_gffbc {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gdff );
return nil ,nil ,_bdf .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_bdbaa ,_gddd :=NewXObjectFormFromStream (_bcbcc );return _bdbaa ,_cbcc ,_gddd ;};_caf .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_dedgf );
return nil ,nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_baba :=NewPdfAnnotation ();_badb :=&PdfAnnotation3D {};_badb .PdfAnnotation =_baba ;_baba .SetContext (_badb );return _badb ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _be .PdfObject ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ffeec *PdfReader )GetNamedDestinations ()(_be .PdfObject ,error ){_ecgfbf :=_be .ResolveReference (_ffeec ._dcdbf .Get ("\u0044\u0065\u0073t\u0073"));if _ecgfbf ==nil {return nil ,nil ;};if !_ffeec ._eaff {_ffbge :=_ffeec .traverseObjectData (_ecgfbf );
if _ffbge !=nil {return nil ,_ffbge ;};};return _ecgfbf ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _be .PdfObject ;Movie _be .PdfObject ;A _be .PdfObject ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_eded *PdfReader )GetNameDictionary ()(_be .PdfObject ,error ){_afbbc :=_be .ResolveReference (_eded ._dcdbf .Get ("\u004e\u0061\u006de\u0073"));if _afbbc ==nil {return nil ,nil ;};if !_eded ._eaff {_ddff :=_eded .traverseObjectData (_afbbc );if _ddff !=nil {return nil ,_ddff ;
};};return _afbbc ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_bfacbb *PdfAcroForm )GetContainingPdfObject ()_be .PdfObject {return _bfacbb ._fabcf };func _ceaec (_gafge _be .PdfObject ,_dfebe bool )(*PdfFont ,error ){_cgbfc ,_ccae ,_eebba :=_gdffb (_gafge );if _cgbfc !=nil {_bfc (_cgbfc );};if _eebba !=nil {if _eebba ==ErrType1CFontNotSupported {_cbdg ,_gagge :=_egcc (_cgbfc ,_ccae ,nil );
if _gagge !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ccae ,_gagge );
return nil ,_eebba ;};return &PdfFont {_egbcf :_cbdg },_eebba ;};return nil ,_eebba ;};_gbbf :=&PdfFont {};switch _ccae ._cfcgc {case "\u0054\u0079\u0070e\u0030":if !_dfebe {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccae );
return nil ,_bdf .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cgec ,_dafag :=_cbaad (_cgbfc ,_ccae );if _dafag !=nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccae ,_dafag );
return nil ,_dafag ;};_gbbf ._egbcf =_cgec ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _egfdg *pdfFontSimple ;_bbgad ,_cdagb :=_ecg .NewStdFontByName (_ecg .StdFontName (_ccae ._abdd ));
if _cdagb {_baef :=_efgc (_bbgad );_gbbf ._egbcf =&_baef ;_egecd :=_be .TraceToDirectObject (_baef .ToPdfObject ());_bdcg ,_bbac ,_decb :=_gdffb (_egecd );if _decb !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ccae ,_baef );
return nil ,_decb ;};for _ ,_cabdd :=range _cgbfc .Keys (){_bdcg .Set (_cabdd ,_cgbfc .Get (_cabdd ));};_egfdg ,_decb =_egcc (_bdcg ,_bbac ,_baef ._fcege );if _decb !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ccae ,_baef );
return nil ,_decb ;};_egfdg ._gcdgc =_baef ._gcdgc ;_egfdg ._afcd =_baef ._afcd ;if _egfdg ._eede ==nil {_egfdg ._eede =_baef ._eede ;};}else {_egfdg ,_eebba =_egcc (_cgbfc ,_ccae ,nil );if _eebba !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ccae ,_eebba );
return nil ,_eebba ;};};_eebba =_egfdg .addEncoding ();if _eebba !=nil {return nil ,_eebba ;};if _cdagb {_egfdg .updateStandard14Font ();};if _cdagb &&_egfdg ._ceec ==nil &&_egfdg ._fcege ==nil {_caf .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_egfdg );
_caf .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_bbgad );};if len (_egfdg ._gcdgc )==0{_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_egfdg );};_gbbf ._egbcf =_egfdg ;
case "\u0054\u0079\u0070e\u0033":_fbefa ,_gcfd :=_fbded (_cgbfc ,_ccae );if _gcfd !=nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gcfd );
return nil ,_gcfd ;};_gbbf ._egbcf =_fbefa ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_aebe ,_aaec :=_ffaba (_cgbfc ,_ccae );if _aaec !=nil {_caf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_aaec );
return nil ,_aaec ;};_gbbf ._egbcf =_aebe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gcda ,_bfafec :=_eecd (_cgbfc ,_ccae );if _bfafec !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccae ,_bfafec );
return nil ,_bfafec ;};_gbbf ._egbcf =_gcda ;default:_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_ccae );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccae );};return _gbbf ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ceeaa *PdfShadingPatternType2 )ToPdfObject ()_be .PdfObject {_ceeaa .PdfPattern .ToPdfObject ();_bdfbg :=_ceeaa .getDict ();if _ceeaa .Shading !=nil {_bdfbg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ceeaa .Shading .ToPdfObject ());};if _ceeaa .Matrix !=nil {_bdfbg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ceeaa .Matrix );
};if _ceeaa .ExtGState !=nil {_bdfbg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ceeaa .ExtGState );};return _ceeaa ._fceaa ;};func (_edg *PdfReader )newPdfActionMovieFromDict (_feb *_be .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_feb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_feb .Get ("\u0054"),Operation :_feb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_abdf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_abdf .ToPdfOutline ().PdfOutlineTreeNode ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_bdd :=NewPdfAnnotation ();_fgac :=&PdfAnnotationText {};_fgac .PdfAnnotation =_bdd ;_fgac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdd .SetContext (_fgac );return _fgac ;};func _abdedf (_ceafc _be .PdfObject )(*PdfPattern ,error ){_afbge :=&PdfPattern {};
var _dgfc *_be .PdfObjectDictionary ;if _fcecc ,_effcb :=_be .GetIndirect (_ceafc );_effcb {_afbge ._fceaa =_fcecc ;_bgdad ,_ebfaf :=_fcecc .PdfObject .(*_be .PdfObjectDictionary );if !_ebfaf {_caf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fcecc .PdfObject );
return nil ,_be .ErrTypeError ;};_dgfc =_bgdad ;}else if _ggdb ,_eeeb :=_be .GetStream (_ceafc );_eeeb {_afbge ._fceaa =_ggdb ;_dgfc =_ggdb .PdfObjectDictionary ;}else {_caf .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ceafc );
return nil ,_be .ErrTypeError ;};_daggb :=_dgfc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _daggb ==nil {_caf .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_abeba ,_bacd :=_daggb .(*_be .PdfObjectInteger );if !_bacd {_caf .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_daggb );
return nil ,_be .ErrTypeError ;};if *_abeba !=1&&*_abeba !=2{_caf .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_abeba );return nil ,_be .ErrRangeError ;
};_afbge .PatternType =int64 (*_abeba );switch *_abeba {case 1:_bggbc ,_faeab :=_cgbfcb (_dgfc );if _faeab !=nil {return nil ,_faeab ;};_bggbc .PdfPattern =_afbge ;_afbge ._ffgg =_bggbc ;return _afbge ,nil ;case 2:_edaeg ,_bbgfg :=_dfcaa (_dgfc );if _bbgfg !=nil {return nil ,_bbgfg ;
};_edaeg .PdfPattern =_afbge ;_afbge ._ffgg =_edaeg ;return _afbge ,nil ;};return nil ,_bdf .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// SetDate sets the `M` field of the signature.
func (_abebac *PdfSignature )SetDate (date _ba .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_abebac .M =_be .MakeString (date .Format (format ));
};type pdfSignDictionary struct{*_be .PdfObjectDictionary ;_bafac *SignatureHandler ;_cgcac *PdfSignature ;_acagb int64 ;_eaagb int ;_ccdgb int ;_aagaf int ;_eggcb int ;};

// SetDecode sets the decode image float slice.
func (_daac *Image )SetDecode (decode []float64 ){_daac ._ffedg =decode };

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_eggg *PdfColorspaceICCBased )ToPdfObject ()_be .PdfObject {_ccdc :=&_be .PdfObjectArray {};_ccdc .Append (_be .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _dbfdd *_be .PdfObjectStream ;if _eggg ._cgee !=nil {_dbfdd =_eggg ._cgee ;
}else {_dbfdd =&_be .PdfObjectStream {};};_eeeg :=_be .MakeDict ();_eeeg .Set ("\u004e",_be .MakeInteger (int64 (_eggg .N )));if _eggg .Alternate !=nil {_eeeg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_eggg .Alternate .ToPdfObject ());};if _eggg .Metadata !=nil {_eeeg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eggg .Metadata );
};if _eggg .Range !=nil {var _cdefc []_be .PdfObject ;for _ ,_caae :=range _eggg .Range {_cdefc =append (_cdefc ,_be .MakeFloat (_caae ));};_eeeg .Set ("\u0052\u0061\u006eg\u0065",_be .MakeArray (_cdefc ...));};_eeeg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_be .MakeInteger (int64 (len (_eggg .Data ))));
_dbfdd .Stream =_eggg .Data ;_dbfdd .PdfObjectDictionary =_eeeg ;_ccdc .Append (_dbfdd );if _eggg ._ebad !=nil {_eggg ._ebad .PdfObject =_ccdc ;return _eggg ._ebad ;};return _ccdc ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_gffeb *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _be .GetNumberAsFloat (_gffeb .XHeight );};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bgde *PdfAnnotation )ToPdfObject ()_be .PdfObject {_gdf :=_bgde ._dbf ;_cafa :=_gdf .PdfObject .(*_be .PdfObjectDictionary );_cafa .Clear ();_cafa .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0041\u006e\u006eo\u0074"));_cafa .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bgde .Rect );
_cafa .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bgde .Contents );_cafa .SetIfNotNil ("\u0050",_bgde .P );_cafa .SetIfNotNil ("\u004e\u004d",_bgde .NM );_cafa .SetIfNotNil ("\u004d",_bgde .M );_cafa .SetIfNotNil ("\u0046",_bgde .F );
_cafa .SetIfNotNil ("\u0041\u0050",_bgde .AP );_cafa .SetIfNotNil ("\u0041\u0053",_bgde .AS );_cafa .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bgde .Border );_cafa .SetIfNotNil ("\u0043",_bgde .C );_cafa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bgde .StructParent );
_cafa .SetIfNotNil ("\u004f\u0043",_bgde .OC );return _gdf ;};func (_aad *PdfReader )newPdfActionHideFromDict (_cfg *_be .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cfg .Get ("\u0054"),H :_cfg .Get ("\u0048")},nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_be .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_decd *_be .PdfIndirectObject ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_abab :=NewPdfAnnotation ();_deabe :=&PdfAnnotationLink {};_deabe .PdfAnnotation =_abab ;_abab .SetContext (_deabe );return _deabe ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_be .PdfObjectStream ;OCSP []*_be .PdfObjectStream ;CRL []*_be .PdfObjectStream ;TU *_be .PdfObjectString ;TS *_be .PdfObjectString ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_gfgc pdfFontSimple )GetCharMetrics (code _ac .CharCode )(_ecg .CharMetrics ,bool ){if _badg ,_dgfad :=_gfgc ._gcdgc [code ];_dgfad {return _ecg .CharMetrics {Wx :_badg },true ;};if _ecg .IsStdFont (_ecg .StdFontName (_gfgc ._abdd )){return _ecg .CharMetrics {Wx :250},true ;
};return _ecg .CharMetrics {},false ;};func _ceeeef (_dbdef *_be .PdfObjectStream )(*PdfFunctionType0 ,error ){_ebgg :=&PdfFunctionType0 {};_ebgg ._cadbd =_dbdef ;_eegeb :=_dbdef .PdfObjectDictionary ;_fgade ,_gbff :=_be .TraceToDirectObject (_eegeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_be .PdfObjectArray );
if !_gbff {_caf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fgade .Len ()< 0||_fgade .Len ()%2!=0{_caf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ebgg .NumInputs =_fgade .Len ()/2;_abda ,_ffce :=_fgade .ToFloat64Array ();if _ffce !=nil {return nil ,_ffce ;};_ebgg .Domain =_abda ;_fgade ,_gbff =_be .TraceToDirectObject (_eegeb .Get ("\u0052\u0061\u006eg\u0065")).(*_be .PdfObjectArray );if !_gbff {_caf .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fgade .Len ()< 0||_fgade .Len ()%2!=0{return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ebgg .NumOutputs =_fgade .Len ()/2;_bccbbe ,_ffce :=_fgade .ToFloat64Array ();if _ffce !=nil {return nil ,_ffce ;};_ebgg .Range =_bccbbe ;_fgade ,_gbff =_be .TraceToDirectObject (_eegeb .Get ("\u0053\u0069\u007a\u0065")).(*_be .PdfObjectArray );if !_gbff {_caf .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bgea ,_ffce :=_fgade .ToIntegerArray ();
if _ffce !=nil {return nil ,_ffce ;};if len (_bgea )!=_ebgg .NumInputs {_caf .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebgg .Size =_bgea ;_babdg ,_gbff :=_be .TraceToDirectObject (_eegeb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_be .PdfObjectInteger );
if !_gbff {_caf .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_babdg !=1&&*_babdg !=2&&*_babdg !=4&&*_babdg !=8&&*_babdg !=12&&*_babdg !=16&&*_babdg !=24&&*_babdg !=32{_caf .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_babdg );
return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebgg .BitsPerSample =int (*_babdg );_ebgg .Order =1;_gacgb ,_gbff :=_be .TraceToDirectObject (_eegeb .Get ("\u004f\u0072\u0064e\u0072")).(*_be .PdfObjectInteger );
if _gbff {if *_gacgb !=1&&*_gacgb !=3{_caf .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gacgb );return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebgg .Order =int (*_gacgb );
};_fgade ,_gbff =_be .TraceToDirectObject (_eegeb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_be .PdfObjectArray );if _gbff {_bada ,_eeabd :=_fgade .ToFloat64Array ();if _eeabd !=nil {return nil ,_eeabd ;};_ebgg .Encode =_bada ;};_fgade ,_gbff =_be .TraceToDirectObject (_eegeb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_be .PdfObjectArray );
if _gbff {_bfcff ,_gadc :=_fgade .ToFloat64Array ();if _gadc !=nil {return nil ,_gadc ;};_ebgg .Decode =_bfcff ;};_egcfe ,_ffce :=_be .DecodeStream (_dbdef );if _ffce !=nil {return nil ,_ffce ;};_ebgg ._dffa =_egcfe ;return _ebgg ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_efada *XObjectForm )SetContentStream (content []byte ,encoder _be .StreamEncoder )error {_adefc :=content ;if encoder ==nil {if _efada .Filter !=nil {encoder =_efada .Filter ;}else {encoder =_be .NewRawEncoder ();};};_dadbd ,_baab :=encoder .EncodeBytes (_adefc );
if _baab !=nil {return _baab ;};_adefc =_dadbd ;_efada .Stream =_adefc ;_efada .Filter =encoder ;return nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_ecbga *PdfPage )AppendContentStream (contentStr string )error {_caeg ,_fdfce :=_ecbga .GetContentStreams ();if _fdfce !=nil {return _fdfce ;};if len (_caeg )==0{_caeg =[]string {contentStr };return _ecbga .SetContentStreams (_caeg ,_be .NewFlateEncoder ());
};var _eddadf _ec .Buffer ;_eddadf .WriteString (_caeg [len (_caeg )-1]);_eddadf .WriteString ("\u000a");_eddadf .WriteString (contentStr );_caeg [len (_caeg )-1]=_eddadf .String ();return _ecbga .SetContentStreams (_caeg ,_be .NewFlateEncoder ());};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_caea *PdfReader )GetEncryptionMethod ()string {_gdebc :=_caea ._gfafb .GetCrypter ();return _gdebc .String ();};func _adc (_geb *PdfPage )map[_be .PdfObjectName ]_be .PdfObject {_ede :=make (map[_be .PdfObjectName ]_be .PdfObject );if _geb .Resources ==nil {return _ede ;
};if _geb .Resources .Font !=nil {if _gbcg ,_gfaf :=_be .GetDict (_geb .Resources .Font );_gfaf {for _ ,_bfbff :=range _gbcg .Keys (){_ede [_bfbff ]=_gbcg .Get (_bfbff );};};};if _geb .Resources .ExtGState !=nil {if _fdgf ,_dbfd :=_be .GetDict (_geb .Resources .ExtGState );
_dbfd {for _ ,_bgc :=range _fdgf .Keys (){_ede [_bgc ]=_fdgf .Get (_bgc );};};};if _geb .Resources .XObject !=nil {if _fbfcg ,_eceb :=_be .GetDict (_geb .Resources .XObject );_eceb {for _ ,_aaf :=range _fbfcg .Keys (){_ede [_aaf ]=_fbfcg .Get (_aaf );};
};};if _geb .Resources .Pattern !=nil {if _dafa ,_eecb :=_be .GetDict (_geb .Resources .Pattern );_eecb {for _ ,_dcdg :=range _dafa .Keys (){_ede [_dcdg ]=_dafa .Get (_dcdg );};};};if _geb .Resources .Shading !=nil {if _geba ,_febc :=_be .GetDict (_geb .Resources .Shading );
_febc {for _ ,_cfcd :=range _geba .Keys (){_ede [_cfcd ]=_geba .Get (_cfcd );};};};if _geb .Resources .ProcSet !=nil {if _debef ,_ddbd :=_be .GetDict (_geb .Resources .ProcSet );_ddbd {for _ ,_bdc :=range _debef .Keys (){_ede [_bdc ]=_debef .Get (_bdc );
};};};if _geb .Resources .Properties !=nil {if _gefb ,_bdcd :=_be .GetDict (_geb .Resources .Properties );_bdcd {for _ ,_ebae :=range _gefb .Keys (){_ede [_ebae ]=_gefb .Get (_ebae );};};};return _ede ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_agadf *PdfPageResources )SetShadingByName (keyName _be .PdfObjectName ,shadingObj _be .PdfObject )error {if _agadf .Shading ==nil {_agadf .Shading =_be .MakeDict ();};_bacbc ,_cedbf :=_be .GetDict (_agadf .Shading );if !_cedbf {return _be .ErrTypeError ;
};_bacbc .Set (keyName ,shadingObj );return nil ;};func (_ddce *PdfWriter )writeTrailer (_fdbag int ){_ddce .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _bgggf :=0;_bgggf <=_fdbag ;{for ;_bgggf <=_fdbag ;_bgggf ++{_gdcf ,_fffee :=_ddce ._bcgf [_bgggf ];
if _fffee &&(!_ddce ._fdgcf ||_ddce ._fdgcf &&(_gdcf .Type ==1&&_gdcf .Offset >=_ddce ._aagbf ||_gdcf .Type ==0)){break ;};};var _becbg int ;for _becbg =_bgggf +1;_becbg <=_fdbag ;_becbg ++{_dabcc ,_dfafg :=_ddce ._bcgf [_becbg ];if _dfafg &&(!_ddce ._fdgcf ||_ddce ._fdgcf &&(_dabcc .Type ==1&&_dabcc .Offset > _ddce ._aagbf )){continue ;
};break ;};_ggfbc :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_bgggf ,_becbg -_bgggf );_ddce .writeString (_ggfbc );for _aacc :=_bgggf ;_aacc < _becbg ;_aacc ++{_cagdc :=_ddce ._bcgf [_aacc ];switch _cagdc .Type {case 0:_ggfbc =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_ddce .writeString (_ggfbc );case 1:_ggfbc =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_cagdc .Offset ,0);_ddce .writeString (_ggfbc );};};_bgggf =_becbg +1;};_efggd :=_be .MakeDict ();_efggd .Set ("\u0049\u006e\u0066\u006f",_ddce ._ceece );
_efggd .Set ("\u0052\u006f\u006f\u0074",_ddce ._babab );_efggd .Set ("\u0053\u0069\u007a\u0065",_be .MakeInteger (int64 (_fdbag +1)));if _ddce ._fdgcf &&_ddce ._gdaag > 0{_efggd .Set ("\u0050\u0072\u0065\u0076",_be .MakeInteger (_ddce ._gdaag ));};if _ddce ._bbdaa !=nil {_efggd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ddce ._gcabc );
};if _ddce ._acgaca ==nil &&_ddce ._fgbbf !=""&&_ddce ._abcda !=""{_ddce ._acgaca =_be .MakeArray (_be .MakeHexString (_ddce ._fgbbf ),_be .MakeHexString (_ddce ._abcda ));};if _ddce ._acgaca !=nil {_efggd .Set ("\u0049\u0044",_ddce ._acgaca );_caf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ddce ._acgaca );
};_ddce .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_ddce .writeString (_efggd .WriteString ());_ddce .writeString ("\u000a");};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gbebb *pdfCIDFontType0 )ToPdfObject ()_be .PdfObject {return _be .MakeNull ()};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_gfgb *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ac .CharCode )(_bgbe []rune ,_gedd ,_efbe int ){_ceeb ,_gedd ,_efbe :=_gfgb .CharcodesToStrings (charcodes );return []rune (_bb .Join (_ceeb ,"")),_gedd ,_efbe ;};

// SetImage updates XObject Image with new image data.
func (_feee *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_feee .Filter .UpdateParams (img .GetParamsDict ());_gdgbfa ,_gbbaff :=_feee .Filter .EncodeBytes (img .Data );if _gbbaff !=nil {return _gbbaff ;};_feee .Stream =_gdgbfa ;_aggd :=img .Width ;
_feee .Width =&_aggd ;_edbc :=img .Height ;_feee .Height =&_edbc ;_bfgdbb :=img .BitsPerComponent ;_feee .BitsPerComponent =&_bfgdbb ;if cs ==nil {if img .ColorComponents ==1{_feee .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_feee .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_feee .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _bdf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_feee .ColorSpace =cs ;};return nil ;
};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// K returns the value of the key component of the color.
func (_egff *PdfColorDeviceCMYK )K ()float64 {return _egff [3]};func (_cfeg *PdfWriter )seekByName (_cgaec _be .PdfObject ,_bgafda []string ,_febca string )([]_be .PdfObject ,error ){_caf .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cgaec );
var _cagbcf []_be .PdfObject ;if _caced ,_bebaf :=_cgaec .(*_be .PdfIndirectObject );_bebaf {return _cfeg .seekByName (_caced .PdfObject ,_bgafda ,_febca );};if _ggace ,_gcccfa :=_cgaec .(*_be .PdfObjectStream );_gcccfa {return _cfeg .seekByName (_ggace .PdfObjectDictionary ,_bgafda ,_febca );
};if _fdfcga ,_fdabb :=_cgaec .(*_be .PdfObjectDictionary );_fdabb {_caf .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gggab :=range _fdfcga .Keys (){_afbgf :=_fdfcga .Get (_gggab );if string (_gggab )==_febca {_cagbcf =append (_cagbcf ,_afbgf );};for _ ,_cbeg :=range _bgafda {if string (_gggab )==_cbeg {_caf .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cbeg );
_ccdf ,_dggdg :=_cfeg .seekByName (_afbgf ,_bgafda ,_febca );if _dggdg !=nil {return _cagbcf ,_dggdg ;};_cagbcf =append (_cagbcf ,_ccdf ...);break ;};};};return _cagbcf ,nil ;};return _cagbcf ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_egbgb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _bfgdg []_ac .TextEncoder ;var _edcce _ac .CMapEncoder ;if _gaea :=_egbgb .baseFields ()._baag ;_gaea !=nil {_edcce =_ac .NewCMapEncoder ("",nil ,_gaea );};_aacaa :=_egbgb .Encoder ();
if _aacaa !=nil {switch _fcefbe :=_aacaa .(type ){case _ac .SimpleEncoder :_efabf :=_fcefbe .BaseName ();if _ ,_bgdb :=_ddbf [_efabf ];_bgdb {_bfgdg =append (_bfgdg ,_aacaa );};};};if len (_bfgdg )==0{if _egbgb .baseFields ()._baag !=nil {_bfgdg =append (_bfgdg ,_edcce );
};if _aacaa !=nil {_bfgdg =append (_bfgdg ,_aacaa );};};var _cggad _ec .Buffer ;var _cdbc int ;for _ ,_cbgae :=range data {var _ffaaf bool ;for _ ,_cdec :=range _bfgdg {if _fafb :=_cdec .Encode (string (_cbgae ));len (_fafb )> 0{_cggad .Write (_fafb );
_ffaaf =true ;break ;};};if !_ffaaf {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cbgae );
_cdbc ++;};};if _cdbc !=0{_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cdbc ,_egbgb ,_bfgdg );
};return _cggad .Bytes (),_cdbc ;};

// CustomKeys returns all custom info keys as list.
func (_ccaga *PdfInfo )CustomKeys ()[]string {if _ccaga ._gcgff ==nil {return nil ;};_fgfa :=make ([]string ,len (_ccaga ._gcgff .Keys ()));for _ ,_fcdb :=range _ccaga ._gcgff .Keys (){_fgfa =append (_fgfa ,_fcdb .String ());};return _fgfa ;};

// Transform rectangle with the supplied matrix.
func (_agcgcb *PdfRectangle )Transform (transformMatrix _ff .Matrix ){_agcgcb .Llx ,_agcgcb .Lly =transformMatrix .Transform (_agcgcb .Llx ,_agcgcb .Lly );_agcgcb .Urx ,_agcgcb .Ury =transformMatrix .Transform (_agcgcb .Urx ,_agcgcb .Ury );_agcgcb .Normalize ();
};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_fgbc *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bacg :=_bc .NewReader (img .getBase ());_aagf :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_degd :=_bc .NewWriter (_aagf );
_bbdeg :=_eg .Pow (2,float64 (img .BitsPerComponent ))-1;_egbe :=make ([]uint32 ,3);var (_cfaba uint32 ;ANorm ,X ,Y ,Z ,_abccgd ,_afgf ,_abbb float64 ;_ddaa error ;);for {_cfaba ,_ddaa =_bacg .ReadSample ();if _ddaa ==_dga .EOF {break ;}else if _ddaa !=nil {return img ,_ddaa ;
};ANorm =float64 (_cfaba )/_bbdeg ;X =_fgbc .WhitePoint [0]*_eg .Pow (ANorm ,_fgbc .Gamma );Y =_fgbc .WhitePoint [1]*_eg .Pow (ANorm ,_fgbc .Gamma );Z =_fgbc .WhitePoint [2]*_eg .Pow (ANorm ,_fgbc .Gamma );_abccgd =3.240479*X +-1.537150*Y +-0.498535*Z ;
_afgf =-0.969256*X +1.875992*Y +0.041556*Z ;_abbb =0.055648*X +-0.204043*Y +1.057311*Z ;_abccgd =_eg .Min (_eg .Max (_abccgd ,0),1.0);_afgf =_eg .Min (_eg .Max (_afgf ,0),1.0);_abbb =_eg .Min (_eg .Max (_abbb ,0),1.0);_egbe [0]=uint32 (_abccgd *_bbdeg );
_egbe [1]=uint32 (_afgf *_bbdeg );_egbe [2]=uint32 (_abbb *_bbdeg );if _ddaa =_degd .WriteSamples (_egbe );_ddaa !=nil {return img ,_ddaa ;};};return _fggd (&_aagf ),nil ;};func (_fdgg *DSS )generateHashMap (_dbfea []*_be .PdfObjectStream )(map[string ]*_be .PdfObjectStream ,error ){_bdcf :=map[string ]*_be .PdfObjectStream {};
for _ ,_aceg :=range _dbfea {_fcdgb ,_fdfca :=_be .DecodeStream (_aceg );if _fdfca !=nil {return nil ,_fdfca ;};_adfcd ,_fdfca :=_dgcd (_fcdgb );if _fdfca !=nil {return nil ,_fdfca ;};_bdcf [string (_adfcd )]=_aceg ;};return _bdcf ,nil ;};func (_bcdd *PdfReader )newPdfAnnotationHighlightFromDict (_egb *_be .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fabf :=PdfAnnotationHighlight {};
_ffg ,_abea :=_bcdd .newPdfAnnotationMarkupFromDict (_egb );if _abea !=nil {return nil ,_abea ;};_fabf .PdfAnnotationMarkup =_ffg ;_fabf .QuadPoints =_egb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fabf ,nil ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_ebbfd *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_aeec :=_ebbfd ._gfafb .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _aeec {return nil ,_bdf .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_aeec {return _ebbfd ,nil ;};if _ebbfd ._bccfg [revisionNumber ]!=nil {return _ebbfd ._bccfg [revisionNumber ],nil ;};_egagfc :=_ebbfd ;for _bddgd :=_aeec -1;_bddgd >=revisionNumber ;_bddgd --{_gbdab ,_fgegb :=_egagfc .GetPreviousRevision ();
if _fgegb !=nil {return nil ,_fgegb ;};_ebbfd ._bccfg [_bddgd ]=_gbdab ;_egagfc =_gbdab ;};return _egagfc ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_febdb PdfDate )ToGoTime ()_ba .Time {_ggea :=int (_febdb ._bbdbe *60*60+_febdb ._dafcb *60);switch _febdb ._badac {case '-':_ggea =-_ggea ;case 'Z':_ggea =0;};_afgfgf :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_febdb ._badac ,_febdb ._bbdbe ,_febdb ._dafcb );
_dabec :=_ba .FixedZone (_afgfgf ,_ggea );return _ba .Date (int (_febdb ._feaeeg ),_ba .Month (_febdb ._fggdd ),int (_febdb ._bcbfag ),int (_febdb ._aceag ),int (_febdb ._edaea ),int (_febdb ._bcae ),0,_dabec );};

// ToPdfObject converts rectangle to a PDF object.
func (_agda *PdfRectangle )ToPdfObject ()_be .PdfObject {return _be .MakeArray (_be .MakeFloat (_agda .Llx ),_be .MakeFloat (_agda .Lly ),_be .MakeFloat (_agda .Urx ),_be .MakeFloat (_agda .Ury ));};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_eaa :=NewPdfAnnotation ();_bdff :=&PdfAnnotationWatermark {};_bdff .PdfAnnotation =_eaa ;_eaa .SetContext (_bdff );return _bdff ;};func (_fgcd *DSS )addCRLs (_afca [][]byte )([]*_be .PdfObjectStream ,error ){return _fgcd .add (&_fgcd .CRLs ,_fgcd ._ggge ,_afca );
};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func (_cagcd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cagcd ._gfafb .GetCrypter ()!=nil &&!_cagcd ._gfafb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fdaag :=_cagcd ._dcdbf ;_dcfeb :=_fdaag .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dcfeb ==nil {return nil ,nil ;};_caf .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fafd :=_be .ResolveReference (_dcfeb );
_caf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fafd );if _dcdef :=_be .IsNullObject (_fafd );_dcdef {_caf .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_bcfc ,_fcfdc :=_fafd .(*_be .PdfIndirectObject );if !_fcfdc {if _ ,_defbc :=_be .GetDict (_fafd );!_defbc {_caf .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_caf .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_bcfc =_be .MakeIndirectObject (_fafd );};_dfggc ,_fcfdc :=_bcfc .PdfObject .(*_be .PdfObjectDictionary );if !_fcfdc {return nil ,_bdf .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_caf .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dfggc );_faecc ,_ ,_cebae :=_cagcd .buildOutlineTree (_bcfc ,nil ,nil ,nil );if _cebae !=nil {return nil ,_cebae ;};_caf .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_faecc );
return _faecc ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_defg *PdfPage )error ;};func _cedadb (_ccaae _be .PdfObject ,_gefc *PdfReader )(*OutlineDest ,error ){_acdce ,_becae :=_be .GetArray (_ccaae );if !_becae {return nil ,_bdf .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_fcgd :=_acdce .Len ();if _fcgd < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fcgd );
};_fcbfe :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_dgdcf :=_acdce .Get (0);if _bgbed ,_fbfea :=_be .GetIndirect (_dgdcf );_fbfea {if _ ,_bgegc ,_caeeb :=_gefc .PageFromIndirectObject (_bgbed );_caeeb ==nil {_fcbfe .Page =int64 (_bgegc -1);}else {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bgbed );
};_fcbfe .PageObj =_bgbed ;}else if _egeb ,_gadee :=_be .GetIntVal (_dgdcf );_gadee {if _egeb >=0&&_egeb < len (_gefc .PageList ){_fcbfe .PageObj =_gefc .PageList [_egeb ].GetPageAsIndirectObject ();}else {_caf .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_egeb );
};_fcbfe .Page =int64 (_egeb );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_dgdcf );};_bgfe ,_becae :=_be .GetNameVal (_acdce .Get (1));
if !_becae {_caf .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_acdce .Get (1));
return _fcbfe ,nil ;};switch _bgfe {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fcgd > 2{_fcbfe .Y ,_ =_be .GetNumberAsFloat (_be .TraceToDirectObject (_acdce .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fcgd > 2{_fcbfe .X ,_ =_be .GetNumberAsFloat (_be .TraceToDirectObject (_acdce .Get (2)));
};case "\u0058\u0059\u005a":if _fcgd > 4{_fcbfe .X ,_ =_be .GetNumberAsFloat (_be .TraceToDirectObject (_acdce .Get (2)));_fcbfe .Y ,_ =_be .GetNumberAsFloat (_be .TraceToDirectObject (_acdce .Get (3)));_fcbfe .Zoom ,_ =_be .GetNumberAsFloat (_be .TraceToDirectObject (_acdce .Get (4)));
};default:_bgfe ="\u0046\u0069\u0074";};_fcbfe .Mode =_bgfe ;return _fcbfe ,nil ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _be .PdfObjectName ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_fgdeb =creator };

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_abdbc *modelManager )GetPrimitiveFromModel (model PdfModel )_be .PdfObject {_adfdg ,_fdcbc :=_abdbc ._ddcf [model ];if !_fdcbc {return nil ;};return _adfdg ;};func (_fgegd *PdfSignature )extractChainFromCert ()([]*_bd .Certificate ,error ){var _ceffbd *_be .PdfObjectArray ;
switch _acddg :=_fgegd .Cert .(type ){case *_be .PdfObjectString :_ceffbd =_be .MakeArray (_acddg );case *_be .PdfObjectArray :_ceffbd =_acddg ;default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_acddg );
};var _dcbdg _ec .Buffer ;for _ ,_fafg :=range _ceffbd .Elements (){_dggbe ,_aeag :=_be .GetString (_fafg );if !_aeag {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fafg );
};if _ ,_aedda :=_dcbdg .Write (_dggbe .Bytes ());_aedda !=nil {return nil ,_aedda ;};};return _bd .ParseCertificates (_dcbdg .Bytes ());};func (_egbda *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _fbag []*PdfFieldSignature ;for _ ,_efdc :=range _egbda .AllFields (){switch _gegfb :=_efdc .GetContext ().(type ){case *PdfFieldSignature :_dfea :=_gegfb ;
_fbag =append (_fbag ,_dfea );};};return _fbag ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _be .PdfObject ;};func _feaab (_bcbb *_be .PdfObjectDictionary )*VRI {_ggad ,_ :=_be .GetString (_bcbb .Get ("\u0054\u0055"));_fbbb ,_ :=_be .GetString (_bcbb .Get ("\u0054\u0053"));
return &VRI {Cert :_cedff (_bcbb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_cedff (_bcbb .Get ("\u004f\u0043\u0053\u0050")),CRL :_cedff (_bcbb .Get ("\u0043\u0052\u004c")),TU :_ggad ,TS :_fbbb };};func (_bcbc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};
func _eaade (_eddag _be .PdfObject )(*PdfFunctionType3 ,error ){_egdac :=&PdfFunctionType3 {};var _caadb *_be .PdfObjectDictionary ;if _gfbdf ,_edefa :=_eddag .(*_be .PdfIndirectObject );_edefa {_abccf ,_feaee :=_gfbdf .PdfObject .(*_be .PdfObjectDictionary );
if !_feaee {return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egdac ._cdcc =_gfbdf ;_caadb =_abccf ;}else if _ddgff ,_cacda :=_eddag .(*_be .PdfObjectDictionary );_cacda {_caadb =_ddgff ;
}else {return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ceggb ,_fggcc :=_be .TraceToDirectObject (_caadb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_be .PdfObjectArray );if !_fggcc {_caf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ceggb .Len ()!=2{_caf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_bdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cedgg ,_cbef :=_ceggb .ToFloat64Array ();if _cbef !=nil {return nil ,_cbef ;};_egdac .Domain =_cedgg ;_ceggb ,_fggcc =_be .TraceToDirectObject (_caadb .Get ("\u0052\u0061\u006eg\u0065")).(*_be .PdfObjectArray );
if _fggcc {if _ceggb .Len ()< 0||_ceggb .Len ()%2!=0{return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_efeg ,_bdbd :=_ceggb .ToFloat64Array ();if _bdbd !=nil {return nil ,_bdbd ;};_egdac .Range =_efeg ;
};_ceggb ,_fggcc =_be .TraceToDirectObject (_caadb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_be .PdfObjectArray );if !_fggcc {_caf .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_egdac .Functions =[]PdfFunction {};
for _ ,_aacfb :=range _ceggb .Elements (){_ffeb ,_ddfga :=_fgbbbc (_aacfb );if _ddfga !=nil {return nil ,_ddfga ;};_egdac .Functions =append (_egdac .Functions ,_ffeb );};_ceggb ,_fggcc =_be .TraceToDirectObject (_caadb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_be .PdfObjectArray );
if !_fggcc {_caf .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_aeac ,_cbef :=_ceggb .ToFloat64Array ();if _cbef !=nil {return nil ,_cbef ;};_egdac .Bounds =_aeac ;if len (_egdac .Bounds )!=len (_egdac .Functions )-1{_caf .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_egdac .Bounds ),len (_egdac .Functions ));
return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceggb ,_fggcc =_be .TraceToDirectObject (_caadb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_be .PdfObjectArray );if !_fggcc {_caf .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bafba ,_cbef :=_ceggb .ToFloat64Array ();
if _cbef !=nil {return nil ,_cbef ;};_egdac .Encode =_bafba ;if len (_egdac .Encode )!=2*len (_egdac .Functions ){_caf .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_egdac .Encode ),len (_egdac .Functions ));
return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _egdac ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_gaae *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func _bcfdb ()string {_ccgeg .Lock ();defer _ccgeg .Unlock ();return _dbcgd };

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _be .PdfObject )(*PdfFont ,error ){return _ceaec (fontObj ,true )};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_agfa *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _agfa .Alternate ==nil {if _agfa .N ==1{_ecggg :=NewPdfColorspaceDeviceGray ();return _ecggg .ColorFromFloats (vals );}else if _agfa .N ==3{_fcfe :=NewPdfColorspaceDeviceRGB ();
return _fcfe .ColorFromFloats (vals );}else if _agfa .N ==4{_daee :=NewPdfColorspaceDeviceCMYK ();return _daee .ColorFromFloats (vals );}else {return nil ,_bdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _agfa .Alternate .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_fdf *PdfAnnotationSquare )ToPdfObject ()_be .PdfObject {_fdf .PdfAnnotation .ToPdfObject ();_fefac :=_fdf ._dbf ;_gbgf :=_fefac .PdfObject .(*_be .PdfObjectDictionary );if _fdf .PdfAnnotationMarkup !=nil {_fdf .PdfAnnotationMarkup .appendToPdfDictionary (_gbgf );
};_gbgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_gbgf .SetIfNotNil ("\u0042\u0053",_fdf .BS );_gbgf .SetIfNotNil ("\u0049\u0043",_fdf .IC );_gbgf .SetIfNotNil ("\u0042\u0045",_fdf .BE );
_gbgf .SetIfNotNil ("\u0052\u0044",_fdf .RD );return _fefac ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ffbf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fff :=&PdfAnnotation {};_fff ._dbf =_be .MakeIndirectObject (_be .MakeDict ());return _fff ;};

// ToPdfObject implements interface PdfModel.
func (_fdgb *PdfAnnotationMovie )ToPdfObject ()_be .PdfObject {_fdgb .PdfAnnotation .ToPdfObject ();_caaa :=_fdgb ._dbf ;_abgf :=_caaa .PdfObject .(*_be .PdfObjectDictionary );_abgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u004d\u006f\u0076i\u0065"));
_abgf .SetIfNotNil ("\u0054",_fdgb .T );_abgf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_fdgb .Movie );_abgf .SetIfNotNil ("\u0041",_fdgb .A );return _caaa ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_abef *PdfField )GetContainingPdfObject ()_be .PdfObject {return _abef ._ffcf };

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_cedgfg *PdfReader )Decrypt (password []byte )(bool ,error ){_efafg ,_adeae :=_cedgfg ._gfafb .Decrypt (password );if _adeae !=nil {return false ,_adeae ;};if !_efafg {return false ,nil ;};_adeae =_cedgfg .loadStructure ();if _adeae !=nil {_caf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_adeae );
return false ,_adeae ;};return true ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_fddf :=NewPdfAnnotation ();_dbg :=&PdfAnnotationPopup {};_dbg .PdfAnnotation =_fddf ;_fddf .SetContext (_dbg );return _dbg ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _be .PdfObject ;IsMap _be .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbae *PdfAnnotationPolyLine )ToPdfObject ()_be .PdfObject {_bbae .PdfAnnotation .ToPdfObject ();_ebg :=_bbae ._dbf ;_afef :=_ebg .PdfObject .(*_be .PdfObjectDictionary );_bbae .PdfAnnotationMarkup .appendToPdfDictionary (_afef );_afef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_afef .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bbae .Vertices );_afef .SetIfNotNil ("\u004c\u0045",_bbae .LE );_afef .SetIfNotNil ("\u0042\u0053",_bbae .BS );_afef .SetIfNotNil ("\u0049\u0043",_bbae .IC );_afef .SetIfNotNil ("\u0042\u0045",_bbae .BE );
_afef .SetIfNotNil ("\u0049\u0054",_bbae .IT );_afef .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bbae .Measure );return _ebg ;};

// GetContentStreams returns the content stream as an array of strings.
func (_cfagc *PdfPage )GetContentStreams ()([]string ,error ){_cdce :=_cfagc .GetContentStreamObjs ();var _becff []string ;for _ ,_cdfgb :=range _cdce {_decbe ,_cbgaa :=_fgce (_cdfgb );if _cbgaa !=nil {return nil ,_cbgaa ;};_becff =append (_becff ,_decbe );
};return _becff ,nil ;};

// Encoder returns the font's text encoder.
func (_dageg *PdfFont )Encoder ()_ac .TextEncoder {_dgef :=_dageg .actualFont ();if _dgef ==nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dageg ._egbcf );
return nil ;};return _dgef .Encoder ();};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_fgbcg *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_gegg ,_ebfd :=color .(*PdfColorCalRGB );if !_ebfd {_caf .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecag :=_gegg .A ();_eacfc :=_gegg .B ();_babb :=_gegg .C ();X :=_fgbcg .Matrix [0]*_eg .Pow (_ecag ,_fgbcg .Gamma [0])+_fgbcg .Matrix [3]*_eg .Pow (_eacfc ,_fgbcg .Gamma [1])+_fgbcg .Matrix [6]*_eg .Pow (_babb ,_fgbcg .Gamma [2]);
Y :=_fgbcg .Matrix [1]*_eg .Pow (_ecag ,_fgbcg .Gamma [0])+_fgbcg .Matrix [4]*_eg .Pow (_eacfc ,_fgbcg .Gamma [1])+_fgbcg .Matrix [7]*_eg .Pow (_babb ,_fgbcg .Gamma [2]);Z :=_fgbcg .Matrix [2]*_eg .Pow (_ecag ,_fgbcg .Gamma [0])+_fgbcg .Matrix [5]*_eg .Pow (_eacfc ,_fgbcg .Gamma [1])+_fgbcg .Matrix [8]*_eg .Pow (_babb ,_fgbcg .Gamma [2]);
_gaaef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dgfb :=-0.969256*X +1.875992*Y +0.041556*Z ;_ecfa :=0.055648*X +-0.204043*Y +1.057311*Z ;_gaaef =_eg .Min (_eg .Max (_gaaef ,0),1.0);_dgfb =_eg .Min (_eg .Max (_dgfb ,0),1.0);_ecfa =_eg .Min (_eg .Max (_ecfa ,0),1.0);
return NewPdfColorDeviceRGB (_gaaef ,_dgfb ,_ecfa ),nil ;};func _gcbe (_bbec _be .PdfObject )(*PdfColorspaceCalRGB ,error ){_cdafa :=NewPdfColorspaceCalRGB ();if _dcfa ,_caad :=_bbec .(*_be .PdfIndirectObject );_caad {_cdafa ._fcaa =_dcfa ;};_bbec =_be .TraceToDirectObject (_bbec );
_bfeea ,_gfda :=_bbec .(*_be .PdfObjectArray );if !_gfda {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfeea .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bbec =_be .TraceToDirectObject (_bfeea .Get (0));_gaag ,_gfda :=_bbec .(*_be .PdfObjectName );if !_gfda {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_gaag !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bbec =_be .TraceToDirectObject (_bfeea .Get (1));
_ccgf ,_gfda :=_bbec .(*_be .PdfObjectDictionary );if !_gfda {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_bbec =_ccgf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_bbec =_be .TraceToDirectObject (_bbec );_acffd ,_gfda :=_bbec .(*_be .PdfObjectArray );if !_gfda {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _acffd .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cfbee ,_fbef :=_acffd .GetAsFloat64Slice ();
if _fbef !=nil {return nil ,_fbef ;};_cdafa .WhitePoint =_cfbee ;_bbec =_ccgf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bbec !=nil {_bbec =_be .TraceToDirectObject (_bbec );_ecac ,_cbeb :=_bbec .(*_be .PdfObjectArray );if !_cbeb {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _ecac .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_fdgbb ,_dffe :=_ecac .GetAsFloat64Slice ();
if _dffe !=nil {return nil ,_dffe ;};_cdafa .BlackPoint =_fdgbb ;};_bbec =_ccgf .Get ("\u0047\u0061\u006dm\u0061");if _bbec !=nil {_bbec =_be .TraceToDirectObject (_bbec );_ddga ,_bfdb :=_bbec .(*_be .PdfObjectArray );if !_bfdb {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _ddga .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_beede ,_befdbd :=_ddga .GetAsFloat64Slice ();if _befdbd !=nil {return nil ,_befdbd ;
};_cdafa .Gamma =_beede ;};_bbec =_ccgf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bbec !=nil {_bbec =_be .TraceToDirectObject (_bbec );_dggf ,_aafd :=_bbec .(*_be .PdfObjectArray );if !_aafd {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _dggf .Len ()!=9{_caf .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_dggf .String ());return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_cdaca ,_bcg :=_dggf .GetAsFloat64Slice ();if _bcg !=nil {return nil ,_bcg ;};_cdafa .Matrix =_cdaca ;};return _cdafa ,nil ;};func (_bbaf *PdfAppender )addNewObject (_gafa _be .PdfObject ){if _ ,_edf :=_bbaf ._ccaa [_gafa ];!_edf {_bbaf ._bfgf =append (_bbaf ._bfgf ,_gafa );
_bbaf ._ccaa [_gafa ]=struct{}{};};};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_cgef :=NewPdfAnnotation ();_bdbcg :=&PdfAnnotationCircle {};_bdbcg .PdfAnnotation =_cgef ;_bdbcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgef .SetContext (_bdbcg );return _bdbcg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aecg *PdfColorspaceSpecialSeparation )ToPdfObject ()_be .PdfObject {_addb :=_be .MakeArray (_be .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_addb .Append (_aecg .ColorantName );_addb .Append (_aecg .AlternateSpace .ToPdfObject ());
_addb .Append (_aecg .TintTransform .ToPdfObject ());if _aecg ._decd !=nil {_aecg ._decd .PdfObject =_addb ;return _aecg ._decd ;};return _addb ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _be .PdfObjectArray )(*PdfRectangle ,error ){_bgfbd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ddeeag error ;_bgfbd .Llx ,_ddeeag =_be .GetNumberAsFloat (arr .Get (0));if _ddeeag !=nil {return nil ,_ddeeag ;};_bgfbd .Lly ,_ddeeag =_be .GetNumberAsFloat (arr .Get (1));if _ddeeag !=nil {return nil ,_ddeeag ;};_bgfbd .Urx ,_ddeeag =_be .GetNumberAsFloat (arr .Get (2));
if _ddeeag !=nil {return nil ,_ddeeag ;};_bgfbd .Ury ,_ddeeag =_be .GetNumberAsFloat (arr .Get (3));if _ddeeag !=nil {return nil ,_ddeeag ;};return &_bgfbd ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bad :=NewPdfAnnotation ();_dddg :=&PdfAnnotationSquare {};_dddg .PdfAnnotation =_bad ;_dddg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bad .SetContext (_dddg );return _dddg ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fecb *PdfAppender )UpdatePage (page *PdfPage ){_fecb .updateObjectsDeep (page .ToPdfObject (),nil )};func _eagga (_cffa _dga .ReadSeeker ,_agdga *ReaderOpts ,_ddgc bool ,_ccabd string )(*PdfReader ,error ){if _agdga ==nil {_agdga =NewReaderOpts ();
};_cdbdce :=*_agdga ;_effg :=&PdfReader {_dbaba :_cffa ,_afddg :map[_be .PdfObject ]struct{}{},_cfgbc :_eeeac (),_eaff :_agdga .LazyLoad ,_caega :_agdga .ComplianceMode ,_cfaf :_ddgc ,_babc :&_cdbdce };_cbaadb ,_ccceg :=_dfcbc ("\u0072");if _ccceg !=nil {return nil ,_ccceg ;
};_ccceg =_aa .Track (_cbaadb ,_ccabd );if _ccceg !=nil {return nil ,_ccceg ;};_effg ._adfef =_cbaadb ;var _gddcca *_be .PdfParser ;if !_effg ._caega {_gddcca ,_ccceg =_be .NewParser (_cffa );}else {_gddcca ,_ccceg =_be .NewCompliancePdfParser (_cffa );
};if _ccceg !=nil {return nil ,_ccceg ;};_effg ._gfafb =_gddcca ;_cabg ,_ccceg :=_effg .IsEncrypted ();if _ccceg !=nil {return nil ,_ccceg ;};if !_cabg {_ccceg =_effg .loadStructure ();if _ccceg !=nil {return nil ,_ccceg ;};}else if _ddgc {_abdcd ,_cgacaf :=_effg .Decrypt ([]byte (_agdga .Password ));
if _cgacaf !=nil {return nil ,_cgacaf ;};if !_abdcd {return nil ,_bdf .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_effg ._efcac =make (map[*PdfReader ]*PdfReader );_effg ._bccfg =make ([]*PdfReader ,_gddcca .GetRevisionNumber ());return _effg ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_cbgg *PdfTilingPattern )GetContentStream ()([]byte ,error ){_becffa ,_ ,_cdcda :=_cbgg .GetContentStreamWithEncoder ();return _becffa ,_cdcda ;};func _egbg (_cbbd _be .PdfObject )(*PdfBorderStyle ,error ){_egge :=&PdfBorderStyle {};_egge ._fefge =_cbbd ;
var _fgeb *_be .PdfObjectDictionary ;_cbbd =_be .TraceToDirectObject (_cbbd );_fgeb ,_agdgf :=_cbbd .(*_be .PdfObjectDictionary );if !_agdgf {return nil ,_bdf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _fgad :=_fgeb .Get ("\u0054\u0079\u0070\u0065");
_fgad !=nil {_agca ,_effc :=_fgad .(*_be .PdfObjectName );if !_effc {_caf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_fgad );
}else {if *_agca !="\u0042\u006f\u0072\u0064\u0065\u0072"{_caf .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_agca );};};};if _daaf :=_fgeb .Get ("\u0057");
_daaf !=nil {_gdaa ,_abec :=_be .GetNumberAsFloat (_daaf );if _abec !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_abec );return nil ,_abec ;};_egge .W =&_gdaa ;
};if _ddad :=_fgeb .Get ("\u0053");_ddad !=nil {_deef ,_cde :=_ddad .(*_be .PdfObjectName );if !_cde {return nil ,_bdf .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dfee BorderStyle ;switch *_deef {case "\u0053":_dfee =BorderStyleSolid ;case "\u0044":_dfee =BorderStyleDashed ;case "\u0042":_dfee =BorderStyleBeveled ;case "\u0049":_dfee =BorderStyleInset ;case "\u0055":_dfee =BorderStyleUnderline ;default:_caf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_deef );
return nil ,_bdf .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_egge .S =&_dfee ;};if _aaab :=_fgeb .Get ("\u0044");_aaab !=nil {_ccca ,_cedb :=_aaab .(*_be .PdfObjectArray );
if !_cedb {_caf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_aaab );return nil ,_bdf .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ecec ,_dgbc :=_ccca .ToIntegerArray ();if _dgbc !=nil {_caf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dgbc );
return nil ,_dgbc ;};_egge .D =&_ecec ;};return _egge ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bacb *PdfColorspaceDeviceGray )ToPdfObject ()_be .PdfObject {return _be .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _ffbbe (_abdac *_be .PdfObjectStream )(*PdfFunctionType4 ,error ){_adaca :=&PdfFunctionType4 {};
_adaca ._fbda =_abdac ;_dbcfe :=_abdac .PdfObjectDictionary ;_fadfgc ,_edaag :=_be .TraceToDirectObject (_dbcfe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_be .PdfObjectArray );if !_edaag {_caf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fadfgc .Len ()%2!=0{_caf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_bdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ddbc ,_bfef :=_fadfgc .ToFloat64Array ();if _bfef !=nil {return nil ,_bfef ;};_adaca .Domain =_ddbc ;_fadfgc ,_edaag =_be .TraceToDirectObject (_dbcfe .Get ("\u0052\u0061\u006eg\u0065")).(*_be .PdfObjectArray );
if _edaag {if _fadfgc .Len ()< 0||_fadfgc .Len ()%2!=0{return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_egagf ,_gcacg :=_fadfgc .ToFloat64Array ();if _gcacg !=nil {return nil ,_gcacg ;};_adaca .Range =_egagf ;
};_ddacb ,_bfef :=_be .DecodeStream (_abdac );if _bfef !=nil {return nil ,_bfef ;};_adaca ._gcbaf =_ddacb ;_feabg :=_dab .NewPSParser (_ddacb );_gbea ,_bfef :=_feabg .Parse ();if _bfef !=nil {return nil ,_bfef ;};_adaca .Program =_gbea ;return _adaca ,nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dbga *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdaf ,_faag :=_be .GetNumbersAsFloat (objects );
if _faag !=nil {return nil ,_faag ;};return _dbga .ColorFromFloats (_gdaf );};func (_agc *PdfReader )newPdfAnnotationMarkupFromDict (_gae *_be .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cdf :=&PdfAnnotationMarkup {};if _dfde :=_gae .Get ("\u0054");
_dfde !=nil {_cdf .T =_dfde ;};if _ebf :=_gae .Get ("\u0050\u006f\u0070u\u0070");_ebf !=nil {_ggca ,_gdef :=_ebf .(*_be .PdfIndirectObject );if !_gdef {if _ ,_fdcg :=_ebf .(*_be .PdfObjectNull );!_fdcg {return nil ,_bdf .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_cfgf ,_fee :=_agc .newPdfAnnotationFromIndirectObject (_ggca );if _fee !=nil {return nil ,_fee ;};if _cfgf !=nil {_cebfg ,_edgb :=_cfgf ._ef .(*PdfAnnotationPopup );if !_edgb {return nil ,_bdf .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_cdf .Popup =_cebfg ;};};};if _fbf :=_gae .Get ("\u0043\u0041");_fbf !=nil {_cdf .CA =_fbf ;};if _gfbg :=_gae .Get ("\u0052\u0043");_gfbg !=nil {_cdf .RC =_gfbg ;};if _befd :=_gae .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_befd !=nil {_cdf .CreationDate =_befd ;};if _fed :=_gae .Get ("\u0049\u0052\u0054");_fed !=nil {_cdf .IRT =_fed ;};if _dgc :=_gae .Get ("\u0053\u0075\u0062\u006a");_dgc !=nil {_cdf .Subj =_dgc ;};if _dbgg :=_gae .Get ("\u0052\u0054");_dbgg !=nil {_cdf .RT =_dbgg ;
};if _caag :=_gae .Get ("\u0049\u0054");_caag !=nil {_cdf .IT =_caag ;};if _ceda :=_gae .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ceda !=nil {_cdf .ExData =_ceda ;};return _cdf ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _be .PdfObject ;MK _be .PdfObject ;A _be .PdfObject ;AA _be .PdfObject ;};func (_ggfea *PdfWriter )writeObjectsInStreams (_ebeef map[_be .PdfObject ]bool )error {for _ ,_acfaa :=range _ggfea ._gadag {if _dacbbb :=_ebeef [_acfaa ];
_dacbbb {continue ;};_ddcec :=int64 (0);switch _dddcf :=_acfaa .(type ){case *_be .PdfIndirectObject :_ddcec =_dddcf .ObjectNumber ;case *_be .PdfObjectStream :_ddcec =_dddcf .ObjectNumber ;case *_be .PdfObjectStreams :_ddcec =_dddcf .ObjectNumber ;default:_caf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_acfaa );
return ErrTypeCheck ;};if _ggfea ._bbdaa !=nil &&_acfaa !=_ggfea ._gcabc {_fdcad :=_ggfea ._bbdaa .Encrypt (_acfaa ,_ddcec ,0);if _fdcad !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_fdcad );
return _fdcad ;};};_ggfea .writeObject (int (_ddcec ),_acfaa );};return nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cf :=NewPdfAction ();_dea :=&PdfActionSetOCGState {};_dea .PdfAction =_cf ;_cf .SetContext (_dea );return _dea ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cefg *PdfPage )ToPdfObject ()_be .PdfObject {_ebcc :=_cefg ._bcadgc ;_cefg .GetPageDict ();return _ebcc ;};

// ToPdfObject implements interface PdfModel.
func (_gfbfd *PdfBorderStyle )ToPdfObject ()_be .PdfObject {_egfc :=_be .MakeDict ();if _gfbfd ._fefge !=nil {if _debe ,_ecbb :=_gfbfd ._fefge .(*_be .PdfIndirectObject );_ecbb {_debe .PdfObject =_egfc ;};};_egfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _gfbfd .W !=nil {_egfc .Set ("\u0057",_be .MakeFloat (*_gfbfd .W ));};if _gfbfd .S !=nil {_egfc .Set ("\u0053",_be .MakeName (_gfbfd .S .GetPdfName ()));};if _gfbfd .D !=nil {_egfc .Set ("\u0044",_be .MakeArrayFromIntegers (*_gfbfd .D ));};if _gfbfd ._fefge !=nil {return _gfbfd ._fefge ;
};return _egfc ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_beed *PdfAppender )Write (w _dga .Writer )error {if _beed ._agbdd {return _bdf .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_cgb :=NewPdfWriter ();_bafg ,_bggd :=_be .GetDict (_cgb ._cdcg );if !_bggd {return _bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_faaf ,_bggd :=_bafg .Get ("\u004b\u0069\u0064\u0073").(*_be .PdfObjectArray );if !_bggd {return _bdf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_geedd ,_bggd :=_bafg .Get ("\u0043\u006f\u0075n\u0074").(*_be .PdfObjectInteger );if !_bggd {return _bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_geac :=_beed ._gaef ._gfafb ;_ecbd :=_geac .GetTrailer ();if _ecbd ==nil {return _bdf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_aabb ,_bggd :=_be .GetIndirect (_ecbd .Get ("\u0052\u006f\u006f\u0074"));
if !_bggd {return _bdf .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_caca ,_bggd :=_be .GetDict (_aabb );if !_bggd {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_aabb ,*_ecbd );
return _bdf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_aaae :=range _caca .Keys (){if _cgb ._agced .Get (_aaae )==nil {_dafg :=_caca .Get (_aaae );_cgb ._agced .Set (_aaae ,_dafg );};};if _beed ._gbca !=nil {if _beed ._gbca ._cfacf {if _fbcf :=_be .TraceToDirectObject (_beed ._gbca .ToPdfObject ());
!_be .IsNullObject (_fbcf ){_cgb ._agced .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fbcf );_beed .updateObjectsDeep (_fbcf ,nil );}else {_caf .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_cgb ._agced .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_beed ._gbca .ToPdfObject ());_beed .updateObjectsDeep (_beed ._gbca .ToPdfObject (),nil );};};if _beed ._bcfd !=nil {_beed .updateObjectsDeep (_beed ._bcfd .ToPdfObject (),nil );
_cgb ._agced .Set ("\u0044\u0053\u0053",_beed ._bcfd .GetContainingPdfObject ());};if _beed ._ecgfd !=nil {_cgb ._agced .Set ("\u0050\u0065\u0072m\u0073",_beed ._ecgfd .ToPdfObject ());_beed .updateObjectsDeep (_beed ._ecgfd .ToPdfObject (),nil );};if _cgb ._dagdf .Major < 2{_cgb .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_cgb .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _gbcb ,_egbf :=_be .GetDict (_ecbd .Get ("\u0049\u006e\u0066\u006f"));_egbf {if _abgg ,_cddf :=_be .GetDict (_cgb ._ceece );_cddf {for _ ,_fcdga :=range _gbcb .Keys (){if _abgg .Get (_fcdga )==nil {_abgg .Set (_fcdga ,_gbcb .Get (_fcdga ));
};};};};if _beed ._dcbe !=nil {_cgb ._ceece =_be .MakeIndirectObject (_beed ._dcbe .ToPdfObject ());};_beed .addNewObject (_cgb ._ceece );_beed .addNewObject (_cgb ._babab );_bfbc :=false ;if len (_beed ._gaef .PageList )!=len (_beed ._bac ){_bfbc =true ;
}else {for _abc :=range _beed ._gaef .PageList {switch {case _beed ._bac [_abc ]==_beed ._gaef .PageList [_abc ]:case _beed ._bac [_abc ]==_beed .Reader .PageList [_abc ]:default:_bfbc =true ;};if _bfbc {break ;};};};if _bfbc {_beed .updateObjectsDeep (_cgb ._cdcg ,nil );
}else {_beed ._agdf [_cgb ._cdcg ]=struct{}{};};_cgb ._cdcg .ObjectNumber =_beed .Reader ._fbgef .ObjectNumber ;_beed ._cagc [_cgb ._cdcg ]=_beed .Reader ._fbgef .ObjectNumber ;_abac :=[]_be .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_gfcb :=range _beed ._bac {_abcc :=_gfcb .ToPdfObject ();*_geedd =*_geedd +1;if _gcde ,_beeb :=_abcc .(*_be .PdfIndirectObject );_beeb &&_gcde .GetParser ()==_beed ._gaef ._gfafb {_faaf .Append (&_gcde .PdfObjectReference );continue ;};if _bgab ,_gffa :=_be .GetDict (_abcc );
_gffa {_acbf ,_afgb :=_bgab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_be .PdfIndirectObject );for _afgb {_caf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_acbf );_afed ,_egba :=_acbf .PdfObject .(*_be .PdfObjectDictionary );
if !_egba {return _bdf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_abfef :=range _abac {_caf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_abfef );if _dbacg :=_bgab .Get (_abfef );
_dbacg !=nil {_caf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_gfcb ._fdaaa .Keys ())> 0&&!_bfbc {_cfdd :=_gfcb ._fdaaa ;if _bcdc :=_cfdd .Get (_abfef );_bcdc !=nil {if _dbacg !=_bcdc {_caf .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_abfef ,_bcdc );
_bgab .Set (_abfef ,_bcdc );};};};continue ;};if _cada :=_afed .Get (_abfef );_cada !=nil {_caf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_abfef );_bgab .Set (_abfef ,_cada );
};};_acbf ,_afgb =_afed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_be .PdfIndirectObject );_caf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_afed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};
if _bfbc {_bgab .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgb ._cdcg );};};_beed .updateObjectsDeep (_abcc ,nil );_faaf .Append (_abcc );};if _ ,_cegb :=_beed ._ffe .Seek (0,_dga .SeekStart );_cegb !=nil {return _cegb ;};_ffdf :=make (map[SignatureHandler ]_dga .Writer );
_bfda :=_be .MakeArray ();for _ ,_afcf :=range _beed ._bfgf {if _gffe ,_ffgc :=_be .GetIndirect (_afcf );_ffgc {if _badf ,_agcae :=_gffe .PdfObject .(*pdfSignDictionary );_agcae {_bccd :=*_badf ._bafac ;var _gfafd error ;_ffdf [_bccd ],_gfafd =_bccd .NewDigest (_badf ._cgcac );
if _gfafd !=nil {return _gfafd ;};_bfda .Append (_be .MakeInteger (0xfffff),_be .MakeInteger (0xfffff));};};};if _bfda .Len ()> 0{_bfda .Append (_be .MakeInteger (0xfffff),_be .MakeInteger (0xfffff));};for _ ,_gbaf :=range _beed ._bfgf {if _egbag ,_cdef :=_be .GetIndirect (_gbaf );
_cdef {if _gcce ,_bfgd :=_egbag .PdfObject .(*pdfSignDictionary );_bfgd {_gcce .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bfda );};};};_adf :=len (_ffdf )> 0;var _gdda _dga .Reader =_beed ._ffe ;if _adf {_efdd :=make ([]_dga .Writer ,0,len (_ffdf ));
for _ ,_beba :=range _ffdf {_efdd =append (_efdd ,_beba );};_gdda =_dga .TeeReader (_beed ._ffe ,_dga .MultiWriter (_efdd ...));};_bcff ,_eecg :=_dga .Copy (w ,_gdda );if _eecg !=nil {return _eecg ;};if len (_beed ._bfgf )==0{return nil ;};_cgb ._cegd =_bcff ;
_cgb .ObjNumOffset =_beed ._gbdb ;_cgb ._fdgcf =true ;_cgb ._fdcfe =_beed ._fgefd ;_cgb ._gdaag =_beed ._fcdc ;_cgb ._aagbf =_beed ._dfae ;_cgb ._dagdf =_beed ._gaef .PdfVersion ();_cgb ._gcdda =_beed ._cagc ;_cgb ._bbdaa =_beed ._gadd .GetCrypter ();_cgb ._gcabc =_beed ._gadd .GetEncryptObj ();
_edabd :=_beed ._gadd .GetXrefType ();if _edabd !=nil {_gbeb :=*_edabd ==_be .XrefTypeObjectStream ;_cgb ._fcfed =&_gbeb ;};_cgb ._agafe =map[_be .PdfObject ]struct{}{};_cgb ._gadag =[]_be .PdfObject {};for _ ,_cgbf :=range _beed ._bfgf {if _ ,_edae :=_beed ._agdf [_cgbf ];
_edae {continue ;};_cgb .addObject (_cgbf );};_gaff :=w ;if _adf {_gaff =_ec .NewBuffer (nil );};if _beed ._fcaf !=""&&_cgb ._bbdaa ==nil {_cgb .Encrypt ([]byte (_beed ._fcaf ),[]byte (_beed ._fcaf ),_beed ._egafb );};if _bafa :=_ecbd .Get ("\u0049\u0044");
_bafa !=nil {if _beeac ,_deag :=_be .GetArray (_bafa );_deag {_cgb ._acgaca =_beeac ;};};if _egfd :=_cgb .Write (_gaff );_egfd !=nil {return _egfd ;};if _adf {_edda :=_gaff .(*_ec .Buffer ).Bytes ();_bdfg :=_be .MakeArray ();var _afba []*pdfSignDictionary ;
var _ddag int64 ;for _ ,_aaaed :=range _cgb ._gadag {if _eaac ,_abcg :=_be .GetIndirect (_aaaed );_abcg {if _bggdd ,_gacc :=_eaac .PdfObject .(*pdfSignDictionary );_gacc {_afba =append (_afba ,_bggdd );_fdba :=_bggdd ._acagb +int64 (_bggdd ._eaagb );_bdfg .Append (_be .MakeInteger (_ddag ),_be .MakeInteger (_fdba -_ddag ));
_ddag =_bggdd ._acagb +int64 (_bggdd ._ccdgb );};};};_bdfg .Append (_be .MakeInteger (_ddag ),_be .MakeInteger (_bcff +int64 (len (_edda ))-_ddag ));_fdfg :=[]byte (_bdfg .WriteString ());for _ ,_deec :=range _afba {_adgb :=int (_deec ._acagb -_bcff );
for _abga :=_deec ._aagaf ;_abga < _deec ._eggcb ;_abga ++{_edda [_adgb +_abga ]=' ';};_fefc :=_edda [_adgb +_deec ._aagaf :_adgb +_deec ._eggcb ];copy (_fefc ,_fdfg );};var _ffefb int ;for _ ,_dbcg :=range _afba {_ecce :=int (_dbcg ._acagb -_bcff );_cgbe :=_edda [_ffefb :_ecce +_dbcg ._eaagb ];
_gegb :=*_dbcg ._bafac ;_ffdf [_gegb ].Write (_cgbe );_ffefb =_ecce +_dbcg ._ccdgb ;};for _ ,_dcdd :=range _afba {_ffcb :=_edda [_ffefb :];_beeg :=*_dcdd ._bafac ;_ffdf [_beeg ].Write (_ffcb );};for _ ,_fgbb :=range _afba {_dcaf :=int (_fgbb ._acagb -_bcff );
_bddg :=*_fgbb ._bafac ;_abcf :=_ffdf [_bddg ];if _fgg :=_bddg .Sign (_fgbb ._cgcac ,_abcf );_fgg !=nil {return _fgg ;};_fgbb ._cgcac .ByteRange =_bdfg ;_gfcc :=[]byte (_fgbb ._cgcac .Contents .WriteString ());for _bagc :=_fgbb ._aagaf ;_bagc < _fgbb ._eggcb ;
_bagc ++{_edda [_dcaf +_bagc ]=' ';};for _gddf :=_fgbb ._eaagb ;_gddf < _fgbb ._ccdgb ;_gddf ++{_edda [_dcaf +_gddf ]=' ';};_abccg :=_edda [_dcaf +_fgbb ._aagaf :_dcaf +_fgbb ._eggcb ];copy (_abccg ,_fdfg );_abccg =_edda [_dcaf +_fgbb ._eaagb :_dcaf +_fgbb ._ccdgb ];
copy (_abccg ,_gfcc );};_efbgb :=_ec .NewBuffer (_edda );_ ,_eecg =_dga .Copy (w ,_efbgb );if _eecg !=nil {return _eecg ;};};_beed ._agbdd =true ;return nil ;};func (_gccg *pdfFontType3 )baseFields ()*fontCommon {return &_gccg .fontCommon };func (_fcbc *PdfReader )newPdfActionGoTo3DViewFromDict (_bea *_be .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bea .Get ("\u0054\u0041"),V :_bea .Get ("\u0056")},nil ;
};type pdfFontType3 struct{fontCommon ;_adbcg *_be .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _be .PdfObject ;Encoding _be .PdfObject ;FontBBox _be .PdfObject ;FontMatrix _be .PdfObject ;FirstChar _be .PdfObject ;LastChar _be .PdfObject ;Widths _be .PdfObject ;Resources _be .PdfObject ;_afbae map[_ac .CharCode ]float64 ;_feacg _ac .TextEncoder ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_ecdc *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfab :=vals [0];if _cfab < 0.0||_cfab > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfab );
return nil ,ErrColorOutOfRange ;};_bfdfc :=vals [1];if _bfdfc < 0.0||_bfdfc > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfab );return nil ,ErrColorOutOfRange ;
};_gecfg :=vals [2];if _gecfg < 0.0||_gecfg > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfab );return nil ,ErrColorOutOfRange ;};_fecd :=NewPdfColorDeviceRGB (_cfab ,_bfdfc ,_gecfg );
return _fecd ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bafbg *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bafbg .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bafbg ._gbca =acroForm ;};

// ToPdfObject implements interface PdfModel.
func (_dcfb *PdfAnnotationWatermark )ToPdfObject ()_be .PdfObject {_dcfb .PdfAnnotation .ToPdfObject ();_afag :=_dcfb ._dbf ;_fdgbc :=_afag .PdfObject .(*_be .PdfObjectDictionary );_fdgbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_fdgbc .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dcfb .FixedPrint );return _afag ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_acdc *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// GetContentStream returns the XObject Form's content stream.
func (_fccdf *XObjectForm )GetContentStream ()([]byte ,error ){_bfde ,_fbefe :=_be .DecodeStream (_fccdf ._fefdg );if _fbefe !=nil {return nil ,_fbefe ;};return _bfde ,nil ;};func (_dffd *pdfFontSimple )addEncoding ()error {var (_afec string ;_eeced map[_ac .CharCode ]_ac .GlyphName ;
_cbaabb _ac .SimpleEncoder ;);if _dffd .Encoder ()!=nil {_cebbf ,_efbgc :=_dffd .Encoder ().(_ac .SimpleEncoder );if _efbgc &&_cebbf !=nil {_afec =_cebbf .BaseName ();};};if _dffd .Encoding !=nil {_gegfe ,_abgdf ,_efec :=_dffd .getFontEncoding ();if _efec !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dffd ._abdd ,_dffd ._cfcgc ,_dffd .Encoding ,_dffd .Encoding ,_efec );
return _efec ;};if _gegfe !=""{_afec =_gegfe ;};_eeced =_abgdf ;_cbaabb ,_efec =_ac .NewSimpleTextEncoder (_afec ,_eeced );if _efec !=nil {return _efec ;};};if _cbaabb ==nil {_ccaaf :=_dffd ._gfcg ;if _ccaaf !=nil {switch _dffd ._cfcgc {case "\u0054\u0079\u0070e\u0031":if _ccaaf .fontFile !=nil &&_ccaaf .fontFile ._aabe !=nil {_caf .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_cbaabb =_ccaaf .fontFile ._aabe ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ccaaf ._fdfcg !=nil {_caf .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_fdcb ,_ccceb :=_ccaaf ._fdfcg .MakeEncoder ();
if _ccceb ==nil {_cbaabb =_fdcb ;};};};};};if _cbaabb !=nil {if _eeced !=nil {_caf .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eeced ,_dffd .baseFields ());
_cbaabb =_ac .ApplyDifferences (_cbaabb ,_eeced );};_dffd .SetEncoder (_cbaabb );};return nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cgc :=NewPdfAnnotation ();_fcd :=&PdfAnnotationStamp {};_fcd .PdfAnnotation =_cgc ;_fcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgc .SetContext (_fcd );return _fcd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_baeb *PdfAnnotation )GetContainingPdfObject ()_be .PdfObject {return _baeb ._dbf };func _ccabg ()_ba .Time {_ccgeg .Lock ();defer _ccgeg .Unlock ();return _gbecfb };

// ToPdfObject converts date to a PDF string object.
func (_eafec *PdfDate )ToPdfObject ()_be .PdfObject {_fgfec :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_eafec ._feaeeg ,_eafec ._fggdd ,_eafec ._bcbfag ,_eafec ._aceag ,_eafec ._edaea ,_eafec ._bcae ,_eafec ._badac ,_eafec ._bbdbe ,_eafec ._dafcb );
return _be .MakeString (_fgfec );};

// ToPdfObject implements interface PdfModel.
func (_db *PdfActionGoToE )ToPdfObject ()_be .PdfObject {_db .PdfAction .ToPdfObject ();_bg :=_db ._deb ;_bcdf :=_bg .PdfObject .(*_be .PdfObjectDictionary );_bcdf .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeGoToE )));if _db .F !=nil {_bcdf .Set ("\u0046",_db .F .ToPdfObject ());
};_bcdf .SetIfNotNil ("\u0044",_db .D );_bcdf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_db .NewWindow );_bcdf .SetIfNotNil ("\u0054",_db .T );return _bg ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_ffgd *PdfColorspaceDeviceN )ToPdfObject ()_be .PdfObject {_agbda :=_be .MakeArray (_be .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_agbda .Append (_ffgd .ColorantNames );_agbda .Append (_ffgd .AlternateSpace .ToPdfObject ());_agbda .Append (_ffgd .TintTransform .ToPdfObject ());
if _ffgd .Attributes !=nil {_agbda .Append (_ffgd .Attributes .ToPdfObject ());};if _ffgd ._faab !=nil {_ffgd ._faab .PdfObject =_agbda ;return _ffgd ._faab ;};return _agbda ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_bcadg _be .ParserMetadata ;};func (_gaagf *PdfWriter )writeOutlines ()error {if _gaagf ._gbagdg ==nil {return nil ;};_caf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gaagf ._gbagdg );
_ecfd :=_gaagf ._gbagdg .ToPdfObject ();_caf .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ecfd ,_ecfd ,_ecfd );_gaagf ._agced .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ecfd );
_bcbeb :=_gaagf .addObjects (_ecfd );if _bcbeb !=nil {return _bcbeb ;};return nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_gfec *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_aeda *PdfFont )CharcodesToStrings (charcodes []_ac .CharCode )([]string ,int ,int ){_deeff :=_aeda .baseFields ();_edbf :=make ([]string ,0,len (charcodes ));_ffgcb :=0;_ggag :=_aeda .Encoder ();_fbcb :=_deeff ._baag !=nil &&_aeda .IsSimple ()&&_aeda .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_bb .Contains (_deeff ._baag .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_fbcb &&_ggag !=nil {switch _ccddf :=_ggag .(type ){case _ac .SimpleEncoder :_bbgae :=_ccddf .BaseName ();if _ ,_becce :=_ddbf [_bbgae ];_becce {for _ ,_bgcf :=range charcodes {if _ggfdb ,_baea :=_ggag .CharcodeToRune (_bgcf );_baea {_edbf =append (_edbf ,string (_ggfdb ));
}else {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bgcf ,charcodes ,_deeff .isCIDFont (),_aeda ,_ggag );
_ffgcb ++;_edbf =append (_edbf ,_gde .MissingCodeString );};};return _edbf ,len (_edbf ),_ffgcb ;};};};for _ ,_fcbf :=range charcodes {if _deeff ._baag !=nil {if _dbdeb ,_ebgeg :=_deeff ._baag .CharcodeToUnicode (_gde .CharCode (_fcbf ));_ebgeg {_edbf =append (_edbf ,_dbdeb );
continue ;};};if _ggag !=nil {if _fgdf ,_fbgfb :=_ggag .CharcodeToRune (_fcbf );_fbgfb {_edbf =append (_edbf ,string (_fgdf ));continue ;};};_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fcbf ,charcodes ,_deeff .isCIDFont (),_aeda ,_ggag );
_ffgcb ++;_edbf =append (_edbf ,_gde .MissingCodeString );};if _ffgcb !=0{_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_ffgcb ,_aeda );
};return _edbf ,len (_edbf ),_ffgcb ;};type pdfFont interface{_ecg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_be .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_ceagf *_be .PdfObjectDictionary ;Type *_be .PdfObjectName ;TransformMethod *_be .PdfObjectName ;TransformParams _be .PdfObject ;Data _be .PdfObject ;DigestMethod *_be .PdfObjectName ;};func (_eegba *PdfWriter )addObjects (_dgaagf _be .PdfObject )error {_caf .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _fdgge ,_bcea :=_dgaagf .(*_be .PdfIndirectObject );_bcea {_caf .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_caf .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_dgaagf ,_fdgge );_caf .Log .Trace ("\u002d\u0020\u0025\u0073",_fdgge .PdfObject );
if _eegba .addObject (_fdgge ){_aebdd :=_eegba .addObjects (_fdgge .PdfObject );if _aebdd !=nil {return _aebdd ;};};return nil ;};if _afaff ,_gaaabb :=_dgaagf .(*_be .PdfObjectStream );_gaaabb {_caf .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");
_caf .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_dgaagf ,_dgaagf );if _eegba .addObject (_afaff ){_egbfg :=_eegba .addObjects (_afaff .PdfObjectDictionary );if _egbfg !=nil {return _egbfg ;};};return nil ;};if _aggag ,_bddgdg :=_dgaagf .(*_be .PdfObjectDictionary );
_bddgdg {_caf .Log .Trace ("\u0044\u0069\u0063\u0074");_caf .Log .Trace ("\u002d\u0020\u0025\u0073",_dgaagf );for _ ,_cbbfb :=range _aggag .Keys (){_cfecf :=_aggag .Get (_cbbfb );if _agdaf ,_ggff :=_cfecf .(*_be .PdfObjectReference );_ggff {_cfecf =_agdaf .Resolve ();
_aggag .Set (_cbbfb ,_cfecf );};if _cbbfb !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _cegfbe :=_eegba .addObjects (_cfecf );_cegfbe !=nil {return _cegfbe ;};}else {if _ ,_edaegg :=_cfecf .(*_be .PdfObjectNull );_edaegg {continue ;};if _gbfde :=_eegba .hasObject (_cfecf );
!_gbfde {_caf .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cfecf ,_cfecf ,_cfecf );_eegba ._dfcce [_cfecf ]=append (_eegba ._dfcce [_cfecf ],_aggag );
};};};return nil ;};if _bbfga ,_fffe :=_dgaagf .(*_be .PdfObjectArray );_fffe {_caf .Log .Trace ("\u0041\u0072\u0072a\u0079");_caf .Log .Trace ("\u002d\u0020\u0025\u0073",_dgaagf );if _bbfga ==nil {return _bdf .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gagf ,_ebged :=range _bbfga .Elements (){if _dffaf ,_ggdge :=_ebged .(*_be .PdfObjectReference );_ggdge {_ebged =_dffaf .Resolve ();_bbfga .Set (_gagf ,_ebged );};if _bdadf :=_eegba .addObjects (_ebged );_bdadf !=nil {return _bdadf ;};};return nil ;
};if _ ,_edfaeg :=_dgaagf .(*_be .PdfObjectReference );_edfaeg {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_dgaagf );
return _bdf .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// Encoder returns the font's text encoder.
func (_gfed *pdfFontSimple )Encoder ()_ac .TextEncoder {if _gfed ._ceec !=nil {return _gfed ._ceec ;};if _gfed ._fcege !=nil {return _gfed ._fcege ;};_daaa ,_ :=_ac .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _daaa ;};func (_bgf *PdfReader )newPdfAnnotationTextFromDict (_gcfe *_be .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cfeb :=PdfAnnotationText {};_gfbfe ,_aacdg :=_bgf .newPdfAnnotationMarkupFromDict (_gcfe );if _aacdg !=nil {return nil ,_aacdg ;
};_cfeb .PdfAnnotationMarkup =_gfbfe ;_cfeb .Open =_gcfe .Get ("\u004f\u0070\u0065\u006e");_cfeb .Name =_gcfe .Get ("\u004e\u0061\u006d\u0065");_cfeb .State =_gcfe .Get ("\u0053\u0074\u0061t\u0065");_cfeb .StateModel =_gcfe .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_cfeb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cfge *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcdgd ,_ccba :=_be .GetNumbersAsFloat (objects );
if _ccba !=nil {return nil ,_ccba ;};return _cfge .ColorFromFloats (_bcdgd );};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_fccd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_bdf .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_bgabb ,_cbbc :=_fg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bbbgb ,img ._ffedg );if _cbbc !=nil {return img ,_cbbc ;};_cbc ,_cbbc :=_fg .NRGBAConverter .Convert (_bgabb );if _cbbc !=nil {return img ,_cbbc ;
};_acgc :=_fggd (_cbc .Base ());_caf .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_caf .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_caf .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_acgc .Data );
_caf .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_acgc );return _acgc ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_gadb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gadb ._egbcf .getFontDescriptor (),nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_bedb *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_dcggg *PdfAnnotationMarkup )appendToPdfDictionary (_abg *_be .PdfObjectDictionary ){_abg .SetIfNotNil ("\u0054",_dcggg .T );if _dcggg .Popup !=nil {_abg .Set ("\u0050\u006f\u0070u\u0070",_dcggg .Popup .ToPdfObject ());
};_abg .SetIfNotNil ("\u0043\u0041",_dcggg .CA );_abg .SetIfNotNil ("\u0052\u0043",_dcggg .RC );_abg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dcggg .CreationDate );_abg .SetIfNotNil ("\u0049\u0052\u0054",_dcggg .IRT );
_abg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_dcggg .Subj );_abg .SetIfNotNil ("\u0052\u0054",_dcggg .RT );_abg .SetIfNotNil ("\u0049\u0054",_dcggg .IT );_abg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_dcggg .ExData );};func (_dcbb fontCommon )isCIDFont ()bool {if _dcbb ._cfcgc ==""{_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dcbb );
};_aedc :=false ;switch _dcbb ._cfcgc {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_aedc =true ;};_caf .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_aedc ,_dcbb );
return _aedc ;};func _gcgfg (_caaedc _be .PdfObject )(*PdfFunctionType2 ,error ){_gagbf :=&PdfFunctionType2 {};var _cbdaf *_be .PdfObjectDictionary ;if _fccg ,_gcgg :=_caaedc .(*_be .PdfIndirectObject );_gcgg {_abaac ,_cbcbe :=_fccg .PdfObject .(*_be .PdfObjectDictionary );
if !_cbcbe {return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gagbf ._gabd =_fccg ;_cbdaf =_abaac ;}else if _agfg ,_gcegbe :=_caaedc .(*_be .PdfObjectDictionary );_gcegbe {_cbdaf =_agfg ;
}else {return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_caf .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_cbdaf .String ());_ddec ,_bbaebb :=_be .TraceToDirectObject (_cbdaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_be .PdfObjectArray );
if !_bbaebb {_caf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ddec .Len ()< 0||_ddec .Len ()%2!=0{_caf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_bdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_gaacg ,_bafbga :=_ddec .ToFloat64Array ();if _bafbga !=nil {return nil ,_bafbga ;};_gagbf .Domain =_gaacg ;_ddec ,_bbaebb =_be .TraceToDirectObject (_cbdaf .Get ("\u0052\u0061\u006eg\u0065")).(*_be .PdfObjectArray );if _bbaebb {if _ddec .Len ()< 0||_ddec .Len ()%2!=0{return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bgegg ,_bcbbf :=_ddec .ToFloat64Array ();if _bcbbf !=nil {return nil ,_bcbbf ;};_gagbf .Range =_bgegg ;};_ddec ,_bbaebb =_be .TraceToDirectObject (_cbdaf .Get ("\u0043\u0030")).(*_be .PdfObjectArray );if _bbaebb {_bccfa ,_gbbaa :=_ddec .ToFloat64Array ();
if _gbbaa !=nil {return nil ,_gbbaa ;};_gagbf .C0 =_bccfa ;};_ddec ,_bbaebb =_be .TraceToDirectObject (_cbdaf .Get ("\u0043\u0031")).(*_be .PdfObjectArray );if _bbaebb {_bagee ,_ageaa :=_ddec .ToFloat64Array ();if _ageaa !=nil {return nil ,_ageaa ;};_gagbf .C1 =_bagee ;
};if len (_gagbf .C0 )!=len (_gagbf .C1 ){_caf .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_be .ErrRangeError ;};N ,_bafbga :=_be .GetNumberAsFloat (_be .TraceToDirectObject (_cbdaf .Get ("\u004e")));
if _bafbga !=nil {_caf .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_cbdaf .String ());return nil ,_bafbga ;};_gagbf .N =N ;
return _gagbf ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_afaa *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _afaa ._ffgg .(*PdfShadingPattern );};var (_fgbbb =_e .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_fgggff =_e .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_afbg =_e .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_cbgb ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_facd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_bdgc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_baedb *PdfWriter )optimize ()error {if _baedb ._cbffc ==nil {return nil ;};var _gaecg error ;_baedb ._gadag ,_gaecg =_baedb ._cbffc .Optimize (_baedb ._gadag );if _gaecg !=nil {return _gaecg ;};_cggdd :=make (map[_be .PdfObject ]struct{},len (_baedb ._gadag ));
for _ ,_eabda :=range _baedb ._gadag {_cggdd [_eabda ]=struct{}{};};_baedb ._agafe =_cggdd ;return nil ;};func _eecd (_ebaae *_be .PdfObjectDictionary ,_dccc *fontCommon )(*pdfCIDFontType2 ,error ){if _dccc ._cfcgc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_caf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dccc );
return nil ,_be .ErrRangeError ;};_cagd :=_cedbe (_dccc );_eggb ,_gdae :=_be .GetDict (_ebaae .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gdae {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dccc );
return nil ,ErrRequiredAttributeMissing ;};_cagd .CIDSystemInfo =_eggb ;_cagd .DW =_ebaae .Get ("\u0044\u0057");_cagd .W =_ebaae .Get ("\u0057");_cagd .DW2 =_ebaae .Get ("\u0044\u0057\u0032");_cagd .W2 =_ebaae .Get ("\u0057\u0032");_cagd .CIDToGIDMap =_ebaae .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_cagd ._eaaa =1000.0;if _cdgcb ,_gadga :=_be .GetNumberAsFloat (_cagd .DW );_gadga ==nil {_cagd ._eaaa =_cdgcb ;};_abccga ,_abbd :=_acbe (_cagd .W );if _abbd !=nil {return nil ,_abbd ;};if _abccga ==nil {_abccga =map[_ac .CharCode ]float64 {};};_cagd ._ddab =_abccga ;
return _cagd ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_baafd *PdfFunctionType2 )ToPdfObject ()_be .PdfObject {_edac :=_be .MakeDict ();_edac .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_be .MakeInteger (2));_egab :=&_be .PdfObjectArray {};for _ ,_ccbc :=range _baafd .Domain {_egab .Append (_be .MakeFloat (_ccbc ));
};_edac .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egab );if _baafd .Range !=nil {_cebgg :=&_be .PdfObjectArray {};for _ ,_gbdf :=range _baafd .Range {_cebgg .Append (_be .MakeFloat (_gbdf ));};_edac .Set ("\u0052\u0061\u006eg\u0065",_cebgg );};if _baafd .C0 !=nil {_ffege :=&_be .PdfObjectArray {};
for _ ,_edge :=range _baafd .C0 {_ffege .Append (_be .MakeFloat (_edge ));};_edac .Set ("\u0043\u0030",_ffege );};if _baafd .C1 !=nil {_baeg :=&_be .PdfObjectArray {};for _ ,_dbeb :=range _baafd .C1 {_baeg .Append (_be .MakeFloat (_dbeb ));};_edac .Set ("\u0043\u0031",_baeg );
};_edac .Set ("\u004e",_be .MakeFloat (_baafd .N ));if _baafd ._gabd !=nil {_baafd ._gabd .PdfObject =_edac ;return _baafd ._gabd ;};return _edac ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_egd :=PdfColorCalRGB {a ,b ,c };return &_egd ;};

// SetVersion sets the PDF version of the output file.
func (_fadgga *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fadgga ._dagdf .Major =majorVersion ;_fadgga ._dagdf .Minor =minorVersion ;};func _cceeb (_bbed _be .PdfObject )(*fontFile ,error ){_caf .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bbed );
_fgaf :=&fontFile {};_bbed =_be .TraceToDirectObject (_bbed );_dfdec ,_eccf :=_bbed .(*_be .PdfObjectStream );if !_eccf {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bbed );
return nil ,_be .ErrTypeError ;};_gcac :=_dfdec .PdfObjectDictionary ;_fgged ,_gbede :=_be .DecodeStream (_dfdec );if _gbede !=nil {return nil ,_gbede ;};_caaed ,_eccf :=_be .GetNameVal (_gcac .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_eccf {_fgaf ._eagcb =_caaed ;
if _caaed =="\u0054\u0079\u0070\u0065\u0031\u0043"{_caf .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_ccbg ,_ :=_be .GetIntVal (_gcac .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_acgf ,_ :=_be .GetIntVal (_gcac .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ccbg > len (_fgged ){_ccbg =len (_fgged );};
if _ccbg +_acgf > len (_fgged ){_acgf =len (_fgged )-_ccbg ;};_afad :=_fgged [:_ccbg ];var _ccade []byte ;if _acgf > 0{_ccade =_fgged [_ccbg :_ccbg +_acgf ];};if _ccbg > 0&&_acgf > 0{_cgdc :=_fgaf .loadFromSegments (_afad ,_ccade );if _cgdc !=nil {return nil ,_cgdc ;
};};return _fgaf ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bgbabb *pdfFontSimple )SetEncoder (encoder _ac .TextEncoder ){_bgbabb ._ceec =encoder };

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_dfcgg *PdfReader )GetCatalogMarkInfo ()(_be .PdfObject ,bool ){if _dfcgg ._dcdbf ==nil {return nil ,false ;};_ecbbc :=_dfcgg ._dcdbf .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _ecbbc ,_ecbbc !=nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_efged *PdfShadingPattern )ToPdfObject ()_be .PdfObject {_efged .PdfPattern .ToPdfObject ();_cbafae :=_efged .getDict ();if _efged .Shading !=nil {_cbafae .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_efged .Shading .ToPdfObject ());};if _efged .Matrix !=nil {_cbafae .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_efged .Matrix );
};if _efged .ExtGState !=nil {_cbafae .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_efged .ExtGState );};return _efged ._fceaa ;};

// String returns a string that describes `base`.
func (_adfb fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_adfb .coreString ());};func (_bgd *PdfReader )newPdfAnnotationSquareFromDict (_ffaa *_be .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gec :=PdfAnnotationSquare {};
_cadg ,_fde :=_bgd .newPdfAnnotationMarkupFromDict (_ffaa );if _fde !=nil {return nil ,_fde ;};_gec .PdfAnnotationMarkup =_cadg ;_gec .BS =_ffaa .Get ("\u0042\u0053");_gec .IC =_ffaa .Get ("\u0049\u0043");_gec .BE =_ffaa .Get ("\u0042\u0045");_gec .RD =_ffaa .Get ("\u0052\u0044");
return &_gec ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_facac *PdfReader )GetIndirectObjectByNumber (number int )(_be .PdfObject ,error ){_gdbcc ,_eagd :=_facac ._gfafb .LookupByNumber (number );return _gdbcc ,_eagd ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _be .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _be .PdfObject ;Contents _be .PdfObject ;
Rotate *int64 ;Group _be .PdfObject ;Thumb _be .PdfObject ;B _be .PdfObject ;Dur _be .PdfObject ;Trans _be .PdfObject ;AA _be .PdfObject ;Metadata _be .PdfObject ;PieceInfo _be .PdfObject ;StructParents _be .PdfObject ;ID _be .PdfObject ;PZ _be .PdfObject ;
SeparationInfo _be .PdfObject ;Tabs _be .PdfObject ;TemplateInstantiated _be .PdfObject ;PresSteps _be .PdfObject ;UserUnit _be .PdfObject ;VP _be .PdfObject ;Annots _be .PdfObject ;_geca []*PdfAnnotation ;_afccg *_be .PdfObjectDictionary ;_bcadgc *_be .PdfIndirectObject ;
_fdaaa _be .PdfObjectDictionary ;_ffge *PdfReader ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_be .PdfObject ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bbdc :=NewPdfAnnotation ();_eee :=&PdfAnnotationHighlight {};_eee .PdfAnnotation =_bbdc ;_eee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbdc .SetContext (_eee );return _eee ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_be .PdfObjectBool ;SigFlags *_be .PdfObjectInteger ;CO *_be .PdfObjectArray ;DR *PdfPageResources ;DA *_be .PdfObjectString ;Q *_be .PdfObjectInteger ;XFA _be .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _be .PdfObject ;_fabcf *_be .PdfIndirectObject ;_cfacf bool ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _be .PdfObject ;FS _be .PdfObject ;F _be .PdfObject ;UF _be .PdfObject ;DOS _be .PdfObject ;Mac _be .PdfObject ;Unix _be .PdfObject ;ID _be .PdfObject ;V _be .PdfObject ;EF _be .PdfObject ;RF _be .PdfObject ;Desc _be .PdfObject ;
CI _be .PdfObject ;_fbfa _be .PdfObject ;};func (_dafeg *PdfFunctionType0 )processSamples ()error {_dacbb :=_bc .ResampleBytes (_dafeg ._dffa ,_dafeg .BitsPerSample );_dafeg ._dbfge =_dacbb ;return nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_acd :=NewPdfAction ();_ggg :=&PdfActionURI {};_ggg .PdfAction =_acd ;_acd .SetContext (_ggg );return _ggg ;};func (_fafag *PdfReader )buildNameNodes (_gbecf *_be .PdfIndirectObject ,_gffbca map[_be .PdfObject ]struct{})error {if _gbecf ==nil {return nil ;
};if _ ,_bbgfd :=_gffbca [_gbecf ];_bbgfd {_caf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gbecf .ObjectNumber );
return nil ;};_gffbca [_gbecf ]=struct{}{};_fggcb ,_dbge :=_gbecf .PdfObject .(*_be .PdfObjectDictionary );if !_dbge {return _bdf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _bagg ,_efgbf :=_be .GetDict (_fggcb .Get ("\u0044\u0065\u0073t\u0073"));
_efgbf {_fggec ,_gffeg :=_be .GetArray (_bagg .Get ("\u004b\u0069\u0064\u0073"));if !_gffeg {return _bdf .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_caf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_fggec );
for _efeda ,_egcde :=range _fggec .Elements (){_ggbgg ,_ffeag :=_be .GetIndirect (_egcde );if !_ffeag {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_ggbgg );
return _bdf .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_fggec .Set (_efeda ,_ggbgg );_ffdaa :=_fafag .buildNameNodes (_ggbgg ,_gffbca );if _ffdaa !=nil {return _ffdaa ;
};};};if _efdeg ,_gffed :=_be .GetDict (_fggcb );_gffed {if !_be .IsNullObject (_efdeg .Get ("\u004b\u0069\u0064\u0073")){if _gebc ,_dccdg :=_be .GetArray (_efdeg .Get ("\u004b\u0069\u0064\u0073"));_dccdg {for _ggdee ,_dgbcc :=range _gebc .Elements (){if _gcgfba ,_aefb :=_be .GetIndirect (_dgbcc );
_aefb {_gebc .Set (_ggdee ,_gcgfba );_cbcgd :=_fafag .buildNameNodes (_gcgfba ,_gffbca );if _cbcgd !=nil {return _cbcgd ;};};};};};};return nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dcbdb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dcbdb .Alternate ==nil {_caf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dcbdb .N ==1{_caf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cacaf :=NewPdfColorspaceDeviceGray ();return _cacaf .ImageToRGB (img );}else if _dcbdb .N ==3{_caf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _dcbdb .N ==4{_caf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fdbae :=NewPdfColorspaceDeviceCMYK ();return _fdbae .ImageToRGB (img );}else {return img ,_bdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_caf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dcbdb );
_cggc ,_faedc :=_dcbdb .Alternate .ImageToRGB (img );_caf .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_caf .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_cggc );
return _cggc ,_faedc ;};

// Items returns all children outline items.
func (_ffea *Outline )Items ()[]*OutlineItem {return _ffea .Entries };

// ToPdfObject implements interface PdfModel.
func (_bgfaa *PdfSignatureReference )ToPdfObject ()_be .PdfObject {_bgfda :=_be .MakeDict ();_bgfda .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bgfaa .Type );_bgfda .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_bgfaa .TransformMethod );
_bgfda .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_bgfaa .TransformParams );_bgfda .SetIfNotNil ("\u0044\u0061\u0074\u0061",_bgfaa .Data );_bgfda .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_bgfaa .DigestMethod );
return _bgfda ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_agdc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetFillImage get attached model.Image in push button.
func (_cdacf *PdfFieldButton )GetFillImage ()*Image {if _cdacf .IsPush (){return _cdacf ._gfaaa ;};return nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_bfg :=&PdfAction {};_bfg ._deb =_be .MakeIndirectObject (_be .MakeDict ());return _bfg ;};

// IsSimple returns true if `font` is a simple font.
func (_bcdeb *PdfFont )IsSimple ()bool {_ ,_bfdcb :=_bcdeb ._egbcf .(*pdfFontSimple );return _bfdcb };

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_aeedg *PdfReader )GetPageLabels ()(_be .PdfObject ,error ){_efbac :=_be .ResolveReference (_aeedg ._dcdbf .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _efbac ==nil {return nil ,nil ;};if !_aeedg ._eaff {_ffaac :=_aeedg .traverseObjectData (_efbac );
if _ffaac !=nil {return nil ,_ffaac ;};};return _efbac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acaf *PdfActionResetForm )ToPdfObject ()_be .PdfObject {_acaf .PdfAction .ToPdfObject ();_cbg :=_acaf ._deb ;_acc :=_cbg .PdfObject .(*_be .PdfObjectDictionary );_acc .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeResetForm )));_acc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_acaf .Fields );
_acc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_acaf .Flags );return _cbg ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_dfcg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgffe ,_gfac :=color .(*PdfColorCalGray );if !_gfac {_caf .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_dgffe .Val ();X :=_dfcg .WhitePoint [0]*_eg .Pow (ANorm ,_dfcg .Gamma );Y :=_dfcg .WhitePoint [1]*_eg .Pow (ANorm ,_dfcg .Gamma );
Z :=_dfcg .WhitePoint [2]*_eg .Pow (ANorm ,_dfcg .Gamma );_fagea :=3.240479*X +-1.537150*Y +-0.498535*Z ;_adcb :=-0.969256*X +1.875992*Y +0.041556*Z ;_efdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_fagea =_eg .Min (_eg .Max (_fagea ,0),1.0);_adcb =_eg .Min (_eg .Max (_adcb ,0),1.0);
_efdb =_eg .Min (_eg .Max (_efdb ,0),1.0);return NewPdfColorDeviceRGB (_fagea ,_adcb ,_efdb ),nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _ag .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_be .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_be .MakeInteger (int64 (permission )),V :_be .MakeName ("\u0031\u002e\u0032")};
};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fa .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_abebg *PdfAnnotationUnderline )ToPdfObject ()_be .PdfObject {_abebg .PdfAnnotation .ToPdfObject ();_cgd :=_abebg ._dbf ;_ddfc :=_cgd .PdfObject .(*_be .PdfObjectDictionary );_abebg .PdfAnnotationMarkup .appendToPdfDictionary (_ddfc );_ddfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ddfc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_abebg .QuadPoints );return _cgd ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_ggga *PdfSignature )GetDocMDPPermission ()(_ag .DocMDPPermission ,bool ){for _ ,_ffafd :=range _ggga .Reference .Elements (){if _eefea ,_fdfbd :=_be .GetDict (_ffafd );_fdfbd {if _gdcbf ,_eacgf :=_be .GetNameVal (_eefea .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_eacgf &&_gdcbf =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _bacdg ,_eaceg :=_be .GetDict (_eefea .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_eaceg {if P ,_acafag :=_be .GetIntVal (_bacdg .Get ("\u0050"));
_acafag {return _ag .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_acb :=&PdfAppender {_ffe :reader ._dbaba ,Reader :reader ,_gadd :reader ._gfafb ,_dba :reader ._afddg };_gcfc ,_dage :=_acb ._ffe .Seek (0,_dga .SeekEnd );
if _dage !=nil {return nil ,_dage ;};_acb ._dfae =_gcfc ;if _ ,_dage =_acb ._ffe .Seek (0,_dga .SeekStart );_dage !=nil {return nil ,_dage ;};_acb ._gaef ,_dage =NewPdfReaderWithOpts (_acb ._ffe ,opts );if _dage !=nil {return nil ,_dage ;};for _ ,_bfgg :=range _acb .Reader .GetObjectNums (){if _acb ._gbdb < _bfgg {_acb ._gbdb =_bfgg ;
};};_acb ._fgefd =_acb ._gadd .GetXrefTable ();_acb ._fcdc =_acb ._gadd .GetXrefOffset ();_acb ._bac =append (_acb ._bac ,_acb ._gaef .PageList ...);_acb ._ccaa =make (map[_be .PdfObject ]struct{});_acb ._cagc =make (map[_be .PdfObject ]int64 );_acb ._agdf =make (map[_be .PdfObject ]struct{});
_acb ._gbca =_acb ._gaef .AcroForm ;_acb ._bcfd =_acb ._gaef .DSS ;if opts !=nil {_acb ._fcaf =opts .Password ;};if encryptOptions !=nil {_acb ._egafb =encryptOptions ;};return _acb ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_dgag :=NewPdfAction ();_df :=&PdfActionImportData {};_df .PdfAction =_dgag ;_dgag .SetContext (_df );return _df ;};func (_afefe *PdfReader )buildPageList (_acaee *_be .PdfIndirectObject ,_bbbcb *_be .PdfIndirectObject ,_ddbg map[_be .PdfObject ]struct{})error {if _acaee ==nil {return nil ;
};if _ ,_bcbbff :=_ddbg [_acaee ];_bcbbff {_caf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_acaee .ObjectNumber );
return nil ;};_ddbg [_acaee ]=struct{}{};_fcaca ,_ddgd :=_acaee .PdfObject .(*_be .PdfObjectDictionary );if !_ddgd {return _bdf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_ecebd ,_ddgd :=(*_fcaca ).Get ("\u0054\u0079\u0070\u0065").(*_be .PdfObjectName );
if !_ddgd {if _fcaca .Get ("\u004b\u0069\u0064\u0073")==nil {return _bdf .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_caf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_ecebd =_be .MakeName ("\u0050\u0061\u0067e\u0073");_fcaca .Set ("\u0054\u0079\u0070\u0065",_ecebd );};_caf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_ecebd ,_acaee );
if *_ecebd =="\u0050\u0061\u0067\u0065"{_afcfe ,_gcaa :=_afefe .newPdfPageFromDict (_fcaca );if _gcaa !=nil {return _gcaa ;};_afcfe .setContainer (_acaee );if _bbbcb !=nil {_fcaca .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbbcb );};_afefe ._cgbdb =append (_afefe ._cgbdb ,_acaee );
_afefe .PageList =append (_afefe .PageList ,_afcfe );return nil ;};if *_ecebd !="\u0050\u0061\u0067e\u0073"{_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_ecebd );
return _bdf .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _bbbcb !=nil {_fcaca .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbbcb );};if !_afefe ._eaff {_feeba :=_afefe .traverseObjectData (_acaee );if _feeba !=nil {return _feeba ;};};_gccc ,_aggf :=_afefe ._gfafb .Resolve (_fcaca .Get ("\u004b\u0069\u0064\u0073"));
if _aggf !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _aggf ;};var _fgffac *_be .PdfObjectArray ;
_fgffac ,_ddgd =_gccc .(*_be .PdfObjectArray );if !_ddgd {_bcbgd ,_beag :=_gccc .(*_be .PdfIndirectObject );if !_beag {return _bdf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fgffac ,_ddgd =_bcbgd .PdfObject .(*_be .PdfObjectArray );
if !_ddgd {return _bdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_caf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_fgffac );
for _eeccg ,_gecb :=range _fgffac .Elements (){_dbegfd ,_daecc :=_be .GetIndirect (_gecb );if !_daecc {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dbegfd );
return _bdf .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fgffac .Set (_eeccg ,_dbegfd );_aggf =_afefe .buildPageList (_dbegfd ,_acaee ,_ddbg );if _aggf !=nil {return _aggf ;
};};return nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_deeef *PdfPageResources )GetPatternByName (keyName _be .PdfObjectName )(*PdfPattern ,bool ){if _deeef .Pattern ==nil {return nil ,false ;};_gafff ,_edabg :=_be .TraceToDirectObject (_deeef .Pattern ).(*_be .PdfObjectDictionary );if !_edabg {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_deeef .Pattern );
return nil ,false ;};if _ceeca :=_gafff .Get (keyName );_ceeca !=nil {_agce ,_cgebc :=_abdedf (_ceeca );if _cgebc !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_cgebc );
return nil ,false ;};return _agce ,true ;};return nil ,false ;};func (_ccgg *PdfReader )loadPerms ()(*Permissions ,error ){if _cbabf :=_ccgg ._dcdbf .Get ("\u0050\u0065\u0072m\u0073");_cbabf !=nil {if _acec ,_fdcf :=_be .GetDict (_cbabf );_fdcf {_bgag :=_acec .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _bgag ==nil {return nil ,nil ;};if _edeag ,_deede :=_be .GetIndirect (_bgag );_deede {_gffc ,_ffgee :=_ccgg .newPdfSignatureFromIndirect (_edeag );if _ffgee !=nil {return nil ,_ffgee ;};return NewPermissions (_gffc ),nil ;};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_fabcf :_be .MakeIndirectObject (_be .MakeDict ())};};

// ToPdfObject implements interface PdfModel.
func (_bbb *PdfActionGoToR )ToPdfObject ()_be .PdfObject {_bbb .PdfAction .ToPdfObject ();_bcd :=_bbb ._deb ;_ddb :=_bcd .PdfObject .(*_be .PdfObjectDictionary );_ddb .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeGoToR )));if _bbb .F !=nil {_ddb .Set ("\u0046",_bbb .F .ToPdfObject ());
};_ddb .SetIfNotNil ("\u0044",_bbb .D );_ddb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bbb .NewWindow );return _bcd ;};func (_ggbab *PdfWriter )mapObjectStreams (_fbcge bool )(map[_be .PdfObject ]bool ,bool ){_bdcdd :=make (map[_be .PdfObject ]bool );
for _ ,_cfbbc :=range _ggbab ._gadag {if _eegd ,_eebda :=_cfbbc .(*_be .PdfObjectStreams );_eebda {_fbcge =true ;for _ ,_facae :=range _eegd .Elements (){_bdcdd [_facae ]=true ;if _bfeeac ,_bfbab :=_facae .(*_be .PdfIndirectObject );_bfbab {_bdcdd [_bfeeac .PdfObject ]=true ;
};};};};return _bdcdd ,_fbcge ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _dga .ReadSeeker )(*CompliancePdfReader ,error ){const _adcfg ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_eef ,_defab :=_eagga (rs ,&ReaderOpts {ComplianceMode :true },false ,_adcfg );
if _defab !=nil {return nil ,_defab ;};return &CompliancePdfReader {PdfReader :_eef },nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_ccde *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _bdf .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_ccde .S =subtype ;return nil ;};func _agdde (_bfcbb _be .PdfObject ){_caf .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bfcbb ,_bfcbb .String ());if _daafdd ,_cecga :=_bfcbb .(*_be .PdfObjectStream );_cecga {_eaebe ,_bfacd :=_be .DecodeStream (_daafdd );
if _bfacd !=nil {_caf .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_bfacd );return ;};_caf .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_eaebe );}else if _bdcab ,_bgcbe :=_bfcbb .(*_be .PdfIndirectObject );
_bgcbe {_caf .Log .Debug ("\u0025\u0054\u0020%\u0076",_bdcab .PdfObject ,_bdcab .PdfObject );_caf .Log .Debug ("\u0025\u0073",_bdcab .PdfObject .String ());};};

// GetStructRoot gets the StructTreeRoot object
func (_bfed *PdfPage )GetStructTreeRoot ()(*_be .PdfObject ,bool ){_faaga ,_ffaf :=_bfed ._ffge .GetCatalogStructTreeRoot ();return &_faaga ,_ffaf ;};

// R returns the value of the red component of the color.
func (_aedgg *PdfColorDeviceRGB )R ()float64 {return _aedgg [0]};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _be .PdfObject )(*PdfFilespec ,error ){_dfbdc :=&PdfFilespec {};var _dffcb *_be .PdfObjectDictionary ;if _bbdb ,_bcgd :=_be .GetIndirect (obj );_bcgd {_dfbdc ._fbfa =_bbdb ;_dabg ,_ccaf :=_be .GetDict (_bbdb .PdfObject );
if !_ccaf {_caf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_be .ErrTypeError ;};_dffcb =_dabg ;}else if _agcaeg ,_fcdba :=_be .GetDict (obj );
_fcdba {_dfbdc ._fbfa =_agcaeg ;_dffcb =_agcaeg ;}else {_caf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_be .ErrTypeError ;};
if _dffcb ==nil {_caf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_bdf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ebdge :=_dffcb .Get ("\u0054\u0079\u0070\u0065");
_ebdge !=nil {_bfeg ,_dedc :=_ebdge .(*_be .PdfObjectName );if !_dedc {_caf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ebdge );
}else {if *_bfeg !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_caf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bfeg );
};};};if _geee :=_dffcb .Get ("\u0046\u0053");_geee !=nil {_dfbdc .FS =_geee ;};if _adgd :=_dffcb .Get ("\u0046");_adgd !=nil {_dfbdc .F =_adgd ;};if _eafe :=_dffcb .Get ("\u0055\u0046");_eafe !=nil {_dfbdc .UF =_eafe ;};if _bcdb :=_dffcb .Get ("\u0044\u004f\u0053");
_bcdb !=nil {_dfbdc .DOS =_bcdb ;};if _cedg :=_dffcb .Get ("\u004d\u0061\u0063");_cedg !=nil {_dfbdc .Mac =_cedg ;};if _fcbd :=_dffcb .Get ("\u0055\u006e\u0069\u0078");_fcbd !=nil {_dfbdc .Unix =_fcbd ;};if _cbaef :=_dffcb .Get ("\u0049\u0044");_cbaef !=nil {_dfbdc .ID =_cbaef ;
};if _bfdc :=_dffcb .Get ("\u0056");_bfdc !=nil {_dfbdc .V =_bfdc ;};if _egbcc :=_dffcb .Get ("\u0045\u0046");_egbcc !=nil {_dfbdc .EF =_egbcc ;};if _bffeb :=_dffcb .Get ("\u0052\u0046");_bffeb !=nil {_dfbdc .RF =_bffeb ;};if _gaeg :=_dffcb .Get ("\u0044\u0065\u0073\u0063");
_gaeg !=nil {_dfbdc .Desc =_gaeg ;};if _cgga :=_dffcb .Get ("\u0043\u0049");_cgga !=nil {_dfbdc .CI =_cgga ;};return _dfbdc ,nil ;};

// ToInteger convert to an integer format.
func (_adfc *PdfColorLab )ToInteger (bits int )[3]uint32 {_feca :=_eg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_feca *_adfc .L ()),uint32 (_feca *_adfc .A ()),uint32 (_feca *_adfc .B ())};};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fda :=NewPdfAnnotation ();_bbgb :=&PdfAnnotationFreeText {};_bbgb .PdfAnnotation =_fda ;_bbgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fda .SetContext (_bbgb );return _bbgb ;};

// ToPdfObject implements interface PdfModel.
func (_bbbg *PdfAnnotationPrinterMark )ToPdfObject ()_be .PdfObject {_bbbg .PdfAnnotation .ToPdfObject ();_aaee :=_bbbg ._dbf ;_eaf :=_aaee .PdfObject .(*_be .PdfObjectDictionary );_eaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_eaf .SetIfNotNil ("\u004d\u004e",_bbbg .MN );return _aaee ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _be .PdfObject ;Popup *PdfAnnotationPopup ;CA _be .PdfObject ;RC _be .PdfObject ;CreationDate _be .PdfObject ;IRT _be .PdfObject ;Subj _be .PdfObject ;RT _be .PdfObject ;IT _be .PdfObject ;ExData _be .PdfObject ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ffe _dga .ReadSeeker ;_gadd *_be .PdfParser ;_gaef *PdfReader ;Reader *PdfReader ;_bac []*PdfPage ;_gbca *PdfAcroForm ;_bcfd *DSS ;_ecgfd *Permissions ;_fgefd _be .XrefTable ;_fcdc int64 ;_gbdb int ;_bfgf []_be .PdfObject ;_ccaa map[_be .PdfObject ]struct{};
_cagc map[_be .PdfObject ]int64 ;_agdf map[_be .PdfObject ]struct{};_dba map[_be .PdfObject ]struct{};_dfae int64 ;_agbdd bool ;_fcaf string ;_egafb *EncryptOptions ;_dcbe *PdfInfo ;};type modelManager struct{_ddcf map[PdfModel ]_be .PdfObject ;_fgdad map[_be .PdfObject ]PdfModel ;
};func _cgfec (_deeae *PdfField ,_bcaba _be .PdfObject ){for _ ,_dfeef :=range _deeae .Annotations {_dfeef .AS =_bcaba ;_dfeef .ToPdfObject ();};};func _cacd (_acag _be .PdfObject )(*PdfColorspaceDeviceN ,error ){_aacdc :=NewPdfColorspaceDeviceN ();if _ffca ,_gffb :=_acag .(*_be .PdfIndirectObject );
_gffb {_aacdc ._faab =_ffca ;};_acag =_be .TraceToDirectObject (_acag );_bgge ,_ebbbg :=_acag .(*_be .PdfObjectArray );if !_ebbbg {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bgge .Len ()!=4&&_bgge .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_acag =_bgge .Get (0);
_edea ,_ebbbg :=_acag .(*_be .PdfObjectName );if !_ebbbg {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_edea !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_acag =_bgge .Get (1);
_acag =_be .TraceToDirectObject (_acag );_gfbge ,_ebbbg :=_acag .(*_be .PdfObjectArray );if !_ebbbg {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_aacdc .ColorantNames =_gfbge ;_acag =_bgge .Get (2);_fgdaf ,_afefa :=NewPdfColorspaceFromPdfObject (_acag );if _afefa !=nil {return nil ,_afefa ;};_aacdc .AlternateSpace =_fgdaf ;_aaeef ,_afefa :=_fgbbbc (_bgge .Get (3));if _afefa !=nil {return nil ,_afefa ;
};_aacdc .TintTransform =_aaeef ;if _bgge .Len ()==5{_fcecb ,_gce :=_gabg (_bgge .Get (4));if _gce !=nil {return nil ,_gce ;};_aacdc .Attributes =_fcecb ;};return _aacdc ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_edgf *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_dfede *PdfSignature ,_fadbf Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_ecdcg *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_cgccc *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_bcddd *PdfSignature ,_cdacb Hasher )error ;};func (_dbaf *LTV )getCRLs (_bgddb []*_bd .Certificate )([][]byte ,error ){_ccdg :=make ([][]byte ,0,len (_bgddb ));for _ ,_gfbdb :=range _bgddb {for _ ,_efeaa :=range _gfbdb .CRLDistributionPoints {if _dbaf .CertClient .IsCA (_gfbdb ){continue ;
};_febeg ,_dffge :=_dbaf .CRLClient .MakeRequest (_efeaa ,_gfbdb );if _dffge !=nil {_caf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_dffge );continue ;
};_ccdg =append (_ccdg ,_febeg );};};return _ccdg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eagg *PdfAnnotationRichMedia )ToPdfObject ()_be .PdfObject {_eagg .PdfAnnotation .ToPdfObject ();_eccd :=_eagg ._dbf ;_deea :=_eccd .PdfObject .(*_be .PdfObjectDictionary );_deea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_deea .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_eagg .RichMediaSettings );_deea .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_eagg .RichMediaContent );
return _eccd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_eggc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _eggc .UnderlyingCS ==nil {return nil ,_bdf .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _eggc .UnderlyingCS .ColorFromFloats (vals );};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_gbf :=&PdfColorspaceLab {};_gbf .BlackPoint =[]float64 {0.0,0.0,0.0};_gbf .Range =[]float64 {-100,100,-100,100};return _gbf ;};func _gabg (_cegc _be .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_eebd :=&PdfColorspaceDeviceNAttributes {};
var _aacba *_be .PdfObjectDictionary ;switch _dagg :=_cegc .(type ){case *_be .PdfIndirectObject :_eebd ._bbddf =_dagg ;var _bgeb bool ;_aacba ,_bgeb =_dagg .PdfObject .(*_be .PdfObjectDictionary );if !_bgeb {_caf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_be .PdfObjectDictionary :_aacba =_dagg ;case *_be .PdfObjectReference :_bfafb :=_dagg .Resolve ();return _gabg (_bfafb );default:_caf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _feabb :=_aacba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_feabb !=nil {_gbfc ,_bccc :=_be .TraceToDirectObject (_feabb ).(*_be .PdfObjectName );if !_bccc {_caf .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_bdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_eebd .Subtype =_gbfc ;};if _cgbd :=_aacba .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_cgbd !=nil {_eebd .Colorants =_cgbd ;};if _cfae :=_aacba .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_cfae !=nil {_eebd .Process =_cfae ;};if _bcad :=_aacba .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_bcad !=nil {_eebd .MixingHints =_bcad ;};return _eebd ,nil ;};func (_efd *PdfReader )loadAction (_fgab _be .PdfObject )(*PdfAction ,error ){if _cce ,_aed :=_be .GetIndirect (_fgab );
_aed {_ddfa ,_ccad :=_efd .newPdfActionFromIndirectObject (_cce );if _ccad !=nil {return nil ,_ccad ;};return _ddfa ,nil ;}else if !_be .IsNullObject (_fgab ){return nil ,_bdf .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToInteger convert to an integer format.
func (_fgdb *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_ebge :=_eg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ebge *_fgdb .R ()),uint32 (_ebge *_fgdb .G ()),uint32 (_ebge *_fgdb .B ())};};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_beec *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_egcgf *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if _egcgf .Alternate ==nil {if _egcgf .N ==1{_cdgca :=NewPdfColorspaceDeviceGray ();return _cdgca .ColorFromPdfObjects (objects );}else if _egcgf .N ==3{_bdfgc :=NewPdfColorspaceDeviceRGB ();
return _bdfgc .ColorFromPdfObjects (objects );}else if _egcgf .N ==4{_fdfc :=NewPdfColorspaceDeviceCMYK ();return _fdfc .ColorFromPdfObjects (objects );}else {return nil ,_bdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _egcgf .Alternate .ColorFromPdfObjects (objects );};func (_gdeb *PdfReader )newPdfAnnotationMovieFromDict (_gbcc *_be .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_gbed :=PdfAnnotationMovie {};_gbed .T =_gbcc .Get ("\u0054");_gbed .Movie =_gbcc .Get ("\u004d\u006f\u0076i\u0065");
_gbed .A =_gbcc .Get ("\u0041");return &_gbed ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_bgeg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_dagd *LTV )buildCertChain (_daec ,_bdbfa []*_bd .Certificate )([]*_bd .Certificate ,map[string ]*_bd .Certificate ,error ){_fcdbc :=map[string ]*_bd .Certificate {};
for _ ,_cedage :=range _daec {_fcdbc [_cedage .Subject .CommonName ]=_cedage ;};_gdgbf :=_daec ;for _ ,_gdcb :=range _bdbfa {_ebec :=_gdcb .Subject .CommonName ;if _ ,_dcebe :=_fcdbc [_ebec ];_dcebe {continue ;};_fcdbc [_ebec ]=_gdcb ;_gdgbf =append (_gdgbf ,_gdcb );
};if len (_gdgbf )==0{return nil ,nil ,ErrSignNoCertificates ;};var _bgbcg error ;for _eggae :=_gdgbf [0];_eggae !=nil &&!_dagd .CertClient .IsCA (_eggae );{_abeea ,_gcgbd :=_fcdbc [_eggae .Issuer .CommonName ];if !_gcgbd {if _abeea ,_bgbcg =_dagd .CertClient .GetIssuer (_eggae );
_bgbcg !=nil {_caf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_bgbcg );
break ;};_fcdbc [_eggae .Issuer .CommonName ]=_abeea ;_gdgbf =append (_gdgbf ,_abeea );};_eggae =_abeea ;};return _gdgbf ,_fcdbc ,nil ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_be .PdfObjectArray ;ExtGState _be .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cegcf *PdfSignature )GetContainingPdfObject ()_be .PdfObject {return _cegcf ._cfbge };func (_faeb *PdfReader )newPdfAnnotationScreenFromDict (_fbde *_be .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bbga :=PdfAnnotationScreen {};_bbga .T =_fbde .Get ("\u0054");
_bbga .MK =_fbde .Get ("\u004d\u004b");_bbga .A =_fbde .Get ("\u0041");_bbga .AA =_fbde .Get ("\u0041\u0041");return &_bbga ,nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_be .PdfObjectDictionary )(*PdfPageResources ,error ){_aedb :=NewPdfPageResources ();if _cgdb :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cgdb !=nil {_aedb .ExtGState =_cgdb ;};if _gbdd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gbdd !=nil &&!_be .IsNullObject (_gbdd ){_aedb .ColorSpace =_gbdd ;};if _abag :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_abag !=nil {_aedb .Pattern =_abag ;};if _agef :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_agef !=nil {_aedb .Shading =_agef ;
};if _bcgb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bcgb !=nil {_aedb .XObject =_bcgb ;};if _ebdec :=_be .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_ebdec !=nil {_aedb .Font =_ebdec ;};if _defe :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_defe !=nil {_aedb .ProcSet =_defe ;};if _cffdd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cffdd !=nil {_aedb .Properties =_cffdd ;};return _aedb ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_acgaa *PdfFont )GetCharMetrics (code _ac .CharCode )(CharMetrics ,bool ){var _cdagd _ecg .CharMetrics ;switch _dafb :=_acgaa ._egbcf .(type ){case *pdfFontSimple :if _fbeg ,_gcfa :=_dafb .GetCharMetrics (code );_gcfa {return _fbeg ,_gcfa ;};case *pdfFontType0 :if _aaegg ,_faagc :=_dafb .GetCharMetrics (code );
_faagc {return _aaegg ,_faagc ;};case *pdfCIDFontType0 :if _bgbef ,_ffbef :=_dafb .GetCharMetrics (code );_ffbef {return _bgbef ,_ffbef ;};case *pdfCIDFontType2 :if _eaca ,_babf :=_dafb .GetCharMetrics (code );_babf {return _eaca ,_babf ;};case *pdfFontType3 :if _cgcc ,_dggbd :=_dafb .GetCharMetrics (code );
_dggbd {return _cgcc ,_dggbd ;};default:_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_acgaa ._egbcf );
return _cdagd ,false ;};if _dabe ,_bgda :=_acgaa .GetFontDescriptor ();_bgda ==nil &&_dabe !=nil {return _ecg .CharMetrics {Wx :_dabe ._bccdf },true ;};_caf .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_acgaa );
return _cdagd ,false ;};func _cbaad (_aefg *_be .PdfObjectDictionary ,_eeaf *fontCommon )(*pdfFontType0 ,error ){_dacb ,_dcace :=_be .GetArray (_aefg .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_dcace {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_eeaf );
return nil ,_be .ErrRangeError ;};if _dacb .Len ()!=1{_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_dacb .Len ());return nil ,_be .ErrRangeError ;
};_aecfb ,_bdcge :=_ceaec (_dacb .Get (0),false );if _bdcge !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bdcge ,_eeaf );
return nil ,_bdcge ;};_feadf :=_fagee (_eeaf );_feadf .DescendantFont =_aecfb ;_bfdfg ,_dcace :=_be .GetNameVal (_aefg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dcace {if _bfdfg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_bfdfg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_feadf ._bgbb =_ac .NewIdentityTextEncoder (_bfdfg );
}else if _gde .IsPredefinedCMap (_bfdfg ){_feadf ._cgfe ,_bdcge =_gde .LoadPredefinedCMap (_bfdfg );if _bdcge !=nil {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bfdfg ,_bdcge );
};}else {_caf .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_bfdfg );};};if _affbc :=_aecfb .baseFields ()._baag ;_affbc !=nil {if _bfdaf :=_affbc .Name ();_bfdaf =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_bfdaf =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_bfdaf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_bfdaf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_feadf ._bgbb =_ac .NewCMapEncoder (_bfdfg ,_feadf ._cgfe ,_affbc );
};};return _feadf ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_afefg *Outline )Insert (index uint ,item *OutlineItem ){_ccafb :=uint (len (_afefg .Entries ));if index > _ccafb {index =_ccafb ;};_afefg .Entries =append (_afefg .Entries [:index ],append ([]*OutlineItem {item },_afefg .Entries [index :]...)...);
};func (_bbbba *LTV )getCerts (_abeeg []*_bd .Certificate )([][]byte ,error ){_efafd :=make ([][]byte ,0,len (_abeeg ));for _ ,_befdbc :=range _abeeg {_efafd =append (_efafd ,_befdbc .Raw );};return _efafd ,nil ;};

// GetCerts returns the signature certificate chain.
func (_bfabg *PdfSignature )GetCerts ()([]*_bd .Certificate ,error ){var _fabca []func ()([]*_bd .Certificate ,error );switch _agcag ,_ :=_be .GetNameVal (_bfabg .SubFilter );_agcag {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_fabca =append (_fabca ,_bfabg .extractChainFromPKCS7 ,_bfabg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_fabca =append (_fabca ,_bfabg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_fabca =append (_fabca ,_bfabg .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_agcag );};for _ ,_gfbce :=range _fabca {_cdcf ,_fddfde :=_gfbce ();if _fddfde !=nil {return nil ,_fddfde ;
};if len (_cdcf )> 0{return _cdcf ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject implements interface PdfModel.
func (_gfe *PdfAnnotationCircle )ToPdfObject ()_be .PdfObject {_gfe .PdfAnnotation .ToPdfObject ();_eba :=_gfe ._dbf ;_gecf :=_eba .PdfObject .(*_be .PdfObjectDictionary );_gfe .PdfAnnotationMarkup .appendToPdfDictionary (_gecf );_gecf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_gecf .SetIfNotNil ("\u0042\u0053",_gfe .BS );_gecf .SetIfNotNil ("\u0049\u0043",_gfe .IC );_gecf .SetIfNotNil ("\u0042\u0045",_gfe .BE );_gecf .SetIfNotNil ("\u0052\u0044",_gfe .RD );return _eba ;};func _ebea (_bdac *XObjectForm )(*PdfRectangle ,error ){if _gadg ,_fedd :=_bdac .BBox .(*_be .PdfObjectArray );
_fedd {_gbgfe ,_cgdac :=NewPdfRectangle (*_gadg );if _cgdac !=nil {return nil ,_cgdac ;};if _gdbea ,_gddda :=_bdac .Matrix .(*_be .PdfObjectArray );_gddda {_degf ,_dedcb :=_gdbea .ToFloat64Array ();if _dedcb !=nil {return nil ,_dedcb ;};_ebef :=_ff .IdentityMatrix ();
if len (_degf )==6{_ebef =_ff .NewMatrix (_degf [0],_degf [1],_degf [2],_degf [3],_degf [4],_degf [5]);};_gbgfe .Transform (_ebef );return _gbgfe ,nil ;};};return nil ,_bdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dbec *_be .PdfIndirectObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_agad *OutlineItem )Insert (index uint ,item *OutlineItem ){_efdaf :=uint (len (_agad .Entries ));if index > _efdaf {index =_efdaf ;};_agad .Entries =append (_agad .Entries [:index ],append ([]*OutlineItem {item },_agad .Entries [index :]...)...);
};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bdde *PdfField )Flags ()FieldFlag {var _ggcd FieldFlag ;_fcdd ,_bcag :=_bdde .inherit (func (_fgada *PdfField )bool {if _fgada .Ff !=nil {_ggcd =FieldFlag (*_fgada .Ff );return true ;};return false ;});if _bcag !=nil {_caf .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bcag );
};if !_fcdd {_caf .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _ggcd ;};

// ToInteger convert to an integer format.
func (_aabbg *PdfColorCalGray )ToInteger (bits int )uint32 {_edgc :=_eg .Pow (2,float64 (bits ))-1;return uint32 (_edgc *_aabbg .Val ());};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_efaeg :=PdfPage {};_efaeg ._afccg =_be .MakeDict ();_efaeg .Resources =NewPdfPageResources ();_gadec :=_be .PdfIndirectObject {};_gadec .PdfObject =_efaeg ._afccg ;_efaeg ._bcadgc =&_gadec ;_efaeg ._fdaaa =*_efaeg ._afccg ;
return &_efaeg ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_ffega =subject };

// BaseFont returns the font's "BaseFont" field.
func (_gfce *PdfFont )BaseFont ()string {return _gfce .baseFields ()._abdd };

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gcd :=NewPdfAction ();_daa :=&PdfActionResetForm {};_daa .PdfAction =_gcd ;_gcd .SetContext (_daa );return _daa ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afda *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffbd :=vals [0];if _ffbd < 0.0||_ffbd > 1.0{_caf .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ffbd < 0.0{_ffbd =0.0;}else if _ffbd > 1.0{_ffbd =1.0;};return NewPdfColorDeviceGray (_ffbd ),nil ;};

// IsCID returns true if the underlying font is CID.
func (_ebcg *PdfFont )IsCID ()bool {return _ebcg .baseFields ().isCIDFont ()};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_fcafe :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_fcafe ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_fagag *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _dddaf []float64 ;for _ebbb :=0;_ebbb < _fagag .GetNumComponents ();_ebbb ++{_dddaf =append (_dddaf ,0.0,1.0);};return _dddaf ;};

// Fill populates `form` with values provided by `provider`.
func (_bdffd *PdfAcroForm )Fill (provider FieldValueProvider )error {return _bdffd .fill (provider ,nil )};func (_cagf *PdfReader )newPdfAnnotationFromIndirectObject (_gdd *_be .PdfIndirectObject )(*PdfAnnotation ,error ){_fgd ,_aece :=_gdd .PdfObject .(*_be .PdfObjectDictionary );
if !_aece {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cagf ._cfgbc .GetModelFromPrimitive (_fgd );model !=nil {_ecgf ,_becg :=model .(*PdfAnnotation );if !_becg {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _ecgf ,nil ;};_ccb :=&PdfAnnotation {};_ccb ._dbf =_gdd ;_cagf ._cfgbc .Register (_fgd ,_ccb );if _fdg :=_fgd .Get ("\u0054\u0079\u0070\u0065");_fdg !=nil {_gaf ,_gba :=_fdg .(*_be .PdfObjectName );if !_gba {_caf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fdg );
}else {if *_gaf !="\u0041\u006e\u006eo\u0074"{_caf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gaf );};};};if _bcbg :=_fgd .Get ("\u0052\u0065\u0063\u0074");
_bcbg !=nil {_ccb .Rect =_bcbg ;};if _aacab :=_fgd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_aacab !=nil {_ccb .Contents =_aacab ;};if _gfg :=_fgd .Get ("\u0050");_gfg !=nil {_ccb .P =_gfg ;};if _cca :=_fgd .Get ("\u004e\u004d");_cca !=nil {_ccb .NM =_cca ;
};if _cegee :=_fgd .Get ("\u004d");_cegee !=nil {_ccb .M =_cegee ;};if _dfe :=_fgd .Get ("\u0046");_dfe !=nil {_ccb .F =_dfe ;};if _cgag :=_fgd .Get ("\u0041\u0050");_cgag !=nil {_ccb .AP =_cgag ;};if _gfbe :=_fgd .Get ("\u0041\u0053");_gfbe !=nil {_ccb .AS =_gfbe ;
};if _debcc :=_fgd .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_debcc !=nil {_ccb .Border =_debcc ;};if _fbc :=_fgd .Get ("\u0043");_fbc !=nil {_ccb .C =_fbc ;};if _bbdcb :=_fgd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_bbdcb !=nil {_ccb .StructParent =_bbdcb ;};if _gefe :=_fgd .Get ("\u004f\u0043");_gefe !=nil {_ccb .OC =_gefe ;};_bae :=_fgd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bae ==nil {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_ccb ._ef =nil ;return _ccb ,nil ;};_gefd ,_gedg :=_bae .(*_be .PdfObjectName );if !_gedg {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bae );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bae );};switch *_gefd {case "\u0054\u0065\u0078\u0074":_gbgc ,_gbde :=_cagf .newPdfAnnotationTextFromDict (_fgd );
if _gbde !=nil {return nil ,_gbde ;};_gbgc .PdfAnnotation =_ccb ;_ccb ._ef =_gbgc ;return _ccb ,nil ;case "\u004c\u0069\u006e\u006b":_baf ,_cedd :=_cagf .newPdfAnnotationLinkFromDict (_fgd );if _cedd !=nil {return nil ,_cedd ;};_baf .PdfAnnotation =_ccb ;
_ccb ._ef =_baf ;return _ccb ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_cbae ,_fefa :=_cagf .newPdfAnnotationFreeTextFromDict (_fgd );if _fefa !=nil {return nil ,_fefa ;};_cbae .PdfAnnotation =_ccb ;_ccb ._ef =_cbae ;return _ccb ,nil ;
case "\u004c\u0069\u006e\u0065":_gfbd ,_bbc :=_cagf .newPdfAnnotationLineFromDict (_fgd );if _bbc !=nil {return nil ,_bbc ;};_gfbd .PdfAnnotation =_ccb ;_ccb ._ef =_gfbd ;_caf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_ccb ,_ccb );
_caf .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_gfbd ,_gfbd );_caf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_gfbd .PdfAnnotationMarkup ,_gfbd .PdfAnnotationMarkup );
return _ccb ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bdbg ,_bag :=_cagf .newPdfAnnotationSquareFromDict (_fgd );if _bag !=nil {return nil ,_bag ;};_bdbg .PdfAnnotation =_ccb ;_ccb ._ef =_bdbg ;return _ccb ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_bfa ,_dcdf :=_cagf .newPdfAnnotationCircleFromDict (_fgd );
if _dcdf !=nil {return nil ,_dcdf ;};_bfa .PdfAnnotation =_ccb ;_ccb ._ef =_bfa ;return _ccb ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_bcbga ,_aea :=_cagf .newPdfAnnotationPolygonFromDict (_fgd );if _aea !=nil {return nil ,_aea ;};_bcbga .PdfAnnotation =_ccb ;
_ccb ._ef =_bcbga ;return _ccb ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_gee ,_gcf :=_cagf .newPdfAnnotationPolyLineFromDict (_fgd );if _gcf !=nil {return nil ,_gcf ;};_gee .PdfAnnotation =_ccb ;_ccb ._ef =_gee ;return _ccb ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_bfaf ,_cgac :=_cagf .newPdfAnnotationHighlightFromDict (_fgd );
if _cgac !=nil {return nil ,_cgac ;};_bfaf .PdfAnnotation =_ccb ;_ccb ._ef =_bfaf ;return _ccb ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_dgaa ,_aaeg :=_cagf .newPdfAnnotationUnderlineFromDict (_fgd );if _aaeg !=nil {return nil ,_aaeg ;
};_dgaa .PdfAnnotation =_ccb ;_ccb ._ef =_dgaa ;return _ccb ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_aacd ,_beae :=_cagf .newPdfAnnotationSquigglyFromDict (_fgd );if _beae !=nil {return nil ,_beae ;};_aacd .PdfAnnotation =_ccb ;_ccb ._ef =_aacd ;
return _ccb ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_dbe ,_feff :=_cagf .newPdfAnnotationStrikeOut (_fgd );if _feff !=nil {return nil ,_feff ;};_dbe .PdfAnnotation =_ccb ;_ccb ._ef =_dbe ;return _ccb ,nil ;case "\u0043\u0061\u0072e\u0074":_aecea ,_efb :=_cagf .newPdfAnnotationCaretFromDict (_fgd );
if _efb !=nil {return nil ,_efb ;};_aecea .PdfAnnotation =_ccb ;_ccb ._ef =_aecea ;return _ccb ,nil ;case "\u0053\u0074\u0061m\u0070":_aadb ,_ccf :=_cagf .newPdfAnnotationStampFromDict (_fgd );if _ccf !=nil {return nil ,_ccf ;};_aadb .PdfAnnotation =_ccb ;
_ccb ._ef =_aadb ;return _ccb ,nil ;case "\u0049\u006e\u006b":_dee ,_fbe :=_cagf .newPdfAnnotationInkFromDict (_fgd );if _fbe !=nil {return nil ,_fbe ;};_dee .PdfAnnotation =_ccb ;_ccb ._ef =_dee ;return _ccb ,nil ;case "\u0050\u006f\u0070u\u0070":_cee ,_gedgb :=_cagf .newPdfAnnotationPopupFromDict (_fgd );
if _gedgb !=nil {return nil ,_gedgb ;};_cee .PdfAnnotation =_ccb ;_ccb ._ef =_cee ;return _ccb ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_agb ,_ggd :=_cagf .newPdfAnnotationFileAttachmentFromDict (_fgd );
if _ggd !=nil {return nil ,_ggd ;};_agb .PdfAnnotation =_ccb ;_ccb ._ef =_agb ;return _ccb ,nil ;case "\u0053\u006f\u0075n\u0064":_dgda ,_ffa :=_cagf .newPdfAnnotationSoundFromDict (_fgd );if _ffa !=nil {return nil ,_ffa ;};_dgda .PdfAnnotation =_ccb ;
_ccb ._ef =_dgda ;return _ccb ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bfab ,_cfee :=_cagf .newPdfAnnotationRichMediaFromDict (_fgd );if _cfee !=nil {return nil ,_cfee ;};_bfab .PdfAnnotation =_ccb ;_ccb ._ef =_bfab ;return _ccb ,nil ;
case "\u004d\u006f\u0076i\u0065":_bdbff ,_bfdf :=_cagf .newPdfAnnotationMovieFromDict (_fgd );if _bfdf !=nil {return nil ,_bfdf ;};_bdbff .PdfAnnotation =_ccb ;_ccb ._ef =_bdbff ;return _ccb ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bfec ,_gaba :=_cagf .newPdfAnnotationScreenFromDict (_fgd );
if _gaba !=nil {return nil ,_gaba ;};_bfec .PdfAnnotation =_ccb ;_ccb ._ef =_bfec ;return _ccb ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gac ,_eeec :=_cagf .newPdfAnnotationWidgetFromDict (_fgd );if _eeec !=nil {return nil ,_eeec ;};_gac .PdfAnnotation =_ccb ;
_ccb ._ef =_gac ;return _ccb ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_cbgf ,_gff :=_cagf .newPdfAnnotationPrinterMarkFromDict (_fgd );if _gff !=nil {return nil ,_gff ;};_cbgf .PdfAnnotation =_ccb ;_ccb ._ef =_cbgf ;return _ccb ,nil ;
case "\u0054r\u0061\u0070\u004e\u0065\u0074":_gfaa ,_bccb :=_cagf .newPdfAnnotationTrapNetFromDict (_fgd );if _bccb !=nil {return nil ,_bccb ;};_gfaa .PdfAnnotation =_ccb ;_ccb ._ef =_gfaa ;return _ccb ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bage ,_ccda :=_cagf .newPdfAnnotationWatermarkFromDict (_fgd );
if _ccda !=nil {return nil ,_ccda ;};_bage .PdfAnnotation =_ccb ;_ccb ._ef =_bage ;return _ccb ,nil ;case "\u0033\u0044":_bafb ,_bcf :=_cagf .newPdfAnnotation3DFromDict (_fgd );if _bcf !=nil {return nil ,_bcf ;};_bafb .PdfAnnotation =_ccb ;_ccb ._ef =_bafb ;
return _ccb ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_gda ,_ddg :=_cagf .newPdfAnnotationProjectionFromDict (_fgd );if _ddg !=nil {return nil ,_ddg ;};_gda .PdfAnnotation =_ccb ;_ccb ._ef =_gda ;return _ccb ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_fefg ,_cdaf :=_cagf .newPdfAnnotationRedactFromDict (_fgd );
if _cdaf !=nil {return nil ,_cdaf ;};_fefg .PdfAnnotation =_ccb ;_ccb ._ef =_fefg ;return _ccb ,nil ;};_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gefd );
return nil ,nil ;};func _cgafc (_gcfca _be .PdfObject )(*PdfFontDescriptor ,error ){_cgfa :=&PdfFontDescriptor {};_gcfca =_be .ResolveReference (_gcfca );if _fafc ,_deace :=_gcfca .(*_be .PdfIndirectObject );_deace {_cgfa ._ecgfc =_fafc ;_gcfca =_fafc .PdfObject ;
};_gefa ,_efgg :=_be .GetDict (_gcfca );if !_efgg {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gcfca );
return nil ,_be .ErrTypeError ;};if _cdbd :=_gefa .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_cdbd !=nil {_cgfa .FontName =_cdbd ;}else {_caf .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_efge ,_ :=_be .GetName (_cgfa .FontName );if _eadfb :=_gefa .Get ("\u0054\u0079\u0070\u0065");_eadfb !=nil {_cffef ,_aebd :=_eadfb .(*_be .PdfObjectName );if !_aebd ||string (*_cffef )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_caf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eadfb ,_efge ,_cgfa .FontName );
};}else {_caf .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_efge ,_cgfa .FontName );
};_cgfa .FontFamily =_gefa .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cgfa .FontStretch =_gefa .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cgfa .FontWeight =_gefa .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_cgfa .Flags =_gefa .Get ("\u0046\u006c\u0061g\u0073");_cgfa .FontBBox =_gefa .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cgfa .ItalicAngle =_gefa .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cgfa .Ascent =_gefa .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_cgfa .Descent =_gefa .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cgfa .Leading =_gefa .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cgfa .CapHeight =_gefa .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cgfa .XHeight =_gefa .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_cgfa .StemV =_gefa .Get ("\u0053\u0074\u0065m\u0056");_cgfa .StemH =_gefa .Get ("\u0053\u0074\u0065m\u0048");_cgfa .AvgWidth =_gefa .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cgfa .MaxWidth =_gefa .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_cgfa .MissingWidth =_gefa .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cgfa .FontFile =_gefa .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cgfa .FontFile2 =_gefa .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_cgfa .FontFile3 =_gefa .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cgfa .CharSet =_gefa .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cgfa .Style =_gefa .Get ("\u0053\u0074\u0079l\u0065");_cgfa .Lang =_gefa .Get ("\u004c\u0061\u006e\u0067");
_cgfa .FD =_gefa .Get ("\u0046\u0044");_cgfa .CIDSet =_gefa .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cgfa .Flags !=nil {if _fefb ,_dbef :=_be .GetIntVal (_cgfa .Flags );_dbef {_cgfa ._fadd =_fefb ;};};if _cgfa .MissingWidth !=nil {if _fbegb ,_bace :=_be .GetNumberAsFloat (_cgfa .MissingWidth );
_bace ==nil {_cgfa ._bccdf =_fbegb ;};};if _cgfa .FontFile !=nil {_gcdad ,_eddad :=_cceeb (_cgfa .FontFile );if _eddad !=nil {return _cgfa ,_eddad ;};_caf .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gcdad );_cgfa .fontFile =_gcdad ;
};if _cgfa .FontFile2 !=nil {_egacc ,_abaf :=_ecg .NewFontFile2FromPdfObject (_cgfa .FontFile2 );if _abaf !=nil {return _cgfa ,_abaf ;};_caf .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_egacc .String ());_cgfa ._fdfcg =&_egacc ;
};return _cgfa ,nil ;};func (_bbdad *pdfFontType0 )subsetRegistered ()error {_dfdcc ,_gabbb :=_bbdad .DescendantFont ._egbcf .(*pdfCIDFontType2 );if !_gabbb {_caf .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bbdad .DescendantFont );
return nil ;};if _dfdcc ==nil {return nil ;};if _dfdcc ._gfcg ==nil {_caf .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bbdad ._bgbb ==nil {_caf .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_ebfa ,_gabbb :=_be .GetStream (_dfdcc ._gfcg .FontFile2 );if !_gabbb {_caf .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _bdf .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bdab ,_gaac :=_be .DecodeStream (_ebfa );if _gaac !=nil {_caf .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gaac );
return _gaac ;};_fedbc ,_gaac :=_fae .Parse (_ec .NewReader (_bdab ));if _gaac !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_ebfa .Stream ));
return _gaac ;};var _fcac []rune ;var _aecf *_fae .Font ;switch _ffdb :=_bbdad ._bgbb .(type ){case *_ac .TrueTypeFontEncoder :_fcac =_ffdb .RegisteredRunes ();_aecf ,_gaac =_fedbc .SubsetKeepRunes (_fcac );if _gaac !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaac );
return _gaac ;};_ffdb .SubsetRegistered ();case *_ac .IdentityEncoder :_fcac =_ffdb .RegisteredRunes ();_afefd :=make ([]_fae .GlyphIndex ,len (_fcac ));for _fedae ,_aacg :=range _fcac {_afefd [_fedae ]=_fae .GlyphIndex (_aacg );};_aecf ,_gaac =_fedbc .SubsetKeepIndices (_afefd );
if _gaac !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaac );return _gaac ;};case _ac .SimpleEncoder :_ceed :=_ffdb .Charcodes ();for _ ,_bffab :=range _ceed {_fccb ,_cedaf :=_ffdb .CharcodeToRune (_bffab );if !_cedaf {_caf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bffab );
continue ;};_fcac =append (_fcac ,_fccb );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bbdad ._bgbb );
};var _cdeg _ec .Buffer ;_gaac =_aecf .Write (&_cdeg );if _gaac !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaac );return _gaac ;};if _bbdad ._baag !=nil {_fddae :=make (map[_gde .CharCode ]rune ,len (_fcac ));for _ ,_cfgg :=range _fcac {_feebb ,_ggda :=_bbdad ._bgbb .RuneToCharcode (_cfgg );
if !_ggda {continue ;};_fddae [_gde .CharCode (_feebb )]=_cfgg ;};_bbdad ._baag =_gde .NewToUnicodeCMap (_fddae );};_ebfa ,_gaac =_be .MakeStream (_cdeg .Bytes (),_be .NewFlateEncoder ());if _gaac !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaac );
return _gaac ;};_ebfa .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_be .MakeInteger (int64 (_cdeg .Len ())));if _fbab ,_decg :=_be .GetStream (_dfdcc ._gfcg .FontFile2 );_decg {*_fbab =*_ebfa ;}else {_dfdcc ._gfcg .FontFile2 =_ebfa ;};_ggagf :=_daef ();
if len (_bbdad ._abdd )> 0{_bbdad ._abdd =_eedb (_bbdad ._abdd ,_ggagf );};if len (_dfdcc ._abdd )> 0{_dfdcc ._abdd =_eedb (_dfdcc ._abdd ,_ggagf );};if len (_bbdad ._egbbc )> 0{_bbdad ._egbbc =_eedb (_bbdad ._egbbc ,_ggagf );};if _dfdcc ._gfcg !=nil {_ggcde ,_dfbf :=_be .GetName (_dfdcc ._gfcg .FontName );
if _dfbf &&len (_ggcde .String ())> 0{_edce :=_eedb (_ggcde .String (),_ggagf );_dfdcc ._gfcg .FontName =_be .MakeName (_edce );};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_efbg *PdfAnnotationFreeText )ToPdfObject ()_be .PdfObject {_efbg .PdfAnnotation .ToPdfObject ();_bece :=_efbg ._dbf ;_adbd :=_bece .PdfObject .(*_be .PdfObjectDictionary );_efbg .PdfAnnotationMarkup .appendToPdfDictionary (_adbd );_adbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_adbd .SetIfNotNil ("\u0044\u0041",_efbg .DA );_adbd .SetIfNotNil ("\u0051",_efbg .Q );_adbd .SetIfNotNil ("\u0052\u0043",_efbg .RC );_adbd .SetIfNotNil ("\u0044\u0053",_efbg .DS );_adbd .SetIfNotNil ("\u0043\u004c",_efbg .CL );_adbd .SetIfNotNil ("\u0049\u0054",_efbg .IT );
_adbd .SetIfNotNil ("\u0042\u0045",_efbg .BE );_adbd .SetIfNotNil ("\u0052\u0044",_efbg .RD );_adbd .SetIfNotNil ("\u0042\u0053",_efbg .BS );_adbd .SetIfNotNil ("\u004c\u0045",_efbg .LE );return _bece ;};func _fcbe (_cgeg *[]*PdfField ,_beecg FieldFilterFunc ,_beff bool )[]*PdfField {if _cgeg ==nil {return nil ;
};_gebb :=*_cgeg ;if len (*_cgeg )==0{return nil ;};_aebc :=_gebb [:0];if _beecg ==nil {_beecg =func (*PdfField )bool {return true };};var _gdbef []*PdfField ;for _ ,_bbebb :=range _gebb {_fgefdg :=_beecg (_bbebb );if _fgefdg {_gdbef =append (_gdbef ,_bbebb );
if len (_bbebb .Kids )> 0{_gdbef =append (_gdbef ,_fcbe (&_bbebb .Kids ,_beecg ,_beff )...);};};if !_beff ||!_fgefdg ||len (_bbebb .Kids )> 0{_aebc =append (_aebc ,_bbebb );};};*_cgeg =_aebc ;return _gdbef ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;
PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// Y returns the value of the yellow component of the color.
func (_egcf *PdfColorDeviceCMYK )Y ()float64 {return _egcf [2]};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _be .PdfObject ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_eeac *PdfFieldButton )ToPdfObject ()_be .PdfObject {_eeac .PdfField .ToPdfObject ();_fabb :=_eeac ._ffcf ;_agfad :=_fabb .PdfObject .(*_be .PdfObjectDictionary );_agfad .Set ("\u0046\u0054",_be .MakeName ("\u0042\u0074\u006e"));if _eeac .Opt !=nil {_agfad .Set ("\u004f\u0070\u0074",_eeac .Opt );
};return _fabb ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_fbcfb *PdfWriter )AddPage (page *PdfPage )error {const _ggfg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_eebab (page );_cbgff :=page .ToPdfObject ();_caf .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_caf .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cbgff );_ccdcb ,_baaag :=_be .GetIndirect (_cbgff );if !_baaag {return _bdf .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_caf .Log .Trace ("\u0025\u0073",_ccdcb );_caf .Log .Trace ("\u0025\u0073",_ccdcb .PdfObject );_aacbeb ,_baaag :=_be .GetDict (_ccdcb .PdfObject );if !_baaag {return _bdf .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dddafc ,_baaag :=_be .GetName (_aacbeb .Get ("\u0054\u0079\u0070\u0065"));if !_baaag {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_aacbeb .Get ("\u0054\u0079\u0070\u0065"));
};if _dddafc .String ()!="\u0050\u0061\u0067\u0065"{return _bdf .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gdaec :=[]_be .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gbfca ,_bbbca :=_be .GetIndirect (_aacbeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_caf .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_aacbeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_bbbca );
for _bbbca {_caf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbfca );_gadcdd ,_bfebee :=_be .GetDict (_gbfca .PdfObject );if !_bfebee {return _bdf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cddgb :=range _gdaec {_caf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cddgb );if _aacbeb .Get (_cddgb )!=nil {_caf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _edcf :=_gadcdd .Get (_cddgb );_edcf !=nil {_caf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cddgb );_aacbeb .Set (_cddgb ,_edcf );};};_gbfca ,_bbbca =_be .GetIndirect (_gadcdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_caf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gadcdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_caf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_aacbeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbcfb ._cdcg );_ccdcb .PdfObject =_aacbeb ;_ggbea ,_baaag :=_be .GetDict (_fbcfb ._cdcg .PdfObject );if !_baaag {return _bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_caddg ,_baaag :=_be .GetArray (_ggbea .Get ("\u004b\u0069\u0064\u0073"));if !_baaag {return _bdf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_caddg .Append (_ccdcb );_fbcfb ._adabee [_aacbeb ]=struct{}{};_ccdde ,_baaag :=_be .GetInt (_ggbea .Get ("\u0043\u006f\u0075n\u0074"));if !_baaag {return _bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ccdde =*_ccdde +1;if page ._ffge ==nil {_gdefc :=_aa .Track (_fbcfb ._degfd ,_ggfg );if _gdefc !=nil {return _gdefc ;};}else {_bdfgcg :=_aa .Track (page ._ffge ._adfef ,_ggfg );if _bdfgcg !=nil {return _bdfgcg ;};};_fbcfb .addObject (_ccdcb );_dfeag :=_fbcfb .addObjects (_aacbeb );
if _dfeag !=nil {return _dfeag ;};return nil ;};func _dcafe (_dfeb *_be .PdfObjectDictionary )(*PdfFieldChoice ,error ){_acage :=&PdfFieldChoice {};_acage .Opt ,_ =_be .GetArray (_dfeb .Get ("\u004f\u0070\u0074"));_acage .TI ,_ =_be .GetInt (_dfeb .Get ("\u0054\u0049"));
_acage .I ,_ =_be .GetArray (_dfeb .Get ("\u0049"));return _acage ,nil ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_cagbc *PdfReader )GetRevisionNumber ()int {return _cagbc ._gfafb .GetRevisionNumber ()};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _be .PdfObject ;Q _be .PdfObject ;RC _be .PdfObject ;DS _be .PdfObject ;CL _be .PdfObject ;IT _be .PdfObject ;BE _be .PdfObject ;RD _be .PdfObject ;BS _be .PdfObject ;LE _be .PdfObject ;
};

// ToPdfObject implements interface PdfModel.
func (_cfe *PdfActionSubmitForm )ToPdfObject ()_be .PdfObject {_cfe .PdfAction .ToPdfObject ();_dac :=_cfe ._deb ;_becb :=_dac .PdfObject .(*_be .PdfObjectDictionary );_becb .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeSubmitForm )));if _cfe .F !=nil {_becb .Set ("\u0046",_cfe .F .ToPdfObject ());
};_becb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cfe .Fields );_becb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cfe .Flags );return _dac ;};

// ValidateSignatures validates digital signatures in the document.
func (_ecfb *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ecfb .AcroForm ==nil {return nil ,nil ;};if _ecfb .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_fbbgb *PdfSignature ;
_gcadc *PdfField ;_gcaac SignatureHandler ;};var _bdgf []*sigFieldPair ;for _ ,_cggab :=range _ecfb .AcroForm .AllFields (){if _cggab .V ==nil {continue ;};if _adcg ,_eggac :=_be .GetDict (_cggab .V );_eggac {if _ffdad ,_dgaad :=_be .GetNameVal (_adcg .Get ("\u0054\u0079\u0070\u0065"));
_dgaad &&_ffdad =="\u0053\u0069\u0067"{_bbef ,_cdcfc :=_be .GetIndirect (_cggab .V );if !_cdcfc {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_bgebe ,_dcbcc :=_ecfb .newPdfSignatureFromIndirect (_bbef );if _dcbcc !=nil {return nil ,_dcbcc ;};var _dcbfd SignatureHandler ;for _ ,_cdge :=range handlers {if _cdge .IsApplicable (_bgebe ){_dcbfd =_cdge ;break ;};};_bdgf =append (_bdgf ,&sigFieldPair {_fbbgb :_bgebe ,_gcadc :_cggab ,_gcaac :_dcbfd });
};};};var _aebg []SignatureValidationResult ;for _ ,_fbcdc :=range _bdgf {_ebdca :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fbcdc ._gcadc }};if _fbcdc ._gcaac ==nil {_ebdca .Errors =append (_ebdca .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_aebg =append (_aebg ,_ebdca );continue ;};_dfcc ,_gfdfc :=_fbcdc ._gcaac .NewDigest (_fbcdc ._fbbgb );if _gfdfc !=nil {_ebdca .Errors =append (_ebdca .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gfdfc .Error ());_aebg =append (_aebg ,_ebdca );
continue ;};_ggecc :=_fbcdc ._fbbgb .ByteRange ;if _ggecc ==nil {_ebdca .Errors =append (_ebdca .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_aebg =append (_aebg ,_ebdca );continue ;};for _ebcda :=0;
_ebcda < _ggecc .Len ();_ebcda =_ebcda +2{_cafeb ,_ :=_be .GetNumberAsInt64 (_ggecc .Get (_ebcda ));_bgef ,_ :=_be .GetIntVal (_ggecc .Get (_ebcda +1));if _ ,_ceecag :=_ecfb ._dbaba .Seek (_cafeb ,_dga .SeekStart );_ceecag !=nil {return nil ,_ceecag ;};
_dcfad :=make ([]byte ,_bgef );if _ ,_ecbfa :=_ecfb ._dbaba .Read (_dcfad );_ecbfa !=nil {return nil ,_ecbfa ;};_dfcc .Write (_dcfad );};var _gdafb SignatureValidationResult ;if _gcegd ,_adgaa :=_fbcdc ._gcaac .(SignatureHandlerDocMDP );_adgaa {_gdafb ,_gfdfc =_gcegd .ValidateWithOpts (_fbcdc ._fbbgb ,_dfcc ,SignatureHandlerDocMDPParams {Parser :_ecfb ._gfafb });
}else {_gdafb ,_gfdfc =_fbcdc ._gcaac .Validate (_fbcdc ._fbbgb ,_dfcc );};if _gfdfc !=nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_gfdfc ,_fbcdc ._gcaac );_gdafb .Errors =append (_gdafb .Errors ,_gfdfc .Error ());
};_gdafb .Name =_fbcdc ._fbbgb .Name .Decoded ();_gdafb .Reason =_fbcdc ._fbbgb .Reason .Decoded ();if _fbcdc ._fbbgb .M !=nil {_bfbb ,_cfdae :=NewPdfDate (_fbcdc ._fbbgb .M .String ());if _cfdae !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfdae );
_gdafb .Errors =append (_gdafb .Errors ,_cfdae .Error ());continue ;};_gdafb .Date =_bfbb ;};_gdafb .ContactInfo =_fbcdc ._fbbgb .ContactInfo .Decoded ();_gdafb .Location =_fbcdc ._fbbgb .Location .Decoded ();_gdafb .Fields =_ebdca .Fields ;_aebg =append (_aebg ,_gdafb );
};return _aebg ,nil ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_ebbfg PdfOutputIntentType )String ()string {switch _ebbfg {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dcga *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcfgc ,_ccga :=_be .GetNumbersAsFloat (objects );
if _ccga !=nil {return nil ,_ccga ;};return _dcga .ColorFromFloats (_dcfgc );};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _be .PdfObject ;IC _be .PdfObject ;BE _be .PdfObject ;RD _be .PdfObject ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_dbfeg *DSS )GetContainingPdfObject ()_be .PdfObject {return _dbfeg ._dfaa };

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// StdFontName represents name of a standard font.
type StdFontName =_ecg .StdFontName ;func (_aeeb fontCommon )asPdfObjectDictionary (_egffa string )*_be .PdfObjectDictionary {if _egffa !=""&&_aeeb ._cfcgc !=""&&_egffa !=_aeeb ._cfcgc {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_egffa ,_aeeb );
}else if _egffa ==""&&_aeeb ._cfcgc ==""{_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_aeeb );
}else if _aeeb ._cfcgc ==""{_aeeb ._cfcgc =_egffa ;};_bcdge :=_be .MakeDict ();_bcdge .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0046\u006f\u006e\u0074"));_bcdge .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_be .MakeName (_aeeb ._abdd ));
_bcdge .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName (_aeeb ._cfcgc ));if _aeeb ._gfcg !=nil {_bcdge .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_aeeb ._gfcg .ToPdfObject ());};if _aeeb ._eecbaf !=nil {_bcdge .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_aeeb ._eecbaf );
}else if _aeeb ._baag !=nil {_abfbc ,_bcbfb :=_aeeb ._baag .Stream ();if _bcbfb !=nil {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bcbfb );
}else {_bcdge .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_abfbc );};};return _bcdge ;};

// ToInteger convert to an integer format.
func (_gbb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_geec :=_eg .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_geec *_gbb .C ()),uint32 (_geec *_gbb .M ()),uint32 (_geec *_gbb .Y ()),uint32 (_geec *_gbb .K ())};};

// Subtype returns the font's "Subtype" field.
func (_gdefgb *PdfFont )Subtype ()string {_agcb :=_gdefgb .baseFields ()._cfcgc ;if _dgace ,_gaaa :=_gdefgb ._egbcf .(*pdfFontType0 );_gaaa {_agcb =_agcb +"\u003a"+_dgace .DescendantFont .Subtype ();};return _agcb ;};func _cedbe (_gcdec *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gcdec }};


// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_bbdaf :=&PdfColorspaceDeviceN {};return _bbdaf ;};

// ToPdfObject implements interface PdfModel.
func (_ecfg *PdfAnnotationHighlight )ToPdfObject ()_be .PdfObject {_ecfg .PdfAnnotation .ToPdfObject ();_fbfc :=_ecfg ._dbf ;_ebdg :=_fbfc .PdfObject .(*_be .PdfObjectDictionary );_ecfg .PdfAnnotationMarkup .appendToPdfDictionary (_ebdg );_ebdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_ebdg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ecfg .QuadPoints );return _fbfc ;};

// SetLocation sets the `Location` field of the signature.
func (_ggaeg *PdfSignature )SetLocation (location string ){_ggaeg .Location =_be .MakeString (location )};func (_bfbf *PdfReader )newPdfAnnotationWidgetFromDict (_bbcd *_be .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dafe :=PdfAnnotationWidget {};
_dafe .H =_bbcd .Get ("\u0048");_dafe .MK =_bbcd .Get ("\u004d\u004b");_dafe .A =_bbcd .Get ("\u0041");_dafe .AA =_bbcd .Get ("\u0041\u0041");_dafe .BS =_bbcd .Get ("\u0042\u0053");_dafe .Parent =_bbcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dafe ,nil ;
};var _ pdfFont =(*pdfFontType0 )(nil );

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_fecae *_de .Document )error ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_adedg *PdfColorCalGray )GetNumComponents ()int {return 1};func _ddgac (_egcce _be .PdfObject )(*PdfShading ,error ){_gegff :=&PdfShading {};var _gbagg *_be .PdfObjectDictionary ;if _eabf ,_gfcac :=_be .GetIndirect (_egcce );_gfcac {_gegff ._cgdab =_eabf ;
_bbgcb ,_deege :=_eabf .PdfObject .(*_be .PdfObjectDictionary );if !_deege {_caf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_be .ErrTypeError ;
};_gbagg =_bbgcb ;}else if _fggeac ,_bgedg :=_be .GetStream (_egcce );_bgedg {_gegff ._cgdab =_fggeac ;_gbagg =_fggeac .PdfObjectDictionary ;}else if _gacfe ,_cafb :=_be .GetDict (_egcce );_cafb {_gegff ._cgdab =_gacfe ;_gbagg =_gacfe ;}else {_caf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_egcce );
return nil ,_be .ErrTypeError ;};if _gbagg ==nil {_caf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_bdf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_egcce =_gbagg .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _egcce ==nil {_caf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_egcce =_be .TraceToDirectObject (_egcce );_ecbf ,_ceffb :=_egcce .(*_be .PdfObjectInteger );if !_ceffb {_caf .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_egcce );
return nil ,_be .ErrTypeError ;};if *_ecbf < 1||*_ecbf > 7{_caf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_ecbf );
return nil ,_be .ErrTypeError ;};_gegff .ShadingType =_ecbf ;_egcce =_gbagg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _egcce ==nil {_caf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dfdd ,_aacfc :=NewPdfColorspaceFromPdfObject (_egcce );if _aacfc !=nil {_caf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_aacfc );
return nil ,_aacfc ;};_gegff .ColorSpace =_dfdd ;_egcce =_gbagg .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _egcce !=nil {_egcce =_be .TraceToDirectObject (_egcce );_eaaeg ,_cgbdbb :=_egcce .(*_be .PdfObjectArray );if !_cgbdbb {_caf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_egcce );
return nil ,_be .ErrTypeError ;};_gegff .Background =_eaaeg ;};_egcce =_gbagg .Get ("\u0042\u0042\u006f\u0078");if _egcce !=nil {_egcce =_be .TraceToDirectObject (_egcce );_acbde ,_faabg :=_egcce .(*_be .PdfObjectArray );if !_faabg {_caf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_egcce );
return nil ,_be .ErrTypeError ;};_dgcbg ,_gcfbg :=NewPdfRectangle (*_acbde );if _gcfbg !=nil {_caf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gcfbg );return nil ,_gcfbg ;};_gegff .BBox =_dgcbg ;};_egcce =_gbagg .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _egcce !=nil {_egcce =_be .TraceToDirectObject (_egcce );_beffa ,_ebfda :=_egcce .(*_be .PdfObjectBool );if !_ebfda {_caf .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egcce );
return nil ,_be .ErrTypeError ;};_gegff .AntiAlias =_beffa ;};switch *_ecbf {case 1:_fdea ,_bbba :=_bcdcd (_gbagg );if _bbba !=nil {return nil ,_bbba ;};_fdea .PdfShading =_gegff ;_gegff ._gabe =_fdea ;return _gegff ,nil ;case 2:_ggbge ,_bdefe :=_fcba (_gbagg );
if _bdefe !=nil {return nil ,_bdefe ;};_ggbge .PdfShading =_gegff ;_gegff ._gabe =_ggbge ;return _gegff ,nil ;case 3:_eebbg ,_cabge :=_efegf (_gbagg );if _cabge !=nil {return nil ,_cabge ;};_eebbg .PdfShading =_gegff ;_gegff ._gabe =_eebbg ;return _gegff ,nil ;
case 4:_dcgga ,_ddgaa :=_fafcg (_gbagg );if _ddgaa !=nil {return nil ,_ddgaa ;};_dcgga .PdfShading =_gegff ;_gegff ._gabe =_dcgga ;return _gegff ,nil ;case 5:_bfegec ,_fgagd :=_cabdf (_gbagg );if _fgagd !=nil {return nil ,_fgagd ;};_bfegec .PdfShading =_gegff ;
_gegff ._gabe =_bfegec ;return _gegff ,nil ;case 6:_dgaggb ,_fgeaf :=_bdca (_gbagg );if _fgeaf !=nil {return nil ,_fgeaf ;};_dgaggb .PdfShading =_gegff ;_gegff ._gabe =_dgaggb ;return _gegff ,nil ;case 7:_gefdc ,_ebeae :=_aceeb (_gbagg );if _ebeae !=nil {return nil ,_ebeae ;
};_gefdc .PdfShading =_gegff ;_gegff ._gabe =_gefdc ;return _gegff ,nil ;};return nil ,_bdf .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func _dbgba (_cgeba *PdfField ,_abdb _be .PdfObject )error {switch _cgeba .GetContext ().(type ){case *PdfFieldText :switch _bcfb :=_abdb .(type ){case *_be .PdfObjectName :_edbe :=_bcfb ;
_caf .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_edbe .String ());
_cgeba .V =_be .MakeEncodedString (_bcfb .String (),true );case *_be .PdfObjectString :_cgeba .V =_be .MakeEncodedString (_bcfb .String (),true );default:_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_bcfb ,_bcfb );
};case *PdfFieldButton :switch _abdb .(type ){case *_be .PdfObjectName :if len (_abdb .String ())> 0{_cgeba .V =_abdb ;_cgfec (_cgeba ,_abdb );};case *_be .PdfObjectString :if len (_abdb .String ())> 0{_cgeba .V =_be .MakeName (_abdb .String ());_cgfec (_cgeba ,_cgeba .V );
};default:_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cgeba .PartialName (),_abdb );_cgeba .V =_abdb ;};case *PdfFieldChoice :switch _abdb .(type ){case *_be .PdfObjectName :if len (_abdb .String ())> 0{_cgeba .V =_be .MakeString (_abdb .String ());
_cgfec (_cgeba ,_abdb );};case *_be .PdfObjectString :if len (_abdb .String ())> 0{_cgeba .V =_abdb ;_cgfec (_cgeba ,_be .MakeName (_abdb .String ()));};default:_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cgeba .PartialName (),_abdb );
_cgeba .V =_abdb ;};case *PdfFieldSignature :_caf .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cgeba .PartialName (),_abdb );
};return nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_ddebe *PdfAppender )WriteToFile (outputPath string )error {_ceee ,_gfbgc :=_dag .Create (outputPath );if _gfbgc !=nil {return _gfbgc ;};defer _ceee .Close ();return _ddebe .Write (_ceee );};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cgab pdfFontSimple )GetRuneMetrics (r rune )(_ecg .CharMetrics ,bool ){if _cgab ._afcd !=nil {_gaffa ,_gcea :=_cgab ._afcd .Read (r );if _gcea {return _gaffa ,true ;};};_adacd :=_cgab .Encoder ();if _adacd ==nil {_caf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cgab );
return _ecg .CharMetrics {},false ;};_eecfb ,_baca :=_adacd .RuneToCharcode (r );if !_baca {if r !=' '{_caf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cgab );
};return _ecg .CharMetrics {},false ;};_ecacc ,_fgdgd :=_cgab .GetCharMetrics (_eecfb );return _ecacc ,_fgdgd ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_fgacb *PdfOutline )GetContainingPdfObject ()_be .PdfObject {return _fgacb ._gdbcg };func (_agcc *PdfReader )loadStructure ()error {if _agcc ._gfafb .GetCrypter ()!=nil &&!_agcc ._gfafb .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_eecc :=_agcc ._gfafb .GetTrailer ();if _eecc ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cfgfa ,_adacge :=_eecc .Get ("\u0052\u006f\u006f\u0074").(*_be .PdfObjectReference );if !_adacge {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_eecc );
};_dcdec ,_bgfc :=_agcc ._gfafb .LookupByReference (*_cfgfa );if _bgfc !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bgfc );
return _bgfc ;};_dcbeb ,_adacge :=_dcdec .(*_be .PdfIndirectObject );if !_adacge {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dcdec ,*_eecc );
return _bdf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cggb ,_adacge :=(*_dcbeb ).PdfObject .(*_be .PdfObjectDictionary );if !_adacge {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dcbeb .PdfObject );
return _bdf .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_caf .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cggb );_edcgf ,_adacge :=_cggb .Get ("\u0050\u0061\u0067e\u0073").(*_be .PdfObjectReference );
if !_adacge {return _bdf .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_gfbfdf ,_bgfc :=_agcc ._gfafb .LookupByReference (*_edcgf );
if _bgfc !=nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bgfc ;};_cdffa ,_adacge :=_gfbfdf .(*_be .PdfIndirectObject );if !_adacge {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_caf .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_cdffa );return _bdf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cegac ,_adacge :=_cdffa .PdfObject .(*_be .PdfObjectDictionary );if !_adacge {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_cdffa );
return _bdf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dbfda ,_adacge :=_be .GetInt (_cegac .Get ("\u0043\u006f\u0075n\u0074"));if !_adacge {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _bdf .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_adacge =_be .GetName (_cegac .Get ("\u0054\u0079\u0070\u0065"));!_adacge {_caf .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cegac .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0050\u0061\u0067e\u0073"));};if _fcfeg ,_eddab :=_be .GetInt (_cegac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_eddab {_beafc :=int64 (*_fcfeg );_agcc .Rotate =&_beafc ;};_agcc ._fdcd =_cfgfa ;
_agcc ._dcdbf =_cggb ;_agcc ._cbbgcb =_cegac ;_agcc ._fbgef =_cdffa ;_agcc ._ddfbe =int (*_dbfda );_agcc ._cgbdb =[]*_be .PdfIndirectObject {};_bcdfa :=map[_be .PdfObject ]struct{}{};_bgfc =_agcc .buildPageList (_cdffa ,nil ,_bcdfa );if _bgfc !=nil {return _bgfc ;
};_caf .Log .Trace ("\u002d\u002d\u002d");_caf .Log .Trace ("\u0054\u004f\u0043");_caf .Log .Trace ("\u0050\u0061\u0067e\u0073");_caf .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_agcc ._cgbdb ),_agcc ._cgbdb );_agcc ._dddeg ,_bgfc =_agcc .loadOutlines ();
if _bgfc !=nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bgfc );
return _bgfc ;};_agcc .AcroForm ,_bgfc =_agcc .loadForms ();if _bgfc !=nil {return _bgfc ;};_agcc .DSS ,_bgfc =_agcc .loadDSS ();if _bgfc !=nil {return _bgfc ;};_agcc ._fgbcb ,_bgfc =_agcc .loadPerms ();if _bgfc !=nil {return _bgfc ;};return nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _be .PdfObject ;AN _be .PdfObject ;OP _be .PdfObject ;JS _be .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dgd *PdfActionURI )ToPdfObject ()_be .PdfObject {_dgd .PdfAction .ToPdfObject ();_ggbc :=_dgd ._deb ;_cag :=_ggbc .PdfObject .(*_be .PdfObjectDictionary );_cag .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeURI )));_cag .SetIfNotNil ("\u0055\u0052\u0049",_dgd .URI );
_cag .SetIfNotNil ("\u0049\u0073\u004da\u0070",_dgd .IsMap );return _ggbc ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_aebde DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cc *PdfActionLaunch )ToPdfObject ()_be .PdfObject {_cc .PdfAction .ToPdfObject ();_bdg :=_cc ._deb ;_fdd :=_bdg .PdfObject .(*_be .PdfObjectDictionary );_fdd .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeLaunch )));if _cc .F !=nil {_fdd .Set ("\u0046",_cc .F .ToPdfObject ());
};_fdd .SetIfNotNil ("\u0057\u0069\u006e",_cc .Win );_fdd .SetIfNotNil ("\u004d\u0061\u0063",_cc .Mac );_fdd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cc .Unix );_fdd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cc .NewWindow );return _bdg ;
};func (_bbde *PdfReader )newPdfAnnotationStrikeOut (_aaaf *_be .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fage :=PdfAnnotationStrikeOut {};_gbgd ,_eff :=_bbde .newPdfAnnotationMarkupFromDict (_aaaf );if _eff !=nil {return nil ,_eff ;};_fage .PdfAnnotationMarkup =_gbgd ;
_fage .QuadPoints =_aaaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fage ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_eafc *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fbcd :=pageNum -1;var _eegb *PdfPage ;for _gdce ,_fega :=range _eafc ._bac {if _gdce ==_fbcd {_eegb =_fega ;};};if _eegb ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _eegb ._bcadgc !=nil &&_eegb ._bcadgc .GetParser ()==_eafc ._gaef ._gfafb {_eegb =_eegb .Duplicate ();_eafc ._bac [_fbcd ]=_eegb ;};page =page .Duplicate ();_eebab (page );_abfb :=_adc (_eegb );_eega :=_adc (page );_egee :=make (map[_be .PdfObjectName ]_be .PdfObjectName );
for _dgbd :=range _eega {if _ ,_faa :=_abfb [_dgbd ];_faa {for _bdfd :=1;true ;_bdfd ++{_aedgf :=_be .PdfObjectName (string (_dgbd )+_bdbc .Itoa (_bdfd ));if _ ,_ddddb :=_abfb [_aedgf ];!_ddddb {_egee [_dgbd ]=_aedgf ;break ;};};};};_afaea ,_dfdc :=page .GetContentStreams ();
if _dfdc !=nil {return _dfdc ;};_cgfd ,_dfdc :=_eegb .GetContentStreams ();if _dfdc !=nil {return _dfdc ;};for _fgb ,_eaggb :=range _afaea {for _cccf ,_aaeb :=range _egee {_eaggb =_bb .Replace (_eaggb ,"\u002f"+string (_cccf ),"\u002f"+string (_aaeb ),-1);
};_afaea [_fgb ]=_eaggb ;};_cgfd =append (_cgfd ,_afaea ...);if _aga :=_eegb .SetContentStreams (_cgfd ,_be .NewFlateEncoder ());_aga !=nil {return _aga ;};_eegb ._geca =append (_eegb ._geca ,page ._geca ...);if _eegb .Resources ==nil {_eegb .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_eegb .Resources .Font =_eafc .mergeResources (_eegb .Resources .Font ,page .Resources .Font ,_egee );_eegb .Resources .XObject =_eafc .mergeResources (_eegb .Resources .XObject ,page .Resources .XObject ,_egee );_eegb .Resources .Properties =_eafc .mergeResources (_eegb .Resources .Properties ,page .Resources .Properties ,_egee );
if _eegb .Resources .ProcSet ==nil {_eegb .Resources .ProcSet =page .Resources .ProcSet ;};_eegb .Resources .Shading =_eafc .mergeResources (_eegb .Resources .Shading ,page .Resources .Shading ,_egee );_eegb .Resources .ExtGState =_eafc .mergeResources (_eegb .Resources .ExtGState ,page .Resources .ExtGState ,_egee );
};_gafb ,_dfdc :=_eegb .GetMediaBox ();if _dfdc !=nil {return _dfdc ;};_dca ,_dfdc :=page .GetMediaBox ();if _dfdc !=nil {return _dfdc ;};var _fbec bool ;if _gafb .Llx > _dca .Llx {_gafb .Llx =_dca .Llx ;_fbec =true ;};if _gafb .Lly > _dca .Lly {_gafb .Lly =_dca .Lly ;
_fbec =true ;};if _gafb .Urx < _dca .Urx {_gafb .Urx =_dca .Urx ;_fbec =true ;};if _gafb .Ury < _dca .Ury {_gafb .Ury =_dca .Ury ;_fbec =true ;};if _fbec {_eegb .MediaBox =_gafb ;};return nil ;};func (_cfcb *PdfReader )newPdfActionGotoEFromDict (_acdf *_be .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gfba ,_cedeg :=_ed (_acdf .Get ("\u0046"));
if _cedeg !=nil {return nil ,_cedeg ;};return &PdfActionGoToE {D :_acdf .Get ("\u0044"),NewWindow :_acdf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_acdf .Get ("\u0054"),F :_gfba },nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _dga .ReadSeeker )(*PdfFont ,error ){const _dadf =_ac .CharCode (32);const _ebaad =_ac .CharCode (255);_fcfd ,_aaafd :=_fd .ReadAll (r );if _aaafd !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aaafd );
return nil ,_aaafd ;};_bagcab ,_aaafd :=_ecg .TtfParse (_ec .NewReader (_fcfd ));if _aaafd !=nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_aaafd );
return nil ,_aaafd ;};_gfbc :=&pdfFontSimple {_gcdgc :make (map[_ac .CharCode ]float64 ),fontCommon :fontCommon {_cfcgc :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gfbc ._ceec =_ac .NewWinAnsiEncoder ();_gfbc ._abdd =_bagcab .PostScriptName ;
_gfbc .FirstChar =_be .MakeInteger (int64 (_dadf ));_gfbc .LastChar =_be .MakeInteger (int64 (_ebaad ));_agab :=1000.0/float64 (_bagcab .UnitsPerEm );if len (_bagcab .Widths )<=0{return nil ,_bdf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gbgde :=_agab *float64 (_bagcab .Widths [0]);_eeba :=make ([]float64 ,0,_ebaad -_dadf +1);for _abbcd :=_dadf ;_abbcd <=_ebaad ;_abbcd ++{_efdfb ,_cceb :=_gfbc .Encoder ().CharcodeToRune (_abbcd );if !_cceb {_caf .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_abbcd );
_eeba =append (_eeba ,_gbgde );continue ;};_dcab ,_ebdgf :=_bagcab .Chars [_efdfb ];if !_ebdgf {_caf .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_eeba =append (_eeba ,_gbgde );continue ;
};_adae :=_agab *float64 (_bagcab .Widths [_dcab ]);_eeba =append (_eeba ,_adae );};_gfbc .Widths =_be .MakeIndirectObject (_be .MakeArrayFromFloats (_eeba ));if len (_eeba )< int (_ebaad -_dadf +1){_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_eeba ),255-32+1);
return nil ,_be .ErrRangeError ;};for _gbce :=_dadf ;_gbce <=_ebaad ;_gbce ++{_gfbc ._gcdgc [_gbce ]=_eeba [_gbce -_dadf ];};_gfbc .Encoding =_be .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gbcgc :=&PdfFontDescriptor {};
_gbcgc .FontName =_be .MakeName (_bagcab .PostScriptName );_gbcgc .Ascent =_be .MakeFloat (_agab *float64 (_bagcab .TypoAscender ));_gbcgc .Descent =_be .MakeFloat (_agab *float64 (_bagcab .TypoDescender ));_gbcgc .CapHeight =_be .MakeFloat (_agab *float64 (_bagcab .CapHeight ));
_gbcgc .FontBBox =_be .MakeArrayFromFloats ([]float64 {_agab *float64 (_bagcab .Xmin ),_agab *float64 (_bagcab .Ymin ),_agab *float64 (_bagcab .Xmax ),_agab *float64 (_bagcab .Ymax )});_gbcgc .ItalicAngle =_be .MakeFloat (_bagcab .ItalicAngle );_gbcgc .MissingWidth =_be .MakeFloat (_agab *float64 (_bagcab .Widths [0]));
_gbba ,_aaafd :=_be .MakeStream (_fcfd ,_be .NewFlateEncoder ());if _aaafd !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aaafd );
return nil ,_aaafd ;};_gbba .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_be .MakeInteger (int64 (len (_fcfd ))));_gbcgc .FontFile2 =_gbba ;if _bagcab .Bold {_gbcgc .StemV =_be .MakeInteger (120);}else {_gbcgc .StemV =_be .MakeInteger (70);
};_adgbd :=_bbgd ;if _bagcab .IsFixedPitch {_adgbd |=_ggaa ;};if _bagcab .ItalicAngle !=0{_adgbd |=_cfga ;};_gbcgc .Flags =_be .MakeInteger (int64 (_adgbd ));_gfbc ._gfcg =_gbcgc ;_beee :=&PdfFont {_egbcf :_gfbc };return _beee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ceb *PdfActionNamed )ToPdfObject ()_be .PdfObject {_ceb .PdfAction .ToPdfObject ();_gge :=_ceb ._deb ;_gbe :=_gge .PdfObject .(*_be .PdfObjectDictionary );_gbe .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeNamed )));_gbe .SetIfNotNil ("\u004e",_ceb .N );
return _gge ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dgacee *PdfReader )CheckAccessRights (password []byte )(bool ,_fa .Permissions ,error ){return _dgacee ._gfafb .CheckAccessRights (password );};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_gbgb :=NewPdfAnnotation ();_bdee :=&PdfAnnotationRichMedia {};_bdee .PdfAnnotation =_gbgb ;_gbgb .SetContext (_bdee );return _bdee ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cfbge *_be .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_be .PdfObjectName ;Filter *_be .PdfObjectName ;SubFilter *_be .PdfObjectName ;Contents *_be .PdfObjectString ;Cert _be .PdfObject ;ByteRange *_be .PdfObjectArray ;Reference *_be .PdfObjectArray ;Changes *_be .PdfObjectArray ;Name *_be .PdfObjectString ;
M *_be .PdfObjectString ;Location *_be .PdfObjectString ;Reason *_be .PdfObjectString ;ContactInfo *_be .PdfObjectString ;R *_be .PdfObjectInteger ;V *_be .PdfObjectInteger ;PropBuild *_be .PdfObjectDictionary ;PropAuthTime *_be .PdfObjectInteger ;PropAuthType *_be .PdfObjectName ;
};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func _becef (_caacg _be .PdfObject )(*PdfColorspaceICCBased ,error ){_bcef :=&PdfColorspaceICCBased {};if _cfbb ,_fcca :=_caacg .(*_be .PdfIndirectObject );_fcca {_bcef ._ebad =_cfbb ;};_caacg =_be .TraceToDirectObject (_caacg );
_adab ,_gfad :=_caacg .(*_be .PdfObjectArray );if !_gfad {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adab .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_caacg =_be .TraceToDirectObject (_adab .Get (0));_cfcg ,_gfad :=_caacg .(*_be .PdfObjectName );if !_gfad {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cfcg !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_caacg =_adab .Get (1);
_adcf ,_gfad :=_be .GetStream (_caacg );if !_gfad {_caf .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_caacg );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bccec :=_adcf .PdfObjectDictionary ;_bgee ,_gfad :=_bccec .Get ("\u004e").(*_be .PdfObjectInteger );
if !_gfad {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_bgee !=1&&*_bgee !=3&&*_bgee !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_bcef .N =int (*_bgee );if _feef :=_bccec .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_feef !=nil {_cfda ,_cgeec :=NewPdfColorspaceFromPdfObject (_feef );if _cgeec !=nil {return nil ,_cgeec ;};_bcef .Alternate =_cfda ;};if _acda :=_bccec .Get ("\u0052\u0061\u006eg\u0065");
_acda !=nil {_acda =_be .TraceToDirectObject (_acda );_cffbb ,_edcb :=_acda .(*_be .PdfObjectArray );if !_edcb {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cffbb .Len ()!=2*_bcef .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_cdea ,_bgcg :=_cffbb .GetAsFloat64Slice ();if _bgcg !=nil {return nil ,_bgcg ;};_bcef .Range =_cdea ;}else {_bcef .Range =make ([]float64 ,2*_bcef .N );for _bcec :=0;_bcec < _bcef .N ;_bcec ++{_bcef .Range [2*_bcec ]=0.0;_bcef .Range [2*_bcec +1]=1.0;
};};if _fgag :=_bccec .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fgag !=nil {_eecba ,_dede :=_fgag .(*_be .PdfObjectStream );if !_dede {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bcef .Metadata =_eecba ;};_acee ,_adacc :=_be .DecodeStream (_adcf );if _adacc !=nil {return nil ,_adacc ;};_bcef .Data =_acee ;_bcef ._cgee =_adcf ;return _bcef ,nil ;};func _dafgb ()string {_ccgeg .Lock ();defer _ccgeg .Unlock ();return _fdab };

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_be .PdfObjectInteger ;TilingType *_be .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_be .PdfObjectFloat ;YStep *_be .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_be .PdfObjectArray ;};

// Encoder returns the font's text encoder.
func (_ddaca pdfFontType3 )Encoder ()_ac .TextEncoder {return _ddaca ._feacg };

// GetDescent returns the Descent of the font `descriptor`.
func (_feed *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _be .GetNumberAsFloat (_feed .Descent );};func (_dfec *LTV )generateVRIKey (_ecdbe *PdfSignature )(string ,error ){_edgcf ,_dcdcd :=_dgcd (_ecdbe .Contents .Bytes ());if _dcdcd !=nil {return "",_dcdcd ;
};return _bb .ToUpper (_ge .EncodeToString (_edgcf )),nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_adfed *PdfAcroForm ,_aeed *PdfField ,_bgedb *PdfAnnotationWidget )(*_be .PdfObjectDictionary ,error );};

// ToPdfObject implements interface PdfModel.
func (_gdebf *PdfAnnotationFileAttachment )ToPdfObject ()_be .PdfObject {_gdebf .PdfAnnotation .ToPdfObject ();_efa :=_gdebf ._dbf ;_bbabe :=_efa .PdfObject .(*_be .PdfObjectDictionary );_gdebf .PdfAnnotationMarkup .appendToPdfDictionary (_bbabe );_bbabe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_bbabe .SetIfNotNil ("\u0046\u0053",_gdebf .FS );_bbabe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gdebf .Name );return _efa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_adaf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cefc ,_abgfg :=_be .GetNumbersAsFloat (objects );
if _abgfg !=nil {return nil ,_abgfg ;};return _adaf .ColorFromFloats (_cefc );};

// ToPdfObject returns the PDF representation of the pattern.
func (_cecde *PdfPattern )ToPdfObject ()_be .PdfObject {_cgcaf :=_cecde .getDict ();_cgcaf .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cgcaf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_be .MakeInteger (_cecde .PatternType ));
return _cecde ._fceaa ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_be .PdfObjectInteger ;BitsPerComponent *_be .PdfObjectInteger ;VerticesPerRow *_be .PdfObjectInteger ;Decode *_be .PdfObjectArray ;Function []PdfFunction ;};func (_adea *pdfCIDFontType2 )baseFields ()*fontCommon {return &_adea .fontCommon };


// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_abde :=NewPdfAnnotation ();_cad :=&PdfAnnotationSquiggly {};_cad .PdfAnnotation =_abde ;_cad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abde .SetContext (_cad );return _cad ;};func (_acdfb *PdfSignature )extractChainFromPKCS7 ()([]*_bd .Certificate ,error ){_bgeag ,_fceec :=_dgf .Parse (_acdfb .Contents .Bytes ());
if _fceec !=nil {return nil ,_fceec ;};return _bgeag .Certificates ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_aegfc *PdfPattern )IsTiling ()bool {return _aegfc .PatternType ==1};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ebdgc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// Add appends a top level outline item to the outline.
func (_fcgg *Outline )Add (item *OutlineItem ){_fcgg .Entries =append (_fcgg .Entries ,item )};

// GetBorderWidth returns the border style's width.
func (_dgff *PdfBorderStyle )GetBorderWidth ()float64 {if _dgff .W ==nil {return 1;};return *_dgff .W ;};func (_bedcd *PdfWriter )writeXRefStreams (_cabce int ,_fbedf int64 )error {_cbedg :=_cabce +1;_bedcd ._bcgf [_cbedg ]=crossReference {Type :1,ObjectNumber :_cbedg ,Offset :_fbedf };
_bfcg :=_ec .NewBuffer (nil );_ebgab :=_be .MakeArray ();for _cegca :=0;_cegca <=_cabce ;{for ;_cegca <=_cabce ;_cegca ++{_cfcbad ,_eadbe :=_bedcd ._bcgf [_cegca ];if _eadbe &&(!_bedcd ._fdgcf ||_bedcd ._fdgcf &&(_cfcbad .Type ==1&&_cfcbad .Offset >=_bedcd ._aagbf ||_cfcbad .Type ==0)){break ;
};};var _gbcba int ;for _gbcba =_cegca +1;_gbcba <=_cabce ;_gbcba ++{_gdaaf ,_fccf :=_bedcd ._bcgf [_gbcba ];if _fccf &&(!_bedcd ._fdgcf ||_bedcd ._fdgcf &&(_gdaaf .Type ==1&&_gdaaf .Offset > _bedcd ._aagbf )){continue ;};break ;};_ebgab .Append (_be .MakeInteger (int64 (_cegca )),_be .MakeInteger (int64 (_gbcba -_cegca )));
for _beacf :=_cegca ;_beacf < _gbcba ;_beacf ++{_aceff :=_bedcd ._bcgf [_beacf ];switch _aceff .Type {case 0:_gd .Write (_bfcg ,_gd .BigEndian ,byte (0));_gd .Write (_bfcg ,_gd .BigEndian ,uint32 (0));_gd .Write (_bfcg ,_gd .BigEndian ,uint16 (0xFFFF));
case 1:_gd .Write (_bfcg ,_gd .BigEndian ,byte (1));_gd .Write (_bfcg ,_gd .BigEndian ,uint32 (_aceff .Offset ));_gd .Write (_bfcg ,_gd .BigEndian ,uint16 (_aceff .Generation ));case 2:_gd .Write (_bfcg ,_gd .BigEndian ,byte (2));_gd .Write (_bfcg ,_gd .BigEndian ,uint32 (_aceff .ObjectNumber ));
_gd .Write (_bfcg ,_gd .BigEndian ,uint16 (_aceff .Index ));};};_cegca =_gbcba +1;};_eebfb ,_dabee :=_be .MakeStream (_bfcg .Bytes (),_be .NewFlateEncoder ());if _dabee !=nil {return _dabee ;};_eebfb .ObjectNumber =int64 (_cbedg );_eebfb .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0058\u0052\u0065\u0066"));
_eebfb .PdfObjectDictionary .Set ("\u0057",_be .MakeArray (_be .MakeInteger (1),_be .MakeInteger (4),_be .MakeInteger (2)));_eebfb .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_ebgab );_eebfb .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_be .MakeInteger (int64 (_cbedg +1)));
_eebfb .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_bedcd ._ceece );_eebfb .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_bedcd ._babab );if _bedcd ._fdgcf &&_bedcd ._gdaag > 0{_eebfb .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_be .MakeInteger (_bedcd ._gdaag ));
};if _bedcd ._bbdaa !=nil {_eebfb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bedcd ._gcabc );};if _bedcd ._acgaca ==nil &&_bedcd ._fgbbf !=""&&_bedcd ._abcda !=""{_bedcd ._acgaca =_be .MakeArray (_be .MakeHexString (_bedcd ._fgbbf ),_be .MakeHexString (_bedcd ._abcda ));
};if _bedcd ._acgaca !=nil {_caf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bedcd ._acgaca );_eebfb .Set ("\u0049\u0044",_bedcd ._acgaca );};_bedcd .writeObject (int (_eebfb .ObjectNumber ),_eebfb );return nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_degg *PdfColorspaceCalGray )ToPdfObject ()_be .PdfObject {_gca :=&_be .PdfObjectArray {};_gca .Append (_be .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_degga :=_be .MakeDict ();if _degg .WhitePoint !=nil {_degga .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_be .MakeArray (_be .MakeFloat (_degg .WhitePoint [0]),_be .MakeFloat (_degg .WhitePoint [1]),_be .MakeFloat (_degg .WhitePoint [2])));
}else {_caf .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _degg .BlackPoint !=nil {_degga .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_be .MakeArray (_be .MakeFloat (_degg .BlackPoint [0]),_be .MakeFloat (_degg .BlackPoint [1]),_be .MakeFloat (_degg .BlackPoint [2])));
};_degga .Set ("\u0047\u0061\u006dm\u0061",_be .MakeFloat (_degg .Gamma ));_gca .Append (_degga );if _degg ._dbec !=nil {_degg ._dbec .PdfObject =_gca ;return _degg ._dbec ;};return _gca ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _be .PdfObject ;Volume _be .PdfObject ;Synchronous _be .PdfObject ;Repeat _be .PdfObject ;Mix _be .PdfObject ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_acbg *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fagc :=_bc .NewReader (img .getBase ());_faeee :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_acbg .AlternateSpace .GetNumComponents (),nil ,img ._bbbgb ,nil );
_bgfg :=_bc .NewWriter (_faeee );_dceeb :=_eg .Pow (2,float64 (img .BitsPerComponent ))-1;_caf .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_caf .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_acbg .TintTransform );_bcdcc :=_acbg .AlternateSpace .DecodeArray ();var (_facgc uint32 ;_afaca error ;);for {_facgc ,_afaca =_fagc .ReadSample ();
if _afaca ==_dga .EOF {break ;};if _afaca !=nil {return img ,_afaca ;};_faf :=float64 (_facgc )/_dceeb ;_dfcad ,_accd :=_acbg .TintTransform .Evaluate ([]float64 {_faf });if _accd !=nil {return img ,_accd ;};for _fcecf ,_cade :=range _dfcad {_ecae :=_fg .LinearInterpolate (_cade ,_bcdcc [_fcecf *2],_bcdcc [_fcecf *2+1],0,1);
if _accd =_bgfg .WriteSample (uint32 (_ecae *_dceeb ));_accd !=nil {return img ,_accd ;};};};return _acbg .AlternateSpace .ImageToRGB (_fggd (&_faeee ));};func (_gebab *PdfReader )loadAnnotations (_ccagc _be .PdfObject )([]*PdfAnnotation ,error ){_deaaa ,_cacga :=_be .GetArray (_ccagc );
if !_cacga {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _gdddd []*PdfAnnotation ;for _ ,_ccab :=range _deaaa .Elements (){_ccab =_be .ResolveReference (_ccab );
if _ ,_cedc :=_ccab .(*_be .PdfObjectNull );_cedc {continue ;};_agaa ,_efedd :=_ccab .(*_be .PdfObjectDictionary );_feefg ,_gfeab :=_ccab .(*_be .PdfIndirectObject );if _efedd {_feefg =&_be .PdfIndirectObject {};_feefg .PdfObject =_agaa ;}else {if !_gfeab {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_fbgfc ,_baacf :=_gebab .newPdfAnnotationFromIndirectObject (_feefg );if _baacf !=nil {return nil ,_baacf ;};switch _efbeg :=_fbgfc .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_debg :=range _gebab .AcroForm .AllFields (){if _debg ._ffcf ==_efbeg .Parent {_efbeg ._bge =_debg ;
break ;};};};if _fbgfc !=nil {_gdddd =append (_gdddd ,_fbgfc );};};return _gdddd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_badbfc *PdfTransformParamsDocMDP )ToPdfObject ()_be .PdfObject {_dfgde :=_be .MakeDict ();_dfgde .SetIfNotNil ("\u0054\u0079\u0070\u0065",_badbfc .Type );_dfgde .SetIfNotNil ("\u0056",_badbfc .V );_dfgde .SetIfNotNil ("\u0050",_badbfc .P );return _dfgde ;
};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_beaa *PdfPageResources )GetXObjectByName (keyName _be .PdfObjectName )(*_be .PdfObjectStream ,XObjectType ){if _beaa .XObject ==nil {return nil ,XObjectTypeUndefined ;};_dcabe ,_defabg :=_be .TraceToDirectObject (_beaa .XObject ).(*_be .PdfObjectDictionary );
if !_defabg {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_be .TraceToDirectObject (_beaa .XObject ));
return nil ,XObjectTypeUndefined ;};if _abbbb :=_dcabe .Get (keyName );_abbbb !=nil {_dgeg ,_gbbaf :=_be .GetStream (_abbbb );if !_gbbaf {_caf .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_abbbb );
return nil ,XObjectTypeUndefined ;};_eeada :=_dgeg .PdfObjectDictionary ;_dbeff ,_gbbaf :=_be .TraceToDirectObject (_eeada .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_be .PdfObjectName );if !_gbbaf {_caf .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_eeada .String ());
return nil ,XObjectTypeUndefined ;};if *_dbeff =="\u0049\u006d\u0061g\u0065"{return _dgeg ,XObjectTypeImage ;}else if *_dbeff =="\u0046\u006f\u0072\u006d"{return _dgeg ,XObjectTypeForm ;}else if *_dbeff =="\u0050\u0053"{return _dgeg ,XObjectTypePS ;}else {_caf .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_dbeff );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// AddFont adds a font dictionary to the Font resources.
func (_gfbag *PdfPage )AddFont (name _be .PdfObjectName ,font _be .PdfObject )error {if _gfbag .Resources ==nil {_gfbag .Resources =NewPdfPageResources ();};if _gfbag .Resources .Font ==nil {_gfbag .Resources .Font =_be .MakeDict ();};_bfcbd ,_eadb :=_be .TraceToDirectObject (_gfbag .Resources .Font ).(*_be .PdfObjectDictionary );
if !_eadb {_caf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_be .TraceToDirectObject (_gfbag .Resources .Font ));
return _bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfcbd .Set (name ,font );return nil ;};var _accdf =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_eggf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func (_aacb *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_afge *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _afge .flattenFieldsWithOpts (false ,appgen ,opts );};func (_eddg *PdfField )inherit (_aegg func (*PdfField )bool )(bool ,error ){_faae :=map[*PdfField ]bool {};
_gfbfc :=false ;_egceb :=_eddg ;for _egceb !=nil {if _ ,_gcgd :=_faae [_egceb ];_gcgd {return false ,_bdf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_cegf :=_aegg (_egceb );if _cegf {_gfbfc =true ;
break ;};_faae [_egceb ]=true ;_egceb =_egceb .Parent ;};return _gfbfc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gad *PdfAnnotation3D )ToPdfObject ()_be .PdfObject {_gad .PdfAnnotation .ToPdfObject ();_aadd :=_gad ._dbf ;_bddb :=_aadd .PdfObject .(*_be .PdfObjectDictionary );_bddb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0033\u0044"));
_bddb .SetIfNotNil ("\u0033\u0044\u0044",_gad .T3DD );_bddb .SetIfNotNil ("\u0033\u0044\u0056",_gad .T3DV );_bddb .SetIfNotNil ("\u0033\u0044\u0041",_gad .T3DA );_bddb .SetIfNotNil ("\u0033\u0044\u0049",_gad .T3DI );_bddb .SetIfNotNil ("\u0033\u0044\u0042",_gad .T3DB );
return _aadd ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_fcag *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_beecb :=_bc .NewReader (img .getBase ());_dbgfg :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._bbbgb ,img ._ffedg );
_gcfcg :=_bc .NewWriter (_dbgfg );_fdbc :=_eg .Pow (2,float64 (img .BitsPerComponent ))-1;_aacf :=_fcag .GetNumComponents ();_gbabb :=make ([]uint32 ,_aacf );_fbcg :=make ([]float64 ,_aacf );for {_ccag :=_beecb .ReadSamples (_gbabb );if _ccag ==_dga .EOF {break ;
}else if _ccag !=nil {return img ,_ccag ;};for _faabb :=0;_faabb < _aacf ;_faabb ++{_cbaaa :=float64 (_gbabb [_faabb ])/_fdbc ;_fbcg [_faabb ]=_cbaaa ;};_egda ,_ccag :=_fcag .TintTransform .Evaluate (_fbcg );if _ccag !=nil {return img ,_ccag ;};for _ ,_dbdc :=range _egda {_dbdc =_eg .Min (_eg .Max (0,_dbdc ),1.0);
if _ccag =_gcfcg .WriteSample (uint32 (_dbdc *_fdbc ));_ccag !=nil {return img ,_ccag ;};};};return _fcag .AlternateSpace .ImageToRGB (_fggd (&_dbgfg ));};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_eae :=NewPdfAnnotation ();_fb :=&PdfAnnotationFileAttachment {};_fb .PdfAnnotation =_eae ;_fb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eae .SetContext (_fb );return _fb ;};

// ToPdfObject implements interface PdfModel.
func (_aac *PdfActionHide )ToPdfObject ()_be .PdfObject {_aac .PdfAction .ToPdfObject ();_gcc :=_aac ._deb ;_cbd :=_gcc .PdfObject .(*_be .PdfObjectDictionary );_cbd .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeHide )));_cbd .SetIfNotNil ("\u0054",_aac .T );
_cbd .SetIfNotNil ("\u0048",_aac .H );return _gcc ;};

// A returns the value of the A component of the color.
func (_fbgf *PdfColorLab )A ()float64 {return _fbgf [1]};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_adebaf *PdfPageResources )GenerateXObjectName ()_be .PdfObjectName {_bgabae :=1;for {_egdbf :=_be .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_bgabae ));if !_adebaf .HasXObjectByName (*_egdbf ){return *_egdbf ;};_bgabae ++;};};
func (_adac *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ToPdfObject implements interface PdfModel.
func (_eb *PdfActionRendition )ToPdfObject ()_be .PdfObject {_eb .PdfAction .ToPdfObject ();_ab :=_eb ._deb ;_agd :=_ab .PdfObject .(*_be .PdfObjectDictionary );_agd .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeRendition )));_agd .SetIfNotNil ("\u0052",_eb .R );
_agd .SetIfNotNil ("\u0041\u004e",_eb .AN );_agd .SetIfNotNil ("\u004f\u0050",_eb .OP );_agd .SetIfNotNil ("\u004a\u0053",_eb .JS );return _ab ;};func (_eefed *PdfPattern )getDict ()*_be .PdfObjectDictionary {if _bfege ,_ecead :=_eefed ._fceaa .(*_be .PdfIndirectObject );
_ecead {_bebfd ,_efeb :=_bfege .PdfObject .(*_be .PdfObjectDictionary );if !_efeb {return nil ;};return _bebfd ;}else if _gdgg ,_egcba :=_eefed ._fceaa .(*_be .PdfObjectStream );_egcba {return _gdgg .PdfObjectDictionary ;}else {_caf .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_eefed ._fceaa );
return nil ;};};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_deg :=NewPdfAction ();_fe :=&PdfActionGoTo {};_fe .PdfAction =_deg ;_deg .SetContext (_fe );return _fe ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_dadfe *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _dadfe ._dcfgb !=nil {return _dadfe ._dcfgb ,nil ;};if _dadfe .ColorSpace ==nil {return nil ,nil ;};_dabdb ,_ddacc :=_decdd (_dadfe .ColorSpace );if _ddacc !=nil {return nil ,_ddacc ;
};_dadfe ._dcfgb =_dabdb ;return _dadfe ._dcfgb ,nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _be .PdfObject ;Sy _be .PdfObject ;};

// GetNumPages returns the number of pages in the document.
func (_cfcba *PdfReader )GetNumPages ()(int ,error ){if _cfcba ._gfafb .GetCrypter ()!=nil &&!_cfcba ._gfafb .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_cfcba ._cgbdb ),nil ;};func (_ebfagf *PdfWriter )writeOutputIntents ()error {if len (_ebfagf ._gece )==0{return nil ;};_dagdg :=make ([]_be .PdfObject ,len (_ebfagf ._gece ));for _dgfgg ,_bccef :=range _ebfagf ._gece {_gbffc :=_bccef .ToPdfObject ();
_dagdg [_dgfgg ]=_be .MakeIndirectObject (_gbffc );};_ebfg :=_be .MakeIndirectObject (_be .MakeArray (_dagdg ...));_ebfagf ._agced .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_ebfg );if _ageeg :=_ebfagf .addObjects (_ebfg );
_ageeg !=nil {return _ageeg ;};return nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _be .PdfObject ;LE _be .PdfObject ;BS _be .PdfObject ;IC _be .PdfObject ;BE _be .PdfObject ;IT _be .PdfObject ;Measure _be .PdfObject ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_be .PdfObject ;GetContainingPdfObject ()_be .PdfObject ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bcce :=PdfColorDeviceRGB {r ,g ,b };return &_bcce ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _be .PdfObjectName ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _be .PdfObject ;BS _be .PdfObject ;LE _be .PdfObject ;IC _be .PdfObject ;LL _be .PdfObject ;LLE _be .PdfObject ;Cap _be .PdfObject ;IT _be .PdfObject ;LLO _be .PdfObject ;CP _be .PdfObject ;
Measure _be .PdfObject ;CO _be .PdfObject ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_dbcgd =title };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_gcegb *PdfFont )SubsetRegistered ()error {switch _gdg :=_gcegb ._egbcf .(type ){case *pdfFontType0 :_fdgfa :=_gdg .subsetRegistered ();if _fdgfa !=nil {_caf .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fdgfa );
return _fdgfa ;};if _gdg ._egagc !=nil {if _gdg ._bgbb !=nil {_gdg ._bgbb .ToPdfObject ();};_gdg .ToPdfObject ();};default:_caf .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gdg );
};return nil ;};func _cfgdd ()string {return _caf .Version };func _efgc (_cbabe _ecg .StdFont )pdfFontSimple {_fgfbf :=_cbabe .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_cfcgc :"\u0054\u0079\u0070e\u0031",_abdd :_cbabe .Name ()},_afcd :_cbabe .GetMetricsTable (),_eede :&PdfFontDescriptor {FontName :_be .MakeName (string (_fgfbf .Name )),FontFamily :_be .MakeName (_fgfbf .Family ),FontWeight :_be .MakeFloat (float64 (_fgfbf .Weight )),Flags :_be .MakeInteger (int64 (_fgfbf .Flags )),FontBBox :_be .MakeArrayFromFloats (_fgfbf .BBox [:]),ItalicAngle :_be .MakeFloat (_fgfbf .ItalicAngle ),Ascent :_be .MakeFloat (_fgfbf .Ascent ),Descent :_be .MakeFloat (_fgfbf .Descent ),CapHeight :_be .MakeFloat (_fgfbf .CapHeight ),XHeight :_be .MakeFloat (_fgfbf .XHeight ),StemV :_be .MakeFloat (_fgfbf .StemV ),StemH :_be .MakeFloat (_fgfbf .StemH )},_fcege :_cbabe .Encoder ()};
};func (_ffd *PdfReader )newPdfActionFromIndirectObject (_abe *_be .PdfIndirectObject )(*PdfAction ,error ){_cab ,_bed :=_abe .PdfObject .(*_be .PdfObjectDictionary );if !_bed {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ffd ._cfgbc .GetModelFromPrimitive (_cab );model !=nil {_gfbf ,_bee :=model .(*PdfAction );if !_bee {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _gfbf ,nil ;};_cfc :=&PdfAction {};_cfc ._deb =_abe ;_ffd ._cfgbc .Register (_cab ,_cfc );if _ffc :=_cab .Get ("\u0054\u0079\u0070\u0065");_ffc !=nil {_gcb ,_daf :=_ffc .(*_be .PdfObjectName );if !_daf {_caf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ffc );
}else {if *_gcb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_caf .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gcb );
};_cfc .Type =_gcb ;};};if _cba :=_cab .Get ("\u004e\u0065\u0078\u0074");_cba !=nil {_cfc .Next =_cba ;};if _eea :=_cab .Get ("\u0053");_eea !=nil {_cfc .S =_eea ;};_feg ,_dcd :=_cfc .S .(*_be .PdfObjectName );if !_dcd {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cfc .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cfc .S );};_agf :=PdfActionType (_feg .String ());
switch _agf {case ActionTypeGoTo :_gef ,_cff :=_ffd .newPdfActionGotoFromDict (_cab );if _cff !=nil {return nil ,_cff ;};_gef .PdfAction =_cfc ;_cfc ._ddf =_gef ;return _cfc ,nil ;case ActionTypeGoToR :_fag ,_dff :=_ffd .newPdfActionGotoRFromDict (_cab );
if _dff !=nil {return nil ,_dff ;};_fag .PdfAction =_cfc ;_cfc ._ddf =_fag ;return _cfc ,nil ;case ActionTypeGoToE :_aff ,_bff :=_ffd .newPdfActionGotoEFromDict (_cab );if _bff !=nil {return nil ,_bff ;};_aff .PdfAction =_cfc ;_cfc ._ddf =_aff ;return _cfc ,nil ;
case ActionTypeLaunch :_ccc ,_gea :=_ffd .newPdfActionLaunchFromDict (_cab );if _gea !=nil {return nil ,_gea ;};_ccc .PdfAction =_cfc ;_cfc ._ddf =_ccc ;return _cfc ,nil ;case ActionTypeThread :_adde ,_bfe :=_ffd .newPdfActionThreadFromDict (_cab );if _bfe !=nil {return nil ,_bfe ;
};_adde .PdfAction =_cfc ;_cfc ._ddf =_adde ;return _cfc ,nil ;case ActionTypeURI :_ggeg ,_cffb :=_ffd .newPdfActionURIFromDict (_cab );if _cffb !=nil {return nil ,_cffb ;};_ggeg .PdfAction =_cfc ;_cfc ._ddf =_ggeg ;return _cfc ,nil ;case ActionTypeSound :_ebc ,_acg :=_ffd .newPdfActionSoundFromDict (_cab );
if _acg !=nil {return nil ,_acg ;};_ebc .PdfAction =_cfc ;_cfc ._ddf =_ebc ;return _cfc ,nil ;case ActionTypeMovie :_eab ,_fcc :=_ffd .newPdfActionMovieFromDict (_cab );if _fcc !=nil {return nil ,_fcc ;};_eab .PdfAction =_cfc ;_cfc ._ddf =_eab ;return _cfc ,nil ;
case ActionTypeHide :_cgad ,_bga :=_ffd .newPdfActionHideFromDict (_cab );if _bga !=nil {return nil ,_bga ;};_cgad .PdfAction =_cfc ;_cfc ._ddf =_cgad ;return _cfc ,nil ;case ActionTypeNamed :_gcg ,_deab :=_ffd .newPdfActionNamedFromDict (_cab );if _deab !=nil {return nil ,_deab ;
};_gcg .PdfAction =_cfc ;_cfc ._ddf =_gcg ;return _cfc ,nil ;case ActionTypeSubmitForm :_gfag ,_gbd :=_ffd .newPdfActionSubmitFormFromDict (_cab );if _gbd !=nil {return nil ,_gbd ;};_gfag .PdfAction =_cfc ;_cfc ._ddf =_gfag ;return _cfc ,nil ;case ActionTypeResetForm :_abb ,_aaac :=_ffd .newPdfActionResetFormFromDict (_cab );
if _aaac !=nil {return nil ,_aaac ;};_abb .PdfAction =_cfc ;_cfc ._ddf =_abb ;return _cfc ,nil ;case ActionTypeImportData :_fge ,_dcg :=_ffd .newPdfActionImportDataFromDict (_cab );if _dcg !=nil {return nil ,_dcg ;};_fge .PdfAction =_cfc ;_cfc ._ddf =_fge ;
return _cfc ,nil ;case ActionTypeSetOCGState :_ded ,_egeg :=_ffd .newPdfActionSetOCGStateFromDict (_cab );if _egeg !=nil {return nil ,_egeg ;};_ded .PdfAction =_cfc ;_cfc ._ddf =_ded ;return _cfc ,nil ;case ActionTypeRendition :_eed ,_def :=_ffd .newPdfActionRenditionFromDict (_cab );
if _def !=nil {return nil ,_def ;};_eed .PdfAction =_cfc ;_cfc ._ddf =_eed ;return _cfc ,nil ;case ActionTypeTrans :_afe ,_abd :=_ffd .newPdfActionTransFromDict (_cab );if _abd !=nil {return nil ,_abd ;};_afe .PdfAction =_cfc ;_cfc ._ddf =_afe ;return _cfc ,nil ;
case ActionTypeGoTo3DView :_ebcd ,_gab :=_ffd .newPdfActionGoTo3DViewFromDict (_cab );if _gab !=nil {return nil ,_gab ;};_ebcd .PdfAction =_cfc ;_cfc ._ddf =_ebcd ;return _cfc ,nil ;case ActionTypeJavaScript :_gbg ,_gfd :=_ffd .newPdfActionJavaScriptFromDict (_cab );
if _gfd !=nil {return nil ,_gfd ;};_gbg .PdfAction =_cfc ;_cfc ._ddf =_gbg ;return _cfc ,nil ;};_caf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_agf );
return nil ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ffebd :=&PdfOutlineItem {_cbdfb :_be .MakeIndirectObject (_be .MakeDict ())};_ffebd ._fgfd =_ffebd ;return _ffebd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cfgcc *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_cfgcc .Base .GetNumComponents ();_cged :=int (vals [0])*N ;
if _cged < 0||(_cged +N -1)>=len (_cfgcc ._eedc ){_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cged );return nil ,ErrColorOutOfRange ;};_febbe :=_cfgcc ._eedc [_cged :_cged +N ];
var _cbaa []float64 ;for _ ,_dgfg :=range _febbe {_cbaa =append (_cbaa ,float64 (_dgfg )/255.0);};_egbc ,_fdaa :=_cfgcc .Base .ColorFromFloats (_cbaa );if _fdaa !=nil {return nil ,_fdaa ;};return _egbc ,nil ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_aee *PdfFieldButton )SetType (btype ButtonType ){_aede :=uint32 (0);if _aee .Ff !=nil {_aede =uint32 (*_aee .Ff );};switch btype {case ButtonTypePush :_aede |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_aede |=FieldFlagRadio .Mask ();};_aee .Ff =_be .MakeInteger (int64 (_aede ));
};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// ToPdfObject implements interface PdfModel.
func (_bfabdf *PdfAnnotationWidget )ToPdfObject ()_be .PdfObject {_bfabdf .PdfAnnotation .ToPdfObject ();_fbed :=_bfabdf ._dbf ;_agga :=_fbed .PdfObject .(*_be .PdfObjectDictionary );if _bfabdf ._ebb {return _fbed ;};_bfabdf ._ebb =true ;_agga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_agga .SetIfNotNil ("\u0048",_bfabdf .H );_agga .SetIfNotNil ("\u004d\u004b",_bfabdf .MK );_agga .SetIfNotNil ("\u0041",_bfabdf .A );_agga .SetIfNotNil ("\u0041\u0041",_bfabdf .AA );_agga .SetIfNotNil ("\u0042\u0053",_bfabdf .BS );_efcg :=_bfabdf .Parent ;
if _bfabdf ._bge !=nil {if _bfabdf ._bge ._ffcf ==_bfabdf ._dbf {_bfabdf ._bge .ToPdfObject ();};_efcg =_bfabdf ._bge .GetContainingPdfObject ();};if _efcg !=_fbed {_agga .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_efcg );};_bfabdf ._ebb =false ;
return _fbed ;};

// ImageToRGB convert an indexed image to RGB.
func (_ccfdg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ccfdg .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ffde :=_fg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._bbbgb ,img ._ffedg );_caee :=_bc .NewReader (img .getBase ());_dged :=_bc .NewWriter (_ffde );var (_ccfcc uint32 ;_gecg int ;_bdfde error ;);for {_ccfcc ,_bdfde =_caee .ReadSample ();
if _bdfde ==_dga .EOF {break ;}else if _bdfde !=nil {return img ,_bdfde ;};_gecg =int (_ccfcc );_caf .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gecg ,N ,len (_ccfdg ._eedc ));
if (_gecg +1)*N > len (_ccfdg ._eedc ){_gecg =len (_ccfdg ._eedc )/N -1;_caf .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gecg );if _gecg < 0{_caf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _cdded :=_gecg *N ;_cdded < (_gecg +1)*N ;_cdded ++{if _bdfde =_dged .WriteSample (uint32 (_ccfdg ._eedc [_cdded ]));_bdfde !=nil {return img ,_bdfde ;};};};return _ccfdg .Base .ImageToRGB (_fggd (&_ffde ));};func (_ggc *PdfReader )newPdfActionNamedFromDict (_bba *_be .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_bba .Get ("\u004e")},nil ;
};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_eadcg :=&PdfPageResourcesColorspaces {};_eadcg .Names =[]string {};_eadcg .Colorspaces =map[string ]PdfColorspace {};_eadcg ._ddeeaa =&_be .PdfIndirectObject {};return _eadcg ;};func (_gafba *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _gafba ._gfcg };


// ParserMetadata gets the parser  metadata.
func (_dgeec *CompliancePdfReader )ParserMetadata ()_be .ParserMetadata {if _dgeec ._bcadg ==(_be .ParserMetadata {}){_dgeec ._bcadg ,_ =_dgeec ._gfafb .ParserMetadata ();};return _dgeec ._bcadg ;};func (_bfdg *fontFile )loadFromSegments (_dadd ,_cfaaa []byte )error {_caf .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_dadd ),len (_cfaaa ));
_gegbf :=_bfdg .parseASCIIPart (_dadd );if _gegbf !=nil {return _gegbf ;};_caf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bfdg );if len (_cfaaa )==0{return nil ;};_caf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bfdg );
return nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gfbb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gfbb .AlternateSpace ==nil {return nil ,_bdf .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _gfbb .AlternateSpace .ColorToRGB (color );};type pdfCIDFontType0 struct{fontCommon ;_gcge *_be .PdfIndirectObject ;_cedad _ac .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_be .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _be .PdfObject ;W _be .PdfObject ;DW2 _be .PdfObject ;W2 _be .PdfObject ;_accg map[_ac .CharCode ]float64 ;_ddbfd float64 ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_abbde *PdfPageResources )HasFontByName (keyName _be .PdfObjectName )bool {_ ,_edaae :=_abbde .GetFontByName (keyName );return _edaae ;};func (_gbgbb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_bebg *_be .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_facg :=PdfAnnotationPrinterMark {};
_facg .MN =_bebg .Get ("\u004d\u004e");return &_facg ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ae :=NewPdfAction ();_gg :=&PdfActionLaunch {};_gg .PdfAction =_ae ;_ae .SetContext (_gg );return _gg ;};

// GetXObjectByName gets XObject by name.
func (_gdddb *PdfPage )GetXObjectByName (name _be .PdfObjectName )(_be .PdfObject ,bool ){_cdfee ,_cdbe :=_gdddb .Resources .XObject .(*_be .PdfObjectDictionary );if !_cdbe {return nil ,false ;};if _ecgfgg :=_cdfee .Get (name );_ecgfgg !=nil {return _ecgfgg ,true ;
};return nil ,false ;};

// B returns the value of the blue component of the color.
func (_bfac *PdfColorDeviceRGB )B ()float64 {return _bfac [2]};func (_dfeda *PdfWriter )setDocInfo (_adgbb _be .PdfObject ){if _dfeda .hasObject (_dfeda ._ceece ){delete (_dfeda ._agafe ,_dfeda ._ceece );delete (_dfeda ._cgcad ,_dfeda ._ceece );for _ccede ,_cefde :=range _dfeda ._gadag {if _cefde ==_dfeda ._ceece {copy (_dfeda ._gadag [_ccede :],_dfeda ._gadag [_ccede +1:]);
_dfeda ._gadag [len (_dfeda ._gadag )-1]=nil ;_dfeda ._gadag =_dfeda ._gadag [:len (_dfeda ._gadag )-1];break ;};};};_dbeaf :=_be .PdfIndirectObject {};_dbeaf .PdfObject =_adgbb ;_dfeda ._ceece =&_dbeaf ;_dfeda .addObject (&_dbeaf );};

// ToPdfObject convert PdfInfo to pdf object.
func (_facgg *PdfInfo )ToPdfObject ()_be .PdfObject {_dabd :=_be .MakeDict ();_dabd .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_facgg .Title );_dabd .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_facgg .Author );_dabd .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_facgg .Subject );
_dabd .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_facgg .Keywords );_dabd .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_facgg .Creator );_dabd .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_facgg .Producer );
_dabd .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_facgg .Trapped );if _facgg .CreationDate !=nil {_dabd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_facgg .CreationDate .ToPdfObject ());};if _facgg .ModifiedDate !=nil {_dabd .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_facgg .ModifiedDate .ToPdfObject ());
};for _ ,_egfg :=range _facgg ._gcgff .Keys (){_dabd .SetIfNotNil (_egfg ,_facgg ._gcgff .Get (_egfg ));};return _dabd ;};func (_cfcc fontCommon )fontFlags ()int {if _cfcc ._gfcg ==nil {return 0;};return _cfcc ._gfcg ._fadd ;};func (_cdfg Image )getBase ()_fg .ImageBase {return _fg .NewImageBase (int (_cdfg .Width ),int (_cdfg .Height ),int (_cdfg .BitsPerComponent ),_cdfg .ColorComponents ,_cdfg .Data ,_cdfg ._bbbgb ,_cdfg ._ffedg );
};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bbcfc *Image )ToJBIG2Image ()(*_be .JBIG2Image ,error ){_babfa ,_fbgedb :=_bbcfc .ToGoImage ();if _fbgedb !=nil {return nil ,_fbgedb ;};return _be .GoImageToJBIG2 (_babfa ,_be .JB2ImageAutoThreshold );};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;
FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);
FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);
FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););func _daef ()string {_dbfba :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _fgddc _ec .Buffer ;for _ffdag :=0;_ffdag < 6;_ffdag ++{_fgddc .WriteRune (rune (_dbfba [_f .Intn (len (_dbfba ))]));};return _fgddc .String ();};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _be .PdfObject ;PreserveRB _be .PdfObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_cfgcg *PdfFunctionType0 )ToPdfObject ()_be .PdfObject {if _cfgcg ._cadbd ==nil {_cfgcg ._cadbd =&_be .PdfObjectStream {};};_adfgf :=_be .MakeDict ();_adfgf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_be .MakeInteger (0));
_fadfg :=&_be .PdfObjectArray {};for _ ,_fcdf :=range _cfgcg .Domain {_fadfg .Append (_be .MakeFloat (_fcdf ));};_adfgf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fadfg );_ebbf :=&_be .PdfObjectArray {};for _ ,_acgac :=range _cfgcg .Range {_ebbf .Append (_be .MakeFloat (_acgac ));
};_adfgf .Set ("\u0052\u0061\u006eg\u0065",_ebbf );_fdgcc :=&_be .PdfObjectArray {};for _ ,_acef :=range _cfgcg .Size {_fdgcc .Append (_be .MakeInteger (int64 (_acef )));};_adfgf .Set ("\u0053\u0069\u007a\u0065",_fdgcc );_adfgf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_be .MakeInteger (int64 (_cfgcg .BitsPerSample )));
if _cfgcg .Order !=1{_adfgf .Set ("\u004f\u0072\u0064e\u0072",_be .MakeInteger (int64 (_cfgcg .Order )));};_adfgf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_be .MakeInteger (int64 (len (_cfgcg ._dffa ))));_cfgcg ._cadbd .Stream =_cfgcg ._dffa ;_cfgcg ._cadbd .PdfObjectDictionary =_adfgf ;
return _cfgcg ._cadbd ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bbfb :=PdfColorDeviceGray (grayVal );return &_bbfb ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_eggfd *PdfWriter )SetNameDictionary (names _be .PdfObject )error {if names ==nil {return nil ;};_caf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_eggfd ._agced .Set ("\u004e\u0061\u006de\u0073",names );return _eggfd .addObjects (names );};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_be .PdfObjectArray ;Matrix *_be .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_debefe ,_bfbe :=_dag .Open (filePath );if _bfbe !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bfbe );
return nil ,_bfbe ;};defer _debefe .Close ();return NewPdfFontFromTTF (_debefe );};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_eafcg :=&XObjectImage {};_cdced :=&_be .PdfObjectStream {};_cdced .PdfObjectDictionary =_be .MakeDict ();_eafcg ._fcaaa =_cdced ;return _eafcg ;};

// Initialize initializes the PdfSignature.
func (_bbgbf *PdfSignature )Initialize ()error {if _bbgbf .Handler ==nil {return _bdf .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _bbgbf .Handler .InitSignature (_bbgbf );};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _be .StreamEncoder ;FormType _be .PdfObject ;BBox _be .PdfObject ;Matrix _be .PdfObject ;Resources *PdfPageResources ;Group _be .PdfObject ;Ref _be .PdfObject ;MetaData _be .PdfObject ;PieceInfo _be .PdfObject ;LastModified _be .PdfObject ;
StructParent _be .PdfObject ;StructParents _be .PdfObject ;OPI _be .PdfObject ;OC _be .PdfObject ;Name _be .PdfObject ;

// Stream data.
Stream []byte ;_fefdg *_be .PdfObjectStream ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _be .PdfObject ;Open _be .PdfObject ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dabba *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_ccd *PdfReader )newPdfActionJavaScriptFromDict (_cae *_be .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cae .Get ("\u004a\u0053")},nil ;
};func (_egcdec *PdfWriter )setDocumentIDs (_dgacg ,_aced string ){_egcdec ._acgaca =_be .MakeArray (_be .MakeHexString (_dgacg ),_be .MakeHexString (_aced ));};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_be .PdfObject ,error );};

// GetCustomInfo returns a custom info value for the specified name.
func (_cabc *PdfInfo )GetCustomInfo (name string )*_be .PdfObjectString {var _ecda *_be .PdfObjectString ;if _cabc ._gcgff ==nil {return _ecda ;};if _ebgf ,_dfga :=_cabc ._gcgff .Get (*_be .MakeName (name )).(*_be .PdfObjectString );_dfga {_ecda =_ebgf ;
};return _ecda ;};func (_cfdaf *fontFile )parseASCIIPart (_efgad []byte )error {if len (_efgad )< 2||string (_efgad [:2])!="\u0025\u0021"{return _bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fbbgc ,_bfae ,_ebbbgb :=_feddb (_efgad );if _ebbbgb !=nil {return _ebbbgb ;};_ecagc :=_gfcd (_fbbgc );_cfdaf ._gddff =_ecagc ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cfdaf ._gddff ==""{_caf .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _bfae !=""{_badgf ,_dgfae :=_agee (_bfae );if _dgfae !=nil {return _dgfae ;};_badcb ,_dgfae :=_ac .NewCustomSimpleTextEncoder (_badgf ,nil );if _dgfae !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dgfae );
return nil ;};_cfdaf ._aabe =_badcb ;};return nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fcfa *Image )Resample (targetBitsPerComponent int64 ){if _fcfa .BitsPerComponent ==targetBitsPerComponent {return ;};_afffd :=_fcfa .GetSamples ();if targetBitsPerComponent < _fcfa .BitsPerComponent {_cdga :=_fcfa .BitsPerComponent -targetBitsPerComponent ;
for _abfbe :=range _afffd {_afffd [_abfbe ]>>=uint (_cdga );};}else if targetBitsPerComponent > _fcfa .BitsPerComponent {_cgfdd :=targetBitsPerComponent -_fcfa .BitsPerComponent ;for _dggaae :=range _afffd {_afffd [_dggaae ]<<=uint (_cgfdd );};};_fcfa .BitsPerComponent =targetBitsPerComponent ;
if _fcfa .BitsPerComponent < 8{_fcfa .resampleLowBits (_afffd );return ;};_efce :=_fg .BytesPerLine (int (_fcfa .Width ),int (_fcfa .BitsPerComponent ),_fcfa .ColorComponents );_agbde :=make ([]byte ,_efce *int (_fcfa .Height ));var (_adaba ,_fbcbf ,_gcaf ,_faeae int ;
_fdcab uint32 ;);for _gcaf =0;_gcaf < int (_fcfa .Height );_gcaf ++{_adaba =_gcaf *_efce ;_fbcbf =(_gcaf +1)*_efce -1;_fbagc :=_bc .ResampleUint32 (_afffd [_adaba :_fbcbf ],int (targetBitsPerComponent ),8);for _faeae ,_fdcab =range _fbagc {_agbde [_faeae +_adaba ]=byte (_fdcab );
};};_fcfa .Data =_agbde ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_dbgb :=&PdfColorspaceCalRGB {};_dbgb .BlackPoint =[]float64 {0.0,0.0,0.0};_dbgb .Gamma =[]float64 {1.0,1.0,1.0};_dbgb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _dbgb ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_ceff *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbfd ,_afbb :=_be .GetNumbersAsFloat (objects );
if _afbb !=nil {return nil ,_afbb ;};return _ceff .ColorFromFloats (_cgbfd );};func _gfcf (_bfcc *PdfField )[]*PdfField {_gdcc :=[]*PdfField {_bfcc };for _ ,_adgdc :=range _bfcc .Kids {_gdcc =append (_gdcc ,_gfcf (_adgdc )...);};return _gdcc ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_egbcf pdfFont };

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_be .PdfObjectInteger ;BitsPerComponent *_be .PdfObjectInteger ;BitsPerFlag *_be .PdfObjectInteger ;Decode *_be .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_cggf *DSS )ToPdfObject ()_be .PdfObject {_fgdd :=_cggf ._dfaa .PdfObject .(*_be .PdfObjectDictionary );_fgdd .Clear ();_efefe :=_be .MakeDict ();for _cbge ,_efab :=range _cggf .VRI {_efefe .Set (*_be .MakeName (_cbge ),_efab .ToPdfObject ());};_fgdd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_becgg (_cggf .Certs ));
_fgdd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_becgg (_cggf .OCSPs ));_fgdd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_becgg (_cggf .CRLs ));_fgdd .Set ("\u0056\u0052\u0049",_efefe );return _cggf ._dfaa ;};func _dfcaa (_cfcbd *_be .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gcag :=&PdfShadingPattern {};
_dacca :=_cfcbd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _dacca ==nil {_caf .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bead ,_afgg :=_ddgac (_dacca );
if _afgg !=nil {_caf .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_afgg );return nil ,_afgg ;};_gcag .Shading =_bead ;if _edbfc :=_cfcbd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_edbfc !=nil {_afeda ,_fggbf :=_edbfc .(*_be .PdfObjectArray );if !_fggbf {_caf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edbfc );
return nil ,_be .ErrTypeError ;};_gcag .Matrix =_afeda ;};if _dgabe :=_cfcbd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_dgabe !=nil {_gcag .ExtGState =_dgabe ;};return _gcag ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _be .PdfObject ;Name _be .PdfObject ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_dddbf *PdfWriter )GetPdfVersion ()string {return _dddbf .getPdfVersion ()};func _edcbg (_gdcagc *XObjectImage )error {if _gdcagc .SMask ==nil {return nil ;};_abba ,_bgffe :=_gdcagc .SMask .(*_be .PdfObjectStream );if !_bgffe {_caf .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _be .ErrTypeError ;};_ceccgf :=_abba .PdfObjectDictionary ;_geabg :=_ceccgf .Get ("\u004d\u0061\u0074t\u0065");if _geabg ==nil {return nil ;};_bbdcc ,_adabea :=_bbcee (_geabg .(*_be .PdfObjectArray ));if _adabea !=nil {return _adabea ;};_bfff :=_be .MakeArrayFromFloats ([]float64 {_bbdcc });
_ceccgf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bfff );return nil ;};func _ababe ()_ba .Time {_ccgeg .Lock ();defer _ccgeg .Unlock ();return _cdfcb };

// C returns the value of the C component of the color.
func (_afea *PdfColorCalRGB )C ()float64 {return _afea [2]};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_be .PdfObjectArray ;ExtGState _be .PdfObject ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_cgbbc int ,_aegca *PdfPage );type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_dgbg *VRI )ToPdfObject ()*_be .PdfObjectDictionary {_fbga :=_be .MakeDict ();_fbga .SetIfNotNil (_be .PdfObjectName ("\u0043\u0065\u0072\u0074"),_becgg (_dgbg .Cert ));_fbga .SetIfNotNil (_be .PdfObjectName ("\u004f\u0043\u0053\u0050"),_becgg (_dgbg .OCSP ));
_fbga .SetIfNotNil (_be .PdfObjectName ("\u0043\u0052\u004c"),_becgg (_dgbg .CRL ));_fbga .SetIfNotNil ("\u0054\u0055",_dgbg .TU );_fbga .SetIfNotNil ("\u0054\u0053",_dgbg .TS );return _fbga ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_be .PdfIndirectObject )*PdfOutlineItem {_fbabc :=PdfOutlineItem {};_fbabc ._fgfd =&_fbabc ;_fbabc .Title =_be .MakeString (title );_cdcd :=_be .MakeArray ();_cdcd .Append (page );_cdcd .Append (_be .MakeName ("\u0046\u0069\u0074"));
_fbabc .Dest =_cdcd ;return &_fbabc ;};

// SetContext sets the sub annotation (context).
func (_cbda *PdfAnnotation )SetContext (ctx PdfModel ){_cbda ._ef =ctx };func (_cebc *pdfFontType0 )baseFields ()*fontCommon {return &_cebc .fontCommon };func (_dgaag *Image )samplesAddPadding (_defac []uint32 )[]uint32 {_ffbbf :=_fg .BytesPerLine (int (_dgaag .Width ),int (_dgaag .BitsPerComponent ),_dgaag .ColorComponents )*(8/int (_dgaag .BitsPerComponent ));
_aead :=_ffbbf *int (_dgaag .Height );if len (_defac )==_aead {return _defac ;};_baad :=make ([]uint32 ,_aead );_gafab :=int (_dgaag .Width )*_dgaag .ColorComponents ;for _ceeeee :=0;_ceeeee < int (_dgaag .Height );_ceeeee ++{_fcge :=_ceeeee *int (_dgaag .Width );
_daaag :=_ceeeee *_ffbbf ;for _abbe :=0;_abbe < _gafab ;_abbe ++{_baad [_daaag +_abbe ]=_defac [_fcge +_abbe ];};};return _baad ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _be .PdfObject ;Mac _be .PdfObject ;Unix _be .PdfObject ;NewWindow _be .PdfObject ;};func (_fbfd *PdfReader )loadDSS ()(*DSS ,error ){if _fbfd ._gfafb .GetCrypter ()!=nil &&!_fbfd ._gfafb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_adfda :=_fbfd ._dcdbf .Get ("\u0044\u0053\u0053");if _adfda ==nil {return nil ,nil ;};_cffeg ,_ :=_be .GetIndirect (_adfda );_adfda =_be .TraceToDirectObject (_adfda );switch _dcdagb :=_adfda .(type ){case *_be .PdfObjectNull :return nil ,nil ;case *_be .PdfObjectDictionary :return _bdfded (_cffeg ,_dcdagb );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_adfda );};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_be .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_be .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_be .PdfObjectBool ;_gabe PdfModel ;_cgdab _be .PdfObject ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_eacf :=NewPdfAnnotation ();_agdg :=&PdfAnnotationPolygon {};_agdg .PdfAnnotation =_eacf ;_agdg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eacf .SetContext (_agdg );return _agdg ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_addf *PdfFont )BytesToCharcodes (data []byte )[]_ac .CharCode {_caf .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _gbeg ,_facf :=_addf ._egbcf .(*pdfFontType0 );_facf &&_gbeg ._cgfe !=nil {if _ggbg ,_geaa :=_gbeg .bytesToCharcodes (data );_geaa {return _ggbg ;};};var (_dbdf =make ([]_ac .CharCode ,0,len (data )+len (data )%2);_bgdfe =_addf .baseFields (););if _bgdfe ._baag !=nil {if _dbdab ,_acdd :=_bgdfe ._baag .BytesToCharcodes (data );
_acdd {for _ ,_aaeed :=range _dbdab {_dbdf =append (_dbdf ,_ac .CharCode (_aaeed ));};return _dbdf ;};};if _bgdfe .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _gdgf :=0;_gdgf < len (data );_gdgf +=2{_cgea :=uint16 (data [_gdgf ])<<8|uint16 (data [_gdgf +1]);_dbdf =append (_dbdf ,_ac .CharCode (_cgea ));};}else {for _ ,_eaecg :=range data {_dbdf =append (_dbdf ,_ac .CharCode (_eaecg ));
};};return _dbdf ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gefac *LTV )Enable (sig *PdfSignature ,extraCerts []*_bd .Certificate )error {if _bgcdc :=_gefac .validateSig (sig );_bgcdc !=nil {return _bgcdc ;};_eebag ,_ecaad :=_gefac .generateVRIKey (sig );if _ecaad !=nil {return _ecaad ;};if _ ,_afbf :=_gefac ._bcda .VRI [_eebag ];
_afbf &&_gefac .SkipExisting {return nil ;};_fegc ,_ecaad :=sig .GetCerts ();if _ecaad !=nil {return _ecaad ;};return _gefac .enable (_fegc ,extraCerts ,_eebag );};var _ pdfFont =(*pdfFontType3 )(nil );

// SetFlag sets the flag for the field.
func (_gfdaf *PdfField )SetFlag (flag FieldFlag ){_gfdaf .Ff =_be .MakeInteger (int64 (flag ))};func (_bafab *XObjectImage )getParamsDict ()*_be .PdfObjectDictionary {_fgadc :=_be .MakeDict ();_fgadc .Set ("\u0057\u0069\u0064t\u0068",_be .MakeInteger (*_bafab .Width ));
_fgadc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_be .MakeInteger (*_bafab .Height ));_fgadc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_be .MakeInteger (int64 (_bafab .ColorSpace .GetNumComponents ())));
_fgadc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_be .MakeInteger (*_bafab .BitsPerComponent ));return _fgadc ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_beea :=NewPdfAnnotation ();_cagg :=&PdfAnnotationPolyLine {};_cagg .PdfAnnotation =_beea ;_cagg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_beea .SetContext (_cagg );return _cagg ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_be .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject implements interface PdfModel.
func (_bgaf *PdfAnnotationRedact )ToPdfObject ()_be .PdfObject {_bgaf .PdfAnnotation .ToPdfObject ();_dbcd :=_bgaf ._dbf ;_egaf :=_dbcd .PdfObject .(*_be .PdfObjectDictionary );_bgaf .PdfAnnotationMarkup .appendToPdfDictionary (_egaf );_egaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_egaf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bgaf .QuadPoints );_egaf .SetIfNotNil ("\u0049\u0043",_bgaf .IC );_egaf .SetIfNotNil ("\u0052\u004f",_bgaf .RO );_egaf .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_bgaf .OverlayText );
_egaf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bgaf .Repeat );_egaf .SetIfNotNil ("\u0044\u0041",_bgaf .DA );_egaf .SetIfNotNil ("\u0051",_bgaf .Q );return _dbcd ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_be .PdfObjectName ;Colorants _be .PdfObject ;Process _be .PdfObject ;MixingHints _be .PdfObject ;_bbddf *_be .PdfIndirectObject ;};func (_daefe *PdfWriter )writeObjects (){_caf .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_daefe ._gadag ));
_daefe ._bcgf =make (map[int ]crossReference );_daefe ._bcgf [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _daefe ._fdcfe .ObjectMap !=nil {for _dcbaa ,_fbfga :=range _daefe ._fdcfe .ObjectMap {if _dcbaa ==0{continue ;};if _fbfga .XType ==_be .XrefTypeObjectStream {_dedecg :=crossReference {Type :2,ObjectNumber :_fbfga .OsObjNumber ,Index :_fbfga .OsObjIndex };
_daefe ._bcgf [_dcbaa ]=_dedecg ;};if _fbfga .XType ==_be .XrefTypeTableEntry {_dgacea :=crossReference {Type :1,ObjectNumber :_fbfga .ObjectNumber ,Offset :_fbfga .Offset };_daefe ._bcgf [_dcbaa ]=_dgacea ;};};};};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_beeba *PdfFieldButton )IsCheckbox ()bool {return _beeba .GetType ()==ButtonTypeCheckbox };func (_adceb *PdfWriter )checkPendingObjects (){for _abeab ,_gfffg :=range _adceb ._dfcce {if !_adceb .hasObject (_abeab ){_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_abeab ,_abeab ,_abeab );
for _ ,_eefef :=range _gfffg {for _ ,_cbfa :=range _eefef .Keys (){_adaccc :=_eefef .Get (_cbfa );if _adaccc ==_abeab {_caf .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_eefef .Set (_cbfa ,_be .MakeNull ());break ;};};};};};};func (_dbb *PdfReader )newPdfAnnotationRichMediaFromDict (_ageb *_be .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_afa :=&PdfAnnotationRichMedia {};_afa .RichMediaSettings =_ageb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_afa .RichMediaContent =_ageb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _afa ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _be .PdfObject ;MK _be .PdfObject ;A _be .PdfObject ;AA _be .PdfObject ;BS _be .PdfObject ;Parent _be .PdfObject ;_bge *PdfField ;_ebb bool ;};func (_gaaab *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gaaab .fontCommon };
var (_ccgeg _d .Mutex ;_fdab ="";_gbecfb _ba .Time ;_fgdeb ="";_bgedf ="";_cdfcb _ba .Time ;_effb ="";_ffega ="";_dbcgd ="";);

// ToPdfObject converts the font to a PDF representation.
func (_ggeda *pdfFontType3 )ToPdfObject ()_be .PdfObject {if _ggeda ._adbcg ==nil {_ggeda ._adbcg =&_be .PdfIndirectObject {};};_adcea :=_ggeda .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ggeda ._adbcg .PdfObject =_adcea ;if _ggeda .FirstChar !=nil {_adcea .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ggeda .FirstChar );
};if _ggeda .LastChar !=nil {_adcea .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ggeda .LastChar );};if _ggeda .Widths !=nil {_adcea .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ggeda .Widths );};if _ggeda .Encoding !=nil {_adcea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ggeda .Encoding );
}else if _ggeda ._feacg !=nil {_fefd :=_ggeda ._feacg .ToPdfObject ();if _fefd !=nil {_adcea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fefd );};};if _ggeda .FontBBox !=nil {_adcea .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ggeda .FontBBox );
};if _ggeda .FontMatrix !=nil {_adcea .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ggeda .FontMatrix );};if _ggeda .CharProcs !=nil {_adcea .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ggeda .CharProcs );};if _ggeda .Resources !=nil {_adcea .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ggeda .Resources );
};return _ggeda ._adbcg ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gcdg *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gdbb :=0.3*_gcdg .R ()+0.59*_gcdg .G ()+0.11*_gcdg .B ();_gdbb =_eg .Min (_eg .Max (_gdbb ,0.0),1.0);return NewPdfColorDeviceGray (_gdbb );};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cdae *PdfFont )ToPdfObject ()_be .PdfObject {if _cdae ._egbcf ==nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _be .MakeNull ();
};return _cdae ._egbcf .ToPdfObject ();};func (_fcea *PdfReader )newPdfFieldSignatureFromDict (_ccedc *_be .PdfObjectDictionary )(*PdfFieldSignature ,error ){_fgdbf :=&PdfFieldSignature {};_ecdb ,_cffd :=_be .GetIndirect (_ccedc .Get ("\u0056"));if _cffd {var _fcbca error ;
_fgdbf .V ,_fcbca =_fcea .newPdfSignatureFromIndirect (_ecdb );if _fcbca !=nil {return nil ,_fcbca ;};};_fgdbf .Lock ,_ =_be .GetIndirect (_ccedc .Get ("\u004c\u006f\u0063\u006b"));_fgdbf .SV ,_ =_be .GetIndirect (_ccedc .Get ("\u0053\u0056"));return _fgdbf ,nil ;
};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_fcefbc *PdfFont )CharcodesToUnicode (charcodes []_ac .CharCode )[]rune {_faafg ,_ ,_ :=_fcefbc .CharcodesToUnicodeWithStats (charcodes );return _faafg ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_efea :=&PdfColorspaceCalGray {};_efea .BlackPoint =[]float64 {0.0,0.0,0.0};_efea .Gamma =1;return _efea ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_ggcb :=NewPdfAnnotation ();_daba :=&PdfAnnotationMovie {};_daba .PdfAnnotation =_ggcb ;_ggcb .SetContext (_daba );return _daba ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ffcf :_be .MakeIndirectObject (_be .MakeDict ())}};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// B returns the value of the B component of the color.
func (_efed *PdfColorCalRGB )B ()float64 {return _efed [1]};func (_bdfbe *Image )resampleLowBits (_ggbe []uint32 ){_geaad :=_fg .BytesPerLine (int (_bdfbe .Width ),int (_bdfbe .BitsPerComponent ),_bdfbe .ColorComponents );_eggbc :=make ([]byte ,_bdfbe .ColorComponents *_geaad *int (_bdfbe .Height ));
_gaeaa :=int (_bdfbe .BitsPerComponent )*_bdfbe .ColorComponents *int (_bdfbe .Width );_edddb :=uint8 (8);var (_faafc ,_bddeb int ;_daae uint32 ;);for _cadeb :=0;_cadeb < int (_bdfbe .Height );_cadeb ++{_bddeb =_cadeb *_geaad ;for _bbebf :=0;_bbebf < _gaeaa ;
_bbebf ++{_daae =_ggbe [_faafc ];_edddb -=uint8 (_bdfbe .BitsPerComponent );_eggbc [_bddeb ]|=byte (_daae )<<_edddb ;if _edddb ==0{_edddb =8;_bddeb ++;};_faafc ++;};};_bdfbe .Data =_eggbc ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fcfb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _dfcf []*PdfField ;if _fcfb .AcroForm !=nil {_dfcf =_fcfb .AcroForm .AllFields ();};_gbaecc :=make (map[*PdfField ]struct{},len (_dfcf ));for _ ,_cdfaa :=range _dfcf {_gbaecc [_cdfaa ]=struct{}{};
};for _ ,_facga :=range _fcfb .PageList {_bfgc ,_gfade :=_facga .GetAnnotations ();if _gfade !=nil {return false ,_gfade ;};for _ ,_badcg :=range _bfgc {_bacee ,_fabed :=_badcg .GetContext ().(*PdfAnnotationWidget );if !_fabed {continue ;};_bdada :=_bacee .Field ();
if _bdada ==nil {return true ,nil ;};if _ ,_cacfe :=_gbaecc [_bdada ];!_cacfe {return true ,nil ;};};};return false ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_adcd *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_gbef *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _gbef ._abdgd ==nil {_gbef ._abdgd =_dab .NewPSExecutor (_gbef .Program );};var _faec []_dab .PSObject ;for _ ,_gdffa :=range xVec {_faec =append (_faec ,_dab .MakeReal (_gdffa ));
};_agddb ,_ebbd :=_gbef ._abdgd .Execute (_faec );if _ebbd !=nil {return nil ,_ebbd ;};_eebe ,_ebbd :=_dab .PSObjectArrayToFloat64Array (_agddb );if _ebbd !=nil {return nil ,_ebbd ;};return _eebe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdc *PdfActionSound )ToPdfObject ()_be .PdfObject {_fdc .PdfAction .ToPdfObject ();_dgdc :=_fdc ._deb ;_eeg :=_dgdc .PdfObject .(*_be .PdfObjectDictionary );_eeg .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeSound )));_eeg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fdc .Sound );
_eeg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fdc .Volume );_eeg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fdc .Synchronous );_eeg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fdc .Repeat );_eeg .SetIfNotNil ("\u004d\u0069\u0078",_fdc .Mix );
return _dgdc ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_acga *_be .PdfObjectDictionary ;_fcaa *_be .PdfIndirectObject ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_eacb :=&PdfBorderStyle {};return _eacb };

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_dggbf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _agfd []*PdfOutlineTreeNode ;var _bedbc []string ;var _aggaa func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_aggaa =func (_bbcdd *PdfOutlineTreeNode ,_ebaf *[]*PdfOutlineTreeNode ,_ecafd *[]string ,_gaced int ){if _bbcdd ==nil {return ;
};if _bbcdd ._fgfd ==nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_afdcg ,_cabbf :=_bbcdd ._fgfd .(*PdfOutlineItem );if _cabbf {*_ebaf =append (*_ebaf ,&_afdcg .PdfOutlineTreeNode );
_fbdc :=_bb .Repeat ("\u0020",_gaced *2)+_afdcg .Title .Decoded ();*_ecafd =append (*_ecafd ,_fbdc );};if _bbcdd .First !=nil {_aadbc :=_bb .Repeat ("\u0020",_gaced *2)+"\u002b";*_ecafd =append (*_ecafd ,_aadbc );_aggaa (_bbcdd .First ,_ebaf ,_ecafd ,_gaced +1);
};if _cabbf &&_afdcg .Next !=nil {_aggaa (_afdcg .Next ,_ebaf ,_ecafd ,_gaced );};};_aggaa (_dggbf ._dddeg ,&_agfd ,&_bedbc ,0);return _agfd ,_bedbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_add *PdfActionGoTo )ToPdfObject ()_be .PdfObject {_add .PdfAction .ToPdfObject ();_cea :=_add ._deb ;_ggb :=_cea .PdfObject .(*_be .PdfObjectDictionary );_ggb .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeGoTo )));_ggb .SetIfNotNil ("\u0044",_add .D );
return _cea ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_fgebb *PdfPageResources )SetPatternByName (keyName _be .PdfObjectName ,pattern _be .PdfObject )error {if _fgebb .Pattern ==nil {_fgebb .Pattern =_be .MakeDict ();};_bgfaf ,_ecebb :=_be .GetDict (_fgebb .Pattern );if !_ecebb {return _be .ErrTypeError ;
};_bgfaf .Set (keyName ,pattern );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fce *PdfAnnotationProjection )ToPdfObject ()_be .PdfObject {_fce .PdfAnnotation .ToPdfObject ();_fgef :=_fce ._dbf ;_dcdc :=_fgef .PdfObject .(*_be .PdfObjectDictionary );_fce .PdfAnnotationMarkup .appendToPdfDictionary (_dcdc );return _fgef ;};


// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _be .PdfObject ;Flags _be .PdfObject ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_fbecg ,_ggba :=_ecg .NewStdFontByName (HelveticaName );if !_ggba {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_eecgf :=_efgc (_fbecg );return &PdfFont {_egbcf :&_eecgf };};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_dgcbe PdfModel ;_ffcf *_be .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_be .PdfObjectName ;T *_be .PdfObjectString ;TU *_be .PdfObjectString ;TM *_be .PdfObjectString ;Ff *_be .PdfObjectInteger ;
V _be .PdfObject ;DV _be .PdfObject ;AA _be .PdfObject ;VariableText *VariableText ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dcggc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dcggc .MediaBox !=nil {return _dcggc .MediaBox ,nil ;};_aacbd :=_dcggc .Parent ;for _aacbd !=nil {_ceba ,_dbeca :=_be .GetDict (_aacbd );if !_dbeca {return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _adfbg :=_ceba .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_adfbg !=nil {_bcece ,_aabc :=_be .GetArray (_adfbg );if !_aabc {return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_abge ,_cccd :=NewPdfRectangle (*_bcece );if _cccd !=nil {return nil ,_cccd ;};return _abge ,nil ;};_aacbd =_ceba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_bdf .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_beaff *PdfPattern )SetContext (ctx PdfModel ){_beaff ._ffgg =ctx };

// ToPdfObject returns the PDF representation of the colorspace.
func (_dfgd *PdfPageResourcesColorspaces )ToPdfObject ()_be .PdfObject {_fbee :=_be .MakeDict ();for _ ,_afdb :=range _dfgd .Names {_fbee .Set (_be .PdfObjectName (_afdb ),_dfgd .Colorspaces [_afdb ].ToPdfObject ());};if _dfgd ._ddeeaa !=nil {_dfgd ._ddeeaa .PdfObject =_fbee ;
return _dfgd ._ddeeaa ;};return _fbee ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_ag .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ba .Time ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_be .PdfParser ;DiffPolicy _ag .DiffPolicy ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ddd :=NewPdfAction ();_bde :=&PdfActionGoToE {};_bde .PdfAction =_ddd ;_ddd .SetContext (_bde );return _bde ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_geff *PdfAppender )mergeResources (_bgga ,_ead _be .PdfObject ,_fbeb map[_be .PdfObjectName ]_be .PdfObjectName )_be .PdfObject {if _ead ==nil &&_bgga ==nil {return nil ;
};if _ead ==nil {return _bgga ;};_fege ,_baed :=_be .GetDict (_ead );if !_baed {return _bgga ;};if _bgga ==nil {_fadg :=_be .MakeDict ();_fadg .Merge (_fege );return _ead ;};_aegc ,_baed :=_be .GetDict (_bgga );if !_baed {_caf .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_aegc =_be .MakeDict ();};for _ ,_aedg :=range _fege .Keys (){if _gacg ,_gagb :=_fbeb [_aedg ];_gagb {_aegc .Set (_gacg ,_fege .Get (_aedg ));}else {_aegc .Set (_aedg ,_fege .Get (_aedg ));};};return _aegc ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_afgcg ,_faggg :=_gf .ParsePdfTime (dateStr );if _faggg !=nil {return PdfDate {},_faggg ;};return NewPdfDateFromTime (_afgcg );};

// ToPdfObject implements model.PdfModel interface.
func (_affg *PdfOutputIntent )ToPdfObject ()_be .PdfObject {if _affg ._fgffa ==nil {_affg ._fgffa =_be .MakeDict ();};_bfcbg :=_affg ._fgffa ;if _affg .Type !=""{_bfcbg .Set ("\u0054\u0079\u0070\u0065",_be .MakeName (_affg .Type ));};_bfcbg .Set ("\u0053",_be .MakeName (_affg .S .String ()));
if _affg .OutputCondition !=""{_bfcbg .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_be .MakeString (_affg .OutputCondition ));};_bfcbg .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_be .MakeString (_affg .OutputConditionIdentifier ));
_bfcbg .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_be .MakeString (_affg .RegistryName ));if _affg .Info !=""{_bfcbg .Set ("\u0049\u006e\u0066\u006f",_be .MakeString (_affg .Info ));};if len (_affg .DestOutputProfile )!=0{_acba ,_ffece :=_be .MakeStream (_affg .DestOutputProfile ,_be .NewFlateEncoder ());
if _ffece !=nil {_caf .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ffece );
};_acba .PdfObjectDictionary .Set ("\u004e",_be .MakeInteger (int64 (_affg .ColorComponents )));_bfca :=make ([]float64 ,_affg .ColorComponents *2);for _ddeca :=0;_ddeca < _affg .ColorComponents *2;_ddeca ++{_acfa :=0.0;if _ddeca %2!=0{_acfa =1.0;};_bfca [_ddeca ]=_acfa ;
};_acba .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_be .MakeArrayFromFloats (_bfca ));_bfcbg .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_acba );};return _bfcbg ;};func (_aba *PdfReader )newPdfActionGotoFromDict (_dfg *_be .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_dfg .Get ("\u0044")},nil ;
};

// RemovePage removes a page by number.
func (_ecbe *PdfAppender )RemovePage (pageNum int ){_bacc :=pageNum -1;_ecbe ._bac =append (_ecbe ._bac [0:_bacc ],_ecbe ._bac [pageNum :]...);};

// AddImageResource adds an image to the XObject resources.
func (_ecbefd *PdfPage )AddImageResource (name _be .PdfObjectName ,ximg *XObjectImage )error {var _becac *_be .PdfObjectDictionary ;if _ecbefd .Resources .XObject ==nil {_becac =_be .MakeDict ();_ecbefd .Resources .XObject =_becac ;}else {var _ccfb bool ;
_becac ,_ccfb =(_ecbefd .Resources .XObject ).(*_be .PdfObjectDictionary );if !_ccfb {return _bdf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_becac .Set (name ,ximg .ToPdfObject ());
return nil ;};func (_dcfeg *PdfWriter )adjustXRefAffectedVersion (_bcfde bool ){if _bcfde &&_dcfeg ._dagdf .Major ==1&&_dcfeg ._dagdf .Minor < 5{_dcfeg ._dagdf .Minor =5;};};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_acdb *PdfField )SetContext (ctx PdfModel ){_acdb ._dgcbe =ctx };

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_dadda *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bgafe :=_dadda .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bgafe )> 0;_cbacb :=_be .NewFlateEncoder ();_geddf :=_be .MakeArray ();if wrapContents {_dggg ,_dbbd :=_be .MakeStream ([]byte ("\u0071\u000a"),_cbacb );
if _dbbd !=nil {return _dbbd ;};_geddf .Append (_dggg );};_geddf .Append (_bgafe ...);if wrapContents {_fcdge ,_bagb :=_be .MakeStream ([]byte ("\u000a\u0051\u000a"),_cbacb );if _bagb !=nil {return _bagb ;};_geddf .Append (_fcdge );};_cedee ,_bdgcg :=_be .MakeStream (cs ,_cbacb );
if _bdgcg !=nil {return _bdgcg ;};_geddf .Append (_cedee );_dadda .Contents =_geddf ;return nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_ffgbe *PdfPageResources )HasPatternByName (keyName _be .PdfObjectName )bool {_ ,_gfgaf :=_ffgbe .GetPatternByName (keyName );return _gfgaf ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _dga .ReadSeeker )(*PdfReader ,error ){const _beeab ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _eagga (rs ,&ReaderOpts {LazyLoad :true },false ,_beeab );
};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_bfcab *PdfPage )Size ()(float64 ,float64 ,error ){_bdcec ,_bedec :=_bfcab .GetMediaBox ();if _bedec !=nil {return 0,0,_bedec ;};_gcfefa ,_gcdd :=_bdcec .Width (),_bdcec .Height ();_eebgb ,_bedec :=_bfcab .GetRotate ();if _bedec !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_bedec .Error ());
};if _fgcc :=_eebgb ;_fgcc %360!=0&&_fgcc %90==0{if _fadec :=(360+_fgcc %360)%360;_fadec ==90||_fadec ==270{_gcfefa ,_gcdd =_gcdd ,_gcfefa ;};};return _gcfefa ,_gcdd ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cbaab *PdfColorspaceDeviceN )GetNumComponents ()int {return _cbaab .ColorantNames .Len ()};

// Encoder returns the font's text encoder.
func (_agafd pdfCIDFontType0 )Encoder ()_ac .TextEncoder {return _agafd ._cedad };

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_dceb DefaultImageHandler )NewImageFromGoImage (goimg _ced .Image )(*Image ,error ){_gfeg ,_afadf :=_fg .FromGoImage (goimg );if _afadf !=nil {return nil ,_afadf ;};_cfcef :=_fggd (_gfeg .Base ());return &_cfcef ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_edbae *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_caf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_bdf .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ggfb :=&PdfFieldSignature {};_ggfb .PdfField =NewPdfField ();_ggfb .PdfField .SetContext (_ggfb );_ggfb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ggfb .PdfAnnotationWidget .SetContext (_ggfb );
_ggfb .PdfAnnotationWidget ._dbf =_ggfb .PdfField ._ffcf ;_ggfb .T =_be .MakeString ("");_ggfb .F =_be .MakeInteger (132);_ggfb .V =signature ;return _ggfb ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_deaca *pdfCIDFontType2 )ToPdfObject ()_be .PdfObject {if _deaca ._cedgf ==nil {_deaca ._cedgf =&_be .PdfIndirectObject {};};_adabe :=_deaca .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_deaca ._cedgf .PdfObject =_adabe ;if _deaca .CIDSystemInfo !=nil {_adabe .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_deaca .CIDSystemInfo );};if _deaca .DW !=nil {_adabe .Set ("\u0044\u0057",_deaca .DW );};if _deaca .DW2 !=nil {_adabe .Set ("\u0044\u0057\u0032",_deaca .DW2 );
};if _deaca .W !=nil {_adabe .Set ("\u0057",_deaca .W );};if _deaca .W2 !=nil {_adabe .Set ("\u0057\u0032",_deaca .W2 );};if _deaca .CIDToGIDMap !=nil {_adabe .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_deaca .CIDToGIDMap );};
return _deaca ._cedgf ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fga :=NewPdfAction ();_adge :=&PdfActionJavaScript {};_adge .PdfAction =_fga ;_fga .SetContext (_adge );return _adge ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_effe *PdfColorspaceCalRGB )ToPdfObject ()_be .PdfObject {_agbc :=&_be .PdfObjectArray {};_agbc .Append (_be .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cead :=_be .MakeDict ();if _effe .WhitePoint !=nil {_agbg :=_be .MakeArray (_be .MakeFloat (_effe .WhitePoint [0]),_be .MakeFloat (_effe .WhitePoint [1]),_be .MakeFloat (_effe .WhitePoint [2]));
_cead .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_agbg );}else {_caf .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _effe .BlackPoint !=nil {_gbab :=_be .MakeArray (_be .MakeFloat (_effe .BlackPoint [0]),_be .MakeFloat (_effe .BlackPoint [1]),_be .MakeFloat (_effe .BlackPoint [2]));_cead .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gbab );
};if _effe .Gamma !=nil {_dfdb :=_be .MakeArray (_be .MakeFloat (_effe .Gamma [0]),_be .MakeFloat (_effe .Gamma [1]),_be .MakeFloat (_effe .Gamma [2]));_cead .Set ("\u0047\u0061\u006dm\u0061",_dfdb );};if _effe .Matrix !=nil {_feda :=_be .MakeArray (_be .MakeFloat (_effe .Matrix [0]),_be .MakeFloat (_effe .Matrix [1]),_be .MakeFloat (_effe .Matrix [2]),_be .MakeFloat (_effe .Matrix [3]),_be .MakeFloat (_effe .Matrix [4]),_be .MakeFloat (_effe .Matrix [5]),_be .MakeFloat (_effe .Matrix [6]),_be .MakeFloat (_effe .Matrix [7]),_be .MakeFloat (_effe .Matrix [8]));
_cead .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_feda );};_agbc .Append (_cead );if _effe ._fcaa !=nil {_effe ._fcaa .PdfObject =_agbc ;return _effe ._fcaa ;};return _agbc ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fafe *PdfField )FullName ()(string ,error ){var _gaec _ec .Buffer ;_bcac :=[]string {};if _fafe .T !=nil {_bcac =append (_bcac ,_fafe .T .Decoded ());};_ccdab :=map[*PdfField ]bool {};_ccdab [_fafe ]=true ;_febba :=_fafe .Parent ;for _febba !=nil {if _ ,_bgcc :=_ccdab [_febba ];
_bgcc {return _gaec .String (),_bdf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _febba .T ==nil {return _gaec .String (),_bdf .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_bcac =append (_bcac ,_febba .T .Decoded ());_ccdab [_febba ]=true ;_febba =_febba .Parent ;};for _dgfe :=len (_bcac )-1;_dgfe >=0;_dgfe --{_gaec .WriteString (_bcac [_dgfe ]);if _dgfe > 0{_gaec .WriteString ("\u002e");};};return _gaec .String (),nil ;
};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_beg *PdfAction )GetContext ()PdfModel {if _beg ==nil {return nil ;};return _beg ._ddf ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_agbf *PdfPage )AddExtGState (name _be .PdfObjectName ,egs *_be .PdfObjectDictionary )error {if _agbf .Resources ==nil {_agbf .Resources =NewPdfPageResources ();};if _agbf .Resources .ExtGState ==nil {_agbf .Resources .ExtGState =_be .MakeDict ();
};_gbbe ,_aeebf :=_be .TraceToDirectObject (_agbf .Resources .ExtGState ).(*_be .PdfObjectDictionary );if !_aeebf {_caf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_be .TraceToDirectObject (_agbf .Resources .ExtGState ));
return _bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbbe .Set (name ,egs );return nil ;};const (_ggaa =0x00001;_gfae =0x00002;_bbcba =0x00004;_ffee =0x00008;_bbgd =0x00020;_cfga =0x00040;_eaee =0x10000;
_afff =0x20000;_gadgg =0x40000;);

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_befcd *PdfShadingType3 )ToPdfObject ()_be .PdfObject {_befcd .PdfShading .ToPdfObject ();_gccca ,_gcedc :=_befcd .getShadingDict ();if _gcedc !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _befcd .Coords !=nil {_gccca .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_befcd .Coords );};if _befcd .Domain !=nil {_gccca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_befcd .Domain );};if _befcd .Function !=nil {if len (_befcd .Function )==1{_gccca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_befcd .Function [0].ToPdfObject ());
}else {_febda :=_be .MakeArray ();for _ ,_gbfff :=range _befcd .Function {_febda .Append (_gbfff .ToPdfObject ());};_gccca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_febda );};};if _befcd .Extend !=nil {_gccca .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_befcd .Extend );
};return _befcd ._cgdab ;};func (_bcbfa *PdfAcroForm )fill (_gdee FieldValueProvider ,_ecega FieldAppearanceGenerator )error {if _bcbfa ==nil {return nil ;};_eeca ,_gbfcb :=_gdee .FieldValues ();if _gbfcb !=nil {return _gbfcb ;};for _ ,_edcbc :=range _bcbfa .AllFields (){_gddg :=_edcbc .PartialName ();
_bebc ,_cadbg :=_eeca [_gddg ];if !_cadbg {if _ebgc ,_bbgf :=_edcbc .FullName ();_bbgf ==nil {_bebc ,_cadbg =_eeca [_ebgc ];};};if !_cadbg {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gddg );
continue ;};if _edba :=_dbgba (_edcbc ,_bebc );_edba !=nil {return _edba ;};if _ecega ==nil {continue ;};for _ ,_fbagd :=range _edcbc .Annotations {_debf ,_ccaea :=_ecega .GenerateAppearanceDict (_bcbfa ,_edcbc ,_fbagd );if _ccaea !=nil {return _ccaea ;
};_fbagd .AP =_debf ;_fbagd .ToPdfObject ();};};return nil ;};func (_deabg *PdfReader )lookupPageByObject (_gfdc _be .PdfObject )(*PdfPage ,error ){return nil ,_bdf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func _eedb (_affb ,_ecgb string )string {if _bb .Contains (_affb ,"\u002b"){_egcgd :=_bb .Split (_affb ,"\u002b");if len (_egcgd )==2{_affb =_egcgd [1];};};return _ecgb +"\u002b"+_affb ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_cgaf *PdfColorspaceLab )GetNumComponents ()int {return 3};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_gfcdf *LTV )EnableAll (extraCerts []*_bd .Certificate )error {_ddcae :=_gfcdf ._ggbbe ._gaef .AcroForm ;for _ ,_dedgg :=range _ddcae .AllFields (){_egga ,_ :=_dedgg .GetContext ().(*PdfFieldSignature );if _egga ==nil {continue ;};_eceaf :=_egga .V ;
if _degc :=_gfcdf .validateSig (_eceaf );_degc !=nil {_caf .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_degc );
};if _face :=_gfcdf .Enable (_eceaf ,extraCerts );_face !=nil {return _face ;};};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efdfff *PdfShadingType7 )ToPdfObject ()_be .PdfObject {_efdfff .PdfShading .ToPdfObject ();_aaeeb ,_fadgg :=_efdfff .getShadingDict ();if _fadgg !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efdfff .BitsPerCoordinate !=nil {_aaeeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_efdfff .BitsPerCoordinate );};if _efdfff .BitsPerComponent !=nil {_aaeeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_efdfff .BitsPerComponent );
};if _efdfff .BitsPerFlag !=nil {_aaeeb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_efdfff .BitsPerFlag );};if _efdfff .Decode !=nil {_aaeeb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_efdfff .Decode );};if _efdfff .Function !=nil {if len (_efdfff .Function )==1{_aaeeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efdfff .Function [0].ToPdfObject ());
}else {_gegffe :=_be .MakeArray ();for _ ,_dcbbc :=range _efdfff .Function {_gegffe .Append (_dcbbc .ToPdfObject ());};_aaeeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gegffe );};};return _efdfff ._cgdab ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_be .PdfObjectName ;P *_be .PdfObjectInteger ;V *_be .PdfObjectName ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_adba *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egce ,_egad :=_be .GetNumbersAsFloat (objects );
if _egad !=nil {return nil ,_egad ;};return _adba .ColorFromFloats (_egce );};func (_bcbgb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bcbgb ._gfcg ==nil &&_bcbgb .DescendantFont !=nil {return _bcbgb .DescendantFont .FontDescriptor ();};
return _bcbgb ._gfcg ;};func (_bgbab fontCommon )coreString ()string {_gffab :="";if _bgbab ._gfcg !=nil {_gffab =_bgbab ._gfcg .String ();};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bgbab ._cfcgc ,_bgbab ._abdd ,_bgbab ._egbbc ,_bgbab ._cgfb ,_bgbab ._eecbaf !=nil ,_bgbab .fontFlags (),_gffab );
};func (_gaadf *LTV )enable (_daafd ,_gadf []*_bd .Certificate ,_afcag string )error {_fabfa ,_abcd ,_dddea :=_gaadf .buildCertChain (_daafd ,_gadf );if _dddea !=nil {return _dddea ;};_ddgbd ,_dddea :=_gaadf .getCerts (_fabfa );if _dddea !=nil {return _dddea ;
};var _gaaeg ,_bebca [][]byte ;if _gaadf .OCSPClient !=nil {_gaaeg ,_dddea =_gaadf .getOCSPs (_fabfa ,_abcd );if _dddea !=nil {return _dddea ;};};if _gaadf .CRLClient !=nil {_bebca ,_dddea =_gaadf .getCRLs (_fabfa );if _dddea !=nil {return _dddea ;};};
_fcddf :=_gaadf ._bcda ;_eacg ,_dddea :=_fcddf .addCerts (_ddgbd );if _dddea !=nil {return _dddea ;};_dbbeg ,_dddea :=_fcddf .addOCSPs (_gaaeg );if _dddea !=nil {return _dddea ;};_edgbg ,_dddea :=_fcddf .addCRLs (_bebca );if _dddea !=nil {return _dddea ;
};if _afcag !=""{_fcddf .VRI [_afcag ]=&VRI {Cert :_eacg ,OCSP :_dbbeg ,CRL :_edgbg };};_gaadf ._ggbbe .SetDSS (_fcddf );return nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_faefd *modelManager )GetModelFromPrimitive (primitive _be .PdfObject )PdfModel {model ,_abbbf :=_faefd ._fgdad [primitive ];if !_abbbf {return nil ;};return model ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_eabca *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_eaead ,_acebc :=_be .GetDict (_eabca ._agced .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_acebc {_eaead =_be .MakeDict ();_eabca ._agced .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_eaead );
};_cfdge ,_acebc :=_be .GetDict (_eaead .Get (_be .PdfObjectName (extName )));if !_acebc {_cfdge =_be .MakeDict ();_eaead .Set (_be .PdfObjectName (extName ),_cfdge );};if _fgfgeb ,_ :=_be .GetNameVal (_cfdge .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_fgfgeb !=baseVersion {_cfdge .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_be .MakeName (baseVersion ));};if _gbffd ,_ :=_be .GetIntVal (_cfdge .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_gbffd !=extLevel {_cfdge .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_be .MakeInteger (int64 (extLevel )));};};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _be .PdfObject ;};func _bbcee (_bbggd *_be .PdfObjectArray )(float64 ,error ){_ggcgg ,_dbgbc :=_bbggd .ToFloat64Array ();if _dbgbc !=nil {_caf .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbggd ,_dbgbc );
};switch len (_ggcgg ){case 1:return _ggcgg [0],nil ;case 3:_cffbbb :=PdfColorspaceDeviceRGB {};_gafbc ,_fcebd :=_cffbbb .ColorFromFloats (_ggcgg );if _fcebd !=nil {return 0.0,_fcebd ;};return _gafbc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_ddfeb :=PdfColorspaceDeviceCMYK {};
_edcbd ,_gcbac :=_ddfeb .ColorFromFloats (_ggcgg );if _gcbac !=nil {return 0.0,_gcbac ;};_dfaag ,_gcbac :=_ddfeb .ColorToRGB (_edcbd .(*PdfColorDeviceCMYK ));if _gcbac !=nil {return 0.0,_gcbac ;};return _dfaag .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_dbgbc =_bdf .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_caf .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbggd ,_dbgbc );
return 0.0,_dbgbc ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_geag :=map[rune ]int {};for _ ,_adec :=range text {_geag [_adec ]++;};return _geag ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_dfaa :_be .MakeIndirectObject (_be .MakeDict ()),VRI :map[string ]*VRI {}};};

// GetContainingPdfObject implements interface PdfModel.
func (_adgeac *PdfFilespec )GetContainingPdfObject ()_be .PdfObject {return _adgeac ._fbfa };func _fggd (_afecg *_fg .ImageBase )(_cace Image ){_cace .Width =int64 (_afecg .Width );_cace .Height =int64 (_afecg .Height );_cace .BitsPerComponent =int64 (_afecg .BitsPerComponent );
_cace .ColorComponents =_afecg .ColorComponents ;_cace .Data =_afecg .Data ;_cace ._ffedg =_afecg .Decode ;_cace ._bbbgb =_afecg .Alpha ;return _cace ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dgfd *PdfField )ToPdfObject ()_be .PdfObject {_eedde :=_dgfd ._ffcf ;_bgbc :=_eedde .PdfObject .(*_be .PdfObjectDictionary );_bedc :=_be .MakeArray ();for _ ,_adef :=range _dgfd .Kids {_bedc .Append (_adef .ToPdfObject ());};for _ ,_gfde :=range _dgfd .Annotations {if _gfde ._dbf !=_dgfd ._ffcf {_bedc .Append (_gfde .GetContext ().ToPdfObject ());
};};if _dgfd .Parent !=nil {_bgbc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgfd .Parent .GetContainingPdfObject ());};if _bedc .Len ()> 0{_bgbc .Set ("\u004b\u0069\u0064\u0073",_bedc );};_bgbc .SetIfNotNil ("\u0046\u0054",_dgfd .FT );_bgbc .SetIfNotNil ("\u0054",_dgfd .T );
_bgbc .SetIfNotNil ("\u0054\u0055",_dgfd .TU );_bgbc .SetIfNotNil ("\u0054\u004d",_dgfd .TM );_bgbc .SetIfNotNil ("\u0046\u0066",_dgfd .Ff );_bgbc .SetIfNotNil ("\u0056",_dgfd .V );_bgbc .SetIfNotNil ("\u0044\u0056",_dgfd .DV );_bgbc .SetIfNotNil ("\u0041\u0041",_dgfd .AA );
if _dgfd .VariableText !=nil {_bgbc .SetIfNotNil ("\u0044\u0041",_dgfd .VariableText .DA );_bgbc .SetIfNotNil ("\u0051",_dgfd .VariableText .Q );_bgbc .SetIfNotNil ("\u0044\u0053",_dgfd .VariableText .DS );_bgbc .SetIfNotNil ("\u0052\u0056",_dgfd .VariableText .RV );
};return _eedde ;};func (_cdfc *PdfReader )newPdfAnnotationLineFromDict (_cbe *_be .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_fca :=PdfAnnotationLine {};_deae ,_eag :=_cdfc .newPdfAnnotationMarkupFromDict (_cbe );if _eag !=nil {return nil ,_eag ;
};_fca .PdfAnnotationMarkup =_deae ;_fca .L =_cbe .Get ("\u004c");_fca .BS =_cbe .Get ("\u0042\u0053");_fca .LE =_cbe .Get ("\u004c\u0045");_fca .IC =_cbe .Get ("\u0049\u0043");_fca .LL =_cbe .Get ("\u004c\u004c");_fca .LLE =_cbe .Get ("\u004c\u004c\u0045");
_fca .Cap =_cbe .Get ("\u0043\u0061\u0070");_fca .IT =_cbe .Get ("\u0049\u0054");_fca .LLO =_cbe .Get ("\u004c\u004c\u004f");_fca .CP =_cbe .Get ("\u0043\u0050");_fca .Measure =_cbe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_fca .CO =_cbe .Get ("\u0043\u004f");
return &_fca ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cddb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cddb .AlternateSpace ==nil {return nil ,_bdf .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cddb .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_fgc *PdfAction )ToPdfObject ()_be .PdfObject {_ada :=_fgc ._deb ;_dcf :=_ada .PdfObject .(*_be .PdfObjectDictionary );_dcf .Clear ();_dcf .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_dcf .SetIfNotNil ("\u0053",_fgc .S );
_dcf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fgc .Next );return _ada ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gcgfc *PdfPage )GetContentStreamObjs ()[]_be .PdfObject {if _gcgfc .Contents ==nil {return nil ;};_abfa :=_be .TraceToDirectObject (_gcgfc .Contents );if _adcag ,_gbgdb :=_abfa .(*_be .PdfObjectArray );_gbgdb {return _adcag .Elements ();};return []_be .PdfObject {_abfa };
};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bda :=NewPdfAction ();_fgf :=&PdfActionHide {};_fgf .PdfAction =_bda ;_bda .SetContext (_fgf );return _fgf ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _be .PdfObject ;Flags _be .PdfObject ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_fagca :=appender .Reader .DSS ;if _fagca ==nil {_fagca =NewDSS ();};if _afbaaf :=_fagca .generateHashMaps ();_afbaaf !=nil {return nil ,_afbaaf ;};return &LTV {CertClient :_dde .NewCertClient (),OCSPClient :_dde .NewOCSPClient (),CRLClient :_dde .NewCRLClient (),SkipExisting :true ,_ggbbe :appender ,_bcda :_fagca },nil ;
};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_dfdbb *PdfPage )GetRotate ()(int64 ,error ){if _dfdbb .Rotate !=nil {return *_dfdbb .Rotate ,nil ;};_cdba :=_dfdbb .Parent ;for _cdba !=nil {_efee ,_ebda :=_be .GetDict (_cdba );if !_ebda {return 0,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gegcf :=_efee .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gegcf !=nil {_bbeec ,_cdfba :=_be .GetInt (_gegcf );if !_cdfba {return 0,_bdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _bbeec !=nil {return int64 (*_bbeec ),nil ;};return 0,_bdf .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_cdba =_efee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_bdf .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cdffg *PdfPage )GetAllContentStreams ()(string ,error ){_bbgc ,_fgbca :=_cdffg .GetContentStreams ();if _fgbca !=nil {return "",_fgbca ;};return _bb .Join (_bbgc ,"\u0020"),nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_decbc *PdfWriter )SetPageLabels (pageLabels _be .PdfObject )error {if pageLabels ==nil {return nil ;};_caf .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_decbc ._agced .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _decbc .addObjects (pageLabels );};func (_dgg *PdfReader )newPdfAnnotationRedactFromDict (_efbf *_be .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_faed :=PdfAnnotationRedact {};
_agbd ,_dgdaf :=_dgg .newPdfAnnotationMarkupFromDict (_efbf );if _dgdaf !=nil {return nil ,_dgdaf ;};_faed .PdfAnnotationMarkup =_agbd ;_faed .QuadPoints =_efbf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_faed .IC =_efbf .Get ("\u0049\u0043");
_faed .RO =_efbf .Get ("\u0052\u004f");_faed .OverlayText =_efbf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_faed .Repeat =_efbf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_faed .DA =_efbf .Get ("\u0044\u0041");_faed .Q =_efbf .Get ("\u0051");
return &_faed ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_cedgf *_be .PdfIndirectObject ;_cceac _ac .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_be .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _be .PdfObject ;W _be .PdfObject ;DW2 _be .PdfObject ;W2 _be .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _be .PdfObject ;_ddab map[_ac .CharCode ]float64 ;_eaaa float64 ;_ffeff map[rune ]int ;};

// String returns the name of the colorspace (DeviceN).
func (_dbfdb *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ToPdfObject implements interface PdfModel.
func (_afac *PdfAnnotationStrikeOut )ToPdfObject ()_be .PdfObject {_afac .PdfAnnotation .ToPdfObject ();_cac :=_afac ._dbf ;_bfbg :=_cac .PdfObject .(*_be .PdfObjectDictionary );_afac .PdfAnnotationMarkup .appendToPdfDictionary (_bfbg );_bfbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_bfbg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_afac .QuadPoints );return _cac ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_dcea *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dcea .Alternate ==nil {_caf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dcea .N ==1{_caf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ccdd :=NewPdfColorspaceDeviceGray ();return _ccdd .ColorToRGB (color );}else if _dcea .N ==3{_caf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _dcea .N ==4{_caf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dfdcf :=NewPdfColorspaceDeviceCMYK ();return _dfdcf .ColorToRGB (color );}else {return nil ,_bdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_caf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dcea );
return _dcea .Alternate .ColorToRGB (color );};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bab *PdfAnnotationWidget )Field ()*PdfField {return _bab ._bge };

// ToPdfObject implements interface PdfModel.
func (_dbfc *PdfAnnotationLine )ToPdfObject ()_be .PdfObject {_dbfc .PdfAnnotation .ToPdfObject ();_degb :=_dbfc ._dbf ;_bcca :=_degb .PdfObject .(*_be .PdfObjectDictionary );_dbfc .PdfAnnotationMarkup .appendToPdfDictionary (_bcca );_bcca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u004c\u0069\u006e\u0065"));
_bcca .SetIfNotNil ("\u004c",_dbfc .L );_bcca .SetIfNotNil ("\u0042\u0053",_dbfc .BS );_bcca .SetIfNotNil ("\u004c\u0045",_dbfc .LE );_bcca .SetIfNotNil ("\u0049\u0043",_dbfc .IC );_bcca .SetIfNotNil ("\u004c\u004c",_dbfc .LL );_bcca .SetIfNotNil ("\u004c\u004c\u0045",_dbfc .LLE );
_bcca .SetIfNotNil ("\u0043\u0061\u0070",_dbfc .Cap );_bcca .SetIfNotNil ("\u0049\u0054",_dbfc .IT );_bcca .SetIfNotNil ("\u004c\u004c\u004f",_dbfc .LLO );_bcca .SetIfNotNil ("\u0043\u0050",_dbfc .CP );_bcca .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dbfc .Measure );
_bcca .SetIfNotNil ("\u0043\u004f",_dbfc .CO );return _degb ;};

// ToPdfObject implements interface PdfModel.
func (_efg *PdfAnnotationTrapNet )ToPdfObject ()_be .PdfObject {_efg .PdfAnnotation .ToPdfObject ();_aeceb :=_efg ._dbf ;_dgb :=_aeceb .PdfObject .(*_be .PdfObjectDictionary );_dgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _aeceb ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_fecgb *PdfWriter )SetRotation (rotate int64 )error {_bgegge ,_dgffc :=_be .GetDict (_fecgb ._cdcg );if !_dgffc {return ErrTypeCheck ;};_bgegge .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_be .MakeInteger (rotate ));return nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_be .PdfObjectStream ;Data []byte ;_ebad *_be .PdfIndirectObject ;_cgee *_be .PdfObjectStream ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_edfdg *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _edfdg ._geca !=nil {return _edfdg ._geca ,nil ;};if _edfdg .Annots ==nil {_edfdg ._geca =[]*PdfAnnotation {};return nil ,nil ;};if _edfdg ._ffge ==nil {_edfdg ._geca =[]*PdfAnnotation {};
return nil ,nil ;};_afbd ,_acafb :=_edfdg ._ffge .loadAnnotations (_edfdg .Annots );if _acafb !=nil {return nil ,_acafb ;};if _afbd ==nil {_edfdg ._geca =[]*PdfAnnotation {};};_edfdg ._geca =_afbd ;return _edfdg ._geca ,nil ;};

// Items returns all children outline items.
func (_faac *OutlineItem )Items ()[]*OutlineItem {return _faac .Entries };

// ToPdfObject implements interface PdfModel.
func (_bdgdd *Permissions )ToPdfObject ()_be .PdfObject {return _bdgdd ._cfged };

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_dfgb *PdfPageResources )HasShadingByName (keyName _be .PdfObjectName )bool {_ ,_cbfe :=_dfgb .GetShadingByName (keyName );return _cbfe ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbfce *PdfShadingType1 )ToPdfObject ()_be .PdfObject {_fbfce .PdfShading .ToPdfObject ();_cbaadg ,_dgage :=_fbfce .getShadingDict ();if _dgage !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbfce .Domain !=nil {_cbaadg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbfce .Domain );};if _fbfce .Matrix !=nil {_cbaadg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fbfce .Matrix );};if _fbfce .Function !=nil {if len (_fbfce .Function )==1{_cbaadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbfce .Function [0].ToPdfObject ());
}else {_ecfcd :=_be .MakeArray ();for _ ,_ggbae :=range _fbfce .Function {_ecfcd .Append (_ggbae .ToPdfObject ());};_cbaadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecfcd );};};return _fbfce ._cgdab ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_dag .File ,error ){const _eadee ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fbea ,_cgedb :=_dag .Open (pdfFile );if _cgedb !=nil {return nil ,nil ,_cgedb ;};_dgdd ,_cgedb :=_eagga (_fbea ,opts ,true ,_eadee );if _cgedb !=nil {_fbea .Close ();return nil ,nil ,_cgedb ;};return _dgdd ,_fbea ,nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// SetAlpha sets the alpha layer for the image.
func (_bbeef *Image )SetAlpha (alpha []byte ){_bbeef ._bbbgb =alpha };func _ffaba (_fecf *_be .PdfObjectDictionary ,_dcaa *fontCommon )(*pdfCIDFontType0 ,error ){if _dcaa ._cfcgc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_caf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dcaa );
return nil ,_be .ErrRangeError ;};_gfee :=_feae (_dcaa );_facb ,_ggbd :=_be .GetDict (_fecf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ggbd {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dcaa );
return nil ,ErrRequiredAttributeMissing ;};_gfee .CIDSystemInfo =_facb ;_gfee .DW =_fecf .Get ("\u0044\u0057");_gfee .W =_fecf .Get ("\u0057");_gfee .DW2 =_fecf .Get ("\u0044\u0057\u0032");_gfee .W2 =_fecf .Get ("\u0057\u0032");_gfee ._ddbfd =1000.0;if _gaeag ,_fbdb :=_be .GetNumberAsFloat (_gfee .DW );
_fbdb ==nil {_gfee ._ddbfd =_gaeag ;};_eefa ,_acae :=_acbe (_gfee .W );if _acae !=nil {return nil ,_acae ;};if _eefa ==nil {_eefa =map[_ac .CharCode ]float64 {};};_gfee ._accg =_eefa ;return _gfee ,nil ;};func (_acdff *PdfShading )getShadingDict ()(*_be .PdfObjectDictionary ,error ){_bfce :=_acdff ._cgdab ;
if _cgagd ,_cgace :=_bfce .(*_be .PdfIndirectObject );_cgace {_dbacc ,_acbdf :=_cgagd .PdfObject .(*_be .PdfObjectDictionary );if !_acbdf {return nil ,_be .ErrTypeError ;};return _dbacc ,nil ;}else if _adgg ,_aeada :=_bfce .(*_be .PdfObjectStream );_aeada {return _adgg .PdfObjectDictionary ,nil ;
}else if _gcefa ,_bedaa :=_bfce .(*_be .PdfObjectDictionary );_bedaa {return _gcefa ,nil ;}else {_caf .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_be .ErrTypeError ;};};func (_ccgea *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _ccgea ._gfcg };

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_afddc *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=_afddc .GetNumComponents (){return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eacba ,_gafg :=_be .GetNumbersAsFloat (objects );
if _gafg !=nil {return nil ,_gafg ;};return _afddc .ColorFromFloats (_eacba );};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_dfaa *_be .PdfIndirectObject ;Certs []*_be .PdfObjectStream ;OCSPs []*_be .PdfObjectStream ;CRLs []*_be .PdfObjectStream ;VRI map[string ]*VRI ;_cgbce map[string ]*_be .PdfObjectStream ;_cfedd map[string ]*_be .PdfObjectStream ;_ggge map[string ]*_be .PdfObjectStream ;
};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_eafd byte )byte ;

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_cfged *_be .PdfObjectDictionary ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_be .PdfObjectInteger ;BitsPerComponent *_be .PdfObjectInteger ;BitsPerFlag *_be .PdfObjectInteger ;Decode *_be .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_aeb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_be .PdfObject {_bfebe :=_be .MakeDict ();if _aeb .Subtype !=nil {_bfebe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aeb .Subtype );};_bfebe .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_aeb .Colorants );
_bfebe .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_aeb .Process );_bfebe .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_aeb .MixingHints );if _aeb ._bbddf !=nil {_aeb ._bbddf .PdfObject =_bfebe ;return _aeb ._bbddf ;
};return _bfebe ;};func _bfc (_fdaf *_be .PdfObjectDictionary ){_fba ,_bceb :=_be .GetArray (_fdaf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_aegcg ,_bffad :=_be .GetIntVal (_fdaf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_ebefd ,_fcaaf :=_be .GetIntVal (_fdaf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));
if _bceb &&_bffad &&_fcaaf {_adca :=_fba .Len ();if _adca !=_ebefd -_aegcg +1{_caf .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_adca ,_ebefd );
_baac :=_be .PdfObjectInteger (_aegcg +_adca -1);_fdaf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_baac );};};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gedb *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfcbd :=vals [0];if _gfcbd < 0.0||_gfcbd > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfcbd );
return nil ,ErrColorOutOfRange ;};_eead :=vals [1];if _eead < 0.0||_eead > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eead );return nil ,ErrColorOutOfRange ;
};_dabb :=vals [2];if _dabb < 0.0||_dabb > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dabb );return nil ,ErrColorOutOfRange ;};_afcea :=NewPdfColorCalRGB (_gfcbd ,_eead ,_dabb );
return _afcea ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_faeea :=&PdfFilespec {};_faeea ._fbfa =_be .MakeIndirectObject (_be .MakeDict ());return _faeea ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _be .PdfObject ;T _be .PdfObject ;Operation _be .PdfObject ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _dfcbc (_eegbd string )(string ,error ){var _abgfd _ec .Buffer ;_abgfd .WriteString (_eegbd );_dfaf :=make ([]byte ,8+16);_cdafg :=_ba .Now ().UTC ().UnixNano ();_gd .BigEndian .PutUint64 (_dfaf ,uint64 (_cdafg ));
_ ,_dbdd :=_dc .Read (_dfaf [8:]);if _dbdd !=nil {return "",_dbdd ;};_abgfd .WriteString (_ge .EncodeToString (_dfaf ));return _abgfd .String (),nil ;};func _ecbg (_effcf StdFontName )(pdfFontSimple ,error ){_deagb ,_fggc :=_ecg .NewStdFontByName (_effcf );
if !_fggc {return pdfFontSimple {},ErrFontNotSupported ;};_gdcec :=_efgc (_deagb );return _gdcec ,nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_begcd ,_dfaee :=NewStandard14Font (basefont );if _dfaee !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _begcd ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_be .PdfIndirectObject ;SV *_be .PdfIndirectObject ;};func (_cgbg *LTV )getOCSPs (_agafb []*_bd .Certificate ,_gced map[string ]*_bd .Certificate )([][]byte ,error ){_eaacd :=make ([][]byte ,0,len (_agafb ));
for _ ,_beeaf :=range _agafb {for _ ,_baagb :=range _beeaf .OCSPServer {if _cgbg .CertClient .IsCA (_beeaf ){continue ;};_dfff ,_bbge :=_gced [_beeaf .Issuer .CommonName ];if !_bbge {_caf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bdcga ,_cfcdf :=_cgbg .OCSPClient .MakeRequest (_baagb ,_beeaf ,_dfff );if _cfcdf !=nil {_caf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_cfcdf );
continue ;};_eaacd =append (_eaacd ,_bdcga );};};return _eaacd ,nil ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_fgffa *_be .PdfObjectDictionary ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_dacfg *PdfPageResources )HasExtGState (keyName _be .PdfObjectName )bool {_ ,_gdcd :=_dacfg .GetFontByName (keyName );return _gdcd ;};func (_ddda *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_eec :=NewPdfAnnotation ();_gegd :=&PdfAnnotationScreen {};_gegd .PdfAnnotation =_eec ;_eec .SetContext (_gegd );return _gegd ;};

// GetOutlineTree returns the outline tree.
func (_baecb *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _baecb ._dddeg };

// ToPdfObject converts the font to a PDF representation.
func (_faaa *pdfFontType0 )ToPdfObject ()_be .PdfObject {if _faaa ._egagc ==nil {_faaa ._egagc =&_be .PdfIndirectObject {};};_dccbb :=_faaa .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_faaa ._egagc .PdfObject =_dccbb ;if _faaa .Encoding !=nil {_dccbb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_faaa .Encoding );
}else if _faaa ._bgbb !=nil {_dccbb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_faaa ._bgbb .ToPdfObject ());};if _faaa .DescendantFont !=nil {_dccbb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_be .MakeArray (_faaa .DescendantFont .ToPdfObject ()));
};return _faaa ._egagc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fegb pdfFontType0 )GetCharMetrics (code _ac .CharCode )(_ecg .CharMetrics ,bool ){if _fegb .DescendantFont ==nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fegb );
return _ecg .CharMetrics {},false ;};return _fegb .DescendantFont .GetCharMetrics (code );};func (_dfd *PdfAnnotation )String ()string {_gfc :="";_dcb ,_afb :=_dfd .ToPdfObject ().(*_be .PdfIndirectObject );if _afb {_gfc =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dfd ._ef ,_dcb .PdfObject .String ());
};return _gfc ;};

// Encoder returns the font's text encoder.
func (_defad pdfCIDFontType2 )Encoder ()_ac .TextEncoder {return _defad ._cceac };

// IsValid checks if the given pdf output intent type is valid.
func (_egacb PdfOutputIntentType )IsValid ()bool {return _egacb >=PdfOutputIntentTypeA1 &&_egacb <=PdfOutputIntentTypeX ;};func (_ecb *PdfReader )newPdfAnnotationCircleFromDict (_aaacf *_be .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_afee :=PdfAnnotationCircle {};
_bgb ,_aabd :=_ecb .newPdfAnnotationMarkupFromDict (_aaacf );if _aabd !=nil {return nil ,_aabd ;};_afee .PdfAnnotationMarkup =_bgb ;_afee .BS =_aaacf .Get ("\u0042\u0053");_afee .IC =_aaacf .Get ("\u0049\u0043");_afee .BE =_aaacf .Get ("\u0042\u0045");
_afee .RD =_aaacf .Get ("\u0052\u0044");return &_afee ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dgfdc *XObjectImage )GetContainingPdfObject ()_be .PdfObject {return _dgfdc ._fcaaa };func _dcgged (_fdda _be .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dgea :=NewPdfColorspaceSpecialSeparation ();if _ggaf ,_aadf :=_fdda .(*_be .PdfIndirectObject );
_aadf {_dgea ._decd =_ggaf ;};_fdda =_be .TraceToDirectObject (_fdda );_faedcd ,_ebff :=_fdda .(*_be .PdfObjectArray );if !_ebff {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _faedcd .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fdda =_faedcd .Get (0);
_abbbe ,_ebff :=_fdda .(*_be .PdfObjectName );if !_ebff {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_abbbe !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_fdda =_faedcd .Get (1);_abbbe ,_ebff =_fdda .(*_be .PdfObjectName );if !_ebff {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dgea .ColorantName =_abbbe ;_fdda =_faedcd .Get (2);_ccbb ,_ggab :=NewPdfColorspaceFromPdfObject (_fdda );if _ggab !=nil {return nil ,_ggab ;};_dgea .AlternateSpace =_ccbb ;_gbec ,_ggab :=_fgbbbc (_faedcd .Get (3));if _ggab !=nil {return nil ,_ggab ;
};_dgea .TintTransform =_gbec ;return _dgea ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// String returns a string that describes `font`.
func (_afcc *PdfFont )String ()string {_cgcgg :="";if _afcc ._egbcf .Encoder ()!=nil {_cgcgg =_afcc ._egbcf .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_afcc ._egbcf ,_afcc .baseFields ().coreString (),_cgcgg );
};func _cgbfcb (_gbfe *_be .PdfObjectDictionary )(*PdfTilingPattern ,error ){_acfbd :=&PdfTilingPattern {};_abccc :=_gbfe .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _abccc ==nil {_caf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eebdd ,_facgcb :=_abccc .(*_be .PdfObjectInteger );if !_facgcb {_caf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_abccc );
return nil ,_be .ErrTypeError ;};_acfbd .PaintType =_eebdd ;_abccc =_gbfe .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _abccc ==nil {_caf .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfeag ,_facgcb :=_abccc .(*_be .PdfObjectInteger );if !_facgcb {_caf .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abccc );
return nil ,_be .ErrTypeError ;};_acfbd .TilingType =_cfeag ;_abccc =_gbfe .Get ("\u0042\u0042\u006f\u0078");if _abccc ==nil {_caf .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_abccc =_be .TraceToDirectObject (_abccc );_bebb ,_facgcb :=_abccc .(*_be .PdfObjectArray );if !_facgcb {_caf .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abccc );
return nil ,_be .ErrTypeError ;};_bfgff ,_bbgdd :=NewPdfRectangle (*_bebb );if _bbgdd !=nil {_caf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bbgdd );return nil ,_bbgdd ;};_acfbd .BBox =_bfgff ;_abccc =_gbfe .Get ("\u0058\u0053\u0074e\u0070");
if _abccc ==nil {_caf .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ebefc ,_bbgdd :=_be .GetNumberAsFloat (_abccc );if _bbgdd !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ebefc );
return nil ,_bbgdd ;};_acfbd .XStep =_be .MakeFloat (_ebefc );_abccc =_gbfe .Get ("\u0059\u0053\u0074e\u0070");if _abccc ==nil {_caf .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bbede ,_bbgdd :=_be .GetNumberAsFloat (_abccc );if _bbgdd !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bbede );
return nil ,_bbgdd ;};_acfbd .YStep =_be .MakeFloat (_bbede );_abccc =_gbfe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _abccc ==nil {_caf .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gbfe ,_facgcb =_be .TraceToDirectObject (_abccc ).(*_be .PdfObjectDictionary );if !_facgcb {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_abccc );
};_becfc ,_bbgdd :=NewPdfPageResourcesFromDict (_gbfe );if _bbgdd !=nil {return nil ,_bbgdd ;};_acfbd .Resources =_becfc ;if _gegdc :=_gbfe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gegdc !=nil {_dcacb ,_faca :=_gegdc .(*_be .PdfObjectArray );if !_faca {_caf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gegdc );
return nil ,_be .ErrTypeError ;};_acfbd .Matrix =_dcacb ;};return _acfbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bdbf *PdfActionThread )ToPdfObject ()_be .PdfObject {_bdbf .PdfAction .ToPdfObject ();_aec :=_bdbf ._deb ;_cede :=_aec .PdfObject .(*_be .PdfObjectDictionary );_cede .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeThread )));if _bdbf .F !=nil {_cede .Set ("\u0046",_bdbf .F .ToPdfObject ());
};_cede .SetIfNotNil ("\u0044",_bdbf .D );_cede .SetIfNotNil ("\u0042",_bdbf .B );return _aec ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dagcd *PdfField )IsTerminal ()bool {return len (_dagcd .Kids )==0};

// C returns the value of the cyan component of the color.
func (_fggb *PdfColorDeviceCMYK )C ()float64 {return _fggb [0]};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_efbec *PdfWriter )SetOptimizer (optimizer Optimizer ){_efbec ._cbffc =optimizer };

// String implements interface PdfObject.
func (_cd *PdfAction )String ()string {_ged ,_cb :=_cd .ToPdfObject ().(*_be .PdfIndirectObject );if _cb {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cd ._ddf ,_ged .PdfObject .String ());};return "";};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_ffbb :=&PdfColorPattern {};return _ffbb };

// Width returns the width of `rect`.
func (_egeccc *PdfRectangle )Width ()float64 {return _eg .Abs (_egeccc .Urx -_egeccc .Llx )};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_aaaa *PdfColorspaceLab )DecodeArray ()[]float64 {_bdag :=[]float64 {0,100};if _aaaa .Range !=nil &&len (_aaaa .Range )==4{_bdag =append (_bdag ,_aaaa .Range ...);}else {_bdag =append (_bdag ,-100,100,-100,100);};return _bdag ;};

// GetVersion gets the document version.
func (_aeea *PdfWriter )GetVersion ()_be .Version {return _aeea ._dagdf };func _cabdf (_efgcf *_be .PdfObjectDictionary )(*PdfShadingType5 ,error ){_fdcge :=PdfShadingType5 {};_abaff :=_efgcf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _abaff ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aeega ,_fecec :=_abaff .(*_be .PdfObjectInteger );if !_fecec {_caf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abaff );
return nil ,_be .ErrTypeError ;};_fdcge .BitsPerCoordinate =_aeega ;_abaff =_efgcf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _abaff ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aeega ,_fecec =_abaff .(*_be .PdfObjectInteger );if !_fecec {_caf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_abaff );
return nil ,_be .ErrTypeError ;};_fdcge .BitsPerComponent =_aeega ;_abaff =_efgcf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _abaff ==nil {_caf .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_aeega ,_fecec =_abaff .(*_be .PdfObjectInteger );if !_fecec {_caf .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_abaff );
return nil ,_be .ErrTypeError ;};_fdcge .VerticesPerRow =_aeega ;_abaff =_efgcf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _abaff ==nil {_caf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eaea ,_fecec :=_abaff .(*_be .PdfObjectArray );if !_fecec {_caf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abaff );
return nil ,_be .ErrTypeError ;};_fdcge .Decode =_eaea ;if _abed :=_efgcf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_abed !=nil {_fdcge .Function =[]PdfFunction {};if _fecea ,_fgeed :=_abed .(*_be .PdfObjectArray );_fgeed {for _ ,_edee :=range _fecea .Elements (){_acbbe ,_acbad :=_fgbbbc (_edee );
if _acbad !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acbad );return nil ,_acbad ;};_fdcge .Function =append (_fdcge .Function ,_acbbe );
};}else {_egfdf ,_dcdagd :=_fgbbbc (_abed );if _dcdagd !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcdagd );return nil ,_dcdagd ;
};_fdcge .Function =append (_fdcge .Function ,_egfdf );};};return &_fdcge ,nil ;};func _eeeac ()*modelManager {_ggcag :=modelManager {};_ggcag ._ddcf =map[PdfModel ]_be .PdfObject {};_ggcag ._fgdad =map[_be .PdfObject ]PdfModel {};return &_ggcag ;};

// ToPdfObject returns the PDF representation of the function.
func (_dbebb *PdfFunctionType4 )ToPdfObject ()_be .PdfObject {_dfdcfe :=_dbebb ._fbda ;if _dfdcfe ==nil {_dbebb ._fbda =&_be .PdfObjectStream {};_dfdcfe =_dbebb ._fbda ;};_cbdb :=_be .MakeDict ();_cbdb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_be .MakeInteger (4));
_cffbe :=&_be .PdfObjectArray {};for _ ,_baee :=range _dbebb .Domain {_cffbe .Append (_be .MakeFloat (_baee ));};_cbdb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cffbe );_gfcgd :=&_be .PdfObjectArray {};for _ ,_ceaf :=range _dbebb .Range {_gfcgd .Append (_be .MakeFloat (_ceaf ));
};_cbdb .Set ("\u0052\u0061\u006eg\u0065",_gfcgd );if _dbebb ._gcbaf ==nil &&_dbebb .Program !=nil {_dbebb ._gcbaf =[]byte (_dbebb .Program .String ());};_cbdb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_be .MakeInteger (int64 (len (_dbebb ._gcbaf ))));
_dfdcfe .Stream =_dbebb ._gcbaf ;_dfdcfe .PdfObjectDictionary =_cbdb ;return _dfdcfe ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fabc *PdfColorspaceLab )ToPdfObject ()_be .PdfObject {_cbac :=_be .MakeArray ();_cbac .Append (_be .MakeName ("\u004c\u0061\u0062"));_adce :=_be .MakeDict ();if _fabc .WhitePoint !=nil {_ccff :=_be .MakeArray (_be .MakeFloat (_fabc .WhitePoint [0]),_be .MakeFloat (_fabc .WhitePoint [1]),_be .MakeFloat (_fabc .WhitePoint [2]));
_adce .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ccff );}else {_caf .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fabc .BlackPoint !=nil {_ccea :=_be .MakeArray (_be .MakeFloat (_fabc .BlackPoint [0]),_be .MakeFloat (_fabc .BlackPoint [1]),_be .MakeFloat (_fabc .BlackPoint [2]));_adce .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ccea );
};if _fabc .Range !=nil {_gcfb :=_be .MakeArray (_be .MakeFloat (_fabc .Range [0]),_be .MakeFloat (_fabc .Range [1]),_be .MakeFloat (_fabc .Range [2]),_be .MakeFloat (_fabc .Range [3]));_adce .Set ("\u0052\u0061\u006eg\u0065",_gcfb );};_cbac .Append (_adce );
if _fabc ._acgag !=nil {_fabc ._acgag .PdfObject =_cbac ;return _fabc ._acgag ;};return _cbac ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_caab :=&PdfPageResources {};_caab ._aggc =_be .MakeDict ();return _caab ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gagc *PdfFieldSignature )ToPdfObject ()_be .PdfObject {if _gagc .PdfAnnotationWidget !=nil {_gagc .PdfAnnotationWidget .ToPdfObject ();};_gagc .PdfField .ToPdfObject ();_fgddf :=_gagc ._ffcf ;_fbdf :=_fgddf .PdfObject .(*_be .PdfObjectDictionary );
_fbdf .SetIfNotNil ("\u0046\u0054",_be .MakeName ("\u0053\u0069\u0067"));_fbdf .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gagc .Lock );_fbdf .SetIfNotNil ("\u0053\u0056",_gagc .SV );if _gagc .V !=nil {_fbdf .SetIfNotNil ("\u0056",_gagc .V .ToPdfObject ());
};return _fgddf ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_gafe *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _eafeb []*PdfField ;_afbaf :=map[*_be .PdfIndirectObject ]struct{}{};for _ ,_dbdfe :=range _gafe .PageList {_aeca ,_dfdf :=_dbdfe .GetAnnotations ();if _dfdf !=nil {return _dfdf ;
};for _ ,_bfgdb :=range _aeca {var _gegcg *PdfField ;switch _bbdcg :=_bfgdb .GetContext ().(type ){case *PdfAnnotationWidget :if _bbdcg ._bge !=nil {_gegcg =_bbdcg ._bge ;break ;};if _adefd ,_dbcac :=_be .GetIndirect (_bbdcg .Parent );_dbcac {_gegcg ,_dfdf =_gafe .newPdfFieldFromIndirectObject (_adefd ,nil );
if _dfdf ==nil {break ;};_caf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_adefd ,_dfdf );
};if _bbdcg ._dbf !=nil {_gegcg ,_dfdf =_gafe .newPdfFieldFromIndirectObject (_bbdcg ._dbf ,nil );if _dfdf ==nil {break ;};_caf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bbdcg ._dbf ,_dfdf );
};};if _gegcg ==nil {continue ;};if _ ,_dgcac :=_afbaf [_gegcg ._ffcf ];_dgcac {continue ;};_afbaf [_gegcg ._ffcf ]=struct{}{};_eafeb =append (_eafeb ,_gegcg );};};if len (_eafeb )==0{return nil ;};if _gafe .AcroForm ==nil {_gafe .AcroForm =NewPdfAcroForm ();
};_gafe .AcroForm .Fields =&_eafeb ;return nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gdba :=&PdfColorPatternType2 {};return _gdba };func (_cdbbe *PdfWriter )writeDocumentVersion (){if _cdbbe ._fdgcf {_cdbbe .writeString ("\u000a");}else {_cdbbe .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cdbbe ._dagdf .Major ,_cdbbe ._dagdf .Minor ));
_cdbbe .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// SetAnnotations sets the annotations list.
func (_cdeb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_cdeb ._geca =annotations };func _gfcd (_gefdf string )map[string ]string {_dgeeg :=_ecddb .Split (_gefdf ,-1);_ffec :=map[string ]string {};for _ ,_cfbeeg :=range _dgeeg {_aabdb :=_fgggff .FindStringSubmatch (_cfbeeg );
if _aabdb ==nil {continue ;};_bggc ,_cgfg :=_aabdb [1],_aabdb [2];_ffec [_bggc ]=_cgfg ;};return _ffec ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bacbb *XObjectImage )SetFilter (encoder _be .StreamEncoder )error {_fbefab :=_bacbb .Stream ;_dbag ,_agabd :=_bacbb .Filter .DecodeBytes (_fbefab );if _agabd !=nil {return _agabd ;};_bacbb .Filter =encoder ;encoder .UpdateParams (_bacbb .getParamsDict ());
_fbefab ,_agabd =encoder .EncodeBytes (_dbag );if _agabd !=nil {return _agabd ;};_bacbb .Stream =_fbefab ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_deed *PdfAnnotationLink )ToPdfObject ()_be .PdfObject {_deed .PdfAnnotation .ToPdfObject ();_gffg :=_deed ._dbf ;_egcg :=_gffg .PdfObject .(*_be .PdfObjectDictionary );_egcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u004c\u0069\u006e\u006b"));
if _deed ._ggee !=nil &&_deed ._ggee ._ddf !=nil {_egcg .Set ("\u0041",_deed ._ggee ._ddf .ToPdfObject ());}else if _deed .A !=nil {_egcg .Set ("\u0041",_deed .A );};_egcg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_deed .Dest );_egcg .SetIfNotNil ("\u0048",_deed .H );
_egcg .SetIfNotNil ("\u0050\u0041",_deed .PA );_egcg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_deed .QuadPoints );_egcg .SetIfNotNil ("\u0042\u0053",_deed .BS );return _gffg ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_bebga *PdfPageResources )SetFontByName (keyName _be .PdfObjectName ,obj _be .PdfObject )error {if _bebga .Font ==nil {_bebga .Font =_be .MakeDict ();};_ebcgc ,_caeebc :=_be .TraceToDirectObject (_bebga .Font ).(*_be .PdfObjectDictionary );if !_caeebc {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_be .TraceToDirectObject (_bebga .Font ));
return _be .ErrTypeError ;};_ebcgc .Set (keyName ,obj );return nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_bbcf *_be .PdfIndirectObject ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_gefef :=&PdfShadingType3 {};_gefef .PdfShading =&PdfShading {};_gefef .PdfShading ._cgdab =_be .MakeIndirectObject (_be .MakeDict ());_gefef .PdfShading ._gabe =_gefef ;return _gefef ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_efbcg *PdfWriter )SetOpenAction (dest _be .PdfObject )error {if dest ==nil ||_be .IsNullObject (dest ){return nil ;};_efbcg ._agced .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _efbcg .addObjects (dest );};func _bdca (_febcc *_be .PdfObjectDictionary )(*PdfShadingType6 ,error ){_cafgd :=PdfShadingType6 {};
_dbea :=_febcc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dbea ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbddb ,_cdefcg :=_dbea .(*_be .PdfObjectInteger );if !_cdefcg {_caf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbea );
return nil ,_be .ErrTypeError ;};_cafgd .BitsPerCoordinate =_gbddb ;_dbea =_febcc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dbea ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gbddb ,_cdefcg =_dbea .(*_be .PdfObjectInteger );if !_cdefcg {_caf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dbea );
return nil ,_be .ErrTypeError ;};_cafgd .BitsPerComponent =_gbddb ;_dbea =_febcc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dbea ==nil {_caf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gbddb ,_cdefcg =_dbea .(*_be .PdfObjectInteger );if !_cdefcg {_caf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dbea );
return nil ,_be .ErrTypeError ;};_cafgd .BitsPerComponent =_gbddb ;_dbea =_febcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dbea ==nil {_caf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cgeag ,_cdefcg :=_dbea .(*_be .PdfObjectArray );if !_cdefcg {_caf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbea );
return nil ,_be .ErrTypeError ;};_cafgd .Decode =_cgeag ;if _aafbg :=_febcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_aafbg !=nil {_cafgd .Function =[]PdfFunction {};if _agdcd ,_edbgg :=_aafbg .(*_be .PdfObjectArray );_edbgg {for _ ,_gdaef :=range _agdcd .Elements (){_geeg ,_gebgc :=_fgbbbc (_gdaef );
if _gebgc !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gebgc );return nil ,_gebgc ;};_cafgd .Function =append (_cafgd .Function ,_geeg );
};}else {_dbecc ,_feea :=_fgbbbc (_aafbg );if _feea !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_feea );return nil ,_feea ;
};_cafgd .Function =append (_cafgd .Function ,_dbecc );};};return &_cafgd ,nil ;};func (_cdbf *PdfWriter )setHashIDs (_beeacb _g .Hash )error {_abfec :=_beeacb .Sum (nil );if _cdbf ._fgbbf ==""{_cdbf ._fgbbf =_ge .EncodeToString (_abfec [:8]);};_cdbf .setDocumentIDs (_cdbf ._fgbbf ,_ge .EncodeToString (_abfec [8:]));
return nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_gfccc int ,_feagf *PdfPage )error ;

// A returns the value of the A component of the color.
func (_fcf *PdfColorCalRGB )A ()float64 {return _fcf [0]};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bbeeg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_be .StreamEncoder ,error ){_cbbed ,_dfdba :=_bbeeg ._fceaa .(*_be .PdfObjectStream );if !_dfdba {_caf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbeeg ._fceaa );
return nil ,nil ,_be .ErrTypeError ;};_fcad ,_fbedd :=_be .DecodeStream (_cbbed );if _fbedd !=nil {_caf .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_fbedd );
return nil ,nil ,_fbedd ;};_bfag ,_fbedd :=_be .NewEncoderFromStream (_cbbed );if _fbedd !=nil {_caf .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fbedd );
return nil ,nil ,_fbedd ;};return _fcad ,_bfag ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_baaaa *PdfOutlineTreeNode )GetContainingPdfObject ()_be .PdfObject {return _baaaa .GetContext ().GetContainingPdfObject ();};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_bgfb OutlineDest )ToPdfObject ()_be .PdfObject {if (_bgfb .PageObj ==nil &&_bgfb .Page < 0)||_bgfb .Mode ==""{return _be .MakeNull ();};_ggaef :=_be .MakeArray ();if _bgfb .PageObj !=nil {_ggaef .Append (_bgfb .PageObj );}else {_ggaef .Append (_be .MakeInteger (_bgfb .Page ));
};_ggaef .Append (_be .MakeName (_bgfb .Mode ));switch _bgfb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_ggaef .Append (_be .MakeFloat (_bgfb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_ggaef .Append (_be .MakeFloat (_bgfb .X ));
case "\u0058\u0059\u005a":_ggaef .Append (_be .MakeFloat (_bgfb .X ));_ggaef .Append (_be .MakeFloat (_bgfb .Y ));_ggaef .Append (_be .MakeFloat (_bgfb .Zoom ));default:_ggaef .Set (1,_be .MakeName ("\u0046\u0069\u0074"));};return _ggaef ;};func _acbe (_afaec _be .PdfObject )(map[_ac .CharCode ]float64 ,error ){if _afaec ==nil {return nil ,nil ;
};_ecedf ,_ebffe :=_be .GetArray (_afaec );if !_ebffe {return nil ,nil ;};_egcgc :=map[_ac .CharCode ]float64 {};_eaagf :=_ecedf .Len ();for _ccce :=0;_ccce < _eaagf -1;_ccce ++{_efae :=_be .TraceToDirectObject (_ecedf .Get (_ccce ));_cgge ,_cadec :=_be .GetIntVal (_efae );
if !_cadec {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ccce ,_efae );};_ccce ++;if _ccce > _eaagf -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ecedf );
};_facge :=_be .TraceToDirectObject (_ecedf .Get (_ccce ));switch _facge .(type ){case *_be .PdfObjectArray :_aebf ,_ :=_be .GetArray (_facge );if _dedac ,_cbff :=_aebf .ToFloat64Array ();_cbff ==nil {for _fbcgb :=0;_fbcgb < len (_dedac );_fbcgb ++{_egcgc [_ac .CharCode (_cgge +_fbcgb )]=_dedac [_fbcgb ];
};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ccce ,_facge );};case *_be .PdfObjectInteger :_gbecg ,_dbfcg :=_be .GetIntVal (_facge );
if !_dbfcg {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ccce ,_facge );};_ccce ++;if _ccce > _eaagf -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ecedf );
};_bbcbb :=_ecedf .Get (_ccce );_gbac ,_adeg :=_be .GetNumberAsFloat (_bbcbb );if _adeg !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ccce ,_bbcbb );
};for _degfb :=_cgge ;_degfb <=_gbecg ;_degfb ++{_egcgc [_ac .CharCode (_degfb )]=_gbac ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ccce ,_facge );
};};return _egcgc ,nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_effb =producer };

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_bbeab *PdfPageResources )HasXObjectByName (keyName _be .PdfObjectName )bool {_cadba ,_ :=_bbeab .GetXObjectByName (keyName );return _cadba !=nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_be .PdfObjectArray ;TI *_be .PdfObjectInteger ;I *_be .PdfObjectArray ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_gdabg *PdfPageResources )SetColorspaceByName (keyName _be .PdfObjectName ,cs PdfColorspace )error {_ddgbdc ,_afbbf :=_gdabg .GetColorspaces ();if _afbbf !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_afbbf );
return _afbbf ;};if _ddgbdc ==nil {_ddgbdc =NewPdfPageResourcesColorspaces ();_gdabg .SetColorSpace (_ddgbdc );};_ddgbdc .Set (keyName ,cs );return nil ;};func _fafcg (_dagb *_be .PdfObjectDictionary )(*PdfShadingType4 ,error ){_decba :=PdfShadingType4 {};
_begf :=_dagb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _begf ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fdbce ,_acffda :=_begf .(*_be .PdfObjectInteger );if !_acffda {_caf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_begf );
return nil ,_be .ErrTypeError ;};_decba .BitsPerCoordinate =_fdbce ;_begf =_dagb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _begf ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fdbce ,_acffda =_begf .(*_be .PdfObjectInteger );if !_acffda {_caf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_begf );
return nil ,_be .ErrTypeError ;};_decba .BitsPerComponent =_fdbce ;_begf =_dagb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _begf ==nil {_caf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fdbce ,_acffda =_begf .(*_be .PdfObjectInteger );if !_acffda {_caf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_begf );
return nil ,_be .ErrTypeError ;};_decba .BitsPerComponent =_fdbce ;_begf =_dagb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _begf ==nil {_caf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bafdc ,_acffda :=_begf .(*_be .PdfObjectArray );if !_acffda {_caf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_begf );
return nil ,_be .ErrTypeError ;};_decba .Decode =_bafdc ;_begf =_dagb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _begf ==nil {_caf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_decba .Function =[]PdfFunction {};if _cegfb ,_cfbcd :=_begf .(*_be .PdfObjectArray );_cfbcd {for _ ,_fcafa :=range _cegfb .Elements (){_egbccg ,_agefe :=_fgbbbc (_fcafa );if _agefe !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agefe );
return nil ,_agefe ;};_decba .Function =append (_decba .Function ,_egbccg );};}else {_dddce ,_bbdgf :=_fgbbbc (_begf );if _bbdgf !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbdgf );
return nil ,_bbdgf ;};_decba .Function =append (_decba .Function ,_dddce );};return &_decba ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ga :=NewPdfAction ();_ffb :=&PdfActionGoToR {};_ffb .PdfAction =_ga ;_ga .SetContext (_ffb );return _ffb ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _be .PdfObject ;BS _be .PdfObject ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_fbcff *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fbcff ._geca ==nil {_fbcff .GetAnnotations ();};_fbcff ._geca =append (_fbcff ._geca ,annot );};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_fede *PdfReader )PageFromIndirectObject (ind *_be .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_fede .PageList )!=len (_fede ._cgbdb ){return nil ,0,_bdf .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _bege ,_cafg :=range _fede ._cgbdb {if _cafg ==ind {return _fede .PageList [_bege ],_bege +1,nil ;};};return nil ,0,_bdf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_fdbf *PdfReader )flattenFieldsWithOpts (_ddfd bool ,_bgdcf FieldAppearanceGenerator ,_eeffd *FieldFlattenOpts )error {if _eeffd ==nil {_eeffd =&FieldFlattenOpts {};
};var _cedgb bool ;_bcfg :=map[*PdfAnnotation ]bool {};{var _aacdgb []*PdfField ;_ggcba :=_fdbf .AcroForm ;if _ggcba !=nil {if _eeffd .FilterFunc !=nil {_aacdgb =_ggcba .filteredFields (_eeffd .FilterFunc ,true );_cedgb =_ggcba .Fields !=nil &&len (*_ggcba .Fields )> 0;
}else {_aacdgb =_ggcba .AllFields ();};};for _ ,_abfg :=range _aacdgb {for _ ,_cbcg :=range _abfg .Annotations {_bcfg [_cbcg .PdfAnnotation ]=_abfg .V !=nil ;if _bgdcf !=nil {_bbcb ,_adfd :=_bgdcf .GenerateAppearanceDict (_ggcba ,_abfg ,_cbcg );if _adfd !=nil {return _adfd ;
};_cbcg .AP =_bbcb ;};};};};if _ddfd {for _ ,_edfa :=range _fdbf .PageList {_ebbcb ,_dggb :=_edfa .GetAnnotations ();if _dggb !=nil {return _dggb ;};for _ ,_eddd :=range _ebbcb {_bcfg [_eddd ]=true ;};};};for _ ,_bccf :=range _fdbf .PageList {var _dgbcb []*PdfAnnotation ;
if _bgdcf !=nil {if _aabg :=_bgdcf .WrapContentStream (_bccf );_aabg !=nil {return _aabg ;};};_eebg ,_gaecf :=_bccf .GetAnnotations ();if _gaecf !=nil {return _gaecf ;};for _ ,_ebaef :=range _eebg {_gdbc ,_fbefd :=_bcfg [_ebaef ];if !_fbefd &&_eeffd .AnnotFilterFunc !=nil {if _ ,_bbee :=_ebaef .GetContext ().(*PdfAnnotationWidget );
!_bbee {_fbefd =_eeffd .AnnotFilterFunc (_ebaef );};};if !_fbefd {_dgbcb =append (_dgbcb ,_ebaef );continue ;};switch _ebaef .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_cfbgc ,_efbc ,_fegd :=_dgeb (_ebaef );if _fegd !=nil {if !_gdbc {_caf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_fegd );
continue ;};if _cfbgc ==nil {continue ;};_cadfb :=_bccf .Resources .GenerateXObjectName ();_bccf .Resources .SetXObjectFormByName (_cadfb ,_cfbgc );_dbcc ,_fegd :=_ebea (_cfbgc );if _fegd !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_fegd );
}else {_dace :=_ff .IdentityMatrix ();_dace =_dace .Translate (-_dbcc .Llx ,-_dbcc .Lly );_deeeg :=0.0;if _dbcc .Width ()> 0{_deeeg =_efbc .Width ()/_dbcc .Width ();};_cebg :=0.0;if _dbcc .Height ()> 0{_cebg =_efbc .Height ()/_dbcc .Height ();};_dace =_dace .Scale (_deeeg ,_cebg );
_efbc .Transform (_dace );};_edfda :=_eg .Min (_efbc .Llx ,_efbc .Urx );_gfbgg :=_eg .Min (_efbc .Lly ,_efbc .Ury );var _agea []string ;_agea =append (_agea ,"\u0071");_agea =append (_agea ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_edfda ,_gfbgg ));
_agea =append (_agea ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_cadfb .String ()));_agea =append (_agea ,"\u0051");_cfac :=_bb .Join (_agea ,"\u000a");_fegd =_bccf .AppendContentStream (_cfac );if _fegd !=nil {return _fegd ;};if _cfbgc .Resources !=nil {_eadd ,_dcdca :=_be .GetDict (_cfbgc .Resources .Font );
if _dcdca {for _ ,_ebdeb :=range _eadd .Keys (){if !_bccf .Resources .HasFontByName (_ebdeb ){_bccf .Resources .SetFontByName (_ebdeb ,_eadd .Get (_ebdeb ));};};};};};if len (_dgbcb )> 0{_bccf ._geca =_dgbcb ;}else {_bccf ._geca =[]*PdfAnnotation {};};
};if !_cedgb {_fdbf .AcroForm =nil ;};return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dcdbb *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_dcdbb .NumInputs {_caf .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_bdf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _dcdbb ._dbfge ==nil {_ffed :=_dcdbb .processSamples ();if _ffed !=nil {return nil ,_ffed ;};};_cddfac :=_dcdbb .Encode ;if _cddfac ==nil {_cddfac =[]float64 {};
for _gabgf :=0;_gabgf < len (_dcdbb .Size );_gabgf ++{_cddfac =append (_cddfac ,0);_cddfac =append (_cddfac ,float64 (_dcdbb .Size [_gabgf ]-1));};};_aagd :=_dcdbb .Decode ;if _aagd ==nil {_aagd =_dcdbb .Range ;};_faedg :=make ([]int ,len (x ));for _eddc :=0;
_eddc < len (x );_eddc ++{_febf :=x [_eddc ];_bgdd :=_eg .Min (_eg .Max (_febf ,_dcdbb .Domain [2*_eddc ]),_dcdbb .Domain [2*_eddc +1]);_bgcd :=_fg .LinearInterpolate (_bgdd ,_dcdbb .Domain [2*_eddc ],_dcdbb .Domain [2*_eddc +1],_cddfac [2*_eddc ],_cddfac [2*_eddc +1]);
_aabbc :=_eg .Min (_eg .Max (_bgcd ,0),float64 (_dcdbb .Size [_eddc ]-1));_eebbc :=int (_eg .Floor (_aabbc +0.5));if _eebbc < 0{_eebbc =0;}else if _eebbc > _dcdbb .Size [_eddc ]{_eebbc =_dcdbb .Size [_eddc ]-1;};_faedg [_eddc ]=_eebbc ;};_gbbad :=_faedg [0];
for _bgfa :=1;_bgfa < _dcdbb .NumInputs ;_bgfa ++{_acfd :=_faedg [_bgfa ];for _gbee :=0;_gbee < _bgfa ;_gbee ++{_acfd *=_dcdbb .Size [_gbee ];};_gbbad +=_acfd ;};_gbbad *=_dcdbb .NumOutputs ;var _cdbbcd []float64 ;for _caec :=0;_caec < _dcdbb .NumOutputs ;
_caec ++{_bfcb :=_gbbad +_caec ;if _bfcb >=len (_dcdbb ._dbfge ){_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_geeda :=_dcdbb ._dbfge [_bfcb ];_fddfd :=_fg .LinearInterpolate (float64 (_geeda ),0,_eg .Pow (2,float64 (_dcdbb .BitsPerSample )),_aagd [2*_caec ],_aagd [2*_caec +1]);_daga :=_eg .Min (_eg .Max (_fddfd ,_dcdbb .Range [2*_caec ]),_dcdbb .Range [2*_caec +1]);
_cdbbcd =append (_cdbbcd ,_daga );};return _cdbbcd ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_afc *PdfAnnotation )GetContext ()PdfModel {if _afc ==nil {return nil ;};return _afc ._ef ;};

// SetContext sets the sub action (context).
func (_aca *PdfAction )SetContext (ctx PdfModel ){_aca ._ddf =ctx };

// GetContainingPdfObject implements model.PdfModel interface.
func (_bcfba *PdfOutputIntent )GetContainingPdfObject ()_be .PdfObject {return _bcfba ._fgffa };func (_edeaf *PdfWriter )setCatalogVersion (){_edeaf ._agced .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_be .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_edeaf ._dagdf .Major ,_edeaf ._dagdf .Minor )));
};func _fgbbbc (_dafbc _be .PdfObject )(PdfFunction ,error ){_dafbc =_be .ResolveReference (_dafbc );if _bgcb ,_geea :=_dafbc .(*_be .PdfObjectStream );_geea {_edfecb :=_bgcb .PdfObjectDictionary ;_gead ,_aedaf :=_edfecb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_be .PdfObjectInteger );
if !_aedaf {_caf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_gead ==0{return _ceeeef (_bgcb );}else if *_gead ==4{return _ffbbe (_bgcb );}else {return nil ,_bdf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cccg ,_dcbed :=_dafbc .(*_be .PdfIndirectObject );
_dcbed {_bgfgc ,_dcdfc :=_cccg .PdfObject .(*_be .PdfObjectDictionary );if !_dcdfc {_caf .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_eabdb ,_dcdfc :=_bgfgc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_be .PdfObjectInteger );
if !_dcdfc {_caf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_eabdb ==2{return _gcgfg (_cccg );}else if *_eabdb ==3{return _eaade (_cccg );}else {return nil ,_bdf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _agcdg ,_gcbed :=_dafbc .(*_be .PdfObjectDictionary );
_gcbed {_edfaa ,_bbdfd :=_agcdg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_be .PdfObjectInteger );if !_bbdfd {_caf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_bdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_edfaa ==2{return _gcgfg (_agcdg );}else if *_edfaa ==3{return _eaade (_agcdg );
}else {return nil ,_bdf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_caf .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dafbc );
return nil ,_bdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// GetPageDict converts the Page to a PDF object dictionary.
func (_befed *PdfPage )GetPageDict ()*_be .PdfObjectDictionary {_fcgc :=_befed ._afccg ;_fcgc .Clear ();_fcgc .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0050\u0061\u0067\u0065"));_fcgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_befed .Parent );
if _befed .LastModified !=nil {_fcgc .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_befed .LastModified .ToPdfObject ());};if _befed .Resources !=nil {_fcgc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_befed .Resources .ToPdfObject ());
};if _befed .CropBox !=nil {_fcgc .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_befed .CropBox .ToPdfObject ());};if _befed .MediaBox !=nil {_fcgc .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_befed .MediaBox .ToPdfObject ());};if _befed .BleedBox !=nil {_fcgc .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_befed .BleedBox .ToPdfObject ());
};if _befed .TrimBox !=nil {_fcgc .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_befed .TrimBox .ToPdfObject ());};if _befed .ArtBox !=nil {_fcgc .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_befed .ArtBox .ToPdfObject ());};_fcgc .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_befed .BoxColorInfo );
_fcgc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_befed .Contents );if _befed .Rotate !=nil {_fcgc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_be .MakeInteger (*_befed .Rotate ));};_fcgc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_befed .Group );
_fcgc .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_befed .Thumb );_fcgc .SetIfNotNil ("\u0042",_befed .B );_fcgc .SetIfNotNil ("\u0044\u0075\u0072",_befed .Dur );_fcgc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_befed .Trans );_fcgc .SetIfNotNil ("\u0041\u0041",_befed .AA );
_fcgc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_befed .Metadata );_fcgc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_befed .PieceInfo );_fcgc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_befed .StructParents );
_fcgc .SetIfNotNil ("\u0049\u0044",_befed .ID );_fcgc .SetIfNotNil ("\u0050\u005a",_befed .PZ );_fcgc .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_befed .SeparationInfo );_fcgc .SetIfNotNil ("\u0054\u0061\u0062\u0073",_befed .Tabs );
_fcgc .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_befed .TemplateInstantiated );_fcgc .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_befed .PresSteps );_fcgc .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_befed .UserUnit );
_fcgc .SetIfNotNil ("\u0056\u0050",_befed .VP );if _befed ._geca !=nil {_agfgb :=_be .MakeArray ();for _ ,_fcaabf :=range _befed ._geca {if _abdaa :=_fcaabf .GetContext ();_abdaa !=nil {_agfgb .Append (_abdaa .ToPdfObject ());}else {_agfgb .Append (_fcaabf .ToPdfObject ());
};};if _agfgb .Len ()> 0{_fcgc .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_agfgb );};}else if _befed .Annots !=nil {_fcgc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_befed .Annots );};return _fcgc ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_age :=NewPdfAnnotation ();_cebf :=&PdfAnnotationLine {};_cebf .PdfAnnotation =_age ;_cebf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_age .SetContext (_cebf );return _cebf ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_beca *PdfFont )ToUnicode ()string {if _beca .baseFields ()._baag ==nil {return "";};return _beca .baseFields ()._baag .Name ();};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_ffgg PdfModel ;_fceaa _be .PdfObject ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ToPdfObject returns the PDF representation of the page resources.
func (_febfb *PdfPageResources )ToPdfObject ()_be .PdfObject {_bdfad :=_febfb ._aggc ;_bdfad .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_febfb .ExtGState );if _febfb ._dcfgb !=nil {_febfb .ColorSpace =_febfb ._dcfgb .ToPdfObject ();};
_bdfad .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_febfb .ColorSpace );_bdfad .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_febfb .Pattern );_bdfad .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_febfb .Shading );
_bdfad .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_febfb .XObject );_bdfad .SetIfNotNil ("\u0046\u006f\u006e\u0074",_febfb .Font );_bdfad .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_febfb .ProcSet );_bdfad .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_febfb .Properties );
return _bdfad ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// G returns the value of the green component of the color.
func (_ddac *PdfColorDeviceRGB )G ()float64 {return _ddac [1]};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_cfacd *PdfWriter )ApplyStandard (optimizer StandardApplier ){_cfacd ._ebcef =optimizer };

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_gddgd *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _gddgd ._gfafb .GetRevisionNumber ()==0{return nil ,_bdf .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _gbdeg ,_fdceg :=_gddgd ._efcac [_gddgd ];_fdceg {return _gbdeg ,nil ;};_acbcb ,_dacge :=_gddgd ._gfafb .GetPreviousRevisionReadSeeker ();if _dacge !=nil {return nil ,_dacge ;};_ebce ,_dacge :=_eagga (_acbcb ,_gddgd ._babc ,_gddgd ._cfaf ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _dacge !=nil {return nil ,_dacge ;};_gddgd ._bccfg [_gddgd ._gfafb .GetRevisionNumber ()-1]=_ebce ;_gddgd ._efcac [_gddgd ]=_ebce ;_ebce ._efcac =_gddgd ._efcac ;return _ebce ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_egbea FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_egbea .Mask ()&^fl .Mask ())};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _be .PdfObject ;NewWindow _be .PdfObject ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_efbd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_egbab ,_aeab :=color .(*PdfColorDeviceCMYK );if !_aeab {_caf .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggfe :=_egbab .C ();_fbbc :=_egbab .M ();_abbg :=_egbab .Y ();_fgfg :=_egbab .K ();_ggfe =_ggfe *(1-_fgfg )+_fgfg ;_fbbc =_fbbc *(1-_fgfg )+_fgfg ;
_abbg =_abbg *(1-_fgfg )+_fgfg ;_fdbdc :=1-_ggfe ;_cdab :=1-_fbbc ;_bcfa :=1-_abbg ;return NewPdfColorDeviceRGB (_fdbdc ,_cdab ,_bcfa ),nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ba .Time ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_cdfcb =modifiedDate ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// String returns a string representation of the field.
func (_gcbab *PdfField )String ()string {if _gfea ,_dbad :=_gcbab .ToPdfObject ().(*_be .PdfIndirectObject );_dbad {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gcbab ._dgcbe ,_gfea .PdfObject .String ());};return "";};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_fgaded *PdfReader )GetCatalogStructTreeRoot ()(_be .PdfObject ,bool ){if _fgaded ._dcdbf ==nil {return nil ,false ;};_faced :=_fgaded ._dcdbf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _faced ,_faced !=nil ;
};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_gcef *PdfPageResources )SetXObjectFormByName (keyName _be .PdfObjectName ,xform *XObjectForm )error {_aecac :=xform .ToPdfObject ().(*_be .PdfObjectStream );_aafad :=_gcef .SetXObjectByName (keyName ,_aecac );return _aafad ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_agccc *PdfPageResources )GetFontByName (keyName _be .PdfObjectName )(_be .PdfObject ,bool ){if _agccc .Font ==nil {return nil ,false ;};_ebafd ,_bffg :=_be .TraceToDirectObject (_agccc .Font ).(*_be .PdfObjectDictionary );if !_bffg {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_be .TraceToDirectObject (_agccc .Font ));
return nil ,false ;};if _bfbef :=_ebafd .Get (keyName );_bfbef !=nil {return _bfbef ,true ;};return nil ,false ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_aefce *PdfWriter )SetNamedDestinations (dests _be .PdfObject )error {if dests ==nil {return nil ;};_caf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_aefce ._agced .Set ("\u0044\u0065\u0073t\u0073",dests );return _aefce .addObjects (dests );};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_aeae *Image )ConvertToBinary ()error {if _aeae .ColorComponents ==1&&_aeae .BitsPerComponent ==1{return nil ;};_cedbea ,_cece :=_aeae .ToGoImage ();if _cece !=nil {return _cece ;};_faeg ,_cece :=_fg .MonochromeConverter .Convert (_cedbea );if _cece !=nil {return _cece ;
};_aeae .Data =_faeg .Base ().Data ;_aeae ._bbbgb ,_cece =_fg .ScaleAlphaToMonochrome (_aeae ._bbbgb ,int (_aeae .Width ),int (_aeae .Height ));if _cece !=nil {return _cece ;};_aeae .BitsPerComponent =1;_aeae .ColorComponents =1;_aeae ._ffedg =nil ;return nil ;
};func _efegf (_fggf *_be .PdfObjectDictionary )(*PdfShadingType3 ,error ){_gcdcba :=PdfShadingType3 {};_fdcde :=_fggf .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fdcde ==nil {_caf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ecgbc ,_addd :=_fdcde .(*_be .PdfObjectArray );if !_addd {_caf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdcde );
return nil ,_be .ErrTypeError ;};if _ecgbc .Len ()!=6{_caf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ecgbc .Len ());return nil ,ErrInvalidAttribute ;
};_gcdcba .Coords =_ecgbc ;if _eafbgf :=_fggf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eafbgf !=nil {_eafbgf =_be .TraceToDirectObject (_eafbgf );_eefgb ,_effda :=_eafbgf .(*_be .PdfObjectArray );if !_effda {_caf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eafbgf );
return nil ,_be .ErrTypeError ;};_gcdcba .Domain =_eefgb ;};_fdcde =_fggf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fdcde ==nil {_caf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gcdcba .Function =[]PdfFunction {};if _cdbbd ,_cfde :=_fdcde .(*_be .PdfObjectArray );_cfde {for _ ,_gfgag :=range _cdbbd .Elements (){_aaea ,_bgebb :=_fgbbbc (_gfgag );if _bgebb !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgebb );
return nil ,_bgebb ;};_gcdcba .Function =append (_gcdcba .Function ,_aaea );};}else {_egbfc ,_afcca :=_fgbbbc (_fdcde );if _afcca !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afcca );
return nil ,_afcca ;};_gcdcba .Function =append (_gcdcba .Function ,_egbfc );};if _cceda :=_fggf .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cceda !=nil {_cceda =_be .TraceToDirectObject (_cceda );_dcgca ,_deacaf :=_cceda .(*_be .PdfObjectArray );if !_deacaf {_caf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cceda );
return nil ,_be .ErrTypeError ;};if _dcgca .Len ()!=2{_caf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dcgca .Len ());return nil ,ErrInvalidAttribute ;
};_gcdcba .Extend =_dcgca ;};return &_gcdcba ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetNumComponents returns the number of color components (3 for Lab).
func (_dcge *PdfColorLab )GetNumComponents ()int {return 3};func (_acgabg *PdfWriter )getPdfVersion ()string {return _c .Sprintf ("\u0025\u0064\u002e%\u0064",_acgabg ._dagdf .Major ,_acgabg ._dagdf .Minor );};func _feddb (_cbabc []byte )(_dgagc ,_ccfa string ,_cedab error ){_caf .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cbabc ));
_gadge :=_fgbbb .FindIndex (_cbabc );if _gadge ==nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_be .ErrTypeError ;};_efag :=_gadge [1];_aaecd :=_bb .Index (string (_cbabc [_efag :]),_cbgb );if _aaecd < 0{_dgagc =string (_cbabc [_efag :]);return _dgagc ,"",nil ;};_egdb :=_efag +_aaecd ;_dgagc =string (_cbabc [_efag :_egdb ]);_fddad :=_egdb ;
_aaecd =_bb .Index (string (_cbabc [_fddad :]),_facd );if _aaecd < 0{_caf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cedab );
return "","",_be .ErrTypeError ;};_aecd :=_fddad +_aaecd ;_ccfa =string (_cbabc [_fddad :_aecd ]);return _dgagc ,_ccfa ,nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_be .PdfObjectStream )(*XObjectImage ,error ){_dffdb :=&XObjectImage {};_dffdb ._fcaaa =stream ;_cgfc :=*(stream .PdfObjectDictionary );_efdcg ,_fbac :=_be .NewEncoderFromStream (stream );if _fbac !=nil {return nil ,_fbac ;
};_dffdb .Filter =_efdcg ;if _fgdfa :=_be .TraceToDirectObject (_cgfc .Get ("\u0057\u0069\u0064t\u0068"));_fgdfa !=nil {_dcdbbf ,_acdga :=_fgdfa .(*_be .PdfObjectInteger );if !_acdga {return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_efbaa :=int64 (*_dcdbbf );_dffdb .Width =&_efbaa ;}else {return nil ,_bdf .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ggaae :=_be .TraceToDirectObject (_cgfc .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_ggaae !=nil {_gecfa ,_eedbg :=_ggaae .(*_be .PdfObjectInteger );if !_eedbg {return nil ,_bdf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_acbeg :=int64 (*_gecfa );
_dffdb .Height =&_acbeg ;}else {return nil ,_bdf .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _ddcb :=_be .TraceToDirectObject (_cgfc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_ddcb !=nil {_fbbag ,_dafd :=NewPdfColorspaceFromPdfObject (_ddcb );if _dafd !=nil {return nil ,_dafd ;};_dffdb .ColorSpace =_fbbag ;}else {_caf .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_dffdb .ColorSpace =NewPdfColorspaceDeviceGray ();};if _bffaa :=_be .TraceToDirectObject (_cgfc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_bffaa !=nil {_aadbf ,_ggafd :=_bffaa .(*_be .PdfObjectInteger );
if !_ggafd {return nil ,_bdf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cdcgc :=int64 (*_aadbf );_dffdb .BitsPerComponent =&_cdcgc ;};_dffdb .Intent =_cgfc .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_dffdb .ImageMask =_cgfc .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dffdb .Mask =_cgfc .Get ("\u004d\u0061\u0073\u006b");_dffdb .Decode =_cgfc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dffdb .Interpolate =_cgfc .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_dffdb .Alternatives =_cgfc .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dffdb .SMask =_cgfc .Get ("\u0053\u004d\u0061s\u006b");_dffdb .SMaskInData =_cgfc .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_dffdb .Matte =_cgfc .Get ("\u004d\u0061\u0074t\u0065");_dffdb .Name =_cgfc .Get ("\u004e\u0061\u006d\u0065");_dffdb .StructParent =_cgfc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dffdb .ID =_cgfc .Get ("\u0049\u0044");
_dffdb .OPI =_cgfc .Get ("\u004f\u0050\u0049");_dffdb .Metadata =_cgfc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dffdb .OC =_cgfc .Get ("\u004f\u0043");_dffdb .Stream =stream .Stream ;return _dffdb ,nil ;};

// GetNumComponents returns the number of color components.
func (_badbf *PdfColorspaceICCBased )GetNumComponents ()int {return _badbf .N };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _be .PdfObject ;Name _be .PdfObject ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_agdbb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _bcdcd (_gadae *_be .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bgce :=PdfShadingType1 {};if _cbcf :=_gadae .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_cbcf !=nil {_cbcf =_be .TraceToDirectObject (_cbcf );_gagcf ,_fbfcd :=_cbcf .(*_be .PdfObjectArray );if !_fbfcd {_caf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbcf );
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgce .Domain =_gagcf ;};if _eaadbc :=_gadae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eaadbc !=nil {_eaadbc =_be .TraceToDirectObject (_eaadbc );
_ccege ,_gfbgd :=_eaadbc .(*_be .PdfObjectArray );if !_gfbgd {_caf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaadbc );return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bgce .Matrix =_ccege ;};_cffbg :=_gadae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cffbg ==nil {_caf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bgce .Function =[]PdfFunction {};if _afcdg ,_dgba :=_cffbg .(*_be .PdfObjectArray );_dgba {for _ ,_deddb :=range _afcdg .Elements (){_egcdee ,_ddcd :=_fgbbbc (_deddb );if _ddcd !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddcd );
return nil ,_ddcd ;};_bgce .Function =append (_bgce .Function ,_egcdee );};}else {_bccdd ,_ebfeg :=_fgbbbc (_cffbg );if _ebfeg !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebfeg );
return nil ,_ebfeg ;};_bgce .Function =append (_bgce .Function ,_bccdd );};return &_bgce ,nil ;};func (_ceccg *PdfWriter )writeBytes (_fdfcb []byte ){if _ceccg ._dfffe !=nil {return ;};_bbfc ,_gcfda :=_ceccg ._ddfgf .Write (_fdfcb );_ceccg ._cdaga +=int64 (_bbfc );
_ceccg ._dfffe =_gcfda ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gbaa *PdfColorspaceSpecialIndexed )ToPdfObject ()_be .PdfObject {_bbce :=_be .MakeArray (_be .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_bbce .Append (_gbaa .Base .ToPdfObject ());_bbce .Append (_be .MakeInteger (int64 (_gbaa .HiVal )));
_bbce .Append (_gbaa .Lookup );if _gbaa ._dgagg !=nil {_gbaa ._dgagg .PdfObject =_bbce ;return _gbaa ._dgagg ;};return _bbce ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_ggegd *PdfFieldChoice )ToPdfObject ()_be .PdfObject {_ggegd .PdfField .ToPdfObject ();_dagc :=_ggegd ._ffcf ;_baaa :=_dagc .PdfObject .(*_be .PdfObjectDictionary );_baaa .Set ("\u0046\u0054",_be .MakeName ("\u0043\u0068"));if _ggegd .Opt !=nil {_baaa .Set ("\u004f\u0070\u0074",_ggegd .Opt );
};if _ggegd .TI !=nil {_baaa .Set ("\u0054\u0049",_ggegd .TI );};if _ggegd .I !=nil {_baaa .Set ("\u0049",_ggegd .I );};return _dagc ;};

// SetForms sets the Acroform for a PDF file.
func (_fecac *PdfWriter )SetForms (form *PdfAcroForm )error {_fecac ._ggfa =form ;return nil };

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_febed *PdfPage )GetContainingPdfObject ()_be .PdfObject {return _febed ._bcadgc };

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_gdbcg *_be .PdfIndirectObject ;};func (_fdce *PdfReader )newPdfAnnotationTrapNetFromDict (_defb *_be .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_aege :=PdfAnnotationTrapNet {};
return &_aege ,nil ;};func _feae (_acbgg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_acbgg }};func (_aag *PdfReader )newPdfAnnotation3DFromDict (_ebde *_be .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fbgg :=PdfAnnotation3D {};
_fbgg .T3DD =_ebde .Get ("\u0033\u0044\u0044");_fbgg .T3DV =_ebde .Get ("\u0033\u0044\u0056");_fbgg .T3DA =_ebde .Get ("\u0033\u0044\u0041");_fbgg .T3DI =_ebde .Get ("\u0033\u0044\u0049");_fbgg .T3DB =_ebde .Get ("\u0033\u0044\u0042");return &_fbgg ,nil ;
};func _fagee (_egbd *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_egbd }};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cda :=NewPdfAnnotation ();_gggd :=&PdfAnnotationTrapNet {};_gggd .PdfAnnotation =_cda ;_cda .SetContext (_gggd );return _gggd ;};func (_bdge *PdfFont )baseFields ()*fontCommon {if _bdge ._egbcf ==nil {_caf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _bdge ._egbcf .baseFields ();};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_be .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_faab *_be .PdfIndirectObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_eefd :=&PdfOutline {_gdbcg :_be .MakeIndirectObject (_be .MakeDict ())};_eefd ._fgfd =_eefd ;return _eefd ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_fedde *PdfOutputIntent )ParsePdfObject (object _be .PdfObject )error {_gecc ,_caggg :=_be .GetDict (object );if !_caggg {_caf .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _bdf .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_fedde ._fgffa =_gecc ;_fedde .Type ,_ =_gecc .GetString ("\u0054\u0079\u0070\u0065");_bcebb ,_caggg :=_gecc .GetString ("\u0053");if _caggg {switch _bcebb {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_fedde .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_fedde .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_fedde .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_fedde .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_fedde .S =PdfOutputIntentTypeX ;
};};_fedde .OutputCondition ,_ =_gecc .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_fedde .OutputConditionIdentifier ,_ =_gecc .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_fedde .RegistryName ,_ =_gecc .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_fedde .Info ,_ =_gecc .GetString ("\u0049\u006e\u0066\u006f");if _bcccc ,_gagbfb :=_be .GetStream (_gecc .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_gagbfb {_fedde .ColorComponents ,_ =_be .GetIntVal (_bcccc .Get ("\u004e"));_dfba ,_bccaa :=_be .DecodeStream (_bcccc );if _bccaa !=nil {return _bccaa ;};_fedde .DestOutputProfile =_dfba ;};return nil ;};

// WriteString outputs the object as it is to be written to file.
func (_bgccd *PdfTransformParamsDocMDP )WriteString ()string {return _bgccd .ToPdfObject ().WriteString ();};func _cedff (_bceeb _be .PdfObject )[]*_be .PdfObjectStream {if _bceeb ==nil {return nil ;};_afdbe ,_fcgef :=_be .GetArray (_bceeb );if !_fcgef ||_afdbe .Len ()==0{return nil ;
};_bcfdd :=make ([]*_be .PdfObjectStream ,0,_afdbe .Len ());for _ ,_agbb :=range _afdbe .Elements (){if _ecgad ,_gbagd :=_be .GetStream (_agbb );_gbagd {_bcfdd =append (_bcfdd ,_ecgad );};};return _bcfdd ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _dga .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _dcccg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _eagga (rs ,opts ,true ,_dcccg );
};func _cgdf (_cdbb *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_cdbb }};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gaad *PdfAppender )UpdateObject (obj _be .PdfObject ){_gaad .replaceObject (obj ,obj );if _ ,_cced :=_gaad ._ccaa [obj ];!_cced {_gaad ._bfgf =append (_gaad ._bfgf ,obj );_gaad ._ccaa [obj ]=struct{}{};};};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _be .PdfObject ;RichMediaContent _be .PdfObject ;};var (CourierName =_ecg .CourierName ;CourierBoldName =_ecg .CourierBoldName ;CourierObliqueName =_ecg .CourierObliqueName ;CourierBoldObliqueName =_ecg .CourierBoldObliqueName ;
HelveticaName =_ecg .HelveticaName ;HelveticaBoldName =_ecg .HelveticaBoldName ;HelveticaObliqueName =_ecg .HelveticaObliqueName ;HelveticaBoldObliqueName =_ecg .HelveticaBoldObliqueName ;SymbolName =_ecg .SymbolName ;ZapfDingbatsName =_ecg .ZapfDingbatsName ;
TimesRomanName =_ecg .TimesRomanName ;TimesBoldName =_ecg .TimesBoldName ;TimesItalicName =_ecg .TimesItalicName ;TimesBoldItalicName =_ecg .TimesBoldItalicName ;);func (_ecc *PdfReader )newPdfAnnotationFreeTextFromDict (_fbd *_be .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_eacc :=PdfAnnotationFreeText {};
_ega ,_gfbef :=_ecc .newPdfAnnotationMarkupFromDict (_fbd );if _gfbef !=nil {return nil ,_gfbef ;};_eacc .PdfAnnotationMarkup =_ega ;_eacc .DA =_fbd .Get ("\u0044\u0041");_eacc .Q =_fbd .Get ("\u0051");_eacc .RC =_fbd .Get ("\u0052\u0043");_eacc .DS =_fbd .Get ("\u0044\u0053");
_eacc .CL =_fbd .Get ("\u0043\u004c");_eacc .IT =_fbd .Get ("\u0049\u0054");_eacc .BE =_fbd .Get ("\u0042\u0045");_eacc .RD =_fbd .Get ("\u0052\u0044");_eacc .BS =_fbd .Get ("\u0042\u0053");_eacc .LE =_fbd .Get ("\u004c\u0045");return &_eacc ,nil ;};func (_fbged PdfFont )actualFont ()pdfFont {if _fbged ._egbcf ==nil {_caf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fbged );
};return _fbged ._egbcf ;};var _ecddb =_e .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_cagga *LTV )validateSig (_ffbg *PdfSignature )error {if _ffbg ==nil ||_ffbg .Contents ==nil ||len (_ffbg .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_ffbg );
};return nil ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _be .PdfObject )(*PdfOutputIntent ,error ){_dgebe :=&PdfOutputIntent {};if _fddaa :=_dgebe .ParsePdfObject (object );_fddaa !=nil {return nil ,_fddaa ;};return _dgebe ,nil ;};func _egcc (_ccaee *_be .PdfObjectDictionary ,_eceg *fontCommon ,_cgafg _ac .TextEncoder )(*pdfFontSimple ,error ){_febg :=_cgdf (_eceg );
_febg ._fcege =_cgafg ;if _cgafg ==nil {_gfbad :=_ccaee .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _gfbad ==nil {_gfbad =_be .MakeInteger (0);};_febg .FirstChar =_gfbad ;_cefca ,_accf :=_be .GetIntVal (_gfbad );if !_accf {_caf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gfbad );
return nil ,_be .ErrTypeError ;};_dfbfc :=_ac .CharCode (_cefca );_gfbad =_ccaee .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gfbad ==nil {_gfbad =_be .MakeInteger (255);};_febg .LastChar =_gfbad ;_cefca ,_accf =_be .GetIntVal (_gfbad );
if !_accf {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gfbad );return nil ,_be .ErrTypeError ;
};_egaag :=_ac .CharCode (_cefca );_febg ._gcdgc =make (map[_ac .CharCode ]float64 );_gfbad =_ccaee .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gfbad !=nil {_febg .Widths =_gfbad ;_bfacb ,_bbad :=_be .GetArray (_gfbad );if !_bbad {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gfbad );
return nil ,_be .ErrTypeError ;};_aade ,_acgab :=_bfacb .ToFloat64Array ();if _acgab !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_acgab ;};if len (_aade )!=int (_egaag -_dfbfc +1){_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_egaag -_dfbfc +1,len (_aade ));
return nil ,_be .ErrRangeError ;};for _fecfd ,_geggg :=range _aade {_febg ._gcdgc [_dfbfc +_ac .CharCode (_fecfd )]=_geggg ;};};};_febg .Encoding =_be .TraceToDirectObject (_ccaee .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _febg ,nil ;
};func (_dfce *PdfReader )newPdfPageFromDict (_defbad *_be .PdfObjectDictionary )(*PdfPage ,error ){_cggfe :=NewPdfPage ();_cggfe ._afccg =_defbad ;_cggfe ._fdaaa =*_defbad ;_gdfdd :=*_defbad ;_aadfc ,_fbdeg :=_gdfdd .Get ("\u0054\u0079\u0070\u0065").(*_be .PdfObjectName );
if !_fbdeg {return nil ,_bdf .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_aadfc !="\u0050\u0061\u0067\u0065"{return nil ,_bdf .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _cggfg :=_gdfdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cggfg !=nil {_cggfe .Parent =_cggfg ;};if _fcdfa :=_gdfdd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fcdfa !=nil {_dade ,_eadcc :=_be .GetString (_fcdfa );
if !_eadcc {return nil ,_bdf .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_eeceg ,_eacae :=NewPdfDate (_dade .Str ());if _eacae !=nil {return nil ,_eacae ;};_cggfe .LastModified =&_eeceg ;};if _fcdbd :=_gdfdd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fcdbd !=nil &&!_be .IsNullObject (_fcdbd ){_afbff ,_addaa :=_be .GetDict (_fcdbd );
if !_addaa {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fcdbd );};var _decga error ;_cggfe .Resources ,_decga =NewPdfPageResourcesFromDict (_afbff );
if _decga !=nil {return nil ,_decga ;};}else {_fccdg ,_cbbbe :=_cggfe .getParentResources ();if _cbbbe !=nil {return nil ,_cbbbe ;};if _fccdg ==nil {_fccdg =NewPdfPageResources ();};_cggfe .Resources =_fccdg ;};if _ggagg :=_gdfdd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_ggagg !=nil {_fggea ,_egcd :=_be .GetArray (_ggagg );if !_egcd {return nil ,_bdf .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gbbac error ;
_cggfe .MediaBox ,_gbbac =NewPdfRectangle (*_fggea );if _gbbac !=nil {return nil ,_gbbac ;};};if _cbbcg :=_gdfdd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_cbbcg !=nil {_abca ,_becd :=_be .GetArray (_cbbcg );if !_becd {return nil ,_bdf .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _affa error ;_cggfe .CropBox ,_affa =NewPdfRectangle (*_abca );if _affa !=nil {return nil ,_affa ;};};if _gdgd :=_gdfdd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_gdgd !=nil {_bgcba ,_gaebe :=_be .GetArray (_gdgd );if !_gaebe {return nil ,_bdf .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _dgffea error ;_cggfe .BleedBox ,_dgffea =NewPdfRectangle (*_bgcba );if _dgffea !=nil {return nil ,_dgffea ;};};if _eaef :=_gdfdd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_eaef !=nil {_befbf ,_caeef :=_be .GetArray (_eaef );if !_caeef {return nil ,_bdf .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ggcbg error ;_cggfe .TrimBox ,_ggcbg =NewPdfRectangle (*_befbf );if _ggcbg !=nil {return nil ,_ggcbg ;};};if _dabc :=_gdfdd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dabc !=nil {_aggg ,_deeb :=_be .GetArray (_dabc );if !_deeb {return nil ,_bdf .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _eaefd error ;_cggfe .ArtBox ,_eaefd =NewPdfRectangle (*_aggg );if _eaefd !=nil {return nil ,_eaefd ;};};if _edecd :=_gdfdd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_edecd !=nil {_cggfe .BoxColorInfo =_edecd ;};
if _bafc :=_gdfdd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bafc !=nil {_cggfe .Contents =_bafc ;};if _eecedd :=_gdfdd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_eecedd !=nil {_ggac ,_gcee :=_be .GetNumberAsInt64 (_eecedd );if _gcee !=nil {return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cggfe .Rotate =&_ggac ;};if _fafbe :=_gdfdd .Get ("\u0047\u0072\u006fu\u0070");_fafbe !=nil {_cggfe .Group =_fafbe ;};if _eccb :=_gdfdd .Get ("\u0054\u0068\u0075m\u0062");_eccb !=nil {_cggfe .Thumb =_eccb ;};if _dgad :=_gdfdd .Get ("\u0042");_dgad !=nil {_cggfe .B =_dgad ;
};if _bfcd :=_gdfdd .Get ("\u0044\u0075\u0072");_bfcd !=nil {_cggfe .Dur =_bfcd ;};if _bgcbc :=_gdfdd .Get ("\u0054\u0072\u0061n\u0073");_bgcbc !=nil {_cggfe .Trans =_bgcbc ;};if _dcgf :=_gdfdd .Get ("\u0041\u0041");_dcgf !=nil {_cggfe .AA =_dcgf ;};if _bdce :=_gdfdd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_bdce !=nil {_cggfe .Metadata =_bdce ;};if _dcbgb :=_gdfdd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dcbgb !=nil {_cggfe .PieceInfo =_dcbgb ;};if _gddcc :=_gdfdd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_gddcc !=nil {_cggfe .StructParents =_gddcc ;};if _cccc :=_gdfdd .Get ("\u0049\u0044");_cccc !=nil {_cggfe .ID =_cccc ;};if _abeeac :=_gdfdd .Get ("\u0050\u005a");_abeeac !=nil {_cggfe .PZ =_abeeac ;};if _eaadb :=_gdfdd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_eaadb !=nil {_cggfe .SeparationInfo =_eaadb ;};if _aafb :=_gdfdd .Get ("\u0054\u0061\u0062\u0073");_aafb !=nil {_cggfe .Tabs =_aafb ;};if _dabcb :=_gdfdd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_dabcb !=nil {_cggfe .TemplateInstantiated =_dabcb ;};if _dabfg :=_gdfdd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_dabfg !=nil {_cggfe .PresSteps =_dabfg ;};if _bbcc :=_gdfdd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_bbcc !=nil {_cggfe .UserUnit =_bbcc ;
};if _ccgfg :=_gdfdd .Get ("\u0056\u0050");_ccgfg !=nil {_cggfe .VP =_ccgfg ;};if _abdc :=_gdfdd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_abdc !=nil {_cggfe .Annots =_abdc ;};_cggfe ._ffge =_dfce ;return _cggfe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcdc *PdfAnnotationSquiggly )ToPdfObject ()_be .PdfObject {_gcdc .PdfAnnotation .ToPdfObject ();_dgae :=_gcdc ._dbf ;_deba :=_dgae .PdfObject .(*_be .PdfObjectDictionary );_gcdc .PdfAnnotationMarkup .appendToPdfDictionary (_deba );_deba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_deba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcdc .QuadPoints );return _dgae ;};func (_bacec *PdfWriter )checkCrossReferenceStream ()bool {_gadeg :=_bacec ._dagdf .Major > 1||(_bacec ._dagdf .Major ==1&&_bacec ._dagdf .Minor > 4);
if _bacec ._fcfed !=nil {_gadeg =*_bacec ._fcfed ;};return _gadeg ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fceg *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_be .PdfObjectStream )(*XObjectForm ,error ){_gbebe :=&XObjectForm {};_gbebe ._fefdg =stream ;_efgec :=*(stream .PdfObjectDictionary );_dgfcf ,_fdbg :=_be .NewEncoderFromStream (stream );if _fdbg !=nil {return nil ,_fdbg ;
};_gbebe .Filter =_dgfcf ;if _abdba :=_efgec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_abdba !=nil {_bfedg ,_bcgfc :=_abdba .(*_be .PdfObjectName );if !_bcgfc {return nil ,_bdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_bfedg !="\u0046\u006f\u0072\u006d"{_caf .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_bdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _cebaf :=_efgec .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_cebaf !=nil {_gbebe .FormType =_cebaf ;};if _bbfef :=_efgec .Get ("\u0042\u0042\u006f\u0078");_bbfef !=nil {_gbebe .BBox =_bbfef ;};if _gdebg :=_efgec .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_gdebg !=nil {_gbebe .Matrix =_gdebg ;};if _gdeg :=_efgec .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdeg !=nil {_gdeg =_be .TraceToDirectObject (_gdeg );_ddcdd ,_gbceb :=_gdeg .(*_be .PdfObjectDictionary );if !_gbceb {_caf .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_be .ErrTypeError ;};_cgba ,_egcgdf :=NewPdfPageResourcesFromDict (_ddcdd );if _egcgdf !=nil {_caf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_egcgdf ;};_gbebe .Resources =_cgba ;_caf .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gbebe .Resources );};_gbebe .Group =_efgec .Get ("\u0047\u0072\u006fu\u0070");
_gbebe .Ref =_efgec .Get ("\u0052\u0065\u0066");_gbebe .MetaData =_efgec .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gbebe .PieceInfo =_efgec .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gbebe .LastModified =_efgec .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_gbebe .StructParent =_efgec .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gbebe .StructParents =_efgec .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gbebe .OPI =_efgec .Get ("\u004f\u0050\u0049");
_gbebe .OC =_efgec .Get ("\u004f\u0043");_gbebe .Name =_efgec .Get ("\u004e\u0061\u006d\u0065");_gbebe .Stream =stream .Stream ;return _gbebe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggcc *PdfAnnotationStamp )ToPdfObject ()_be .PdfObject {_ggcc .PdfAnnotation .ToPdfObject ();_eaec :=_ggcc ._dbf ;_cdc :=_eaec .PdfObject .(*_be .PdfObjectDictionary );_ggcc .PdfAnnotationMarkup .appendToPdfDictionary (_cdc );_cdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0053\u0074\u0061m\u0070"));
_cdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggcc .Name );return _eaec ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_bacgf *PdfReader )GetTrailer ()(*_be .PdfObjectDictionary ,error ){_dcae :=_bacgf ._gfafb .GetTrailer ();if _dcae ==nil {return nil ,_bdf .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _dcae ,nil ;
};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_fgffa :_be .MakeDict (),ColorComponents :colorComponents };
};

// SetContext set the sub annotation (context).
func (_bbbff *PdfShading )SetContext (ctx PdfModel ){_bbbff ._gabe =ctx };

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_bgaba *PdfPageResources )GetColorspaceByName (keyName _be .PdfObjectName )(PdfColorspace ,bool ){_fbfg ,_cgaff :=_bgaba .GetColorspaces ();if _cgaff !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cgaff );
return nil ,false ;};if _fbfg ==nil {return nil ,false ;};_bdacg ,_abdfb :=_fbfg .Colorspaces [string (keyName )];if !_abdfb {return nil ,false ;};return _bdacg ,true ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_efac *PdfFieldButton )IsPush ()bool {return _efac .GetType ()==ButtonTypePush };

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_eagfd :=&XObjectForm {};_gcgaa :=&_be .PdfObjectStream {};_gcgaa .PdfObjectDictionary =_be .MakeDict ();_eagfd ._fefdg =_gcgaa ;return _eagfd ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_babab *_be .PdfIndirectObject ;_cdcg *_be .PdfIndirectObject ;_adabee map[_be .PdfObject ]struct{};_gadag []_be .PdfObject ;_agafe map[_be .PdfObject ]struct{};_fbagda []*_be .PdfIndirectObject ;_gbagdg *PdfOutlineTreeNode ;_agced *_be .PdfObjectDictionary ;
_dceac []_be .PdfObject ;_ceece *_be .PdfIndirectObject ;_ddfgf *_ca .Writer ;_cdaga int64 ;_dfffe error ;_bbdaa *_be .PdfCrypt ;_gabf *_be .PdfObjectDictionary ;_gcabc *_be .PdfIndirectObject ;_acgaca *_be .PdfObjectArray ;_dagdf _be .Version ;_fcfed *bool ;
_dfcce map[_be .PdfObject ][]*_be .PdfObjectDictionary ;_ggfa *PdfAcroForm ;_cbffc Optimizer ;_ebcef StandardApplier ;_bcgf map[int ]crossReference ;_cegd int64 ;ObjNumOffset int ;_fdgcf bool ;_fdcfe _be .XrefTable ;_gdaag int64 ;_aagbf int64 ;_gcdda map[_be .PdfObject ]int64 ;
_cgcad map[_be .PdfObject ]struct{};_degfd string ;_gece []*PdfOutputIntent ;_ebdb bool ;_fgbbf ,_abcda string ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ddaf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _beecbb ,_bbcdf :=range _ddaf ._bbbgb {_ddaf ._bbbgb [_beecbb ]=mapFunc (_bbcdf );};};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_bdcgc :=Permissions {};_bdcgc .DocMDP =docMdp ;_dfaga :=_be .MakeDict ();_dfaga .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_bdcgc ._cfged =_dfaga ;return &_bdcgc ;};func (_dggge *PdfReader )resolveReference (_dbbee *_be .PdfObjectReference )(_be .PdfObject ,bool ,error ){_afbgd ,_gfbff :=_dggge ._gfafb .ObjCache [int (_dbbee .ObjectNumber )];
if !_gfbff {_caf .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_dbbee );_bcgdb ,_cfbca :=_dggge ._gfafb .LookupByReference (*_dbbee );if _cfbca !=nil {return nil ,false ,_cfbca ;};_dggge ._gfafb .ObjCache [int (_dbbee .ObjectNumber )]=_bcgdb ;
return _bcgdb ,false ,nil ;};return _afbgd ,true ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_caaf *PdfAnnotationPolygon )ToPdfObject ()_be .PdfObject {_caaf .PdfAnnotation .ToPdfObject ();_fadc :=_caaf ._dbf ;_ggef :=_fadc .PdfObject .(*_be .PdfObjectDictionary );_caaf .PdfAnnotationMarkup .appendToPdfDictionary (_ggef );_ggef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_ggef .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_caaf .Vertices );_ggef .SetIfNotNil ("\u004c\u0045",_caaf .LE );_ggef .SetIfNotNil ("\u0042\u0053",_caaf .BS );_ggef .SetIfNotNil ("\u0049\u0043",_caaf .IC );_ggef .SetIfNotNil ("\u0042\u0045",_caaf .BE );
_ggef .SetIfNotNil ("\u0049\u0054",_caaf .IT );_ggef .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_caaf .Measure );return _fadc ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ddeeaa *_be .PdfIndirectObject ;};func (_faabf *DSS )addCerts (_dbegf [][]byte )([]*_be .PdfObjectStream ,error ){return _faabf .add (&_faabf .Certs ,_faabf ._cgbce ,_dbegf );
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_aab :=NewPdfAction ();_aaa :=&PdfActionMovie {};_aaa .PdfAction =_aab ;_aab .SetContext (_aaa );return _aaa ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_aaag *PdfWriter )SetCatalogMetadata (meta _be .PdfObject )error {if meta ==nil {_aaag ._agced .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_gbffe ,_ccddd :=_be .GetStream (meta );if !_ccddd {return _bdf .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_aaag .addObject (_gbffe );_aaag ._agced .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gbffe );return nil ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gfafb *_be .PdfParser ;_fdcd _be .PdfObject ;_fbgef *_be .PdfIndirectObject ;_cbbgcb *_be .PdfObjectDictionary ;_cgbdb []*_be .PdfIndirectObject ;PageList []*PdfPage ;_ddfbe int ;_dcdbf *_be .PdfObjectDictionary ;_dddeg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fgbcb *Permissions ;_efcac map[*PdfReader ]*PdfReader ;_bccfg []*PdfReader ;_cfgbc *modelManager ;_eaff bool ;_afddg map[_be .PdfObject ]struct{};_dbaba _dga .ReadSeeker ;_adfef string ;_caega bool ;_babc *ReaderOpts ;
_cfaf bool ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_be .PdfObjectInteger ;BitsPerComponent *_be .PdfObjectInteger ;BitsPerFlag *_be .PdfObjectInteger ;Decode *_be .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gbc :=NewPdfAnnotation ();_bdad :=&PdfAnnotationStrikeOut {};_bdad .PdfAnnotation =_gbc ;_bdad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbc .SetContext (_bdad );return _bdad ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dbce *PdfFieldText )ToPdfObject ()_be .PdfObject {_dbce .PdfField .ToPdfObject ();_ddefa :=_dbce ._ffcf ;_afcb :=_ddefa .PdfObject .(*_be .PdfObjectDictionary );_afcb .Set ("\u0046\u0054",_be .MakeName ("\u0054\u0078"));if _dbce .DA !=nil {_afcb .Set ("\u0044\u0041",_dbce .DA );
};if _dbce .Q !=nil {_afcb .Set ("\u0051",_dbce .Q );};if _dbce .DS !=nil {_afcb .Set ("\u0044\u0053",_dbce .DS );};if _dbce .RV !=nil {_afcb .Set ("\u0052\u0056",_dbce .RV );};if _dbce .MaxLen !=nil {_afcb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dbce .MaxLen );
};return _ddefa ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gbad *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeab :=vals [0];if _eeab < 0.0||_eeab > 100.0{_caf .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_eeab );
return nil ,ErrColorOutOfRange ;};_fece :=vals [1];_dbfb :=float64 (-100);_feag :=float64 (100);if len (_gbad .Range )> 1{_dbfb =_gbad .Range [0];_feag =_gbad .Range [1];};if _fece < _dbfb ||_fece > _feag {_caf .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fece ,_dbfb ,_feag );
return nil ,ErrColorOutOfRange ;};_cabb :=vals [2];_feeb :=float64 (-100);_agcg :=float64 (100);if len (_gbad .Range )> 3{_feeb =_gbad .Range [2];_agcg =_gbad .Range [3];};if _cabb < _feeb ||_cabb > _agcg {_caf .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cabb ,_feeb ,_agcg );
return nil ,ErrColorOutOfRange ;};_adbf :=NewPdfColorLab (_eeab ,_fece ,_cabb );return _adbf ,nil ;};func (_bbagb *PdfAcroForm )filteredFields (_cgeab FieldFilterFunc ,_dcbc bool )[]*PdfField {if _bbagb ==nil {return nil ;};return _fcbe (_bbagb .Fields ,_cgeab ,_dcbc );
};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_fgffa :_be .MakeDict ()};
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_dcafg *PdfOutline )ToPdfObject ()_be .PdfObject {_cgcab :=_dcafg ._gdbcg ;_fcgdd :=_cgcab .PdfObject .(*_be .PdfObjectDictionary );_fcgdd .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _dcafg .First !=nil {_fcgdd .Set ("\u0046\u0069\u0072s\u0074",_dcafg .First .ToPdfObject ());
};if _dcafg .Last !=nil {_fcgdd .Set ("\u004c\u0061\u0073\u0074",_dcafg .Last .GetContext ().GetContainingPdfObject ());};if _dcafg .Parent !=nil {_fcgdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcafg .Parent .GetContext ().GetContainingPdfObject ());
};if _dcafg .Count !=nil {_fcgdd .Set ("\u0043\u006f\u0075n\u0074",_be .MakeInteger (*_dcafg .Count ));};return _cgcab ;};func _febe (_fefff *_be .PdfObjectDictionary )bool {for _ ,_badba :=range _fefff .Keys (){if _ ,_cfaed :=_adda [_badba .String ()];
_cfaed {return true ;};};return false ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_bdgdg *PdfOutlineItem )GetContainingPdfObject ()_be .PdfObject {return _bdgdg ._cbdfb };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_be .PdfObjectArray ;_gfaaa *Image ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bbda PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_be .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fbb []_be .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bbfd []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gdca *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bdbga :=range pages {_bdbga =_bdbga .Duplicate ();_eebab (_bdbga );_gdca ._bac =append (_gdca ._bac ,_bdbga );};};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ccec *PdfFieldButton )GetType ()ButtonType {_fgff :=ButtonTypeCheckbox ;if _ccec .Ff !=nil {if (uint32 (*_ccec .Ff )&FieldFlagPushbutton .Mask ())> 0{_fgff =ButtonTypePush ;}else if (uint32 (*_ccec .Ff )&FieldFlagRadio .Mask ())> 0{_fgff =ButtonTypeRadio ;
};};return _fgff ;};

// GetPerms returns the Permissions dictionary
func (_dfdbf *PdfReader )GetPerms ()*Permissions {return _dfdbf ._fgbcb };

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_ffdac *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_efgf :=func (_ecad float64 )float64 {if _ecad >=6.0/29{return _ecad *_ecad *_ecad ;};return 108.0/841*(_ecad -4.0/29.0);};_eecbc :=img ._ffedg ;if len (_eecbc )!=6{_caf .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_eecbc =_ffdac .DecodeArray ();};_eebb :=_bc .NewReader (img .getBase ());_dgbce :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._bbbgb ,img ._ffedg );_bgad :=_bc .NewWriter (_dgbce );_bce :=_eg .Pow (2,float64 (img .BitsPerComponent ))-1;
_bebf :=make ([]uint32 ,3);var (_gada error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_afgfg ,_gabb ,_aaegb float64 ;);for {_gada =_eebb .ReadSamples (_bebf );if _gada ==_dga .EOF {break ;}else if _gada !=nil {return img ,_gada ;};Ls =float64 (_bebf [0])/_bce ;As =float64 (_bebf [1])/_bce ;
Bs =float64 (_bebf [2])/_bce ;Ls =_fg .LinearInterpolate (Ls ,0.0,1.0,_eecbc [0],_eecbc [1]);As =_fg .LinearInterpolate (As ,0.0,1.0,_eecbc [2],_eecbc [3]);Bs =_fg .LinearInterpolate (Bs ,0.0,1.0,_eecbc [4],_eecbc [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_ffdac .WhitePoint [0]*_efgf (L );Y =_ffdac .WhitePoint [1]*_efgf (M );Z =_ffdac .WhitePoint [2]*_efgf (N );_afgfg =3.240479*X +-1.537150*Y +-0.498535*Z ;_gabb =-0.969256*X +1.875992*Y +0.041556*Z ;_aaegb =0.055648*X +-0.204043*Y +1.057311*Z ;
_afgfg =_eg .Min (_eg .Max (_afgfg ,0),1.0);_gabb =_eg .Min (_eg .Max (_gabb ,0),1.0);_aaegb =_eg .Min (_eg .Max (_aaegb ,0),1.0);_bebf [0]=uint32 (_afgfg *_bce );_bebf [1]=uint32 (_gabb *_bce );_bebf [2]=uint32 (_aaegb *_bce );if _gada =_bgad .WriteSamples (_bebf );
_gada !=nil {return img ,_gada ;};};return _fggd (&_dgbce ),nil ;};func (_fcfg *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _be .PdfObject ;B _be .PdfObject ;};func _gaab (_ddgf _be .PdfObject )(*PdfColorspaceCalGray ,error ){_cfed :=NewPdfColorspaceCalGray ();if _fcda ,_egca :=_ddgf .(*_be .PdfIndirectObject );_egca {_cfed ._dbec =_fcda ;
};_ddgf =_be .TraceToDirectObject (_ddgf );_bbe ,_agaf :=_ddgf .(*_be .PdfObjectArray );if !_agaf {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbe .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_ddgf =_be .TraceToDirectObject (_bbe .Get (0));_cdgg ,_agaf :=_ddgf .(*_be .PdfObjectName );if !_agaf {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cdgg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_ddgf =_be .TraceToDirectObject (_bbe .Get (1));
_cafe ,_agaf :=_ddgf .(*_be .PdfObjectDictionary );if !_agaf {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_ddgf =_cafe .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ddgf =_be .TraceToDirectObject (_ddgf );_bcaag ,_agaf :=_ddgf .(*_be .PdfObjectArray );if !_agaf {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _bcaag .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ccfga ,_ddfe :=_bcaag .GetAsFloat64Slice ();
if _ddfe !=nil {return nil ,_ddfe ;};_cfed .WhitePoint =_ccfga ;_ddgf =_cafe .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ddgf !=nil {_ddgf =_be .TraceToDirectObject (_ddgf );_bdfc ,_gacf :=_ddgf .(*_be .PdfObjectArray );if !_gacf {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _bdfc .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_edaeb ,_ceeee :=_bdfc .GetAsFloat64Slice ();
if _ceeee !=nil {return nil ,_ceeee ;};_cfed .BlackPoint =_edaeb ;};_ddgf =_cafe .Get ("\u0047\u0061\u006dm\u0061");if _ddgf !=nil {_ddgf =_be .TraceToDirectObject (_ddgf );_dbdb ,_gbafa :=_be .GetNumberAsFloat (_ddgf );if _gbafa !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_cfed .Gamma =_dbdb ;};return _cfed ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_gfab _dga .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_agbddb _ced .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_bdgg _ced .Image )(*Image ,error );

// Compress an image.
Compress (_ecegb *Image ,_acfbb int64 )(*Image ,error );};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_abbbbe *PdfPageResources )SetXObjectImageByName (keyName _be .PdfObjectName ,ximg *XObjectImage )error {_fgee :=ximg .ToPdfObject ().(*_be .PdfObjectStream );_fddeb :=_abbbbe .SetXObjectByName (keyName ,_fgee );return _fddeb ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _be .PdfObject ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_dffa []byte ;_dbfge []uint32 ;_cadbd *_be .PdfObjectStream ;};func (_cbba *PdfWriter )updateObjectNumbers (){_gbge :=_cbba .ObjNumOffset ;
_eecdf :=0;for _ ,_gcdf :=range _cbba ._gadag {_fgbcag :=int64 (_eecdf +1+_gbge );_fgccc :=true ;if _cbba ._fdgcf {if _fgfea ,_accfg :=_cbba ._gcdda [_gcdf ];_accfg {_fgbcag =_fgfea ;_fgccc =false ;};};switch _bdfff :=_gcdf .(type ){case *_be .PdfIndirectObject :_bdfff .ObjectNumber =_fgbcag ;
_bdfff .GenerationNumber =0;case *_be .PdfObjectStream :_bdfff .ObjectNumber =_fgbcag ;_bdfff .GenerationNumber =0;case *_be .PdfObjectStreams :_bdfff .ObjectNumber =_fgbcag ;_bdfff .GenerationNumber =0;default:_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bdfff );
continue ;};if _fgccc {_eecdf ++;};};_faagad :=func (_cgbfa _be .PdfObject )int64 {switch _geebg :=_cgbfa .(type ){case *_be .PdfIndirectObject :return _geebg .ObjectNumber ;case *_be .PdfObjectStream :return _geebg .ObjectNumber ;case *_be .PdfObjectStreams :return _geebg .ObjectNumber ;
};return 0;};_da .SliceStable (_cbba ._gadag ,func (_adfeg ,_cgcb int )bool {return _faagad (_cbba ._gadag [_adfeg ])< _faagad (_cbba ._gadag [_cgcb ])});};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cded *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_caf .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_caf .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_caf .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_caf .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_cgeb ,_adfg :=_fg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bbbgb ,img ._ffedg );if _adfg !=nil {return Image {},_adfg ;};_badc ,_adfg :=_fg .NRGBAConverter .Convert (_cgeb );if _adfg !=nil {return Image {},_adfg ;
};return _fggd (_badc .Base ()),nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_eedcc *PdfPage )HasXObjectByName (name _be .PdfObjectName )bool {_daceb ,_dacg :=_eedcc .Resources .XObject .(*_be .PdfObjectDictionary );if !_dacg {return false ;};if _bfdd :=_daceb .Get (name );_bfdd !=nil {return true ;};return false ;};func _afece (_cecgd []byte )bool {if len (_cecgd )< 4{return true ;
};for _acfb :=range _cecgd [:4]{_aceb :=rune (_acfb );if !_cg .Is (_cg .ASCII_Hex_Digit ,_aceb )&&!_cg .IsSpace (_aceb ){return true ;};};return false ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_baaf *pdfFontSimple )ToPdfObject ()_be .PdfObject {if _baaf ._egdg ==nil {_baaf ._egdg =&_be .PdfIndirectObject {};};_adfa :=_baaf .baseFields ().asPdfObjectDictionary ("");_baaf ._egdg .PdfObject =_adfa ;if _baaf .FirstChar !=nil {_adfa .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_baaf .FirstChar );
};if _baaf .LastChar !=nil {_adfa .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_baaf .LastChar );};if _baaf .Widths !=nil {_adfa .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_baaf .Widths );};if _baaf .Encoding !=nil {_adfa .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baaf .Encoding );
}else if _baaf ._ceec !=nil {_cebbfd :=_baaf ._ceec .ToPdfObject ();if _cebbfd !=nil {_adfa .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cebbfd );};};return _baaf ._egdg ;};

// ReplacePage replaces the original page to a new page.
func (_dgcb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ecgee :=pageNum -1;for _fcdg :=range _dgcb ._bac {if _fcdg ==_ecgee {_bbf :=page .Duplicate ();_eebab (_bbf );_dgcb ._bac [_fcdg ]=_bbf ;};};};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bcc :=NewPdfAction ();_ace :=&PdfActionNamed {};_ace .PdfAction =_bcc ;_bcc .SetContext (_ace );return _ace ;};func (_dcfg *PdfReader )newPdfActionResetFormFromDict (_gege *_be .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gege .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gege .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_eeea *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_faef *pdfFontType0 )bytesToCharcodes (_fcaab []byte )([]_ac .CharCode ,bool ){if _faef ._cgfe ==nil {return nil ,false ;};_fbedc ,_dfefc :=_faef ._cgfe .BytesToCharcodes (_fcaab );
if !_dfefc {return nil ,false ;};_cegg :=make ([]_ac .CharCode ,len (_fbedc ));for _cdaa ,_gfbbd :=range _fbedc {_cegg [_cdaa ]=_ac .CharCode (_gfbbd );};return _cegg ,true ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bagca pdfCIDFontType2 )GetCharMetrics (code _ac .CharCode )(_ecg .CharMetrics ,bool ){if _aegf ,_ggcf :=_bagca ._ddab [code ];_ggcf {return _ecg .CharMetrics {Wx :_aegf },true ;};_cbcb :=rune (code );_dgab ,_dcgba :=_bagca ._ffeff [_cbcb ];if !_dcgba {_dgab =int (_bagca ._eaaa );
};return _ecg .CharMetrics {Wx :float64 (_dgab )},true ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_afdc *PdfFontDescriptor )ToPdfObject ()_be .PdfObject {_bdbab :=_be .MakeDict ();if _afdc ._ecgfc ==nil {_afdc ._ecgfc =&_be .PdfIndirectObject {};};_afdc ._ecgfc .PdfObject =_bdbab ;_bdbab .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _afdc .FontName !=nil {_bdbab .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_afdc .FontName );};if _afdc .FontFamily !=nil {_bdbab .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_afdc .FontFamily );};if _afdc .FontStretch !=nil {_bdbab .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_afdc .FontStretch );
};if _afdc .FontWeight !=nil {_bdbab .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_afdc .FontWeight );};if _afdc .Flags !=nil {_bdbab .Set ("\u0046\u006c\u0061g\u0073",_afdc .Flags );};if _afdc .FontBBox !=nil {_bdbab .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_afdc .FontBBox );
};if _afdc .ItalicAngle !=nil {_bdbab .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_afdc .ItalicAngle );};if _afdc .Ascent !=nil {_bdbab .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_afdc .Ascent );};if _afdc .Descent !=nil {_bdbab .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_afdc .Descent );
};if _afdc .Leading !=nil {_bdbab .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_afdc .Leading );};if _afdc .CapHeight !=nil {_bdbab .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_afdc .CapHeight );};if _afdc .XHeight !=nil {_bdbab .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_afdc .XHeight );
};if _afdc .StemV !=nil {_bdbab .Set ("\u0053\u0074\u0065m\u0056",_afdc .StemV );};if _afdc .StemH !=nil {_bdbab .Set ("\u0053\u0074\u0065m\u0048",_afdc .StemH );};if _afdc .AvgWidth !=nil {_bdbab .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_afdc .AvgWidth );
};if _afdc .MaxWidth !=nil {_bdbab .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_afdc .MaxWidth );};if _afdc .MissingWidth !=nil {_bdbab .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_afdc .MissingWidth );};if _afdc .FontFile !=nil {_bdbab .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_afdc .FontFile );
};if _afdc .FontFile2 !=nil {_bdbab .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_afdc .FontFile2 );};if _afdc .FontFile3 !=nil {_bdbab .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_afdc .FontFile3 );};if _afdc .CharSet !=nil {_bdbab .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_afdc .CharSet );
};if _afdc .Style !=nil {_bdbab .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_afdc .FontName );};if _afdc .Lang !=nil {_bdbab .Set ("\u004c\u0061\u006e\u0067",_afdc .Lang );};if _afdc .FD !=nil {_bdbab .Set ("\u0046\u0044",_afdc .FD );};if _afdc .CIDSet !=nil {_bdbab .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_afdc .CIDSet );
};return _afdc ._ecgfc ;};

// ToPdfObject implements interface PdfModel.
func (_dbdee *PdfFilespec )ToPdfObject ()_be .PdfObject {_cbga :=_dbdee .getDict ();_cbga .Clear ();_cbga .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cbga .SetIfNotNil ("\u0046\u0053",_dbdee .FS );
_cbga .SetIfNotNil ("\u0046",_dbdee .F );_cbga .SetIfNotNil ("\u0055\u0046",_dbdee .UF );_cbga .SetIfNotNil ("\u0044\u004f\u0053",_dbdee .DOS );_cbga .SetIfNotNil ("\u004d\u0061\u0063",_dbdee .Mac );_cbga .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dbdee .Unix );
_cbga .SetIfNotNil ("\u0049\u0044",_dbdee .ID );_cbga .SetIfNotNil ("\u0056",_dbdee .V );_cbga .SetIfNotNil ("\u0045\u0046",_dbdee .EF );_cbga .SetIfNotNil ("\u0052\u0046",_dbdee .RF );_cbga .SetIfNotNil ("\u0044\u0065\u0073\u0063",_dbdee .Desc );_cbga .SetIfNotNil ("\u0043\u0049",_dbdee .CI );
return _dbdee ._fbfa ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// SetReason sets the `Reason` field of the signature.
func (_aedgd *PdfSignature )SetReason (reason string ){_aedgd .Reason =_be .MakeString (reason )};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_gfdaa *PdfPattern )GetContainingPdfObject ()_be .PdfObject {return _gfdaa ._fceaa };

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _be .PdfObject ;Name _be .PdfObject ;State _be .PdfObject ;StateModel _be .PdfObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_dab .PSProgram ;_abdgd *_dab .PSExecutor ;_gcbaf []byte ;_fbda *_be .PdfObjectStream ;};func _becgg (_dfab []*_be .PdfObjectStream )*_be .PdfObjectArray {if len (_dfab )==0{return nil ;
};_gdfg :=make ([]_be .PdfObject ,0,len (_dfab ));for _ ,_eegec :=range _dfab {_gdfg =append (_gdfg ,_eegec );};return _be .MakeArray (_gdfg ...);};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ba .Time )(PdfDate ,error ){_fggfe :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fabeb ,_ :=_bdbc .ParseInt (_fggfe [1:3],10,32);_ggbef ,_ :=_bdbc .ParseInt (_fggfe [4:6],10,32);return PdfDate {_feaeeg :int64 (timeObj .Year ()),_fggdd :int64 (timeObj .Month ()),_bcbfag :int64 (timeObj .Day ()),_aceag :int64 (timeObj .Hour ()),_edaea :int64 (timeObj .Minute ()),_bcae :int64 (timeObj .Second ()),_badac :_fggfe [0],_bbdbe :_fabeb ,_dafcb :_ggbef },nil ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_ebgfb *Permissions )GetContainingPdfObject ()_be .PdfObject {return _ebgfb ._cfged };

// HasExtGState checks if ExtGState name is available.
func (_aaace *PdfPage )HasExtGState (name _be .PdfObjectName )bool {if _aaace .Resources ==nil {return false ;};if _aaace .Resources .ExtGState ==nil {return false ;};_dgedg ,_abccee :=_be .TraceToDirectObject (_aaace .Resources .ExtGState ).(*_be .PdfObjectDictionary );
if !_abccee {_caf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_be .TraceToDirectObject (_aaace .Resources .ExtGState ));
return false ;};_fedfg :=_dgedg .Get (name );_cbbgc :=_fedfg !=nil ;return _cbbgc ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_dde .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_dde .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_dde .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ggbbe *PdfAppender ;_bcda *DSS ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_aecc *PdfOutlineTreeNode )GetContext ()PdfModel {if _dgeef ,_dcfbd :=_aecc ._fgfd .(*PdfOutline );_dcfbd {return _dgeef ;};if _fcabb ,_fdced :=_aecc ._fgfd .(*PdfOutlineItem );_fdced {return _fcabb ;};_caf .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// SetFillImage attach a model.Image to push button.
func (_gfgg *PdfFieldButton )SetFillImage (image *Image ){if _gfgg .IsPush (){_gfgg ._gfaaa =image ;};};func (_aaecb *PdfWriter )checkLicense ()error {_cdaac :=_aa .GetLicenseKey ();if (_cdaac ==nil ||!_cdaac .IsLicensed ())&&!_gafed {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _bdf .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bafbe *PdfPage )AddContentStreamByString (contentStr string )error {_cfdc ,_bbdee :=_be .MakeStream ([]byte (contentStr ),_be .NewFlateEncoder ());if _bbdee !=nil {return _bbdee ;};if _bafbe .Contents ==nil {_bafbe .Contents =_cfdc ;}else {_efdbg :=_be .TraceToDirectObject (_bafbe .Contents );
_gdebfg ,_deebc :=_efdbg .(*_be .PdfObjectArray );if !_deebc {_gdebfg =_be .MakeArray (_efdbg );};_gdebfg .Append (_cfdc );_bafbe .Contents =_gdebfg ;};return nil ;};type fontFile struct{_gddff string ;_eagcb string ;_aabe _ac .SimpleEncoder ;};

// AddWatermarkImage adds a watermark to the page.
func (_gefeb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ageg ,_egecc :=_gefeb .GetMediaBox ();if _egecc !=nil {return _egecc ;};_feddd :=_ageg .Urx -_ageg .Llx ;_agec :=_ageg .Ury -_ageg .Lly ;_eacfa :=float64 (*ximg .Width );
_dbffa :=(_feddd -_eacfa )/2;if opt .FitToWidth {_eacfa =_feddd ;_dbffa =0;};_fbff :=_agec ;_eaae :=float64 (0);if opt .PreserveAspectRatio {_fbff =_eacfa *float64 (*ximg .Height )/float64 (*ximg .Width );_eaae =(_agec -_fbff )/2;};if _gefeb .Resources ==nil {_gefeb .Resources =NewPdfPageResources ();
};_aabdg :=0;_cgdg :=_be .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_aabdg ));for _gefeb .Resources .HasXObjectByName (_cgdg ){_aabdg ++;_cgdg =_be .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_aabdg ));};_egecc =_gefeb .AddImageResource (_cgdg ,ximg );
if _egecc !=nil {return _egecc ;};_aabdg =0;_cdgbb :=_be .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_aabdg ));for _gefeb .HasExtGState (_cdgbb ){_aabdg ++;_cdgbb =_be .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_aabdg ));};_eeae :=_be .MakeDict ();
_eeae .Set ("\u0042\u004d",_be .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_eeae .Set ("\u0043\u0041",_be .MakeFloat (opt .Alpha ));_eeae .Set ("\u0063\u0061",_be .MakeFloat (opt .Alpha ));_egecc =_gefeb .AddExtGState (_cdgbb ,_eeae );if _egecc !=nil {return _egecc ;
};_egdc :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_cdgbb ,_eacfa ,_fbff ,_dbffa ,_eaae ,_cgdg );
_gefeb .AddContentStreamByString (_egdc );return nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cdfeed []byte )(_fgebe int ,_bedd error );};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_bgca :=&PdfColorspaceSpecialSeparation {};return _bgca ;};func (_fafeb *PdfWriter )writeObject (_fafdd int ,_gadfg _be .PdfObject ){_caf .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_fafdd );
if _bfgcd ,_gggfg :=_gadfg .(*_be .PdfIndirectObject );_gggfg {_fafeb ._bcgf [_fafdd ]=crossReference {Type :1,Offset :_fafeb ._cdaga ,Generation :_bfgcd .GenerationNumber };_bbaee :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fafdd );
if _accaae ,_ebgff :=_bfgcd .PdfObject .(*pdfSignDictionary );_ebgff {_accaae ._acagb =_fafeb ._cdaga +int64 (len (_bbaee ));};if _bfgcd .PdfObject ==nil {_caf .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_bfgcd .PdfObject =_be .MakeNull ();};_bbaee +=_bfgcd .PdfObject .WriteString ();_bbaee +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_fafeb .writeString (_bbaee );return ;};if _edgfe ,_adcaf :=_gadfg .(*_be .PdfObjectStream );_adcaf {_fafeb ._bcgf [_fafdd ]=crossReference {Type :1,Offset :_fafeb ._cdaga ,Generation :_edgfe .GenerationNumber };
_fffcd :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fafdd );_fffcd +=_edgfe .PdfObjectDictionary .WriteString ();_fffcd +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fafeb .writeString (_fffcd );_fafeb .writeBytes (_edgfe .Stream );
_fafeb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fbcfe ,_bbaae :=_gadfg .(*_be .PdfObjectStreams );_bbaae {_fafeb ._bcgf [_fafdd ]=crossReference {Type :1,Offset :_fafeb ._cdaga ,Generation :_fbcfe .GenerationNumber };
_fcfcd :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fafdd );var _gbcda []string ;var _ggcff string ;var _ggbgd int64 ;for _egaffd ,_eccee :=range _fbcfe .Elements (){_baga ,_fedef :=_eccee .(*_be .PdfIndirectObject );if !_fedef {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_fafdd ,_eccee );
continue ;};_ccgee :=_baga .PdfObject .WriteString ()+"\u0020";_ggcff =_ggcff +_ccgee ;_gbcda =append (_gbcda ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_baga .ObjectNumber ,_ggbgd ));_fafeb ._bcgf [int (_baga .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_fafdd ,Index :_egaffd };
_ggbgd =_ggbgd +int64 (len ([]byte (_ccgee )));};_agcbg :=_bb .Join (_gbcda ,"\u0020")+"\u0020";_faccg :=_be .NewFlateEncoder ();_gcdbg :=_faccg .MakeStreamDict ();_gcdbg .Set (_be .PdfObjectName ("\u0054\u0079\u0070\u0065"),_be .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_eaga :=int64 (_fbcfe .Len ());_gcdbg .Set (_be .PdfObjectName ("\u004e"),_be .MakeInteger (_eaga ));_aaeee :=int64 (len (_agcbg ));_gcdbg .Set (_be .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_be .MakeInteger (_aaeee ));_gecd ,_ :=_faccg .EncodeBytes ([]byte (_agcbg +_ggcff ));
_cgbbcf :=int64 (len (_gecd ));_gcdbg .Set (_be .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_be .MakeInteger (_cgbbcf ));_fcfcd +=_gcdbg .WriteString ();_fcfcd +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fafeb .writeString (_fcfcd );
_fafeb .writeBytes (_gecd );_fafeb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_fafeb .writeString (_gadfg .WriteString ());};

// GetContainingPdfObject implements interface PdfModel.
func (_ad *PdfAction )GetContainingPdfObject ()_be .PdfObject {return _ad ._deb };func (_fade *DSS )generateHashMaps ()error {_accaa ,_gaee :=_fade .generateHashMap (_fade .Certs );if _gaee !=nil {return _gaee ;};_dbfg ,_gaee :=_fade .generateHashMap (_fade .OCSPs );
if _gaee !=nil {return _gaee ;};_aged ,_gaee :=_fade .generateHashMap (_fade .CRLs );if _gaee !=nil {return _gaee ;};_fade ._cgbce =_accaa ;_fade ._cfedd =_dbfg ;_fade ._ggge =_aged ;return nil ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_dadeg :=&PdfShadingType2 {};_dadeg .PdfShading =&PdfShading {};_dadeg .PdfShading ._cgdab =_be .MakeIndirectObject (_be .MakeDict ());_dadeg .PdfShading ._gabe =_dadeg ;return _dadeg ;};func (_fgaba *PdfWriter )hasObject (_ggffg _be .PdfObject )bool {_ ,_dabaf :=_fgaba ._agafe [_ggffg ];
return _dabaf ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_defbf *CompliancePdfReader )error ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func _gdcaf (_ddgb *_be .PdfObjectDictionary )(*PdfFieldText ,error ){_gdea :=&PdfFieldText {};_gdea .DA ,_ =_be .GetString (_ddgb .Get ("\u0044\u0041"));_gdea .Q ,_ =_be .GetInt (_ddgb .Get ("\u0051"));
_gdea .DS ,_ =_be .GetString (_ddgb .Get ("\u0044\u0053"));_gdea .RV =_ddgb .Get ("\u0052\u0056");_gdea .MaxLen ,_ =_be .GetInt (_ddgb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _gdea ,nil ;};func _afbab (_bcafd *_be .PdfIndirectObject )(*PdfOutline ,error ){_fcdcg ,_gbggd :=_bcafd .PdfObject .(*_be .PdfObjectDictionary );
if !_gbggd {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gdcba :=NewPdfOutline ();if _abff :=_fcdcg .Get ("\u0054\u0079\u0070\u0065");
_abff !=nil {_badd ,_eaafb :=_abff .(*_be .PdfObjectName );if _eaafb {if *_badd !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_badd );
};};};if _ggec :=_fcdcg .Get ("\u0043\u006f\u0075n\u0074");_ggec !=nil {_gcbeg ,_afbad :=_be .GetNumberAsInt64 (_ggec );if _afbad !=nil {return nil ,_afbad ;};_gdcba .Count =&_gcbeg ;};return _gdcba ,nil ;};func (_adad *PdfReader )newPdfActionLaunchFromDict (_bfb *_be .PdfObjectDictionary )(*PdfActionLaunch ,error ){_debc ,_gfdg :=_ed (_bfb .Get ("\u0046"));
if _gfdg !=nil {return nil ,_gfdg ;};return &PdfActionLaunch {Win :_bfb .Get ("\u0057\u0069\u006e"),Mac :_bfb .Get ("\u004d\u0061\u0063"),Unix :_bfb .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bfb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_debc },nil ;
};func (_cdg *PdfReader )newPdfActionGotoRFromDict (_ffda *_be .PdfObjectDictionary )(*PdfActionGoToR ,error ){_fab ,_fcb :=_ed (_ffda .Get ("\u0046"));if _fcb !=nil {return nil ,_fcb ;};return &PdfActionGoToR {D :_ffda .Get ("\u0044"),NewWindow :_ffda .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fab },nil ;
};func (_eddbb *PdfReader )newPdfAcroFormFromDict (_baaae *_be .PdfIndirectObject ,_dggfe *_be .PdfObjectDictionary )(*PdfAcroForm ,error ){_cfce :=NewPdfAcroForm ();if _baaae !=nil {_cfce ._fabcf =_baaae ;_baaae .PdfObject =_be .MakeDict ();};if _daggc :=_dggfe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");
_daggc !=nil &&!_be .IsNullObject (_daggc ){_aace ,_cgagf :=_be .GetArray (_daggc );if !_cgagf {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_daggc );
};var _fcab []*PdfField ;for _ ,_defbe :=range _aace .Elements (){_deaea ,_gegc :=_be .GetIndirect (_defbe );if !_gegc {if _ ,_bdgd :=_defbe .(*_be .PdfObjectNull );_bdgd {_caf .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_caf .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_defbe );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cfebef ,_eaad :=_eddbb .newPdfFieldFromIndirectObject (_deaea ,nil );
if _eaad !=nil {return nil ,_eaad ;};_caf .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_cfebef );_fcab =append (_fcab ,_cfebef );};_cfce .Fields =&_fcab ;};if _fgadad :=_dggfe .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_fgadad !=nil {_dcbdd ,_bcgc :=_be .GetBool (_fgadad );if _bcgc {_cfce .NeedAppearances =_dcbdd ;}else {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fgadad );
};};if _badbac :=_dggfe .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_badbac !=nil {_cfcge ,_fgadb :=_be .GetInt (_badbac );if _fgadb {_cfce .SigFlags =_cfcge ;}else {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_badbac );
};};if _aafc :=_dggfe .Get ("\u0043\u004f");_aafc !=nil {_ebac ,_geae :=_be .GetArray (_aafc );if _geae {_cfce .CO =_ebac ;}else {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_aafc );
};};if _agcde :=_dggfe .Get ("\u0044\u0052");_agcde !=nil {if _ffdc ,_fabfg :=_be .GetDict (_agcde );_fabfg {_dbbcg ,_egcfac :=NewPdfPageResourcesFromDict (_ffdc );if _egcfac !=nil {_caf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_egcfac );
return nil ,_egcfac ;};_cfce .DR =_dbbcg ;}else {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_agcde );};};if _bcbd :=_dggfe .Get ("\u0044\u0041");
_bcbd !=nil {_gbecga ,_efcgg :=_be .GetString (_bcbd );if _efcgg {_cfce .DA =_gbecga ;}else {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bcbd );
};};if _fdefd :=_dggfe .Get ("\u0051");_fdefd !=nil {_ggcaa ,_gfbca :=_be .GetInt (_fdefd );if _gfbca {_cfce .Q =_ggcaa ;}else {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fdefd );
};};if _dbbe :=_dggfe .Get ("\u0058\u0046\u0041");_dbbe !=nil {_cfce .XFA =_dbbe ;};if _abeae :=_dggfe .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_abeae !=nil {_cfce .ADBEEchoSign =_abeae ;};_cfce .ToPdfObject ();
return _cfce ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_abeca DefaultImageHandler )NewGrayImageFromGoImage (goimg _ced .Image )(*Image ,error ){_efddb :=goimg .Bounds ();_ggdd :=&Image {Width :int64 (_efddb .Dx ()),Height :int64 (_efddb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ddde :=goimg .(type ){case *_ced .Gray :if len (_ddde .Pix )!=_efddb .Dx ()*_efddb .Dy (){_eebee ,_cdgfg :=_fg .GrayConverter .Convert (goimg );
if _cdgfg !=nil {return nil ,_cdgfg ;};_ggdd .Data =_eebee .Pix ();}else {_ggdd .Data =_ddde .Pix ;};case *_ced .Gray16 :_ggdd .BitsPerComponent =16;if len (_ddde .Pix )!=_efddb .Dx ()*_efddb .Dy ()*2{_cbaeb ,_feaae :=_fg .Gray16Converter .Convert (goimg );
if _feaae !=nil {return nil ,_feaae ;};_ggdd .Data =_cbaeb .Pix ();}else {_ggdd .Data =_ddde .Pix ;};case _fg .Image :_edga :=_ddde .Base ();if _edga .ColorComponents ==1{_ggdd .BitsPerComponent =int64 (_edga .BitsPerComponent );_ggdd .Data =_edga .Data ;
return _ggdd ,nil ;};_ebeg ,_ecdf :=_fg .GrayConverter .Convert (goimg );if _ecdf !=nil {return nil ,_ecdf ;};_ggdd .Data =_ebeg .Pix ();default:_gbebg ,_ccgff :=_fg .GrayConverter .Convert (goimg );if _ccgff !=nil {return nil ,_ccgff ;};_ggdd .Data =_gbebg .Pix ();
};return _ggdd ,nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_aaddc *LTV )EnableChain (chain []*_bd .Certificate )error {return _aaddc .enable (nil ,chain ,"")};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_gfbaa *PdfSignature ,_ceecg Hasher ,_fdbdcg SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// String returns a string representation of what flags are set.
func (_eced FieldFlag )String ()string {_bcab :="";if _eced ==FieldFlagClear {_bcab ="\u0043\u006c\u0065a\u0072";return _bcab ;};if _eced &FieldFlagReadOnly > 0{_bcab +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _eced &FieldFlagRequired > 0{_bcab +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _eced &FieldFlagNoExport > 0{_bcab +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _eced &FieldFlagNoToggleToOff > 0{_bcab +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _eced &FieldFlagRadio > 0{_bcab +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _eced &FieldFlagPushbutton > 0{_bcab +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _eced &FieldFlagRadiosInUnision > 0{_bcab +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _eced &FieldFlagMultiline > 0{_bcab +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _eced &FieldFlagPassword > 0{_bcab +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _eced &FieldFlagFileSelect > 0{_bcab +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _eced &FieldFlagDoNotScroll > 0{_bcab +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _eced &FieldFlagComb > 0{_bcab +="\u007c\u0043\u006fm\u0062";};if _eced &FieldFlagRichText > 0{_bcab +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _eced &FieldFlagDoNotSpellCheck > 0{_bcab +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _eced &FieldFlagCombo > 0{_bcab +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _eced &FieldFlagEdit > 0{_bcab +="\u007c\u0045\u0064i\u0074";};if _eced &FieldFlagSort > 0{_bcab +="\u007c\u0053\u006fr\u0074";};if _eced &FieldFlagMultiSelect > 0{_bcab +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _eced &FieldFlagCommitOnSelChange > 0{_bcab +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _bb .Trim (_bcab ,"\u007c");};func _bdec (_faba _be .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_caf .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_faba .String (),_faba );
_dbaca :=NewPdfColorspaceSpecialPattern ();if _dbggf ,_fecbd :=_faba .(*_be .PdfIndirectObject );_fecbd {_dbaca ._bbcf =_dbggf ;};_faba =_be .TraceToDirectObject (_faba );if _eadc ,_efbb :=_faba .(*_be .PdfObjectName );_efbb {if *_eadc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dbaca ,nil ;};_fbba ,_gcgb :=_faba .(*_be .PdfObjectArray );if !_gcgb {_caf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_faba );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _fbba .Len ()!=1&&_fbba .Len ()!=2{_caf .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_fbba );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_faba =_fbba .Get (0);if _cbed ,_gega :=_faba .(*_be .PdfObjectName );_gega {if *_cbed !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_caf .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_cbed );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _fbba .Len ()> 1{_faba =_fbba .Get (1);_faba =_be .TraceToDirectObject (_faba );_dacf ,_daed :=NewPdfColorspaceFromPdfObject (_faba );if _daed !=nil {return nil ,_daed ;
};_dbaca .UnderlyingCS =_dacf ;};_caf .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dbaca .UnderlyingCS );
return _dbaca ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cadff *PdfShading )GetContainingPdfObject ()_be .PdfObject {return _cadff ._cgdab };

// SetContentStream sets the pattern cell's content stream.
func (_ddaad *PdfTilingPattern )SetContentStream (content []byte ,encoder _be .StreamEncoder )error {_adcef ,_aeaa :=_ddaad ._fceaa .(*_be .PdfObjectStream );if !_aeaa {_caf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddaad ._fceaa );
return _be .ErrTypeError ;};if encoder ==nil {encoder =_be .NewRawEncoder ();};_cdfd :=_adcef .PdfObjectDictionary ;_eacgg :=encoder .MakeStreamDict ();_cdfd .Merge (_eacgg );_debed ,_gfaef :=encoder .EncodeBytes (content );if _gfaef !=nil {return _gfaef ;
};_cdfd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_be .MakeInteger (int64 (len (_debed ))));_adcef .Stream =_debed ;return nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_fcfbe *PdfReader )GetOCProperties ()(_be .PdfObject ,error ){_dfcbg :=_fcfbe ._dcdbf ;_cfdb :=_dfcbg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cfdb =_be .ResolveReference (_cfdb );if !_fcfbe ._eaff {_cbabaa :=_fcfbe .traverseObjectData (_cfdb );
if _cbabaa !=nil {return nil ,_cbabaa ;};};return _cfdb ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_ccacd *PdfPageResources )GetXObjectFormByName (keyName _be .PdfObjectName )(*XObjectForm ,error ){_caadf ,_adgab :=_ccacd .GetXObjectByName (keyName );if _caadf ==nil {return nil ,nil ;};if _adgab !=XObjectTypeForm {return nil ,_bdf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_ddbbb ,_bacgd :=NewXObjectFormFromStream (_caadf );if _bacgd !=nil {return nil ,_bacgd ;};return _ddbbb ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dbegb *PdfReader )GetObjectNums ()[]int {return _dbegb ._gfafb .GetObjectNums ()};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cabf *LTV )EnableByName (name string ,extraCerts []*_bd .Certificate )error {_fgdgf :=_cabf ._ggbbe ._gaef .AcroForm ;for _ ,_gfcef :=range _fgdgf .AllFields (){_dccd ,_ :=_gfcef .GetContext ().(*PdfFieldSignature );if _dccd ==nil {continue ;};if _acdea :=_dccd .PartialName ();
_acdea !=name {continue ;};return _cabf .Enable (_dccd .V ,extraCerts );};return nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fcdag *PdfPageResources )HasColorspaceByName (keyName _be .PdfObjectName )bool {_bfdaeb ,_ggadd :=_fcdag .GetColorspaces ();if _ggadd !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggadd );
return false ;};if _bfdaeb ==nil {return false ;};_ ,_fefgb :=_bfdaeb .Colorspaces [string (keyName )];return _fefgb ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_bcee *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_bcee ._dcfgb =colorspace ;};func (_fdefc *PdfWriter )addObject (_fgdc _be .PdfObject )bool {_aeegd :=_fdefc .hasObject (_fgdc );if !_aeegd {_affd :=_be .ResolveReferencesDeep (_fgdc ,_fdefc ._cgcad );
if _affd !=nil {_caf .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_affd );};_fdefc ._gadag =append (_fdefc ._gadag ,_fgdc );_fdefc ._agafe [_fgdc ]=struct{}{};return true ;};return false ;
};func (_cccda *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _cccda ._gfafb .GetCrypter ()!=nil &&!_cccda ._gfafb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fcee :=_cccda ._dcdbf ;_ffgcbe :=_fcee .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _ffgcbe ==nil {return nil ,nil ;};_eafbg ,_dcdbd :=_be .GetIndirect (_ffgcbe );_ffgcbe =_be .TraceToDirectObject (_ffgcbe );if _be .IsNullObject (_ffgcbe ){_caf .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_ccdef ,_ffgec :=_be .GetDict (_ffgcbe );if !_ffgec {_caf .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ffgcbe );_caf .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ffgcbe );};_caf .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_caf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_cccda ._eaff {_dgcg :=_cccda .traverseObjectData (_ccdef );
if _dgcg !=nil {_caf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_dgcg );
return nil ,_dgcg ;};};_abbfa ,_cddad :=_cccda .newPdfAcroFormFromDict (_eafbg ,_ccdef );if _cddad !=nil {return nil ,_cddad ;};_abbfa ._cfacf =!_dcdbd ;return _abbfa ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cacdg *PdfShading )ToPdfObject ()_be .PdfObject {_dfeff :=_cacdg ._cgdab ;_bafcg ,_gcccf :=_cacdg .getShadingDict ();if _gcccf !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cacdg .ShadingType !=nil {_bafcg .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cacdg .ShadingType );};if _cacdg .ColorSpace !=nil {_bafcg .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cacdg .ColorSpace .ToPdfObject ());
};if _cacdg .Background !=nil {_bafcg .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cacdg .Background );};if _cacdg .BBox !=nil {_bafcg .Set ("\u0042\u0042\u006f\u0078",_cacdg .BBox .ToPdfObject ());};if _cacdg .AntiAlias !=nil {_bafcg .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cacdg .AntiAlias );
};return _dfeff ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_dccca DefaultImageHandler )Read (reader _dga .Reader )(*Image ,error ){_bggde ,_ ,_bbcdc :=_ced .Decode (reader );if _bbcdc !=nil {_caf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bbcdc );
return nil ,_bbcdc ;};return _dccca .NewImageFromGoImage (_bggde );};

// GetAction returns the PDF action for the annotation link.
func (_eac *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _eac ._ggee !=nil {return _eac ._ggee ,nil ;};if _eac .A ==nil {return nil ,nil ;};if _eac ._aaca ==nil {return nil ,nil ;};_ddbb ,_eegg :=_eac ._aaca .loadAction (_eac .A );if _eegg !=nil {return nil ,_eegg ;
};_eac ._ggee =_ddbb ;return _eac ._ggee ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _be .PdfObject ;T3DV _be .PdfObject ;T3DA _be .PdfObject ;T3DI _be .PdfObject ;T3DB _be .PdfObject ;};

// Write writes out the PDF.
func (_bceebf *PdfWriter )Write (writer _dga .Writer )error {_caf .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_gfegg :=_bceebf .checkLicense ();if _gfegg !=nil {return _gfegg ;};if _gfegg =_bceebf .writeOutlines ();_gfegg !=nil {return _gfegg ;
};if _gfegg =_bceebf .writeAcroFormFields ();_gfegg !=nil {return _gfegg ;};_bceebf .checkPendingObjects ();if _gfegg =_bceebf .writeOutputIntents ();_gfegg !=nil {return _gfegg ;};_bceebf .setCatalogVersion ();_bceebf .copyObjects ();if _gfegg =_bceebf .optimize ();
_gfegg !=nil {return _gfegg ;};if _gfegg =_bceebf .optimizeDocument ();_gfegg !=nil {return _gfegg ;};var _ccbge _g .Hash ;if _bceebf ._ebdb {_ccbge =_dg .New ();writer =_dga .MultiWriter (_ccbge ,writer );};_bceebf .setWriter (writer );_aadca :=_bceebf .checkCrossReferenceStream ();
_abffd ,_aadca :=_bceebf .mapObjectStreams (_aadca );_bceebf .adjustXRefAffectedVersion (_aadca );_bceebf .writeDocumentVersion ();_bceebf .updateObjectNumbers ();_bceebf .writeObjects ();if _gfegg =_bceebf .writeObjectsInStreams (_abffd );_gfegg !=nil {return _gfegg ;
};_gbfd :=_bceebf ._cdaga ;var _fggfd int ;for _bfegecc :=range _bceebf ._bcgf {if _bfegecc > _fggfd {_fggfd =_bfegecc ;};};if _bceebf ._ebdb {if _gfegg =_bceebf .setHashIDs (_ccbge );_gfegg !=nil {return _gfegg ;};};if _aadca {if _gfegg =_bceebf .writeXRefStreams (_fggfd ,_gbfd );
_gfegg !=nil {return _gfegg ;};}else {_bceebf .writeTrailer (_fggfd );};_bceebf .makeOffSetReference (_gbfd );if _gfegg =_bceebf .flushWriter ();_gfegg !=nil {return _gfegg ;};return nil ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_deebd :=&PdfShadingPatternType3 {};_deebd .Matrix =_be .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_deebd .PdfPattern =&PdfPattern {};_deebd .PdfPattern .PatternType =int64 (*_be .MakeInteger (2));
_deebd .PdfPattern ._ffgg =_deebd ;_deebd .PdfPattern ._fceaa =_be .MakeIndirectObject (_be .MakeDict ());return _deebd ;};func _ccfe (_ddfb map[_ecg .GID ]int ,_dadba uint16 )*_be .PdfObjectArray {_cgca :=&_be .PdfObjectArray {};_dffg :=_ecg .GID (_dadba );
for _dbggb :=_ecg .GID (0);_dbggb < _dffg ;{_dcad ,_ggdg :=_ddfb [_dbggb ];if !_ggdg {_dbggb ++;continue ;};_gdbcf :=_dbggb ;for _cdega :=_gdbcf +1;_cdega < _dffg ;_cdega ++{if _gdfe ,_gfgae :=_ddfb [_cdega ];!_gfgae ||_dcad !=_gdfe {break ;};_gdbcf =_cdega ;
};_cgca .Append (_be .MakeInteger (int64 (_dbggb )));_cgca .Append (_be .MakeInteger (int64 (_gdbcf )));_cgca .Append (_be .MakeInteger (int64 (_dcad )));_dbggb =_gdbcf +1;};return _cgca ;};

// SetBorderWidth sets the style's border width.
func (_cadgg *PdfBorderStyle )SetBorderWidth (width float64 ){_cadgg .W =&width };

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_adfe :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_adfe .N =N ;return _adfe ,nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _be .StreamEncoder ;Intent _be .PdfObject ;ImageMask _be .PdfObject ;Mask _be .PdfObject ;Matte _be .PdfObject ;Decode _be .PdfObject ;Interpolate _be .PdfObject ;Alternatives _be .PdfObject ;
SMask _be .PdfObject ;SMaskInData _be .PdfObject ;Name _be .PdfObject ;StructParent _be .PdfObject ;ID _be .PdfObject ;OPI _be .PdfObject ;Metadata _be .PdfObject ;OC _be .PdfObject ;Stream []byte ;_fcaaa *_be .PdfObjectStream ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _be .PdfObject ;H _be .PdfObject ;};

// PartialName returns the partial name of the field.
func (_dcdda *PdfField )PartialName ()string {_dcfe :="";if _dcdda .T !=nil {_dcfe =_dcdda .T .Decoded ();}else {_caf .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _dcfe ;};

// GetPage returns the PdfPage model for the specified page number.
func (_ddbga *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ddbga ._gfafb .GetCrypter ()!=nil &&!_ddbga ._gfafb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ddbga ._cgbdb )< pageNumber {return nil ,_bdf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_bdfed :=pageNumber -1;if _bdfed < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_aacbdg :=_ddbga .PageList [_bdfed ];
return _aacbdg ,nil ;};func _gdffb (_gafd _be .PdfObject )(*_be .PdfObjectDictionary ,*fontCommon ,error ){_gdbg :=&fontCommon {};if _acbc ,_fcg :=_gafd .(*_be .PdfIndirectObject );_fcg {_gdbg ._cgfb =_acbc .ObjectNumber ;};_bgfff ,_bggb :=_be .GetDict (_gafd );
if !_bggb {_caf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gafd );
return nil ,nil ,ErrFontNotSupported ;};_bdda ,_bggb :=_be .GetNameVal (_bgfff .Get ("\u0054\u0079\u0070\u0065"));if !_bggb {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _bdda !="\u0046\u006f\u006e\u0074"{_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_bdda ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_be .ErrTypeError ;};_fbaf ,_bggb :=_be .GetNameVal (_bgfff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bggb {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_gdbg ._cfcgc =_fbaf ;_eddge ,_bggb :=_be .GetNameVal (_bgfff .Get ("\u004e\u0061\u006d\u0065"));if _bggb {_gdbg ._egbbc =_eddge ;};_addc :=_bgfff .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _addc !=nil {_gdbg ._eecbaf =_be .TraceToDirectObject (_addc );
_dfgg ,_defba :=_baaga (_gdbg ._eecbaf ,_gdbg );if _defba !=nil {return _bgfff ,_gdbg ,_defba ;};_gdbg ._baag =_dfgg ;}else if _fbaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fbaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dad ,_adcfc :=_gde .NewCIDSystemInfo (_bgfff .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _adcfc !=nil {return _bgfff ,_gdbg ,_adcfc ;};_eddb :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dad .Registry ,_dad .Ordering );if _gde .IsPredefinedCMap (_eddb ){_gdbg ._baag ,_adcfc =_gde .LoadPredefinedCMap (_eddb );
if _adcfc !=nil {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_eddb ,_adcfc );
};};};_defd :=_bgfff .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _defd !=nil {_babfb ,_feaca :=_cgafc (_defd );if _feaca !=nil {_caf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feaca );
return _bgfff ,_gdbg ,_feaca ;};_gdbg ._gfcg =_babfb ;};if _fbaf !="\u0054\u0079\u0070e\u0033"{_gbcce ,_gcbfa :=_be .GetNameVal (_bgfff .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_gcbfa {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _bgfff ,_gdbg ,ErrRequiredAttributeMissing ;};_gdbg ._abdd =_gbcce ;};return _bgfff ,_gdbg ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _be .PdfObject ;LE _be .PdfObject ;BS _be .PdfObject ;IC _be .PdfObject ;BE _be .PdfObject ;IT _be .PdfObject ;Measure _be .PdfObject ;};var (ErrRequiredAttributeMissing =_bdf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_bdf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cddfa =_bdf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_bdf .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_bdf .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_bfd .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_be .ErrNotSupported );ErrType1CFontNotSupported =_bfd .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_be .ErrNotSupported );
ErrType3FontNotSupported =_bfd .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_be .ErrNotSupported );
ErrTTCmapNotSupported =_bfd .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_be .ErrNotSupported );
ErrSignNotEnoughSpace =_bfd .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_bfd .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;
XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_cdgga *PdfColorspaceLab )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_debca ,_ecdd :=_be .GetNumbersAsFloat (objects );
if _ecdd !=nil {return nil ,_ecdd ;};return _cdgga .ColorFromFloats (_debca );};

// ToPdfObject implements interface PdfModel.
func (_bbd *PdfActionSetOCGState )ToPdfObject ()_be .PdfObject {_bbd .PdfAction .ToPdfObject ();_adb :=_bbd ._deb ;_ggbf :=_adb .PdfObject .(*_be .PdfObjectDictionary );_ggbf .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeSetOCGState )));_ggbf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bbd .State );
_ggbf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bbd .PreserveRB );return _adb ;};func (_gcbf *DSS )addOCSPs (_bgbd [][]byte )([]*_be .PdfObjectStream ,error ){return _gcbf .add (&_gcbf .OCSPs ,_gcbf ._cfedd ,_bgbd );
};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _be .PdfObject ;NewWindow _be .PdfObject ;T _be .PdfObject ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _be .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _fgda *_be .PdfIndirectObject ;var _cec *_be .PdfObjectName ;var _fggg *_be .PdfObjectArray ;if _fgdag ,_acea :=obj .(*_be .PdfIndirectObject );
_acea {_fgda =_fgdag ;};obj =_be .TraceToDirectObject (obj );switch _bbdf :=obj .(type ){case *_be .PdfObjectArray :_fggg =_bbdf ;case *_be .PdfObjectName :_cec =_bbdf ;};if _cec !=nil {switch *_cec {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_caf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cec );return nil ,_cddfa ;};};if _fggg !=nil &&_fggg .Len ()> 0{var _aef _be .PdfObject =_fgda ;
if _fgda ==nil {_aef =_fggg ;};if _ebdc ,_bdfa :=_be .GetName (_fggg .Get (0));_bdfa {switch _ebdc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fggg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fggg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fggg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _gaab (_aef );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _gcbe (_aef );
case "\u004c\u0061\u0062":return _gbag (_aef );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _becef (_aef );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bdec (_aef );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _abbbg (_aef );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dcgged (_aef );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cacd (_aef );default:_caf .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_ebdc );
};};};_caf .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_dcgg *PdfReader )newPdfActionRenditionFromDict (_bef *_be .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bef .Get ("\u0052"),AN :_bef .Get ("\u0041\u004e"),OP :_bef .Get ("\u004f\u0050"),JS :_bef .Get ("\u004a\u0053")},nil ;
};func (_dfda *PdfReader )newPdfSignatureFromIndirect (_caegg *_be .PdfIndirectObject )(*PdfSignature ,error ){_bcdga ,_abdae :=_caegg .PdfObject .(*_be .PdfObjectDictionary );if !_abdae {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _bacaf ,_bfeca :=_dfda ._cfgbc .GetModelFromPrimitive (_caegg ).(*PdfSignature );_bfeca {return _bacaf ,nil ;};_egbed :=&PdfSignature {};_egbed ._cfbge =_caegg ;_egbed .Type ,_ =_be .GetName (_bcdga .Get ("\u0054\u0079\u0070\u0065"));
_egbed .Filter ,_abdae =_be .GetName (_bcdga .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_abdae {_caf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_egbed .SubFilter ,_ =_be .GetName (_bcdga .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_egbed .Contents ,_abdae =_be .GetString (_bcdga .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_abdae {_caf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _gbcbg ,_bfdad :=_be .GetArray (_bcdga .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_bfdad {_egbed .Reference =_be .MakeArray ();for _ ,_cfgga :=range _gbcbg .Elements (){_edgbd ,_fbfeb :=_be .GetDict (_cfgga );
if !_fbfeb {_caf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_cggd ,_ebegc :=_dfda .newPdfSignatureReferenceFromDict (_edgbd );if _ebegc !=nil {return nil ,_ebegc ;};_egbed .Reference .Append (_cggd .ToPdfObject ());};};_egbed .Cert =_bcdga .Get ("\u0043\u0065\u0072\u0074");_egbed .ByteRange ,_ =_be .GetArray (_bcdga .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_egbed .Changes ,_ =_be .GetArray (_bcdga .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_egbed .Name ,_ =_be .GetString (_bcdga .Get ("\u004e\u0061\u006d\u0065"));_egbed .M ,_ =_be .GetString (_bcdga .Get ("\u004d"));_egbed .Location ,_ =_be .GetString (_bcdga .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_egbed .Reason ,_ =_be .GetString (_bcdga .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_egbed .ContactInfo ,_ =_be .GetString (_bcdga .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_egbed .R ,_ =_be .GetInt (_bcdga .Get ("\u0052"));
_egbed .V ,_ =_be .GetInt (_bcdga .Get ("\u0056"));_egbed .PropBuild ,_ =_be .GetDict (_bcdga .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_egbed .PropAuthTime ,_ =_be .GetInt (_bcdga .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_egbed .PropAuthType ,_ =_be .GetName (_bcdga .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_dfda ._cfgbc .Register (_caegg ,_egbed );return _egbed ,nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_cbcd *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_cfbgcf :=RC4_128bit ;if options !=nil {_cfbgcf =options .Algorithm ;};_abdef :=_fa .PermOwner ;if options !=nil {_abdef =options .Permissions ;};var _bgeeg _dd .Filter ;
switch _cfbgcf {case RC4_128bit :_bgeeg =_dd .NewFilterV2 (16);case AES_128bit :_bgeeg =_dd .NewFilterAESV2 ();case AES_256bit :_bgeeg =_dd .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_egefc ,_ggcg ,_gfbgb :=_be .PdfCryptNewEncrypt (_bgeeg ,userPass ,ownerPass ,_abdef );if _gfbgb !=nil {return _gfbgb ;};_cbcd ._bbdaa =_egefc ;if _ggcg .Major !=0{_cbcd .SetVersion (_ggcg .Major ,_ggcg .Minor );};_cbcd ._gabf =_ggcg .Encrypt ;_cbcd ._fgbbf ,_cbcd ._abcda =_ggcg .ID0 ,_ggcg .ID1 ;
_bbfdg :=_be .MakeIndirectObject (_ggcg .Encrypt );_cbcd ._gcabc =_bbfdg ;_cbcd .addObject (_bbfdg );return nil ;};

// WriteString outputs the object as it is to be written to file.
func (_aegfb *pdfSignDictionary )WriteString ()string {_aegfb ._eaagb =0;_aegfb ._ccdgb =0;_aegfb ._aagaf =0;_aegfb ._eggcb =0;_ddccd :=_ec .NewBuffer (nil );_ddccd .WriteString ("\u003c\u003c");for _ ,_baadc :=range _aegfb .Keys (){_ccefd :=_aegfb .Get (_baadc );
switch _baadc {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ddccd .WriteString (_baadc .WriteString ());_ddccd .WriteString ("\u0020");_aegfb ._aagaf =_ddccd .Len ();_ddccd .WriteString (_ccefd .WriteString ());_ddccd .WriteString ("\u0020");_aegfb ._eggcb =_ddccd .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ddccd .WriteString (_baadc .WriteString ());_ddccd .WriteString ("\u0020");_aegfb ._eaagb =_ddccd .Len ();_ddccd .WriteString (_ccefd .WriteString ());_ddccd .WriteString ("\u0020");_aegfb ._ccdgb =_ddccd .Len ()-1;
default:_ddccd .WriteString (_baadc .WriteString ());_ddccd .WriteString ("\u0020");_ddccd .WriteString (_ccefd .WriteString ());};};_ddccd .WriteString ("\u003e\u003e");return _ddccd .String ();};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cfgc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_bdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_bgdcb :=&PdfColorPattern {};_eedd ,_fgaa :=objects [len (objects )-1].(*_be .PdfObjectName );if !_fgaa {_caf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_bgdcb .PatternName =*_eedd ;if len (objects )> 1{_gaaf :=objects [0:len (objects )-1];if _cfgc .UnderlyingCS ==nil {_caf .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_bdf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_eabg ,_dbfe :=_cfgc .UnderlyingCS .ColorFromPdfObjects (_gaaf );if _dbfe !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dbfe );
return nil ,_dbfe ;};_bgdcb .Color =_eabg ;};return _bgdcb ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_bffa *PdfReader )newPdfAnnotationPopupFromDict (_egc *_be .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_ecf :=PdfAnnotationPopup {};_ecf .Parent =_egc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_ecf .Open =_egc .Get ("\u004f\u0070\u0065\u006e");
return &_ecf ,nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bdbbf *PdfPageResources )GetExtGState (keyName _be .PdfObjectName )(_be .PdfObject ,bool ){if _bdbbf .ExtGState ==nil {return nil ,false ;};_eaacb ,_adgac :=_be .TraceToDirectObject (_bdbbf .ExtGState ).(*_be .PdfObjectDictionary );if !_adgac {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdbbf .ExtGState );
return nil ,false ;};if _eefb :=_eaacb .Get (keyName );_eefb !=nil {return _eefb ,true ;};return nil ,false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gfbgf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egege :=vals [0];_gcgfb :=[]float64 {_egege };
_eece ,_ggde :=_gfbgf .TintTransform .Evaluate (_gcgfb );if _ggde !=nil {_caf .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_ggde );
_caf .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gfbgf .TintTransform );return nil ,_ggde ;};_caf .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_eece ,_gfbgf .AlternateSpace );
_cfbg ,_ggde :=_gfbgf .AlternateSpace .ColorFromFloats (_eece );if _ggde !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_ggde );
return nil ,_ggde ;};return _cfbg ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_ccef *Image )GetParamsDict ()*_be .PdfObjectDictionary {_bgeed :=_be .MakeDict ();_bgeed .Set ("\u0057\u0069\u0064t\u0068",_be .MakeInteger (_ccef .Width ));_bgeed .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_be .MakeInteger (_ccef .Height ));_bgeed .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_be .MakeInteger (int64 (_ccef .ColorComponents )));
_bgeed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_be .MakeInteger (_ccef .BitsPerComponent ));return _bgeed ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_bgedf =keywords };

// ToInteger convert to an integer format.
func (_dccb *PdfColorDeviceGray )ToInteger (bits int )uint32 {_fdae :=_eg .Pow (2,float64 (bits ))-1;return uint32 (_fdae *_dccb .Val ());};func (_affc *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _affc ._gfcg };

// ToPdfObject implements interface PdfModel.
func (_bgff *PdfAnnotationPopup )ToPdfObject ()_be .PdfObject {_bgff .PdfAnnotation .ToPdfObject ();_gdbe :=_bgff ._dbf ;_bcdg :=_gdbe .PdfObject .(*_be .PdfObjectDictionary );_bcdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0050\u006f\u0070u\u0070"));
_bcdg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgff .Parent );_bcdg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bgff .Open );return _gdbe ;};func _decdd (_agcaa _be .PdfObject )(*PdfPageResourcesColorspaces ,error ){_fgfge :=&PdfPageResourcesColorspaces {};
if _deaf ,_ebfe :=_agcaa .(*_be .PdfIndirectObject );_ebfe {_fgfge ._ddeeaa =_deaf ;_agcaa =_deaf .PdfObject ;};_faead ,_aefcd :=_be .GetDict (_agcaa );if !_aefcd {return nil ,_bdf .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgfge .Names =[]string {};_fgfge .Colorspaces =map[string ]PdfColorspace {};for _ ,_eaeeb :=range _faead .Keys (){_dbbgf :=_faead .Get (_eaeeb );_fgfge .Names =append (_fgfge .Names ,string (_eaeeb ));_afceb ,_bbca :=NewPdfColorspaceFromPdfObject (_dbbgf );
if _bbca !=nil {return nil ,_bbca ;};_fgfge .Colorspaces [string (_eaeeb )]=_afceb ;};return _fgfge ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fcef *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_bfafe *PdfReader )newPdfAnnotationSquigglyFromDict (_gga *_be .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bdadc :=PdfAnnotationSquiggly {};_gddb ,_fec :=_bfafe .newPdfAnnotationMarkupFromDict (_gga );
if _fec !=nil {return nil ,_fec ;};_bdadc .PdfAnnotationMarkup =_gddb ;_bdadc .QuadPoints =_gga .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bdadc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcdccb *PdfSignature )ToPdfObject ()_be .PdfObject {_dcdac :=_bcdccb ._cfbge ;var _dbadb *_be .PdfObjectDictionary ;if _dbbf ,_gefda :=_dcdac .PdfObject .(*pdfSignDictionary );_gefda {_dbadb =_dbbf .PdfObjectDictionary ;}else {_dbadb =_dcdac .PdfObject .(*_be .PdfObjectDictionary );
};_dbadb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bcdccb .Type );_dbadb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_bcdccb .Filter );_dbadb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_bcdccb .SubFilter );_dbadb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bcdccb .ByteRange );
_dbadb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bcdccb .Contents );_dbadb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_bcdccb .Cert );_dbadb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcdccb .Name );_dbadb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_bcdccb .Reason );
_dbadb .SetIfNotNil ("\u004d",_bcdccb .M );_dbadb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_bcdccb .Reference );_dbadb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_bcdccb .Changes );_dbadb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_bcdccb .ContactInfo );
return _dcdac ;};func (_faeeg *PdfReader )newPdfAnnotationInkFromDict (_gdb *_be .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fgeg :=PdfAnnotationInk {};_aggb ,_ggf :=_faeeg .newPdfAnnotationMarkupFromDict (_gdb );if _ggf !=nil {return nil ,_ggf ;
};_fgeg .PdfAnnotationMarkup =_aggb ;_fgeg .InkList =_gdb .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fgeg .BS =_gdb .Get ("\u0042\u0053");return &_fgeg ,nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fedf *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dae ,_fdde :=color .(*PdfColorDeviceRGB );if !_fdde {_caf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dae ,nil ;};func _ggcdd ()string {_ccgeg .Lock ();defer _ccgeg .Unlock ();return _ffega };

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};var _adda =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_edc *PdfReader )newPdfActionSetOCGStateFromDict (_afg *_be .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_afg .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_afg .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dffc *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdebe :=vals [0];if _gdebe < 0.0||_gdebe > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdebe );
return nil ,ErrColorOutOfRange ;};_debcg :=NewPdfColorCalGray (_gdebe );return _debcg ,nil ;};func _aceeb (_fdeab *_be .PdfObjectDictionary )(*PdfShadingType7 ,error ){_gcbg :=PdfShadingType7 {};_fddd :=_fdeab .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fddd ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cfba ,_bgbdg :=_fddd .(*_be .PdfObjectInteger );if !_bgbdg {_caf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fddd );
return nil ,_be .ErrTypeError ;};_gcbg .BitsPerCoordinate =_cfba ;_fddd =_fdeab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fddd ==nil {_caf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cfba ,_bgbdg =_fddd .(*_be .PdfObjectInteger );if !_bgbdg {_caf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fddd );
return nil ,_be .ErrTypeError ;};_gcbg .BitsPerComponent =_cfba ;_fddd =_fdeab .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fddd ==nil {_caf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfba ,_bgbdg =_fddd .(*_be .PdfObjectInteger );if !_bgbdg {_caf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fddd );
return nil ,_be .ErrTypeError ;};_gcbg .BitsPerComponent =_cfba ;_fddd =_fdeab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fddd ==nil {_caf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_caagc ,_bgbdg :=_fddd .(*_be .PdfObjectArray );if !_bgbdg {_caf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fddd );
return nil ,_be .ErrTypeError ;};_gcbg .Decode =_caagc ;if _gbgfc :=_fdeab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gbgfc !=nil {_gcbg .Function =[]PdfFunction {};if _eafdf ,_ecdff :=_gbgfc .(*_be .PdfObjectArray );_ecdff {for _ ,_aage :=range _eafdf .Elements (){_aeafc ,_fdbdb :=_fgbbbc (_aage );
if _fdbdb !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdbdb );return nil ,_fdbdb ;};_gcbg .Function =append (_gcbg .Function ,_aeafc );
};}else {_gefbe ,_cabbb :=_fgbbbc (_gbgfc );if _cabbb !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cabbb );return nil ,_cabbb ;
};_gcbg .Function =append (_gcbg .Function ,_gefbe );};};return &_gcbg ,nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _be .PdfObject ;};func (_adabb *PdfReader )buildOutlineTree (_acbd _be .PdfObject ,_eaccbc *PdfOutlineTreeNode ,_agcgg *PdfOutlineTreeNode ,_edfae map[_be .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _edfae ==nil {_edfae =map[_be .PdfObject ]struct{}{};
};_edfae [_acbd ]=struct{}{};_abeg ,_eacfcb :=_acbd .(*_be .PdfIndirectObject );if !_eacfcb {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_acbd );
};_bggcb ,_dffea :=_abeg .PdfObject .(*_be .PdfObjectDictionary );if !_dffea {return nil ,nil ,_bdf .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_caf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bggcb ,_abeg ,_abeg );
if _cdee :=_bggcb .Get ("\u0054\u0069\u0074l\u0065");_cdee !=nil {_dcggb ,_abgfge :=_adabb .newPdfOutlineItemFromIndirectObject (_abeg );if _abgfge !=nil {return nil ,nil ,_abgfge ;};_dcggb .Parent =_eaccbc ;_dcggb .Prev =_agcgg ;_gcede :=_be .ResolveReference (_bggcb .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_gbfa :=_edfae [_gcede ];_gcede !=nil &&_gcede !=_abeg &&!_gbfa {if !_be .IsNullObject (_gcede ){_gdeac ,_aceee ,_geefg :=_adabb .buildOutlineTree (_gcede ,&_dcggb .PdfOutlineTreeNode ,nil ,_edfae );if _geefg !=nil {_caf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_geefg );
}else {_dcggb .First =_gdeac ;_dcggb .Last =_aceee ;};};};_edbac :=_be .ResolveReference (_bggcb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_cfeef :=_edfae [_edbac ];_edbac !=nil &&_edbac !=_abeg &&!_cfeef {if !_be .IsNullObject (_edbac ){_gcdb ,_cfdfe ,_fgba :=_adabb .buildOutlineTree (_edbac ,_eaccbc ,&_dcggb .PdfOutlineTreeNode ,_edfae );
if _fgba !=nil {_caf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_fgba );
}else {_dcggb .Next =_gcdb ;return &_dcggb .PdfOutlineTreeNode ,_cfdfe ,nil ;};};};return &_dcggb .PdfOutlineTreeNode ,&_dcggb .PdfOutlineTreeNode ,nil ;};_cgafe ,_gaeaf :=_afbab (_abeg );if _gaeaf !=nil {return nil ,nil ,_gaeaf ;};_cgafe .Parent =_eaccbc ;
if _ceeff :=_bggcb .Get ("\u0046\u0069\u0072s\u0074");_ceeff !=nil {_ceeff =_be .ResolveReference (_ceeff );if _ ,_gcab :=_edfae [_ceeff ];_ceeff !=nil &&_ceeff !=_abeg &&!_gcab {_ebbbc :=_be .TraceToDirectObject (_ceeff );if _ ,_ccfge :=_ebbbc .(*_be .PdfObjectNull );
!_ccfge &&_ebbbc !=nil {_bcage ,_beab ,_fdfb :=_adabb .buildOutlineTree (_ceeff ,&_cgafe .PdfOutlineTreeNode ,nil ,_edfae );if _fdfb !=nil {_caf .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_fdfb );
}else {_cgafe .First =_bcage ;_cgafe .Last =_beab ;};};};};return &_cgafe .PdfOutlineTreeNode ,&_cgafe .PdfOutlineTreeNode ,nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ecg .CharMetrics ;

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_eaece FieldFlag )Has (fl FieldFlag )bool {return (_eaece .Mask ()&fl .Mask ())> 0};

// ToPdfObject returns a stream object.
func (_dgbbd *XObjectForm )ToPdfObject ()_be .PdfObject {_cbbac :=_dgbbd ._fefdg ;_bbcff :=_cbbac .PdfObjectDictionary ;if _dgbbd .Filter !=nil {_bbcff =_dgbbd .Filter .MakeStreamDict ();_cbbac .PdfObjectDictionary =_bbcff ;};_bbcff .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bbcff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0046\u006f\u0072\u006d"));_bbcff .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_dgbbd .FormType );_bbcff .SetIfNotNil ("\u0042\u0042\u006f\u0078",_dgbbd .BBox );_bbcff .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_dgbbd .Matrix );
if _dgbbd .Resources !=nil {_bbcff .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dgbbd .Resources .ToPdfObject ());};_bbcff .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dgbbd .Group );_bbcff .SetIfNotNil ("\u0052\u0065\u0066",_dgbbd .Ref );
_bbcff .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_dgbbd .MetaData );_bbcff .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dgbbd .PieceInfo );_bbcff .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dgbbd .LastModified );
_bbcff .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dgbbd .StructParent );_bbcff .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dgbbd .StructParents );_bbcff .SetIfNotNil ("\u004f\u0050\u0049",_dgbbd .OPI );
_bbcff .SetIfNotNil ("\u004f\u0043",_dgbbd .OC );_bbcff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgbbd .Name );_bbcff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_be .MakeInteger (int64 (len (_dgbbd .Stream ))));_cbbac .Stream =_dgbbd .Stream ;return _cbbac ;
};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_cdbcg *PdfReader )Inspect ()(map[string ]int ,error ){return _cdbcg ._gfafb .Inspect ()};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfAnnotationSound )ToPdfObject ()_be .PdfObject {_gdc .PdfAnnotation .ToPdfObject ();_cbaf :=_gdc ._dbf ;_cbb :=_cbaf .PdfObject .(*_be .PdfObjectDictionary );_gdc .PdfAnnotationMarkup .appendToPdfDictionary (_cbb );_cbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0053\u006f\u0075n\u0064"));
_cbb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gdc .Sound );_cbb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gdc .Name );return _cbaf ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _be .PdfObject ;Dest _be .PdfObject ;H _be .PdfObject ;PA _be .PdfObject ;QuadPoints _be .PdfObject ;BS _be .PdfObject ;_ggee *PdfAction ;_aaca *PdfReader ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gggf *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_fbbg :=_bc .NewReader (img .getBase ());_edfb :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ccbe :=_bc .NewWriter (_edfb );
_adfge :=_eg .Pow (2,float64 (img .BitsPerComponent ))-1;_fdac :=make ([]uint32 ,3);var (_gfdf error ;_ecbef ,_gdad ,_bfaa ,_aefc ,_fgde ,_bdba float64 ;);for {_gfdf =_fbbg .ReadSamples (_fdac );if _gfdf ==_dga .EOF {break ;}else if _gfdf !=nil {return img ,_gfdf ;
};_ecbef =float64 (_fdac [0])/_adfge ;_gdad =float64 (_fdac [1])/_adfge ;_bfaa =float64 (_fdac [2])/_adfge ;_aefc =_gggf .Matrix [0]*_eg .Pow (_ecbef ,_gggf .Gamma [0])+_gggf .Matrix [3]*_eg .Pow (_gdad ,_gggf .Gamma [1])+_gggf .Matrix [6]*_eg .Pow (_bfaa ,_gggf .Gamma [2]);
_fgde =_gggf .Matrix [1]*_eg .Pow (_ecbef ,_gggf .Gamma [0])+_gggf .Matrix [4]*_eg .Pow (_gdad ,_gggf .Gamma [1])+_gggf .Matrix [7]*_eg .Pow (_bfaa ,_gggf .Gamma [2]);_bdba =_gggf .Matrix [2]*_eg .Pow (_ecbef ,_gggf .Gamma [0])+_gggf .Matrix [5]*_eg .Pow (_gdad ,_gggf .Gamma [1])+_gggf .Matrix [8]*_eg .Pow (_bfaa ,_gggf .Gamma [2]);
_ecbef =3.240479*_aefc +-1.537150*_fgde +-0.498535*_bdba ;_gdad =-0.969256*_aefc +1.875992*_fgde +0.041556*_bdba ;_bfaa =0.055648*_aefc +-0.204043*_fgde +1.057311*_bdba ;_ecbef =_eg .Min (_eg .Max (_ecbef ,0),1.0);_gdad =_eg .Min (_eg .Max (_gdad ,0),1.0);
_bfaa =_eg .Min (_eg .Max (_bfaa ,0),1.0);_fdac [0]=uint32 (_ecbef *_adfge );_fdac [1]=uint32 (_gdad *_adfge );_fdac [2]=uint32 (_bfaa *_adfge );if _gfdf =_ccbe .WriteSamples (_fdac );_gfdf !=nil {return img ,_gfdf ;};};return _fggd (&_edfb ),nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_abf :=&PdfAppender {_ffe :reader ._dbaba ,Reader :reader ,_gadd :reader ._gfafb ,_dba :reader ._afddg };_dcec ,_babd :=_abf ._ffe .Seek (0,_dga .SeekEnd );if _babd !=nil {return nil ,_babd ;
};_abf ._dfae =_dcec ;if _ ,_babd =_abf ._ffe .Seek (0,_dga .SeekStart );_babd !=nil {return nil ,_babd ;};_abf ._gaef ,_babd =NewPdfReader (_abf ._ffe );if _babd !=nil {return nil ,_babd ;};for _ ,_cfff :=range _abf .Reader .GetObjectNums (){if _abf ._gbdb < _cfff {_abf ._gbdb =_cfff ;
};};_abf ._fgefd =_abf ._gadd .GetXrefTable ();_abf ._fcdc =_abf ._gadd .GetXrefOffset ();_abf ._bac =append (_abf ._bac ,_abf ._gaef .PageList ...);_abf ._ccaa =make (map[_be .PdfObject ]struct{});_abf ._cagc =make (map[_be .PdfObject ]int64 );_abf ._agdf =make (map[_be .PdfObject ]struct{});
_abf ._gbca =_abf ._gaef .AcroForm ;_abf ._bcfd =_abf ._gaef .DSS ;return _abf ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_becgf *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _becgf .Base ==nil {return nil ,_bdf .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _becgf .Base .ColorToRGB (color );};

// String returns a string describing the font descriptor.
func (_bfba *PdfFontDescriptor )String ()string {var _efbfb []string ;if _bfba .FontName !=nil {_efbfb =append (_efbfb ,_bfba .FontName .String ());};if _bfba .FontFamily !=nil {_efbfb =append (_efbfb ,_bfba .FontFamily .String ());};if _bfba .fontFile !=nil {_efbfb =append (_efbfb ,_bfba .fontFile .String ());
};if _bfba ._fdfcg !=nil {_efbfb =append (_efbfb ,_bfba ._fdfcg .String ());};_efbfb =append (_efbfb ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bfba .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_bb .Join (_efbfb ,"\u002c\u0020"));
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gabdd *PdfShadingType4 )ToPdfObject ()_be .PdfObject {_gabdd .PdfShading .ToPdfObject ();_bdbbe ,_adfaf :=_gabdd .getShadingDict ();if _adfaf !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gabdd .BitsPerCoordinate !=nil {_bdbbe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gabdd .BitsPerCoordinate );};if _gabdd .BitsPerComponent !=nil {_bdbbe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gabdd .BitsPerComponent );
};if _gabdd .BitsPerFlag !=nil {_bdbbe .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gabdd .BitsPerFlag );};if _gabdd .Decode !=nil {_bdbbe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gabdd .Decode );};if _gabdd .Function !=nil {if len (_gabdd .Function )==1{_bdbbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gabdd .Function [0].ToPdfObject ());
}else {_gfbgdb :=_be .MakeArray ();for _ ,_ggefe :=range _gabdd .Function {_gfbgdb .Append (_ggefe .ToPdfObject ());};_bdbbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfbgdb );};};return _gabdd ._cgdab ;};func _ddfge ()string {_ccgeg .Lock ();
defer _ccgeg .Unlock ();return _bgedf };

// IsColored specifies if the pattern is colored.
func (_feffe *PdfTilingPattern )IsColored ()bool {if _feffe .PaintType !=nil &&*_feffe .PaintType ==1{return true ;};return false ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dbca *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _bdf .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_eacd :=field .V ;if _eacd ==nil {return _bdf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_ecgec :=pageNum -1;
if _ecgec < 0||_ecgec > len (_dbca ._bac )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ccedf :=_dbca .Reader .PageList [_ecgec ];field .P =_ccedf .ToPdfObject ();
if field .T ==nil ||field .T .String ()==""{field .T =_be .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_ccedf .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _dbca ._gbca ==_dbca ._gaef .AcroForm {_dbca ._gbca =_dbca .Reader .AcroForm ;
};_dbac :=_dbca ._gbca ;if _dbac ==nil {_dbac =NewPdfAcroForm ();};_dbac .SigFlags =_be .MakeInteger (3);if _dbac .NeedAppearances !=nil {_dbac .NeedAppearances =nil ;};_bcaa :=append (_dbac .AllFields (),field .PdfField );_dbac .Fields =&_bcaa ;_dbca .ReplaceAcroForm (_dbac );
_dbca .UpdatePage (_ccedf );_dbca ._bac [_ecgec ]=_ccedf ;if _ ,_dafc :=field .V .GetDocMDPPermission ();_dafc {_dbca ._ecgfd =NewPermissions (field .V );};return nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ac .SimpleEncoder ,error ){_bdbe ,_cbbdg :=_ecbg (basefont );if _cbbdg !=nil {return nil ,nil ,_cbbdg ;};_fccaa ,_dbcec :=_bdbe .Encoder ().(_ac .SimpleEncoder );
if !_dbcec {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bdbe .Encoder ());
};_ggeec :=make (map[rune ]_ac .GlyphName );for _cffff :=range alphabet {if _ ,_fged :=_fccaa .RuneToCharcode (_cffff );!_fged {_ ,_cbbf :=_bdbe ._afcd .Read (_cffff );if !_cbbf {_caf .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_cffff ,_cffff );
continue ;};_fdff ,_cbbf :=_ac .RuneToGlyph (_cffff );if !_cbbf {_caf .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_cffff ,_cffff );continue ;};if len (_ggeec )>=255{return nil ,nil ,_bdf .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_ggeec [_cffff ]=_fdff ;};};var (_bbdg []_ac .CharCode ;_bcdda []_ac .CharCode ;);for _acab :=_ac .CharCode (1);_acab <=0xff;_acab ++{_dgcc ,_cdeag :=_fccaa .CharcodeToRune (_acab );if !_cdeag {_bbdg =append (_bbdg ,_acab );continue ;};if _ ,_cdeag =alphabet [_dgcc ];
!_cdeag {_bcdda =append (_bcdda ,_acab );};};_egaa :=append (_bbdg ,_bcdda ...);if len (_egaa )< len (_ggeec ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_ggeec ),len (_egaa ));
};_abad :=make ([]rune ,0,len (_ggeec ));for _bbaeb :=range _ggeec {_abad =append (_abad ,_bbaeb );};_da .Slice (_abad ,func (_ffbc ,_gcgbg int )bool {return _abad [_ffbc ]< _abad [_gcgbg ]});_ccgd :=make (map[_ac .CharCode ]_ac .GlyphName ,len (_abad ));
for _ ,_fbfcc :=range _abad {_bgba :=_egaa [0];_egaa =_egaa [1:];_ccgd [_bgba ]=_ggeec [_fbfcc ];};_fccaa =_ac .ApplyDifferences (_fccaa ,_ccgd );_bdbe .SetEncoder (_fccaa );return &PdfFont {_egbcf :&_bdbe },_fccaa ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ccg :=NewPdfAnnotation ();_dcca :=&PdfAnnotationProjection {};_dcca .PdfAnnotation =_ccg ;_dcca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccg .SetContext (_dcca );return _dcca ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_eade *Outline )ToPdfObject ()_be .PdfObject {return _eade .ToPdfOutline ().ToPdfObject ()};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ecdbf *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ecdbf ._ffgg .(*PdfTilingPattern );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gegdg *PdfColorspaceDeviceCMYK )ToPdfObject ()_be .PdfObject {return _be .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cgbc *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_bdf .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_egbgc ,_eecbd :=_fg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bbbgb ,img ._ffedg );if _eecbd !=nil {return img ,_eecbd ;};_agdb ,_eecbd :=_fg .GrayConverter .Convert (_egbgc );
if _eecbd !=nil {return img ,_eecbd ;};return _fggd (_agdb .Base ()),nil ;};func _eecag ()string {_ccgeg .Lock ();defer _ccgeg .Unlock ();_aeee :=_aa .GetLicenseKey ();if len (_effb )> 0&&(_aeee .IsLicensed ()||_gafed ){return _effb ;};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cfgdd (),_aeee .TypeToString ());
};func (_ebbc *PdfReader )newPdfAnnotationProjectionFromDict (_cgf *_be .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cbgd :=&PdfAnnotationProjection {};_abeb ,_cadf :=_ebbc .newPdfAnnotationMarkupFromDict (_cgf );if _cadf !=nil {return nil ,_cadf ;
};_cbgd .PdfAnnotationMarkup =_abeb ;return _cbgd ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cedf *PdfColorCalRGB )GetNumComponents ()int {return 3};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_cgffe *PdfTransformParamsDocMDP )String ()string {return _c .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_cgffe .Type ,_cgffe .P ,_cgffe .V );};

// SetName sets the `Name` field of the signature.
func (_deca *PdfSignature )SetName (name string ){_deca .Name =_be .MakeString (name )};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gebf *PdfOutlineTreeNode )ToPdfObject ()_be .PdfObject {return _gebf .GetContext ().ToPdfObject ()};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// PdfVersion returns version of the PDF file.
func (_ceded *PdfReader )PdfVersion ()_be .Version {return _ceded ._gfafb .PdfVersion ()};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fagde *PdfOutlineItem )ToPdfObject ()_be .PdfObject {_acebd :=_fagde ._cbdfb ;_becfe :=_acebd .PdfObject .(*_be .PdfObjectDictionary );_becfe .Set ("\u0054\u0069\u0074l\u0065",_fagde .Title );if _fagde .A !=nil {_becfe .Set ("\u0041",_fagde .A );
};if _aegcf :=_becfe .Get ("\u0053\u0045");_aegcf !=nil {_becfe .Remove ("\u0053\u0045");};if _fagde .C !=nil {_becfe .Set ("\u0043",_fagde .C );};if _fagde .Dest !=nil {_becfe .Set ("\u0044\u0065\u0073\u0074",_fagde .Dest );};if _fagde .F !=nil {_becfe .Set ("\u0046",_fagde .F );
};if _fagde .Count !=nil {_becfe .Set ("\u0043\u006f\u0075n\u0074",_be .MakeInteger (*_fagde .Count ));};if _fagde .Next !=nil {_becfe .Set ("\u004e\u0065\u0078\u0074",_fagde .Next .ToPdfObject ());};if _fagde .First !=nil {_becfe .Set ("\u0046\u0069\u0072s\u0074",_fagde .First .ToPdfObject ());
};if _fagde .Prev !=nil {_becfe .Set ("\u0050\u0072\u0065\u0076",_fagde .Prev .GetContext ().GetContainingPdfObject ());};if _fagde .Last !=nil {_becfe .Set ("\u004c\u0061\u0073\u0074",_fagde .Last .GetContext ().GetContainingPdfObject ());};if _fagde .Parent !=nil {_becfe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fagde .Parent .GetContext ().GetContainingPdfObject ());
};return _acebd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fdcc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_cabe *PdfAppender )updateObjectsDeep (_bgdc _be .PdfObject ,_afae map[_be .PdfObject ]struct{}){if _afae ==nil {_afae =map[_be .PdfObject ]struct{}{};};if _ ,_fdag :=_afae [_bgdc ];
_fdag ||_bgdc ==nil {return ;};_afae [_bgdc ]=struct{}{};_geed :=_be .ResolveReferencesDeep (_bgdc ,_cabe ._dba );if _geed !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geed );};switch _ddeb :=_bgdc .(type ){case *_be .PdfIndirectObject :switch {case _ddeb .GetParser ()==_cabe ._gaef ._gfafb :return ;
case _ddeb .GetParser ()==_cabe .Reader ._gfafb :_bbdd ,_ :=_cabe ._gaef .GetIndirectObjectByNumber (int (_ddeb .ObjectNumber ));_cdb ,_ceea :=_bbdd .(*_be .PdfIndirectObject );if _ceea &&_cdb !=nil {if _cdb .PdfObject !=_ddeb .PdfObject &&_cdb .PdfObject .WriteString ()!=_ddeb .PdfObject .WriteString (){_cabe .addNewObject (_bgdc );
_cabe ._cagc [_bgdc ]=_ddeb .ObjectNumber ;};};default:_cabe .addNewObject (_bgdc );};_cabe .updateObjectsDeep (_ddeb .PdfObject ,_afae );case *_be .PdfObjectArray :for _ ,_dbde :=range _ddeb .Elements (){_cabe .updateObjectsDeep (_dbde ,_afae );};case *_be .PdfObjectDictionary :for _ ,_cef :=range _ddeb .Keys (){_cabe .updateObjectsDeep (_ddeb .Get (_cef ),_afae );
};case *_be .PdfObjectStreams :if _ddeb .GetParser ()!=_cabe ._gaef ._gfafb {for _ ,_afeff :=range _ddeb .Elements (){_cabe .updateObjectsDeep (_afeff ,_afae );};};case *_be .PdfObjectStream :switch {case _ddeb .GetParser ()==_cabe ._gaef ._gfafb :return ;
case _ddeb .GetParser ()==_cabe .Reader ._gfafb :if _acca ,_ffef :=_cabe ._gaef ._gfafb .LookupByReference (_ddeb .PdfObjectReference );_ffef ==nil {var _ecfe bool ;if _acff ,_bdadb :=_be .GetStream (_acca );_bdadb &&_ec .Equal (_acff .Stream ,_ddeb .Stream ){_ecfe =true ;
};if _dbeg ,_ecgg :=_be .GetDict (_acca );_ecfe &&_ecgg {_ecfe =_dbeg .WriteString ()==_ddeb .PdfObjectDictionary .WriteString ();};if _ecfe {return ;};};if _ddeb .ObjectNumber !=0{_cabe ._cagc [_bgdc ]=_ddeb .ObjectNumber ;};default:if _ ,_addg :=_cabe ._ccaa [_bgdc ];
!_addg {_cabe .addNewObject (_bgdc );};};_cabe .updateObjectsDeep (_ddeb .PdfObjectDictionary ,_afae );};};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _be .PdfObject ;_eedc []byte ;_dgagg *_be .PdfIndirectObject ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_be .PdfObjectString ;Q *_be .PdfObjectInteger ;DS *_be .PdfObjectString ;RV _be .PdfObject ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _be .PdfObjectName ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_adg :=NewPdfAction ();_fef :=&PdfActionGoTo3DView {};_fef .PdfAction =_adg ;_adg .SetContext (_fef );return _fef ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _be .PdfObject ;};func _bdfded (_cgcg *_be .PdfIndirectObject ,_acgg *_be .PdfObjectDictionary )(*DSS ,error ){if _cgcg ==nil {_cgcg =_be .MakeIndirectObject (nil );};_cgcg .PdfObject =_be .MakeDict ();
_ecaf :=map[string ]*VRI {};if _fbgd ,_fecc :=_be .GetDict (_acgg .Get ("\u0056\u0052\u0049"));_fecc {for _ ,_fdeb :=range _fbgd .Keys (){if _gbda ,_eedg :=_be .GetDict (_fbgd .Get (_fdeb ));_eedg {_ecaf [_bb .ToUpper (_fdeb .String ())]=_feaab (_gbda );
};};};return &DSS {Certs :_cedff (_acgg .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_cedff (_acgg .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_cedff (_acgg .Get ("\u0043\u0052\u004c\u0073")),VRI :_ecaf ,_dfaa :_cgcg },nil ;};var _ddbf =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cddd :=NewPdfAnnotation ();_gagg :=&PdfAnnotationRedact {};_gagg .PdfAnnotation =_cddd ;_gagg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cddd .SetContext (_gagg );return _gagg ;};func (_eca *PdfReader )newPdfAnnotationLinkFromDict (_ccfc *_be .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_fdb :=PdfAnnotationLink {};
_fdb .A =_ccfc .Get ("\u0041");_fdb .Dest =_ccfc .Get ("\u0044\u0065\u0073\u0074");_fdb .H =_ccfc .Get ("\u0048");_fdb .PA =_ccfc .Get ("\u0050\u0041");_fdb .QuadPoints =_ccfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fdb .BS =_ccfc .Get ("\u0042\u0053");
return &_fdb ,nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dfc :=NewPdfAnnotation ();_gaa :=&PdfAnnotationSound {};_gaa .PdfAnnotation =_dfc ;_gaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfc .SetContext (_gaa );return _gaa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbgce *PdfShadingType5 )ToPdfObject ()_be .PdfObject {_dbgce .PdfShading .ToPdfObject ();_ddefab ,_deddbc :=_dbgce .getShadingDict ();if _deddbc !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbgce .BitsPerCoordinate !=nil {_ddefab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dbgce .BitsPerCoordinate );};if _dbgce .BitsPerComponent !=nil {_ddefab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbgce .BitsPerComponent );
};if _dbgce .VerticesPerRow !=nil {_ddefab .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_dbgce .VerticesPerRow );};if _dbgce .Decode !=nil {_ddefab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbgce .Decode );
};if _dbgce .Function !=nil {if len (_dbgce .Function )==1{_ddefab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbgce .Function [0].ToPdfObject ());}else {_aeggb :=_be .MakeArray ();for _ ,_abfgc :=range _dbgce .Function {_aeggb .Append (_abfgc .ToPdfObject ());
};_ddefab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aeggb );};};return _dbgce ._cgdab ;};

// GetContainingPdfObject implements interface PdfModel.
func (_agcdf *PdfSignatureReference )GetContainingPdfObject ()_be .PdfObject {return _agcdf ._ceagf };

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fac :=NewPdfAction ();_ceg :=&PdfActionThread {};_ceg .PdfAction =_fac ;_fac .SetContext (_ceg );return _ceg ;};

// Register registers (caches) a model to primitive object relationship.
func (_fgcac *modelManager )Register (primitive _be .PdfObject ,model PdfModel ){_fgcac ._ddcf [model ]=primitive ;_fgcac ._fgdad [primitive ]=model ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_dge :=NewPdfAction ();_ea :=&PdfActionSubmitForm {};_ea .PdfAction =_dge ;_dge .SetContext (_ea );return _ea ;};

// GetStandardApplier gets currently used StandardApplier..
func (_ffeae *PdfWriter )GetStandardApplier ()StandardApplier {return _ffeae ._ebcef };

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_aecgb *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _aecgb .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// String returns a human readable description of `fontfile`.
func (_eabc *fontFile )String ()string {_fgdbe :="\u005b\u004e\u006f\u006e\u0065\u005d";if _eabc ._aabe !=nil {_fgdbe =_eabc ._aabe .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_eabc ._gddff ,_fgdbe );
};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_feaeeg int64 ;_fggdd int64 ;_bcbfag int64 ;_aceag int64 ;_edaea int64 ;_bcae int64 ;_badac byte ;_bbdbe int64 ;_dafcb int64 ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _be .PdfObject ;FontFamily _be .PdfObject ;FontStretch _be .PdfObject ;FontWeight _be .PdfObject ;Flags _be .PdfObject ;FontBBox _be .PdfObject ;ItalicAngle _be .PdfObject ;Ascent _be .PdfObject ;Descent _be .PdfObject ;
Leading _be .PdfObject ;CapHeight _be .PdfObject ;XHeight _be .PdfObject ;StemV _be .PdfObject ;StemH _be .PdfObject ;AvgWidth _be .PdfObject ;MaxWidth _be .PdfObject ;MissingWidth _be .PdfObject ;FontFile _be .PdfObject ;FontFile2 _be .PdfObject ;FontFile3 _be .PdfObject ;
CharSet _be .PdfObject ;_fadd int ;_bccdf float64 ;*fontFile ;_fdfcg *_ecg .TtfType ;

// Additional entries for CIDFonts
Style _be .PdfObject ;Lang _be .PdfObject ;FD _be .PdfObject ;CIDSet _be .PdfObject ;_ecgfc *_be .PdfIndirectObject ;};func (_cgdag *PdfWriter )makeOffSetReference (_edace int64 ){_eabb :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_edace );
_cgdag .writeString (_eabb );_cgdag .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};func (_gacfea *PdfWriter )writeAcroFormFields ()error {if _gacfea ._ggfa ==nil {return nil ;};_caf .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_begcc :=_gacfea ._ggfa .ToPdfObject ();_caf .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_begcc );_gacfea ._agced .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_begcc );_gggb :=_gacfea .addObjects (_begcc );
if _gggb !=nil {return _gggb ;};return nil ;};func (_deda *PdfReader )newPdfAnnotationPolyLineFromDict (_dddc *_be .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cdac :=PdfAnnotationPolyLine {};_ebd ,_fbg :=_deda .newPdfAnnotationMarkupFromDict (_dddc );
if _fbg !=nil {return nil ,_fbg ;};_cdac .PdfAnnotationMarkup =_ebd ;_cdac .Vertices =_dddc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cdac .LE =_dddc .Get ("\u004c\u0045");_cdac .BS =_dddc .Get ("\u0042\u0053");_cdac .IC =_dddc .Get ("\u0049\u0043");
_cdac .BE =_dddc .Get ("\u0042\u0045");_cdac .IT =_dddc .Get ("\u0049\u0054");_cdac .Measure =_dddc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cdac ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_bfbcc *PdfWriter )GetOptimizer ()Optimizer {return _bfbcc ._cbffc };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdebb pdfFontType3 )GetRuneMetrics (r rune )(_ecg .CharMetrics ,bool ){_acafg :=_fdebb .Encoder ();if _acafg ==nil {_caf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdebb );
return _ecg .CharMetrics {},false ;};_ffgdf ,_adabg :=_acafg .RuneToCharcode (r );if !_adabg {if r !=' '{_caf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdebb );
};return _ecg .CharMetrics {},false ;};_gbcf ,_dcbg :=_fdebb .GetCharMetrics (_ffgdf );return _gbcf ,_dcbg ;};

// ToPdfObject returns a stream object.
func (_fbdfb *XObjectImage )ToPdfObject ()_be .PdfObject {_fbddd :=_fbdfb ._fcaaa ;_feeeg :=_fbddd .PdfObjectDictionary ;if _fbdfb .Filter !=nil {_feeeg =_fbdfb .Filter .MakeStreamDict ();_fbddd .PdfObjectDictionary =_feeeg ;};_feeeg .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_feeeg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0049\u006d\u0061g\u0065"));_feeeg .Set ("\u0057\u0069\u0064t\u0068",_be .MakeInteger (*(_fbdfb .Width )));_feeeg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_be .MakeInteger (*(_fbdfb .Height )));
if _fbdfb .BitsPerComponent !=nil {_feeeg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_be .MakeInteger (*(_fbdfb .BitsPerComponent )));};if _fbdfb .ColorSpace !=nil {_feeeg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fbdfb .ColorSpace .ToPdfObject ());
};_feeeg .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_fbdfb .Intent );_feeeg .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_fbdfb .ImageMask );_feeeg .SetIfNotNil ("\u004d\u0061\u0073\u006b",_fbdfb .Mask );_gbafe :=_feeeg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _fbdfb .Decode ==nil &&_gbafe {_feeeg .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _fbdfb .Decode !=nil {_feeeg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbdfb .Decode );};_feeeg .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_fbdfb .Interpolate );
_feeeg .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_fbdfb .Alternatives );_feeeg .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_fbdfb .SMask );_feeeg .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_fbdfb .SMaskInData );
_feeeg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fbdfb .Matte );_feeeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbdfb .Name );_feeeg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fbdfb .StructParent );_feeeg .SetIfNotNil ("\u0049\u0044",_fbdfb .ID );
_feeeg .SetIfNotNil ("\u004f\u0050\u0049",_fbdfb .OPI );_feeeg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fbdfb .Metadata );_feeeg .SetIfNotNil ("\u004f\u0043",_fbdfb .OC );_feeeg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_be .MakeInteger (int64 (len (_fbdfb .Stream ))));
_fbddd .Stream =_fbdfb .Stream ;return _fbddd ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bcgce *PdfPageResources )GetContainingPdfObject ()_be .PdfObject {return _bcgce ._aggc };func _gbag (_acaa _be .PdfObject )(*PdfColorspaceLab ,error ){_ecea :=NewPdfColorspaceLab ();if _febce ,_bafbc :=_acaa .(*_be .PdfIndirectObject );_bafbc {_ecea ._acgag =_febce ;
};_acaa =_be .TraceToDirectObject (_acaa );_cbdd ,_fdef :=_acaa .(*_be .PdfObjectArray );if !_fdef {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cbdd .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_acaa =_be .TraceToDirectObject (_cbdd .Get (0));_dcdag ,_fdef :=_acaa .(*_be .PdfObjectName );if !_fdef {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_dcdag !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_acaa =_be .TraceToDirectObject (_cbdd .Get (1));_fbdga ,_fdef :=_acaa .(*_be .PdfObjectDictionary );
if !_fdef {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_acaa =_fbdga .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_acaa =_be .TraceToDirectObject (_acaa );_cbafa ,_fdef :=_acaa .(*_be .PdfObjectArray );if !_fdef {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _cbafa .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_eagf ,_edaa :=_cbafa .GetAsFloat64Slice ();if _edaa !=nil {return nil ,_edaa ;};_ecea .WhitePoint =_eagf ;_acaa =_fbdga .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _acaa !=nil {_acaa =_be .TraceToDirectObject (_acaa );_dfca ,_dcgb :=_acaa .(*_be .PdfObjectArray );
if !_dcgb {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _dfca .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gbbd ,_dcbd :=_dfca .GetAsFloat64Slice ();if _dcbd !=nil {return nil ,_dcbd ;};_ecea .BlackPoint =_gbbd ;};_acaa =_fbdga .Get ("\u0052\u0061\u006eg\u0065");if _acaa !=nil {_acaa =_be .TraceToDirectObject (_acaa );_daag ,_afeab :=_acaa .(*_be .PdfObjectArray );
if !_afeab {_caf .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _daag .Len ()!=4{_caf .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gegf ,_dcac :=_daag .GetAsFloat64Slice ();if _dcac !=nil {return nil ,_dcac ;};_ecea .Range =_gegf ;};return _ecea ,nil ;};func (_geaeb *PdfWriter )optimizeDocument ()error {if _geaeb ._ebcef ==nil {return nil ;
};_adaae ,_agcbc :=_be .GetDict (_geaeb ._ceece );if !_agcbc {return _bdf .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fbcde :=_de .Document {ID :[2]string {_geaeb ._fgbbf ,_geaeb ._abcda },Version :_geaeb ._dagdf ,Objects :_geaeb ._gadag ,Info :_adaae ,Crypt :_geaeb ._bbdaa ,UseHashBasedID :_geaeb ._ebdb };if _dfggf :=_geaeb ._ebcef .ApplyStandard (&_fbcde );_dfggf !=nil {return _dfggf ;
};_geaeb ._fgbbf ,_geaeb ._abcda =_fbcde .ID [0],_fbcde .ID [1];_geaeb ._dagdf =_fbcde .Version ;_geaeb ._gadag =_fbcde .Objects ;_geaeb ._ceece .PdfObject =_fbcde .Info ;_geaeb ._ebdb =_fbcde .UseHashBasedID ;_geaeb ._bbdaa =_fbcde .Crypt ;_dcaaa :=make (map[_be .PdfObject ]struct{},len (_geaeb ._gadag ));
for _ ,_gadfe :=range _geaeb ._gadag {_dcaaa [_gadfe ]=struct{}{};};_geaeb ._agafe =_dcaaa ;return nil ;};

// M returns the value of the magenta component of the color.
func (_bfgeg *PdfColorDeviceCMYK )M ()float64 {return _bfgeg [1]};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_efdf :=&PdfColorPatternType3 {};return _efdf };func (_cfdbf *PdfWriter )copyObjects (){_aeaad :=make (map[_be .PdfObject ]_be .PdfObject );_dcdbc :=make ([]_be .PdfObject ,0,len (_cfdbf ._gadag ));
_fffa :=make (map[_be .PdfObject ]struct{},len (_cfdbf ._gadag ));_cfeeb :=make (map[_be .PdfObject ]struct{});for _ ,_faaaae :=range _cfdbf ._gadag {_effgb :=_cfdbf .copyObject (_faaaae ,_aeaad ,_cfeeb ,false );if _ ,_degca :=_cfeeb [_faaaae ];_degca {continue ;
};_dcdbc =append (_dcdbc ,_effgb );_fffa [_effgb ]=struct{}{};};_cfdbf ._gadag =_dcdbc ;_cfdbf ._agafe =_fffa ;_cfdbf ._ceece =_cfdbf .copyObject (_cfdbf ._ceece ,_aeaad ,nil ,false ).(*_be .PdfIndirectObject );_cfdbf ._babab =_cfdbf .copyObject (_cfdbf ._babab ,_aeaad ,nil ,false ).(*_be .PdfIndirectObject );
if _cfdbf ._gcabc !=nil {_cfdbf ._gcabc =_cfdbf .copyObject (_cfdbf ._gcabc ,_aeaad ,nil ,false ).(*_be .PdfIndirectObject );};if _cfdbf ._fdgcf {_fcegb :=make (map[_be .PdfObject ]int64 );for _aegec ,_addfd :=range _cfdbf ._gcdda {if _ebag ,_cffgb :=_aeaad [_aegec ];
_cffgb {_fcegb [_ebag ]=_addfd ;}else {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_cfdbf ._gcdda =_fcegb ;};};

// Encoder returns the font's text encoder.
func (_bbag pdfFontType0 )Encoder ()_ac .TextEncoder {return _bbag ._bgbb };

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gabd *_be .PdfIndirectObject ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_gcga *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_dbbce :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_dgaeb ,_fdbb :=_gcga .GetNumPages ();if _fdbb !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdbb );
return nil ,_fdbb ;};for _edeae :=1;_edeae <=_dgaeb ;_edeae ++{_defc ,_bfcba :=_gcga .GetPage (_edeae );if _bfcba !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcba );return nil ,_bfcba ;};if opts .PageProcessCallback !=nil {_bfcba =opts .PageProcessCallback (_edeae ,_defc );
if _bfcba !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcba );return nil ,_bfcba ;};}else if opts .PageCallback !=nil {opts .PageCallback (_edeae ,_defc );};_bfcba =_dbbce .AddPage (_defc );if _bfcba !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcba );
return nil ,_bfcba ;};};_dbbce ._dagdf =_gcga .PdfVersion ();if !opts .SkipInfo {_fdfga ,_aebad :=_gcga .GetPdfInfo ();if _aebad !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aebad );}else {_dbbce ._ceece .PdfObject =_fdfga .ToPdfObject ();
};};if !opts .SkipMetadata {if _daaee :=_gcga ._dcdbf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_daaee !=nil {if _gbdaf :=_dbbce .SetCatalogMetadata (_daaee );_gbdaf !=nil {return nil ,_gbdaf ;};};};if !opts .SkipAcroForm {_aacbe :=_dbbce .SetForms (_gcga .AcroForm );
if _aacbe !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aacbe );return nil ,_aacbe ;};};if !opts .SkipOutlines {_dbbce .AddOutlineTree (_gcga .GetOutlineTree ());};if !opts .SkipOCProperties {_cfagb ,_abce :=_gcga .GetOCProperties ();
if _abce !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abce );}else {_abce =_dbbce .SetOCProperties (_cfagb );if _abce !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abce );};};};if !opts .SkipPageLabels {_gaegb ,_fdcdd :=_gcga .GetPageLabels ();
if _fdcdd !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdcdd );}else {_fdcdd =_dbbce .SetPageLabels (_gaegb );if _fdcdd !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdcdd );};};};if !opts .SkipNamedDests {_aegga ,_cdefcb :=_gcga .GetNamedDestinations ();
if _cdefcb !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdefcb );}else {_cdefcb =_dbbce .SetNamedDestinations (_aegga );if _cdefcb !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdefcb );};};};if !opts .SkipNameDictionary {_fgdadd ,_afacac :=_gcga .GetNameDictionary ();
if _afacac !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afacac );}else {_afacac =_dbbce .SetNameDictionary (_fgdadd );if _afacac !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afacac );};};};if !opts .SkipRotation &&_gcga .Rotate !=nil {if _accffb :=_dbbce .SetRotation (*_gcga .Rotate );
_accffb !=nil {_caf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_accffb );};};return &_dbbce ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_bdcdc :=PdfColorLab {l ,a ,b };return &_bdcdc };

// GetCharMetrics returns the char metrics for character code `code`.
func (_ceeag pdfFontType3 )GetCharMetrics (code _ac .CharCode )(_ecg .CharMetrics ,bool ){if _aacde ,_efbbg :=_ceeag ._afbae [code ];_efbbg {return _ecg .CharMetrics {Wx :_aacde },true ;};if _ecg .IsStdFont (_ecg .StdFontName (_ceeag ._abdd )){return _ecg .CharMetrics {Wx :250},true ;
};return _ecg .CharMetrics {},false ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _be .PdfObject ;};func _fcba (_gdcag *_be .PdfObjectDictionary )(*PdfShadingType2 ,error ){_eage :=PdfShadingType2 {};_dcgcd :=_gdcag .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dcgcd ==nil {_caf .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_acaeec ,_fbefg :=_dcgcd .(*_be .PdfObjectArray );if !_fbefg {_caf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcgcd );
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _acaeec .Len ()!=4{_caf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acaeec .Len ());
return nil ,_bdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_eage .Coords =_acaeec ;if _gedf :=_gdcag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gedf !=nil {_gedf =_be .TraceToDirectObject (_gedf );
_fcdgg ,_bcba :=_gedf .(*_be .PdfObjectArray );if !_bcba {_caf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gedf );return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_eage .Domain =_fcdgg ;};_dcgcd =_gdcag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dcgcd ==nil {_caf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_eage .Function =[]PdfFunction {};if _dcddb ,_cbccg :=_dcgcd .(*_be .PdfObjectArray );_cbccg {for _ ,_dfeac :=range _dcddb .Elements (){_cbgdd ,_fdbad :=_fgbbbc (_dfeac );if _fdbad !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdbad );
return nil ,_fdbad ;};_eage .Function =append (_eage .Function ,_cbgdd );};}else {_aceec ,_fcbb :=_fgbbbc (_dcgcd );if _fcbb !=nil {_caf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcbb );
return nil ,_fcbb ;};_eage .Function =append (_eage .Function ,_aceec );};if _ffbeg :=_gdcag .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ffbeg !=nil {_ffbeg =_be .TraceToDirectObject (_ffbeg );_dcbf ,_efabb :=_ffbeg .(*_be .PdfObjectArray );if !_efabb {_caf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffbeg );
return nil ,_be .ErrTypeError ;};if _dcbf .Len ()!=2{_caf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dcbf .Len ());return nil ,ErrInvalidAttribute ;
};_eage .Extend =_dcbf ;};return &_eage ,nil ;};var _gafed =false ;

// B returns the value of the B component of the color.
func (_afdd *PdfColorLab )B ()float64 {return _afdd [2]};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bgae *PdfColorspaceDeviceRGB )ToPdfObject ()_be .PdfObject {return _be .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_gdab *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_dcfc *PdfColorspaceICCBased )GetContainingPdfObject ()_be .PdfObject {return _dcfc ._cgee };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cadbad *PdfShadingType6 )ToPdfObject ()_be .PdfObject {_cadbad .PdfShading .ToPdfObject ();_egbcg ,_cbeeg :=_cadbad .getShadingDict ();if _cbeeg !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cadbad .BitsPerCoordinate !=nil {_egbcg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cadbad .BitsPerCoordinate );};if _cadbad .BitsPerComponent !=nil {_egbcg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cadbad .BitsPerComponent );
};if _cadbad .BitsPerFlag !=nil {_egbcg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cadbad .BitsPerFlag );};if _cadbad .Decode !=nil {_egbcg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cadbad .Decode );};if _cadbad .Function !=nil {if len (_cadbad .Function )==1{_egbcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cadbad .Function [0].ToPdfObject ());
}else {_dceae :=_be .MakeArray ();for _ ,_gfdca :=range _cadbad .Function {_dceae .Append (_gfdca .ToPdfObject ());};_egbcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dceae );};};return _cadbad ._cgdab ;};

// Add appends an outline item as a child of the current outline item.
func (_bfefd *OutlineItem )Add (item *OutlineItem ){_bfefd .Entries =append (_bfefd .Entries ,item )};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cbf :=NewPdfAction ();_bec :=&PdfActionSound {};_bec .PdfAction =_cbf ;_cbf .SetContext (_bec );return _bec ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _be .PdfObject ;IC _be .PdfObject ;RO _be .PdfObject ;OverlayText _be .PdfObject ;Repeat _be .PdfObject ;DA _be .PdfObject ;Q _be .PdfObject ;};func (_aeg *PdfReader )newPdfActionImportDataFromDict (_faee *_be .PdfObjectDictionary )(*PdfActionImportData ,error ){_bbbc ,_dacc :=_ed (_faee .Get ("\u0046"));
if _dacc !=nil {return nil ,_dacc ;};return &PdfActionImportData {F :_bbbc },nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_adcdc *PdfPageResources )SetXObjectByName (keyName _be .PdfObjectName ,stream *_be .PdfObjectStream )error {if _adcdc .XObject ==nil {_adcdc .XObject =_be .MakeDict ();};_cdbad :=_be .TraceToDirectObject (_adcdc .XObject );_dafed ,_bfgeb :=_cdbad .(*_be .PdfObjectDictionary );
if !_bfgeb {_caf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_adcdc .XObject ,_cdbad );return _bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dafed .Set (keyName ,stream );return nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_bfbcb *OutlineItem )ToPdfObject ()_be .PdfObject {_gbedf ,_ :=_bfbcb .ToPdfOutlineItem ();return _gbedf .ToPdfObject ();};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_eeed *PdfRectangle )Normalize (){if _eeed .Llx > _eeed .Urx {_eeed .Llx ,_eeed .Urx =_eeed .Urx ,_eeed .Llx ;};if _eeed .Lly > _eeed .Ury {_eeed .Lly ,_eeed .Ury =_eeed .Ury ,_eeed .Lly ;};};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_bgdf *BorderStyle )GetPdfName ()string {switch *_bgdf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};func (_abbgb *PdfWriter )setWriter (_cdfdf _dga .Writer ){_abbgb ._cdaga =_abbgb ._cegd ;_abbgb ._ddfgf =_ca .NewWriter (_cdfdf );};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_cdacg *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _cdacg .Range };

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_be .PdfObjectArray ;Domain *_be .PdfObjectArray ;Function []PdfFunction ;Extend *_be .PdfObjectArray ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgfbd *PdfShadingType2 )ToPdfObject ()_be .PdfObject {_fgfbd .PdfShading .ToPdfObject ();_ccbd ,_adecb :=_fgfbd .getShadingDict ();if _adecb !=nil {_caf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ccbd ==nil {_caf .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _fgfbd .Coords !=nil {_ccbd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fgfbd .Coords );
};if _fgfbd .Domain !=nil {_ccbd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgfbd .Domain );};if _fgfbd .Function !=nil {if len (_fgfbd .Function )==1{_ccbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgfbd .Function [0].ToPdfObject ());
}else {_adcce :=_be .MakeArray ();for _ ,_dddgf :=range _fgfbd .Function {_adcce .Append (_dddgf .ToPdfObject ());};_ccbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adcce );};};if _fgfbd .Extend !=nil {_ccbd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fgfbd .Extend );
};return _fgfbd ._cgdab ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cfaec ,_agag :=_dag .Open (filePath );if _agag !=nil {_caf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_agag );
return nil ,_agag ;};defer _cfaec .Close ();return NewCompositePdfFontFromTTF (_cfaec );};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_fbdg *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// HasFontByName checks if has font resource by name.
func (_beeed *PdfPage )HasFontByName (name _be .PdfObjectName )bool {_dffgb ,_feabc :=_beeed .Resources .Font .(*_be .PdfObjectDictionary );if !_feabc {return false ;};if _fafa :=_dffgb .Get (name );_fafa !=nil {return true ;};return false ;};const (BorderStyleSolid BorderStyle =iota ;
BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_gfca :=&PdfShadingPatternType2 {};_gfca .Matrix =_be .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_gfca .PdfPattern =&PdfPattern {};_gfca .PdfPattern .PatternType =int64 (*_be .MakeInteger (2));
_gfca .PdfPattern ._ffgg =_gfca ;_gfca .PdfPattern ._fceaa =_be .MakeIndirectObject (_be .MakeDict ());return _gfca ;};func (_eeggf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func (_gccfb SignatureValidationResult )String ()string {var _bbdag _ec .Buffer ;
_bbdag .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gccfb .Name ));if _gccfb .Date ._feaeeg > 0{_bbdag .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gccfb .Date .ToGoTime ().String ()));}else {_bbdag .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gccfb .Reason )> 0{_bbdag .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gccfb .Reason ));}else {_bbdag .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_gccfb .Location )> 0{_bbdag .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gccfb .Location ));}else {_bbdag .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gccfb .ContactInfo )> 0{_bbdag .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gccfb .ContactInfo ));}else {_bbdag .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_bbdag .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gccfb .Fields )));if _gccfb .IsSigned {_bbdag .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_bbdag .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _gccfb .IsVerified {_bbdag .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_bbdag .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _gccfb .IsTrusted {_bbdag .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_bbdag .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_gccfb .GeneralizedTime .IsZero (){_bbdag .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gccfb .GeneralizedTime .String ()));
};if _gccfb .DiffResults !=nil {_bbdag .WriteString (_c .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_gccfb .DiffResults .IsPermitted ()));if len (_gccfb .DiffResults .Warnings )> 0{_bbdag .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_cffgf :=range _gccfb .DiffResults .Warnings {_bbdag .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_cffgf ));};};if len (_gccfb .DiffResults .Errors )> 0{_bbdag .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_aaaec :=range _gccfb .DiffResults .Errors {_bbdag .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_aaaec ));};};};return _bbdag .String ();};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dfeea *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgee ,_egcaf :=color .(*PdfColorPattern );if !_egcaf {_caf .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _dgee .Color ==nil {return color ,nil ;};if _dfeea .UnderlyingCS ==nil {return nil ,_bdf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _dfeea .UnderlyingCS .ColorToRGB (_dgee .Color );};func _cgdd ()string {_ccgeg .Lock ();defer _ccgeg .Unlock ();if len (_fgdeb )> 0{return _fgdeb ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func (_ebgea *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _bdefg :=_ebgea ._gfcg ;_bdefg !=nil {return _bdefg ;};return _ebgea ._eede ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _be .PdfObject ;V _be .PdfObject ;};func (_eceae *PdfReader )newPdfOutlineItemFromIndirectObject (_dbfa *_be .PdfIndirectObject )(*PdfOutlineItem ,error ){_fbbcfb ,_ebbgb :=_dbfa .PdfObject .(*_be .PdfObjectDictionary );
if !_ebbgb {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_geeab :=NewPdfOutlineItem ();_fada :=_fbbcfb .Get ("\u0054\u0069\u0074l\u0065");
if _fada ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_fggdf ,_fdaed :=_be .GetString (_fada );if !_fdaed {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_fada );};_geeab .Title =_fggdf ;if _ggfba :=_fbbcfb .Get ("\u0043\u006f\u0075n\u0074");
_ggfba !=nil {_gcbc ,_edgcg :=_ggfba .(*_be .PdfObjectInteger );if !_edgcg {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_ggfba );};_bdcc :=int64 (*_gcbc );
_geeab .Count =&_bdcc ;};if _fegf :=_fbbcfb .Get ("\u0044\u0065\u0073\u0074");_fegf !=nil {_geeab .Dest =_be .ResolveReference (_fegf );if !_eceae ._eaff {_dgdcg :=_eceae .traverseObjectData (_geeab .Dest );if _dgdcg !=nil {return nil ,_dgdcg ;};};};if _adfcc :=_fbbcfb .Get ("\u0041");
_adfcc !=nil {_geeab .A =_be .ResolveReference (_adfcc );if !_eceae ._eaff {_egbad :=_eceae .traverseObjectData (_geeab .A );if _egbad !=nil {return nil ,_egbad ;};};};if _dadc :=_fbbcfb .Get ("\u0053\u0045");_dadc !=nil {_geeab .SE =nil ;};if _dafca :=_fbbcfb .Get ("\u0043");
_dafca !=nil {_geeab .C =_be .ResolveReference (_dafca );};if _ebeff :=_fbbcfb .Get ("\u0046");_ebeff !=nil {_geeab .F =_be .ResolveReference (_ebeff );};return _geeab ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_cfb :=NewPdfAnnotation ();_becc :=&PdfAnnotationUnderline {};_becc .PdfAnnotation =_cfb ;_becc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfb .SetContext (_becc );return _becc ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_fgecg *PdfReader )IsEncrypted ()(bool ,error ){return _fgecg ._gfafb .IsEncrypted ()};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_befb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _befb .UnderlyingCS .GetNumComponents ();};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ccadf *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdgcd ,_geeb :=color .(*PdfColorDeviceGray );if !_geeb {_caf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cdgcd ),float64 (*_cdgcd ),float64 (*_cdgcd )),nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_ddfg *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_cfdf :=_ddfg .fill (provider ,appGen );if _cfdf !=nil {return _cfdf ;};if _ ,_bgdbb :=provider .(FieldImageProvider );_bgdbb {_cfdf =_ddfg .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _cfdf ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _be .PdfObject ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_gcgda *PdfWriter )SetDocInfo (info *PdfInfo ){_gcgda .setDocInfo (info .ToPdfObject ())};type pdfFontType0 struct{fontCommon ;_egagc *_be .PdfIndirectObject ;_bgbb _ac .TextEncoder ;Encoding _be .PdfObject ;DescendantFont *PdfFont ;_cgfe *_gde .CMap ;
};func (_effd *PdfFilespec )getDict ()*_be .PdfObjectDictionary {if _eefe ,_eaaca :=_effd ._fbfa .(*_be .PdfIndirectObject );_eaaca {_cdfa ,_egef :=_eefe .PdfObject .(*_be .PdfObjectDictionary );if !_egef {return nil ;};return _cdfa ;}else if _eege ,_bcde :=_effd ._fbfa .(*_be .PdfObjectDictionary );
_bcde {return _eege ;}else {_caf .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_effd ._fbfa );
return nil ;};};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _be .PdfObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_fdab =author };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fefge _be .PdfObject ;};func _eegf (_acbb *_be .PdfObjectDictionary )(*PdfFieldButton ,error ){_dgca :=&PdfFieldButton {};_dgca .PdfField =NewPdfField ();_dgca .PdfField .SetContext (_dgca );
_dgca .Opt ,_ =_be .GetArray (_acbb .Get ("\u004f\u0070\u0074"));_eaccb :=NewPdfAnnotationWidget ();_eaccb .A ,_ =_be .GetDict (_acbb .Get ("\u0041"));_eaccb .AP ,_ =_be .GetDict (_acbb .Get ("\u0041\u0050"));_eaccb .SetContext (_dgca );_dgca .PdfField .Annotations =append (_dgca .PdfField .Annotations ,_eaccb );
return _dgca ,nil ;};func (_cge *PdfReader )newPdfActionURIFromDict (_geg *_be .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_geg .Get ("\u0055\u0052\u0049"),IsMap :_geg .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_be .PdfObjectString ;Q *_be .PdfObjectInteger ;DS *_be .PdfObjectString ;RV _be .PdfObject ;MaxLen *_be .PdfObjectInteger ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_dddad []_be .PdfObject )([]_be .PdfObject ,error );};func (_ccbf *PdfWriter )flushWriter ()error {if _ccbf ._dfffe ==nil {_ccbf ._dfffe =_ccbf ._ddfgf .Flush ();};return _ccbf ._dfffe ;};func (_dbada *pdfFontSimple )updateStandard14Font (){_dbgc ,_facbc :=_dbada .Encoder ().(_ac .SimpleEncoder );
if !_facbc {_caf .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dbada .Encoder (),_dbada );return ;};
_ecbeg :=_dbgc .Charcodes ();_dbada ._gcdgc =make (map[_ac .CharCode ]float64 ,len (_ecbeg ));for _ ,_bfdbb :=range _ecbeg {_efgb ,_ :=_dbgc .CharcodeToRune (_bfdbb );_egdd ,_ :=_dbada ._afcd .Read (_efgb );_dbada ._gcdgc [_bfdbb ]=_egdd .Wx ;};};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _dga .ReadSeeker )(*PdfFont ,error ){_ddgbe ,_abbgd :=_fd .ReadAll (r );if _abbgd !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_abbgd );
return nil ,_abbgd ;};_bbbf ,_abbgd :=_ecg .TtfParse (_ec .NewReader (_ddgbe ));if _abbgd !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_abbgd );
return nil ,_abbgd ;};_adgef :=&pdfCIDFontType2 {fontCommon :fontCommon {_cfcgc :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_be .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_bbbf .Widths )<=0{return nil ,_bdf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_edbg :=1000.0/float64 (_bbbf .UnitsPerEm );_feaad :=_edbg *float64 (_bbbf .Widths [0]);_dadb :=make (map[rune ]int );_fadf :=make (map[_ecg .GID ]int );_gcad :=_ecg .GID (len (_bbbf .Widths ));for _dfdcce ,_fefgeb :=range _bbbf .Chars {if _fefgeb > _gcad -1{continue ;
};_cdgf :=int (_edbg *float64 (_bbbf .Widths [_fefgeb ]));_dadb [_dfdcce ]=_cdgf ;_fadf [_fefgeb ]=_cdgf ;};_adgef ._ffeff =_dadb ;_adgef .DW =_be .MakeInteger (int64 (_feaad ));_gbcbc :=_ccfe (_fadf ,uint16 (_gcad ));_adgef .W =_be .MakeIndirectObject (_gbcbc );
_egcfa :=_be .MakeDict ();_egcfa .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_be .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_egcfa .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_be .MakeString ("\u0041\u0064\u006fb\u0065"));
_egcfa .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_be .MakeInteger (0));_adgef .CIDSystemInfo =_egcfa ;_eaecd :=&PdfFontDescriptor {FontName :_be .MakeName (_bbbf .PostScriptName ),Ascent :_be .MakeFloat (_edbg *float64 (_bbbf .TypoAscender )),Descent :_be .MakeFloat (_edbg *float64 (_bbbf .TypoDescender )),CapHeight :_be .MakeFloat (_edbg *float64 (_bbbf .CapHeight )),FontBBox :_be .MakeArrayFromFloats ([]float64 {_edbg *float64 (_bbbf .Xmin ),_edbg *float64 (_bbbf .Ymin ),_edbg *float64 (_bbbf .Xmax ),_edbg *float64 (_bbbf .Ymax )}),ItalicAngle :_be .MakeFloat (_bbbf .ItalicAngle ),MissingWidth :_be .MakeFloat (_feaad )};
_cfebf ,_abbgd :=_be .MakeStream (_ddgbe ,_be .NewFlateEncoder ());if _abbgd !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_abbgd );
return nil ,_abbgd ;};_cfebf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_be .MakeInteger (int64 (len (_ddgbe ))));_eaecd .FontFile2 =_cfebf ;if _bbbf .Bold {_eaecd .StemV =_be .MakeInteger (120);}else {_eaecd .StemV =_be .MakeInteger (70);
};_ebedc :=_bbcba ;if _bbbf .IsFixedPitch {_ebedc |=_ggaa ;};if _bbbf .ItalicAngle !=0{_ebedc |=_cfga ;};_eaecd .Flags =_be .MakeInteger (int64 (_ebedc ));_adgef ._abdd =_bbbf .PostScriptName ;_adgef ._gfcg =_eaecd ;_ddgg :=pdfFontType0 {fontCommon :fontCommon {_cfcgc :"\u0054\u0079\u0070e\u0030",_abdd :_bbbf .PostScriptName },DescendantFont :&PdfFont {_egbcf :_adgef },Encoding :_be .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bgbb :_bbbf .NewEncoder ()};
if len (_bbbf .Chars )> 0{_ecgfg :=make (map[_gde .CharCode ]rune ,len (_bbbf .Chars ));for _cfdg ,_egaad :=range _bbbf .Chars {_geab :=_gde .CharCode (_egaad );if _gaaed ,_debb :=_ecgfg [_geab ];!_debb ||(_debb &&_gaaed > _cfdg ){_ecgfg [_geab ]=_cfdg ;
};};_ddgg ._baag =_gde .NewToUnicodeCMap (_ecgfg );};_bbeg :=PdfFont {_egbcf :&_ddgg };return &_bbeg ,nil ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_cebgb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cbdc :=NewPdfOutlineItem ();_cbdc .Title =_be .MakeEncodedString (_cebgb .Title ,true );_cbdc .Dest =_cebgb .Dest .ToPdfObject ();var _bcaf []*PdfOutlineItem ;var _ffcbg int64 ;var _bggce *PdfOutlineItem ;
for _ ,_dadbf :=range _cebgb .Entries {_dcgggf ,_aeaec :=_dadbf .ToPdfOutlineItem ();_dcgggf .Parent =&_cbdc .PdfOutlineTreeNode ;if _bggce !=nil {_bggce .Next =&_dcgggf .PdfOutlineTreeNode ;_dcgggf .Prev =&_bggce .PdfOutlineTreeNode ;};_bcaf =append (_bcaf ,_dcgggf );
_ffcbg +=_aeaec ;_bggce =_dcgggf ;};_dcde :=len (_bcaf );_ffcbg +=int64 (_dcde );if _dcde > 0{_cbdc .First =&_bcaf [0].PdfOutlineTreeNode ;_cbdc .Last =&_bcaf [_dcde -1].PdfOutlineTreeNode ;_cbdc .Count =&_ffcbg ;};return _cbdc ,_ffcbg ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fbce *PdfShading )GetContext ()PdfModel {return _fbce ._gabe };

// GetNumComponents returns the number of color components (1 for grayscale).
func (_ebdgg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_acgag *_be .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_ceae *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_fceb *PdfReader )newPdfFieldFromIndirectObject (_dgdcb *_be .PdfIndirectObject ,_cbaca *PdfField )(*PdfField ,error ){if _eafb ,_ebgd :=_fceb ._cfgbc .GetModelFromPrimitive (_dgdcb ).(*PdfField );
_ebgd {return _eafb ,nil ;};_ecaa ,_ffgde :=_be .GetDict (_dgdcb );if !_ffgde {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aeaf :=NewPdfField ();_aeaf ._ffcf =_dgdcb ;_aeaf ._ffcf .PdfObject =_ecaa ;if _aafdc ,_edec :=_be .GetName (_ecaa .Get ("\u0046\u0054"));_edec {_aeaf .FT =_aafdc ;};if _cbaca !=nil {_aeaf .Parent =_cbaca ;};_aeaf .T ,_ =_ecaa .Get ("\u0054").(*_be .PdfObjectString );
_aeaf .TU ,_ =_ecaa .Get ("\u0054\u0055").(*_be .PdfObjectString );_aeaf .TM ,_ =_ecaa .Get ("\u0054\u004d").(*_be .PdfObjectString );_aeaf .Ff ,_ =_ecaa .Get ("\u0046\u0066").(*_be .PdfObjectInteger );_aeaf .V =_ecaa .Get ("\u0056");_aeaf .DV =_ecaa .Get ("\u0044\u0056");
_aeaf .AA =_ecaa .Get ("\u0041\u0041");if DA :=_ecaa .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_be .GetString (DA );_aeaf .VariableText =&VariableText {DA :DA };Q ,_ :=_ecaa .Get ("\u0051").(*_be .PdfObjectInteger );DS ,_ :=_ecaa .Get ("\u0044\u0053").(*_be .PdfObjectString );
RV :=_ecaa .Get ("\u0052\u0056");_aeaf .VariableText .Q =Q ;_aeaf .VariableText .DS =DS ;_aeaf .VariableText .RV =RV ;};_bcced :=_aeaf .FT ;if _bcced ==nil &&_cbaca !=nil {_bcced =_cbaca .FT ;};if _bcced !=nil {switch *_bcced {case "\u0054\u0078":_edcc ,_gaeea :=_gdcaf (_ecaa );
if _gaeea !=nil {return nil ,_gaeea ;};_edcc .PdfField =_aeaf ;_aeaf ._dgcbe =_edcc ;case "\u0043\u0068":_gaggg ,_cfcde :=_dcafe (_ecaa );if _cfcde !=nil {return nil ,_cfcde ;};_gaggg .PdfField =_aeaf ;_aeaf ._dgcbe =_gaggg ;case "\u0042\u0074\u006e":_aegd ,_ffbfb :=_eegf (_ecaa );
if _ffbfb !=nil {return nil ,_ffbfb ;};_aegd .PdfField =_aeaf ;_aeaf ._dgcbe =_aegd ;case "\u0053\u0069\u0067":_dced ,_dddab :=_fceb .newPdfFieldSignatureFromDict (_ecaa );if _dddab !=nil {return nil ,_dddab ;};_dced .PdfField =_aeaf ;_aeaf ._dgcbe =_dced ;
default:_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_aeaf .FT );return nil ,_bdf .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _gefg ,_eaeb :=_be .GetName (_ecaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eaeb {if *_gefg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cegfe ,_cfedg :=_fceb .newPdfAnnotationFromIndirectObject (_dgdcb );if _cfedg !=nil {return nil ,_cfedg ;
};_caff ,_fggga :=_cegfe .GetContext ().(*PdfAnnotationWidget );if !_fggga {return nil ,_bdf .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_caff ._bge =_aeaf ;_caff .Parent =_aeaf ._ffcf ;
_aeaf .Annotations =append (_aeaf .Annotations ,_caff );return _aeaf ,nil ;};};_deggd :=true ;if _egfgd ,_dedbc :=_be .GetArray (_ecaa .Get ("\u004b\u0069\u0064\u0073"));_dedbc {_edb :=make ([]*_be .PdfIndirectObject ,0,_egfgd .Len ());for _ ,_feac :=range _egfgd .Elements (){_bcccf ,_dbed :=_be .GetIndirect (_feac );
if !_dbed {_febd ,_eeadc :=_be .GetStream (_feac );if _eeadc &&_febd .PdfObjectDictionary !=nil {_afbaa ,_bccbb :=_be .GetNameVal (_febd .Get ("\u0054\u0079\u0070\u0065"));if _bccbb &&_afbaa =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_caf .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_bdf .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bdcb ,_fdgbe :=_be .GetDict (_bcccf );
if !_fdgbe {return nil ,ErrTypeCheck ;};if _deggd {_deggd =!_febe (_bdcb );};_edb =append (_edb ,_bcccf );};for _ ,_abaa :=range _edb {if _deggd {_badfd ,_fgfe :=_fceb .newPdfAnnotationFromIndirectObject (_abaa );if _fgfe !=nil {_caf .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fgfe );
return nil ,_fgfe ;};_cfebe ,_efbgbc :=_badfd ._ef .(*PdfAnnotationWidget );if !_efbgbc {return nil ,ErrTypeCheck ;};_cfebe ._bge =_aeaf ;_aeaf .Annotations =append (_aeaf .Annotations ,_cfebe );}else {_bgaa ,_gcdcb :=_fceb .newPdfFieldFromIndirectObject (_abaa ,_aeaf );
if _gcdcb !=nil {_caf .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_gcdcb );return nil ,_gcdcb ;};_aeaf .Kids =append (_aeaf .Kids ,_bgaa );
};};};return _aeaf ,nil ;};func _ed (_ecge _be .PdfObject )(*PdfFilespec ,error ){if _ecge ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ecge );};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ddf PdfModel ;Type _be .PdfObject ;S _be .PdfObject ;Next _be .PdfObject ;_deb *_be .PdfIndirectObject ;};

// L returns the value of the L component of the color.
func (_bebd *PdfColorLab )L ()float64 {return _bebd [0]};

// ToPdfObject implements interface PdfModel.
func (_dcba *PdfAnnotationScreen )ToPdfObject ()_be .PdfObject {_dcba .PdfAnnotation .ToPdfObject ();_fea :=_dcba ._dbf ;_dcgd :=_fea .PdfObject .(*_be .PdfObjectDictionary );_dcgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dcgd .SetIfNotNil ("\u0054",_dcba .T );_dcgd .SetIfNotNil ("\u004d\u004b",_dcba .MK );_dcgd .SetIfNotNil ("\u0041",_dcba .A );_dcgd .SetIfNotNil ("\u0041\u0041",_dcba .AA );return _fea ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_bbbgb []byte ;_ffedg []float64 ;};func (_dddd *PdfReader )newPdfActionTransFromDict (_ddc *_be .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ddc .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// Height returns the height of `rect`.
func (_eedgb *PdfRectangle )Height ()float64 {return _eg .Abs (_eedgb .Ury -_eedgb .Lly )};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_fddb *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// Val returns the color value.
func (_fcec *PdfColorDeviceGray )Val ()float64 {return float64 (*_fcec )};func _fgce (_gcec _be .PdfObject )(string ,error ){_gcec =_be .TraceToDirectObject (_gcec );switch _aeceac :=_gcec .(type ){case *_be .PdfObjectString :return _aeceac .Str (),nil ;
case *_be .PdfObjectStream :_cbaba ,_eaefg :=_be .DecodeStream (_aeceac );if _eaefg !=nil {return "",_eaefg ;};return string (_cbaba ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_gcec );
};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_cfa *PdfReader )newPdfAnnotationStampFromDict (_dcgge *_be .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_gfga :=PdfAnnotationStamp {};_febb ,_cfbe :=_cfa .newPdfAnnotationMarkupFromDict (_dcgge );if _cfbe !=nil {return nil ,_cfbe ;
};_gfga .PdfAnnotationMarkup =_febb ;_gfga .Name =_dcgge .Get ("\u004e\u0061\u006d\u0065");return &_gfga ,nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_ccfd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbda :=vals [0];if _dbda < 0.0||_dbda > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbda );
return nil ,ErrColorOutOfRange ;};_efde :=vals [1];if _efde < 0.0||_efde > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_efde );return nil ,ErrColorOutOfRange ;
};_eaaf :=vals [2];if _eaaf < 0.0||_eaaf > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eaaf );return nil ,ErrColorOutOfRange ;};_fgdg :=vals [3];
if _fgdg < 0.0||_fgdg > 1.0{_caf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgdg );return nil ,ErrColorOutOfRange ;};_dgdce :=NewPdfColorDeviceCMYK (_dbda ,_efde ,_eaaf ,_fgdg );
return _dgdce ,nil ;};func _feeg (_baeab *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_baeab }};

// SetOCProperties sets the optional content properties.
func (_ggeb *PdfWriter )SetOCProperties (ocProperties _be .PdfObject )error {_ffbfc :=_ggeb ._agced ;if ocProperties !=nil {_caf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_ffbfc .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _ggeb .addObjects (ocProperties );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gfa *PdfActionMovie )ToPdfObject ()_be .PdfObject {_gfa .PdfAction .ToPdfObject ();_cga :=_gfa ._deb ;_bcb :=_cga .PdfObject .(*_be .PdfObjectDictionary );_bcb .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeMovie )));_bcb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gfa .Annotation );
_bcb .SetIfNotNil ("\u0054",_gfa .T );_bcb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gfa .Operation );return _cga ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_dgbgb *Outline )ToPdfOutline ()*PdfOutline {_dbgd :=NewPdfOutline ();var _ebede []*PdfOutlineItem ;var _ebdd int64 ;var _gfdbf *PdfOutlineItem ;for _ ,_cdfbf :=range _dgbgb .Entries {_fefe ,_bded :=_cdfbf .ToPdfOutlineItem ();_fefe .Parent =&_dbgd .PdfOutlineTreeNode ;
if _gfdbf !=nil {_gfdbf .Next =&_fefe .PdfOutlineTreeNode ;_fefe .Prev =&_gfdbf .PdfOutlineTreeNode ;};_ebede =append (_ebede ,_fefe );_ebdd +=_bded ;_gfdbf =_fefe ;};_aeba :=int64 (len (_ebede ));_ebdd +=_aeba ;if _aeba > 0{_dbgd .First =&_ebede [0].PdfOutlineTreeNode ;
_dbgd .Last =&_ebede [_aeba -1].PdfOutlineTreeNode ;_dbgd .Count =&_ebdd ;};return _dbgd ;};

// ToInteger convert to an integer format.
func (_cbfg *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_dfcb :=_eg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dfcb *_cbfg .A ()),uint32 (_dfcb *_cbfg .B ()),uint32 (_dfcb *_cbfg .C ())};};func _fbded (_accff *_be .PdfObjectDictionary ,_gfeeg *fontCommon )(*pdfFontType3 ,error ){_cbbb :=_feeg (_gfeeg );
_fabg :=_accff .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fabg ==nil {_fabg =_be .MakeInteger (0);};_cbbb .FirstChar =_fabg ;_cgadc ,_fcfc :=_be .GetIntVal (_fabg );if !_fcfc {_caf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fabg );
return nil ,_be .ErrTypeError ;};_fgcg :=_ac .CharCode (_cgadc );_fabg =_accff .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fabg ==nil {_fabg =_be .MakeInteger (255);};_cbbb .LastChar =_fabg ;_cgadc ,_fcfc =_be .GetIntVal (_fabg );if !_fcfc {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fabg );
return nil ,_be .ErrTypeError ;};_ggae :=_ac .CharCode (_cgadc );_fabg =_accff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fabg !=nil {_cbbb .Resources =_fabg ;};_fabg =_accff .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _fabg ==nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_fabg );
return nil ,_be .ErrNotSupported ;};_cbbb .CharProcs =_fabg ;_fabg =_accff .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _fabg ==nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_fabg );
return nil ,_be .ErrNotSupported ;};_cbbb .FontMatrix =_fabg ;_cbbb ._afbae =make (map[_ac .CharCode ]float64 );_fabg =_accff .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fabg !=nil {_cbbb .Widths =_fabg ;_dcfgd ,_begca :=_be .GetArray (_fabg );if !_begca {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fabg );
return nil ,_be .ErrTypeError ;};_ddbe ,_faggc :=_dcfgd .ToFloat64Array ();if _faggc !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_faggc ;};if len (_ddbe )!=int (_ggae -_fgcg +1){_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ggae -_fgcg +1,len (_ddbe ));
return nil ,_be .ErrRangeError ;};_aabdd ,_begca :=_be .GetArray (_cbbb .FontMatrix );if !_begca {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_aabdd );
return nil ,_faggc ;};_geeeg ,_faggc :=_aabdd .ToFloat64Array ();if _faggc !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_faggc ;};_cbacc :=_ff .NewMatrix (_geeeg [0],_geeeg [1],_geeeg [2],_geeeg [3],_geeeg [4],_geeeg [5]);for _gbgdea ,_efga :=range _ddbe {_dfeec ,_ :=_cbacc .Transform (_efga ,_efga );_cbbb ._afbae [_fgcg +_ac .CharCode (_gbgdea )]=_dfeec ;};
};_cbbb .Encoding =_be .TraceToDirectObject (_accff .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_cdcb :=_accff .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cdcb !=nil {_cbbb ._eecbaf =_be .TraceToDirectObject (_cdcb );_ffdff ,_acad :=_baaga (_cbbb ._eecbaf ,&_cbbb .fontCommon );
if _acad !=nil {return nil ,_acad ;};_cbbb ._baag =_ffdff ;};if _ebdcd :=_cbbb ._baag ;_ebdcd !=nil {_cbbb ._feacg =_ac .NewCMapEncoder ("",nil ,_ebdcd );}else {_cbbb ._feacg =_ac .NewPdfDocEncoder ();};return _cbbb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_becf *PdfActionImportData )ToPdfObject ()_be .PdfObject {_becf .PdfAction .ToPdfObject ();_ege :=_becf ._deb ;_gfb :=_ege .PdfObject .(*_be .PdfObjectDictionary );_gfb .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeImportData )));if _becf .F !=nil {_gfb .Set ("\u0046",_becf .F .ToPdfObject ());
};return _ege ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_aded :=NewPdfAnnotation ();_ebed :=&PdfAnnotationPrinterMark {};_ebed .PdfAnnotation =_aded ;_aded .SetContext (_ebed );return _ebed ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gfacd ,_eeda :=_ecbg (basefont );if _eeda !=nil {return nil ,_eeda ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gfacd ._ceec =_ac .NewWinAnsiEncoder ();};return &PdfFont {_egbcf :&_gfacd },nil ;
};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_dbab :=PdfColorCalGray (grayVal );return &_dbab ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bdffg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_be .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeecd ,_ggegc :=_be .GetNumbersAsFloat (objects );
if _ggegc !=nil {return nil ,_ggegc ;};return _bdffg .ColorFromFloats (_eeecd );};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_cdda *Image )SetSamples (samples []uint32 ){if _cdda .BitsPerComponent < 8{samples =_cdda .samplesAddPadding (samples );};_acgb :=_bc .ResampleUint32 (samples ,int (_cdda .BitsPerComponent ),8);_afaf :=make ([]byte ,len (_acgb ));for _ececd ,_fbbcf :=range _acgb {_afaf [_ececd ]=byte (_fbbcf );
};_cdda .Data =_afaf ;};func (_gccb *PdfReader )newPdfActionThreadFromDict (_egf *_be .PdfObjectDictionary )(*PdfActionThread ,error ){_dabf ,_ecd :=_ed (_egf .Get ("\u0046"));if _ecd !=nil {return nil ,_ecd ;};return &PdfActionThread {D :_egf .Get ("\u0044"),B :_egf .Get ("\u0042"),F :_dabf },nil ;
};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_egadb :=NewPdfOutline ();_egadb ._fgfd =&_egadb ;return _egadb ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_be .PdfObjectString ;Author *_be .PdfObjectString ;Subject *_be .PdfObjectString ;Keywords *_be .PdfObjectString ;Creator *_be .PdfObjectString ;Producer *_be .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_be .PdfObjectName ;
_gcgff *_be .PdfObjectDictionary ;};func (_dbc *PdfReader )newPdfAnnotationUnderlineFromDict (_fedb *_be .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bgg :=PdfAnnotationUnderline {};_edab ,_caga :=_dbc .newPdfAnnotationMarkupFromDict (_fedb );
if _caga !=nil {return nil ,_caga ;};_bgg .PdfAnnotationMarkup =_edab ;_bgg .QuadPoints =_fedb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bgg ,nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_dcda :=NewPdfAnnotation ();_cabd :=&PdfAnnotationWidget {};_cabd .PdfAnnotation =_dcda ;_dcda .SetContext (_cabd );return _cabd ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_cdgb *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func (_gbaad *PdfPage )setContainer (_bbabee *_be .PdfIndirectObject ){_bbabee .PdfObject =_gbaad ._afccg ;_gbaad ._bcadgc =_bbabee ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adacg pdfCIDFontType2 )GetRuneMetrics (r rune )(_ecg .CharMetrics ,bool ){_abee ,_efad :=_adacg ._ffeff [r ];if !_efad {_dbff ,_dgfbg :=_be .GetInt (_adacg .DW );if !_dgfbg {return _ecg .CharMetrics {},false ;};_abee =int (*_dbff );};return _ecg .CharMetrics {Wx :float64 (_abee )},true ;
};func _baaga (_gfaag _be .PdfObject ,_fcbde *fontCommon )(*_gde .CMap ,error ){_ceeed ,_facfg :=_be .GetStream (_gfaag );if !_facfg {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_gfaag );
return nil ,_be .ErrTypeError ;};_begcb ,_ccgab :=_be .DecodeStream (_ceeed );if _ccgab !=nil {return nil ,_ccgab ;};_cfccg ,_ccgab :=_gde .LoadCmapFromData (_begcb ,!_fcbde .isCIDFont ());if _ccgab !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_ceeed .ObjectNumber ,_ccgab );
};return _cfccg ,_ccgab ;};func (_aefgf *PdfReader )traverseObjectData (_dfdg _be .PdfObject )error {return _be .ResolveReferencesDeep (_dfdg ,_aefgf ._afddg );};

// ColorToRGB converts a Lab color to an RGB color.
func (_eaab *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_bdef :=func (_ggbb float64 )float64 {if _ggbb >=6.0/29{return _ggbb *_ggbb *_ggbb ;};return 108.0/841*(_ggbb -4.0/29.0);};_aaebc ,_egac :=color .(*PdfColorLab );if !_egac {_caf .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_bdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_aaebc .L ();AStar :=_aaebc .A ();BStar :=_aaebc .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_eaab .WhitePoint [0]*_bdef (L );Y :=_eaab .WhitePoint [1]*_bdef (M );Z :=_eaab .WhitePoint [2]*_bdef (N );_ffbe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dcee :=-0.969256*X +1.875992*Y +0.041556*Z ;_dbbc :=0.055648*X +-0.204043*Y +1.057311*Z ;_ffbe =_eg .Min (_eg .Max (_ffbe ,0),1.0);
_dcee =_eg .Min (_eg .Max (_dcee ,0),1.0);_dbbc =_eg .Min (_eg .Max (_dbbc ,0),1.0);return NewPdfColorDeviceRGB (_ffbe ,_dcee ,_dbbc ),nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_be .PdfObjectArray ;ExtGState _be .PdfObject ;};func (_ade *PdfReader )newPdfActionSoundFromDict (_agg *_be .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_agg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_agg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_agg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_agg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_agg .Get ("\u004d\u0069\u0078")},nil ;
};func _abbbg (_ddcc _be .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_bcbce :=NewPdfColorspaceSpecialIndexed ();if _bfeb ,_dddgg :=_ddcc .(*_be .PdfIndirectObject );_dddgg {_bcbce ._dgagg =_bfeb ;};_ddcc =_be .TraceToDirectObject (_ddcc );_adcbb ,_faga :=_ddcc .(*_be .PdfObjectArray );
if !_faga {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adcbb .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_ddcc =_adcbb .Get (0);_edef ,_faga :=_ddcc .(*_be .PdfObjectName );if !_faga {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_edef !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_ddcc =_adcbb .Get (1);_dfbd ,_feaa :=DetermineColorspaceNameFromPdfObject (_ddcc );if _feaa !=nil {return nil ,_feaa ;};if _dfbd =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_dfbd =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_caf .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_dfbd );
return nil ,_cddfa ;};_eggcg ,_feaa :=NewPdfColorspaceFromPdfObject (_ddcc );if _feaa !=nil {return nil ,_feaa ;};_bcbce .Base =_eggcg ;_ddcc =_adcbb .Get (2);_gfbfb ,_feaa :=_be .GetNumberAsInt64 (_ddcc );if _feaa !=nil {return nil ,_feaa ;};if _gfbfb > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_bcbce .HiVal =int (_gfbfb );_ddcc =_adcbb .Get (3);_bcbce .Lookup =_ddcc ;_ddcc =_be .TraceToDirectObject (_ddcc );var _baec []byte ;if _cdff ,_eedf :=_ddcc .(*_be .PdfObjectString );_eedf {_baec =_cdff .Bytes ();_caf .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_baec );
}else if _efaf ,_baa :=_ddcc .(*_be .PdfObjectStream );_baa {_caf .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_ddcc .String ());_caf .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_efaf .Stream ),_efaf .Stream );
_dgga ,_cecg :=_be .DecodeStream (_efaf );if _cecg !=nil {return nil ,_cecg ;};_caf .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dgga ),_dgga );_baec =_dgga ;}else {_caf .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ddcc );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_baec )< _bcbce .Base .GetNumComponents ()*(_bcbce .HiVal +1){_caf .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_caf .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_baec ),_bcbce .Base .GetNumComponents (),_bcbce .HiVal );
}else {_baec =_baec [:_bcbce .Base .GetNumComponents ()*(_bcbce .HiVal +1)];};_bcbce ._eedc =_baec ;return _bcbce ,nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_fgfd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gb :=NewPdfAction ();_ee :=&PdfActionTrans {};_ee .PdfAction =_gb ;_gb .SetContext (_ee );return _ee ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bgcdd *PdfPage )Duplicate ()*PdfPage {_fddfa :=*_bgcdd ;_fddfa ._afccg =_be .MakeDict ();_fddfa ._bcadgc =_be .MakeIndirectObject (_fddfa ._afccg );_fddfa ._fdaaa =*_fddfa ._afccg ;return &_fddfa ;};func (_ceca *PdfPage )getParentResources ()(*PdfPageResources ,error ){_fffc :=_ceca .Parent ;
for _fffc !=nil {_cfabd ,_efcggb :=_be .GetDict (_fffc );if !_efcggb {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_bdf .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _agbe :=_cfabd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_agbe !=nil {_efcgc ,_fdfge :=_be .GetDict (_agbe );if !_fdfge {return nil ,_bdf .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_aafcb ,_abada :=NewPdfPageResourcesFromDict (_efcgc );if _abada !=nil {return nil ,_abada ;};return _aafcb ,nil ;};_fffc =_cfabd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_eebf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_eaeec ,_deaceg :=_eebf .GetTrailer ();if _deaceg !=nil {return nil ,_deaceg ;};var _dded *_be .PdfObjectDictionary ;_egfa :=_eaeec .Get ("\u0049\u006e\u0066\u006f");switch _acafa :=_egfa .(type ){case *_be .PdfObjectReference :_dadbg :=_acafa ;
_egfa ,_deaceg =_eebf .GetIndirectObjectByNumber (int (_dadbg .ObjectNumber ));_egfa =_be .TraceToDirectObject (_egfa );if _deaceg !=nil {return nil ,_deaceg ;};_dded ,_ =_egfa .(*_be .PdfObjectDictionary );case *_be .PdfObjectDictionary :_dded =_acafa ;
};if _dded ==nil {return nil ,_bdf .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_acagd ,_deaceg :=NewPdfInfoFromObject (_dded );if _deaceg !=nil {return nil ,_deaceg ;
};return _acagd ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_fefdf *PdfReader )GetOutlines ()(*Outline ,error ){if _fefdf ==nil {return nil ,_bdf .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_degbf :=_fefdf .GetOutlineTree ();if _degbf ==nil {return nil ,_bdf .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _gaagg func (_ecfc *PdfOutlineTreeNode ,_cdcbbg *[]*OutlineItem );_gaagg =func (_gdga *PdfOutlineTreeNode ,_cbbedc *[]*OutlineItem ){if _gdga ==nil {return ;};if _gdga ._fgfd ==nil {_caf .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _fafca *OutlineItem ;if _beebd ,_gfaca :=_gdga ._fgfd .(*PdfOutlineItem );_gfaca {_fgea :=_beebd .Dest ;if (_fgea ==nil ||_be .IsNullObject (_fgea ))&&_beebd .A !=nil {if _deded ,_caecg :=_be .GetDict (_beebd .A );_caecg {if _cbbef ,_faecb :=_be .GetArray (_deded .Get ("\u0044"));
_faecb {_fgea =_cbbef ;}else {_gedbg ,_badae :=_be .GetString (_deded .Get ("\u0044"));if !_badae {return ;};_deeg ,_badae :=_fefdf ._dcdbf .Get ("\u004e\u0061\u006de\u0073").(*_be .PdfObjectReference );if !_badae {return ;};_gfdae ,_afbfa :=_fefdf ._gfafb .LookupByReference (*_deeg );
if _afbfa !=nil {_caf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_afbfa .Error ());
return ;};_dadcc ,_badae :=_gfdae .(*_be .PdfIndirectObject );if !_badae {return ;};_efdg :=map[_be .PdfObject ]struct{}{};_afbfa =_fefdf .buildNameNodes (_dadcc ,_efdg );if _afbfa !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_afbfa .Error ());
return ;};for _fbfaa :=range _efdg {_ebecf ,_fgccf :=_be .GetDict (_fbfaa );if !_fgccf {continue ;};_cdgfc ,_fgccf :=_be .GetArray (_ebecf .Get ("\u004e\u0061\u006de\u0073"));if !_fgccf {continue ;};for _eebdg ,_bbecc :=range _cdgfc .Elements (){switch _bbecc .(type ){case *_be .PdfObjectString :if _bbecc .String ()==_gedbg .String (){if _ffefd :=_cdgfc .Get (_eebdg +1);
_ffefd !=nil {if _efdff ,_gfbcd :=_be .GetDict (_ffefd );_gfbcd {_fgea =_efdff .Get ("\u0044");break ;};};};};};};};};};var _bbea OutlineDest ;if _fgea !=nil &&!_be .IsNullObject (_fgea ){if _adeb ,_adccc :=_cedadb (_fgea ,_fefdf );_adccc ==nil {_bbea =*_adeb ;
}else {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_fgea ,_adccc );
};};_fafca =NewOutlineItem (_beebd .Title .Decoded (),_bbea );*_cbbedc =append (*_cbbedc ,_fafca );if _beebd .Next !=nil {_gaagg (_beebd .Next ,_cbbedc );};};if _gdga .First !=nil {if _fafca !=nil {_cbbedc =&_fafca .Entries ;};_gaagg (_gdga .First ,_cbbedc );
};};_dfaeb :=NewOutline ();_gaagg (_degbf ,&_dfaeb .Entries );return _dfaeb ,nil ;};func _agee (_eefeg string )(map[_ac .CharCode ]_ac .GlyphName ,error ){_acac :=_bb .Split (_eefeg ,"\u000a");_ffgb :=make (map[_ac .CharCode ]_ac .GlyphName );for _ ,_egcab :=range _acac {_acce :=_afbg .FindStringSubmatch (_egcab );
if _acce ==nil {continue ;};_efacc ,_egccc :=_acce [1],_acce [2];_debee ,_eagb :=_bdbc .Atoi (_efacc );if _eagb !=nil {_caf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_egcab );
return nil ,_be .ErrTypeError ;};_ffgb [_ac .CharCode (_debee )]=_ac .GlyphName (_egccc );};_caf .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_ffgb );
return _ffgb ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_feec *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_feec .HiVal )};};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_be .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _be .PdfObject ;A _be .PdfObject ;SE _be .PdfObject ;C _be .PdfObject ;F _be .PdfObject ;
_cbdfb *_be .PdfIndirectObject ;};func (_abbc *PdfReader )newPdfAnnotationWatermarkFromDict (_fdad *_be .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cdgc :=PdfAnnotationWatermark {};_cdgc .FixedPrint =_fdad .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_cdgc ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_fedad :=&PdfSignature {Type :_be .MakeName ("\u0053\u0069\u0067"),Handler :handler };_gccbg :=&pdfSignDictionary {PdfObjectDictionary :_be .MakeDict (),_bafac :&handler ,_cgcac :_fedad };_fedad ._cfbge =_be .MakeIndirectObject (_gccbg );
return _fedad ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_ecga *PdfTilingPattern )ToPdfObject ()_be .PdfObject {_ecga .PdfPattern .ToPdfObject ();_fbbe :=_ecga .getDict ();if _ecga .PaintType !=nil {_fbbe .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_ecga .PaintType );};if _ecga .TilingType !=nil {_fbbe .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ecga .TilingType );
};if _ecga .BBox !=nil {_fbbe .Set ("\u0042\u0042\u006f\u0078",_ecga .BBox .ToPdfObject ());};if _ecga .XStep !=nil {_fbbe .Set ("\u0058\u0053\u0074e\u0070",_ecga .XStep );};if _ecga .YStep !=nil {_fbbe .Set ("\u0059\u0053\u0074e\u0070",_ecga .YStep );
};if _ecga .Resources !=nil {_fbbe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ecga .Resources .ToPdfObject ());};if _ecga .Matrix !=nil {_fbbe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ecga .Matrix );};return _ecga ._fceaa ;};func (_dda *PdfReader )newPdfAnnotationPolygonFromDict (_ecgef *_be .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_dccag :=PdfAnnotationPolygon {};
_gaeb ,_begc :=_dda .newPdfAnnotationMarkupFromDict (_ecgef );if _begc !=nil {return nil ,_begc ;};_dccag .PdfAnnotationMarkup =_gaeb ;_dccag .Vertices =_ecgef .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dccag .LE =_ecgef .Get ("\u004c\u0045");
_dccag .BS =_ecgef .Get ("\u0042\u0053");_dccag .IC =_ecgef .Get ("\u0049\u0043");_dccag .BE =_ecgef .Get ("\u0042\u0045");_dccag .IT =_ecgef .Get ("\u0049\u0054");_dccag .Measure =_ecgef .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dccag ,nil ;
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_aega *PdfShadingPatternType3 )ToPdfObject ()_be .PdfObject {_aega .PdfPattern .ToPdfObject ();_bbaec :=_aega .getDict ();if _aega .Shading !=nil {_bbaec .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_aega .Shading .ToPdfObject ());};if _aega .Matrix !=nil {_bbaec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_aega .Matrix );
};if _aega .ExtGState !=nil {_bbaec .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_aega .ExtGState );};return _aega ._fceaa ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_adeba *PdfPageResources )AddExtGState (gsName _be .PdfObjectName ,gsDict _be .PdfObject )error {if _adeba .ExtGState ==nil {_adeba .ExtGState =_be .MakeDict ();};_eaafc :=_adeba .ExtGState ;_gabbg ,_cgff :=_be .TraceToDirectObject (_eaafc ).(*_be .PdfObjectDictionary );
if !_cgff {_caf .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_eaafc ,_be .TraceToDirectObject (_eaafc ));
return _be .ErrTypeError ;};_gabbg .Set (gsName ,gsDict );return nil ;};

// SetAction sets the PDF action for the annotation link.
func (_gfbae *PdfAnnotationLink )SetAction (action *PdfAction ){_gfbae ._ggee =action ;if action ==nil {_gfbae .A =nil ;};};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_be .PdfObjectArray ;Domain *_be .PdfObjectArray ;Function []PdfFunction ;Extend *_be .PdfObjectArray ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cacg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _be .GetNumberAsFloat (_cacg .CapHeight );};func (_bgfd *Image )samplesTrimPadding (_dgfga []uint32 )[]uint32 {_daaef :=_bgfd .ColorComponents *int (_bgfd .Width )*int (_bgfd .Height );
if len (_dgfga )==_daaef {return _dgfga ;};_fdbab :=make ([]uint32 ,_daaef );_bbbb :=int (_bgfd .Width )*_bgfd .ColorComponents ;var _bafd ,_ccdac ,_gade ,_gdgb int ;_cdbcc :=_fg .BytesPerLine (int (_bgfd .Width ),int (_bgfd .BitsPerComponent ),_bgfd .ColorComponents );
for _bafd =0;_bafd < int (_bgfd .Height );_bafd ++{_ccdac =_bafd *int (_bgfd .Width );_gade =_bafd *_cdbcc ;for _gdgb =0;_gdgb < _bbbb ;_gdgb ++{_fdbab [_ccdac +_gdgb ]=_dgfga [_gade +_gdgb ];};};return _fdbab ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ef PdfModel ;Rect _be .PdfObject ;Contents _be .PdfObject ;P _be .PdfObject ;NM _be .PdfObject ;M _be .PdfObject ;F _be .PdfObject ;AP _be .PdfObject ;AS _be .PdfObject ;Border _be .PdfObject ;C _be .PdfObject ;StructParent _be .PdfObject ;
OC _be .PdfObject ;_dbf *_be .PdfIndirectObject ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_agcded *PdfPage )SetContentStreams (cStreams []string ,encoder _be .StreamEncoder )error {if len (cStreams )==0{_agcded .Contents =nil ;return nil ;};if encoder ==nil {encoder =_be .NewRawEncoder ();};var _bccaab []*_be .PdfObjectStream ;for _ ,_bfccg :=range cStreams {_ceffe :=&_be .PdfObjectStream {};
_eeafg :=encoder .MakeStreamDict ();_ebee ,_ccaab :=encoder .EncodeBytes ([]byte (_bfccg ));if _ccaab !=nil {return _ccaab ;};_eeafg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_be .MakeInteger (int64 (len (_ebee ))));_ceffe .PdfObjectDictionary =_eeafg ;
_ceffe .Stream =_ebee ;_bccaab =append (_bccaab ,_ceffe );};if len (_bccaab )==1{_agcded .Contents =_bccaab [0];}else {_gdabe :=_be .MakeArray ();for _ ,_abdbe :=range _bccaab {_gdabe .Append (_abdbe );};_agcded .Contents =_gdabe ;};return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eecf *PdfColorspaceSpecialPattern )ToPdfObject ()_be .PdfObject {if _eecf .UnderlyingCS ==nil {return _be .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_bade :=_be .MakeArray (_be .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bade .Append (_eecf .UnderlyingCS .ToPdfObject ());
if _eecf ._bbcf !=nil {_eecf ._bbcf .PdfObject =_bade ;return _eecf ._bbcf ;};return _bade ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cdgbg *PdfPageResourcesColorspaces )Set (key _be .PdfObjectName ,val PdfColorspace ){if _ ,_bfggf :=_cdgbg .Colorspaces [string (key )];!_bfggf {_cdgbg .Names =append (_cdgbg .Names ,string (key ));};_cdgbg .Colorspaces [string (key )]=val ;};

// GetSubFilter returns SubFilter value or empty string.
func (_cacgac *pdfSignDictionary )GetSubFilter ()string {_efefc :=_cacgac .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _efefc ==nil {return "";};if _edeeb ,_ffcef :=_be .GetNameVal (_efefc );_ffcef {return _edeeb ;};return "";};type pdfFontSimple struct{fontCommon ;
_egdg *_be .PdfIndirectObject ;_gcdgc map[_ac .CharCode ]float64 ;_ceec _ac .TextEncoder ;_fcege _ac .TextEncoder ;_eede *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _be .PdfObject ;LastChar _be .PdfObject ;Widths _be .PdfObject ;Encoding _be .PdfObject ;_afcd *_ecg .RuneCharSafeMap ;};

// IsShading specifies if the pattern is a shading pattern.
func (_cegfeg *PdfPattern )IsShading ()bool {return _cegfeg .PatternType ==2};

// WriteToFile writes the output PDF to file.
func (_dccdd *PdfWriter )WriteToFile (outputFilePath string )error {_cefd ,_ecdce :=_dag .Create (outputFilePath );if _ecdce !=nil {return _ecdce ;};defer _cefd .Close ();return _dccdd .Write (_cefd );};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bcbf *PdfField )GetContext ()PdfModel {return _bcbf ._dgcbe };

// Val returns the value of the color.
func (_cgda *PdfColorCalGray )Val ()float64 {return float64 (*_cgda )};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _be .PdfObject )(*PdfInfo ,error ){var _abgd PdfInfo ;_geebf ,_eadf :=obj .(*_be .PdfObjectDictionary );if !_eadf {return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_agfc :=range _geebf .Keys (){switch _agfc {case "\u0054\u0069\u0074l\u0065":_abgd .Title ,_ =_be .GetString (_geebf .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_abgd .Author ,_ =_be .GetString (_geebf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_abgd .Subject ,_ =_be .GetString (_geebf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_abgd .Keywords ,_ =_be .GetString (_geebf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_abgd .Creator ,_ =_be .GetString (_geebf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_abgd .Producer ,_ =_be .GetString (_geebf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_abgd .Trapped ,_ =_be .GetName (_geebf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cfgd ,_egaff :=_be .GetString (_geebf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_egaff &&_cfgd .String ()!=""{_cadb ,_cacag :=NewPdfDate (_cfgd .String ());if _cacag !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_cacag );
};_abgd .CreationDate =&_cadb ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _geef ,_cggcf :=_be .GetString (_geebf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_cggcf &&_geef .String ()!=""{_cedag ,_eggge :=NewPdfDate (_geef .String ());if _eggge !=nil {return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_eggge );
};_abgd .ModifiedDate =&_cedag ;};default:_gdefg ,_ :=_be .GetString (_geebf .Get (_agfc ));if _abgd ._gcgff ==nil {_abgd ._gcgff =_be .MakeDict ();};_abgd ._gcgff .Set (_agfc ,_gdefg );};};return &_abgd ,nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_adegf *PdfReader )GetCatalogMetadata ()(_be .PdfObject ,bool ){if _adegf ._dcdbf ==nil {return nil ,false ;};_fefef :=_adegf ._dcdbf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _fefef ,_fefef !=nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gabce *Image )ColorAt (x ,y int )(_gc .Color ,error ){_bbabc :=_fg .BytesPerLine (int (_gabce .Width ),int (_gabce .BitsPerComponent ),_gabce .ColorComponents );switch _gabce .ColorComponents {case 1:return _fg .ColorAtGrayscale (x ,y ,int (_gabce .BitsPerComponent ),_bbabc ,_gabce .Data ,_gabce ._ffedg );
case 3:return _fg .ColorAtNRGBA (x ,y ,int (_gabce .Width ),_bbabc ,int (_gabce .BitsPerComponent ),_gabce .Data ,_gabce ._bbbgb ,_gabce ._ffedg );case 4:return _fg .ColorAtCMYK (x ,y ,int (_gabce .Width ),_gabce .Data ,_gabce ._ffedg );};_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gabce .ColorComponents ,_gabce .BitsPerComponent );
return nil ,_bdf .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_acgga *PdfPattern )GetContext ()PdfModel {return _acgga ._ffgg };func (_afce *PdfReader )newPdfAnnotationFileAttachmentFromDict (_fddc *_be .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dgagd :=PdfAnnotationFileAttachment {};_dfa ,_efe :=_afce .newPdfAnnotationMarkupFromDict (_fddc );
if _efe !=nil {return nil ,_efe ;};_dgagd .PdfAnnotationMarkup =_dfa ;_dgagd .FS =_fddc .Get ("\u0046\u0053");_dgagd .Name =_fddc .Get ("\u004e\u0061\u006d\u0065");return &_dgagd ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dbaa pdfCIDFontType0 )GetCharMetrics (code _ac .CharCode )(_ecg .CharMetrics ,bool ){_cdfb :=_dbaa ._ddbfd ;if _gebae ,_dccf :=_dbaa ._accg [code ];_dccf {_cdfb =_gebae ;};return _ecg .CharMetrics {Wx :_cdfb },true ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cfd :=NewPdfAnnotation ();_dcc :=&PdfAnnotationCaret {};_dcc .PdfAnnotation =_cfd ;_dcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfd .SetContext (_dcc );return _dcc ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ababg *PdfPageResources )GetShadingByName (keyName _be .PdfObjectName )(*PdfShading ,bool ){if _ababg .Shading ==nil {return nil ,false ;};_dfdce ,_dggd :=_be .TraceToDirectObject (_ababg .Shading ).(*_be .PdfObjectDictionary );if !_dggd {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ababg .Shading );
return nil ,false ;};if _fbgad :=_dfdce .Get (keyName );_fbgad !=nil {_ebbe ,_fgbe :=_ddgac (_fbgad );if _fgbe !=nil {_caf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fgbe );
return nil ,false ;};return _ebbe ,true ;};return nil ,false ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_afddg :map[_be .PdfObject ]struct{}{},_cfgbc :_eeeac (),_gfafb :_be .NewParserFromString (txt )};};var _ pdfFont =(*pdfCIDFontType2 )(nil );var _cecf =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// ToPdfObject returns the PDF representation of the function.
func (_fcaag *PdfFunctionType3 )ToPdfObject ()_be .PdfObject {_ddeea :=_be .MakeDict ();_ddeea .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_be .MakeInteger (3));_bede :=&_be .PdfObjectArray {};for _ ,_eegc :=range _fcaag .Domain {_bede .Append (_be .MakeFloat (_eegc ));
};_ddeea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bede );if _fcaag .Range !=nil {_dfbc :=&_be .PdfObjectArray {};for _ ,_gbaec :=range _fcaag .Range {_dfbc .Append (_be .MakeFloat (_gbaec ));};_ddeea .Set ("\u0052\u0061\u006eg\u0065",_dfbc );};if _fcaag .Functions !=nil {_dedbg :=&_be .PdfObjectArray {};
for _ ,_cebcd :=range _fcaag .Functions {_dedbg .Append (_cebcd .ToPdfObject ());};_ddeea .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_dedbg );};if _fcaag .Bounds !=nil {_afgff :=&_be .PdfObjectArray {};for _ ,_egcb :=range _fcaag .Bounds {_afgff .Append (_be .MakeFloat (_egcb ));
};_ddeea .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_afgff );};if _fcaag .Encode !=nil {_aagdc :=&_be .PdfObjectArray {};for _ ,_agcf :=range _fcaag .Encode {_aagdc .Append (_be .MakeFloat (_agcf ));};_ddeea .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_aagdc );
};if _fcaag ._cdcc !=nil {_fcaag ._cdcc .PdfObject =_ddeea ;return _fcaag ._cdcc ;};return _ddeea ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ba .Time ){_ccgeg .Lock ();defer _ccgeg .Unlock ();_gbecfb =creationDate ;};var ErrColorOutOfRange =_bdf .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");func (_adgeff *PdfAcroForm )fillImageWithAppearance (_abbbge FieldImageProvider ,_gfdd FieldAppearanceGenerator )error {if _adgeff ==nil {return nil ;
};_gddc ,_bcacc :=_abbbge .FieldImageValues ();if _bcacc !=nil {return _bcacc ;};for _ ,_bfcf :=range _adgeff .AllFields (){_edecf :=_bfcf .PartialName ();_ebdf ,_adbab :=_gddc [_edecf ];if !_adbab {if _adbdd ,_bggg :=_bfcf .FullName ();_bggg ==nil {_ebdf ,_adbab =_gddc [_adbdd ];
};};if !_adbab {_caf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_edecf );
continue ;};switch _cffg :=_bfcf .GetContext ().(type ){case *PdfFieldButton :if _cffg .IsPush (){_cffg .SetFillImage (_ebdf );};};if _gfdd ==nil {continue ;};for _ ,_bdfb :=range _bfcf .Annotations {_cegfd ,_gccec :=_gfdd .GenerateAppearanceDict (_adgeff ,_bfcf ,_bdfb );
if _gccec !=nil {return _gccec ;};_bdfb .AP =_cegfd ;_bdfb .ToPdfObject ();};};return nil ;};func (_dagaa *PdfReader )newPdfSignatureReferenceFromDict (_cffda *_be .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _acbcg ,_dbbfa :=_dagaa ._cfgbc .GetModelFromPrimitive (_cffda ).(*PdfSignatureReference );
_dbbfa {return _acbcg ,nil ;};_effgc :=&PdfSignatureReference {_ceagf :_cffda ,Data :_cffda .Get ("\u0044\u0061\u0074\u0061")};var _gggdf bool ;_effgc .Type ,_ =_be .GetName (_cffda .Get ("\u0054\u0079\u0070\u0065"));_effgc .TransformMethod ,_gggdf =_be .GetName (_cffda .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_gggdf {_caf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_effgc .TransformParams ,_ =_be .GetDict (_cffda .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_effgc .DigestMethod ,_ =_be .GetName (_cffda .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _effgc ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _be .PdfObject )(_be .PdfObjectName ,error ){var _gbae *_be .PdfObjectName ;var _edfe *_be .PdfObjectArray ;if _gebg ,_dbgf :=obj .(*_be .PdfIndirectObject );_dbgf {if _befdb ,_dffb :=_gebg .PdfObject .(*_be .PdfObjectArray );
_dffb {_edfe =_befdb ;}else if _cebb ,_dgac :=_gebg .PdfObject .(*_be .PdfObjectName );_dgac {_gbae =_cebb ;};}else if _eeb ,_cdgcf :=obj .(*_be .PdfObjectArray );_cdgcf {_edfe =_eeb ;}else if _beaf ,_fagg :=obj .(*_be .PdfObjectName );_fagg {_gbae =_beaf ;
};if _gbae !=nil {switch *_gbae {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gbae ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gbae ,nil ;
};};if _edfe !=nil &&_edfe .Len ()> 0{if _bfge ,_defa :=_edfe .Get (0).(*_be .PdfObjectName );_defa {switch *_bfge {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _edfe .Len ()==1{return *_bfge ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bfge ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bfge ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bfge ,nil ;};};};return "",nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _be .PdfObject ;ColorSpace _be .PdfObject ;Pattern _be .PdfObject ;Shading _be .PdfObject ;XObject _be .PdfObject ;Font _be .PdfObject ;ProcSet _be .PdfObject ;Properties _be .PdfObject ;_aggc *_be .PdfObjectDictionary ;
_dcfgb *PdfPageResourcesColorspaces ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_ebaa *PdfAppender )SetDocInfo (info *PdfInfo ){_ebaa ._dcbe =info };

// ToPdfObject implements interface PdfModel.
func (_befe *PdfAnnotationText )ToPdfObject ()_be .PdfObject {_befe .PdfAnnotation .ToPdfObject ();_gefde :=_befe ._dbf ;_debccb :=_gefde .PdfObject .(*_be .PdfObjectDictionary );if _befe .PdfAnnotationMarkup !=nil {_befe .PdfAnnotationMarkup .appendToPdfDictionary (_debccb );
};_debccb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0054\u0065\u0078\u0074"));_debccb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_befe .Open );_debccb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_befe .Name );_debccb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_befe .State );
_debccb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_befe .StateModel );return _gefde ;};func (_dafef *pdfFontSimple )baseFields ()*fontCommon {return &_dafef .fontCommon };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bfgb pdfCIDFontType0 )GetRuneMetrics (r rune )(_ecg .CharMetrics ,bool ){return _ecg .CharMetrics {Wx :_bfgb ._ddbfd },true ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_eeff FieldFlag )Mask ()uint32 {return uint32 (_eeff )};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ceadb FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ceadb .Mask ()|fl .Mask ())};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_gacgbg *XObjectForm )GetContainingPdfObject ()_be .PdfObject {return _gacgbg ._fefdg };

// AddCustomInfo adds a custom info into document info dictionary.
func (_ggce *PdfInfo )AddCustomInfo (name string ,value string )error {if _ggce ._gcgff ==nil {_ggce ._gcgff =_be .MakeDict ();};if _ ,_cddeb :=_cecf [name ];_cddeb {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_ggce ._gcgff .SetIfNotNil (*_be .MakeName (name ),_be .MakeString (value ));return nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bedca *PdfPage )GetPageAsIndirectObject ()*_be .PdfIndirectObject {return _bedca ._bcadgc };func (_cfffb *PdfWriter )writeString (_gcfg string ){if _cfffb ._dfffe !=nil {return ;};_bfgaf ,_ccfgae :=_cfffb ._ddfgf .WriteString (_gcfg );_cfffb ._cdaga +=int64 (_bfgaf );
_cfffb ._dfffe =_ccfgae ;};func (_eda *PdfReader )newPdfActionSubmitFormFromDict (_bfee *_be .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_fad ,_cdd :=_ed (_bfee .Get ("\u0046"));if _cdd !=nil {return nil ,_cdd ;};return &PdfActionSubmitForm {F :_fad ,Fields :_bfee .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bfee .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_be .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_be .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};func (_caac *PdfReader )newPdfAnnotationSoundFromDict (_ffab *_be .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_cadc :=PdfAnnotationSound {};_beb ,_bbab :=_caac .newPdfAnnotationMarkupFromDict (_ffab );if _bbab !=nil {return nil ,_bbab ;};_cadc .PdfAnnotationMarkup =_beb ;
_cadc .Name =_ffab .Get ("\u004e\u0061\u006d\u0065");_cadc .Sound =_ffab .Get ("\u0053\u006f\u0075n\u0064");return &_cadc ,nil ;};func (_efdbf *DSS )add (_cafef *[]*_be .PdfObjectStream ,_fdgc map[string ]*_be .PdfObjectStream ,_bedbf [][]byte )([]*_be .PdfObjectStream ,error ){_dedb :=make ([]*_be .PdfObjectStream ,0,len (_bedbf ));
for _ ,_eace :=range _bedbf {_afgce ,_agdfc :=_dgcd (_eace );if _agdfc !=nil {return nil ,_agdfc ;};_fadb ,_adgea :=_fdgc [string (_afgce )];if !_adgea {_fadb ,_agdfc =_be .MakeStream (_eace ,_be .NewRawEncoder ());if _agdfc !=nil {return nil ,_agdfc ;
};_fdgc [string (_afgce )]=_fadb ;*_cafef =append (*_cafef ,_fadb );};_dedb =append (_dedb ,_fadb );};return _dedb ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_ggedg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_ggedg .GetNumComponents (){return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egec ,_deee :=_ggedg .TintTransform .Evaluate (vals );
if _deee !=nil {return nil ,_deee ;};_geaf ,_deee :=_ggedg .AlternateSpace .ColorFromFloats (_egec );if _deee !=nil {return nil ,_deee ;};return _geaf ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_abbdb *Image )GetSamples ()[]uint32 {_gdafe :=_bc .ResampleBytes (_abbdb .Data ,int (_abbdb .BitsPerComponent ));if _abbdb .BitsPerComponent < 8{_gdafe =_abbdb .samplesTrimPadding (_gdafe );};_adgbc :=int (_abbdb .Width )*int (_abbdb .Height )*_abbdb .ColorComponents ;
if len (_gdafe )< _adgbc {_caf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_gdafe ),_adgbc );
return _gdafe ;}else if len (_gdafe )> _adgbc {_caf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_gdafe ),_adgbc );
_gdafe =_gdafe [:_adgbc ];};return _gdafe ;};

// ToPdfObject implements interface PdfModel.
func (_bcbe *PdfActionJavaScript )ToPdfObject ()_be .PdfObject {_bcbe .PdfAction .ToPdfObject ();_af :=_bcbe ._deb ;_aae :=_af .PdfObject .(*_be .PdfObjectDictionary );_aae .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeJavaScript )));_aae .SetIfNotNil ("\u004a\u0053",_bcbe .JS );
return _af ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
func (_ddef *PdfActionTrans )ToPdfObject ()_be .PdfObject {_ddef .PdfAction .ToPdfObject ();_cege :=_ddef ._deb ;_ebe :=_cege .PdfObject .(*_be .PdfObjectDictionary );_ebe .SetIfNotNil ("\u0053",_be .MakeName (string (ActionTypeTrans )));_ebe .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ddef .Trans );
return _cege ;};func (_gagab *PdfWriter )copyObject (_bbgg _be .PdfObject ,_gaceb map[_be .PdfObject ]_be .PdfObject ,_ddgacb map[_be .PdfObject ]struct{},_ccbac bool )_be .PdfObject {_fcadfa :=!_gagab ._fdgcf &&_ddgacb !=nil ;if _bgfed ,_agccf :=_gaceb [_bbgg ];
_agccf {if _fcadfa &&!_ccbac {delete (_ddgacb ,_bbgg );};return _bgfed ;};if _bbgg ==nil {_dfgea :=_be .MakeNull ();return _dfgea ;};_gbfg :=_bbgg ;switch _dfcd :=_bbgg .(type ){case *_be .PdfObjectArray :_dbgdd :=_be .MakeArray ();_gbfg =_dbgdd ;_gaceb [_bbgg ]=_gbfg ;
for _ ,_caggaa :=range _dfcd .Elements (){_dbgdd .Append (_gagab .copyObject (_caggaa ,_gaceb ,_ddgacb ,_ccbac ));};case *_be .PdfObjectStreams :_dbgbaf :=&_be .PdfObjectStreams {PdfObjectReference :_dfcd .PdfObjectReference };_gbfg =_dbgbaf ;_gaceb [_bbgg ]=_gbfg ;
for _ ,_bdffa :=range _dfcd .Elements (){_dbgbaf .Append (_gagab .copyObject (_bdffa ,_gaceb ,_ddgacb ,_ccbac ));};case *_be .PdfObjectStream :_aedeb :=&_be .PdfObjectStream {Stream :_dfcd .Stream ,PdfObjectReference :_dfcd .PdfObjectReference };_gbfg =_aedeb ;
_gaceb [_bbgg ]=_gbfg ;_aedeb .PdfObjectDictionary =_gagab .copyObject (_dfcd .PdfObjectDictionary ,_gaceb ,_ddgacb ,_ccbac ).(*_be .PdfObjectDictionary );case *_be .PdfObjectDictionary :var _dedec bool ;if _fcadfa &&!_ccbac {if _eebff ,_ :=_be .GetNameVal (_dfcd .Get ("\u0054\u0079\u0070\u0065"));
_eebff =="\u0050\u0061\u0067\u0065"{_ ,_ecbaa :=_gagab ._adabee [_dfcd ];_ccbac =!_ecbaa ;_dedec =_ccbac ;};};_dbecf :=_be .MakeDict ();_gbfg =_dbecf ;_gaceb [_bbgg ]=_gbfg ;for _ ,_dbade :=range _dfcd .Keys (){_dbecf .Set (_dbade ,_gagab .copyObject (_dfcd .Get (_dbade ),_gaceb ,_ddgacb ,_ccbac ));
};if _dedec {_gbfg =_be .MakeNull ();_ccbac =false ;};case *_be .PdfIndirectObject :_fgagg :=&_be .PdfIndirectObject {PdfObjectReference :_dfcd .PdfObjectReference };_gbfg =_fgagg ;_gaceb [_bbgg ]=_gbfg ;_fgagg .PdfObject =_gagab .copyObject (_dfcd .PdfObject ,_gaceb ,_ddgacb ,_ccbac );
case *_be .PdfObjectString :_gcfdb :=*_dfcd ;_gbfg =&_gcfdb ;_gaceb [_bbgg ]=_gbfg ;case *_be .PdfObjectName :_gbcdg :=*_dfcd ;_gbfg =&_gbcdg ;_gaceb [_bbgg ]=_gbfg ;case *_be .PdfObjectNull :_gbfg =_be .MakeNull ();_gaceb [_bbgg ]=_gbfg ;case *_be .PdfObjectInteger :_cedcc :=*_dfcd ;
_gbfg =&_cedcc ;_gaceb [_bbgg ]=_gbfg ;case *_be .PdfObjectReference :_gfeac :=*_dfcd ;_gbfg =&_gfeac ;_gaceb [_bbgg ]=_gbfg ;case *_be .PdfObjectFloat :_fgdgc :=*_dfcd ;_gbfg =&_fgdgc ;_gaceb [_bbgg ]=_gbfg ;case *_be .PdfObjectBool :_gafga :=*_dfcd ;
_gbfg =&_gafga ;_gaceb [_bbgg ]=_gbfg ;case *pdfSignDictionary :_bddc :=&pdfSignDictionary {PdfObjectDictionary :_be .MakeDict (),_bafac :_dfcd ._bafac ,_cgcac :_dfcd ._cgcac };_gbfg =_bddc ;_gaceb [_bbgg ]=_gbfg ;for _ ,_cbag :=range _dfcd .Keys (){_bddc .Set (_cbag ,_gagab .copyObject (_dfcd .Get (_cbag ),_gaceb ,_ddgacb ,_ccbac ));
};default:_caf .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_bbgg );
};if _fcadfa &&_ccbac {_ddgacb [_bbgg ]=struct{}{};};return _gbfg ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_cdbbc *PdfAcroForm )ToPdfObject ()_be .PdfObject {_cdbdc :=_cdbbc ._fabcf ;_aaga :=_cdbdc .PdfObject .(*_be .PdfObjectDictionary );if _cdbbc .Fields !=nil {_edfec :=_be .PdfObjectArray {};for _ ,_dggaa :=range *_cdbbc .Fields {_cgaca :=_dggaa .GetContext ();
if _cgaca !=nil {_edfec .Append (_cgaca .ToPdfObject ());}else {_edfec .Append (_dggaa .ToPdfObject ());};};_aaga .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_edfec );};if _cdbbc .NeedAppearances !=nil {_aaga .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_cdbbc .NeedAppearances );
}else {if _bdged :=_aaga .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_bdged !=nil {_aaga .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _cdbbc .SigFlags !=nil {_aaga .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_cdbbc .SigFlags );
};if _cdbbc .CO !=nil {_aaga .Set ("\u0043\u004f",_cdbbc .CO );};if _cdbbc .DR !=nil {_aaga .Set ("\u0044\u0052",_cdbbc .DR .ToPdfObject ());};if _cdbbc .DA !=nil {_aaga .Set ("\u0044\u0041",_cdbbc .DA );};if _cdbbc .Q !=nil {_aaga .Set ("\u0051",_cdbbc .Q );
};if _cdbbc .XFA !=nil {_aaga .Set ("\u0058\u0046\u0041",_cdbbc .XFA );};if _cdbbc .ADBEEchoSign !=nil {_aaga .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_cdbbc .ADBEEchoSign );};return _cdbdc ;};func _dgcd (_ggbfa []byte )([]byte ,error ){_cfec :=_a .New ();
if _ ,_gddbc :=_dga .Copy (_cfec ,_ec .NewReader (_ggbfa ));_gddbc !=nil {return nil ,_gddbc ;};return _cfec .Sum (nil ),nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_gffgd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_bccg ,_ ,_aagb :=_gffgd .CharcodesToUnicodeWithStats (_gffgd .BytesToCharcodes (data ));_cgbfda :=_ac .ExpandLigatures (_bccg );return _cgbfda ,_bdb .RuneCountInString (_cgbfda ),_aagb ;
};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _be .StreamEncoder )(*XObjectImage ,error ){_cbbba :=NewXObjectImage ();return UpdateXObjectImageFromImage (_cbbba ,img ,cs ,encoder );};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_eddf *XObjectImage )ToImage ()(*Image ,error ){_fefgd :=&Image {};if _eddf .Height ==nil {return nil ,_bdf .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fefgd .Height =*_eddf .Height ;if _eddf .Width ==nil {return nil ,_bdf .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fefgd .Width =*_eddf .Width ;if _eddf .BitsPerComponent ==nil {switch _eddf .Filter .(type ){case *_be .CCITTFaxEncoder ,*_be .JBIG2Encoder :_fefgd .BitsPerComponent =1;
case *_be .LZWEncoder ,*_be .RunLengthEncoder :_fefgd .BitsPerComponent =8;default:return nil ,_bdf .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fefgd .BitsPerComponent =*_eddf .BitsPerComponent ;};_fefgd .ColorComponents =_eddf .ColorSpace .GetNumComponents ();_eddf ._fcaaa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_be .MakeInteger (int64 (_fefgd .ColorComponents )));
_aceef ,_deaba :=_be .DecodeStream (_eddf ._fcaaa );if _deaba !=nil {return nil ,_deaba ;};_fefgd .Data =_aceef ;if _eddf .Decode !=nil {_fcacb ,_cadad :=_eddf .Decode .(*_be .PdfObjectArray );if !_cadad {_caf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_bdf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_effgf ,_adag :=_fcacb .ToFloat64Array ();if _adag !=nil {return nil ,_adag ;};switch _eddf .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_fbca :=_eddf .ColorSpace .DecodeArray ();
if _fbca [0]==_effgf [0]&&_fbca [1]==_effgf [1]&&_fbca [2]==_effgf [2]&&_fbca [3]==_effgf [3]{_fefgd ._ffedg =_effgf ;};default:_fefgd ._ffedg =_effgf ;};};return _fefgd ,nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _be .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_be .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_acafgc ,_ffdg :=encoder .EncodeBytes (img .Data );
if _ffdg !=nil {_caf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ffdg );return nil ,_ffdg ;};_fded :=NewXObjectImage ();_egegb :=img .Width ;_dgfce :=img .Height ;
_fded .Width =&_egegb ;_fded .Height =&_dgfce ;_feaef :=img .BitsPerComponent ;_fded .BitsPerComponent =&_feaef ;_fded .Filter =encoder ;_fded .Stream =_acafgc ;if cs ==nil {if img .ColorComponents ==1{_fded .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_be .DCTEncoder :_fded .ColorSpace =NewPdfColorspaceDeviceRGB ();
_feaef =8;_fded .BitsPerComponent =&_feaef ;};};}else if img .ColorComponents ==3{_fded .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_be .DCTEncoder :_fded .ColorSpace =NewPdfColorspaceDeviceRGB ();
default:_fded .ColorSpace =NewPdfColorspaceDeviceCMYK ();};}else {return nil ,_bdf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fded .ColorSpace =cs ;};if len (img ._bbbgb )!=0{_ccfdb :=NewXObjectImage ();
_ccfdb .Filter =encoder ;_fdeg ,_bebgcd :=encoder .EncodeBytes (img ._bbbgb );if _bebgcd !=nil {_caf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bebgcd );
return nil ,_bebgcd ;};_ccfdb .Stream =_fdeg ;_ccfdb .BitsPerComponent =_fded .BitsPerComponent ;_ccfdb .Width =&img .Width ;_ccfdb .Height =&img .Height ;_ccfdb .ColorSpace =NewPdfColorspaceDeviceGray ();_fded .SMask =_ccfdb .ToPdfObject ();}else {_fded .SMask =xobjIn .SMask ;
_fded .ImageMask =xobjIn .ImageMask ;if _fded .ColorSpace .GetNumComponents ()==1{_edcbg (_fded );};};return _fded ,nil ;};func (_ccgdc *pdfFontSimple )getFontEncoding ()(_abbf string ,_daaae map[_ac .CharCode ]_ac .GlyphName ,_cega error ){_abbf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _ecaced ,_ggede :=_accdf [_ccgdc ._abdd ];_ggede {_abbf =_ecaced ;}else if _ccgdc .fontFlags ()&_bbcba !=0{for _befa ,_acde :=range _accdf {if _bb .Contains (_ccgdc ._abdd ,_befa ){_abbf =_acde ;break ;};};};if _ccgdc .Encoding ==nil {return _abbf ,nil ,nil ;
};switch _accac :=_ccgdc .Encoding .(type ){case *_be .PdfObjectName :return string (*_accac ),nil ,nil ;case *_be .PdfObjectDictionary :_aecfbe ,_ebdggg :=_be .GetName (_accac .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _ebdggg {_abbf =_aecfbe .String ();};if _fdcec :=_accac .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fdcec !=nil {_dgcbf ,_fdca :=_be .GetArray (_fdcec );if !_fdca {_caf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_accac ,_accac .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_be .ErrTypeError ;};_daaae ,_cega =_ac .FromFontDifferences (_dgcbf );};return _abbf ,_daaae ,_cega ;default:_caf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ccgdc .Encoding ,_ccgdc .Encoding );
return "",nil ,_be .ErrTypeError ;};};func _eebab (_afaab *PdfPage ){_dbcag :=_aa .GetLicenseKey ();if _dbcag !=nil &&_dbcag .IsLicensed (){return ;};_efdaa :=_be .PdfObjectName ("\u0055\u0046\u0031");if !_afaab .Resources .HasFontByName (_efdaa ){_afaab .Resources .SetFontByName (_efdaa ,DefaultFont ().ToPdfObject ());
};var _bebfc []string ;_bebfc =append (_bebfc ,"\u0071");_bebfc =append (_bebfc ,"\u0042\u0054");_bebfc =append (_bebfc ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_efdaa .String ()));_bebfc =append (_bebfc ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_bebfc =append (_bebfc ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_gbggc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_bebfc =append (_bebfc ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_gbggc ));_bebfc =append (_bebfc ,"\u0045\u0054");_bebfc =append (_bebfc ,"\u0051");_ccded :=_bb .Join (_bebfc ,"\u000a");_afaab .AddContentStreamByString (_ccded );_afaab .ToPdfObject ();
};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_gcbff *PdfPageResources )GetXObjectImageByName (keyName _be .PdfObjectName )(*XObjectImage ,error ){_bbacd ,_ddeg :=_gcbff .GetXObjectByName (keyName );if _bbacd ==nil {return nil ,nil ;};if _ddeg !=XObjectTypeImage {return nil ,_bdf .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_geccc ,_eggbb :=NewXObjectImageFromStream (_bbacd );if _eggbb !=nil {return nil ,_eggbb ;};return _geccc ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eefg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_caf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gbbg :=[]float64 {0.0};if _eefg .C0 !=nil {_gbbg =_eefg .C0 ;};_fbfe :=[]float64 {1.0};if _eefg .C1 !=nil {_fbfe =_eefg .C1 ;};var _bcffa []float64 ;for _gbdc :=0;_gbdc < len (_gbbg );_gbdc ++{_gdbab :=_gbbg [_gbdc ]+_eg .Pow (x [0],_eefg .N )*(_fbfe [_gbdc ]-_gbbg [_gbdc ]);
_bcffa =append (_bcffa ,_gdbab );};return _bcffa ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_fdga *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _be .GetNumberAsFloat (_fdga .Ascent );};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_egg :=NewPdfAnnotation ();_gcgf :=&PdfAnnotationInk {};_gcgf .PdfAnnotation =_egg ;_gcgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egg .SetContext (_gcgf );return _gcgf ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_dfed *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _dfed .RunesToCharcodeBytes ([]rune (str ));};

// AllFields returns a flattened list of all fields in the form.
func (_edeg *PdfAcroForm )AllFields ()[]*PdfField {if _edeg ==nil {return nil ;};var _abgde []*PdfField ;if _edeg .Fields !=nil {for _ ,_ecee :=range *_edeg .Fields {_abgde =append (_abgde ,_gfcf (_ecee )...);};};return _abgde ;};func (_daccc *PdfReader )newPdfAnnotationCaretFromDict (_cdde *_be .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ccfg :=PdfAnnotationCaret {};
_bfabd ,_dbd :=_daccc .newPdfAnnotationMarkupFromDict (_cdde );if _dbd !=nil {return nil ,_dbd ;};_ccfg .PdfAnnotationMarkup =_bfabd ;_ccfg .RD =_cdde .Get ("\u0052\u0044");_ccfg .Sy =_cdde .Get ("\u0053\u0079");return &_ccfg ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _be .PdfObject ;};