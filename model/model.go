//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_bf "bytes";_g "encoding/binary";_ag "errors";_f "fmt";_ac "github.com/unidoc/unipdf/v3/common";_bfg "github.com/unidoc/unipdf/v3/common/license";_da "github.com/unidoc/unipdf/v3/core";_fb "github.com/unidoc/unipdf/v3/core/security";_gb "github.com/unidoc/unipdf/v3/core/security/crypt";_age "github.com/unidoc/unipdf/v3/internal/cmap";_eff "github.com/unidoc/unipdf/v3/internal/imageutil";_df "github.com/unidoc/unipdf/v3/internal/sampling";_cee "github.com/unidoc/unipdf/v3/internal/textencoding";_dg "github.com/unidoc/unipdf/v3/model/internal/fonts";_bc "github.com/unidoc/unipdf/v3/ps";_geb "github.com/unidoc/unitype";_cdf "image";_c "image/color";_ "image/gif";_ "image/png";_gg "io";_ce "io/ioutil";_bb "math";_b "math/rand";_ec "os";_eb "regexp";_ca "sort";_fa "strconv";_gd "strings";_ef "time";_fg "unicode";_ge "unicode/utf8";);

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_adefe *_da .PdfIndirectObject ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _da .PdfObject )(*PdfFont ,error ){return _aeac (fontObj ,true )};var ImageHandling ImageHandler =DefaultImageHandler {};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_agfaa *Image )ToJBIG2Image ()(*_da .JBIG2Image ,error ){_ebcac ,_fdcgb :=_agfaa .ToGoImage ();if _fdcgb !=nil {return nil ,_fdcgb ;};return _da .GoImageToJBIG2 (_ebcac ,_da .JB2ImageAutoThreshold );};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_geegb *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_geegb ._bcgdd =colorspace ;};func (_fgge *PdfAnnotationMarkup )appendToPdfDictionary (_edba *_da .PdfObjectDictionary ){_edba .SetIfNotNil ("\u0054",_fgge .T );if _fgge .Popup !=nil {_edba .Set ("\u0050\u006f\u0070u\u0070",_fgge .Popup .ToPdfObject ());};_edba .SetIfNotNil ("\u0043\u0041",_fgge .CA );_edba .SetIfNotNil ("\u0052\u0043",_fgge .RC );_edba .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fgge .CreationDate );_edba .SetIfNotNil ("\u0049\u0052\u0054",_fgge .IRT );_edba .SetIfNotNil ("\u0053\u0075\u0062\u006a",_fgge .Subj );_edba .SetIfNotNil ("\u0052\u0054",_fgge .RT );_edba .SetIfNotNil ("\u0049\u0054",_fgge .IT );_edba .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_fgge .ExData );};

// K returns the value of the key component of the color.
func (_eaed *PdfColorDeviceCMYK )K ()float64 {return float64 (_eaed [3])};func (_fafb *pdfFontSimple )getFontEncoding ()(_fdcc string ,_afddf map[_cee .CharCode ]_cee .GlyphName ,_ddgc error ){_fdcc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _ffeec ,_egbfd :=_affg [_fafb ._dabeae ];_egbfd {_fdcc =_ffeec ;}else if _fafb .fontFlags ()&_cdfb !=0{for _bfbdc ,_eaad :=range _affg {if _gd .Contains (_fafb ._dabeae ,_bfbdc ){_fdcc =_eaad ;break ;};};};if _fafb .Encoding ==nil {return _fdcc ,nil ,nil ;};switch _dfgc :=_fafb .Encoding .(type ){case *_da .PdfObjectName :return string (*_dfgc ),nil ,nil ;case *_da .PdfObjectDictionary :_baeef ,_fbegf :=_da .GetName (_dfgc .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fbegf {_fdcc =_baeef .String ();};if _afcf :=_dfgc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_afcf !=nil {_caaff ,_facd :=_da .GetArray (_afcf );if !_facd {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_dfgc ,_dfgc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_da .ErrTypeError ;};_afddf ,_ddgc =_cee .FromFontDifferences (_caaff );};return _fdcc ,_afddf ,_ddgc ;default:_ac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_fafb .Encoding ,_fafb .Encoding );return "",nil ,_da .ErrTypeError ;};};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfActionGoTo3DView )ToPdfObject ()_da .PdfObject {_gdc .PdfAction .ToPdfObject ();_ecd :=_gdc ._cf ;_def :=_ecd .PdfObject .(*_da .PdfObjectDictionary );_def .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoTo3DView )));_def .SetIfNotNil ("\u0054\u0041",_gdc .TA );_def .SetIfNotNil ("\u0056",_gdc .V );return _ecd ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_gdfb :=NewPdfAnnotation ();_bbda :=&PdfAnnotationProjection {};_bbda .PdfAnnotation =_gdfb ;_bbda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdfb .SetContext (_bbda );return _bbda ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gacc *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if _gacc .Alternate ==nil {if _gacc .N ==1{_fdaae :=NewPdfColorspaceDeviceGray ();return _fdaae .ColorFromPdfObjects (objects );}else if _gacc .N ==3{_cgcfa :=NewPdfColorspaceDeviceRGB ();return _cgcfa .ColorFromPdfObjects (objects );}else if _gacc .N ==4{_gfga :=NewPdfColorspaceDeviceCMYK ();return _gfga .ColorFromPdfObjects (objects );}else {return nil ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gacc .Alternate .ColorFromPdfObjects (objects );};func _gbecd (_cceab string )(map[_cee .CharCode ]_cee .GlyphName ,error ){_fdec :=_gd .Split (_cceab ,"\u000a");_gfac :=make (map[_cee .CharCode ]_cee .GlyphName );for _ ,_aadd :=range _fdec {_bgdac :=_bcaeg .FindStringSubmatch (_aadd );if _bgdac ==nil {continue ;};_agdg ,_efed :=_bgdac [1],_bgdac [2];_cgced ,_fgda :=_fa .Atoi (_agdg );if _fgda !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_aadd );return nil ,_da .ErrTypeError ;};_gfac [_cee .CharCode (_cgced )]=_cee .GlyphName (_efed );};_ac .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_gfac );return _gfac ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_ffgb :=PdfColorDeviceGray (grayVal );return &_ffgb ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_bgea pdfFontSimple )GetCharMetrics (code _cee .CharCode )(_dg .CharMetrics ,bool ){if _fgdf ,_edbga :=_bgea ._efege [code ];_edbga {return _dg .CharMetrics {Wx :_fgdf },true ;};if _dg .IsStdFont (_dg .StdFontName (_bgea ._dabeae )){return _dg .CharMetrics {Wx :250},true ;};return _dg .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfActionGoToE )ToPdfObject ()_da .PdfObject {_ea .PdfAction .ToPdfObject ();_fd :=_ea ._cf ;_bef :=_fd .PdfObject .(*_da .PdfObjectDictionary );_bef .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoToE )));if _ea .F !=nil {_bef .Set ("\u0046",_ea .F .ToPdfObject ());};_bef .SetIfNotNil ("\u0044",_ea .D );_bef .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ea .NewWindow );_bef .SetIfNotNil ("\u0054",_ea .T );return _fd ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_abagb =author };

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_fbecc *PdfField )ToPdfObject ()_da .PdfObject {_fbbd :=_fbecc ._cfed ;_dbbg :=_fbbd .PdfObject .(*_da .PdfObjectDictionary );_abba :=_da .MakeArray ();for _ ,_bbed :=range _fbecc .Kids {_abba .Append (_bbed .ToPdfObject ());};for _ ,_bddbb :=range _fbecc .Annotations {if _bddbb ._cfd !=_fbecc ._cfed {_abba .Append (_bddbb .GetContext ().ToPdfObject ());};};if _fbecc .Parent !=nil {_dbbg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbecc .Parent .GetContainingPdfObject ());};if _abba .Len ()> 0{_dbbg .Set ("\u004b\u0069\u0064\u0073",_abba );};_dbbg .SetIfNotNil ("\u0046\u0054",_fbecc .FT );_dbbg .SetIfNotNil ("\u0054",_fbecc .T );_dbbg .SetIfNotNil ("\u0054\u0055",_fbecc .TU );_dbbg .SetIfNotNil ("\u0054\u004d",_fbecc .TM );_dbbg .SetIfNotNil ("\u0046\u0066",_fbecc .Ff );_dbbg .SetIfNotNil ("\u0056",_fbecc .V );_dbbg .SetIfNotNil ("\u0044\u0056",_fbecc .DV );_dbbg .SetIfNotNil ("\u0041\u0041",_fbecc .AA );return _fbbd ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _da .PdfObject ;BS _da .PdfObject ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_befg *PdfReader )GetPageLabels ()(_da .PdfObject ,error ){_dadfc :=_da .ResolveReference (_befg ._ddgbf .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _dadfc ==nil {return nil ,nil ;};if !_befg ._aceeb {_dgbea :=_befg .traverseObjectData (_dadfc );if _dgbea !=nil {return nil ,_dgbea ;};};return _dadfc ,nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_egbadc *Outline )ToPdfObject ()_da .PdfObject {return _egbadc .ToPdfOutline ().ToPdfObject ()};var (ErrRequiredAttributeMissing =_ag .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dfcf =_ag .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ag .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ag .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_f .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0076\u0029",_da .ErrNotSupported );ErrType1CFontNotSupported =_f .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0076\u0029",_da .ErrNotSupported );ErrType3FontNotSupported =_f .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0076\u0029",_da .ErrNotSupported );ErrTTCmapNotSupported =_f .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0076\u0029",_da .ErrNotSupported ););type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_dece *PdfAcroForm )fill (_gcbdc FieldValueProvider ,_gadb FieldAppearanceGenerator )error {if _dece ==nil {return nil ;};_ageda ,_dgfde :=_gcbdc .FieldValues ();if _dgfde !=nil {return _dgfde ;};for _ ,_eagd :=range _dece .AllFields (){_gaca :=_eagd .PartialName ();_ebcagg ,_ceafb :=_ageda [_gaca ];if !_ceafb {if _bfbcb ,_acaa :=_eagd .FullName ();_acaa ==nil {_ebcagg ,_ceafb =_ageda [_bfbcb ];};};if !_ceafb {_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gaca );continue ;};if _cdab :=_fddf (_eagd ,_ebcagg );_cdab !=nil {return _cdab ;};if _gadb ==nil {continue ;};for _ ,_egec :=range _eagd .Annotations {_bcbbe ,_daaa :=_gadb .GenerateAppearanceDict (_dece ,_eagd ,_egec );if _daaa !=nil {return _daaa ;};_egec .AP =_bcbbe ;_egec .ToPdfObject ();};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdgf *PdfAnnotationCaret )ToPdfObject ()_da .PdfObject {_gdgf .PdfAnnotation .ToPdfObject ();_bfbd :=_gdgf ._cfd ;_dff :=_bfbd .PdfObject .(*_da .PdfObjectDictionary );_gdgf .PdfAnnotationMarkup .appendToPdfDictionary (_dff );_dff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0043\u0061\u0072e\u0074"));_dff .SetIfNotNil ("\u0052\u0044",_gdgf .RD );_dff .SetIfNotNil ("\u0053\u0079",_gdgf .Sy );return _bfbd ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_fbgea =producer };

// ToPdfObject returns the PDF representation of the colorspace.
func (_ddda *PdfColorspaceDeviceCMYK )ToPdfObject ()_da .PdfObject {return _da .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetNumPages returns the number of pages in the document.
func (_ccbcf *PdfReader )GetNumPages ()(int ,error ){if _ccbcf ._bcgcg .GetCrypter ()!=nil &&!_ccbcf ._bcgcg .IsAuthenticated (){return 0,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_ccbcf ._efbae ),nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_bdae *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _bdae ._eaafac ==nil {_bdae ._eaafac =_bc .NewPSExecutor (_bdae .Program );};var _addbg []_bc .PSObject ;for _ ,_bffggf :=range xVec {_addbg =append (_addbg ,_bc .MakeReal (_bffggf ));};_abgb ,_cecc :=_bdae ._eaafac .Execute (_addbg );if _cecc !=nil {return nil ,_cecc ;};_fcgfb ,_cecc :=_bc .PSObjectArrayToFloat64Array (_abgb );if _cecc !=nil {return nil ,_cecc ;};return _fcgfb ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gaaf *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_febddf *PdfSignature )ToPdfObject ()_da .PdfObject {_bbacd :=_febddf ._egggf ;var _fdfed *_da .PdfObjectDictionary ;if _cbfbg ,_acdfc :=_bbacd .PdfObject .(*pdfSignDictionary );_acdfc {_fdfed =_cbfbg .PdfObjectDictionary ;}else {_fdfed =_bbacd .PdfObject .(*_da .PdfObjectDictionary );};_fdfed .SetIfNotNil ("\u0054\u0079\u0070\u0065",_febddf .Type );_fdfed .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_febddf .Filter );_fdfed .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_febddf .SubFilter );_fdfed .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_febddf .ByteRange );_fdfed .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_febddf .Contents );_fdfed .SetIfNotNil ("\u0043\u0065\u0072\u0074",_febddf .Cert );_fdfed .SetIfNotNil ("\u004e\u0061\u006d\u0065",_febddf .Name );_fdfed .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_febddf .Reason );_fdfed .SetIfNotNil ("\u004d",_febddf .M );_fdfed .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_febddf .Reference );_fdfed .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_febddf .Changes );_fdfed .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_febddf .ContactInfo );return _bbacd ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_af :=NewPdfAction ();_cfg :=&PdfActionHide {};_cfg .PdfAction =_af ;_af .SetContext (_cfg );return _cfg ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_efegg *PdfPageResources )SetColorspaceByName (keyName _da .PdfObjectName ,cs PdfColorspace )error {_fadc ,_febbc :=_efegg .GetColorspaces ();if _febbc !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_febbc );return _febbc ;};if _fadc ==nil {_fadc =NewPdfPageResourcesColorspaces ();_efegg .SetColorSpace (_fadc );};_fadc .Set (keyName ,cs );return nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_fdcgd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fdcgd ._gfgdf ==nil {_fdcgd .GetAnnotations ();};_fdcgd ._gfgdf =append (_fdcgd ._gfgdf ,annot );};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cgeb ,_bfcea :=_ec .Open (filePath );if _bfcea !=nil {_ac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bfcea );return nil ,_bfcea ;};defer _cgeb .Close ();return NewCompositePdfFontFromTTF (_cgeb );};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_aecg _gg .ReadSeeker ;_afbf *_da .PdfParser ;_adf *PdfReader ;Reader *PdfReader ;_cadf []*PdfPage ;_bcbc *PdfAcroForm ;_debg _da .XrefTable ;_bfeb int64 ;_faaa int ;_eacf []_da .PdfObject ;_gfgd map[_da .PdfObject ]struct{};_geef map[_da .PdfObject ]int64 ;_ecad map[_da .PdfObject ]struct{};_cdeef map[_da .PdfObject ]struct{};_ega int64 ;_dffd bool ;};func (_bgg *PdfReader )newPdfActionGotoFromDict (_gfb *_da .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_gfb .Get ("\u0044")},nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bdefe *PdfReader )GetOutlines ()(*Outline ,error ){if _bdefe ==nil {return nil ,_ag .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_eaabe :=_bdefe .GetOutlineTree ();if _eaabe ==nil {return nil ,_ag .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _cagbe func (_cfede *PdfOutlineTreeNode ,_gbbdb *[]*OutlineItem );_cagbe =func (_cebab *PdfOutlineTreeNode ,_dead *[]*OutlineItem ){if _cebab ==nil {return ;};if _cebab ._acedd ==nil {_ac .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _ddbfb *OutlineItem ;if _dfbge ,_ageb :=_cebab ._acedd .(*PdfOutlineItem );_ageb {_aegcb :=_dfbge .Dest ;if (_aegcb ==nil ||_da .IsNullObject (_aegcb ))&&_dfbge .A !=nil {if _ccagg ,_efdfe :=_da .GetDict (_dfbge .A );_efdfe {_aegcb ,_ =_da .GetArray (_ccagg .Get ("\u0044"));};};var _cgadb OutlineDest ;if _aegcb !=nil &&!_da .IsNullObject (_aegcb ){if _eafad ,_gfcc :=_egcde (_aegcb ,_bdefe );_gfcc ==nil {_cgadb =*_eafad ;}else {_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_aegcb ,_gfcc );};};_ddbfb =NewOutlineItem (_dfbge .Title .Decoded (),_cgadb );*_dead =append (*_dead ,_ddbfb );if _dfbge .Next !=nil {_cagbe (_dfbge .Next ,_dead );};};if _cebab .First !=nil {if _ddbfb !=nil {_dead =&_ddbfb .Entries ;};_cagbe (_cebab .First ,_dead );};};_ffgae :=NewOutline ();_cagbe (_eaabe ,&_ffgae .Entries );return _ffgae ,nil ;};func _efbd (_gbe *PdfPage )map[_da .PdfObjectName ]_da .PdfObject {_bdce :=make (map[_da .PdfObjectName ]_da .PdfObject );if _gbe .Resources ==nil {return _bdce ;};if _gbe .Resources .Font !=nil {if _accec ,_aggb :=_da .GetDict (_gbe .Resources .Font );_aggb {for _ ,_ffc :=range _accec .Keys (){_bdce [_ffc ]=_accec .Get (_ffc );};};};if _gbe .Resources .ExtGState !=nil {if _fgd ,_gdbg :=_da .GetDict (_gbe .Resources .ExtGState );_gdbg {for _ ,_ggbc :=range _fgd .Keys (){_bdce [_ggbc ]=_fgd .Get (_ggbc );};};};if _gbe .Resources .XObject !=nil {if _efgcd ,_aaec :=_da .GetDict (_gbe .Resources .XObject );_aaec {for _ ,_eag :=range _efgcd .Keys (){_bdce [_eag ]=_efgcd .Get (_eag );};};};if _gbe .Resources .Pattern !=nil {if _bcda ,_bab :=_da .GetDict (_gbe .Resources .Pattern );_bab {for _ ,_fdf :=range _bcda .Keys (){_bdce [_fdf ]=_bcda .Get (_fdf );};};};if _gbe .Resources .Shading !=nil {if _bdec ,_aaef :=_da .GetDict (_gbe .Resources .Shading );_aaef {for _ ,_fbb :=range _bdec .Keys (){_bdce [_fbb ]=_bdec .Get (_fbb );};};};if _gbe .Resources .ProcSet !=nil {if _bfc ,_bfae :=_da .GetDict (_gbe .Resources .ProcSet );_bfae {for _ ,_aedc :=range _bfc .Keys (){_bdce [_aedc ]=_bfc .Get (_aedc );};};};if _gbe .Resources .Properties !=nil {if _cfaf ,_dcb :=_da .GetDict (_gbe .Resources .Properties );_dcb {for _ ,_acae :=range _cfaf .Keys (){_bdce [_acae ]=_cfaf .Get (_acae );};};};return _bdce ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _da .PdfObjectName ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_eaaba *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _egad []_cee .TextEncoder ;if _bdfgf :=_eaaba .baseFields ()._eeba ;_bdfgf !=nil {_egad =append (_egad ,_cee .NewCMapEncoder ("",nil ,_bdfgf ));};if _abfc :=_eaaba .Encoder ();_abfc !=nil {_egad =append (_egad ,_abfc );};var _affec _bf .Buffer ;var _cedb int ;for _ ,_dgdd :=range data {var _bffe bool ;for _ ,_cbdee :=range _egad {if _cfeee :=_cbdee .Encode (string (_dgdd ));len (_cfeee )> 0{_affec .Write (_cfeee );_bffe =true ;break ;};};if !_bffe {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dgdd );_cedb ++;};};if _cedb !=0{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cedb ,_eaaba ,_egad );};return _affec .Bytes (),_cedb ;};func _abecb (_ccgcf StdFontName )(pdfFontSimple ,error ){_eegfe ,_ecdf :=_dg .NewStdFontByName (_ccgcf );if !_ecdf {return pdfFontSimple {},ErrFontNotSupported ;};_ccdd :=_gaaed (_eegfe );return _ccdd ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_dg .StdFontName ;

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_dc :=NewPdfAction ();_ab :=&PdfActionImportData {};_ab .PdfAction =_dc ;_dc .SetContext (_ab );return _ab ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dada FieldFlag )Has (fl FieldFlag )bool {return (_dada .Mask ()&fl .Mask ())> 0};func _ffef (_aafc _da .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ac .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_aafc .String (),_aafc );_ffbg :=NewPdfColorspaceSpecialPattern ();if _gfbg ,_abca :=_aafc .(*_da .PdfIndirectObject );_abca {_ffbg ._egbg =_gfbg ;};_aafc =_da .TraceToDirectObject (_aafc );if _dbdbb ,_ebcgc :=_aafc .(*_da .PdfObjectName );_ebcgc {if *_dbdbb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _ffbg ,nil ;};_gcdg ,_ecfad :=_aafc .(*_da .PdfObjectArray );if !_ecfad {_ac .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_aafc );return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gcdg .Len ()!=1&&_gcdg .Len ()!=2{_ac .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gcdg );return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_aafc =_gcdg .Get (0);if _cgaf ,_fcdc :=_aafc .(*_da .PdfObjectName );_fcdc {if *_cgaf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ac .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_cgaf );return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gcdg .Len ()> 1{_aafc =_gcdg .Get (1);_aafc =_da .TraceToDirectObject (_aafc );_bbfeg ,_baab :=NewPdfColorspaceFromPdfObject (_aafc );if _baab !=nil {return nil ,_baab ;};_ffbg .UnderlyingCS =_bbfeg ;};_ac .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_ffbg .UnderlyingCS );return _ffbg ,nil ;};func (_bfee *PdfReader )newPdfAnnotationPrinterMarkFromDict (_bcbe *_da .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_fabc :=PdfAnnotationPrinterMark {};_fabc .MN =_bcbe .Get ("\u004d\u004e");return &_fabc ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_bbdbd *PdfTilingPattern )SetContentStream (content []byte ,encoder _da .StreamEncoder )error {_fcff ,_fagad :=_bbdbd ._geggda .(*_da .PdfObjectStream );if !_fagad {_ac .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbdbd ._geggda );return _da .ErrTypeError ;};if encoder ==nil {encoder =_da .NewRawEncoder ();};_fgbcg :=_fcff .PdfObjectDictionary ;_fgdeb :=encoder .MakeStreamDict ();_fgbcg .Merge (_fgdeb );_cede ,_deace :=encoder .EncodeBytes (content );if _deace !=nil {return _deace ;};_fgbcg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_cede ))));_fcff .Stream =[]byte (_cede );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbe *PdfActionGoToR )ToPdfObject ()_da .PdfObject {_dbe .PdfAction .ToPdfObject ();_gbf :=_dbe ._cf ;_gcg :=_gbf .PdfObject .(*_da .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoToR )));if _dbe .F !=nil {_gcg .Set ("\u0046",_dbe .F .ToPdfObject ());};_gcg .SetIfNotNil ("\u0044",_dbe .D );_gcg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dbe .NewWindow );return _gbf ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;RD _da .PdfObject ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_da .PdfObjectString ;Q *_da .PdfObjectInteger ;DS *_da .PdfObjectString ;RV _da .PdfObject ;MaxLen *_da .PdfObjectInteger ;};

// SetVersion sets the PDF version of the output file.
func (_abfga *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_abfga ._ebee =majorVersion ;_abfga ._fbdb =minorVersion ;};

// PdfVersion returns version of the PDF file.
func (_bbdgg *PdfReader )PdfVersion ()_da .Version {return _bbdgg ._bcgcg .PdfVersion ()};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bfbaf *PdfPageResources )GetContainingPdfObject ()_da .PdfObject {return _bfbaf ._dgcae };

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_debcc *PdfFieldButton )IsCheckbox ()bool {return _debcc .GetType ()==ButtonTypeCheckbox };func (_acbce fontCommon )asPdfObjectDictionary (_bgebd string )*_da .PdfObjectDictionary {if _bgebd !=""&&_acbce ._bffg !=""&&_bgebd !=_acbce ._bffg {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_bgebd ,_acbce );}else if _bgebd ==""&&_acbce ._bffg ==""{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_acbce );}else if _acbce ._bffg ==""{_acbce ._bffg =_bgebd ;};_aabbf :=_da .MakeDict ();_aabbf .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0046\u006f\u006e\u0074"));_aabbf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_da .MakeName (_acbce ._dabeae ));_aabbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName (_acbce ._bffg ));if _acbce ._gcgf !=nil {_aabbf .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_acbce ._gcgf .ToPdfObject ());};if _acbce ._aeec !=nil {_aabbf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_acbce ._aeec );}else if _acbce ._eeba !=nil {_ecfdb ,_bgace :=_acbce ._eeba .Stream ();if _bgace !=nil {_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bgace );}else {_aabbf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ecfdb );};};return _aabbf ;};func _dcfe (_beca *_da .PdfObjectDictionary )(*PdfFieldText ,error ){_fcgc :=&PdfFieldText {};_fcgc .DA ,_ =_da .GetString (_beca .Get ("\u0044\u0041"));_fcgc .Q ,_ =_da .GetInt (_beca .Get ("\u0051"));_fcgc .DS ,_ =_da .GetString (_beca .Get ("\u0044\u0053"));_fcgc .RV =_beca .Get ("\u0052\u0056");_fcgc .MaxLen ,_ =_da .GetInt (_beca .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _fcgc ,nil ;};func (_gffg *pdfFontSimple )updateStandard14Font (){_cffce ,_gbff :=_gffg .Encoder ().(_cee .SimpleEncoder );if !_gbff {_ac .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_gffg .Encoder (),_gffg );return ;};_cbced :=_cffce .Charcodes ();_gffg ._efege =make (map[_cee .CharCode ]float64 ,len (_cbced ));for _ ,_bedfb :=range _cbced {_eaaf ,_ :=_cffce .CharcodeToRune (_bedfb );_gffg ._efege [_bedfb ]=_gffg ._bdad [_eaaf ].Wx ;};};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fbg :=NewPdfAnnotation ();_dcc :=&PdfAnnotationFreeText {};_dcc .PdfAnnotation =_fbg ;_dcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbg .SetContext (_dcc );return _dcc ;};func (_aae *PdfReader )newPdfActionThreadFromDict (_egc *_da .PdfObjectDictionary )(*PdfActionThread ,error ){_bgd ,_gge :=_caff (_egc .Get ("\u0046"));if _gge !=nil {return nil ,_gge ;};return &PdfActionThread {D :_egc .Get ("\u0044"),B :_egc .Get ("\u0042"),F :_bgd },nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgfc *PdfAnnotationProjection )ToPdfObject ()_da .PdfObject {_dgfc .PdfAnnotation .ToPdfObject ();_aabe :=_dgfc ._cfd ;_bgbc :=_aabe .PdfObject .(*_da .PdfObjectDictionary );_dgfc .PdfAnnotationMarkup .appendToPdfDictionary (_bgbc );return _aabe ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_fdcb :=PdfColorCalRGB {a ,b ,c };return &_fdcb ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_aabdb *PdfWriter )SetPageLabels (pageLabels _da .PdfObject )error {if pageLabels ==nil {return nil ;};_ac .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_aabdb ._ebdee .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _aabdb .addObjects (pageLabels );};

// AddWatermarkImage adds a watermark to the page.
func (_dgaag *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_fefc ,_fbgaae :=_dgaag .GetMediaBox ();if _fbgaae !=nil {return _fbgaae ;};_bgeaa :=_fefc .Urx -_fefc .Llx ;_bdbgd :=_fefc .Ury -_fefc .Lly ;_cccbe :=float64 (*ximg .Width );_fegg :=(float64 (_bgeaa )-float64 (_cccbe ))/2;if opt .FitToWidth {_cccbe =_bgeaa ;_fegg =0;};_cdcfge :=_bdbgd ;_ecce :=float64 (0);if opt .PreserveAspectRatio {_cdcfge =_cccbe *float64 (*ximg .Height )/float64 (*ximg .Width );_ecce =(_bdbgd -_cdcfge )/2;};if _dgaag .Resources ==nil {_dgaag .Resources =NewPdfPageResources ();};_debgef :=0;_gdeff :=_da .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_debgef ));for _dgaag .Resources .HasXObjectByName (_gdeff ){_debgef ++;_gdeff =_da .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_debgef ));};_fbgaae =_dgaag .AddImageResource (_gdeff ,ximg );if _fbgaae !=nil {return _fbgaae ;};_debgef =0;_dcfgd :=_da .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_debgef ));for _dgaag .HasExtGState (_dcfgd ){_debgef ++;_dcfgd =_da .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_debgef ));};_fcfbc :=_da .MakeDict ();_fcfbc .Set ("\u0042\u004d",_da .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_fcfbc .Set ("\u0043\u0041",_da .MakeFloat (opt .Alpha ));_fcfbc .Set ("\u0063\u0061",_da .MakeFloat (opt .Alpha ));_fbgaae =_dgaag .AddExtGState (_dcfgd ,_fcfbc );if _fbgaae !=nil {return _fbgaae ;};_accgb :=_f .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dcfgd ,_cccbe ,_cdcfge ,_fegg ,_ecce ,_gdeff );_dgaag .AddContentStreamByString (_accgb );return nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_egbfa *PdfPageResources )GetPatternByName (keyName _da .PdfObjectName )(*PdfPattern ,bool ){if _egbfa .Pattern ==nil {return nil ,false ;};_gaacg ,_fbcdf :=_da .TraceToDirectObject (_egbfa .Pattern ).(*_da .PdfObjectDictionary );if !_fbcdf {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egbfa .Pattern );return nil ,false ;};if _fbgc :=_gaacg .Get (keyName );_fbgc !=nil {_aafgg ,_dadda :=_cdcbd (_fbgc );if _dadda !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dadda );return nil ,false ;};return _aafgg ,true ;};return nil ,false ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_dfagc *PdfFont )GetCharMetrics (code _cee .CharCode )(CharMetrics ,bool ){var _accae _dg .CharMetrics ;switch _dgbg :=_dfagc ._edgc .(type ){case *pdfFontSimple :if _gbcg ,_baae :=_dgbg .GetCharMetrics (code );_baae {return _gbcg ,_baae ;};case *pdfFontType0 :if _ecbcd ,_befdb :=_dgbg .GetCharMetrics (code );_befdb {return _ecbcd ,_befdb ;};case *pdfCIDFontType0 :if _cdca ,_bbaaf :=_dgbg .GetCharMetrics (code );_bbaaf {return _cdca ,_bbaaf ;};case *pdfCIDFontType2 :if _bagea ,_ddbbd :=_dgbg .GetCharMetrics (code );_ddbbd {return _bagea ,_ddbbd ;};default:_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_dfagc ._edgc );return _accae ,false ;};if _ceecg ,_ffaad :=_dfagc .GetFontDescriptor ();_ffaad ==nil &&_ceecg !=nil {return _dg .CharMetrics {Wx :_ceecg ._bede },true ;};_ac .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_dfagc );return _accae ,false ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_gdcafc *Image )Resample (targetBitsPerComponent int64 ){if _gdcafc .BitsPerComponent ==targetBitsPerComponent {return ;};_abae :=_gdcafc .GetSamples ();if targetBitsPerComponent < _gdcafc .BitsPerComponent {_dfae :=_gdcafc .BitsPerComponent -targetBitsPerComponent ;for _aaed :=range _abae {_abae [_aaed ]>>=uint (_dfae );};}else if targetBitsPerComponent > _gdcafc .BitsPerComponent {_ggbbg :=targetBitsPerComponent -_gdcafc .BitsPerComponent ;for _edfb :=range _abae {_abae [_edfb ]<<=uint (_ggbbg );};};_gdcafc .BitsPerComponent =targetBitsPerComponent ;if _gdcafc .BitsPerComponent < 8{_gdcafc .resampleLowBits (_abae );return ;};_gfggg :=_eff .BytesPerLine (int (_gdcafc .Width ),int (_gdcafc .BitsPerComponent ),_gdcafc .ColorComponents );_bfec :=make ([]byte ,_gfggg *int (_gdcafc .Height ));var (_edfd ,_cbfc ,_degf ,_edcga int ;_bdbag uint32 ;);for _degf =0;_degf < int (_gdcafc .Height );_degf ++{_edfd =_degf *_gfggg ;_cbfc =(_degf +1)*_gfggg -1;_afeaa :=_df .ResampleUint32 (_abae [_edfd :_cbfc ],int (targetBitsPerComponent ),8);for _edcga ,_bdbag =range _afeaa {_bfec [_edcga +_edfd ]=byte (_bdbag );};};_gdcafc .Data =_bfec ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_fcafa OutlineDest )ToPdfObject ()_da .PdfObject {if (_fcafa .PageObj ==nil &&_fcafa .Page < 0)||_fcafa .Mode ==""{return _da .MakeNull ();};_beacd :=_da .MakeArray ();if _fcafa .PageObj !=nil {_beacd .Append (_fcafa .PageObj );}else {_beacd .Append (_da .MakeInteger (_fcafa .Page ));};_beacd .Append (_da .MakeName (_fcafa .Mode ));switch _fcafa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_beacd .Append (_da .MakeFloat (_fcafa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_beacd .Append (_da .MakeFloat (_fcafa .X ));case "\u0058\u0059\u005a":_beacd .Append (_da .MakeFloat (_fcafa .X ));_beacd .Append (_da .MakeFloat (_fcafa .Y ));_beacd .Append (_da .MakeFloat (_fcafa .Zoom ));default:_beacd .Set (1,_da .MakeName ("\u0046\u0069\u0074"));};return _beacd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dgdeb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbee :=vals [0];if _fbee < 0.0||_fbee > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egcd :=NewPdfColorCalGray (_fbee );return _egcd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egfb *PdfFilespec )ToPdfObject ()_da .PdfObject {_agdbc :=_egfb .getDict ();_agdbc .Clear ();_agdbc .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_agdbc .SetIfNotNil ("\u0046\u0053",_egfb .FS );_agdbc .SetIfNotNil ("\u0046",_egfb .F );_agdbc .SetIfNotNil ("\u0055\u0046",_egfb .UF );_agdbc .SetIfNotNil ("\u0044\u004f\u0053",_egfb .DOS );_agdbc .SetIfNotNil ("\u004d\u0061\u0063",_egfb .Mac );_agdbc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_egfb .Unix );_agdbc .SetIfNotNil ("\u0049\u0044",_egfb .ID );_agdbc .SetIfNotNil ("\u0056",_egfb .V );_agdbc .SetIfNotNil ("\u0045\u0046",_egfb .EF );_agdbc .SetIfNotNil ("\u0052\u0046",_egfb .RF );_agdbc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_egfb .Desc );_agdbc .SetIfNotNil ("\u0043\u0049",_egfb .CI );return _egfb ._faff ;};func (_bbdg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ecbf *_da .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_aagf :=PdfAnnotationFileAttachment {};_geba ,_aafb :=_bbdg .newPdfAnnotationMarkupFromDict (_ecbf );if _aafb !=nil {return nil ,_aafb ;};_aagf .PdfAnnotationMarkup =_geba ;_aagf .FS =_ecbf .Get ("\u0046\u0053");_aagf .Name =_ecbf .Get ("\u004e\u0061\u006d\u0065");return &_aagf ,nil ;};var _cgaa =_eb .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _adcgc ()string {_feae :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _cegd _bf .Buffer ;for _eecfe :=0;_eecfe < 6;_eecfe ++{_cegd .WriteRune (rune (_feae [_b .Intn (len (_feae ))]));};return _cegd .String ();};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_efg :=NewPdfAnnotation ();_ffaa :=&PdfAnnotationUnderline {};_ffaa .PdfAnnotation =_efg ;_ffaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efg .SetContext (_ffaa );return _ffaa ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject implements interface PdfModel.
func (_eeb *PdfActionLaunch )ToPdfObject ()_da .PdfObject {_eeb .PdfAction .ToPdfObject ();_cfec :=_eeb ._cf ;_ade :=_cfec .PdfObject .(*_da .PdfObjectDictionary );_ade .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeLaunch )));if _eeb .F !=nil {_ade .Set ("\u0046",_eeb .F .ToPdfObject ());};_ade .SetIfNotNil ("\u0057\u0069\u006e",_eeb .Win );_ade .SetIfNotNil ("\u004d\u0061\u0063",_eeb .Mac );_ade .SetIfNotNil ("\u0055\u006e\u0069\u0078",_eeb .Unix );_ade .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eeb .NewWindow );return _cfec ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ddfg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dded ,_adge :=_da .GetNumbersAsFloat (objects );if _adge !=nil {return nil ,_adge ;};return _ddfg .ColorFromFloats (_dded );};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// AddOutlineTree adds outlines to a PDF file.
func (_bgce *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_bgce ._cgga =outlineTree };

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _da .PdfObject ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _da .PdfObject )(*PdfFilespec ,error ){_aebe :=&PdfFilespec {};var _dbbbd *_da .PdfObjectDictionary ;if _fgebc ,_fcebd :=_da .GetIndirect (obj );_fcebd {_aebe ._faff =_fgebc ;_cccg ,_dcgc :=_da .GetDict (_fgebc .PdfObject );if !_dcgc {_ac .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_da .ErrTypeError ;};_dbbbd =_cccg ;}else if _ecfe ,_fdge :=_da .GetDict (obj );_fdge {_aebe ._faff =_ecfe ;_dbbbd =_ecfe ;}else {_ac .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_da .ErrTypeError ;};if _dbbbd ==nil {_ac .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ag .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _dfdad :=_dbbbd .Get ("\u0054\u0079\u0070\u0065");_dfdad !=nil {_aaaa ,_fece :=_dfdad .(*_da .PdfObjectName );if !_fece {_ac .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dfdad );}else {if *_aaaa !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ac .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_aaaa );};};};if _ccef :=_dbbbd .Get ("\u0046\u0053");_ccef !=nil {_aebe .FS =_ccef ;};if _agfg :=_dbbbd .Get ("\u0046");_agfg !=nil {_aebe .F =_agfg ;};if _cded :=_dbbbd .Get ("\u0055\u0046");_cded !=nil {_aebe .UF =_cded ;};if _ffbc :=_dbbbd .Get ("\u0044\u004f\u0053");_ffbc !=nil {_aebe .DOS =_ffbc ;};if _aaca :=_dbbbd .Get ("\u004d\u0061\u0063");_aaca !=nil {_aebe .Mac =_aaca ;};if _ccgf :=_dbbbd .Get ("\u0055\u006e\u0069\u0078");_ccgf !=nil {_aebe .Unix =_ccgf ;};if _bgfag :=_dbbbd .Get ("\u0049\u0044");_bgfag !=nil {_aebe .ID =_bgfag ;};if _bdfbb :=_dbbbd .Get ("\u0056");_bdfbb !=nil {_aebe .V =_bdfbb ;};if _aabb :=_dbbbd .Get ("\u0045\u0046");_aabb !=nil {_aebe .EF =_aabb ;};if _gfggf :=_dbbbd .Get ("\u0052\u0046");_gfggf !=nil {_aebe .RF =_gfggf ;};if _ecea :=_dbbbd .Get ("\u0044\u0065\u0073\u0063");_ecea !=nil {_aebe .Desc =_ecea ;};if _fbgb :=_dbbbd .Get ("\u0043\u0049");_fbgb !=nil {_aebe .CI =_fbgb ;};return _aebe ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_gdbd *PdfFont )BaseFont ()string {return _gdbd .baseFields ()._dabeae };

// GetTrailer returns the PDF's trailer dictionary.
func (_fcabbe *PdfReader )GetTrailer ()(*_da .PdfObjectDictionary ,error ){_fcfgb :=_fcabbe ._bcgcg .GetTrailer ();if _fcfgb ==nil {return nil ,_ag .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fcfgb ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_agbcd *Image )GetParamsDict ()*_da .PdfObjectDictionary {_fgaf :=_da .MakeDict ();_fgaf .Set ("\u0057\u0069\u0064t\u0068",_da .MakeInteger (_agbcd .Width ));_fgaf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_da .MakeInteger (_agbcd .Height ));_fgaf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_da .MakeInteger (int64 (_agbcd .ColorComponents )));_fgaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_da .MakeInteger (_agbcd .BitsPerComponent ));return _fgaf ;};func (_ggcb *PdfReader )newPdfAnnotationUnderlineFromDict (_beg *_da .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bfbcg :=PdfAnnotationUnderline {};_bba ,_fgaa :=_ggcb .newPdfAnnotationMarkupFromDict (_beg );if _fgaa !=nil {return nil ,_fgaa ;};_bfbcg .PdfAnnotationMarkup =_bba ;_bfbcg .QuadPoints =_beg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bfbcg ,nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dabc *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdaff :=vals [0];if _bdaff < 0.0||_bdaff > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aedd :=vals [1];if _aedd < 0.0||_aedd > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecfg :=vals [2];if _ecfg < 0.0||_ecfg > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fad :=vals [3];if _fad < 0.0||_fad > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_debf :=NewPdfColorDeviceCMYK (_bdaff ,_aedd ,_ecfg ,_fad );return _debf ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_gdab *PdfFieldButton )IsRadio ()bool {return _gdab .GetType ()==ButtonTypeRadio };

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_fcac *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// R returns the value of the red component of the color.
func (_dcfd *PdfColorDeviceRGB )R ()float64 {return float64 (_dcfd [0])};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gecb *PdfColorspaceSpecialSeparation )ToPdfObject ()_da .PdfObject {_aefg :=_da .MakeArray (_da .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_aefg .Append (_gecb .ColorantName );_aefg .Append (_gecb .AlternateSpace .ToPdfObject ());_aefg .Append (_gecb .TintTransform .ToPdfObject ());if _gecb ._addc !=nil {_gecb ._addc .PdfObject =_aefg ;return _gecb ._addc ;};return _aefg ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bcace *PdfField )Flags ()FieldFlag {var _ccecf FieldFlag ;_bbcbc ,_fdgb :=_bcace .inherit (func (_adgc *PdfField )bool {if _adgc .Ff !=nil {_ccecf =FieldFlag (*_bcace .Ff );return true ;};return false ;});if _fdgb !=nil {_ac .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_fdgb );};if !_bbcbc {_ac .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _ccecf ;};func (_efgc *PdfReader )newPdfAnnotationStampFromDict (_adg *_da .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_adgd :=PdfAnnotationStamp {};_gad ,_dabb :=_efgc .newPdfAnnotationMarkupFromDict (_adg );if _dabb !=nil {return nil ,_dabb ;};_adgd .PdfAnnotationMarkup =_gad ;_adgd .Name =_adg .Get ("\u004e\u0061\u006d\u0065");return &_adgd ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_gdgfd *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceeb ,_eddc :=_da .GetNumbersAsFloat (objects );if _eddc !=nil {return nil ,_eddc ;};return _gdgfd .ColorFromFloats (_ceeb );};

// SetReason sets the `Reason` field of the signature.
func (_efdfg *PdfSignature )SetReason (reason string ){_efdfg .Reason =_da .MakeString (reason )};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_egggf *_da .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_da .PdfObjectName ;Filter *_da .PdfObjectName ;SubFilter *_da .PdfObjectName ;Contents *_da .PdfObjectString ;Cert _da .PdfObject ;ByteRange *_da .PdfObjectArray ;Reference *_da .PdfObjectArray ;Changes *_da .PdfObjectArray ;Name *_da .PdfObjectString ;M *_da .PdfObjectString ;Location *_da .PdfObjectString ;Reason *_da .PdfObjectString ;ContactInfo *_da .PdfObjectString ;R *_da .PdfObjectInteger ;V *_da .PdfObjectInteger ;PropBuild *_da .PdfObjectDictionary ;PropAuthTime *_da .PdfObjectInteger ;PropAuthType *_da .PdfObjectName ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bfabb *PdfPattern )IsTiling ()bool {return _bfabb .PatternType ==1};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fefa *PdfPageResources )GetExtGState (keyName _da .PdfObjectName )(_da .PdfObject ,bool ){if _fefa .ExtGState ==nil {return nil ,false ;};_dgaee ,_fefad :=_da .TraceToDirectObject (_fefa .ExtGState ).(*_da .PdfObjectDictionary );if !_fefad {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fefa .ExtGState );return nil ,false ;};if _ceege :=_dgaee .Get (keyName );_ceege !=nil {return _ceege ,true ;};return nil ,false ;};func _fagfc ()string {return _cdggc };

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_da .PdfIndirectObject )*PdfOutlineItem {_bdagd :=PdfOutlineItem {};_bdagd ._acedd =&_bdagd ;_bdagd .Title =_da .MakeString (title );_fbad :=_da .MakeArray ();_fbad .Append (page );_fbad .Append (_da .MakeName ("\u0046\u0069\u0074"));_bdagd .Dest =_fbad ;return &_bdagd ;};

// ToPdfObject implements interface PdfModel.
func (_acga *PdfAnnotationFreeText )ToPdfObject ()_da .PdfObject {_acga .PdfAnnotation .ToPdfObject ();_cabd :=_acga ._cfd ;_afdd :=_cabd .PdfObject .(*_da .PdfObjectDictionary );_acga .PdfAnnotationMarkup .appendToPdfDictionary (_afdd );_afdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_afdd .SetIfNotNil ("\u0044\u0041",_acga .DA );_afdd .SetIfNotNil ("\u0051",_acga .Q );_afdd .SetIfNotNil ("\u0052\u0043",_acga .RC );_afdd .SetIfNotNil ("\u0044\u0053",_acga .DS );_afdd .SetIfNotNil ("\u0043\u004c",_acga .CL );_afdd .SetIfNotNil ("\u0049\u0054",_acga .IT );_afdd .SetIfNotNil ("\u0042\u0045",_acga .BE );_afdd .SetIfNotNil ("\u0052\u0044",_acga .RD );_afdd .SetIfNotNil ("\u0042\u0053",_acga .BS );_afdd .SetIfNotNil ("\u004c\u0045",_acga .LE );return _cabd ;};func (_eebgc *fontFile )loadFromSegments (_bdgef ,_ecfda []byte )error {_ac .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_bdgef ),len (_ecfda ));_dcbcc :=_eebgc .parseASCIIPart (_bdgef );if _dcbcc !=nil {return _dcbcc ;};_ac .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_eebgc );if len (_ecfda )==0{return nil ;};_ac .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_eebgc );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbc *PdfActionTrans )ToPdfObject ()_da .PdfObject {_cbc .PdfAction .ToPdfObject ();_cda :=_cbc ._cf ;_bcca :=_cda .PdfObject .(*_da .PdfObjectDictionary );_bcca .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeTrans )));_bcca .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cbc .Trans );return _cda ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fgff *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ag .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_bbcd ,_aeabe :=_eff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._efgcc ,img ._dfff );if _aeabe !=nil {return img ,_aeabe ;};_becc ,_aeabe :=_eff .GrayConverter .Convert (_bbcd );if _aeabe !=nil {return img ,_aeabe ;};return _abag (_becc .Base ()),nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_bfeec *PdfPageResources )GetFontByName (keyName _da .PdfObjectName )(_da .PdfObject ,bool ){if _bfeec .Font ==nil {return nil ,false ;};_eagc ,_bddcb :=_da .TraceToDirectObject (_bfeec .Font ).(*_da .PdfObjectDictionary );if !_bddcb {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_da .TraceToDirectObject (_bfeec .Font ));return nil ,false ;};if _egefg :=_eagc .Get (keyName );_egefg !=nil {return _egefg ,true ;};return nil ,false ;};

// B returns the value of the B component of the color.
func (_afdc *PdfColorLab )B ()float64 {return float64 (_afdc [2])};func _bcgdg (_dgbge *_da .PdfIndirectObject )(*PdfOutline ,error ){_dcbg ,_acbd :=_dgbge .PdfObject .(*_da .PdfObjectDictionary );if !_acbd {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dcfa :=NewPdfOutline ();if _gggg :=_dcbg .Get ("\u0054\u0079\u0070\u0065");_gggg !=nil {_eaea ,_aabbc :=_gggg .(*_da .PdfObjectName );if _aabbc {if *_eaea !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_eaea );};};};if _dbee :=_dcbg .Get ("\u0043\u006f\u0075n\u0074");_dbee !=nil {_dgbe ,_bbgff :=_da .GetNumberAsInt64 (_dbee );if _bbgff !=nil {return nil ,_bbgff ;};_dcfa .Count =&_dgbe ;};return _dcfa ,nil ;};func (_bbea *PdfReader )newPdfActionGotoEFromDict (_agb *_da .PdfObjectDictionary )(*PdfActionGoToE ,error ){_bff ,_gca :=_caff (_agb .Get ("\u0046"));if _gca !=nil {return nil ,_gca ;};return &PdfActionGoToE {D :_agb .Get ("\u0044"),NewWindow :_agb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_agb .Get ("\u0054"),F :_bff },nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfActionMovie )ToPdfObject ()_da .PdfObject {_ecb .PdfAction .ToPdfObject ();_ed :=_ecb ._cf ;_abb :=_ed .PdfObject .(*_da .PdfObjectDictionary );_abb .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeMovie )));_abb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ecb .Annotation );_abb .SetIfNotNil ("\u0054",_ecb .T );_abb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ecb .Operation );return _ed ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_baece *Outline )Insert (index uint ,item *OutlineItem ){_bbfdc :=uint (len (_baece .Entries ));if index > _bbfdc {index =_bbfdc ;};_baece .Entries =append (_baece .Entries [:index ],append ([]*OutlineItem {item },_baece .Entries [index :]...)...);};func _cffa (_bffff _da .PdfObject )(*PdfFunctionType3 ,error ){_ecega :=&PdfFunctionType3 {};var _cebfb *_da .PdfObjectDictionary ;if _gfbba ,_dbga :=_bffff .(*_da .PdfIndirectObject );_dbga {_gedd ,_beeca :=_gfbba .PdfObject .(*_da .PdfObjectDictionary );if !_beeca {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecega ._cdcd =_gfbba ;_cebfb =_gedd ;}else if _bfab ,_gdgcd :=_bffff .(*_da .PdfObjectDictionary );_gdgcd {_cebfb =_bfab ;}else {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbgf ,_edcg :=_da .TraceToDirectObject (_cebfb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_edcg {_ac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cbgf .Len ()!=2{_ac .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cbegg ,_fgcf :=_cbgf .ToFloat64Array ();if _fgcf !=nil {return nil ,_fgcf ;};_ecega .Domain =_cbegg ;_cbgf ,_edcg =_da .TraceToDirectObject (_cebfb .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if _edcg {if _cbgf .Len ()< 0||_cbgf .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gcgae ,_degg :=_cbgf .ToFloat64Array ();if _degg !=nil {return nil ,_degg ;};_ecega .Range =_gcgae ;};_cbgf ,_edcg =_da .TraceToDirectObject (_cebfb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_da .PdfObjectArray );if !_edcg {_ac .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ecega .Functions =[]PdfFunction {};for _ ,_ebgb :=range _cbgf .Elements (){_babac ,_ccde :=_eeebd (_ebgb );if _ccde !=nil {return nil ,_ccde ;};_ecega .Functions =append (_ecega .Functions ,_babac );};_cbgf ,_edcg =_da .TraceToDirectObject (_cebfb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_da .PdfObjectArray );if !_edcg {_ac .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aadf ,_fgcf :=_cbgf .ToFloat64Array ();if _fgcf !=nil {return nil ,_fgcf ;};_ecega .Bounds =_aadf ;if len (_ecega .Bounds )!=len (_ecega .Functions )-1{_ac .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ecega .Bounds ),len (_ecega .Functions ));return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbgf ,_edcg =_da .TraceToDirectObject (_cebfb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_da .PdfObjectArray );if !_edcg {_ac .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_abea ,_fgcf :=_cbgf .ToFloat64Array ();if _fgcf !=nil {return nil ,_fgcf ;};_ecega .Encode =_abea ;if len (_ecega .Encode )!=2*len (_ecega .Functions ){_ac .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ecega .Encode ),len (_ecega .Functions ));return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ecega ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fbab *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cee .CharCode )(_gfefb []rune ,_cddff ,_fbeae int ){_bgfg ,_cddff ,_fbeae :=_fbab .CharcodesToStrings (charcodes );return []rune (_gd .Join (_bgfg ,"")),_cddff ,_fbeae ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_bed :=NewPdfAnnotation ();_eda :=&PdfAnnotationPopup {};_eda .PdfAnnotation =_bed ;_bed .SetContext (_eda );return _eda ;};func (_ffa *PdfReader )newPdfActionResetFormFromDict (_gcf *_da .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gcf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gcf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_egabfd *PdfOutlineTreeNode )ToPdfObject ()_da .PdfObject {return _egabfd .GetContext ().ToPdfObject ();};

// Initialize initializes the PdfSignature.
func (_ecga *PdfSignature )Initialize ()error {if _ecga .Handler ==nil {return _ag .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _ecga .Handler .InitSignature (_ecga );};

// ToPdfObject implements interface PdfModel.
func (_baace *PdfAnnotationPopup )ToPdfObject ()_da .PdfObject {_baace .PdfAnnotation .ToPdfObject ();_dfgf :=_baace ._cfd ;_ccebd :=_dfgf .PdfObject .(*_da .PdfObjectDictionary );_ccebd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0050\u006f\u0070u\u0070"));_ccebd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_baace .Parent );_ccebd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_baace .Open );return _dfgf ;};func _becee (_cfdff *_da .PdfObjectDictionary )(*PdfShadingType4 ,error ){_ecae :=PdfShadingType4 {};_ddgg :=_cfdff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ddgg ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gbacbd ,_ccbbd :=_ddgg .(*_da .PdfObjectInteger );if !_ccbbd {_ac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddgg );return nil ,_da .ErrTypeError ;};_ecae .BitsPerCoordinate =_gbacbd ;_ddgg =_cfdff .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ddgg ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gbacbd ,_ccbbd =_ddgg .(*_da .PdfObjectInteger );if !_ccbbd {_ac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ddgg );return nil ,_da .ErrTypeError ;};_ecae .BitsPerComponent =_gbacbd ;_ddgg =_cfdff .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ddgg ==nil {_ac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_gbacbd ,_ccbbd =_ddgg .(*_da .PdfObjectInteger );if !_ccbbd {_ac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ddgg );return nil ,_da .ErrTypeError ;};_ecae .BitsPerComponent =_gbacbd ;_ddgg =_cfdff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ddgg ==nil {_ac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dcgggc ,_ccbbd :=_ddgg .(*_da .PdfObjectArray );if !_ccbbd {_ac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddgg );return nil ,_da .ErrTypeError ;};_ecae .Decode =_dcgggc ;_ddgg =_cfdff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ddgg ==nil {_ac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_ecae .Function =[]PdfFunction {};if _gdcba ,_eeec :=_ddgg .(*_da .PdfObjectArray );_eeec {for _ ,_cgebd :=range _gdcba .Elements (){_gbece ,_eaeb :=_eeebd (_cgebd );if _eaeb !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eaeb );return nil ,_eaeb ;};_ecae .Function =append (_ecae .Function ,_gbece );};}else {_ggad ,_ddbgf :=_eeebd (_ddgg );if _ddbgf !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddbgf );return nil ,_ddbgf ;};_ecae .Function =append (_ecae .Function ,_ggad );};return &_ecae ,nil ;};func _bbbcb (_ffe _da .PdfObject )(*PdfColorspaceLab ,error ){_aead :=NewPdfColorspaceLab ();if _eddd ,_ddgb :=_ffe .(*_da .PdfIndirectObject );_ddgb {_aead ._abcg =_eddd ;};_ffe =_da .TraceToDirectObject (_ffe );_adab ,_fffg :=_ffe .(*_da .PdfObjectArray );if !_fffg {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adab .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_ffe =_da .TraceToDirectObject (_adab .Get (0));_accf ,_fffg :=_ffe .(*_da .PdfObjectName );if !_fffg {return nil ,_f .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_accf !="\u004c\u0061\u0062"{return nil ,_f .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_ffe =_da .TraceToDirectObject (_adab .Get (1));_acddb ,_fffg :=_ffe .(*_da .PdfObjectDictionary );if !_fffg {return nil ,_f .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_ffe =_acddb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ffe =_da .TraceToDirectObject (_ffe );_ggcd ,_fffg :=_ffe .(*_da .PdfObjectArray );if !_fffg {return nil ,_f .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _ggcd .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_cdbcg ,_feeee :=_ggcd .GetAsFloat64Slice ();if _feeee !=nil {return nil ,_feeee ;};_aead .WhitePoint =_cdbcg ;_ffe =_acddb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ffe !=nil {_ffe =_da .TraceToDirectObject (_ffe );_bedf ,_adaa :=_ffe .(*_da .PdfObjectArray );if !_adaa {return nil ,_f .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _bedf .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_cbgd ,_aceg :=_bedf .GetAsFloat64Slice ();if _aceg !=nil {return nil ,_aceg ;};_aead .BlackPoint =_cbgd ;};_ffe =_acddb .Get ("\u0052\u0061\u006eg\u0065");if _ffe !=nil {_ffe =_da .TraceToDirectObject (_ffe );_egge ,_dbbf :=_ffe .(*_da .PdfObjectArray );if !_dbbf {_ac .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_f .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egge .Len ()!=4{_ac .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cggg ,_agdd :=_egge .GetAsFloat64Slice ();if _agdd !=nil {return nil ,_agdd ;};_aead .Range =_cggg ;};return _aead ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_dfb *PdfAppender )WriteToFile (outputPath string )error {_ecge ,_adec :=_ec .Create (outputPath );if _adec !=nil {return _adec ;};defer _ecge .Close ();return _dfb .Write (_ecge );};

// Fill populates `form` with values provided by `provider`.
func (_efcd *PdfAcroForm )Fill (provider FieldValueProvider )error {return _efcd .fill (provider ,nil )};func _ddegg ()string {return _ac .Version };

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_febaa :=&PdfOutline {_caegf :_da .MakeIndirectObject (_da .MakeDict ())};_febaa ._acedd =_febaa ;return _febaa ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject implements interface PdfModel.
func (_cbfa *PdfAnnotationSound )ToPdfObject ()_da .PdfObject {_cbfa .PdfAnnotation .ToPdfObject ();_gfdg :=_cbfa ._cfd ;_fedg :=_gfdg .PdfObject .(*_da .PdfObjectDictionary );_cbfa .PdfAnnotationMarkup .appendToPdfDictionary (_fedg );_fedg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u006f\u0075n\u0064"));_fedg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_cbfa .Sound );_fedg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cbfa .Name );return _gfdg ;};

// ToPdfObject implements interface PdfModel.
func (_bcac *PdfBorderStyle )ToPdfObject ()_da .PdfObject {_egff :=_da .MakeDict ();if _bcac ._fgb !=nil {if _bggg ,_dbeda :=_bcac ._fgb .(*_da .PdfIndirectObject );_dbeda {_bggg .PdfObject =_egff ;};};_egff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _bcac .W !=nil {_egff .Set ("\u0057",_da .MakeFloat (*_bcac .W ));};if _bcac .S !=nil {_egff .Set ("\u0053",_da .MakeName (_bcac .S .GetPdfName ()));};if _bcac .D !=nil {_egff .Set ("\u0044",_da .MakeArrayFromIntegers (*_bcac .D ));};if _bcac ._fgb !=nil {return _bcac ._fgb ;};return _egff ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _da .PdfObject ;Name _da .PdfObject ;State _da .PdfObject ;StateModel _da .PdfObject ;};func (_bcea *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// HasXObjectByName checks if has XObject resource by name.
func (_ebab *PdfPage )HasXObjectByName (name _da .PdfObjectName )bool {_gffca ,_gegdd :=_ebab .Resources .XObject .(*_da .PdfObjectDictionary );if !_gegdd {return false ;};if _gbfgf :=_gffca .Get (name );_gbfgf !=nil {return true ;};return false ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_bcgee *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_fbdc :=_df .NewReader (img .getBase ());_gggfd :=_eff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gffb :=_df .NewWriter (_gggfd );_ddgf :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_acac :=make ([]uint32 ,3);var (_eaedb error ;_bbcb ,_fbac ,_caba ,_fgbc ,_bade ,_cfca float64 ;);for {_eaedb =_fbdc .ReadSamples (_acac );if _eaedb ==_gg .EOF {break ;}else if _eaedb !=nil {return img ,_eaedb ;};_bbcb =float64 (_acac [0])/_ddgf ;_fbac =float64 (_acac [1])/_ddgf ;_caba =float64 (_acac [2])/_ddgf ;_fgbc =_bcgee .Matrix [0]*_bb .Pow (_bbcb ,_bcgee .Gamma [0])+_bcgee .Matrix [3]*_bb .Pow (_fbac ,_bcgee .Gamma [1])+_bcgee .Matrix [6]*_bb .Pow (_caba ,_bcgee .Gamma [2]);_bade =_bcgee .Matrix [1]*_bb .Pow (_bbcb ,_bcgee .Gamma [0])+_bcgee .Matrix [4]*_bb .Pow (_fbac ,_bcgee .Gamma [1])+_bcgee .Matrix [7]*_bb .Pow (_caba ,_bcgee .Gamma [2]);_cfca =_bcgee .Matrix [2]*_bb .Pow (_bbcb ,_bcgee .Gamma [0])+_bcgee .Matrix [5]*_bb .Pow (_fbac ,_bcgee .Gamma [1])+_bcgee .Matrix [8]*_bb .Pow (_caba ,_bcgee .Gamma [2]);_bbcb =3.240479*_fgbc +-1.537150*_bade +-0.498535*_cfca ;_fbac =-0.969256*_fgbc +1.875992*_bade +0.041556*_cfca ;_caba =0.055648*_fgbc +-0.204043*_bade +1.057311*_cfca ;_bbcb =_bb .Min (_bb .Max (_bbcb ,0),1.0);_fbac =_bb .Min (_bb .Max (_fbac ,0),1.0);_caba =_bb .Min (_bb .Max (_caba ,0),1.0);_acac [0]=uint32 (_bbcb *_ddgf );_acac [1]=uint32 (_fbac *_ddgf );_acac [2]=uint32 (_caba *_ddgf );if _eaedb =_gffb .WriteSamples (_acac );_eaedb !=nil {return img ,_eaedb ;};};return _abag (&_gggfd ),nil ;};

// ToPdfObject returns a stream object.
func (_aacbd *XObjectForm )ToPdfObject ()_da .PdfObject {_fbfea :=_aacbd ._faafe ;_cgbee :=_fbfea .PdfObjectDictionary ;if _aacbd .Filter !=nil {_cgbee =_aacbd .Filter .MakeStreamDict ();_fbfea .PdfObjectDictionary =_cgbee ;};_cgbee .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_cgbee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0046\u006f\u0072\u006d"));_cgbee .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_aacbd .FormType );_cgbee .SetIfNotNil ("\u0042\u0042\u006f\u0078",_aacbd .BBox );_cgbee .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_aacbd .Matrix );if _aacbd .Resources !=nil {_cgbee .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aacbd .Resources .ToPdfObject ());};_cgbee .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_aacbd .Group );_cgbee .SetIfNotNil ("\u0052\u0065\u0066",_aacbd .Ref );_cgbee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_aacbd .MetaData );_cgbee .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_aacbd .PieceInfo );_cgbee .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_aacbd .LastModified );_cgbee .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aacbd .StructParent );_cgbee .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_aacbd .StructParents );_cgbee .SetIfNotNil ("\u004f\u0050\u0049",_aacbd .OPI );_cgbee .SetIfNotNil ("\u004f\u0043",_aacbd .OC );_cgbee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aacbd .Name );_cgbee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_aacbd .Stream ))));_fbfea .Stream =_aacbd .Stream ;return _fbfea ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_da .PdfObjectName ;Colorants _da .PdfObject ;Process _da .PdfObject ;MixingHints _da .PdfObject ;_bedc *_da .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_acab *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_bgac :=_bb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bgac *_acab .R ()),uint32 (_bgac *_acab .G ()),uint32 (_bgac *_acab .B ())};};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fgffde *PdfPageResourcesColorspaces )Set (key _da .PdfObjectName ,val PdfColorspace ){if _ ,_fdgbb :=_fgffde .Colorspaces [string (key )];!_fdgbb {_fgffde .Names =append (_fgffde .Names ,string (key ));};_fgffde .Colorspaces [string (key )]=val ;};

// ToPdfObject implements interface PdfModel.
func (_ebed *PdfAnnotation3D )ToPdfObject ()_da .PdfObject {_ebed .PdfAnnotation .ToPdfObject ();_bce :=_ebed ._cfd ;_dadcb :=_bce .PdfObject .(*_da .PdfObjectDictionary );_dadcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0033\u0044"));_dadcb .SetIfNotNil ("\u0033\u0044\u0044",_ebed .T3DD );_dadcb .SetIfNotNil ("\u0033\u0044\u0056",_ebed .T3DV );_dadcb .SetIfNotNil ("\u0033\u0044\u0041",_ebed .T3DA );_dadcb .SetIfNotNil ("\u0033\u0044\u0049",_ebed .T3DI );_dadcb .SetIfNotNil ("\u0033\u0044\u0042",_ebed .T3DB );return _bce ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcef *PdfShadingType7 )ToPdfObject ()_da .PdfObject {_fcef .PdfShading .ToPdfObject ();_aecga ,_gdfgbc :=_fcef .getShadingDict ();if _gdfgbc !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fcef .BitsPerCoordinate !=nil {_aecga .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fcef .BitsPerCoordinate );};if _fcef .BitsPerComponent !=nil {_aecga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fcef .BitsPerComponent );};if _fcef .BitsPerFlag !=nil {_aecga .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fcef .BitsPerFlag );};if _fcef .Decode !=nil {_aecga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fcef .Decode );};if _fcef .Function !=nil {if len (_fcef .Function )==1{_aecga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcef .Function [0].ToPdfObject ());}else {_acdec :=_da .MakeArray ();for _ ,_aabegg :=range _fcef .Function {_acdec .Append (_aabegg .ToPdfObject ());};_aecga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acdec );};};return _fcef ._fgfdc ;};

// ToPdfObject implements interface PdfModel.
func (_defb *PdfAnnotationHighlight )ToPdfObject ()_da .PdfObject {_defb .PdfAnnotation .ToPdfObject ();_cbbd :=_defb ._cfd ;_eaeg :=_cbbd .PdfObject .(*_da .PdfObjectDictionary );_defb .PdfAnnotationMarkup .appendToPdfDictionary (_eaeg );_eaeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_eaeg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_defb .QuadPoints );return _cbbd ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_fgggdd :=&PdfColorspaceDeviceN {};return _fgggdd ;};func _ffaed (_ebcgce *_da .PdfObjectDictionary )(*PdfFieldChoice ,error ){_adefa :=&PdfFieldChoice {};_adefa .Opt ,_ =_da .GetArray (_ebcgce .Get ("\u004f\u0070\u0074"));_adefa .TI ,_ =_da .GetInt (_ebcgce .Get ("\u0054\u0049"));_adefa .I ,_ =_da .GetArray (_ebcgce .Get ("\u0049"));return _adefa ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;BitsPerFlag *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the function.
func (_facaa *PdfFunctionType4 )ToPdfObject ()_da .PdfObject {_fbbcg :=_facaa ._bcdab ;if _fbbcg ==nil {_facaa ._bcdab =&_da .PdfObjectStream {};_fbbcg =_facaa ._bcdab ;};_fadd :=_da .MakeDict ();_fadd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (4));_bafa :=&_da .PdfObjectArray {};for _ ,_ggbg :=range _facaa .Domain {_bafa .Append (_da .MakeFloat (_ggbg ));};_fadd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bafa );_fdagd :=&_da .PdfObjectArray {};for _ ,_cgdg :=range _facaa .Range {_fdagd .Append (_da .MakeFloat (_cgdg ));};_fadd .Set ("\u0052\u0061\u006eg\u0065",_fdagd );if _facaa ._bfag ==nil &&_facaa .Program !=nil {_facaa ._bfag =[]byte (_facaa .Program .String ());};_fadd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_facaa ._bfag ))));_fbbcg .Stream =_facaa ._bfag ;_fbbcg .PdfObjectDictionary =_fadd ;return _fbbcg ;};func (_dgdc *PdfReader )newPdfAnnotationMarkupFromDict (_dgcgf *_da .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_acgd :=&PdfAnnotationMarkup {};if _gcd :=_dgcgf .Get ("\u0054");_gcd !=nil {_acgd .T =_gcd ;};if _gdbb :=_dgcgf .Get ("\u0050\u006f\u0070u\u0070");_gdbb !=nil {_aac ,_cabe :=_gdbb .(*_da .PdfIndirectObject );if !_cabe {if _ ,_aagb :=_gdbb .(*_da .PdfObjectNull );!_aagb {return nil ,_ag .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_afbbg ,_gfgc :=_dgdc .newPdfAnnotationFromIndirectObject (_aac );if _gfgc !=nil {return nil ,_gfgc ;};if _afbbg !=nil {_ced ,_aeabg :=_afbbg ._gbd .(*PdfAnnotationPopup );if !_aeabg {return nil ,_ag .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_acgd .Popup =_ced ;};};};if _bdag :=_dgcgf .Get ("\u0043\u0041");_bdag !=nil {_acgd .CA =_bdag ;};if _bbbe :=_dgcgf .Get ("\u0052\u0043");_bbbe !=nil {_acgd .RC =_bbbe ;};if _fdg :=_dgcgf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_fdg !=nil {_acgd .CreationDate =_fdg ;};if _cdgg :=_dgcgf .Get ("\u0049\u0052\u0054");_cdgg !=nil {_acgd .IRT =_cdgg ;};if _ccec :=_dgcgf .Get ("\u0053\u0075\u0062\u006a");_ccec !=nil {_acgd .Subj =_ccec ;};if _ebdg :=_dgcgf .Get ("\u0052\u0054");_ebdg !=nil {_acgd .RT =_ebdg ;};if _ceb :=_dgcgf .Get ("\u0049\u0054");_ceb !=nil {_acgd .IT =_ceb ;};if _gegd :=_dgcgf .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_gegd !=nil {_acgd .ExData =_gegd ;};return _acgd ,nil ;};func (_aadb *PdfReader )newPdfAnnotationLinkFromDict (_baac *_da .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gged :=PdfAnnotationLink {};_gged .A =_baac .Get ("\u0041");_gged .Dest =_baac .Get ("\u0044\u0065\u0073\u0074");_gged .H =_baac .Get ("\u0048");_gged .PA =_baac .Get ("\u0050\u0041");_gged .QuadPoints =_baac .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gged .BS =_baac .Get ("\u0042\u0053");return &_gged ,nil ;};func _cacg (_gegdb string )map[string ]string {_bdcea :=_cgaa .Split (_gegdb ,-1);_fbgeb :=map[string ]string {};for _ ,_dgeg :=range _bdcea {_dgdbg :=_fdcd .FindStringSubmatch (_dgeg );if _dgdbg ==nil {continue ;};_bfbdcg ,_bbdbc :=_dgdbg [1],_dgdbg [2];_fbgeb [_bfbdcg ]=_bbdbc ;};return _fbgeb ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gebbg *PdfOutlineItem )ToPdfObject ()_da .PdfObject {_gege :=_gebbg ._fbae ;_dfdef :=_gege .PdfObject .(*_da .PdfObjectDictionary );_dfdef .Set ("\u0054\u0069\u0074l\u0065",_gebbg .Title );if _gebbg .A !=nil {_dfdef .Set ("\u0041",_gebbg .A );};if _eaefce :=_dfdef .Get ("\u0053\u0045");_eaefce !=nil {_dfdef .Remove ("\u0053\u0045");};if _gebbg .C !=nil {_dfdef .Set ("\u0043",_gebbg .C );};if _gebbg .Dest !=nil {_dfdef .Set ("\u0044\u0065\u0073\u0074",_gebbg .Dest );};if _gebbg .F !=nil {_dfdef .Set ("\u0046",_gebbg .F );};if _gebbg .Count !=nil {_dfdef .Set ("\u0043\u006f\u0075n\u0074",_da .MakeInteger (*_gebbg .Count ));};if _gebbg .Next !=nil {_dfdef .Set ("\u004e\u0065\u0078\u0074",_gebbg .Next .ToPdfObject ());};if _gebbg .First !=nil {_dfdef .Set ("\u0046\u0069\u0072s\u0074",_gebbg .First .ToPdfObject ());};if _gebbg .Prev !=nil {_dfdef .Set ("\u0050\u0072\u0065\u0076",_gebbg .Prev .GetContext ().GetContainingPdfObject ());};if _gebbg .Last !=nil {_dfdef .Set ("\u004c\u0061\u0073\u0074",_gebbg .Last .GetContext ().GetContainingPdfObject ());};if _gebbg .Parent !=nil {_dfdef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gebbg .Parent .GetContext ().GetContainingPdfObject ());};return _gege ;};func (_deaa *PdfReader )newPdfAnnotation3DFromDict (_cgdf *_da .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_egde :=PdfAnnotation3D {};_egde .T3DD =_cgdf .Get ("\u0033\u0044\u0044");_egde .T3DV =_cgdf .Get ("\u0033\u0044\u0056");_egde .T3DA =_cgdf .Get ("\u0033\u0044\u0041");_egde .T3DI =_cgdf .Get ("\u0033\u0044\u0049");_egde .T3DB =_cgdf .Get ("\u0033\u0044\u0042");return &_egde ,nil ;};

// ToInteger convert to an integer format.
func (_aafg *PdfColorCalGray )ToInteger (bits int )uint32 {_cbga :=_bb .Pow (2,float64 (bits ))-1;return uint32 (_cbga *_aafg .Val ());};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_edgc pdfFont };

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_aca *PdfAnnotation )ToPdfObject ()_da .PdfObject {_cfgf :=_aca ._cfd ;_bbfc :=_cfgf .PdfObject .(*_da .PdfObjectDictionary );_bbfc .Clear ();_bbfc .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0041\u006e\u006eo\u0074"));_bbfc .SetIfNotNil ("\u0052\u0065\u0063\u0074",_aca .Rect );_bbfc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aca .Contents );_bbfc .SetIfNotNil ("\u0050",_aca .P );_bbfc .SetIfNotNil ("\u004e\u004d",_aca .NM );_bbfc .SetIfNotNil ("\u004d",_aca .M );_bbfc .SetIfNotNil ("\u0046",_aca .F );_bbfc .SetIfNotNil ("\u0041\u0050",_aca .AP );_bbfc .SetIfNotNil ("\u0041\u0053",_aca .AS );_bbfc .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_aca .Border );_bbfc .SetIfNotNil ("\u0043",_aca .C );_bbfc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aca .StructParent );_bbfc .SetIfNotNil ("\u004f\u0043",_aca .OC );return _cfgf ;};func (_ddga *PdfReader )newPdfActionHideFromDict (_faef *_da .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_faef .Get ("\u0054"),H :_faef .Get ("\u0048")},nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _da .PdfObject ;MK _da .PdfObject ;A _da .PdfObject ;AA _da .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcfa *PdfColorspaceDeviceRGB )ToPdfObject ()_da .PdfObject {return _da .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gadf *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_bfff *PdfAnnotationRichMedia )ToPdfObject ()_da .PdfObject {_bfff .PdfAnnotation .ToPdfObject ();_dgee :=_bfff ._cfd ;_eab :=_dgee .PdfObject .(*_da .PdfObjectDictionary );_eab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_eab .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bfff .RichMediaSettings );_eab .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bfff .RichMediaContent );return _dgee ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_ggecd *XObjectImage )SetFilter (encoder _da .StreamEncoder )error {_afdf :=_ggecd .Stream ;_cgdeb ,_ffceb :=_ggecd .Filter .DecodeBytes (_afdf );if _ffceb !=nil {return _ffceb ;};_ggecd .Filter =encoder ;encoder .UpdateParams (_ggecd .getParamsDict ());_afdf ,_ffceb =encoder .EncodeBytes (_cgdeb );if _ffceb !=nil {return _ffceb ;};_ggecd .Stream =_afdf ;return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_da .PdfObjectArray ;TI *_da .PdfObjectInteger ;I *_da .PdfObjectArray ;};

// String returns the name of the colorspace (DeviceN).
func (_ggfd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gced *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebaeg ,_abbg :=_da .GetNumbersAsFloat (objects );if _abbg !=nil {return nil ,_abbg ;};return _gced .ColorFromFloats (_ebaeg );};

// SetImage updates XObject Image with new image data.
func (_febea *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_febea .Filter .UpdateParams (img .GetParamsDict ());_gdbgb ,_bcaca :=_febea .Filter .EncodeBytes (img .Data );if _bcaca !=nil {return _bcaca ;};_febea .Stream =_gdbgb ;_fcdfg :=img .Width ;_febea .Width =&_fcdfg ;_cbdg :=img .Height ;_febea .Height =&_cbdg ;_gdgfb :=img .BitsPerComponent ;_febea .BitsPerComponent =&_gdgfb ;if cs ==nil {if img .ColorComponents ==1{_febea .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_febea .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_febea .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ag .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_febea .ColorSpace =cs ;};return nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _da .PdfObject ;T _da .PdfObject ;Operation _da .PdfObject ;};

// B returns the value of the blue component of the color.
func (_afae *PdfColorDeviceRGB )B ()float64 {return float64 (_afae [2])};

// Register registers (caches) a model to primitive object relationship.
func (_eeeba *modelManager )Register (primitive _da .PdfObject ,model PdfModel ){_eeeba ._eefbe [model ]=primitive ;_eeeba ._cfcc [primitive ]=model ;};

// ToInteger convert to an integer format.
func (_acfa *PdfColorDeviceGray )ToInteger (bits int )uint32 {_bdfbe :=_bb .Pow (2,float64 (bits ))-1;return uint32 (_bdfbe *_acfa .Val ());};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gaac *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_gaac .NumInputs {_ac .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_ag .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _gaac ._cbcb ==nil {_dggg :=_gaac .processSamples ();if _dggg !=nil {return nil ,_dggg ;};};_dgcd :=_gaac .Encode ;if _dgcd ==nil {_dgcd =[]float64 {};for _dcac :=0;_dcac < len (_gaac .Size );_dcac ++{_dgcd =append (_dgcd ,0);_dgcd =append (_dgcd ,float64 (_gaac .Size [_dcac ]-1));};};_cegc :=_gaac .Decode ;if _cegc ==nil {_cegc =_gaac .Range ;};_cfba :=make ([]int ,len (x ));for _baabf :=0;_baabf < len (x );_baabf ++{_fgcab :=x [_baabf ];_bggf :=_bb .Min (_bb .Max (_fgcab ,_gaac .Domain [2*_baabf ]),_gaac .Domain [2*_baabf +1]);_cbcd :=_eff .LinearInterpolate (_bggf ,_gaac .Domain [2*_baabf ],_gaac .Domain [2*_baabf +1],_dgcd [2*_baabf ],_dgcd [2*_baabf +1]);_gdge :=_bb .Min (_bb .Max (_cbcd ,0),float64 (_gaac .Size [_baabf ]-1));_dedg :=int (_bb .Floor (_gdge +0.5));if _dedg < 0{_dedg =0;}else if _dedg > _gaac .Size [_baabf ]{_dedg =_gaac .Size [_baabf ]-1;};_cfba [_baabf ]=_dedg ;};_fcfg :=_cfba [0];for _fcfee :=1;_fcfee < _gaac .NumInputs ;_fcfee ++{_egddf :=_cfba [_fcfee ];for _gdga :=0;_gdga < _fcfee ;_gdga ++{_egddf *=_gaac .Size [_gdga ];};_fcfg +=_egddf ;};_fcfg *=_gaac .NumOutputs ;var _bbfd []float64 ;for _adbda :=0;_adbda < _gaac .NumOutputs ;_adbda ++{_adeb :=_fcfg +_adbda ;if _adeb >=len (_gaac ._cbcb ){_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_gdced :=_gaac ._cbcb [_adeb ];_dbcb :=_eff .LinearInterpolate (float64 (_gdced ),0,_bb .Pow (2,float64 (_gaac .BitsPerSample )),_cegc [2*_adbda ],_cegc [2*_adbda +1]);_bgccb :=_bb .Min (_bb .Max (_dbcb ,_gaac .Range [2*_adbda ]),_gaac .Range [2*_adbda +1]);_bbfd =append (_bbfd ,_bgccb );};return _bbfd ,nil ;};func _ecdag (_bccb *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_bccb }};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_cgbce ,_fgec :=NewStandard14Font (basefont );if _fgec !=nil {panic (_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _cgbce ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _da .PdfObject ;};func (_gedeg *PdfPattern )getDict ()*_da .PdfObjectDictionary {if _cfcgf ,_bceca :=_gedeg ._geggda .(*_da .PdfIndirectObject );_bceca {_cgbcf ,_bbbce :=_cfcgf .PdfObject .(*_da .PdfObjectDictionary );if !_bbbce {return nil ;};return _cgbcf ;}else if _fbag ,_gefea :=_gedeg ._geggda .(*_da .PdfObjectStream );_gefea {return _fbag .PdfObjectDictionary ;}else {_ac .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_gedeg ._geggda );return nil ;};};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_edg *PdfAppender )UpdateObject (obj _da .PdfObject ){_edg .replaceObject (obj ,obj );if _ ,_acdg :=_edg ._gfgd [obj ];!_acdg {_edg ._eacf =append (_edg ._eacf ,obj );_edg ._gfgd [obj ]=struct{}{};};};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ggag *PdfColorspaceSpecialIndexed )ToPdfObject ()_da .PdfObject {_cabfd :=_da .MakeArray (_da .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cabfd .Append (_ggag .Base .ToPdfObject ());_cabfd .Append (_da .MakeInteger (int64 (_ggag .HiVal )));_cabfd .Append (_ggag .Lookup );if _ggag ._ccgc !=nil {_ggag ._ccgc .PdfObject =_cabfd ;return _ggag ._ccgc ;};return _cabfd ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gceca PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_da .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fbga []_da .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bgeb []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_ebfb *PdfReader )loadStructure ()error {if _ebfb ._bcgcg .GetCrypter ()!=nil &&!_ebfb ._bcgcg .IsAuthenticated (){return _f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_bffaa :=_ebfb ._bcgcg .GetTrailer ();if _bffaa ==nil {return _f .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bfege ,_adbdae :=_bffaa .Get ("\u0052\u006f\u006f\u0074").(*_da .PdfObjectReference );if !_adbdae {return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bffaa );};_cdce ,_ceef :=_ebfb ._bcgcg .LookupByReference (*_bfege );if _ceef !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ceef );return _ceef ;};_fdgbg ,_adbdae :=_cdce .(*_da .PdfIndirectObject );if !_adbdae {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cdce ,*_bffaa );return _ag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cdced ,_adbdae :=(*_fdgbg ).PdfObject .(*_da .PdfObjectDictionary );if !_adbdae {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_fdgbg .PdfObject );return _ag .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ac .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cdced );_feecb ,_adbdae :=_cdced .Get ("\u0050\u0061\u0067e\u0073").(*_da .PdfObjectReference );if !_adbdae {return _ag .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_fadfe ,_ceef :=_ebfb ._bcgcg .LookupByReference (*_feecb );if _ceef !=nil {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _ceef ;};_dbfc ,_adbdae :=_fadfe .(*_da .PdfIndirectObject );if !_adbdae {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_ac .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_dbfc );return _ag .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_geed ,_adbdae :=_dbfc .PdfObject .(*_da .PdfObjectDictionary );if !_adbdae {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_dbfc );return _ag .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_eccg ,_adbdae :=_da .GetInt (_geed .Get ("\u0043\u006f\u0075n\u0074"));if !_adbdae {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _ag .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_adbdae =_da .GetName (_geed .Get ("\u0054\u0079\u0070\u0065"));!_adbdae {_ac .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_geed .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050\u0061\u0067e\u0073"));};_ebfb ._cdcde =_bfege ;_ebfb ._ddgbf =_cdced ;_ebfb ._dcdcg =_geed ;_ebfb ._cbecc =_dbfc ;_ebfb ._fdbf =int (*_eccg );_ebfb ._efbae =[]*_da .PdfIndirectObject {};_aeebb :=map[_da .PdfObject ]struct{}{};_ceef =_ebfb .buildPageList (_dbfc ,nil ,_aeebb );if _ceef !=nil {return _ceef ;};_ac .Log .Trace ("\u002d\u002d\u002d");_ac .Log .Trace ("\u0054\u004f\u0043");_ac .Log .Trace ("\u0050\u0061\u0067e\u0073");_ac .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ebfb ._efbae ),_ebfb ._efbae );_ebfb ._ebdfe ,_ceef =_ebfb .loadOutlines ();if _ceef !=nil {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_ceef );return _ceef ;};_ebfb .AcroForm ,_ceef =_ebfb .loadForms ();if _ceef !=nil {return _ceef ;};return nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_aa *PdfAction )GetContext ()PdfModel {if _aa ==nil {return nil ;};return _aa ._ae ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_cfed :_da .MakeIndirectObject (_da .MakeDict ())}};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_dg .CharMetrics ;

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_dfga :=NewPdfAction ();_fgg :=&PdfActionMovie {};_fgg .PdfAction =_dfga ;_dfga .SetContext (_fgg );return _fgg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bcfd *PdfOutline )ToPdfObject ()_da .PdfObject {_gcgg :=_bcfd ._caegf ;_ccefc :=_gcgg .PdfObject .(*_da .PdfObjectDictionary );_ccefc .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _bcfd .First !=nil {_ccefc .Set ("\u0046\u0069\u0072s\u0074",_bcfd .First .ToPdfObject ());};if _bcfd .Last !=nil {_ccefc .Set ("\u004c\u0061\u0073\u0074",_bcfd .Last .GetContext ().GetContainingPdfObject ());};if _bcfd .Parent !=nil {_ccefc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bcfd .Parent .GetContext ().GetContainingPdfObject ());};if _bcfd .Count !=nil {_ccefc .Set ("\u0043\u006f\u0075n\u0074",_da .MakeInteger (*_bcfd .Count ));};return _gcgg ;};

// C returns the value of the cyan component of the color.
func (_eebd *PdfColorDeviceCMYK )C ()float64 {return float64 (_eebd [0])};

// A returns the value of the A component of the color.
func (_gccd *PdfColorCalRGB )A ()float64 {return float64 (_gccd [0])};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_abcgf *PdfFieldButton )ToPdfObject ()_da .PdfObject {_abcgf .PdfField .ToPdfObject ();_dcgee :=_abcgf ._cfed ;_beag :=_dcgee .PdfObject .(*_da .PdfObjectDictionary );_beag .Set ("\u0046\u0054",_da .MakeName ("\u0042\u0074\u006e"));if _abcgf .Opt !=nil {_beag .Set ("\u004f\u0070\u0074",_abcgf .Opt );};return _dcgee ;};func _gaaed (_aaefg _dg .StdFont )pdfFontSimple {_agcee :=_aaefg .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_bffg :"\u0054\u0079\u0070e\u0031",_dabeae :_aaefg .Name ()},_bdad :_aaefg .GetMetricsTable (),_bgfd :&PdfFontDescriptor {FontName :_da .MakeName (string (_agcee .Name )),FontFamily :_da .MakeName (_agcee .Family ),FontWeight :_da .MakeFloat (float64 (_agcee .Weight )),Flags :_da .MakeInteger (int64 (_agcee .Flags )),FontBBox :_da .MakeArrayFromFloats (_agcee .BBox [:]),ItalicAngle :_da .MakeFloat (_agcee .ItalicAngle ),Ascent :_da .MakeFloat (_agcee .Ascent ),Descent :_da .MakeFloat (_agcee .Descent ),CapHeight :_da .MakeFloat (_agcee .CapHeight ),XHeight :_da .MakeFloat (_agcee .XHeight ),StemV :_da .MakeFloat (_agcee .StemV ),StemH :_da .MakeFloat (_agcee .StemH )},_bfdfgg :_aaefg .Encoder ()};};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_eaafa []byte ;_cbcb []uint32 ;_geaa *_da .PdfObjectStream ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cafc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _dacab (_aaaff _da .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cbedac :=&PdfPageResourcesColorspaces {};if _bfcda ,_dbeca :=_aaaff .(*_da .PdfIndirectObject );_dbeca {_cbedac ._adefe =_bfcda ;_aaaff =_bfcda .PdfObject ;};_bceed ,_dbaeb :=_da .GetDict (_aaaff );if !_dbaeb {return nil ,_ag .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cbedac .Names =[]string {};_cbedac .Colorspaces =map[string ]PdfColorspace {};for _ ,_ggcdb :=range _bceed .Keys (){_gfgce :=_bceed .Get (_ggcdb );_cbedac .Names =append (_cbedac .Names ,string (_ggcdb ));_bacge ,_efafc :=NewPdfColorspaceFromPdfObject (_gfgce );if _efafc !=nil {return nil ,_efafc ;};_cbedac .Colorspaces [string (_ggcdb )]=_bacge ;};return _cbedac ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cbbc []byte )(_gfbbg int ,_faeg error );};func (_fggd *PdfReader )newPdfAnnotationWatermarkFromDict (_aed *_da .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_aeb :=PdfAnnotationWatermark {};_aeb .FixedPrint =_aed .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_aeb ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_caef *PdfColorspaceDeviceGray )ToPdfObject ()_da .PdfObject {return _da .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _da .PdfObject ;Flags _da .PdfObject ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_fefae =keywords };

// SetFlag sets the flag for the field.
func (_dcabd *PdfField )SetFlag (flag FieldFlag ){_dcabd .Ff =_da .MakeInteger (int64 (flag ))};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_geee :=PdfColorDeviceRGB {r ,g ,b };return &_geee ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_faea *PdfOutlineTreeNode )GetContext ()PdfModel {if _efde ,_dafb :=_faea ._acedd .(*PdfOutline );_dafb {return _efde ;};if _aeed ,_efadf :=_faea ._acedd .(*PdfOutlineItem );_efadf {return _aeed ;};_ac .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_cafgeb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_efaed :=RC4_128bit ;if options !=nil {_efaed =options .Algorithm ;};_dgdef :=_fb .PermOwner ;if options !=nil {_dgdef =options .Permissions ;};var _fefge _gb .Filter ;switch _efaed {case RC4_128bit :_fefge =_gb .NewFilterV2 (16);case AES_128bit :_fefge =_gb .NewFilterAESV2 ();case AES_256bit :_fefge =_gb .NewFilterAESV3 ();default:return _f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_dbbea ,_ggbga ,_eacfc :=_da .PdfCryptNewEncrypt (_fefge ,userPass ,ownerPass ,_dgdef );if _eacfc !=nil {return _eacfc ;};_cafgeb ._eafb =_dbbea ;if _ggbga .Major !=0{_cafgeb .SetVersion (_ggbga .Major ,_ggbga .Minor );};_cafgeb ._gbdc =_ggbga .Encrypt ;_cafgeb ._bbacdg =_da .MakeArray (_da .MakeHexString (_ggbga .ID0 ),_da .MakeHexString (_ggbga .ID1 ));_dcfgb :=_da .MakeIndirectObject (_ggbga .Encrypt );_cafgeb ._dbgbb =_dcfgb ;_cafgeb .addObject (_dcfgb );return nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_dgdb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToGoTime returns the date in time.Time format.
func (_feaae PdfDate )ToGoTime ()_ef .Time {_ccaaa :=int (_feaae ._gbgcc *60*60+_feaae ._gabad *60);switch _feaae ._bgbde {case '-':_ccaaa =-_ccaaa ;case 'Z':_ccaaa =0;};_deca :=_f .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_feaae ._bgbde ,_feaae ._gbgcc ,_feaae ._gabad );_fegea :=_ef .FixedZone (_deca ,_ccaaa );return _ef .Date (int (_feaae ._aaaec ),_ef .Month (_feaae ._ddae ),int (_feaae ._dafbcd ),int (_feaae ._cegad ),int (_feaae ._ddcba ),int (_feaae ._cebdde ),0,_fegea );};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_bbff *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _bbff .Alternate ==nil {_ac .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _bbff .N ==1{_ac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_acdb :=NewPdfColorspaceDeviceGray ();return _acdb .ImageToRGB (img );}else if _bbff .N ==3{_ac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _bbff .N ==4{_ac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_cdegg :=NewPdfColorspaceDeviceCMYK ();return _cdegg .ImageToRGB (img );}else {return img ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ac .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bbff );_dbcg ,_beaed :=_bbff .Alternate .ImageToRGB (img );_ac .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ac .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_dbcg );return _dbcg ,_beaed ;};var _ pdfFont =(*pdfFontSimple )(nil );func (_agfa *pdfFontSimple )baseFields ()*fontCommon {return &_agfa .fontCommon };

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ecgeg *XObjectForm )GetContainingPdfObject ()_da .PdfObject {return _ecgeg ._faafe };

// AddImageResource adds an image to the XObject resources.
func (_dafbc *PdfPage )AddImageResource (name _da .PdfObjectName ,ximg *XObjectImage )error {var _deac *_da .PdfObjectDictionary ;if _dafbc .Resources .XObject ==nil {_deac =_da .MakeDict ();_dafbc .Resources .XObject =_deac ;}else {var _ecbed bool ;_deac ,_ecbed =(_dafbc .Resources .XObject ).(*_da .PdfObjectDictionary );if !_ecbed {return _ag .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_deac .Set (name ,ximg .ToPdfObject ());return nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fdaa *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_cbaeg *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func _dgfg (_ebac _da .PdfObject )(*_da .PdfObjectDictionary ,*fontCommon ,error ){_cffd :=&fontCommon {};if _caga ,_dcgfed :=_ebac .(*_da .PdfIndirectObject );_dcgfed {_cffd ._gffeb =_caga .ObjectNumber ;};_gafg ,_agfb :=_da .GetDict (_ebac );if !_agfb {_ac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ebac );return nil ,nil ,ErrFontNotSupported ;};_gcbc ,_agfb :=_da .GetNameVal (_gafg .Get ("\u0054\u0079\u0070\u0065"));if !_agfb {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _gcbc !="\u0046\u006f\u006e\u0074"{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gcbc ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_da .ErrTypeError ;};_fbgaa ,_agfb :=_da .GetNameVal (_gafg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_agfb {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_cffd ._bffg =_fbgaa ;_cbee ,_agfb :=_da .GetNameVal (_gafg .Get ("\u004e\u0061\u006d\u0065"));if _agfb {_cffd ._afgd =_cbee ;};if _fbgaa =="\u0054\u0079\u0070e\u0033"{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_gafg );return _gafg ,_cffd ,ErrType3FontNotSupported ;};_aagab ,_agfb :=_da .GetNameVal (_gafg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_agfb {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _gafg ,_cffd ,ErrRequiredAttributeMissing ;};_cffd ._dabeae =_aagab ;_bgacg :=_gafg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _bgacg !=nil {_efdd ,_cccb :=_cfcdf (_bgacg );if _cccb !=nil {_ac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cccb );return _gafg ,_cffd ,_cccb ;};_cffd ._gcgf =_efdd ;};_cgabg :=_gafg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cgabg !=nil {_cffd ._aeec =_da .TraceToDirectObject (_cgabg );_gcedf ,_fgcc :=_abbge (_cffd ._aeec ,_cffd );if _fgcc !=nil {return _gafg ,_cffd ,_fgcc ;};_cffd ._eeba =_gcedf ;}else if _fbgaa =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fbgaa =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_faadc ,_faba :=_age .NewCIDSystemInfo (_gafg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _faba !=nil {return _gafg ,_cffd ,_faba ;};_fgdd :=_f .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_faadc .Registry ,_faadc .Ordering );if _age .IsPredefinedCMap (_fgdd ){_cffd ._eeba ,_faba =_age .LoadPredefinedCMap (_fgdd );if _faba !=nil {_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fgdd ,_faba );};};};return _gafg ,_cffd ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gfdgb *PdfFontDescriptor )ToPdfObject ()_da .PdfObject {_eefee :=_da .MakeDict ();if _gfdgb ._bfgdb ==nil {_gfdgb ._bfgdb =&_da .PdfIndirectObject {};};_gfdgb ._bfgdb .PdfObject =_eefee ;_eefee .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _gfdgb .FontName !=nil {_eefee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gfdgb .FontName );};if _gfdgb .FontFamily !=nil {_eefee .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gfdgb .FontFamily );};if _gfdgb .FontStretch !=nil {_eefee .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gfdgb .FontStretch );};if _gfdgb .FontWeight !=nil {_eefee .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gfdgb .FontWeight );};if _gfdgb .Flags !=nil {_eefee .Set ("\u0046\u006c\u0061g\u0073",_gfdgb .Flags );};if _gfdgb .FontBBox !=nil {_eefee .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gfdgb .FontBBox );};if _gfdgb .ItalicAngle !=nil {_eefee .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gfdgb .ItalicAngle );};if _gfdgb .Ascent !=nil {_eefee .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gfdgb .Ascent );};if _gfdgb .Descent !=nil {_eefee .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gfdgb .Descent );};if _gfdgb .Leading !=nil {_eefee .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gfdgb .Leading );};if _gfdgb .CapHeight !=nil {_eefee .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gfdgb .CapHeight );};if _gfdgb .XHeight !=nil {_eefee .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gfdgb .XHeight );};if _gfdgb .StemV !=nil {_eefee .Set ("\u0053\u0074\u0065m\u0056",_gfdgb .StemV );};if _gfdgb .StemH !=nil {_eefee .Set ("\u0053\u0074\u0065m\u0048",_gfdgb .StemH );};if _gfdgb .AvgWidth !=nil {_eefee .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gfdgb .AvgWidth );};if _gfdgb .MaxWidth !=nil {_eefee .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gfdgb .MaxWidth );};if _gfdgb .MissingWidth !=nil {_eefee .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gfdgb .MissingWidth );};if _gfdgb .FontFile !=nil {_eefee .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gfdgb .FontFile );};if _gfdgb .FontFile2 !=nil {_eefee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gfdgb .FontFile2 );};if _gfdgb .FontFile3 !=nil {_eefee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gfdgb .FontFile3 );};if _gfdgb .CharSet !=nil {_eefee .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gfdgb .CharSet );};if _gfdgb .Style !=nil {_eefee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gfdgb .FontName );};if _gfdgb .Lang !=nil {_eefee .Set ("\u004c\u0061\u006e\u0067",_gfdgb .Lang );};if _gfdgb .FD !=nil {_eefee .Set ("\u0046\u0044",_gfdgb .FD );};if _gfdgb .CIDSet !=nil {_eefee .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gfdgb .CIDSet );};return _gfdgb ._bfgdb ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );func (_febd *PdfReader )newPdfAcroFormFromDict (_adcd *_da .PdfIndirectObject ,_fegd *_da .PdfObjectDictionary )(*PdfAcroForm ,error ){_aafdce :=NewPdfAcroForm ();if _adcd !=nil {_aafdce ._abaf =_adcd ;_adcd .PdfObject =_da .MakeDict ();};if _cfaeg :=_fegd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cfaeg !=nil {_fgfg ,_dfgca :=_da .GetArray (_cfaeg );if !_dfgca {return nil ,_f .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cfaeg );};var _faaedd []*PdfField ;for _ ,_ddbce :=range _fgfg .Elements (){_bacb ,_eacbd :=_da .GetIndirect (_ddbce );if !_eacbd {if _ ,_ggedb :=_ddbce .(*_da .PdfObjectNull );_ggedb {_ac .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_ac .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ddbce );return nil ,_f .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aaaac ,_fgcd :=_febd .newPdfFieldFromIndirectObject (_bacb ,nil );if _fgcd !=nil {return nil ,_fgcd ;};_ac .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_aaaac );_faaedd =append (_faaedd ,_aaaac );};_aafdce .Fields =&_faaedd ;};if _efgg :=_fegd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_efgg !=nil {_afbdg ,_ffabf :=_da .GetBool (_efgg );if _ffabf {_aafdce .NeedAppearances =_afbdg ;}else {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_efgg );};};if _edgf :=_fegd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_edgf !=nil {_acefc ,_bece :=_da .GetInt (_edgf );if _bece {_aafdce .SigFlags =_acefc ;}else {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgf );};};if _cgfc :=_fegd .Get ("\u0043\u004f");_cgfc !=nil {_abbce ,_bagef :=_da .GetArray (_cgfc );if _bagef {_aafdce .CO =_abbce ;}else {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cgfc );};};if _gcfc :=_fegd .Get ("\u0044\u0052");_gcfc !=nil {if _dabf ,_aefa :=_da .GetDict (_gcfc );_aefa {_bbge ,_fgggc :=NewPdfPageResourcesFromDict (_dabf );if _fgggc !=nil {_ac .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_fgggc );return nil ,_fgggc ;};_aafdce .DR =_bbge ;}else {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gcfc );};};if _debaeb :=_fegd .Get ("\u0044\u0041");_debaeb !=nil {_edeg ,_fdbab :=_da .GetString (_debaeb );if _fdbab {_aafdce .DA =_edeg ;}else {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_debaeb );};};if _bbcg :=_fegd .Get ("\u0051");_bbcg !=nil {_gbca ,_baca :=_da .GetInt (_bbcg );if _baca {_aafdce .Q =_gbca ;}else {_ac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bbcg );};};if _agea :=_fegd .Get ("\u0058\u0046\u0041");_agea !=nil {_aafdce .XFA =_agea ;};return _aafdce ,nil ;};

// ToInteger convert to an integer format.
func (_eadcc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_adee :=_bb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_adee *_eadcc .A ()),uint32 (_adee *_eadcc .B ()),uint32 (_adee *_eadcc .C ())};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _da .PdfObject ;FS _da .PdfObject ;F _da .PdfObject ;UF _da .PdfObject ;DOS _da .PdfObject ;Mac _da .PdfObject ;Unix _da .PdfObject ;ID _da .PdfObject ;V _da .PdfObject ;EF _da .PdfObject ;RF _da .PdfObject ;Desc _da .PdfObject ;CI _da .PdfObject ;_faff _da .PdfObject ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_gcea *_da .PdfObjectDictionary ;_dfcaf *_da .PdfIndirectObject ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_gefa *PdfPage )SetContentStreams (cStreams []string ,encoder _da .StreamEncoder )error {if len (cStreams )==0{_gefa .Contents =nil ;return nil ;};if encoder ==nil {encoder =_da .NewRawEncoder ();};var _gede []*_da .PdfObjectStream ;for _ ,_dcbaf :=range cStreams {_faeed :=&_da .PdfObjectStream {};_accbe :=encoder .MakeStreamDict ();_badf ,_gecg :=encoder .EncodeBytes ([]byte (_dcbaf ));if _gecg !=nil {return _gecg ;};_accbe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_badf ))));_faeed .PdfObjectDictionary =_accbe ;_faeed .Stream =[]byte (_badf );_gede =append (_gede ,_faeed );};if len (_gede )==1{_gefa .Contents =_gede [0];}else {_gfba :=_da .MakeArray ();for _ ,_fgbce :=range _gede {_gfba .Append (_fgbce );};_gefa .Contents =_gfba ;};return nil ;};func (_dgga *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_da .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _da .PdfObject ;A _da .PdfObject ;SE _da .PdfObject ;C _da .PdfObject ;F _da .PdfObject ;_fbae *_da .PdfIndirectObject ;};

// L returns the value of the L component of the color.
func (_acbf *PdfColorLab )L ()float64 {return float64 (_acbf [0])};

// ToPdfObject returns the PDF representation of the page resources.
func (_becbc *PdfPageResources )ToPdfObject ()_da .PdfObject {_ceegc :=_becbc ._dgcae ;_ceegc .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_becbc .ExtGState );if _becbc ._bcgdd !=nil {_becbc .ColorSpace =_becbc ._bcgdd .ToPdfObject ();};_ceegc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_becbc .ColorSpace );_ceegc .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_becbc .Pattern );_ceegc .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_becbc .Shading );_ceegc .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_becbc .XObject );_ceegc .SetIfNotNil ("\u0046\u006f\u006e\u0074",_becbc .Font );_ceegc .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_becbc .ProcSet );_ceegc .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_becbc .Properties );return _ceegc ;};func (_fcbc *Image )samplesAddPadding (_becg []uint32 )[]uint32 {_gbcf :=_eff .BytesPerLine (int (_fcbc .Width ),int (_fcbc .BitsPerComponent ),_fcbc .ColorComponents )*(8/int (_fcbc .BitsPerComponent ));_gcbdg :=_gbcf *int (_fcbc .Height );if len (_becg )==_gcbdg {return _becg ;};_cgfd :=make ([]uint32 ,_gcbdg );_ecbbf :=int (_fcbc .Width )*_fcbc .ColorComponents ;for _adbf :=0;_adbf < int (_fcbc .Height );_adbf ++{_eacaf :=_adbf *int (_fcbc .Width );_cdfg :=_adbf *_gbcf ;for _eaac :=0;_eaac < _ecbbf ;_eaac ++{_cgfd [_cdfg +_eaac ]=_becg [_eacaf +_eaac ];};};return _cgfd ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_gdfbb *PdfPageResources )GetColorspaceByName (keyName _da .PdfObjectName )(PdfColorspace ,bool ){_gefaf ,_ebfcd :=_gdfbb .GetColorspaces ();if _ebfcd !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ebfcd );return nil ,false ;};if _gefaf ==nil {return nil ,false ;};_gdbgd ,_cdgea :=_gefaf .Colorspaces [string (keyName )];if !_cdgea {return nil ,false ;};return _gdbgd ,true ;};func (_feab *PdfReader )newPdfActionGotoRFromDict (_bgga *_da .PdfObjectDictionary )(*PdfActionGoToR ,error ){_aba ,_edcd :=_caff (_bgga .Get ("\u0046"));if _edcd !=nil {return nil ,_edcd ;};return &PdfActionGoToR {D :_bgga .Get ("\u0044"),NewWindow :_bgga .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_aba },nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _da .PdfObject ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ccdcf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ccdcf .RunesToCharcodeBytes ([]rune (str ));};

// ToPdfObject implements interface PdfModel.
func (_ggfe *PdfAnnotationStrikeOut )ToPdfObject ()_da .PdfObject {_ggfe .PdfAnnotation .ToPdfObject ();_cage :=_ggfe ._cfd ;_acbe :=_cage .PdfObject .(*_da .PdfObjectDictionary );_ggfe .PdfAnnotationMarkup .appendToPdfDictionary (_acbe );_acbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_acbe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ggfe .QuadPoints );return _cage ;};func (_gbdf *PdfReader )newPdfAnnotationFreeTextFromDict (_baaa *_da .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_eggd :=PdfAnnotationFreeText {};_eggf ,_adeg :=_gbdf .newPdfAnnotationMarkupFromDict (_baaa );if _adeg !=nil {return nil ,_adeg ;};_eggd .PdfAnnotationMarkup =_eggf ;_eggd .DA =_baaa .Get ("\u0044\u0041");_eggd .Q =_baaa .Get ("\u0051");_eggd .RC =_baaa .Get ("\u0052\u0043");_eggd .DS =_baaa .Get ("\u0044\u0053");_eggd .CL =_baaa .Get ("\u0043\u004c");_eggd .IT =_baaa .Get ("\u0049\u0054");_eggd .BE =_baaa .Get ("\u0042\u0045");_eggd .RD =_baaa .Get ("\u0052\u0044");_eggd .BS =_baaa .Get ("\u0042\u0053");_eggd .LE =_baaa .Get ("\u004c\u0045");return &_eggd ,nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_aege :=NewPdfAnnotation ();_afbb :=&PdfAnnotation3D {};_afbb .PdfAnnotation =_aege ;_aege .SetContext (_afbb );return _afbb ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_be :=NewPdfAction ();_agd :=&PdfActionRendition {};_agd .PdfAction =_be ;_be .SetContext (_agd );return _agd ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_gbbb *PdfField )IsTerminal ()bool {return len (_gbbb .Kids )==0};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _da .PdfObject ;PreserveRB _da .PdfObject ;};

// SetContext sets the sub annotation (context).
func (_gce *PdfAnnotation )SetContext (ctx PdfModel ){_gce ._gbd =ctx };func _aeac (_gbadg _da .PdfObject ,_fbegg bool )(*PdfFont ,error ){_effb ,_cdcb ,_gdag :=_dgfg (_gbadg );if _gdag !=nil {if _gdag ==ErrType3FontNotSupported ||_gdag ==ErrType1CFontNotSupported {_geefd ,_bfccc :=_aegc (_effb ,_cdcb ,nil );if _bfccc !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cdcb ,_bfccc );return nil ,_gdag ;};return &PdfFont {_edgc :_geefd },_gdag ;};return nil ,_gdag ;};_gedf :=&PdfFont {};switch _cdcb ._bffg {case "\u0054\u0079\u0070e\u0030":if !_fbegg {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdcb );return nil ,_ag .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_ddgba ,_adgf :=_afbfb (_effb ,_cdcb );if _adgf !=nil {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdcb ,_adgf );return nil ,_adgf ;};_gedf ._edgc =_ddgba ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _efcf *pdfFontSimple ;_gcda ,_cbaeb :=_dg .NewStdFontByName (_dg .StdFontName (_cdcb ._dabeae ));if _cbaeb {_aedf :=_gaaed (_gcda );_gedf ._edgc =&_aedf ;_dgecf :=_da .TraceToDirectObject (_aedf .ToPdfObject ());_bbdac ,_fcad ,_ddaa :=_dgfg (_dgecf );if _ddaa !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cdcb ,_aedf );return nil ,_ddaa ;};for _ ,_ebgc :=range _effb .Keys (){_bbdac .Set (_ebgc ,_effb .Get (_ebgc ));};_efcf ,_ddaa =_aegc (_bbdac ,_fcad ,_aedf ._bfdfgg );if _ddaa !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cdcb ,_aedf );return nil ,_ddaa ;};_efcf ._efege =_aedf ._efege ;_efcf ._bdad =_aedf ._bdad ;}else {_efcf ,_gdag =_aegc (_effb ,_cdcb ,nil );if _gdag !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cdcb ,_gdag );return nil ,_gdag ;};};_gdag =_efcf .addEncoding ();if _gdag !=nil {return nil ,_gdag ;};if _cbaeb {_efcf .updateStandard14Font ();};if _cbaeb &&_efcf ._bgdb ==nil &&_efcf ._bfdfgg ==nil {_ac .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_efcf );_ac .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_gcda );};if len (_efcf ._efege )==0{_ac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_efcf );};_gedf ._edgc =_efcf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gegag ,_egedb :=_eecag (_effb ,_cdcb );if _egedb !=nil {_ac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_egedb );return nil ,_egedb ;};_gedf ._edgc =_gegag ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cbeg ,_gecf :=_geebd (_effb ,_cdcb );if _gecf !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdcb ,_gecf );return nil ,_gecf ;};_gedf ._edgc =_cbeg ;default:_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_cdcb );return nil ,_f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdcb );};return _gedf ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gggge *PdfPattern )SetContext (ctx PdfModel ){_gggge ._aaba =ctx };

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_daf :=NewPdfAction ();_cfe :=&PdfActionGoToE {};_cfe .PdfAction =_daf ;_daf .SetContext (_cfe );return _cfe ;};func _cfgcd (_gebaf []rune ,_eefb map[rune ]int ,_bbca map[rune ]_dg .GID )*_da .PdfObjectArray {_gedc :=&_da .PdfObjectArray {};for _agcef :=0;_agcef < len (_gebaf );{_aebd :=_eefb [_gebaf [_agcef ]];_abdfb :=_agcef ;for _egcdf :=_agcef +1;_egcdf < len (_gebaf );_egcdf ++{_aggc :=_eefb [_gebaf [_egcdf ]];if _aebd ==_aggc {_abdfb =_egcdf ;}else {break ;};};_ddee :=_bbca [_gebaf [_agcef ]];_cedc :=_bbca [_gebaf [_abdfb ]];_gedc .Append (_da .MakeInteger (int64 (_ddee )));_gedc .Append (_da .MakeInteger (int64 (_cedc )));_gedc .Append (_da .MakeInteger (int64 (_aebd )));_agcef =_abdfb +1;};return _gedc ;};

// Subtype returns the font's "Subtype" field.
func (_fgbf *PdfFont )Subtype ()string {_gegc :=_fgbf .baseFields ()._bffg ;if _gfbgf ,_cadfa :=_fgbf ._edgc .(*pdfFontType0 );_cadfa {_gegc =_gegc +"\u003a"+_gfbgf .DescendantFont .Subtype ();};return _gegc ;};func _cbgae (_gdcg []byte )[]byte {const _ccgfd =52845;const _bacg =22719;_aeefc :=55665;for _ ,_dedc :=range _gdcg [:4]{_aeefc =(int (_dedc )+_aeefc )*_ccgfd +_bacg ;};_bgeac :=make ([]byte ,len (_gdcg )-4);for _cfcbc ,_dcgdg :=range _gdcg [4:]{_bgeac [_cfcbc ]=byte (int (_dcgdg )^_aeefc >>8);_aeefc =(int (_dcgdg )+_aeefc )*_ccgfd +_bacg ;};return _bgeac ;};func _fcbe (_bggeg _da .PdfObject )(*PdfBorderStyle ,error ){_eacc :=&PdfBorderStyle {};_eacc ._fgb =_bggeg ;var _feg *_da .PdfObjectDictionary ;_bggeg =_da .TraceToDirectObject (_bggeg );_feg ,_eadc :=_bggeg .(*_da .PdfObjectDictionary );if !_eadc {return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dced :=_feg .Get ("\u0054\u0079\u0070\u0065");_dced !=nil {_bdfc ,_gggbc :=_dced .(*_da .PdfObjectName );if !_gggbc {_ac .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dced );}else {if *_bdfc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ac .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bdfc );};};};if _abcd :=_feg .Get ("\u0057");_abcd !=nil {_deda ,_cbg :=_da .GetNumberAsFloat (_abcd );if _cbg !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cbg );return nil ,_cbg ;};_eacc .W =&_deda ;};if _cba :=_feg .Get ("\u0053");_cba !=nil {_dfa ,_fcde :=_cba .(*_da .PdfObjectName );if !_fcde {return nil ,_ag .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _fcfe BorderStyle ;switch *_dfa {case "\u0053":_fcfe =BorderStyleSolid ;case "\u0044":_fcfe =BorderStyleDashed ;case "\u0042":_fcfe =BorderStyleBeveled ;case "\u0049":_fcfe =BorderStyleInset ;case "\u0055":_fcfe =BorderStyleUnderline ;default:_ac .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_dfa );return nil ,_ag .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_eacc .S =&_fcfe ;};if _begd :=_feg .Get ("\u0044");_begd !=nil {_fda ,_eebf :=_begd .(*_da .PdfObjectArray );if !_eebf {_ac .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_begd );return nil ,_ag .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_decc ,_fbce :=_fda .ToIntegerArray ();if _fbce !=nil {_ac .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_fbce );return nil ,_fbce ;};_eacc .D =&_decc ;};return _eacc ,nil ;};func (_cgd *PdfReader )newPdfAnnotationTrapNetFromDict (_cdd *_da .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gcad :=PdfAnnotationTrapNet {};return &_gcad ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggda *PdfAnnotationInk )ToPdfObject ()_da .PdfObject {_ggda .PdfAnnotation .ToPdfObject ();_cgcc :=_ggda ._cfd ;_bada :=_cgcc .PdfObject .(*_da .PdfObjectDictionary );_ggda .PdfAnnotationMarkup .appendToPdfDictionary (_bada );_bada .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0049\u006e\u006b"));_bada .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ggda .InkList );_bada .SetIfNotNil ("\u0042\u0053",_ggda .BS );return _cgcc ;};func (_afad *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_dcad FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_dcad .Mask ()|fl .Mask ())};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ecgc *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ecgc ._aaba .(*PdfTilingPattern );};func (_debb *PdfReader )loadAnnotations (_aadeb _da .PdfObject )([]*PdfAnnotation ,error ){_gcbdca ,_bdfdb :=_da .GetArray (_aadeb );if !_bdfdb {return nil ,_f .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _eggdf []*PdfAnnotation ;for _ ,_bgeg :=range _gcbdca .Elements (){_bgeg =_da .ResolveReference (_bgeg );if _ ,_eafed :=_bgeg .(*_da .PdfObjectNull );_eafed {continue ;};_ffdd ,_febc :=_bgeg .(*_da .PdfObjectDictionary );_bccba ,_gecbf :=_bgeg .(*_da .PdfIndirectObject );if _febc {_bccba =&_da .PdfIndirectObject {};_bccba .PdfObject =_ffdd ;}else {if !_gecbf {return nil ,_f .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_cffdd ,_aaebf :=_debb .newPdfAnnotationFromIndirectObject (_bccba );if _aaebf !=nil {return nil ,_aaebf ;};switch _agff :=_cffdd .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_cdcfg :=range _debb .AcroForm .AllFields (){if _cdcfg ._cfed ==_agff .Parent {_agff ._gcec =_cdcfg ;break ;};};};if _cffdd !=nil {_eggdf =append (_eggdf ,_cffdd );};};return _eggdf ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_gbead *PdfDate )ToPdfObject ()_da .PdfObject {_acadf :=_f .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gbead ._aaaec ,_gbead ._ddae ,_gbead ._dafbcd ,_gbead ._cegad ,_gbead ._ddcba ,_gbead ._cebdde ,_gbead ._bgbde ,_gbead ._gbgcc ,_gbead ._gabad );return _da .MakeString (_acadf );};

// Height returns the height of `rect`.
func (_dbabd *PdfRectangle )Height ()float64 {return _bb .Abs (_dbabd .Ury -_dbabd .Lly )};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_aegg :=NewPdfAnnotation ();_effg :=&PdfAnnotationRedact {};_effg .PdfAnnotation =_aegg ;_effg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aegg .SetContext (_effg );return _effg ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_da .PdfObjectDictionary )(*PdfPageResources ,error ){_dccgec :=NewPdfPageResources ();if _ccefd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ccefd !=nil {_dccgec .ExtGState =_ccefd ;};if _gfbd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_gfbd !=nil &&!_da .IsNullObject (_gfbd ){_dccgec .ColorSpace =_gfbd ;};if _gdad :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gdad !=nil {_dccgec .Pattern =_gdad ;};if _abeb :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_abeb !=nil {_dccgec .Shading =_abeb ;};if _fbcff :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fbcff !=nil {_dccgec .XObject =_fbcff ;};if _bdgeg :=_da .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_bdgeg !=nil {_dccgec .Font =_bdgeg ;};if _aeead :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_aeead !=nil {_dccgec .ProcSet =_aeead ;};if _feafb :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_feafb !=nil {_dccgec .Properties =_feafb ;};return _dccgec ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};var _affg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};func _cfde (_cgcd _da .PdfObject )(*PdfColorspaceCalRGB ,error ){_cebf :=NewPdfColorspaceCalRGB ();if _dgedf ,_dcgg :=_cgcd .(*_da .PdfIndirectObject );_dcgg {_cebf ._dfcaf =_dgedf ;};_cgcd =_da .TraceToDirectObject (_cgcd );_ddgaf ,_bfcb :=_cgcd .(*_da .PdfObjectArray );if !_bfcb {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddgaf .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cgcd =_da .TraceToDirectObject (_ddgaf .Get (0));_dcbcg ,_bfcb :=_cgcd .(*_da .PdfObjectName );if !_bfcb {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_dcbcg !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_f .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cgcd =_da .TraceToDirectObject (_ddgaf .Get (1));_fefb ,_bfcb :=_cgcd .(*_da .PdfObjectDictionary );if !_bfcb {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_cgcd =_fefb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cgcd =_da .TraceToDirectObject (_cgcd );_cgadf ,_bfcb :=_cgcd .(*_da .PdfObjectArray );if !_bfcb {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _cgadf .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ddefe ,_afdbg :=_cgadf .GetAsFloat64Slice ();if _afdbg !=nil {return nil ,_afdbg ;};_cebf .WhitePoint =_ddefe ;_cgcd =_fefb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cgcd !=nil {_cgcd =_da .TraceToDirectObject (_cgcd );_cbde ,_bgcb :=_cgcd .(*_da .PdfObjectArray );if !_bgcb {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _cbde .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cedf ,_agge :=_cbde .GetAsFloat64Slice ();if _agge !=nil {return nil ,_agge ;};_cebf .BlackPoint =_cedf ;};_cgcd =_fefb .Get ("\u0047\u0061\u006dm\u0061");if _cgcd !=nil {_cgcd =_da .TraceToDirectObject (_cgcd );_gcac ,_eaag :=_cgcd .(*_da .PdfObjectArray );if !_eaag {return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _gcac .Len ()!=3{return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_ecfbf ,_egef :=_gcac .GetAsFloat64Slice ();if _egef !=nil {return nil ,_egef ;};_cebf .Gamma =_ecfbf ;};_cgcd =_fefb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cgcd !=nil {_cgcd =_da .TraceToDirectObject (_cgcd );_daa ,_afac :=_cgcd .(*_da .PdfObjectArray );if !_afac {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _daa .Len ()!=9{_ac .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_daa .String ());return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_ddfe ,_acgb :=_daa .GetAsFloat64Slice ();if _acgb !=nil {return nil ,_acgb ;};_cebf .Matrix =_ddfe ;};return _cebf ,nil ;};

// SetName sets the `Name` field of the signature.
func (_dffcb *PdfSignature )SetName (name string ){_dffcb .Name =_da .MakeString (name )};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_eeebg *PdfOutline )GetContainingPdfObject ()_da .PdfObject {return _eeebg ._caegf };

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_cdbe *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ef .Time )(PdfDate ,error ){_cbdeb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_aceb ,_ :=_fa .ParseInt (_cbdeb [1:3],10,32);_egaeb ,_ :=_fa .ParseInt (_cbdeb [4:6],10,32);return PdfDate {_aaaec :int64 (timeObj .Year ()),_ddae :int64 (timeObj .Month ()),_dafbcd :int64 (timeObj .Day ()),_cegad :int64 (timeObj .Hour ()),_ddcba :int64 (timeObj .Minute ()),_cebdde :int64 (timeObj .Second ()),_bgbde :_cbdeb [0],_gbgcc :_aceb ,_gabad :_egaeb },nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_bbcc *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _bbcc .UnderlyingCS .GetNumComponents ();};func (_bgdg *PdfReader )newPdfAnnotationInkFromDict (_ecdcc *_da .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fedc :=PdfAnnotationInk {};_eaef ,_ecfc :=_bgdg .newPdfAnnotationMarkupFromDict (_ecdcc );if _ecfc !=nil {return nil ,_ecfc ;};_fedc .PdfAnnotationMarkup =_eaef ;_fedc .InkList =_ecdcc .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fedc .BS =_ecdcc .Get ("\u0042\u0053");return &_fedc ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_bbccb *PdfPage )GetPageDict ()*_da .PdfObjectDictionary {_afdg :=_bbccb ._ccaa ;_afdg .Clear ();_afdg .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050\u0061\u0067\u0065"));_afdg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbccb .Parent );if _bbccb .LastModified !=nil {_afdg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bbccb .LastModified .ToPdfObject ());};if _bbccb .Resources !=nil {_afdg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bbccb .Resources .ToPdfObject ());};if _bbccb .CropBox !=nil {_afdg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_bbccb .CropBox .ToPdfObject ());};if _bbccb .MediaBox !=nil {_afdg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_bbccb .MediaBox .ToPdfObject ());};if _bbccb .BleedBox !=nil {_afdg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_bbccb .BleedBox .ToPdfObject ());};if _bbccb .TrimBox !=nil {_afdg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_bbccb .TrimBox .ToPdfObject ());};if _bbccb .ArtBox !=nil {_afdg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_bbccb .ArtBox .ToPdfObject ());};_afdg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_bbccb .BoxColorInfo );_afdg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bbccb .Contents );if _bbccb .Rotate !=nil {_afdg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_da .MakeInteger (*_bbccb .Rotate ));};_afdg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bbccb .Group );_afdg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_bbccb .Thumb );_afdg .SetIfNotNil ("\u0042",_bbccb .B );_afdg .SetIfNotNil ("\u0044\u0075\u0072",_bbccb .Dur );_afdg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bbccb .Trans );_afdg .SetIfNotNil ("\u0041\u0041",_bbccb .AA );_afdg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbccb .Metadata );_afdg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bbccb .PieceInfo );_afdg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bbccb .StructParents );_afdg .SetIfNotNil ("\u0049\u0044",_bbccb .ID );_afdg .SetIfNotNil ("\u0050\u005a",_bbccb .PZ );_afdg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_bbccb .SeparationInfo );_afdg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_bbccb .Tabs );_afdg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_bbccb .TemplateInstantiated );_afdg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_bbccb .PresSteps );_afdg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_bbccb .UserUnit );_afdg .SetIfNotNil ("\u0056\u0050",_bbccb .VP );if _bbccb ._gfgdf !=nil {_afddc :=_da .MakeArray ();for _ ,_cdcad :=range _bbccb ._gfgdf {if _ccecfd :=_cdcad .GetContext ();_ccecfd !=nil {_afddc .Append (_ccecfd .ToPdfObject ());}else {_afddc .Append (_cdcad .ToPdfObject ());};};if _afddc .Len ()> 0{_afdg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_afddc );};}else if _bbccb .Annots !=nil {_afdg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_bbccb .Annots );};return _afdg ;};

// ToPdfObject implements interface PdfModel.
func (_dgb *PdfActionImportData )ToPdfObject ()_da .PdfObject {_dgb .PdfAction .ToPdfObject ();_eef :=_dgb ._cf ;_gegb :=_eef .PdfObject .(*_da .PdfObjectDictionary );_gegb .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeImportData )));if _dgb .F !=nil {_gegb .Set ("\u0046",_dgb .F .ToPdfObject ());};return _eef ;};

// M returns the value of the magenta component of the color.
func (_cdeee *PdfColorDeviceCMYK )M ()float64 {return float64 (_cdeee [1])};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_gfdec *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_gfdec .ToPdfOutline ().PdfOutlineTreeNode ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_fgbb *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// XObjectType represents the type of an XObject.
type XObjectType int ;func (_baag *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bbcge =creator };func (_fdea *PdfReader )newPdfPageFromDict (_debe *_da .PdfObjectDictionary )(*PdfPage ,error ){_fdabe :=NewPdfPage ();_fdabe ._ccaa =_debe ;_geagb :=*_debe ;_abgdc ,_cfbdd :=_geagb .Get ("\u0054\u0079\u0070\u0065").(*_da .PdfObjectName );if !_cfbdd {return nil ,_ag .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_abgdc !="\u0050\u0061\u0067\u0065"{return nil ,_ag .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _eaagb :=_geagb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_eaagb !=nil {_fdabe .Parent =_eaagb ;};if _bdff :=_geagb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bdff !=nil {_ddcb ,_ccfa :=_da .GetString (_bdff );if !_ccfa {return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_decdd ,_dfede :=NewPdfDate (_ddcb .Str ());if _dfede !=nil {return nil ,_dfede ;};_fdabe .LastModified =&_decdd ;};if _bdcb :=_geagb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bdcb !=nil &&!_da .IsNullObject (_bdcb ){_cefe ,_gebeb :=_da .GetDict (_bdcb );if !_gebeb {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bdcb );};var _fgae error ;_fdabe .Resources ,_fgae =NewPdfPageResourcesFromDict (_cefe );if _fgae !=nil {return nil ,_fgae ;};}else {_afga ,_ccabf :=_fdabe .getParentResources ();if _ccabf !=nil {return nil ,_ccabf ;};if _afga ==nil {_afga =NewPdfPageResources ();};_fdabe .Resources =_afga ;};if _daff :=_geagb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_daff !=nil {_eddfg ,_ccbbf :=_da .GetArray (_daff );if !_ccbbf {return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _ebcf error ;_fdabe .MediaBox ,_ebcf =NewPdfRectangle (*_eddfg );if _ebcf !=nil {return nil ,_ebcf ;};};if _daeg :=_geagb .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_daeg !=nil {_gcfef ,_fdcf :=_da .GetArray (_daeg );if !_fdcf {return nil ,_ag .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _eaafab error ;_fdabe .CropBox ,_eaafab =NewPdfRectangle (*_gcfef );if _eaafab !=nil {return nil ,_eaafab ;};};if _fddaa :=_geagb .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_fddaa !=nil {_cbdbc ,_acdbc :=_da .GetArray (_fddaa );if !_acdbc {return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gbbc error ;_fdabe .BleedBox ,_gbbc =NewPdfRectangle (*_cbdbc );if _gbbc !=nil {return nil ,_gbbc ;};};if _dedac :=_geagb .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_dedac !=nil {_ffacf ,_ffaf :=_da .GetArray (_dedac );if !_ffaf {return nil ,_ag .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _cgfbc error ;_fdabe .TrimBox ,_cgfbc =NewPdfRectangle (*_ffacf );if _cgfbc !=nil {return nil ,_cgfbc ;};};if _dccgc :=_geagb .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dccgc !=nil {_dcgb ,_gfcba :=_da .GetArray (_dccgc );if !_gfcba {return nil ,_ag .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _bggeb error ;_fdabe .ArtBox ,_bggeb =NewPdfRectangle (*_dcgb );if _bggeb !=nil {return nil ,_bggeb ;};};if _fdaad :=_geagb .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fdaad !=nil {_fdabe .BoxColorInfo =_fdaad ;};if _gadg :=_geagb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gadg !=nil {_fdabe .Contents =_gadg ;};if _adgde :=_geagb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_adgde !=nil {_acag ,_ceecc :=_da .GetInt (_adgde );if !_ceecc {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_ebdfa :=int64 (*_acag );_fdabe .Rotate =&_ebdfa ;};if _agdgfg :=_geagb .Get ("\u0047\u0072\u006fu\u0070");_agdgfg !=nil {_fdabe .Group =_agdgfg ;};if _gagdaf :=_geagb .Get ("\u0054\u0068\u0075m\u0062");_gagdaf !=nil {_fdabe .Thumb =_gagdaf ;};if _bfceg :=_geagb .Get ("\u0042");_bfceg !=nil {_fdabe .B =_bfceg ;};if _cabbd :=_geagb .Get ("\u0044\u0075\u0072");_cabbd !=nil {_fdabe .Dur =_cabbd ;};if _eabd :=_geagb .Get ("\u0054\u0072\u0061n\u0073");_eabd !=nil {_fdabe .Trans =_eabd ;};if _efgf :=_geagb .Get ("\u0041\u0041");_efgf !=nil {_fdabe .AA =_efgf ;};if _ggece :=_geagb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ggece !=nil {_fdabe .Metadata =_ggece ;};if _gcegg :=_geagb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gcegg !=nil {_fdabe .PieceInfo =_gcegg ;};if _abgcg :=_geagb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_abgcg !=nil {_fdabe .StructParents =_abgcg ;};if _cbaebe :=_geagb .Get ("\u0049\u0044");_cbaebe !=nil {_fdabe .ID =_cbaebe ;};if _dadff :=_geagb .Get ("\u0050\u005a");_dadff !=nil {_fdabe .PZ =_dadff ;};if _dcfdc :=_geagb .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_dcfdc !=nil {_fdabe .SeparationInfo =_dcfdc ;};if _egebf :=_geagb .Get ("\u0054\u0061\u0062\u0073");_egebf !=nil {_fdabe .Tabs =_egebf ;};if _bafd :=_geagb .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_bafd !=nil {_fdabe .TemplateInstantiated =_bafd ;};if _abdef :=_geagb .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_abdef !=nil {_fdabe .PresSteps =_abdef ;};if _eaage :=_geagb .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_eaage !=nil {_fdabe .UserUnit =_eaage ;};if _dfbcg :=_geagb .Get ("\u0056\u0050");_dfbcg !=nil {_fdabe .VP =_dfbcg ;};if _effdd :=_geagb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_effdd !=nil {_fdabe .Annots =_effdd ;};_fdabe ._bfcca =_fdea ;return _fdabe ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func _edae (_edfac *PdfField )[]*PdfField {_ecdda :=[]*PdfField {_edfac };for _ ,_feaeb :=range _edfac .Kids {_ecdda =append (_ecdda ,_edae (_feaeb )...);};return _ecdda ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _da .PdfObject ;B _da .PdfObject ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _da .PdfObject ;LE _da .PdfObject ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;IT _da .PdfObject ;Measure _da .PdfObject ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_adc :=NewPdfAnnotation ();_fca :=&PdfAnnotationWidget {};_fca .PdfAnnotation =_adc ;_adc .SetContext (_fca );return _fca ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bcged *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fdfgc FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fdfgc .Mask ()&^fl .Mask ())};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cecbb *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ac .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbd :=[]float64 {0.0};if _cecbb .C0 !=nil {_bcbd =_cecbb .C0 ;};_fbbc :=[]float64 {1.0};if _cecbb .C1 !=nil {_fbbc =_cecbb .C1 ;};var _eefa []float64 ;for _aebbd :=0;_aebbd < len (_bcbd );_aebbd ++{_dbcd :=_bcbd [_aebbd ]+_bb .Pow (x [0],_cecbb .N )*(_fbbc [_aebbd ]-_bcbd [_aebbd ]);_eefa =append (_eefa ,_dbcd );};return _eefa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abd *PdfActionResetForm )ToPdfObject ()_da .PdfObject {_abd .PdfAction .ToPdfObject ();_egd :=_abd ._cf ;_cec :=_egd .PdfObject .(*_da .PdfObjectDictionary );_cec .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeResetForm )));_cec .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_abd .Fields );_cec .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_abd .Flags );return _egd ;};func (_bda *PdfReader )newPdfActionGoTo3DViewFromDict (_ceff *_da .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_ceff .Get ("\u0054\u0041"),V :_ceff .Get ("\u0056")},nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_face *PdfPage )ToPdfObject ()_da .PdfObject {_dbdge :=_face ._dabad ;_face .GetPageDict ();return _dbdge ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_fgffd *PdfFieldButton )IsPush ()bool {return _fgffd .GetType ()==ButtonTypePush };

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_befd *PdfColorspaceDeviceN )ToPdfObject ()_da .PdfObject {_bbfee :=_da .MakeArray (_da .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bbfee .Append (_befd .ColorantNames );_bbfee .Append (_befd .AlternateSpace .ToPdfObject ());_bbfee .Append (_befd .TintTransform .ToPdfObject ());if _befd .Attributes !=nil {_bbfee .Append (_befd .Attributes .ToPdfObject ());};if _befd ._acec !=nil {_befd ._acec .PdfObject =_bbfee ;return _befd ._acec ;};return _bbfee ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_eaaa *PdfReader )PageFromIndirectObject (ind *_da .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_eaaa .PageList )!=len (_eaaa ._efbae ){return nil ,0,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _cbdba ,_agda :=range _eaaa ._efbae {if _agda ==ind {return _eaaa .PageList [_cbdba ],_cbdba +1,nil ;};};return nil ,0,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_addad *PdfFont )CharcodesToUnicode (charcodes []_cee .CharCode )[]rune {_dddd ,_ ,_ :=_addad .CharcodesToUnicodeWithStats (charcodes );return _dddd ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_efgcb *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfgca ,_cefc :=_da .GetNumbersAsFloat (objects );if _cefc !=nil {return nil ,_cefc ;};return _efgcb .ColorFromFloats (_gfgca );};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_aafdc *PdfFont )CharcodesToStrings (charcodes []_cee .CharCode )([]string ,int ,int ){_fcfdf :=_aafdc .baseFields ();_cefcb :=make ([]string ,0,len (charcodes ));_bcage :=0;for _ ,_dfgga :=range charcodes {if _fcfdf ._eeba !=nil {if _egcg ,_bcddc :=_fcfdf ._eeba .CharcodeToUnicode (_age .CharCode (_dfgga ));_bcddc {_cefcb =append (_cefcb ,_egcg );continue ;};};_dffbd :=_aafdc .Encoder ();if _dffbd !=nil {if _efgb ,_eeag :=_dffbd .CharcodeToRune (_dfgga );_eeag {_cefcb =append (_cefcb ,string (_efgb ));continue ;};};_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dfgga ,charcodes ,_fcfdf .isCIDFont (),_aafdc ,_dffbd );_bcage ++;_cefcb =append (_cefcb ,_age .MissingCodeString );};if _bcage !=0{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_bcage ,_aafdc );};return _cefcb ,len (_cefcb ),_bcage ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bcggb *PdfWriter )SetOptimizer (optimizer Optimizer ){_bcggb ._dbcgc =optimizer };func _bdac (_bagdb _da .PdfObject )(string ,error ){_bagdb =_da .TraceToDirectObject (_bagdb );switch _ddbbea :=_bagdb .(type ){case *_da .PdfObjectString :return _ddbbea .Str (),nil ;case *_da .PdfObjectStream :_cbfb ,_eddddb :=_da .DecodeStream (_ddbbea );if _eddddb !=nil {return "",_eddddb ;};return string (_cbfb ),nil ;};return "",_f .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_bagdb );};func (_fggee *PdfAppender )updateObjectsDeep (_dfe _da .PdfObject ,_gfgg map[_da .PdfObject ]struct{}){if _gfgg ==nil {_gfgg =map[_da .PdfObject ]struct{}{};};if _ ,_bcbca :=_gfgg [_dfe ];_bcbca ||_dfe ==nil {return ;};_gfgg [_dfe ]=struct{}{};_ggbb :=_da .ResolveReferencesDeep (_dfe ,_fggee ._cdeef );if _ggbb !=nil {_ac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggbb );};switch _geggd :=_dfe .(type ){case *_da .PdfIndirectObject :switch {case _geggd .GetParser ()==_fggee ._adf ._bcgcg :return ;case _geggd .GetParser ()==_fggee .Reader ._bcgcg :_bbbc ,_ :=_fggee ._adf .GetIndirectObjectByNumber (int (_geggd .ObjectNumber ));_bdfd ,_ddba :=_bbbc .(*_da .PdfIndirectObject );if _ddba &&_bdfd !=nil {if _bdfd .PdfObject !=_geggd .PdfObject &&_bdfd .PdfObject .WriteString ()!=_geggd .PdfObject .WriteString (){_fggee .addNewObject (_dfe );_fggee ._geef [_dfe ]=_geggd .ObjectNumber ;};};default:_fggee .addNewObject (_dfe );};_fggee .updateObjectsDeep (_geggd .PdfObject ,_gfgg );case *_da .PdfObjectArray :for _ ,_geag :=range _geggd .Elements (){_fggee .updateObjectsDeep (_geag ,_gfgg );};case *_da .PdfObjectDictionary :for _ ,_bdbg :=range _geggd .Keys (){_fggee .updateObjectsDeep (_geggd .Get (_bdbg ),_gfgg );};case *_da .PdfObjectStreams :if _geggd .GetParser ()!=_fggee ._adf ._bcgcg {for _ ,_gac :=range _geggd .Elements (){_fggee .updateObjectsDeep (_gac ,_gfgg );};};case *_da .PdfObjectStream :switch {case _geggd .GetParser ()==_fggee ._adf ._bcgcg :return ;case _geggd .GetParser ()==_fggee .Reader ._bcgcg :if _bega ,_aaga :=_fggee ._adf ._bcgcg .LookupByReference (_geggd .PdfObjectReference );_aaga ==nil {var _gfde bool ;if _cfb ,_aeged :=_da .GetStream (_bega );_aeged &&_bf .Equal (_cfb .Stream ,_geggd .Stream ){_gfde =true ;};if _adcf ,_cdff :=_da .GetDict (_bega );_gfde &&_cdff {_gfde =_adcf .WriteString ()==_geggd .PdfObjectDictionary .WriteString ();};if _gfde {return ;};};if _geggd .ObjectNumber !=0{_fggee ._geef [_dfe ]=_geggd .ObjectNumber ;};default:if _ ,_dadcd :=_fggee ._gfgd [_dfe ];!_dadcd {_fggee .addNewObject (_dfe );};};_fggee .updateObjectsDeep (_geggd .PdfObjectDictionary ,_gfgg );};};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_dcba ,_bcacg :=_dg .NewStdFontByName (HelveticaName );if !_bcacg {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_ddeg :=_gaaed (_dcba );return &PdfFont {_edgc :&_ddeg };};

// String returns a string representation of the field.
func (_dgfcg *PdfField )String ()string {if _feabc ,_badb :=_dgfcg .ToPdfObject ().(*_da .PdfIndirectObject );_badb {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dgfcg ._ffgg ,_feabc .PdfObject .String ());};return "";};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_gdde byte )byte ;

// G returns the value of the green component of the color.
func (_fcgd *PdfColorDeviceRGB )G ()float64 {return float64 (_fcgd [1])};

// GetOutlineTree returns the outline tree.
func (_fegc *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _fegc ._ebdfe };

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_bdfg *PdfFieldButton )SetType (btype ButtonType ){_abbe :=uint32 (0);if _bdfg .Ff !=nil {_abbe =uint32 (*_bdfg .Ff );};switch btype {case ButtonTypePush :_abbe |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_abbe |=FieldFlagRadio .Mask ();};_bdfg .Ff =_da .MakeInteger (int64 (_abbe ));};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_cdcd *_da .PdfIndirectObject ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_ebdgdc *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _ebdgdc .fill (provider ,appGen );};func _bgdbb ()_ef .Time {return _aeca };

// Encoder returns the font's text encoder.
func (_cfgec *pdfFontSimple )Encoder ()_cee .TextEncoder {if _cfgec ._bgdb !=nil {return _cfgec ._bgdb ;};if _cfgec ._bfdfgg !=nil {return _cfgec ._bfdfgg ;};_egcf ,_ :=_cee .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _egcf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dccgf pdfCIDFontType2 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){_ddbaf ,_ecfeb :=_dccgf ._dffc [r ];if !_ecfeb {_defea ,_cbdcb :=_da .GetInt (_dccgf .DW );if !_cbdcb {return _dg .CharMetrics {},false ;};_ddbaf =int (*_defea );};return _dg .CharMetrics {Wx :float64 (_ddbaf )},true ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_da .PdfObject ;};func (_bfeca *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bfeca ._bcgcg .GetCrypter ()!=nil &&!_bfeca ._bcgcg .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_abedb :=_bfeca ._ddgbf ;_fgcfg :=_abedb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _fgcfg ==nil {return nil ,nil ;};_fcgga ,_ :=_da .GetIndirect (_fgcfg );_fgcfg =_da .TraceToDirectObject (_fgcfg );if _da .IsNullObject (_fgcfg ){_ac .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_baeee ,_efbfe :=_da .GetDict (_fgcfg );if !_efbfe {_ac .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_fgcfg );_ac .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_fgcfg );};_ac .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_ac .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bfeca ._aceeb {_aaggb :=_bfeca .traverseObjectData (_baeee );if _aaggb !=nil {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_aaggb );return nil ,_aaggb ;};};_gedb ,_bdfbf :=_bfeca .newPdfAcroFormFromDict (_fcgga ,_baeee );if _bdfbf !=nil {return nil ,_bdfbf ;};return _gedb ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fgad *OutlineItem )Insert (index uint ,item *OutlineItem ){_ccge :=uint (len (_fgad .Entries ));if index > _ccge {index =_ccge ;};_fgad .Entries =append (_fgad .Entries [:index ],append ([]*OutlineItem {item },_fgad .Entries [index :]...)...);};func (_aaafb fontCommon )isCIDFont ()bool {if _aaafb ._bffg ==""{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aaafb );};_effd :=false ;switch _aaafb ._bffg {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_effd =true ;};_ac .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_effd ,_aaafb );return _effd ;};func (_bagd *PdfReader )newPdfAnnotationSquareFromDict (_fab *_da .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bge :=PdfAnnotationSquare {};_abec ,_eba :=_bagd .newPdfAnnotationMarkupFromDict (_fab );if _eba !=nil {return nil ,_eba ;};_bge .PdfAnnotationMarkup =_abec ;_bge .BS =_fab .Get ("\u0042\u0053");_bge .IC =_fab .Get ("\u0049\u0043");_bge .BE =_fab .Get ("\u0042\u0045");_bge .RD =_fab .Get ("\u0052\u0044");return &_bge ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _da .PdfObject ;LE _da .PdfObject ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;IT _da .PdfObject ;Measure _da .PdfObject ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cgdac *XObjectForm )SetContentStream (content []byte ,encoder _da .StreamEncoder )error {_cdbcbg :=content ;if encoder ==nil {if _cgdac .Filter !=nil {encoder =_cgdac .Filter ;}else {encoder =_da .NewRawEncoder ();};};_ecdfa ,_geff :=encoder .EncodeBytes (_cdbcbg );if _geff !=nil {return _geff ;};_cdbcbg =_ecdfa ;_cgdac .Stream =_cdbcbg ;_cgdac .Filter =encoder ;return nil ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_gcdb *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_aabde :=_gcdb .actualFont ();if _aabde ==nil {_ac .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_gcdb ._edgc );return _dg .CharMetrics {},false ;};if _dgca ,_agbe :=_aabde .GetRuneMetrics (r );_agbe {return _dgca ,true ;};if _aabf ,_ffcg :=_gcdb .GetFontDescriptor ();_ffcg ==nil &&_aabf !=nil {return _dg .CharMetrics {Wx :_aabf ._bede },true ;};_ac .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcdb );return _dg .CharMetrics {},false ;};func (_dbca *PdfWriter )writeBytes (_fgbaf []byte ){if _dbca ._dabfb !=nil {return ;};_fcagb ,_edgdb :=_dbca ._gfbaa .Write (_fgbaf );_dbca ._fgbeb +=int64 (_fcagb );_dbca ._dabfb =_edgdb ;};func _edffa (_dgegb *_da .PdfObjectDictionary )(*PdfShadingType5 ,error ){_gfca :=PdfShadingType5 {};_egda :=_dgegb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _egda ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_debaeg ,_gaag :=_egda .(*_da .PdfObjectInteger );if !_gaag {_ac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egda );return nil ,_da .ErrTypeError ;};_gfca .BitsPerCoordinate =_debaeg ;_egda =_dgegb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _egda ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_debaeg ,_gaag =_egda .(*_da .PdfObjectInteger );if !_gaag {_ac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_egda );return nil ,_da .ErrTypeError ;};_gfca .BitsPerComponent =_debaeg ;_egda =_dgegb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _egda ==nil {_ac .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_debaeg ,_gaag =_egda .(*_da .PdfObjectInteger );if !_gaag {_ac .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_egda );return nil ,_da .ErrTypeError ;};_gfca .VerticesPerRow =_debaeg ;_egda =_dgegb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _egda ==nil {_ac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cdbcf ,_gaag :=_egda .(*_da .PdfObjectArray );if !_gaag {_ac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egda );return nil ,_da .ErrTypeError ;};_gfca .Decode =_cdbcf ;if _baea :=_dgegb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_baea !=nil {_gfca .Function =[]PdfFunction {};if _eaga ,_bggaf :=_baea .(*_da .PdfObjectArray );_bggaf {for _ ,_eafg :=range _eaga .Elements (){_dcfdb ,_ecfga :=_eeebd (_eafg );if _ecfga !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecfga );return nil ,_ecfga ;};_gfca .Function =append (_gfca .Function ,_dcfdb );};}else {_eedef ,_gebaa :=_eeebd (_baea );if _gebaa !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gebaa );return nil ,_gebaa ;};_gfca .Function =append (_gfca .Function ,_eedef );};};return &_gfca ,nil ;};func (_gbac *PdfReader )newPdfAnnotationRedactFromDict (_eafa *_da .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_bbfe :=PdfAnnotationRedact {};_dccd ,_fcab :=_gbac .newPdfAnnotationMarkupFromDict (_eafa );if _fcab !=nil {return nil ,_fcab ;};_bbfe .PdfAnnotationMarkup =_dccd ;_bbfe .QuadPoints =_eafa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bbfe .IC =_eafa .Get ("\u0049\u0043");_bbfe .RO =_eafa .Get ("\u0052\u004f");_bbfe .OverlayText =_eafa .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_bbfe .Repeat =_eafa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_bbfe .DA =_eafa .Get ("\u0044\u0041");_bbfe .Q =_eafa .Get ("\u0051");return &_bbfe ,nil ;};func (_eegg *PdfReader )newPdfFieldFromIndirectObject (_affa *_da .PdfIndirectObject ,_egdg *PdfField )(*PdfField ,error ){if _gaedb ,_gdfg :=_eegg ._gafba .GetModelFromPrimitive (_affa ).(*PdfField );_gdfg {return _gaedb ,nil ;};_ccgd ,_cbeb :=_da .GetDict (_affa );if !_cbeb {return nil ,_f .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gceg :=NewPdfField ();_gceg ._cfed =_affa ;_gceg ._cfed .PdfObject =_ccgd ;_efad :=false ;if _ceeeb ,_aeef :=_da .GetName (_ccgd .Get ("\u0046\u0054"));_aeef {_gceg .FT =_ceeeb ;_efad =true ;};_gceg ._ggded =&_efad ;_gceg .T ,_ =_ccgd .Get ("\u0054").(*_da .PdfObjectString );_gceg .TU ,_ =_ccgd .Get ("\u0054\u0055").(*_da .PdfObjectString );_gceg .TM ,_ =_ccgd .Get ("\u0054\u004d").(*_da .PdfObjectString );_gceg .Ff ,_ =_ccgd .Get ("\u0046\u0066").(*_da .PdfObjectInteger );_gceg .V =_ccgd .Get ("\u0056");_gceg .DV =_ccgd .Get ("\u0044\u0056");_gceg .AA =_ccgd .Get ("\u0041\u0041");if _gceg .FT !=nil {switch *_gceg .FT {case "\u0054\u0078":_egbf ,_bddc :=_dcfe (_ccgd );if _bddc !=nil {return nil ,_bddc ;};_egbf .PdfField =_gceg ;_gceg ._ffgg =_egbf ;case "\u0043\u0068":_eeda ,_gabc :=_ffaed (_ccgd );if _gabc !=nil {return nil ,_gabc ;};_eeda .PdfField =_gceg ;_gceg ._ffgg =_eeda ;case "\u0042\u0074\u006e":_fcbf ,_bccga :=_aaeb (_ccgd );if _bccga !=nil {return nil ,_bccga ;};_fcbf .PdfField =_gceg ;_gceg ._ffgg =_fcbf ;case "\u0053\u0069\u0067":_bbag ,_gfgag :=_eegg .newPdfFieldSignatureFromDict (_ccgd );if _gfgag !=nil {return nil ,_gfgag ;};_bbag .PdfField =_gceg ;_gceg ._ffgg =_bbag ;default:_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gceg .FT );return nil ,_ag .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _egdg !=nil {_gceg .Parent =_egdg ;};_gceg .Annotations =[]*PdfAnnotationWidget {};if _deee ,_egac :=_da .GetName (_ccgd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_egac {if *_deee =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dfgbg ,_gdef :=_eegg .newPdfAnnotationFromIndirectObject (_affa );if _gdef !=nil {return nil ,_gdef ;};_gcdgc ,_baaac :=_dfgbg .GetContext ().(*PdfAnnotationWidget );if !_baaac {return nil ,_ag .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_gcdgc ._gcec =_gceg ;_gcdgc .Parent =_gceg ._cfed ;_gceg .Annotations =append (_gceg .Annotations ,_gcdgc );return _gceg ,nil ;};};if _efbdc ,_agcg :=_da .GetArray (_ccgd .Get ("\u004b\u0069\u0064\u0073"));_agcg {_gceg .Kids =[]*PdfField {};for _ ,_dbegd :=range _efbdc .Elements (){_dcef ,_eeggb :=_da .GetIndirect (_dbegd );if !_eeggb {_eabf ,_edbe :=_da .GetStream (_dbegd );if _edbe &&_eabf .PdfObjectDictionary !=nil {_ccea ,_ecbfa :=_da .GetNameVal (_eabf .Get ("\u0054\u0079\u0070\u0065"));if _ecbfa &&_ccea =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ac .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_ag .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_dbac ,_eegf :=_da .GetDict (_dcef );if !_eegf {return nil ,ErrTypeCheck ;};_ ,_gccdf :=_da .GetName (_dbac .Get ("\u0046\u0054"));if _ecfdg ,_ceedg :=_da .GetName (_dbac .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_ceedg &&!_gccdf &&*_ecfdg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_ggae ,_fgeb :=_eegg .newPdfAnnotationFromIndirectObject (_dcef );if _fgeb !=nil {_ac .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fgeb );return nil ,_fgeb ;};_gafb ,_eeaf :=_ggae ._gbd .(*PdfAnnotationWidget );if !_eeaf {return nil ,ErrTypeCheck ;};_gafb ._gcec =_gceg ;_gceg .Annotations =append (_gceg .Annotations ,_gafb );}else {_bfce ,_abbec :=_eegg .newPdfFieldFromIndirectObject (_dcef ,_gceg );if _abbec !=nil {_ac .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_abbec );return nil ,_abbec ;};_gceg .Kids =append (_gceg .Kids ,_bfce );};};};return _gceg ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_gbaa *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_gbaa .HiVal )};};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _da .PdfObject ;BS _da .PdfObject ;LE _da .PdfObject ;IC _da .PdfObject ;LL _da .PdfObject ;LLE _da .PdfObject ;Cap _da .PdfObject ;IT _da .PdfObject ;LLO _da .PdfObject ;CP _da .PdfObject ;Measure _da .PdfObject ;CO _da .PdfObject ;};var _dabab =_eb .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// GetAscent returns the Ascent of the font `descriptor`.
func (_ddac *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _da .GetNumberAsFloat (_ddac .Ascent );};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func _eecag (_cfdef *_da .PdfObjectDictionary ,_eecce *fontCommon )(*pdfCIDFontType0 ,error ){if _eecce ._bffg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_eecce );return nil ,_da .ErrRangeError ;};_gebad :=_faae (_eecce );_gfbf ,_dfdac :=_da .GetDict (_cfdef .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dfdac {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eecce );return nil ,ErrRequiredAttributeMissing ;};_gebad .CIDSystemInfo =_gfbf ;_gebad .DW =_cfdef .Get ("\u0044\u0057");_gebad .W =_cfdef .Get ("\u0057");_gebad .DW2 =_cfdef .Get ("\u0044\u0057\u0032");_gebad .W2 =_cfdef .Get ("\u0057\u0032");_gebad ._bbcfa =1000.0;if _caac ,_eedf :=_da .GetNumberAsFloat (_gebad .DW );_eedf ==nil {_gebad ._bbcfa =_caac ;};_degb ,_beeff :=_aecd (_gebad .W );if _beeff !=nil {return nil ,_beeff ;};if _degb ==nil {_degb =map[_cee .CharCode ]float64 {};};_gebad ._efdf =_degb ;return _gebad ,nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_afdb :=NewPdfAnnotation ();_bee :=&PdfAnnotationStamp {};_bee .PdfAnnotation =_afdb ;_bee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afdb .SetContext (_bee );return _bee ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dgec *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_facb :=_df .NewReader (img .getBase ());_gdaa :=_eff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dgec .AlternateSpace .GetNumComponents (),nil ,img ._efgcc ,nil );_efff :=_df .NewWriter (_gdaa );_cfcdd :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_ac .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_ac .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dgec .TintTransform );_afcd :=_dgec .AlternateSpace .DecodeArray ();var (_fcbg uint32 ;_gbaae error ;);for {_fcbg ,_gbaae =_facb .ReadSample ();if _gbaae ==_gg .EOF {break ;};if _gbaae !=nil {return img ,_gbaae ;};_aedcf :=float64 (_fcbg )/_cfcdd ;_dcgfc ,_afgf :=_dgec .TintTransform .Evaluate ([]float64 {_aedcf });if _afgf !=nil {return img ,_afgf ;};for _ceebc ,_gafd :=range _dcgfc {_abbf :=_eff .LinearInterpolate (_gafd ,_afcd [_ceebc *2],_afcd [_ceebc *2+1],0,1);if _afgf =_efff .WriteSample (uint32 (_abbf *_cfcdd ));_afgf !=nil {return img ,_afgf ;};};};return _dgec .AlternateSpace .ImageToRGB (_abag (&_gdaa ));};func (_aeabc *PdfReader )newPdfFieldSignatureFromDict (_ebcag *_da .PdfObjectDictionary )(*PdfFieldSignature ,error ){_deagd :=&PdfFieldSignature {};_afcca ,_caefa :=_da .GetIndirect (_ebcag .Get ("\u0056"));if _caefa {var _eacce error ;_deagd .V ,_eacce =_aeabc .newPdfSignatureFromIndirect (_afcca );if _eacce !=nil {return nil ,_eacce ;};};_deagd .Lock ,_ =_da .GetIndirect (_ebcag .Get ("\u004c\u006f\u0063\u006b"));_deagd .SV ,_ =_da .GetIndirect (_ebcag .Get ("\u0053\u0056"));return _deagd ,nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cfcfb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _cbbb []float64 ;for _afbff :=0;_afbff < _cfcfb .GetNumComponents ();_afbff ++{_cbbb =append (_cbbb ,0.0,1.0);};return _cbbb ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func (_cceb *PdfReader )newPdfAnnotationPolyLineFromDict (_adea *_da .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cbe :=PdfAnnotationPolyLine {};_bdb ,_eae :=_cceb .newPdfAnnotationMarkupFromDict (_adea );if _eae !=nil {return nil ,_eae ;};_cbe .PdfAnnotationMarkup =_bdb ;_cbe .Vertices =_adea .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cbe .LE =_adea .Get ("\u004c\u0045");_cbe .BS =_adea .Get ("\u0042\u0053");_cbe .IC =_adea .Get ("\u0049\u0043");_cbe .BE =_adea .Get ("\u0042\u0045");_cbe .IT =_adea .Get ("\u0049\u0054");_cbe .Measure =_adea .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cbe ,nil ;};func (_ccccd *PdfReader )newPdfOutlineItemFromIndirectObject (_ffgeg *_da .PdfIndirectObject )(*PdfOutlineItem ,error ){_dgbfa ,_eadd :=_ffgeg .PdfObject .(*_da .PdfObjectDictionary );if !_eadd {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_faagc :=NewPdfOutlineItem ();_cgfb :=_dgbfa .Get ("\u0054\u0069\u0074l\u0065");if _cgfb ==nil {return nil ,_f .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_fggeea ,_cccf :=_da .GetString (_cgfb );if !_cccf {return nil ,_f .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cgfb );};_faagc .Title =_fggeea ;if _cbcc :=_dgbfa .Get ("\u0043\u006f\u0075n\u0074");_cbcc !=nil {_dabdea ,_cgff :=_cbcc .(*_da .PdfObjectInteger );if !_cgff {return nil ,_f .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_cbcc );};_fafcb :=int64 (*_dabdea );_faagc .Count =&_fafcb ;};if _bebg :=_dgbfa .Get ("\u0044\u0065\u0073\u0074");_bebg !=nil {_faagc .Dest =_da .ResolveReference (_bebg );if !_ccccd ._aceeb {_aece :=_ccccd .traverseObjectData (_faagc .Dest );if _aece !=nil {return nil ,_aece ;};};};if _gdfag :=_dgbfa .Get ("\u0041");_gdfag !=nil {_faagc .A =_da .ResolveReference (_gdfag );if !_ccccd ._aceeb {_ccgdf :=_ccccd .traverseObjectData (_faagc .A );if _ccgdf !=nil {return nil ,_ccgdf ;};};};if _fcagf :=_dgbfa .Get ("\u0053\u0045");_fcagf !=nil {_faagc .SE =nil ;};if _cfbd :=_dgbfa .Get ("\u0043");_cfbd !=nil {_faagc .C =_da .ResolveReference (_cfbd );};if _gdage :=_dgbfa .Get ("\u0046");_gdage !=nil {_faagc .F =_da .ResolveReference (_gdage );};return _faagc ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_eedg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _eedg .flattenFieldsWithOpts (false ,appgen ,opts );};func (_affc *PdfReader )newPdfAnnotationPolygonFromDict (_bfgd *_da .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_eaa :=PdfAnnotationPolygon {};_afe ,_cafa :=_affc .newPdfAnnotationMarkupFromDict (_bfgd );if _cafa !=nil {return nil ,_cafa ;};_eaa .PdfAnnotationMarkup =_afe ;_eaa .Vertices =_bfgd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_eaa .LE =_bfgd .Get ("\u004c\u0045");_eaa .BS =_bfgd .Get ("\u0042\u0053");_eaa .IC =_bfgd .Get ("\u0049\u0043");_eaa .BE =_bfgd .Get ("\u0042\u0045");_eaa .IT =_bfgd .Get ("\u0049\u0054");_eaa .Measure =_bfgd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_eaa ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_gacd *PdfSignature )SetLocation (location string ){_gacd .Location =_da .MakeString (location )};

// ToPdfObject implements interface PdfModel.
func (_gef *PdfAnnotationText )ToPdfObject ()_da .PdfObject {_gef .PdfAnnotation .ToPdfObject ();_acfg :=_gef ._cfd ;_bgee :=_acfg .PdfObject .(*_da .PdfObjectDictionary );if _gef .PdfAnnotationMarkup !=nil {_gef .PdfAnnotationMarkup .appendToPdfDictionary (_bgee );};_bgee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0054\u0065\u0078\u0074"));_bgee .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gef .Open );_bgee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gef .Name );_bgee .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gef .State );_bgee .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gef .StateModel );return _acfg ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_aaae *PdfReader )CheckAccessRights (password []byte )(bool ,_fb .Permissions ,error ){return _aaae ._bcgcg .CheckAccessRights (password );};var _abagb ="";func (_ccaf *PdfShading )getShadingDict ()(*_da .PdfObjectDictionary ,error ){_aadad :=_ccaf ._fgfdc ;if _edegcf ,_eddcc :=_aadad .(*_da .PdfIndirectObject );_eddcc {_adfb ,_ccaec :=_edegcf .PdfObject .(*_da .PdfObjectDictionary );if !_ccaec {return nil ,_da .ErrTypeError ;};return _adfb ,nil ;}else if _gfeag ,_cbbag :=_aadad .(*_da .PdfObjectStream );_cbbag {return _gfeag .PdfObjectDictionary ,nil ;}else if _fcccg ,_agfbc :=_aadad .(*_da .PdfObjectDictionary );_agfbc {return _fcccg ,nil ;}else {_ac .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_da .ErrTypeError ;};};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gg .ReadSeeker )(*PdfFont ,error ){const _dbbe =_cee .CharCode (32);const _dgdde =_cee .CharCode (255);_adcce ,_cebg :=_ce .ReadAll (r );if _cebg !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cebg );return nil ,_cebg ;};_fgbfg ,_cebg :=_dg .TtfParse (_bf .NewReader (_adcce ));if _cebg !=nil {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cebg );return nil ,_cebg ;};_efcg :=&pdfFontSimple {_efege :make (map[_cee .CharCode ]float64 ),fontCommon :fontCommon {_bffg :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_efcg ._bgdb =_cee .NewWinAnsiEncoder ();_efcg ._dabeae =_fgbfg .PostScriptName ;_efcg .FirstChar =_da .MakeInteger (int64 (_dbbe ));_efcg .LastChar =_da .MakeInteger (int64 (_dgdde ));_bddg :=1000.0/float64 (_fgbfg .UnitsPerEm );if len (_fgbfg .Widths )<=0{return nil ,_ag .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_ffgac :=_bddg *float64 (_fgbfg .Widths [0]);_gcfg :=make ([]float64 ,0,_dgdde -_dbbe +1);for _cegfb :=_dbbe ;_cegfb <=_dgdde ;_cegfb ++{_eadb ,_dcbdg :=_efcg .Encoder ().CharcodeToRune (_cegfb );if !_dcbdg {_ac .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_cegfb );_gcfg =append (_gcfg ,_ffgac );continue ;};_adcb ,_fbabe :=_fgbfg .Chars [_eadb ];if !_fbabe {_ac .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_gcfg =append (_gcfg ,_ffgac );continue ;};_fdgc :=_bddg *float64 (_fgbfg .Widths [_adcb ]);_gcfg =append (_gcfg ,_fdgc );};_efcg .Widths =_da .MakeIndirectObject (_da .MakeArrayFromFloats (_gcfg ));if len (_gcfg )< int (_dgdde -_dbbe +1){_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_gcfg ),255-32+1);return nil ,_da .ErrRangeError ;};for _ecegf :=_cee .CharCode (_dbbe );_ecegf <=_dgdde ;_ecegf ++{_efcg ._efege [_ecegf ]=_gcfg [_ecegf -_dbbe ];};_efcg .Encoding =_da .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_eaccg :=&PdfFontDescriptor {};_eaccg .FontName =_da .MakeName (_fgbfg .PostScriptName );_eaccg .Ascent =_da .MakeFloat (_bddg *float64 (_fgbfg .TypoAscender ));_eaccg .Descent =_da .MakeFloat (_bddg *float64 (_fgbfg .TypoDescender ));_eaccg .CapHeight =_da .MakeFloat (_bddg *float64 (_fgbfg .CapHeight ));_eaccg .FontBBox =_da .MakeArrayFromFloats ([]float64 {_bddg *float64 (_fgbfg .Xmin ),_bddg *float64 (_fgbfg .Ymin ),_bddg *float64 (_fgbfg .Xmax ),_bddg *float64 (_fgbfg .Ymax )});_eaccg .ItalicAngle =_da .MakeFloat (float64 (_fgbfg .ItalicAngle ));_eaccg .MissingWidth =_da .MakeFloat (_bddg *float64 (_fgbfg .Widths [0]));_eebaf ,_cebg :=_da .MakeStream (_adcce ,_da .NewFlateEncoder ());if _cebg !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cebg );return nil ,_cebg ;};_eebaf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_da .MakeInteger (int64 (len (_adcce ))));_eaccg .FontFile2 =_eebaf ;if _fgbfg .Bold {_eaccg .StemV =_da .MakeInteger (120);}else {_eaccg .StemV =_da .MakeInteger (70);};_ecde :=_daae ;if _fgbfg .IsFixedPitch {_ecde |=_aedfe ;};if _fgbfg .ItalicAngle !=0{_ecde |=_bdef ;};_eaccg .Flags =_da .MakeInteger (int64 (_ecde ));_efcg ._gcgf =_eaccg ;_ecfec :=&PdfFont {_edgc :_efcg };return _ecfec ,nil ;};func _befe (_fcee *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fcee }};func (_acaef *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// ToPdfObject implements interface PdfModel.
func (_bbba *PdfAnnotationMovie )ToPdfObject ()_da .PdfObject {_bbba .PdfAnnotation .ToPdfObject ();_ccecg :=_bbba ._cfd ;_ddbe :=_ccecg .PdfObject .(*_da .PdfObjectDictionary );_ddbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u004d\u006f\u0076i\u0065"));_ddbe .SetIfNotNil ("\u0054",_bbba .T );_ddbe .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_bbba .Movie );_ddbe .SetIfNotNil ("\u0041",_bbba .A );return _ccecg ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_caeef *PdfPageResources )HasXObjectByName (keyName _da .PdfObjectName )bool {_cfbce ,_ :=_caeef .GetXObjectByName (keyName );return _cfbce !=nil ;};func (_afeed *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_deea *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_ecbb *PdfReader )newPdfAnnotationLineFromDict (_bdd *_da .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_eace :=PdfAnnotationLine {};_cfaa ,_agcc :=_ecbb .newPdfAnnotationMarkupFromDict (_bdd );if _agcc !=nil {return nil ,_agcc ;};_eace .PdfAnnotationMarkup =_cfaa ;_eace .L =_bdd .Get ("\u004c");_eace .BS =_bdd .Get ("\u0042\u0053");_eace .LE =_bdd .Get ("\u004c\u0045");_eace .IC =_bdd .Get ("\u0049\u0043");_eace .LL =_bdd .Get ("\u004c\u004c");_eace .LLE =_bdd .Get ("\u004c\u004c\u0045");_eace .Cap =_bdd .Get ("\u0043\u0061\u0070");_eace .IT =_bdd .Get ("\u0049\u0054");_eace .LLO =_bdd .Get ("\u004c\u004c\u004f");_eace .CP =_bdd .Get ("\u0043\u0050");_eace .Measure =_bdd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_eace .CO =_bdd .Get ("\u0043\u004f");return &_eace ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_agdb *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _da .PdfObject ;T3DV _da .PdfObject ;T3DA _da .PdfObject ;T3DI _da .PdfObject ;T3DB _da .PdfObject ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gfeed []_da .PdfObject )([]_da .PdfObject ,error );};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_ffgg PdfModel ;_cfed *_da .PdfIndirectObject ;_ggded *bool ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_da .PdfObjectName ;T *_da .PdfObjectString ;TU *_da .PdfObjectString ;TM *_da .PdfObjectString ;Ff *_da .PdfObjectInteger ;V _da .PdfObject ;DV _da .PdfObject ;AA _da .PdfObject ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_gffc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_dcgea :=func (_agba float64 )float64 {if _agba >=6.0/29{return _agba *_agba *_agba ;};return 108.0/841*(_agba -4/29);};_baaf ,_egfa :=color .(*PdfColorLab );if !_egfa {_ac .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_baaf .L ();AStar :=_baaf .A ();BStar :=_baaf .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_gffc .WhitePoint [0]*_dcgea (L );Y :=_gffc .WhitePoint [1]*_dcgea (M );Z :=_gffc .WhitePoint [2]*_dcgea (N );_egcbd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dace :=-0.969256*X +1.875992*Y +0.041556*Z ;_cace :=0.055648*X +-0.204043*Y +1.057311*Z ;_egcbd =_bb .Min (_bb .Max (_egcbd ,0),1.0);_dace =_bb .Min (_bb .Max (_dace ,0),1.0);_cace =_bb .Min (_bb .Max (_cace ,0),1.0);return NewPdfColorDeviceRGB (_egcbd ,_dace ,_cace ),nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _da .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _da .PdfObject ;Contents _da .PdfObject ;Rotate *int64 ;Group _da .PdfObject ;Thumb _da .PdfObject ;B _da .PdfObject ;Dur _da .PdfObject ;Trans _da .PdfObject ;AA _da .PdfObject ;Metadata _da .PdfObject ;PieceInfo _da .PdfObject ;StructParents _da .PdfObject ;ID _da .PdfObject ;PZ _da .PdfObject ;SeparationInfo _da .PdfObject ;Tabs _da .PdfObject ;TemplateInstantiated _da .PdfObject ;PresSteps _da .PdfObject ;UserUnit _da .PdfObject ;VP _da .PdfObject ;Annots _da .PdfObject ;_gfgdf []*PdfAnnotation ;_ccaa *_da .PdfObjectDictionary ;_dabad *_da .PdfIndirectObject ;_bfcca *PdfReader ;};

// Add appends an outline item as a child of the current outline item.
func (_abffab *OutlineItem )Add (item *OutlineItem ){_abffab .Entries =append (_abffab .Entries ,item )};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _da .PdfObject )(PdfColorspace ,error ){var _gaga *_da .PdfIndirectObject ;var _degc *_da .PdfObjectName ;var _gdba *_da .PdfObjectArray ;if _aga ,_ebdb :=obj .(*_da .PdfIndirectObject );_ebdb {_gaga =_aga ;};obj =_da .TraceToDirectObject (obj );switch _dbedd :=obj .(type ){case *_da .PdfObjectArray :_gdba =_dbedd ;case *_da .PdfObjectName :_degc =_dbedd ;};if _degc !=nil {switch *_degc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_ac .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_degc );return nil ,_dfcf ;};};if _gdba !=nil &&_gdba .Len ()> 0{var _efba _da .PdfObject =_gaga ;if _gaga ==nil {_efba =_gdba ;};if _ddce ,_dcf :=_da .GetName (_gdba .Get (0));_dcf {switch _ddce .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gdba .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gdba .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gdba .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fggeee (_efba );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _cfde (_efba );case "\u004c\u0061\u0062":return _bbbcb (_efba );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _dgfdd (_efba );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ffef (_efba );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _fbea (_efba );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dcdfe (_efba );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _ged (_efba );default:_ac .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_ddce );};};};_ac .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ceddb *PdfShadingType5 )ToPdfObject ()_da .PdfObject {_ceddb .PdfShading .ToPdfObject ();_caccd ,_feggc :=_ceddb .getShadingDict ();if _feggc !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ceddb .BitsPerCoordinate !=nil {_caccd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ceddb .BitsPerCoordinate );};if _ceddb .BitsPerComponent !=nil {_caccd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ceddb .BitsPerComponent );};if _ceddb .VerticesPerRow !=nil {_caccd .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_ceddb .VerticesPerRow );};if _ceddb .Decode !=nil {_caccd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ceddb .Decode );};if _ceddb .Function !=nil {if len (_ceddb .Function )==1{_caccd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ceddb .Function [0].ToPdfObject ());}else {_addaf :=_da .MakeArray ();for _ ,_eeaac :=range _ceddb .Function {_addaf .Append (_eeaac .ToPdfObject ());};_caccd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_addaf );};};return _ceddb ._fgfdc ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_cebdd *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_begg ,_egdc :=color .(*PdfColorCalRGB );if !_egdc {_ac .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cged :=_begg .A ();_gcba :=_begg .B ();_ecaa :=_begg .C ();X :=_cebdd .Matrix [0]*_bb .Pow (_cged ,_cebdd .Gamma [0])+_cebdd .Matrix [3]*_bb .Pow (_gcba ,_cebdd .Gamma [1])+_cebdd .Matrix [6]*_bb .Pow (_ecaa ,_cebdd .Gamma [2]);Y :=_cebdd .Matrix [1]*_bb .Pow (_cged ,_cebdd .Gamma [0])+_cebdd .Matrix [4]*_bb .Pow (_gcba ,_cebdd .Gamma [1])+_cebdd .Matrix [7]*_bb .Pow (_ecaa ,_cebdd .Gamma [2]);Z :=_cebdd .Matrix [2]*_bb .Pow (_cged ,_cebdd .Gamma [0])+_cebdd .Matrix [5]*_bb .Pow (_gcba ,_cebdd .Gamma [1])+_cebdd .Matrix [8]*_bb .Pow (_ecaa ,_cebdd .Gamma [2]);_fdfd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bcgc :=-0.969256*X +1.875992*Y +0.041556*Z ;_ggeb :=0.055648*X +-0.204043*Y +1.057311*Z ;_fdfd =_bb .Min (_bb .Max (_fdfd ,0),1.0);_bcgc =_bb .Min (_bb .Max (_bcgc ,0),1.0);_ggeb =_bb .Min (_bb .Max (_ggeb ,0),1.0);return NewPdfColorDeviceRGB (_fdfd ,_bcgc ,_ggeb ),nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_fbbb *PdfPage )GetContentStreams ()([]string ,error ){if _fbbb .Contents ==nil {return nil ,nil ;};_abdg :=_da .TraceToDirectObject (_fbbb .Contents );var _caed []_da .PdfObject ;if _bfef ,_gbadgg :=_abdg .(*_da .PdfObjectArray );_gbadgg {_caed =_bfef .Elements ();}else {_caed =[]_da .PdfObject {_abdg };};var _eccce []string ;for _ ,_eecac :=range _caed {_cdda ,_gaaaf :=_bdac (_eecac );if _gaaaf !=nil {return nil ,_gaaaf ;};_eccce =append (_eccce ,_cdda );};return _eccce ,nil ;};func (_bgbdf *PdfFont )baseFields ()*fontCommon {if _bgbdf ._edgc ==nil {_ac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _bgbdf ._edgc .baseFields ();};

// GetSubFilter returns SubFilter value or empty string.
func (_fafe *pdfSignDictionary )GetSubFilter ()string {_ggdfc :=_fafe .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _ggdfc ==nil {return "";};if _ecgf ,_gcgdgc :=_da .GetNameVal (_ggdfc );_gcgdgc {return _ecgf ;};return "";};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gbag *PdfPage )error ;};func _abbge (_abbed _da .PdfObject ,_bbgc *fontCommon )(*_age .CMap ,error ){_bagge ,_gfee :=_da .GetStream (_abbed );if !_gfee {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_abbed );return nil ,_da .ErrTypeError ;};_cfbcc ,_dgfb :=_da .DecodeStream (_bagge );if _dgfb !=nil {return nil ,_dgfb ;};_eadg ,_dgfb :=_age .LoadCmapFromData (_cfbcc ,!_bbgc .isCIDFont ());if _dgfb !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_bagge .ObjectNumber ,_dgfb );};return _eadg ,_dgfb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gbbf *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dccgd ,_ddcg :=_da .GetNumbersAsFloat (objects );if _ddcg !=nil {return nil ,_ddcg ;};return _gbbf .ColorFromFloats (_dccgd );};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_cbea *pdfFontSimple )SetEncoder (encoder _cee .TextEncoder ){_cbea ._bgdb =encoder };

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gbacb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gbacb .Alternate ==nil {if _gbacb .N ==1{_aebc :=NewPdfColorspaceDeviceGray ();return _aebc .ColorFromFloats (vals );}else if _gbacb .N ==3{_bbdd :=NewPdfColorspaceDeviceRGB ();return _bbdd .ColorFromFloats (vals );}else if _gbacb .N ==4{_dcab :=NewPdfColorspaceDeviceCMYK ();return _dcab .ColorFromFloats (vals );}else {return nil ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gbacb .Alternate .ColorFromFloats (vals );};func (_badc *PdfReader )resolveReference (_cgbadf *_da .PdfObjectReference )(_da .PdfObject ,bool ,error ){_ceffd ,_gfeeg :=_badc ._bcgcg .ObjCache [int (_cgbadf .ObjectNumber )];if !_gfeeg {_ac .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cgbadf );_efgcbf ,_gbdff :=_badc ._bcgcg .LookupByReference (*_cgbadf );if _gbdff !=nil {return nil ,false ,_gbdff ;};_badc ._bcgcg .ObjCache [int (_cgbadf .ObjectNumber )]=_efgcbf ;return _efgcbf ,false ,nil ;};return _ceffd ,true ,nil ;};func (_bbdb fontCommon )fontFlags ()int {if _bbdb ._gcgf ==nil {return 0;};return _bbdb ._gcgf ._faed ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_abeegf *PdfReader )GetEncryptionMethod ()string {_bead :=_abeegf ._bcgcg .GetCrypter ();return _bead .String ();};

// Encoder returns the font's text encoder.
func (_fcaf *PdfFont )Encoder ()_cee .TextEncoder {_fade :=_fcaf .actualFont ();if _fade ==nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_fcaf ._edgc );return nil ;};return _fade .Encoder ();};

// SetAction sets the PDF action for the annotation link.
func (_deg *PdfAnnotationLink )SetAction (action *PdfAction ){_deg ._aega =action ;if action ==nil {_deg .A =nil ;};};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};func (_cbfe *PdfReader )newPdfActionSetOCGStateFromDict (_ebb *_da .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_ebb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_ebb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gg .ReadSeeker )(*PdfFont ,error ){_agcdd ,_gafef :=_ce .ReadAll (r );if _gafef !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gafef );return nil ,_gafef ;};_aabfd ,_gafef :=_dg .TtfParse (_bf .NewReader (_agcdd ));if _gafef !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gafef );return nil ,_gafef ;};_decd :=&pdfCIDFontType2 {fontCommon :fontCommon {_bffg :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_da .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_dabg :=make ([]rune ,0,len (_aabfd .Chars ));for _cdag :=range _aabfd .Chars {_dabg =append (_dabg ,rune (_cdag ));};_ca .Slice (_dabg ,func (_dabgc ,_faaed int )bool {return _dabg [_dabgc ]< _dabg [_faaed ]});_cdaea :=1000.0/float64 (_aabfd .UnitsPerEm );if len (_aabfd .Widths )<=0{return nil ,_ag .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_ecdd :=_cdaea *float64 (_aabfd .Widths [0]);_dgff :=make (map[rune ]int );for _ ,_gabg :=range _dabg {_dgeba :=_aabfd .Chars [_gabg ];_gefe :=_cdaea *float64 (_aabfd .Widths [_dgeba ]);_dgff [_gabg ]=int (_gefe );};_decd ._dffc =_dgff ;_decd .DW =_da .MakeInteger (int64 (_ecdd ));_bced :=_cfgcd (_dabg ,_dgff ,_aabfd .Chars );_decd .W =_da .MakeIndirectObject (_bced );_cgadd :=_da .MakeDict ();_cgadd .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_da .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_cgadd .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_da .MakeString ("\u0041\u0064\u006fb\u0065"));_cgadd .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_da .MakeInteger (0));_decd .CIDSystemInfo =_cgadd ;_afgdb :=&PdfFontDescriptor {FontName :_da .MakeName (_aabfd .PostScriptName ),Ascent :_da .MakeFloat (_cdaea *float64 (_aabfd .TypoAscender )),Descent :_da .MakeFloat (_cdaea *float64 (_aabfd .TypoDescender )),CapHeight :_da .MakeFloat (_cdaea *float64 (_aabfd .CapHeight )),FontBBox :_da .MakeArrayFromFloats ([]float64 {_cdaea *float64 (_aabfd .Xmin ),_cdaea *float64 (_aabfd .Ymin ),_cdaea *float64 (_aabfd .Xmax ),_cdaea *float64 (_aabfd .Ymax )}),ItalicAngle :_da .MakeFloat (float64 (_aabfd .ItalicAngle )),MissingWidth :_da .MakeFloat (_cdaea *float64 (_aabfd .Widths [0]))};_ecadb ,_gafef :=_da .MakeStream (_agcdd ,_da .NewFlateEncoder ());if _gafef !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gafef );return nil ,_gafef ;};_ecadb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_da .MakeInteger (int64 (len (_agcdd ))));_afgdb .FontFile2 =_ecadb ;if _aabfd .Bold {_afgdb .StemV =_da .MakeInteger (120);}else {_afgdb .StemV =_da .MakeInteger (70);};_dbae :=_cdfb ;if _aabfd .IsFixedPitch {_dbae |=_aedfe ;};if _aabfd .ItalicAngle !=0{_dbae |=_bdef ;};_afgdb .Flags =_da .MakeInteger (int64 (_dbae ));_decd ._dabeae =_aabfd .PostScriptName ;_decd ._gcgf =_afgdb ;_fgab :=pdfFontType0 {fontCommon :fontCommon {_bffg :"\u0054\u0079\u0070e\u0030",_dabeae :_aabfd .PostScriptName },DescendantFont :&PdfFont {_edgc :_decd },Encoding :_da .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_eceec :_aabfd .NewEncoder ()};if len (_aabfd .Chars )> 0{_bfgge :=make (map[_age .CharCode ]rune ,len (_aabfd .Chars ));for _fgcg ,_bccec :=range _aabfd .Chars {_ageg :=_age .CharCode (_bccec );if _aeag ,_dabbe :=_bfgge [_ageg ];!_dabbe ||(_dabbe &&_aeag > _fgcg ){_bfgge [_ageg ]=_fgcg ;};};_fgab ._eeba =_age .NewToUnicodeCMap (_bfgge );};_agafg :=PdfFont {_edgc :&_fgab };return &_agafg ,nil ;};

// Write writes out the PDF.
func (_afedcdd *PdfWriter )Write (writer _gg .Writer )error {_ac .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bceda :=_bfg .GetLicenseKey ();if (_bceda ==nil ||!_bceda .IsLicensed ())&&!_bcbcag {_f .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_f .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _ag .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _afedcdd ._cgga !=nil {_ac .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_afedcdd ._cgga );_cdbgg :=_afedcdd ._cgga .ToPdfObject ();_ac .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cdbgg ,_cdbgg ,_cdbgg );_afedcdd ._ebdee .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cdbgg );_dfba :=_afedcdd .addObjects (_cdbgg );if _dfba !=nil {return _dfba ;};};if _afedcdd ._bcggg !=nil {_ac .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_gdcgd :=_afedcdd ._bcggg .ToPdfObject ();_ac .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gdcgd );_afedcdd ._ebdee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gdcgd );_bggdc :=_afedcdd .addObjects (_gdcgd );if _bggdc !=nil {return _bggdc ;};};for _ffdef ,_ggfab :=range _afedcdd ._bfggf {if !_afedcdd .hasObject (_ffdef ){_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_ffdef ,_ffdef ,_ffdef );for _ ,_dffda :=range _ggfab {for _ ,_cgbf :=range _dffda .Keys (){_aedbe :=_dffda .Get (_cgbf );if _aedbe ==_ffdef {_ac .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_dffda .Set (_cgbf ,_da .MakeNull ());break ;};};};};};_afedcdd ._ebdee .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_da .MakeName (_f .Sprintf ("\u0025\u0064\u002e%\u0064",_afedcdd ._ebee ,_afedcdd ._fbdb )));_afedcdd .copyObjects ();if _afedcdd ._dbcgc !=nil {var _eacfa error ;_afedcdd ._fdcfd ,_eacfa =_afedcdd ._dbcgc .Optimize (_afedcdd ._fdcfd );if _eacfa !=nil {return _eacfa ;};_cedffd :=make (map[_da .PdfObject ]struct{},len (_afedcdd ._fdcfd ));for _ ,_fgcgd :=range _afedcdd ._fdcfd {_cedffd [_fgcgd ]=struct{}{};};_afedcdd ._cgag =_cedffd ;};_afedcdd ._fgbeb =_afedcdd ._gefgd ;_afedcdd ._gfbaa =_a .NewWriter (writer );_dbeb :=_afedcdd ._ebee > 1||(_afedcdd ._ebee ==1&&_afedcdd ._fbdb > 4);if _afedcdd ._egbdd !=nil {_dbeb =*_afedcdd ._egbdd ;};_bafdfa :=make (map[_da .PdfObject ]bool );for _ ,_bgdf :=range _afedcdd ._fdcfd {if _bgegc ,_bdgc :=_bgdf .(*_da .PdfObjectStreams );_bdgc {_dbeb =true ;for _ ,_dfegf :=range _bgegc .Elements (){_bafdfa [_dfegf ]=true ;if _cfbaa ,_gfdbf :=_dfegf .(*_da .PdfIndirectObject );_gfdbf {_bafdfa [_cfbaa .PdfObject ]=true ;};};};};if _dbeb &&_afedcdd ._ebee ==1&&_afedcdd ._fbdb < 5{_afedcdd ._fbdb =5;};if _afedcdd ._afcac {_afedcdd .writeString ("\u000a");}else {_afedcdd .writeString (_f .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_afedcdd ._ebee ,_afedcdd ._fbdb ));_afedcdd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_afedcdd .updateObjectNumbers ();_ac .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_afedcdd ._fdcfd ));_afedcdd ._ddcea =make (map[int ]crossReference );_afedcdd ._ddcea [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _afedcdd ._ebabd .ObjectMap !=nil {for _agfd ,_ebfa :=range _afedcdd ._ebabd .ObjectMap {if _agfd ==0{continue ;};if _ebfa .XType ==_da .XrefTypeObjectStream {_ecca :=crossReference {Type :2,ObjectNumber :_ebfa .OsObjNumber ,Index :_ebfa .OsObjIndex };_afedcdd ._ddcea [_agfd ]=_ecca ;};if _ebfa .XType ==_da .XrefTypeTableEntry {_gfggge :=crossReference {Type :1,ObjectNumber :_ebfa .ObjectNumber ,Offset :_ebfa .Offset };_afedcdd ._ddcea [_agfd ]=_gfggge ;};};};for _ ,_abdda :=range _afedcdd ._fdcfd {if _adece :=_bafdfa [_abdda ];_adece {continue ;};_becaf :=int64 (0);switch _fbbe :=_abdda .(type ){case *_da .PdfIndirectObject :_becaf =_fbbe .ObjectNumber ;case *_da .PdfObjectStream :_becaf =_fbbe .ObjectNumber ;case *_da .PdfObjectStreams :_becaf =_fbbe .ObjectNumber ;default:_ac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_abdda );return ErrTypeCheck ;};if _afedcdd ._eafb !=nil &&_abdda !=_afedcdd ._dbgbb {_cgagc :=_afedcdd ._eafb .Encrypt (_abdda ,int64 (_becaf ),0);if _cgagc !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_cgagc );return _cgagc ;};};_afedcdd .writeObject (int (_becaf ),_abdda );};_ebddb :=_afedcdd ._fgbeb ;var _fgac int ;for _adbccc :=range _afedcdd ._ddcea {if _adbccc > _fgac {_fgac =_adbccc ;};};if _dbeb {_dgfcgg :=_fgac +1;_afedcdd ._ddcea [_dgfcgg ]=crossReference {Type :1,ObjectNumber :_dgfcgg ,Offset :_ebddb };_ebbdf :=_bf .NewBuffer (nil );_effgc :=_da .MakeArray ();for _gfgac :=0;_gfgac <=_fgac ;{for ;_gfgac <=_fgac ;_gfgac ++{_defd ,_ddafc :=_afedcdd ._ddcea [_gfgac ];if _ddafc &&(!_afedcdd ._afcac ||_afedcdd ._afcac &&(_defd .Type ==1&&_defd .Offset >=_afedcdd ._fede ||_defd .Type ==0)){break ;};};var _geegg int ;for _geegg =_gfgac +1;_geegg <=_fgac ;_geegg ++{_gbddf ,_fcedf :=_afedcdd ._ddcea [_geegg ];if _fcedf &&(!_afedcdd ._afcac ||_afedcdd ._afcac &&(_gbddf .Type ==1&&_gbddf .Offset > _afedcdd ._fede )){continue ;};break ;};_effgc .Append (_da .MakeInteger (int64 (_gfgac )),_da .MakeInteger (int64 (_geegg -_gfgac )));for _gbffb :=_gfgac ;_gbffb < _geegg ;_gbffb ++{_ebcb :=_afedcdd ._ddcea [_gbffb ];switch _ebcb .Type {case 0:_g .Write (_ebbdf ,_g .BigEndian ,byte (0));_g .Write (_ebbdf ,_g .BigEndian ,uint32 (0));_g .Write (_ebbdf ,_g .BigEndian ,uint16 (0xFFFF));case 1:_g .Write (_ebbdf ,_g .BigEndian ,byte (1));_g .Write (_ebbdf ,_g .BigEndian ,uint32 (_ebcb .Offset ));_g .Write (_ebbdf ,_g .BigEndian ,uint16 (_ebcb .Generation ));case 2:_g .Write (_ebbdf ,_g .BigEndian ,byte (2));_g .Write (_ebbdf ,_g .BigEndian ,uint32 (_ebcb .ObjectNumber ));_g .Write (_ebbdf ,_g .BigEndian ,uint16 (_ebcb .Index ));};};_gfgac =_geegg +1;};_egfda ,_dfdag :=_da .MakeStream (_ebbdf .Bytes (),_da .NewFlateEncoder ());if _dfdag !=nil {return _dfdag ;};_egfda .ObjectNumber =int64 (_dgfcgg );_egfda .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0058\u0052\u0065\u0066"));_egfda .PdfObjectDictionary .Set ("\u0057",_da .MakeArray (_da .MakeInteger (1),_da .MakeInteger (4),_da .MakeInteger (2)));_egfda .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_effgc );_egfda .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_da .MakeInteger (int64 (_dgfcgg +1)));_egfda .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_afedcdd ._bggda );_egfda .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_afedcdd ._eage );if _afedcdd ._afcac &&_afedcdd ._eacgf > 0{_egfda .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_da .MakeInteger (_afedcdd ._eacgf ));};if _afedcdd ._eafb !=nil {_egfda .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_afedcdd ._dbgbb );_egfda .Set ("\u0049\u0044",_afedcdd ._bbacdg );_ac .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_afedcdd ._bbacdg );};_afedcdd .writeObject (int (_egfda .ObjectNumber ),_egfda );}else {_afedcdd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _eeccc :=0;_eeccc <=_fgac ;{for ;_eeccc <=_fgac ;_eeccc ++{_cccd ,_edfdg :=_afedcdd ._ddcea [_eeccc ];if _edfdg &&(!_afedcdd ._afcac ||_afedcdd ._afcac &&(_cccd .Type ==1&&_cccd .Offset >=_afedcdd ._fede ||_cccd .Type ==0)){break ;};};var _dgfaf int ;for _dgfaf =_eeccc +1;_dgfaf <=_fgac ;_dgfaf ++{_gbdcb ,_cggc :=_afedcdd ._ddcea [_dgfaf ];if _cggc &&(!_afedcdd ._afcac ||_afedcdd ._afcac &&(_gbdcb .Type ==1&&_gbdcb .Offset > _afedcdd ._fede )){continue ;};break ;};_ddfa :=_f .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_eeccc ,_dgfaf -_eeccc );_afedcdd .writeString (_ddfa );for _efcgd :=_eeccc ;_efcgd < _dgfaf ;_efcgd ++{_adfba :=_afedcdd ._ddcea [_efcgd ];switch _adfba .Type {case 0:_ddfa =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_afedcdd .writeString (_ddfa );case 1:_ddfa =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_adfba .Offset ,0);_afedcdd .writeString (_ddfa );};};_eeccc =_dgfaf +1;};_fbdae :=_da .MakeDict ();_fbdae .Set ("\u0049\u006e\u0066\u006f",_afedcdd ._bggda );_fbdae .Set ("\u0052\u006f\u006f\u0074",_afedcdd ._eage );_fbdae .Set ("\u0053\u0069\u007a\u0065",_da .MakeInteger (int64 (_fgac +1)));if _afedcdd ._afcac &&_afedcdd ._eacgf > 0{_fbdae .Set ("\u0050\u0072\u0065\u0076",_da .MakeInteger (_afedcdd ._eacgf ));};if _afedcdd ._eafb !=nil {_fbdae .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_afedcdd ._dbgbb );_fbdae .Set ("\u0049\u0044",_afedcdd ._bbacdg );_ac .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_afedcdd ._bbacdg );};_afedcdd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_afedcdd .writeString (_fbdae .WriteString ());_afedcdd .writeString ("\u000a");};_addgd :=_f .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ebddb );_afedcdd .writeString (_addgd );_afedcdd .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _afedcdd ._dabfb ==nil {_afedcdd ._dabfb =_afedcdd ._gfbaa .Flush ();};return _afedcdd ._dabfb ;};

// SetDecode sets the decode image float slice.
func (_abgf *Image )SetDecode (decode []float64 ){_abgf ._dfff =decode };

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_bbec DefaultImageHandler )NewGrayImageFromGoImage (goimg _cdf .Image )(*Image ,error ){_bagfa :=goimg .Bounds ();_gace :=&Image {Width :int64 (_bagfa .Dx ()),Height :int64 (_bagfa .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _bbgg :=goimg .(type ){case *_cdf .Gray :if len (_bbgg .Pix )!=_bagfa .Dx ()*_bagfa .Dy (){_febb ,_feaebe :=_eff .GrayConverter .Convert (goimg );if _feaebe !=nil {return nil ,_feaebe ;};_gace .Data =_febb .Pix ();}else {_gace .Data =_bbgg .Pix ;};case *_cdf .Gray16 :_gace .BitsPerComponent =16;if len (_bbgg .Pix )!=_bagfa .Dx ()*_bagfa .Dy ()*2{_abgd ,_fgbe :=_eff .Gray16Converter .Convert (goimg );if _fgbe !=nil {return nil ,_fgbe ;};_gace .Data =_abgd .Pix ();}else {_gace .Data =_bbgg .Pix ;};default:_abffc ,_cebgb :=_eff .GrayConverter .Convert (goimg );if _cebgb !=nil {return nil ,_cebgb ;};_gace .Data =_abffc .Pix ();};return _gace ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_fdabb :=&XObjectImage {};_aeccd :=&_da .PdfObjectStream {};_aeccd .PdfObjectDictionary =_da .MakeDict ();_fdabb ._cdgc =_aeccd ;return _fdabb ;};func (_fae *PdfReader )newPdfActionMovieFromDict (_bfe *_da .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_bfe .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_bfe .Get ("\u0054"),Operation :_bfe .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_abbbc *PdfShadingPattern )ToPdfObject ()_da .PdfObject {_abbbc .PdfPattern .ToPdfObject ();_cgeef :=_abbbc .getDict ();if _abbbc .Shading !=nil {_cgeef .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_abbbc .Shading .ToPdfObject ());};if _abbbc .Matrix !=nil {_cgeef .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_abbbc .Matrix );};if _abbbc .ExtGState !=nil {_cgeef .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_abbbc .ExtGState );};return _abbbc ._geggda ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_feada *PdfPage )AddExtGState (name _da .PdfObjectName ,egs *_da .PdfObjectDictionary )error {if _feada .Resources ==nil {_feada .Resources =NewPdfPageResources ();};if _feada .Resources .ExtGState ==nil {_feada .Resources .ExtGState =_da .MakeDict ();};_ffccf ,_gaadc :=_da .TraceToDirectObject (_feada .Resources .ExtGState ).(*_da .PdfObjectDictionary );if !_gaadc {_ac .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_da .TraceToDirectObject (_feada .Resources .ExtGState ));return _ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffccf .Set (name ,egs );return nil ;};func (_dabdg *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_cagbec *PdfPageResources )HasFontByName (keyName _da .PdfObjectName )bool {_ ,_ceaa :=_cagbec .GetFontByName (keyName );return _ceaa ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_aabec *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_dgcg *PdfReader )newPdfActionURIFromDict (_dbc *_da .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_dbc .Get ("\u0055\u0052\u0049"),IsMap :_dbc .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// Encoder returns the font's text encoder.
func (_cgcda pdfCIDFontType0 )Encoder ()_cee .TextEncoder {return _cgcda ._bcbb };

// ColorFromFloats returns a new PdfColor based on input color components.
func (_aeggf *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_aeggf .GetNumComponents (){return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgbc ,_ffff :=_aeggf .TintTransform .Evaluate (vals );if _ffff !=nil {return nil ,_ffff ;};_ccbg ,_ffff :=_aeggf .AlternateSpace .ColorFromFloats (_dgbc );if _ffff !=nil {return nil ,_ffff ;};return _ccbg ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_fccc *PdfPageResources )SetXObjectFormByName (keyName _da .PdfObjectName ,xform *XObjectForm )error {_edegc :=xform .ToPdfObject ().(*_da .PdfObjectStream );_afaec :=_fccc .SetXObjectByName (keyName ,_edegc );return _afaec ;};func _eccc (_cegae []byte )bool {if len (_cegae )< 4{return true ;};for _ddaf :=range _cegae [:4]{_dbffa :=rune (_ddaf );if !_fg .Is (_fg .ASCII_Hex_Digit ,_dbffa )&&!_fg .IsSpace (_dbffa ){return true ;};};return false ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_bagdbc *PdfWriter )AddPage (page *PdfPage )error {_ccaad (page );_eefaa :=page .ToPdfObject ();_ac .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_ac .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_eefaa );_edaea ,_accfc :=_da .GetIndirect (_eefaa );if !_accfc {return _ag .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_ac .Log .Trace ("\u0025\u0073",_edaea );_ac .Log .Trace ("\u0025\u0073",_edaea .PdfObject );_eeeca ,_accfc :=_da .GetDict (_edaea .PdfObject );if !_accfc {return _ag .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dfcec ,_accfc :=_da .GetName (_eeeca .Get ("\u0054\u0079\u0070\u0065"));if !_accfc {return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_eeeca .Get ("\u0054\u0079\u0070\u0065"));};if _dfcec .String ()!="\u0050\u0061\u0067\u0065"{return _ag .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_addd :=[]_da .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_cebdgf ,_agfba :=_da .GetIndirect (_eeeca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ac .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_eeeca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_agfba );for _agfba {_ac .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cebdgf );_egfc ,_dfabg :=_da .GetDict (_cebdgf .PdfObject );if !_dfabg {return _ag .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_adgcc :=range _addd {_ac .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adgcc );if _eeeca .Get (_adgcc )!=nil {_ac .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _dafea :=_egfc .Get (_adgcc );_dafea !=nil {_ac .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adgcc );_eeeca .Set (_adgcc ,_dafea );};};_cebdgf ,_agfba =_da .GetIndirect (_egfc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ac .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_egfc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ac .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_eeeca .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bagdbc ._egaee );_edaea .PdfObject =_eeeca ;_gadce ,_accfc :=_da .GetDict (_bagdbc ._egaee .PdfObject );if !_accfc {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_acfffa ,_accfc :=_da .GetArray (_gadce .Get ("\u004b\u0069\u0064\u0073"));if !_accfc {return _ag .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_acfffa .Append (_edaea );_bagdbc ._dgffg [_eeeca ]=struct{}{};_eggbe ,_accfc :=_da .GetInt (_gadce .Get ("\u0043\u006f\u0075n\u0074"));if !_accfc {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_eggbe =*_eggbe +1;_bagdbc .addObject (_edaea );_beeb :=_bagdbc .addObjects (_eeeca );if _beeb !=nil {return _beeb ;};return nil ;};func _cfda (_feba _da .PdfObject )(*fontFile ,error ){_ac .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_feba );_aced :=&fontFile {};_feba =_da .TraceToDirectObject (_feba );_aefe ,_cfabe :=_feba .(*_da .PdfObjectStream );if !_cfabe {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_feba );return nil ,_da .ErrTypeError ;};_bgae :=_aefe .PdfObjectDictionary ;_eeaa ,_ggdf :=_da .DecodeStream (_aefe );if _ggdf !=nil {return nil ,_ggdf ;};_dcgd ,_cfabe :=_da .GetNameVal (_bgae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cfabe {_aced ._cfdf =_dcgd ;if _dcgd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ac .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_dafg ,_ :=_da .GetIntVal (_bgae .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_debd ,_ :=_da .GetIntVal (_bgae .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dafg > len (_eeaa ){_dafg =len (_eeaa );};if _dafg +_debd > len (_eeaa ){_debd =len (_eeaa )-_dafg ;};_cebdgd :=_eeaa [:_dafg ];var _ccgb []byte ;if _debd > 0{_ccgb =_eeaa [_dafg :_dafg +_debd ];};if _dafg > 0&&_debd > 0{_afcadc :=_aced .loadFromSegments (_cebdgd ,_ccgb );if _afcadc !=nil {return nil ,_afcadc ;};};return _aced ,nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_gfcbb *PdfPageResources )SetFontByName (keyName _da .PdfObjectName ,obj _da .PdfObject )error {if _gfcbb .Font ==nil {_gfcbb .Font =_da .MakeDict ();};_cece ,_bgfdf :=_da .TraceToDirectObject (_gfcbb .Font ).(*_da .PdfObjectDictionary );if !_bgfdf {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_da .TraceToDirectObject (_gfcbb .Font ));return _da .ErrTypeError ;};_cece .Set (keyName ,obj );return nil ;};var _bcbcag =false ;func (_dbad *PdfPage )getParentResources ()(*PdfPageResources ,error ){_cgcca :=_dbad .Parent ;for _cgcca !=nil {_feea ,_abge :=_da .GetDict (_cgcca );if !_abge {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _cggff :=_feea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cggff !=nil {_gdfgb ,_ebfg :=_da .GetDict (_cggff );if !_ebfg {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bcdb ,_cbffd :=NewPdfPageResourcesFromDict (_gdfgb );if _cbffd !=nil {return nil ,_cbffd ;};return _bcdb ,nil ;};_cgcca =_feea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gfff :=PdfColorCalGray (grayVal );return &_gfff ;};

// IsColored specifies if the pattern is colored.
func (_cedff *PdfTilingPattern )IsColored ()bool {if _cedff .PaintType !=nil &&*_cedff .PaintType ==1{return true ;};return false ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_daga :=PdfWriter {};_daga ._cgag =map[_da .PdfObject ]struct{}{};_daga ._fdcfd =[]_da .PdfObject {};_daga ._bfggf =map[_da .PdfObject ][]*_da .PdfObjectDictionary {};_daga ._dcadd =map[_da .PdfObject ]struct{}{};_daga ._ebee =1;_daga ._fbdb =3;_eeee :=_da .MakeDict ();_gdff :=[]struct{_gcabf _da .PdfObjectName ;_cbeeb string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_eaada ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_agef ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_gaadd ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_beggg ()},{"\u0054\u0069\u0074l\u0065",_fagfc ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fegaa ()}};for _ ,_cecbd :=range _gdff {if _cecbd ._cbeeb !=""{_eeee .Set (_cecbd ._gcabf ,_da .MakeString (_cecbd ._cbeeb ));};};if _edgbe :=_fgaee ();!_edgbe .IsZero (){if _cecf ,_bbebeb :=NewPdfDateFromTime (_edgbe );_bbebeb ==nil {_eeee .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cecf .ToPdfObject ());};};if _bgbg :=_bgdbb ();!_bgbg .IsZero (){if _ddgfe ,_fegb :=NewPdfDateFromTime (_bgbg );_fegb ==nil {_eeee .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ddgfe .ToPdfObject ());};};_fgaff :=_da .PdfIndirectObject {};_fgaff .PdfObject =_eeee ;_daga ._bggda =&_fgaff ;_daga .addObject (&_fgaff );_fdfcg :=_da .PdfIndirectObject {};_dfea :=_da .MakeDict ();_dfea .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fdfcg .PdfObject =_dfea ;_daga ._eage =&_fdfcg ;_daga .addObject (_daga ._eage );_eagec :=_da .PdfIndirectObject {};_gfcac :=_da .MakeDict ();_gfcac .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050\u0061\u0067e\u0073"));_dedf :=_da .PdfObjectArray {};_gfcac .Set ("\u004b\u0069\u0064\u0073",&_dedf );_gfcac .Set ("\u0043\u006f\u0075n\u0074",_da .MakeInteger (0));_eagec .PdfObject =_gfcac ;_daga ._egaee =&_eagec ;_daga ._dgffg =map[_da .PdfObject ]struct{}{};_daga .addObject (_daga ._egaee );_dfea .Set ("\u0050\u0061\u0067e\u0073",&_eagec );_daga ._ebdee =_dfea ;_ac .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fdfcg );return _daga ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_agbc *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_efbb ,_ ,_ffge :=_agbc .CharcodesToUnicodeWithStats (_agbc .BytesToCharcodes (data ));_fcgb :=_cee .ExpandLigatures (_efbb );return _fcgb ,_ge .RuneCountInString (_fcgb ),_ffge ;};func _beec (_aefb *_da .PdfObjectStream )(*PdfFunctionType0 ,error ){_dfbb :=&PdfFunctionType0 {};_dfbb ._geaa =_aefb ;_afedb :=_aefb .PdfObjectDictionary ;_afedc ,_cbaf :=_da .TraceToDirectObject (_afedb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_cbaf {_ac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _afedc .Len ()< 0||_afedc .Len ()%2!=0{_ac .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dfbb .NumInputs =_afedc .Len ()/2;_bgcdf ,_cdbfa :=_afedc .ToFloat64Array ();if _cdbfa !=nil {return nil ,_cdbfa ;};_dfbb .Domain =_bgcdf ;_afedc ,_cbaf =_da .TraceToDirectObject (_afedb .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if !_cbaf {_ac .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _afedc .Len ()< 0||_afedc .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dfbb .NumOutputs =_afedc .Len ()/2;_dfded ,_cdbfa :=_afedc .ToFloat64Array ();if _cdbfa !=nil {return nil ,_cdbfa ;};_dfbb .Range =_dfded ;_afedc ,_cbaf =_da .TraceToDirectObject (_afedb .Get ("\u0053\u0069\u007a\u0065")).(*_da .PdfObjectArray );if !_cbaf {_ac .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fecdd ,_cdbfa :=_afedc .ToIntegerArray ();if _cdbfa !=nil {return nil ,_cdbfa ;};if len (_fecdd )!=_dfbb .NumInputs {_ac .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfbb .Size =_fecdd ;_gdagg ,_cbaf :=_da .TraceToDirectObject (_afedb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_da .PdfObjectInteger );if !_cbaf {_ac .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_gdagg !=1&&*_gdagg !=2&&*_gdagg !=4&&*_gdagg !=8&&*_gdagg !=12&&*_gdagg !=16&&*_gdagg !=24&&*_gdagg !=32{_ac .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_gdagg );return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfbb .BitsPerSample =int (*_gdagg );_dfbb .Order =1;_adca ,_cbaf :=_da .TraceToDirectObject (_afedb .Get ("\u004f\u0072\u0064e\u0072")).(*_da .PdfObjectInteger );if _cbaf {if *_adca !=1&&*_adca !=3{_ac .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_adca );return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfbb .Order =int (*_adca );};_afedc ,_cbaf =_da .TraceToDirectObject (_afedb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_da .PdfObjectArray );if _cbaf {_fgecc ,_ebcgdg :=_afedc .ToFloat64Array ();if _ebcgdg !=nil {return nil ,_ebcgdg ;};_dfbb .Encode =_fgecc ;};_afedc ,_cbaf =_da .TraceToDirectObject (_afedb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_da .PdfObjectArray );if _cbaf {_cfcbd ,_gefb :=_afedc .ToFloat64Array ();if _gefb !=nil {return nil ,_gefb ;};_dfbb .Decode =_cfcbd ;};_aegec ,_cdbfa :=_da .DecodeStream (_aefb );if _cdbfa !=nil {return nil ,_cdbfa ;};_dfbb ._eaafa =_aegec ;return _dfbb ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _da .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dabea *PdfColorspaceLab )ToPdfObject ()_da .PdfObject {_gaaad :=_da .MakeArray ();_gaaad .Append (_da .MakeName ("\u004c\u0061\u0062"));_aggf :=_da .MakeDict ();if _dabea .WhitePoint !=nil {_cgf :=_da .MakeArray (_da .MakeFloat (_dabea .WhitePoint [0]),_da .MakeFloat (_dabea .WhitePoint [1]),_da .MakeFloat (_dabea .WhitePoint [2]));_aggf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cgf );}else {_ac .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _dabea .BlackPoint !=nil {_deeb :=_da .MakeArray (_da .MakeFloat (_dabea .BlackPoint [0]),_da .MakeFloat (_dabea .BlackPoint [1]),_da .MakeFloat (_dabea .BlackPoint [2]));_aggf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_deeb );};if _dabea .Range !=nil {_egeb :=_da .MakeArray (_da .MakeFloat (_dabea .Range [0]),_da .MakeFloat (_dabea .Range [1]),_da .MakeFloat (_dabea .Range [2]),_da .MakeFloat (_dabea .Range [3]));_aggf .Set ("\u0052\u0061\u006eg\u0065",_egeb );};_gaaad .Append (_aggf );if _dabea ._abcg !=nil {_dabea ._abcg .PdfObject =_gaaad ;return _dabea ._abcg ;};return _gaaad ;};func (_ggfa *PdfReader )traverseObjectData (_eebcg _da .PdfObject )error {return _da .ResolveReferencesDeep (_eebcg ,_ggfa ._affge );};func _fbfag (_bbcf ,_gagfb string )string {if _gd .Contains (_bbcf ,"\u002b"){_agfec :=_gd .Split (_bbcf ,"\u002b");if len (_agfec )==2{_bbcf =_agfec [1];};};return _gagfb +"\u002b"+_bbcf ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_da .PdfObjectInteger ;TilingType *_da .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_da .PdfObjectFloat ;YStep *_da .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_da .PdfObjectArray ;};func (_abg *PdfReader )newPdfAnnotationMovieFromDict (_dbegg *_da .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cae :=PdfAnnotationMovie {};_cae .T =_dbegg .Get ("\u0054");_cae .Movie =_dbegg .Get ("\u004d\u006f\u0076i\u0065");_cae .A =_dbegg .Get ("\u0041");return &_cae ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_edddd *PdfOutlineItem )GetContainingPdfObject ()_da .PdfObject {return _edddd ._fbae };

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bebb DefaultImageHandler )Read (reader _gg .Reader )(*Image ,error ){_ffdf ,_ ,_ddeef :=_cdf .Decode (reader );if _ddeef !=nil {_ac .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ddeef );return nil ,_ddeef ;};return _bebb .NewImageFromGoImage (_ffdf );};func (_fcec *PdfReader )newPdfAnnotationRichMediaFromDict (_dgg *_da .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_acce :=&PdfAnnotationRichMedia {};_acce .RichMediaSettings =_dgg .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_acce .RichMediaContent =_dgg .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _acce ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_acg :=NewPdfAction ();_cac :=&PdfActionURI {};_cac .PdfAction =_acg ;_acg .SetContext (_cac );return _cac ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_caegf *_da .PdfIndirectObject ;};

// ReplacePage replaces the original page to a new page.
func (_cbbda *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_bbc :=pageNum -1;for _caeg :=range _cbbda ._cadf {if _caeg ==_bbc {_gdd :=page .Duplicate ();_ccaad (_gdd );_cbbda ._cadf [_caeg ]=_gdd ;};};};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_eaadf *PdfReader )GetObjectNums ()[]int {return _eaadf ._bcgcg .GetObjectNums ()};func _bbdf ()*modelManager {_fbbg :=modelManager {};_fbbg ._eefbe =map[PdfModel ]_da .PdfObject {};_fbbg ._cfcc =map[_da .PdfObject ]PdfModel {};return &_fbbg ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_fdb :=NewPdfAnnotation ();_cde :=&PdfAnnotationSound {};_cde .PdfAnnotation =_fdb ;_cde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdb .SetContext (_cde );return _cde ;};

// HasExtGState checks if ExtGState name is available.
func (_dcae *PdfPage )HasExtGState (name _da .PdfObjectName )bool {if _dcae .Resources ==nil {return false ;};if _dcae .Resources .ExtGState ==nil {return false ;};_bgef ,_cbdd :=_da .TraceToDirectObject (_dcae .Resources .ExtGState ).(*_da .PdfObjectDictionary );if !_cbdd {_ac .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_da .TraceToDirectObject (_dcae .Resources .ExtGState ));return false ;};_cggb :=_bgef .Get (name );_baed :=_cggb !=nil ;return _baed ;};type pdfFont interface{_dg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_da .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func _egcde (_cbabd _da .PdfObject ,_ccagf *PdfReader )(*OutlineDest ,error ){_cacf ,_gcfbb :=_da .GetArray (_cbabd );if !_gcfbb {return nil ,_ag .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_ddbgc :=_cacf .Len ();if _ddbgc < 2{return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ddbgc );};_aebad :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_debaef :=_cacf .Get (0);if _cafba ,_ecgef :=_da .GetIndirect (_debaef );_ecgef {if _ ,_fcdf ,_gcde :=_ccagf .PageFromIndirectObject (_cafba );_gcde ==nil {_aebad .Page =int64 (_fcdf -1);}else {_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_cafba );};_aebad .PageObj =_cafba ;}else if _ggccb ,_ecbbe :=_da .GetIntVal (_debaef );_ecbbe {if _ggccb >=0&&_ggccb < len (_ccagf .PageList ){_aebad .PageObj =_ccagf .PageList [_ggccb ].GetPageAsIndirectObject ();}else {_ac .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ggccb );};_aebad .Page =int64 (_ggccb );}else {return nil ,_f .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_debaef );};_cabb ,_gcfbb :=_da .GetNameVal (_cacf .Get (1));if !_gcfbb {_ac .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cacf .Get (1));return _aebad ,nil ;};switch _cabb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ddbgc > 2{_aebad .Y ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_cacf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ddbgc > 2{_aebad .X ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_cacf .Get (2)));};case "\u0058\u0059\u005a":if _ddbgc > 4{_aebad .X ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_cacf .Get (2)));_aebad .Y ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_cacf .Get (3)));_aebad .Zoom ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_cacf .Get (4)));};default:_cabb ="\u0046\u0069\u0074";};_aebad .Mode =_cabb ;return _aebad ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// GetContainingPdfObject implements interface PdfModel.
func (_agccb *PdfFilespec )GetContainingPdfObject ()_da .PdfObject {return _agccb ._faff };

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gbga :=&PdfFieldSignature {};_gbga .PdfField =NewPdfField ();_gbga .PdfField .SetContext (_gbga );_gbga .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gbga .PdfAnnotationWidget .SetContext (_gbga );_gbga .PdfAnnotationWidget ._cfd =_gbga .PdfField ._cfed ;_gbga .T =_da .MakeString ("");_gbga .F =_da .MakeInteger (132);_gbga .V =signature ;return _gbga ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_bcgab *PdfPageResources )SetXObjectByName (keyName _da .PdfObjectName ,stream *_da .PdfObjectStream )error {if _bcgab .XObject ==nil {_bcgab .XObject =_da .MakeDict ();};_caae :=_da .TraceToDirectObject (_bcgab .XObject );_dgbeb ,_bbdfe :=_caae .(*_da .PdfObjectDictionary );if !_bbdfe {_ac .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_bcgab .XObject ,_caae );return _ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgbeb .Set (keyName ,stream );return nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fgb _da .PdfObject ;};func _fbea (_ddbbe _da .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_egabf :=NewPdfColorspaceSpecialIndexed ();if _dbdaa ,_ebedd :=_ddbbe .(*_da .PdfIndirectObject );_ebedd {_egabf ._ccgc =_dbdaa ;};_ddbbe =_da .TraceToDirectObject (_ddbbe );_efea ,_agbg :=_ddbbe .(*_da .PdfObjectArray );if !_agbg {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _efea .Len ()!=4{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ddbbe =_efea .Get (0);_cfcac ,_agbg :=_ddbbe .(*_da .PdfObjectName );if !_agbg {return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_cfcac !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_ddbbe =_efea .Get (1);_ebcgd ,_fefg :=DetermineColorspaceNameFromPdfObject (_ddbbe );if _ebcgd =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_ebcgd =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ac .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_ebcgd );return nil ,_dfcf ;};_gbc ,_fefg :=NewPdfColorspaceFromPdfObject (_ddbbe );if _fefg !=nil {return nil ,_fefg ;};_egabf .Base =_gbc ;_ddbbe =_efea .Get (2);_abde ,_fefg :=_da .GetNumberAsInt64 (_ddbbe );if _fefg !=nil {return nil ,_fefg ;};if _abde > 255{return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_egabf .HiVal =int (_abde );_ddbbe =_efea .Get (3);_egabf .Lookup =_ddbbe ;_ddbbe =_da .TraceToDirectObject (_ddbbe );var _daeba []byte ;if _afee ,_edfa :=_ddbbe .(*_da .PdfObjectString );_edfa {_daeba =_afee .Bytes ();_ac .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_daeba );}else if _ffab ,_dgbag :=_ddbbe .(*_da .PdfObjectStream );_dgbag {_ac .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_ddbbe .String ());_ac .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_ffab .Stream ),_ffab .Stream );_gbee ,_afaa :=_da .DecodeStream (_ffab );if _afaa !=nil {return nil ,_afaa ;};_ac .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_gbee ),_gbee );_daeba =_gbee ;}else {_ac .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ddbbe );return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_daeba )< _egabf .Base .GetNumComponents ()*(_egabf .HiVal +1){_ac .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_ac .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_daeba ),_egabf .Base .GetNumComponents (),_egabf .HiVal );}else {_daeba =_daeba [:_egabf .Base .GetNumComponents ()*(_egabf .HiVal +1)];};_egabf ._bacc =_daeba ;return _egabf ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_cgece *modelManager )GetPrimitiveFromModel (model PdfModel )_da .PdfObject {_faga ,_fcdd :=_cgece ._eefbe [model ];if !_fcdd {return nil ;};return _faga ;};

// ToPdfObject implements interface PdfModel.
func (_aade *PdfAnnotationFileAttachment )ToPdfObject ()_da .PdfObject {_aade .PdfAnnotation .ToPdfObject ();_gcee :=_aade ._cfd ;_cefff :=_gcee .PdfObject .(*_da .PdfObjectDictionary );_aade .PdfAnnotationMarkup .appendToPdfDictionary (_cefff );_cefff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_cefff .SetIfNotNil ("\u0046\u0053",_aade .FS );_cefff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aade .Name );return _gcee ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_afbc DefaultImageHandler )NewImageFromGoImage (goimg _cdf .Image )(*Image ,error ){_egafe ,_cgbd :=_eff .FromGoImage (goimg );if _cgbd !=nil {return nil ,_cgbd ;};_dfdb :=_abag (_egafe .Base ());return &_dfdb ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cb :=&PdfAction {};_cb ._cf =_da .MakeIndirectObject (_da .MakeDict ());return _cb ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fcda *PdfPageResources )HasColorspaceByName (keyName _da .PdfObjectName )bool {_edcag ,_abbgee :=_fcda .GetColorspaces ();if _abbgee !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_abbgee );return false ;};if _edcag ==nil {return false ;};_ ,_eedd :=_edcag .Colorspaces [string (keyName )];return _eedd ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _da .StreamEncoder ;Intent _da .PdfObject ;ImageMask _da .PdfObject ;Mask _da .PdfObject ;Matte _da .PdfObject ;Decode _da .PdfObject ;Interpolate _da .PdfObject ;Alternatives _da .PdfObject ;SMask _da .PdfObject ;SMaskInData _da .PdfObject ;Name _da .PdfObject ;StructParent _da .PdfObject ;ID _da .PdfObject ;OPI _da .PdfObject ;Metadata _da .PdfObject ;OC _da .PdfObject ;Stream []byte ;_cdgc *_da .PdfObjectStream ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_gcbd *PdfColorspaceICCBased )ToPdfObject ()_da .PdfObject {_bace :=&_da .PdfObjectArray {};_bace .Append (_da .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ffec *_da .PdfObjectStream ;if _gcbd ._cdbf !=nil {_ffec =_gcbd ._cdbf ;}else {_ffec =&_da .PdfObjectStream {};};_dfagb :=_da .MakeDict ();_dfagb .Set ("\u004e",_da .MakeInteger (int64 (_gcbd .N )));if _gcbd .Alternate !=nil {_dfagb .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_gcbd .Alternate .ToPdfObject ());};if _gcbd .Metadata !=nil {_dfagb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gcbd .Metadata );};if _gcbd .Range !=nil {var _dcede []_da .PdfObject ;for _ ,_aeeg :=range _gcbd .Range {_dcede =append (_dcede ,_da .MakeFloat (_aeeg ));};_dfagb .Set ("\u0052\u0061\u006eg\u0065",_da .MakeArray (_dcede ...));};_dfagb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_gcbd .Data ))));_ffec .Stream =_gcbd .Data ;_ffec .PdfObjectDictionary =_dfagb ;_bace .Append (_ffec );if _gcbd ._cdbg !=nil {_gcbd ._cdbg .PdfObject =_bace ;return _gcbd ._cdbg ;};return _bace ;};

// ToPdfObject implements interface PdfModel.
func (_gdbbb *PdfAnnotationLink )ToPdfObject ()_da .PdfObject {_gdbbb .PdfAnnotation .ToPdfObject ();_abcc :=_gdbbb ._cfd ;_cddf :=_abcc .PdfObject .(*_da .PdfObjectDictionary );_cddf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u004c\u0069\u006e\u006b"));if _gdbbb ._aega !=nil &&_gdbbb ._aega ._ae !=nil {_cddf .Set ("\u0041",_gdbbb ._aega ._ae .ToPdfObject ());}else if _gdbbb .A !=nil {_cddf .Set ("\u0041",_gdbbb .A );};_cddf .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gdbbb .Dest );_cddf .SetIfNotNil ("\u0048",_gdbbb .H );_cddf .SetIfNotNil ("\u0050\u0041",_gdbbb .PA );_cddf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdbbb .QuadPoints );_cddf .SetIfNotNil ("\u0042\u0053",_gdbbb .BS );return _abcc ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gg .ReadSeeker )(*PdfReader ,error ){_bbace :=&PdfReader {_cgbad :rs ,_affge :map[_da .PdfObject ]struct{}{},_gafba :_bbdf (),_aceeb :false };_efbgb ,_ebebf :=_da .NewParser (rs );if _ebebf !=nil {return nil ,_ebebf ;};_bbace ._bcgcg =_efbgb ;_eddcb ,_ebebf :=_bbace .IsEncrypted ();if _ebebf !=nil {return nil ,_ebebf ;};if !_eddcb {_ebebf =_bbace .loadStructure ();if _ebebf !=nil {return nil ,_ebebf ;};};return _bbace ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ddea *PdfReader )GetIndirectObjectByNumber (number int )(_da .PdfObject ,error ){_adfe ,_fgdgd :=_ddea ._bcgcg .LookupByNumber (number );return _adfe ,_fgdgd ;};func (_ffggb *pdfFontSimple )addEncoding ()error {var (_ecgdb string ;_ecadf map[_cee .CharCode ]_cee .GlyphName ;_ffcfb _cee .SimpleEncoder ;);if _ffggb .Encoder ()!=nil {_fbaa ,_ababc :=_ffggb .Encoder ().(_cee .SimpleEncoder );if _ababc &&_fbaa !=nil {_ecgdb =_fbaa .BaseName ();};};if _ffggb .Encoding !=nil {_bfeee ,_fcbgg ,_fffgd :=_ffggb .getFontEncoding ();if _fffgd !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffggb ._dabeae ,_ffggb ._bffg ,_ffggb .Encoding ,_ffggb .Encoding ,_fffgd );return _fffgd ;};if _bfeee !=""{_ecgdb =_bfeee ;};_ffcfb ,_fffgd =_cee .NewSimpleTextEncoder (_ecgdb ,_fcbgg );if _fffgd !=nil {return _fffgd ;};};if _ffcfb ==nil {_edef :=_ffggb ._gcgf ;if _edef !=nil {switch _ffggb ._bffg {case "\u0054\u0079\u0070e\u0031":if _edef .fontFile !=nil &&_edef .fontFile ._gabgg !=nil {_ac .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_ffcfb =_edef .fontFile ._gabgg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _edef ._ggab !=nil {_ac .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gbea ,_gddf :=_edef ._ggab .MakeEncoder ();if _gddf ==nil {_ffcfb =_gbea ;};};};};};if _ffcfb !=nil {if _ecadf !=nil {_ac .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecadf ,_ffggb .baseFields ());_ffcfb =_cee .ApplyDifferences (_ffcfb ,_ecadf );};_ffggb .SetEncoder (_ffcfb );};return nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_abffg *PdfColorspaceCalRGB )ToPdfObject ()_da .PdfObject {_dadeg :=&_da .PdfObjectArray {};_dadeg .Append (_da .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cabf :=_da .MakeDict ();if _abffg .WhitePoint !=nil {_bbced :=_da .MakeArray (_da .MakeFloat (_abffg .WhitePoint [0]),_da .MakeFloat (_abffg .WhitePoint [1]),_da .MakeFloat (_abffg .WhitePoint [2]));_cabf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bbced );}else {_ac .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _abffg .BlackPoint !=nil {_aafd :=_da .MakeArray (_da .MakeFloat (_abffg .BlackPoint [0]),_da .MakeFloat (_abffg .BlackPoint [1]),_da .MakeFloat (_abffg .BlackPoint [2]));_cabf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aafd );};if _abffg .Gamma !=nil {_fbfd :=_da .MakeArray (_da .MakeFloat (_abffg .Gamma [0]),_da .MakeFloat (_abffg .Gamma [1]),_da .MakeFloat (_abffg .Gamma [2]));_cabf .Set ("\u0047\u0061\u006dm\u0061",_fbfd );};if _abffg .Matrix !=nil {_cegbb :=_da .MakeArray (_da .MakeFloat (_abffg .Matrix [0]),_da .MakeFloat (_abffg .Matrix [1]),_da .MakeFloat (_abffg .Matrix [2]),_da .MakeFloat (_abffg .Matrix [3]),_da .MakeFloat (_abffg .Matrix [4]),_da .MakeFloat (_abffg .Matrix [5]),_da .MakeFloat (_abffg .Matrix [6]),_da .MakeFloat (_abffg .Matrix [7]),_da .MakeFloat (_abffg .Matrix [8]));_cabf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cegbb );};_dadeg .Append (_cabf );if _abffg ._dfcaf !=nil {_abffg ._dfcaf .PdfObject =_dadeg ;return _abffg ._dfcaf ;};return _dadeg ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _da .PdfObject ;NewWindow _da .PdfObject ;};func (_cfab *PdfReader )loadAction (_fcc _da .PdfObject )(*PdfAction ,error ){if _cdfe ,_dbgf :=_da .GetIndirect (_fcc );_dbgf {_fac ,_fgggd :=_cfab .newPdfActionFromIndirectObject (_cdfe );if _fgggd !=nil {return nil ,_fgggd ;};return _fac ,nil ;}else if !_da .IsNullObject (_fcc ){return nil ,_ag .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_da .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ccbb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgfa ,_dfgb :=_da .GetNumbersAsFloat (objects );if _dfgb !=nil {return nil ,_dfgb ;};return _ccbb .ColorFromFloats (_bgfa );};func (_ccf *PdfReader )newPdfActionSubmitFormFromDict (_cbfd *_da .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_cdg ,_cbb :=_caff (_cbfd .Get ("\u0046"));if _cbb !=nil {return nil ,_cbb ;};return &PdfActionSubmitForm {F :_cdg ,Fields :_cbfd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cbfd .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};func (_ggfc *PdfFunctionType0 )processSamples ()error {_gedff :=_df .ResampleBytes (_ggfc ._eaafa ,_ggfc .BitsPerSample );_ggfc ._cbcb =_gedff ;return nil ;};

// SetDate sets the `M` field of the signature.
func (_ddbd *PdfSignature )SetDate (date _ef .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ddbd .M =_da .MakeString (date .Format (format ));};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject implements interface PdfModel.
func (_dge *PdfActionThread )ToPdfObject ()_da .PdfObject {_dge .PdfAction .ToPdfObject ();_afa :=_dge ._cf ;_ddf :=_afa .PdfObject .(*_da .PdfObjectDictionary );_ddf .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeThread )));if _dge .F !=nil {_ddf .Set ("\u0046",_dge .F .ToPdfObject ());};_ddf .SetIfNotNil ("\u0044",_dge .D );_ddf .SetIfNotNil ("\u0042",_dge .B );return _afa ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _da .PdfObject ;AN _da .PdfObject ;OP _da .PdfObject ;JS _da .PdfObject ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgffd *PdfShading )ToPdfObject ()_da .PdfObject {_efbfa :=_cgffd ._fgfdc ;_bbgfc ,_fcbeg :=_cgffd .getShadingDict ();if _fcbeg !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cgffd .ShadingType !=nil {_bbgfc .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cgffd .ShadingType );};if _cgffd .ColorSpace !=nil {_bbgfc .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cgffd .ColorSpace .ToPdfObject ());};if _cgffd .Background !=nil {_bbgfc .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cgffd .Background );};if _cgffd .BBox !=nil {_bbgfc .Set ("\u0042\u0042\u006f\u0078",_cgffd .BBox .ToPdfObject ());};if _cgffd .AntiAlias !=nil {_bbgfc .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cgffd .AntiAlias );};return _efbfa ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_afbda *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _da .GetNumberAsFloat (_afbda .Descent );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _da .PdfObject ;_bacc []byte ;_ccgc *_da .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_efca *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _efca .UnderlyingCS ==nil {return nil ,_ag .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _efca .UnderlyingCS .ColorFromFloats (vals );};func _fgaee ()_ef .Time {return _fcbecf };

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_adfc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_da .PdfObject ,error );};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_de :=NewPdfAction ();_aaa :=&PdfActionSubmitForm {};_aaa .PdfAction =_de ;_de .SetContext (_aaa );return _aaa ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_bcdcb *PdfShading )GetContext ()PdfModel {return _bcdcb ._fbacc };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egbcf *PdfShadingType3 )ToPdfObject ()_da .PdfObject {_egbcf .PdfShading .ToPdfObject ();_bfeef ,_afeg :=_egbcf .getShadingDict ();if _afeg !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _egbcf .Coords !=nil {_bfeef .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_egbcf .Coords );};if _egbcf .Domain !=nil {_bfeef .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egbcf .Domain );};if _egbcf .Function !=nil {if len (_egbcf .Function )==1{_bfeef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egbcf .Function [0].ToPdfObject ());}else {_gded :=_da .MakeArray ();for _ ,_bcdag :=range _egbcf .Function {_gded .Append (_bcdag .ToPdfObject ());};_bfeef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gded );};};if _egbcf .Extend !=nil {_bfeef .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_egbcf .Extend );};return _egbcf ._fgfdc ;};func _faae (_bfbdb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_bfbdb }};

// ToPdfObject implements interface PdfModel.
func (_bdba *PdfAnnotationSquare )ToPdfObject ()_da .PdfObject {_bdba .PdfAnnotation .ToPdfObject ();_fdgd :=_bdba ._cfd ;_gadcb :=_fdgd .PdfObject .(*_da .PdfObjectDictionary );if _bdba .PdfAnnotationMarkup !=nil {_bdba .PdfAnnotationMarkup .appendToPdfDictionary (_gadcb );};_gadcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_gadcb .SetIfNotNil ("\u0042\u0053",_bdba .BS );_gadcb .SetIfNotNil ("\u0049\u0043",_bdba .IC );_gadcb .SetIfNotNil ("\u0042\u0045",_bdba .BE );_gadcb .SetIfNotNil ("\u0052\u0044",_bdba .RD );return _fdgd ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_bggb :=NewPdfAnnotation ();_gebd :=&PdfAnnotationFileAttachment {};_gebd .PdfAnnotation =_bggb ;_gebd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bggb .SetContext (_gebd );return _gebd ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;IC _da .PdfObject ;RO _da .PdfObject ;OverlayText _da .PdfObject ;Repeat _da .PdfObject ;DA _da .PdfObject ;Q _da .PdfObject ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_eecc *PdfFont )ToPdfObject ()_da .PdfObject {if _eecc ._edgc ==nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _da .MakeNull ();};return _eecc ._edgc .ToPdfObject ();};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ecbe pdfFontType0 )GetCharMetrics (code _cee .CharCode )(_dg .CharMetrics ,bool ){if _ecbe .DescendantFont ==nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ecbe );return _dg .CharMetrics {},false ;};return _ecbe .DescendantFont .GetCharMetrics (code );};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fc :=NewPdfAction ();_ee :=&PdfActionSound {};_ee .PdfAction =_fc ;_fc .SetContext (_ee );return _ee ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_cdgde *OutlineItem )ToPdfObject ()_da .PdfObject {_ccecff ,_ :=_cdgde .ToPdfOutlineItem ();return _ccecff .ToPdfObject ();};

// Items returns all children outline items.
func (_fcbfd *Outline )Items ()[]*OutlineItem {return _fcbfd .Entries };func (_bgeag SignatureValidationResult )String ()string {var _eacbc _bf .Buffer ;_eacbc .WriteString (_f .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_bgeag .Name ));if _bgeag .Date ._aaaec > 0{_eacbc .WriteString (_f .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_bgeag .Date .ToGoTime ().String ()));}else {_eacbc .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_bgeag .Reason )> 0{_eacbc .WriteString (_f .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bgeag .Reason ));}else {_eacbc .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_bgeag .Location )> 0{_eacbc .WriteString (_f .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bgeag .Location ));}else {_eacbc .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_bgeag .ContactInfo )> 0{_eacbc .WriteString (_f .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_bgeag .ContactInfo ));}else {_eacbc .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_eacbc .WriteString (_f .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_bgeag .Fields )));if _bgeag .IsSigned {_eacbc .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_eacbc .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _bgeag .IsVerified {_eacbc .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_eacbc .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _bgeag .IsTrusted {_eacbc .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_eacbc .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_bgeag .GeneralizedTime .IsZero (){_eacbc .WriteString (_f .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_bgeag .GeneralizedTime .String ()));};return _eacbc .String ();};func (_ffaec *PdfWriter )updateObjectNumbers (){_bcbed :=_ffaec .ObjNumOffset ;_bdcfa :=0;for _ ,_dbbbgb :=range _ffaec ._fdcfd {_adfcac :=int64 (_bdcfa +1+_bcbed );_eadga :=true ;if _ffaec ._afcac {if _bedab ,_bbcbg :=_ffaec ._afcee [_dbbbgb ];_bbcbg {_adfcac =_bedab ;_eadga =false ;};};switch _dcgef :=_dbbbgb .(type ){case *_da .PdfIndirectObject :_dcgef .ObjectNumber =_adfcac ;_dcgef .GenerationNumber =0;case *_da .PdfObjectStream :_dcgef .ObjectNumber =_adfcac ;_dcgef .GenerationNumber =0;case *_da .PdfObjectStreams :_dcgef .ObjectNumber =_adfcac ;_dcgef .GenerationNumber =0;default:_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_dcgef );continue ;};if _eadga {_bdcfa ++;};};_gfgeb :=func (_fecba _da .PdfObject )int64 {switch _afcb :=_fecba .(type ){case *_da .PdfIndirectObject :return _afcb .ObjectNumber ;case *_da .PdfObjectStream :return _afcb .ObjectNumber ;case *_da .PdfObjectStreams :return _afcb .ObjectNumber ;};return 0;};_ca .SliceStable (_ffaec ._fdcfd ,func (_afab ,_dedbe int )bool {return _gfgeb (_ffaec ._fdcfd [_afab ])< _gfgeb (_ffaec ._fdcfd [_dedbe ])});};

// ToPdfObject implements interface PdfModel.
func (_ffg *PdfAnnotationUnderline )ToPdfObject ()_da .PdfObject {_ffg .PdfAnnotation .ToPdfObject ();_agce :=_ffg ._cfd ;_faec :=_agce .PdfObject .(*_da .PdfObjectDictionary );_ffg .PdfAnnotationMarkup .appendToPdfDictionary (_faec );_faec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_faec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ffg .QuadPoints );return _agce ;};func (_ccffb *XObjectImage )getParamsDict ()*_da .PdfObjectDictionary {_cgfag :=_da .MakeDict ();_cgfag .Set ("\u0057\u0069\u0064t\u0068",_da .MakeInteger (*_ccffb .Width ));_cgfag .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_da .MakeInteger (*_ccffb .Height ));_cgfag .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_da .MakeInteger (int64 (_ccffb .ColorSpace .GetNumComponents ())));_cgfag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_da .MakeInteger (*_ccffb .BitsPerComponent ));return _cgfag ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_beefb *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_debae :=vals [0];if _debae < 0.0||_debae > 100.0{_ac .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_debae );return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacb :=vals [1];_ggaa :=float64 (-100);_cega :=float64 (100);if len (_beefb .Range )> 1{_ggaa =_beefb .Range [0];_cega =_beefb .Range [1];};if _cacb < _ggaa ||_cacb > _cega {_ac .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cacb ,_ggaa ,_cega );return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_effa :=vals [2];_aaaf :=float64 (-100);_fdbe :=float64 (100);if len (_beefb .Range )> 3{_aaaf =_beefb .Range [2];_fdbe =_beefb .Range [3];};if _effa < _aaaf ||_effa > _fdbe {_ac .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_effa ,_aaaf ,_fdbe );return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aedg :=NewPdfColorLab (_debae ,_cacb ,_effa );return _aedg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fga *PdfActionRendition )ToPdfObject ()_da .PdfObject {_fga .PdfAction .ToPdfObject ();_dgc :=_fga ._cf ;_edf :=_dgc .PdfObject .(*_da .PdfObjectDictionary );_edf .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeRendition )));_edf .SetIfNotNil ("\u0052",_fga .R );_edf .SetIfNotNil ("\u0041\u004e",_fga .AN );_edf .SetIfNotNil ("\u004f\u0050",_fga .OP );_edf .SetIfNotNil ("\u004a\u0053",_fga .JS );return _dgc ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_adcac =subject };func _fdagee (_dgcga *_da .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dbea :=PdfShadingType7 {};_dfbbc :=_dgcga .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dfbbc ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cdfge ,_gdfdf :=_dfbbc .(*_da .PdfObjectInteger );if !_gdfdf {_ac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfbbc );return nil ,_da .ErrTypeError ;};_dbea .BitsPerCoordinate =_cdfge ;_dfbbc =_dgcga .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dfbbc ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cdfge ,_gdfdf =_dfbbc .(*_da .PdfObjectInteger );if !_gdfdf {_ac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dfbbc );return nil ,_da .ErrTypeError ;};_dbea .BitsPerComponent =_cdfge ;_dfbbc =_dgcga .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dfbbc ==nil {_ac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdfge ,_gdfdf =_dfbbc .(*_da .PdfObjectInteger );if !_gdfdf {_ac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dfbbc );return nil ,_da .ErrTypeError ;};_dbea .BitsPerComponent =_cdfge ;_dfbbc =_dgcga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dfbbc ==nil {_ac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dabff ,_gdfdf :=_dfbbc .(*_da .PdfObjectArray );if !_gdfdf {_ac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfbbc );return nil ,_da .ErrTypeError ;};_dbea .Decode =_dabff ;if _bccde :=_dgcga .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bccde !=nil {_dbea .Function =[]PdfFunction {};if _gcfae ,_dgce :=_bccde .(*_da .PdfObjectArray );_dgce {for _ ,_aeffd :=range _gcfae .Elements (){_daad ,_fafbb :=_eeebd (_aeffd );if _fafbb !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fafbb );return nil ,_fafbb ;};_dbea .Function =append (_dbea .Function ,_daad );};}else {_eacba ,_ddbbf :=_eeebd (_bccde );if _ddbbf !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddbbf );return nil ,_ddbbf ;};_dbea .Function =append (_dbea .Function ,_eacba );};};return &_dbea ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebdag *PdfPageResourcesColorspaces )ToPdfObject ()_da .PdfObject {_gegeg :=_da .MakeDict ();for _ ,_efbg :=range _ebdag .Names {_gegeg .Set (_da .PdfObjectName (_efbg ),_ebdag .Colorspaces [_efbg ].ToPdfObject ());};if _ebdag ._adefe !=nil {_ebdag ._adefe .PdfObject =_gegeg ;return _ebdag ._adefe ;};return _gegeg ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_dgf :=NewPdfAction ();_cc :=&PdfActionResetForm {};_cc .PdfAction =_dgf ;_dgf .SetContext (_cc );return _cc ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_fcdbd *PdfPageResources )HasExtGState (keyName _da .PdfObjectName )bool {_ ,_cccfd :=_fcdbd .GetFontByName (keyName );return _cccfd ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _da .PdfObject ;H _da .PdfObject ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_dcbc *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbedf ,_cfgb :=color .(*PdfColorDeviceRGB );if !_cfgb {_ac .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dbedf ,nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_fbcfc *PdfPattern )IsShading ()bool {return _fbcfc .PatternType ==2};

// ToPdfObject implements interface PdfModel.
func (_cbd *PdfAnnotationPolyLine )ToPdfObject ()_da .PdfObject {_cbd .PdfAnnotation .ToPdfObject ();_ccff :=_cbd ._cfd ;_cdae :=_ccff .PdfObject .(*_da .PdfObjectDictionary );_cbd .PdfAnnotationMarkup .appendToPdfDictionary (_cdae );_cdae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_cdae .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cbd .Vertices );_cdae .SetIfNotNil ("\u004c\u0045",_cbd .LE );_cdae .SetIfNotNil ("\u0042\u0053",_cbd .BS );_cdae .SetIfNotNil ("\u0049\u0043",_cbd .IC );_cdae .SetIfNotNil ("\u0042\u0045",_cbd .BE );_cdae .SetIfNotNil ("\u0049\u0054",_cbd .IT );_cdae .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbd .Measure );return _ccff ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_efbdf *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ac .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_ag .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bc .PSProgram ;_eaafac *_bc .PSExecutor ;_bfag []byte ;_bcdab *_da .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_cffb *PdfAnnotationSquiggly )ToPdfObject ()_da .PdfObject {_cffb .PdfAnnotation .ToPdfObject ();_dbf :=_cffb ._cfd ;_ebe :=_dbf .PdfObject .(*_da .PdfObjectDictionary );_cffb .PdfAnnotationMarkup .appendToPdfDictionary (_ebe );_ebe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_ebe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cffb .QuadPoints );return _dbf ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gfddd :=map[rune ]int {};for _ ,_ccbc :=range text {_gfddd [_ccbc ]++;};return _gfddd ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_efag *PdfFont )ToUnicode ()string {if _efag .baseFields ()._eeba ==nil {return "";};return _efag .baseFields ()._eeba .Name ();};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _da .PdfObject ;Mac _da .PdfObject ;Unix _da .PdfObject ;NewWindow _da .PdfObject ;};

// Width returns the width of `rect`.
func (_feeb *PdfRectangle )Width ()float64 {return _bb .Abs (_feeb .Urx -_feeb .Llx )};func _bbac (_fddg []byte )(_acgea ,_aeea string ,_gggc error ){_ac .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_fddg ));_befb :=_eadf .FindIndex (_fddg );if _befb ==nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_da .ErrTypeError ;};_fgde :=_befb [1];_gefgb :=_gd .Index (string (_fddg [_fgde :]),_dgdg );if _gefgb < 0{_acgea =string (_fddg [_fgde :]);return _acgea ,"",nil ;};_cgcce :=_fgde +_gefgb ;_acgea =string (_fddg [_fgde :_cgcce ]);_aecb :=_cgcce ;_gefgb =_gd .Index (string (_fddg [_aecb :]),_gcab );if _gefgb < 0{_ac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gggc );return "","",_da .ErrTypeError ;};_dgbca :=_aecb +_gefgb ;_aeea =string (_fddg [_aecb :_dgbca ]);return _acgea ,_aeea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfcg *PdfAnnotationScreen )ToPdfObject ()_da .PdfObject {_dfcg .PdfAnnotation .ToPdfObject ();_bdcg :=_dfcg ._cfd ;_cad :=_bdcg .PdfObject .(*_da .PdfObjectDictionary );_cad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_cad .SetIfNotNil ("\u0054",_dfcg .T );_cad .SetIfNotNil ("\u004d\u004b",_dfcg .MK );_cad .SetIfNotNil ("\u0041",_dfcg .A );_cad .SetIfNotNil ("\u0041\u0041",_dfcg .AA );return _bdcg ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _da .PdfObject ;Popup *PdfAnnotationPopup ;CA _da .PdfObject ;RC _da .PdfObject ;CreationDate _da .PdfObject ;IRT _da .PdfObject ;Subj _da .PdfObject ;RT _da .PdfObject ;IT _da .PdfObject ;ExData _da .PdfObject ;};

// Val returns the value of the color.
func (_fega *PdfColorCalGray )Val ()float64 {return float64 (*_fega )};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_eea :=NewPdfAnnotation ();_fed :=&PdfAnnotationSquiggly {};_fed .PdfAnnotation =_eea ;_fed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eea .SetContext (_fed );return _fed ;};func _dgfdd (_dede _da .PdfObject )(*PdfColorspaceICCBased ,error ){_gcbf :=&PdfColorspaceICCBased {};if _fcae ,_cgcf :=_dede .(*_da .PdfIndirectObject );_cgcf {_gcbf ._cdbg =_fcae ;};_dede =_da .TraceToDirectObject (_dede );_abab ,_adbg :=_dede .(*_da .PdfObjectArray );if !_adbg {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abab .Len ()!=2{return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_dede =_da .TraceToDirectObject (_abab .Get (0));_dfcd ,_adbg :=_dede .(*_da .PdfObjectName );if !_adbg {return nil ,_f .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_dfcd !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_f .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_dede =_abab .Get (1);_cfcd ,_adbg :=_da .GetStream (_dede );if !_adbg {_ac .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dede );return nil ,_f .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_deebc :=_cfcd .PdfObjectDictionary ;_eceg ,_adbg :=_deebc .Get ("\u004e").(*_da .PdfObjectInteger );if !_adbg {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_eceg !=1&&*_eceg !=3&&*_eceg !=4{return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_gcbf .N =int (*_eceg );if _gbfd :=_deebc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_gbfd !=nil {_eeca ,_efda :=NewPdfColorspaceFromPdfObject (_gbfd );if _efda !=nil {return nil ,_efda ;};_gcbf .Alternate =_eeca ;};if _dcdf :=_deebc .Get ("\u0052\u0061\u006eg\u0065");_dcdf !=nil {_dcdf =_da .TraceToDirectObject (_dcdf );_beae ,_dfbf :=_dcdf .(*_da .PdfObjectArray );if !_dfbf {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _beae .Len ()!=2*_gcbf .N {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_bcdg ,_fadb :=_beae .GetAsFloat64Slice ();if _fadb !=nil {return nil ,_fadb ;};_gcbf .Range =_bcdg ;}else {_gcbf .Range =make ([]float64 ,2*_gcbf .N );for _acge :=0;_acge < _gcbf .N ;_acge ++{_gcbf .Range [2*_acge ]=0.0;_gcbf .Range [2*_acge +1]=1.0;};};if _gbg :=_deebc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gbg !=nil {_cfgbf ,_dfbg :=_gbg .(*_da .PdfObjectStream );if !_dfbg {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_gcbf .Metadata =_cfgbf ;};_gdee ,_gagd :=_da .DecodeStream (_cfcd );if _gagd !=nil {return nil ,_gagd ;};_gcbf .Data =_gdee ;_gcbf ._cdbf =_cfcd ;return _gcbf ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_ccc *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dgcc :=pageNum -1;var _gcgd *PdfPage ;for _ccdc ,_afcg :=range _ccc ._cadf {if _ccdc ==_dgcc {_gcgd =_afcg ;};};if _gcgd ==nil {return _f .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _gcgd ._dabad !=nil &&_gcgd ._dabad .GetParser ()==_ccc ._adf ._bcgcg {_gcgd =_gcgd .Duplicate ();_ccc ._cadf [_dgcc ]=_gcgd ;};page =page .Duplicate ();_ccaad (page );_cgec :=_efbd (_gcgd );_edbde :=_efbd (page );_aedb :=make (map[_da .PdfObjectName ]_da .PdfObjectName );for _eaab :=range _edbde {if _ ,_bcad :=_cgec [_eaab ];_bcad {for _bddb :=1;true ;_bddb ++{_aefd :=_da .PdfObjectName (string (_eaab )+_fa .Itoa (_bddb ));if _ ,_dbab :=_cgec [_aefd ];!_dbab {_aedb [_eaab ]=_aefd ;break ;};};};};_cgcec ,_ffcf :=page .GetContentStreams ();if _ffcf !=nil {return _ffcf ;};_egea ,_ffcf :=_gcgd .GetContentStreams ();if _ffcf !=nil {return _ffcf ;};for _gffe ,_gdcc :=range _cgcec {for _bdca ,_dggc :=range _aedb {_gdcc =_gd .Replace (_gdcc ,"\u002f"+string (_bdca ),"\u002f"+string (_dggc ),-1);};_cgcec [_gffe ]=_gdcc ;};_egea =append (_egea ,_cgcec ...);if _cecbf :=_gcgd .SetContentStreams (_egea ,_da .NewFlateEncoder ());_cecbf !=nil {return _cecbf ;};for _ ,_dfag :=range page ._gfgdf {_gcgd ._gfgdf =append (_gcgd ._gfgdf ,_dfag );};if _gcgd .Resources ==nil {_gcgd .Resources =NewPdfPageResources ();};if page .Resources !=nil {_gcgd .Resources .Font =_ccc .mergeResources (_gcgd .Resources .Font ,page .Resources .Font ,_aedb );_gcgd .Resources .XObject =_ccc .mergeResources (_gcgd .Resources .XObject ,page .Resources .XObject ,_aedb );_gcgd .Resources .Properties =_ccc .mergeResources (_gcgd .Resources .Properties ,page .Resources .Properties ,_aedb );if _gcgd .Resources .ProcSet ==nil {_gcgd .Resources .ProcSet =page .Resources .ProcSet ;};_gcgd .Resources .Shading =_ccc .mergeResources (_gcgd .Resources .Shading ,page .Resources .Shading ,_aedb );_gcgd .Resources .ExtGState =_ccc .mergeResources (_gcgd .Resources .ExtGState ,page .Resources .ExtGState ,_aedb );};_ccg ,_ffcf :=_gcgd .GetMediaBox ();if _ffcf !=nil {return _ffcf ;};_cdffe ,_ffcf :=page .GetMediaBox ();if _ffcf !=nil {return _ffcf ;};var _gcce bool ;if _ccg .Llx > _cdffe .Llx {_ccg .Llx =_cdffe .Llx ;_gcce =true ;};if _ccg .Lly > _cdffe .Lly {_ccg .Lly =_cdffe .Lly ;_gcce =true ;};if _ccg .Urx < _cdffe .Urx {_ccg .Urx =_cdffe .Urx ;_gcce =true ;};if _ccg .Ury < _cdffe .Ury {_ccg .Ury =_cdffe .Ury ;_gcce =true ;};if _gcce {_gcgd .MediaBox =_ccg ;};return nil ;};func _gaadd ()string {return _abagb };

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_abcae *PdfReader )Inspect ()(map[string ]int ,error ){return _abcae ._bcgcg .Inspect ()};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_aafdb *PdfAcroForm )ToPdfObject ()_da .PdfObject {_dbge :=_aafdb ._abaf ;_adgff :=_dbge .PdfObject .(*_da .PdfObjectDictionary );if _aafdb .Fields !=nil {_cfead :=_da .PdfObjectArray {};for _ ,_bdbb :=range *_aafdb .Fields {_cgafe :=_bdbb .GetContext ();if _cgafe !=nil {_cfead .Append (_cgafe .ToPdfObject ());}else {_cfead .Append (_bdbb .ToPdfObject ());};};_adgff .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cfead );};if _aafdb .NeedAppearances !=nil {_adgff .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_aafdb .NeedAppearances );};if _aafdb .SigFlags !=nil {_adgff .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_aafdb .SigFlags );};if _aafdb .CO !=nil {_adgff .Set ("\u0043\u004f",_aafdb .CO );};if _aafdb .DR !=nil {_adgff .Set ("\u0044\u0052",_aafdb .DR .ToPdfObject ());};if _aafdb .DA !=nil {_adgff .Set ("\u0044\u0041",_aafdb .DA );};if _aafdb .Q !=nil {_adgff .Set ("\u0051",_aafdb .Q );};if _aafdb .XFA !=nil {_adgff .Set ("\u0058\u0046\u0041",_aafdb .XFA );};return _dbge ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_da .PdfObject ;GetContainingPdfObject ()_da .PdfObject ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_da .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_addc *_da .PdfIndirectObject ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gfg :=NewPdfAnnotation ();_eefe :=&PdfAnnotationText {};_eefe .PdfAnnotation =_gfg ;_eefe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfg .SetContext (_eefe );return _eefe ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bbgdc *PdfPage )GetAllContentStreams ()(string ,error ){_abdeb ,_bcfb :=_bbgdc .GetContentStreams ();if _bcfb !=nil {return "",_bcfb ;};return _gd .Join (_abdeb ,"\u0020"),nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_eeagf *PdfReader )GetOCProperties ()(_da .PdfObject ,error ){_fbgbg :=_eeagf ._ddgbf ;_dadg :=_fbgbg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dadg =_da .ResolveReference (_dadg );if !_eeagf ._aceeb {_afeb :=_eeagf .traverseObjectData (_dadg );if _afeb !=nil {return nil ,_afeb ;};};return _dadg ,nil ;};func (_fgaga *pdfCIDFontType2 )baseFields ()*fontCommon {return &_fgaga .fontCommon };

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_abbaa :=NewPdfOutline ();_abbaa ._acedd =&_abbaa ;return _abbaa ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_adef *PdfColorspaceDeviceN )GetNumComponents ()int {return _adef .ColorantNames .Len ()};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ggbcfa *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gfdc []*PdfOutlineTreeNode ;var _dgaaf []string ;var _ebcc func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_ebcc =func (_bccecc *PdfOutlineTreeNode ,_cfdc *[]*PdfOutlineTreeNode ,_aaee *[]string ,_eccgd int ){if _bccecc ==nil {return ;};if _bccecc ._acedd ==nil {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_cgeca ,_edge :=_bccecc ._acedd .(*PdfOutlineItem );if _edge {*_cfdc =append (*_cfdc ,&_cgeca .PdfOutlineTreeNode );_ffgace :=_gd .Repeat ("\u0020",_eccgd *2)+_cgeca .Title .Decoded ();*_aaee =append (*_aaee ,_ffgace );};if _bccecc .First !=nil {_gfcf :=_gd .Repeat ("\u0020",_eccgd *2)+"\u002b";*_aaee =append (*_aaee ,_gfcf );_ebcc (_bccecc .First ,_cfdc ,_aaee ,_eccgd +1);};if _edge &&_cgeca .Next !=nil {_ebcc (_cgeca .Next ,_cfdc ,_aaee ,_eccgd );};};_ebcc (_ggbcfa ._ebdfe ,&_gfdc ,&_dgaaf ,0);return _gfdc ,_dgaaf ,nil ;};func (_bfad *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func (_cfc *PdfReader )newPdfAnnotationProjectionFromDict (_ead *_da .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cdbc :=&PdfAnnotationProjection {};_ace ,_fdga :=_cfc .newPdfAnnotationMarkupFromDict (_ead );if _fdga !=nil {return nil ,_fdga ;};_cdbc .PdfAnnotationMarkup =_ace ;return _cdbc ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_abgg *PdfField )GetContext ()PdfModel {return _abgg ._ffgg };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_acfe pdfFontType0 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){if _acfe .DescendantFont ==nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_acfe );return _dg .CharMetrics {},false ;};return _acfe .DescendantFont .GetRuneMetrics (r );};func (_abgca *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _abgca ._gcgf };func (_bdfgc *pdfFontType0 )bytesToCharcodes (_bdbd []byte )([]_cee .CharCode ,bool ){if _bdfgc ._afec ==nil {return nil ,false ;};_dffba ,_gagg :=_bdfgc ._afec .BytesToCharcodes (_bdbd );if !_gagg {return nil ,false ;};_egce :=make ([]_cee .CharCode ,len (_dffba ));for _eaefg ,_aeecd :=range _dffba {_egce [_eaefg ]=_cee .CharCode (_aeecd );};return _egce ,true ;};func _cfcdf (_efcad _da .PdfObject )(*PdfFontDescriptor ,error ){_efcb :=&PdfFontDescriptor {};_efcad =_da .ResolveReference (_efcad );if _ffabc ,_ffbd :=_efcad .(*_da .PdfIndirectObject );_ffbd {_efcb ._bfgdb =_ffabc ;_efcad =_ffabc .PdfObject ;};_dffeb ,_ceggf :=_da .GetDict (_efcad );if !_ceggf {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_efcad );return nil ,_da .ErrTypeError ;};if _gcfa :=_dffeb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gcfa !=nil {_efcb .FontName =_gcfa ;}else {_ac .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_egdgf ,_ :=_da .GetName (_efcb .FontName );if _cddg :=_dffeb .Get ("\u0054\u0079\u0070\u0065");_cddg !=nil {_ddegc ,_ffee :=_cddg .(*_da .PdfObjectName );if !_ffee ||string (*_ddegc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ac .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cddg ,_egdgf ,_efcb .FontName );};}else {_ac .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_egdgf ,_efcb .FontName );};_efcb .FontFamily =_dffeb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_efcb .FontStretch =_dffeb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_efcb .FontWeight =_dffeb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_efcb .Flags =_dffeb .Get ("\u0046\u006c\u0061g\u0073");_efcb .FontBBox =_dffeb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_efcb .ItalicAngle =_dffeb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_efcb .Ascent =_dffeb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_efcb .Descent =_dffeb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_efcb .Leading =_dffeb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_efcb .CapHeight =_dffeb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_efcb .XHeight =_dffeb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_efcb .StemV =_dffeb .Get ("\u0053\u0074\u0065m\u0056");_efcb .StemH =_dffeb .Get ("\u0053\u0074\u0065m\u0048");_efcb .AvgWidth =_dffeb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_efcb .MaxWidth =_dffeb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_efcb .MissingWidth =_dffeb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_efcb .FontFile =_dffeb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_efcb .FontFile2 =_dffeb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_efcb .FontFile3 =_dffeb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_efcb .CharSet =_dffeb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_efcb .Style =_dffeb .Get ("\u0053\u0074\u0079l\u0065");_efcb .Lang =_dffeb .Get ("\u004c\u0061\u006e\u0067");_efcb .FD =_dffeb .Get ("\u0046\u0044");_efcb .CIDSet =_dffeb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _efcb .Flags !=nil {if _fabae ,_ffgf :=_da .GetIntVal (_efcb .Flags );_ffgf {_efcb ._faed =_fabae ;};};if _efcb .MissingWidth !=nil {if _bffb ,_caad :=_da .GetNumberAsFloat (_efcb .MissingWidth );_caad ==nil {_efcb ._bede =_bffb ;};};if _efcb .FontFile !=nil {_gfdf ,_dbbgd :=_cfda (_efcb .FontFile );if _dbbgd !=nil {return _efcb ,_dbbgd ;};_ac .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gfdf );_efcb .fontFile =_gfdf ;};if _efcb .FontFile2 !=nil {_gcfaa ,_ecgec :=_dg .NewFontFile2FromPdfObject (_efcb .FontFile2 );if _ecgec !=nil {return _efcb ,_ecgec ;};_ac .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_gcfaa .String ());_efcb ._ggab =&_gcfaa ;};return _efcb ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_aaaec int64 ;_ddae int64 ;_dafbcd int64 ;_cegad int64 ;_ddcba int64 ;_cebdde int64 ;_bgbde byte ;_gbgcc int64 ;_gabad int64 ;};

// AddFont adds a font dictionary to the Font resources.
func (_eedea *PdfPage )AddFont (name _da .PdfObjectName ,font _da .PdfObject )error {if _eedea .Resources ==nil {_eedea .Resources =NewPdfPageResources ();};if _eedea .Resources .Font ==nil {_eedea .Resources .Font =_da .MakeDict ();};_feec ,_gfda :=_da .TraceToDirectObject (_eedea .Resources .Font ).(*_da .PdfObjectDictionary );if !_gfda {_ac .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_da .TraceToDirectObject (_eedea .Resources .Font ));return _ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_feec .Set (name ,font );return nil ;};func _dbdg (_eeac _da .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_bfba :=&PdfColorspaceDeviceNAttributes {};var _gfaf *_da .PdfObjectDictionary ;if _edea ,_ccga :=_eeac .(*_da .PdfIndirectObject );_ccga {_bfba ._bedc =_edea ;var _egbad bool ;_gfaf ,_egbad =_edea .PdfObject .(*_da .PdfObjectDictionary );if !_egbad {_ac .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _fdag ,_dadd :=_eeac .(*_da .PdfObjectDictionary );_dadd {_gfaf =_fdag ;}else {_ac .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbee :=_gfaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bbee !=nil {_acca ,_acef :=_da .TraceToDirectObject (_bbee ).(*_da .PdfObjectName );if !_acef {_ac .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bfba .Subtype =_acca ;};if _agaf :=_gfaf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_agaf !=nil {_bfba .Colorants =_agaf ;};if _geeeg :=_gfaf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_geeeg !=nil {_bfba .Process =_geeeg ;};if _fbed :=_gfaf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fbed !=nil {_bfba .MixingHints =_fbed ;};return _bfba ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;BitsPerFlag *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};func (_gafa PdfFont )actualFont ()pdfFont {if _gafa ._edgc ==nil {_ac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gafa );};return _gafa ._edgc ;};func _egaaa (_dadaa *XObjectImage )error {if _dadaa .SMask ==nil {return nil ;};_bfeeg ,_cfag :=_dadaa .SMask .(*_da .PdfObjectStream );if !_cfag {_ac .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _da .ErrTypeError ;};_ceeda :=_bfeeg .PdfObjectDictionary ;_ggdg :=_ceeda .Get ("\u004d\u0061\u0074t\u0065");if _ggdg ==nil {return nil ;};_bcdbe ,_agde :=_gcecag (_ggdg .(*_da .PdfObjectArray ));if _agde !=nil {return _agde ;};_abcdf :=_da .MakeArrayFromFloats ([]float64 {_bcdbe });_ceeda .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_abcdf );return nil ;};const (_aedfe =0x00001;_cefca =0x00002;_cdfb =0x00004;_acdf =0x00008;_daae =0x00020;_bdef =0x00040;_dfbc =0x10000;_fdad =0x20000;_cedd =0x40000;);

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gaef :=&PdfFilespec {};_gaef ._faff =_da .MakeIndirectObject (_da .MakeDict ());return _gaef ;};

// ToPdfObject implements interface PdfModel.
func (_edbd *PdfAnnotationCircle )ToPdfObject ()_da .PdfObject {_edbd .PdfAnnotation .ToPdfObject ();_bege :=_edbd ._cfd ;_dbda :=_bege .PdfObject .(*_da .PdfObjectDictionary );_edbd .PdfAnnotationMarkup .appendToPdfDictionary (_dbda );_dbda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_dbda .SetIfNotNil ("\u0042\u0053",_edbd .BS );_dbda .SetIfNotNil ("\u0049\u0043",_edbd .IC );_dbda .SetIfNotNil ("\u0042\u0045",_edbd .BE );_dbda .SetIfNotNil ("\u0052\u0044",_edbd .RD );return _bege ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _da .PdfObject )(_da .PdfObjectName ,error ){var _ceag *_da .PdfObjectName ;var _bbgf *_da .PdfObjectArray ;if _dcgfe ,_beab :=obj .(*_da .PdfIndirectObject );_beab {if _aecf ,_bgf :=_dcgfe .PdfObject .(*_da .PdfObjectArray );_bgf {_bbgf =_aecf ;}else if _bbfa ,_accb :=_dcgfe .PdfObject .(*_da .PdfObjectName );_accb {_ceag =_bbfa ;};}else if _gdaf ,_ecab :=obj .(*_da .PdfObjectArray );_ecab {_bbgf =_gdaf ;}else if _bcdf ,_begde :=obj .(*_da .PdfObjectName );_begde {_ceag =_bcdf ;};if _ceag !=nil {switch *_ceag {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_ceag ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_ceag ,nil ;};};if _bbgf !=nil &&_bbgf .Len ()> 0{if _gabdg ,_bdcgf :=_bbgf .Get (0).(*_da .PdfObjectName );_bdcgf {switch *_gabdg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bbgf .Len ()==1{return *_gabdg ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gabdg ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gabdg ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gabdg ,nil ;};};};return "",nil ;};func _bcagd (_dcfgf *_da .PdfObjectStream )(*PdfFunctionType4 ,error ){_cgea :=&PdfFunctionType4 {};_cgea ._bcdab =_dcfgf ;_beaec :=_dcfgf .PdfObjectDictionary ;_bgaa ,_caacg :=_da .TraceToDirectObject (_beaec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_caacg {_ac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bgaa .Len ()%2!=0{_ac .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fdbd ,_ebbf :=_bgaa .ToFloat64Array ();if _ebbf !=nil {return nil ,_ebbf ;};_cgea .Domain =_fdbd ;_bgaa ,_caacg =_da .TraceToDirectObject (_beaec .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if _caacg {if _bgaa .Len ()< 0||_bgaa .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dccf ,_fbfe :=_bgaa .ToFloat64Array ();if _fbfe !=nil {return nil ,_fbfe ;};_cgea .Range =_dccf ;};_abaab ,_ebbf :=_da .DecodeStream (_dcfgf );if _ebbf !=nil {return nil ,_ebbf ;};_cgea ._bfag =_abaab ;_fgfc :=_bc .NewPSParser ([]byte (_abaab ));_fgebe ,_ebbf :=_fgfc .Parse ();if _ebbf !=nil {return nil ,_ebbf ;};_cgea .Program =_fgebe ;return _cgea ,nil ;};type fontCommon struct{_dabeae string ;_bffg string ;_afgd string ;_aeec _da .PdfObject ;_eeba *_age .CMap ;_gcgf *PdfFontDescriptor ;_gffeb int64 ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_caded *PdfWriter )SetNamedDestinations (names _da .PdfObject )error {if names ==nil {return nil ;};_ac .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_caded ._ebdee .Set ("\u004e\u0061\u006de\u0073",names );return _caded .addObjects (names );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_afgfc *PdfShadingType4 )ToPdfObject ()_da .PdfObject {_afgfc .PdfShading .ToPdfObject ();_bfdda ,_acbea :=_afgfc .getShadingDict ();if _acbea !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _afgfc .BitsPerCoordinate !=nil {_bfdda .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_afgfc .BitsPerCoordinate );};if _afgfc .BitsPerComponent !=nil {_bfdda .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afgfc .BitsPerComponent );};if _afgfc .BitsPerFlag !=nil {_bfdda .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_afgfc .BitsPerFlag );};if _afgfc .Decode !=nil {_bfdda .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_afgfc .Decode );};if _afgfc .Function !=nil {if len (_afgfc .Function )==1{_bfdda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afgfc .Function [0].ToPdfObject ());}else {_cgge :=_da .MakeArray ();for _ ,_dgcec :=range _afgfc .Function {_cgge .Append (_dgcec .ToPdfObject ());};_bfdda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgge );};};return _afgfc ._fgfdc ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_ecbca *PdfPageResources )GetXObjectFormByName (keyName _da .PdfObjectName )(*XObjectForm ,error ){_eaadfb ,_bbagg :=_ecbca .GetXObjectByName (keyName );if _eaadfb ==nil {return nil ,nil ;};if _bbagg !=XObjectTypeForm {return nil ,_ag .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_fecebe ,_ccgdd :=NewXObjectFormFromStream (_eaadfb );if _ccgdd !=nil {return nil ,_ccgdd ;};return _fecebe ,nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};var _ _da .PdfObject =&pdfSignDictionary {};

// ToPdfObject implements interface PdfModel.
func (_ddef *PdfAnnotationRedact )ToPdfObject ()_da .PdfObject {_ddef .PdfAnnotation .ToPdfObject ();_ebaf :=_ddef ._cfd ;_abcb :=_ebaf .PdfObject .(*_da .PdfObjectDictionary );_ddef .PdfAnnotationMarkup .appendToPdfDictionary (_abcb );_abcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_abcb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddef .QuadPoints );_abcb .SetIfNotNil ("\u0049\u0043",_ddef .IC );_abcb .SetIfNotNil ("\u0052\u004f",_ddef .RO );_abcb .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_ddef .OverlayText );_abcb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ddef .Repeat );_abcb .SetIfNotNil ("\u0044\u0041",_ddef .DA );_abcb .SetIfNotNil ("\u0051",_ddef .Q );return _ebaf ;};func _fddf (_bfcee *PdfField ,_dgedg _da .PdfObject )error {switch _bfcee .GetContext ().(type ){case *PdfFieldText :switch _cagf :=_dgedg .(type ){case *_da .PdfObjectName :_cddb :=_cagf ;_ac .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cddb .String ());_bfcee .V =_da .MakeEncodedString (_cagf .String (),true );case *_da .PdfObjectString :_bfcee .V =_da .MakeEncodedString (_cagf .String (),true );default:_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_cagf ,_cagf );};case *PdfFieldButton :switch _dgedg .(type ){case *_da .PdfObjectName :if len (_dgedg .String ())> 0{_bfcee .V =_dgedg ;_becef (_bfcee ,_dgedg );};case *_da .PdfObjectString :if len (_dgedg .String ())> 0{_bfcee .V =_da .MakeName (_dgedg .String ());_becef (_bfcee ,_bfcee .V );};default:_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfcee .PartialName (),_dgedg );_bfcee .V =_dgedg ;};case *PdfFieldChoice :switch _dgedg .(type ){case *_da .PdfObjectName :if len (_dgedg .String ())> 0{_bfcee .V =_da .MakeString (_dgedg .String ());_becef (_bfcee ,_dgedg );};case *_da .PdfObjectString :if len (_dgedg .String ())> 0{_bfcee .V =_dgedg ;_becef (_bfcee ,_da .MakeName (_dgedg .String ()));};default:_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfcee .PartialName (),_dgedg );_bfcee .V =_dgedg ;};case *PdfFieldSignature :_ac .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bfcee .PartialName (),_dgedg );};return nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gdfc *pdfCIDFontType0 )ToPdfObject ()_da .PdfObject {return _da .MakeNull ()};func _aegc (_gaad *_da .PdfObjectDictionary ,_bdafb *fontCommon ,_ffdc _cee .TextEncoder )(*pdfFontSimple ,error ){_bfga :=_befe (_bdafb );_bfga ._bfdfgg =_ffdc ;if _ffdc ==nil {_fadg :=_gaad .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fadg ==nil {_fadg =_da .MakeInteger (0);};_bfga .FirstChar =_fadg ;_cfecca ,_bbeeb :=_da .GetIntVal (_fadg );if !_bbeeb {_ac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fadg );return nil ,_da .ErrTypeError ;};_edcde :=_cee .CharCode (_cfecca );_fadg =_gaad .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fadg ==nil {_fadg =_da .MakeInteger (255);};_bfga .LastChar =_fadg ;_cfecca ,_bbeeb =_da .GetIntVal (_fadg );if !_bbeeb {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fadg );return nil ,_da .ErrTypeError ;};_aggg :=_cee .CharCode (_cfecca );_bfga ._efege =make (map[_cee .CharCode ]float64 );_fadg =_gaad .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fadg !=nil {_bfga .Widths =_fadg ;_dfgbe ,_gdbc :=_da .GetArray (_fadg );if !_gdbc {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fadg );return nil ,_da .ErrTypeError ;};_gddg ,_adag :=_dfgbe .ToFloat64Array ();if _adag !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_adag ;};if len (_gddg )!=int (_aggg -_edcde +1){_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_aggg -_edcde +1,len (_gddg ));return nil ,_da .ErrRangeError ;};for _dfdc ,_afba :=range _gddg {_bfga ._efege [_edcde +_cee .CharCode (_dfdc )]=_afba ;};};};_bfga .Encoding =_da .TraceToDirectObject (_gaad .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bfga ,nil ;};

// PartialName returns the partial name of the field.
func (_ebcaa *PdfField )PartialName ()string {_fcbb :="";if _ebcaa .T !=nil {_fcbb =_ebcaa .T .Decoded ();}else {_ac .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _fcbb ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gfad *pdfCIDFontType2 )ToPdfObject ()_da .PdfObject {if _gfad ._affea ==nil {_gfad ._affea =&_da .PdfIndirectObject {};};_fcbbg :=_gfad .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_gfad ._affea .PdfObject =_fcbbg ;if _gfad .CIDSystemInfo !=nil {_fcbbg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gfad .CIDSystemInfo );};if _gfad .DW !=nil {_fcbbg .Set ("\u0044\u0057",_gfad .DW );};if _gfad .DW2 !=nil {_fcbbg .Set ("\u0044\u0057\u0032",_gfad .DW2 );};if _gfad .W !=nil {_fcbbg .Set ("\u0057",_gfad .W );};if _gfad .W2 !=nil {_fcbbg .Set ("\u0057\u0032",_gfad .W2 );};if _gfad .CIDToGIDMap !=nil {_fcbbg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gfad .CIDToGIDMap );};return _gfad ._affea ;};func _decb (_dbgfd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_fcaa ,_efgd :=_da .GetDict (_dbgfd .AP );if !_efgd {return nil ,nil ,_ag .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _fcaa ==nil {return nil ,nil ,nil ;};_faad ,_efgd :=_da .GetArray (_dbgfd .Rect );if !_efgd ||_faad .Len ()!=4{return nil ,nil ,_ag .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_acfce ,_bfbe :=NewPdfRectangle (*_faad );if _bfbe !=nil {return nil ,nil ,_bfbe ;};_cfgc :=_da .TraceToDirectObject (_fcaa .Get ("\u004e"));switch _eeggbc :=_cfgc .(type ){case *_da .PdfObjectStream :_gbfde :=_eeggbc ;_fcgg ,_gbgc :=NewXObjectFormFromStream (_gbfde );return _fcgg ,_acfce ,_gbgc ;case *_da .PdfObjectDictionary :_gbef :=_eeggbc ;_ggccd ,_dfggb :=_da .GetName (_dbgfd .AS );if !_dfggb {return nil ,nil ,nil ;};if _gbef .Get (*_ggccd )==nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_dffe ,_dfggb :=_da .GetStream (_gbef .Get (*_ggccd ));if !_dfggb {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ggccd );return nil ,nil ,_ag .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_cfeec ,_dcbd :=NewXObjectFormFromStream (_dffe );return _cfeec ,_acfce ,_dcbd ;};_ac .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cfgc );return nil ,nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject implements interface PdfModel.
func (_bg *PdfActionNamed )ToPdfObject ()_da .PdfObject {_bg .PdfAction .ToPdfObject ();_bbd :=_bg ._cf ;_fbd :=_bbd .PdfObject .(*_da .PdfObjectDictionary );_fbd .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeNamed )));_fbd .SetIfNotNil ("\u004e",_bg .N );return _bbd ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _da .PdfObject ;Open _da .PdfObject ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_gfgbb *Image )AlphaMap (mapFunc AlphaMapFunc ){for _ccabe ,_ddfeee :=range _gfgbb ._efgcc {_gfgbb ._efgcc [_ccabe ]=mapFunc (_ddfeee );};};

// GetXObjectByName gets XObject by name.
func (_ecdbg *PdfPage )GetXObjectByName (name _da .PdfObjectName )(_da .PdfObject ,bool ){_cade ,_fadf :=_ecdbg .Resources .XObject .(*_da .PdfObjectDictionary );if !_fadf {return nil ,false ;};if _eggb :=_cade .Get (name );_eggb !=nil {return _eggb ,true ;};return nil ,false ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_gacb *Image )SetSamples (samples []uint32 ){if _gacb .BitsPerComponent < 8{samples =_gacb .samplesAddPadding (samples );};_ceegd :=_df .ResampleUint32 (samples ,int (_gacb .BitsPerComponent ),8);_cdaga :=make ([]byte ,len (_ceegd ));for _cbfeg ,_fdaf :=range _ceegd {_cdaga [_cbfeg ]=byte (_fdaf );};_gacb .Data =_cdaga ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_fadgb *XObjectImage )ToImage ()(*Image ,error ){_cabc :=&Image {};if _fadgb .Height ==nil {return nil ,_ag .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cabc .Height =*_fadgb .Height ;if _fadgb .Width ==nil {return nil ,_ag .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cabc .Width =*_fadgb .Width ;if _fadgb .BitsPerComponent ==nil {return nil ,_ag .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_cabc .BitsPerComponent =*_fadgb .BitsPerComponent ;_cabc .ColorComponents =_fadgb .ColorSpace .GetNumComponents ();_fadgb ._cdgc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_da .MakeInteger (int64 (_cabc .ColorComponents )));_fafd ,_cacdba :=_da .DecodeStream (_fadgb ._cdgc );if _cacdba !=nil {return nil ,_cacdba ;};_cabc .Data =_fafd ;if _fadgb .Decode !=nil {_egcef ,_ccfc :=_fadgb .Decode .(*_da .PdfObjectArray );if !_ccfc {_ac .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ffgad ,_ffffd :=_egcef .ToFloat64Array ();if _ffffd !=nil {return nil ,_ffffd ;};_cabc ._dfff =_ffgad ;};return _cabc ,nil ;};func (_cbgdc *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _cbgdc ._gcgf ==nil &&_cbgdc .DescendantFont !=nil {return _cbgdc .DescendantFont .FontDescriptor ();};return _cbgdc ._gcgf ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_egbg *_da .PdfIndirectObject ;};var _fcbecf _ef .Time ;

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_aaba PdfModel ;_geggda _da .PdfObject ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ga :=NewPdfAction ();_dfg :=&PdfActionGoTo {};_dfg .PdfAction =_ga ;_ga .SetContext (_dfg );return _dfg ;};func (_ecf *PdfReader )newPdfActionLaunchFromDict (_gdgd *_da .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gbad ,_dged :=_caff (_gdgd .Get ("\u0046"));if _dged !=nil {return nil ,_dged ;};return &PdfActionLaunch {Win :_gdgd .Get ("\u0057\u0069\u006e"),Mac :_gdgd .Get ("\u004d\u0061\u0063"),Unix :_gdgd .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_gdgd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gbad },nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bcb :=NewPdfAnnotation ();_eccf :=&PdfAnnotationCircle {};_eccf .PdfAnnotation =_bcb ;_eccf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcb .SetContext (_eccf );return _eccf ;};func _fegaa ()string {return _fefae };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_da .PdfObjectStream ;Data []byte ;_cdbg *_da .PdfIndirectObject ;_cdbf *_da .PdfObjectStream ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ddeaf *PdfPageResources )SetXObjectImageByName (keyName _da .PdfObjectName ,ximg *XObjectImage )error {_afcdcb :=ximg .ToPdfObject ().(*_da .PdfObjectStream );_gade :=_ddeaf .SetXObjectByName (keyName ,_afcdcb );return _gade ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cfeaf *PdfPageResources )GetShadingByName (keyName _da .PdfObjectName )(*PdfShading ,bool ){if _cfeaf .Shading ==nil {return nil ,false ;};_ggbbgc ,_cefffg :=_da .TraceToDirectObject (_cfeaf .Shading ).(*_da .PdfObjectDictionary );if !_cefffg {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfeaf .Shading );return nil ,false ;};if _abgfa :=_ggbbgc .Get (keyName );_abgfa !=nil {_acde ,_fcffa :=_ggcf (_abgfa );if _fcffa !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fcffa );return nil ,false ;};return _acde ,true ;};return nil ,false ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_efc :=NewPdfAnnotation ();_dce :=&PdfAnnotationPolygon {};_dce .PdfAnnotation =_efc ;_dce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efc .SetContext (_dce );return _dce ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_aebag *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_bcae :=&PdfColorPattern {};_ebdac ,_ecabg :=objects [len (objects )-1].(*_da .PdfObjectName );if !_ecabg {_ac .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_bcae .PatternName =*_ebdac ;if len (objects )> 1{_cgde :=objects [0:len (objects )-1];if _aebag .UnderlyingCS ==nil {_ac .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_ag .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_febe ,_bcee :=_aebag .UnderlyingCS .ColorFromPdfObjects (_cgde );if _bcee !=nil {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bcee );return nil ,_bcee ;};_bcae .Color =_febe ;};return _bcae ,nil ;};func _agef ()string {if len (_bbcge )> 0{return _bbcge ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// SetBorderWidth sets the style's border width.
func (_eaec *PdfBorderStyle )SetBorderWidth (width float64 ){_eaec .W =&width };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_edfe :=NewPdfAnnotation ();_deb :=&PdfAnnotationRichMedia {};_deb .PdfAnnotation =_edfe ;_edfe .SetContext (_deb );return _deb ;};func (_gaa *PdfReader )newPdfActionTransFromDict (_cga *_da .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_cga .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_agdbf *Image )samplesTrimPadding (_cggf []uint32 )[]uint32 {_fcdg :=_agdbf .ColorComponents *int (_agdbf .Width )*int (_agdbf .Height );if len (_cggf )==_fcdg {return _cggf ;};_bbad :=make ([]uint32 ,_fcdg );_eafab :=int (_agdbf .Width )*_agdbf .ColorComponents ;var _eedee ,_dgfdef ,_gagda ,_efegd int ;_cgecg :=_eff .BytesPerLine (int (_agdbf .Width ),int (_agdbf .BitsPerComponent ),_agdbf .ColorComponents );for _eedee =0;_eedee < int (_agdbf .Height );_eedee ++{_dgfdef =_eedee *int (_agdbf .Width );_gagda =_eedee *_cgecg ;for _efegd =0;_efegd < _eafab ;_efegd ++{_bbad [_dgfdef +_efegd ]=_cggf [_gagda +_efegd ];};};return _bbad ;};func (_dgdcg *PdfField )inherit (_edcc func (*PdfField )bool )(bool ,error ){_cdded :=map[*PdfField ]bool {};_feaf :=false ;_beff :=_dgdcg ;for _beff !=nil {if _ ,_fdce :=_cdded [_beff ];_fdce {return false ,_ag .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_dcfg :=_edcc (_beff );if _dcfg {_feaf =true ;break ;};_cdded [_beff ]=true ;_beff =_beff .Parent ;};return _feaf ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_afc *PdfAnnotation )GetContext ()PdfModel {if _afc ==nil {return nil ;};return _afc ._gbd ;};func _gbbbd (_cdbb *_da .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cbefe :=PdfShadingType3 {};_fcead :=_cdbb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fcead ==nil {_ac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_baef ,_bfgeb :=_fcead .(*_da .PdfObjectArray );if !_bfgeb {_ac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcead );return nil ,_da .ErrTypeError ;};if _baef .Len ()!=6{_ac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_baef .Len ());return nil ,ErrInvalidAttribute ;};_cbefe .Coords =_baef ;if _bgeaab :=_cdbb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bgeaab !=nil {_bgeaab =_da .TraceToDirectObject (_bgeaab );_beffg ,_dbfef :=_bgeaab .(*_da .PdfObjectArray );if !_dbfef {_ac .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgeaab );return nil ,_da .ErrTypeError ;};_cbefe .Domain =_beffg ;};_fcead =_cdbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fcead ==nil {_ac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cbefe .Function =[]PdfFunction {};if _cdcbb ,_dfec :=_fcead .(*_da .PdfObjectArray );_dfec {for _ ,_cbbg :=range _cdcbb .Elements (){_bdcge ,_acfff :=_eeebd (_cbbg );if _acfff !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acfff );return nil ,_acfff ;};_cbefe .Function =append (_cbefe .Function ,_bdcge );};}else {_ccbccf ,_ebbd :=_eeebd (_fcead );if _ebbd !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebbd );return nil ,_ebbd ;};_cbefe .Function =append (_cbefe .Function ,_ccbccf );};if _fgcff :=_cdbb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fgcff !=nil {_fgcff =_da .TraceToDirectObject (_fgcff );_dfadd ,_bdgegd :=_fgcff .(*_da .PdfObjectArray );if !_bdgegd {_ac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgcff );return nil ,_da .ErrTypeError ;};if _dfadd .Len ()!=2{_ac .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dfadd .Len ());return nil ,ErrInvalidAttribute ;};_cbefe .Extend =_dfadd ;};return &_cbefe ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_dgeb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfda :=vals [0];if _dfda < 0.0||_dfda > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fba :=vals [1];if _fba < 0.0||_fba > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfda :=vals [2];if _bfda < 0.0||_bfda > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baga :=NewPdfColorDeviceRGB (_dfda ,_fba ,_bfda );return _baga ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _da .PdfObject ;Name _da .PdfObject ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_fge :=NewPdfAction ();_cdc :=&PdfActionSetOCGState {};_cdc .PdfAction =_fge ;_fge .SetContext (_cdc );return _cdc ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_affge :map[_da .PdfObject ]struct{}{},_gafba :_bbdf (),_bcgcg :_da .NewParserFromString (txt )};};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_ccgg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_agbb *PdfPage )AppendContentStream (contentStr string )error {_bagb ,_fbbf :=_agbb .GetContentStreams ();if _fbbf !=nil {return _fbbf ;};if len (_bagb )==0{_bagb =[]string {contentStr };return _agbb .SetContentStreams (_bagb ,_da .NewFlateEncoder ());};var _acee _bf .Buffer ;_acee .WriteString (_bagb [len (_bagb )-1]);_acee .WriteString ("\u000a");_acee .WriteString (contentStr );_bagb [len (_bagb )-1]=_acee .String ();return _agbb .SetContentStreams (_bagb ,_da .NewFlateEncoder ());};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _da .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_da .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_aabdbb ,_cffbe :=encoder .EncodeBytes (img .Data );if _cffbe !=nil {_ac .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cffbe );return nil ,_cffbe ;};_gbbbe :=NewXObjectImage ();_baded :=img .Width ;_gcfbf :=img .Height ;_gbbbe .Width =&_baded ;_gbbbe .Height =&_gcfbf ;_fbeab :=img .BitsPerComponent ;_gbbbe .BitsPerComponent =&_fbeab ;_gbbbe .Filter =encoder ;_gbbbe .Stream =_aabdbb ;if cs ==nil {if img .ColorComponents ==1{_gbbbe .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gbbbe .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gbbbe .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ag .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gbbbe .ColorSpace =cs ;};if img ._dbffg {_edfab :=NewXObjectImage ();_edfab .Filter =encoder ;_cabba ,_bfbee :=encoder .EncodeBytes (img ._efgcc );if _bfbee !=nil {_ac .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bfbee );return nil ,_bfbee ;};_edfab .Stream =_cabba ;_edfab .BitsPerComponent =_gbbbe .BitsPerComponent ;_edfab .Width =&img .Width ;_edfab .Height =&img .Height ;_edfab .ColorSpace =NewPdfColorspaceDeviceGray ();_gbbbe .SMask =_edfab .ToPdfObject ();}else {_gbbbe .SMask =xobjIn .SMask ;_gbbbe .ImageMask =xobjIn .ImageMask ;if _gbbbe .ColorSpace .GetNumComponents ()==1{_egaaa (_gbbbe );};};return _gbbbe ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_da .PdfObjectArray ;Domain *_da .PdfObjectArray ;Function []PdfFunction ;Extend *_da .PdfObjectArray ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_abe *PdfAnnotationWidget )Field ()*PdfField {return _abe ._gcec };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_feabg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ae PdfModel ;Type _da .PdfObject ;S _da .PdfObject ;Next _da .PdfObject ;_cf *_da .PdfIndirectObject ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_feabce *PdfFieldSignature )ToPdfObject ()_da .PdfObject {if _feabce .PdfAnnotationWidget !=nil {_feabce .PdfAnnotationWidget .ToPdfObject ();};_feabce .PdfField .ToPdfObject ();_dfef :=_feabce ._cfed ;_ebcaaf :=_dfef .PdfObject .(*_da .PdfObjectDictionary );_ebcaaf .SetIfNotNil ("\u0046\u0054",_da .MakeName ("\u0053\u0069\u0067"));_ebcaaf .SetIfNotNil ("\u004c\u006f\u0063\u006b",_feabce .Lock );_ebcaaf .SetIfNotNil ("\u0053\u0056",_feabce .SV );if _feabce .V !=nil {_ebcaaf .SetIfNotNil ("\u0056",_feabce .V .ToPdfObject ());};return _dfef ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_dag :=&PdfOutlineItem {_fbae :_da .MakeIndirectObject (_da .MakeDict ())};_dag ._acedd =_dag ;return _dag ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_cdga *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _eebc []*PdfField ;_dbedc :=map[*_da .PdfIndirectObject ]struct{}{};for _ ,_bgffb :=range _cdga .PageList {_gceee ,_dfdaf :=_bgffb .GetAnnotations ();if _dfdaf !=nil {return _dfdaf ;};for _ ,_bgaaf :=range _gceee {var _caggf *PdfField ;switch _dabec :=_bgaaf .GetContext ().(type ){case *PdfAnnotationWidget :if _dabec ._gcec !=nil {_caggf =_dabec ._gcec ;break ;};if _ccdb ,_bfefb :=_da .GetIndirect (_dabec .Parent );_bfefb {_caggf ,_dfdaf =_cdga .newPdfFieldFromIndirectObject (_ccdb ,nil );if _dfdaf ==nil {break ;};_ac .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ccdb ,_dfdaf );};if _dabec ._cfd !=nil {_caggf ,_dfdaf =_cdga .newPdfFieldFromIndirectObject (_dabec ._cfd ,nil );if _dfdaf ==nil {break ;};_ac .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dabec ._cfd ,_dfdaf );};};if _caggf ==nil {continue ;};if _ ,_fedgg :=_dbedc [_caggf ._cfed ];_fedgg {continue ;};_dbedc [_caggf ._cfed ]=struct{}{};_eebc =append (_eebc ,_caggf );};};if len (_eebc )==0{return nil ;};if _cdga .AcroForm ==nil {_cdga .AcroForm =NewPdfAcroForm ();};_cdga .AcroForm .Fields =&_eebc ;return nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_aafgc :=PdfColorLab {l ,a ,b };return &_aafgc };

// B returns the value of the B component of the color.
func (_ecda *PdfColorCalRGB )B ()float64 {return float64 (_ecda [1])};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_ddfeb *PdfPageResources )AddExtGState (gsName _da .PdfObjectName ,gsDict _da .PdfObject )error {if _ddfeb .ExtGState ==nil {_ddfeb .ExtGState =_da .MakeDict ();};_bbfeeg :=_ddfeb .ExtGState ;_cgffc ,_fbdd :=_da .TraceToDirectObject (_bbfeeg ).(*_da .PdfObjectDictionary );if !_fbdd {_ac .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bbfeeg ,_da .TraceToDirectObject (_bbfeeg ));return _da .ErrTypeError ;};_cgffc .Set (gsName ,gsDict );return nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _fagdc (_cbcea _da .PdfObject ){_ac .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_cbcea ,_cbcea .String ());if _bdda ,_faeebf :=_cbcea .(*_da .PdfObjectStream );_faeebf {_adfa ,_cgega :=_da .DecodeStream (_bdda );if _cgega !=nil {_ac .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cgega );return ;};_ac .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_adfa );}else if _fegf ,_fcffg :=_cbcea .(*_da .PdfIndirectObject );_fcffg {_ac .Log .Debug ("\u0025\u0054\u0020%\u0076",_fegf .PdfObject ,_fegf .PdfObject );_ac .Log .Debug ("\u0025\u0073",_fegf .PdfObject .String ());};};var _fbgea ="";func (_agcf *PdfAppender )addNewObject (_fgag _da .PdfObject ){if _ ,_efe :=_agcf ._gfgd [_fgag ];!_efe {_agcf ._eacf =append (_agcf ._eacf ,_fgag );_agcf ._gfgd [_fgag ]=struct{}{};};};func (_egf *PdfReader )newPdfAnnotationFromIndirectObject (_cdcf *_da .PdfIndirectObject )(*PdfAnnotation ,error ){_acf ,_afgg :=_cdcf .PdfObject .(*_da .PdfObjectDictionary );if !_afgg {return nil ,_f .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_egf ._gafba .GetModelFromPrimitive (_acf );model !=nil {_gagc ,_dadf :=model .(*PdfAnnotation );if !_dadf {return nil ,_f .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _gagc ,nil ;};_acdd :=&PdfAnnotation {};_acdd ._cfd =_cdcf ;_egf ._gafba .Register (_acf ,_acdd );if _ede :=_acf .Get ("\u0054\u0079\u0070\u0065");_ede !=nil {_dac ,_ddb :=_ede .(*_da .PdfObjectName );if !_ddb {_ac .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ede );}else {if *_dac !="\u0041\u006e\u006eo\u0074"{_ac .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dac );};};};if _dde :=_acf .Get ("\u0052\u0065\u0063\u0074");_dde !=nil {_acdd .Rect =_dde ;};if _abaa :=_acf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_abaa !=nil {_acdd .Contents =_abaa ;};if _ege :=_acf .Get ("\u0050");_ege !=nil {_acdd .P =_ege ;};if _cdeg :=_acf .Get ("\u004e\u004d");_cdeg !=nil {_acdd .NM =_cdeg ;};if _ceeg :=_acf .Get ("\u004d");_ceeg !=nil {_acdd .M =_ceeg ;};if _gee :=_acf .Get ("\u0046");_gee !=nil {_acdd .F =_gee ;};if _eefc :=_acf .Get ("\u0041\u0050");_eefc !=nil {_acdd .AP =_eefc ;};if _gga :=_acf .Get ("\u0041\u0053");_gga !=nil {_acdd .AS =_gga ;};if _bgge :=_acf .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bgge !=nil {_acdd .Border =_bgge ;};if _fbcd :=_acf .Get ("\u0043");_fbcd !=nil {_acdd .C =_fbcd ;};if _fbfg :=_acf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fbfg !=nil {_acdd .StructParent =_fbfg ;};if _cagd :=_acf .Get ("\u004f\u0043");_cagd !=nil {_acdd .OC =_cagd ;};_dgba :=_acf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _dgba ==nil {_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_acdd ._gbd =nil ;return _acdd ,nil ;};_bfdd ,_bbf :=_dgba .(*_da .PdfObjectName );if !_bbf {_ac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dgba );return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_dgba );};switch *_bfdd {case "\u0054\u0065\u0078\u0074":_fcd ,_bage :=_egf .newPdfAnnotationTextFromDict (_acf );if _bage !=nil {return nil ,_bage ;};_fcd .PdfAnnotation =_acdd ;_acdd ._gbd =_fcd ;return _acdd ,nil ;case "\u004c\u0069\u006e\u006b":_cgc ,_bde :=_egf .newPdfAnnotationLinkFromDict (_acf );if _bde !=nil {return nil ,_bde ;};_cgc .PdfAnnotation =_acdd ;_acdd ._gbd =_cgc ;return _acdd ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gfce ,_eefce :=_egf .newPdfAnnotationFreeTextFromDict (_acf );if _eefce !=nil {return nil ,_eefce ;};_gfce .PdfAnnotation =_acdd ;_acdd ._gbd =_gfce ;return _acdd ,nil ;case "\u004c\u0069\u006e\u0065":_feca ,_ebgf :=_egf .newPdfAnnotationLineFromDict (_acf );if _ebgf !=nil {return nil ,_ebgf ;};_feca .PdfAnnotation =_acdd ;_acdd ._gbd =_feca ;_ac .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_acdd ,_acdd );_ac .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_feca ,_feca );_ac .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_feca .PdfAnnotationMarkup ,_feca .PdfAnnotationMarkup );return _acdd ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_gggb ,_dbcc :=_egf .newPdfAnnotationSquareFromDict (_acf );if _dbcc !=nil {return nil ,_dbcc ;};_gggb .PdfAnnotation =_acdd ;_acdd ._gbd =_gggb ;return _acdd ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_dgaf ,_gff :=_egf .newPdfAnnotationCircleFromDict (_acf );if _gff !=nil {return nil ,_gff ;};_dgaf .PdfAnnotation =_acdd ;_acdd ._gbd =_dgaf ;return _acdd ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ecdc ,_fbfa :=_egf .newPdfAnnotationPolygonFromDict (_acf );if _fbfa !=nil {return nil ,_fbfa ;};_ecdc .PdfAnnotation =_acdd ;_acdd ._gbd =_ecdc ;return _acdd ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_aeeb ,_aeab :=_egf .newPdfAnnotationPolyLineFromDict (_acf );if _aeab !=nil {return nil ,_aeab ;};_aeeb .PdfAnnotation =_acdd ;_acdd ._gbd =_aeeb ;return _acdd ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_bfbc ,_abce :=_egf .newPdfAnnotationHighlightFromDict (_acf );if _abce !=nil {return nil ,_abce ;};_bfbc .PdfAnnotation =_acdd ;_acdd ._gbd =_bfbc ;return _acdd ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_fbec ,_ddd :=_egf .newPdfAnnotationUnderlineFromDict (_acf );if _ddd !=nil {return nil ,_ddd ;};_fbec .PdfAnnotation =_acdd ;_acdd ._gbd =_fbec ;return _acdd ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_ccd ,_dceb :=_egf .newPdfAnnotationSquigglyFromDict (_acf );if _dceb !=nil {return nil ,_dceb ;};_ccd .PdfAnnotation =_acdd ;_acdd ._gbd =_ccd ;return _acdd ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_fggg ,_dbec :=_egf .newPdfAnnotationStrikeOut (_acf );if _dbec !=nil {return nil ,_dbec ;};_fggg .PdfAnnotation =_acdd ;_acdd ._gbd =_fggg ;return _acdd ,nil ;case "\u0043\u0061\u0072e\u0074":_cfgeg ,_ageef :=_egf .newPdfAnnotationCaretFromDict (_acf );if _ageef !=nil {return nil ,_ageef ;};_cfgeg .PdfAnnotation =_acdd ;_acdd ._gbd =_cfgeg ;return _acdd ,nil ;case "\u0053\u0074\u0061m\u0070":_edbb ,_cgab :=_egf .newPdfAnnotationStampFromDict (_acf );if _cgab !=nil {return nil ,_cgab ;};_edbb .PdfAnnotation =_acdd ;_acdd ._gbd =_edbb ;return _acdd ,nil ;case "\u0049\u006e\u006b":_bcd ,_cdb :=_egf .newPdfAnnotationInkFromDict (_acf );if _cdb !=nil {return nil ,_cdb ;};_bcd .PdfAnnotation =_acdd ;_acdd ._gbd =_bcd ;return _acdd ,nil ;case "\u0050\u006f\u0070u\u0070":_ccb ,_bga :=_egf .newPdfAnnotationPopupFromDict (_acf );if _bga !=nil {return nil ,_bga ;};_ccb .PdfAnnotation =_acdd ;_acdd ._gbd =_ccb ;return _acdd ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_fbfb ,_cecb :=_egf .newPdfAnnotationFileAttachmentFromDict (_acf );if _cecb !=nil {return nil ,_cecb ;};_fbfb .PdfAnnotation =_acdd ;_acdd ._gbd =_fbfb ;return _acdd ,nil ;case "\u0053\u006f\u0075n\u0064":_acfc ,_ddbg :=_egf .newPdfAnnotationSoundFromDict (_acf );if _ddbg !=nil {return nil ,_ddbg ;};_acfc .PdfAnnotation =_acdd ;_acdd ._gbd =_acfc ;return _acdd ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_add ,_cdgd :=_egf .newPdfAnnotationRichMediaFromDict (_acf );if _cdgd !=nil {return nil ,_cdgd ;};_add .PdfAnnotation =_acdd ;_acdd ._gbd =_add ;return _acdd ,nil ;case "\u004d\u006f\u0076i\u0065":_daeb ,_agc :=_egf .newPdfAnnotationMovieFromDict (_acf );if _agc !=nil {return nil ,_agc ;};_daeb .PdfAnnotation =_acdd ;_acdd ._gbd =_daeb ;return _acdd ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cab ,_ccda :=_egf .newPdfAnnotationScreenFromDict (_acf );if _ccda !=nil {return nil ,_ccda ;};_cab .PdfAnnotation =_acdd ;_acdd ._gbd =_cab ;return _acdd ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_dgcf ,_feb :=_egf .newPdfAnnotationWidgetFromDict (_acf );if _feb !=nil {return nil ,_feb ;};_dgcf .PdfAnnotation =_acdd ;_acdd ._gbd =_dgcf ;return _acdd ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_agga ,_abff :=_egf .newPdfAnnotationPrinterMarkFromDict (_acf );if _abff !=nil {return nil ,_abff ;};_agga .PdfAnnotation =_acdd ;_acdd ._gbd =_agga ;return _acdd ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_afggf ,_fgc :=_egf .newPdfAnnotationTrapNetFromDict (_acf );if _fgc !=nil {return nil ,_fgc ;};_afggf .PdfAnnotation =_acdd ;_acdd ._gbd =_afggf ;return _acdd ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_dbed ,_cbbf :=_egf .newPdfAnnotationWatermarkFromDict (_acf );if _cbbf !=nil {return nil ,_cbbf ;};_dbed .PdfAnnotation =_acdd ;_acdd ._gbd =_dbed ;return _acdd ,nil ;case "\u0033\u0044":_dea ,_faa :=_egf .newPdfAnnotation3DFromDict (_acf );if _faa !=nil {return nil ,_faa ;};_dea .PdfAnnotation =_acdd ;_acdd ._gbd =_dea ;return _acdd ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ggc ,_fgeg :=_egf .newPdfAnnotationProjectionFromDict (_acf );if _fgeg !=nil {return nil ,_fgeg ;};_ggc .PdfAnnotation =_acdd ;_acdd ._gbd =_ggc ;return _acdd ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_dega ,_efd :=_egf .newPdfAnnotationRedactFromDict (_acf );if _efd !=nil {return nil ,_efd ;};_dega .PdfAnnotation =_acdd ;_acdd ._gbd =_dega ;return _acdd ,nil ;};_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_bfdd );return nil ,nil ;};func (_afda *PdfReader )newPdfAnnotationHighlightFromDict (_cgcg *_da .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_feace :=PdfAnnotationHighlight {};_eaae ,_ded :=_afda .newPdfAnnotationMarkupFromDict (_cgcg );if _ded !=nil {return nil ,_ded ;};_feace .PdfAnnotationMarkup =_eaae ;_feace .QuadPoints =_cgcg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_feace ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_baged *PdfWriter )GetOptimizer ()Optimizer {return _baged ._dbcgc };

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_gbd PdfModel ;Rect _da .PdfObject ;Contents _da .PdfObject ;P _da .PdfObject ;NM _da .PdfObject ;M _da .PdfObject ;F _da .PdfObject ;AP _da .PdfObject ;AS _da .PdfObject ;Border _da .PdfObject ;C _da .PdfObject ;StructParent _da .PdfObject ;OC _da .PdfObject ;_cfd *_da .PdfIndirectObject ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _da .StreamEncoder )(*XObjectImage ,error ){_gcaag :=NewXObjectImage ();return UpdateXObjectImageFromImage (_gcaag ,img ,cs ,encoder );};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bccg *PdfAppender )Write (w _gg .Writer )error {if _bccg ._dffd {return _ag .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_debge :=NewPdfWriter ();_befa ,_agdc :=_da .GetDict (_debge ._egaee );if !_agdc {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_debc ,_agdc :=_befa .Get ("\u004b\u0069\u0064\u0073").(*_da .PdfObjectArray );if !_agdc {return _ag .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_cbae ,_agdc :=_befa .Get ("\u0043\u006f\u0075n\u0074").(*_da .PdfObjectInteger );if !_agdc {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_adda :=_bccg ._adf ._bcgcg ;_ddca :=_adda .GetTrailer ();if _ddca ==nil {return _ag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ceab ,_agdc :=_da .GetIndirect (_ddca .Get ("\u0052\u006f\u006f\u0074"));if !_agdc {return _ag .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_abdc ,_agdc :=_da .GetDict (_ceab );if !_agdc {_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ceab ,*_ddca );return _ag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_caaf :=range _abdc .Keys (){if _debge ._ebdee .Get (_caaf )==nil {_dfed :=_abdc .Get (_caaf );_debge ._ebdee .Set (_caaf ,_dfed );};};if _bccg ._bcbc !=nil {_debge ._ebdee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bccg ._bcbc .ToPdfObject ());_bccg .updateObjectsDeep (_bccg ._bcbc .ToPdfObject (),nil );};_bccg .addNewObject (_debge ._bggda );_bccg .addNewObject (_debge ._eage );_bcdd :=false ;if len (_bccg ._adf .PageList )!=len (_bccg ._cadf ){_bcdd =true ;}else {for _ebda :=range _bccg ._adf .PageList {switch {case _bccg ._cadf [_ebda ]==_bccg ._adf .PageList [_ebda ]:case _bccg ._cadf [_ebda ]==_bccg .Reader .PageList [_ebda ]:default:_bcdd =true ;};if _bcdd {break ;};};};if _bcdd {_bccg .updateObjectsDeep (_debge ._egaee ,nil );}else {_bccg ._ecad [_debge ._egaee ]=struct{}{};};_debge ._egaee .ObjectNumber =_bccg .Reader ._cbecc .ObjectNumber ;_bccg ._geef [_debge ._egaee ]=_bccg .Reader ._cbecc .ObjectNumber ;_agfeg :=[]_da .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_adbc :=range _bccg ._cadf {_gabd :=_adbc .ToPdfObject ();*_cbae =*_cbae +1;if _deeg ,_bdbgb :=_gabd .(*_da .PdfIndirectObject );_bdbgb &&_deeg .GetParser ()==_bccg ._adf ._bcgcg {_debc .Append (&_deeg .PdfObjectReference );continue ;};if _fdfg ,_efbf :=_da .GetDict (_gabd );_efbf {_dege ,_aebb :=_fdfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_da .PdfIndirectObject );for _aebb {_ac .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dege );_egeab ,_cefa :=_dege .PdfObject .(*_da .PdfObjectDictionary );if !_cefa {return _ag .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_ecfa :=range _agfeg {_ac .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ecfa );if _fdfg .Get (_ecfa )!=nil {_ac .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _dffb :=_egeab .Get (_ecfa );_dffb !=nil {_ac .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ecfa );_fdfg .Set (_ecfa ,_dffb );};};_dege ,_aebb =_egeab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_da .PdfIndirectObject );_ac .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_egeab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fdfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_debge ._egaee );};_bccg .updateObjectsDeep (_gabd ,nil );_debc .Append (_gabd );};if _ ,_acdcf :=_bccg ._aecg .Seek (0,_gg .SeekStart );_acdcf !=nil {return _acdcf ;};_dcga :=make (map[SignatureHandler ]_gg .Writer );_bdaf :=_da .MakeArray ();for _ ,_egbb :=range _bccg ._eacf {if _aeba ,_bcaa :=_da .GetIndirect (_egbb );_bcaa {if _abee ,_ada :=_aeba .PdfObject .(*pdfSignDictionary );_ada {_ecef :=*_abee ._cbeag ;var _ggge error ;_dcga [_ecef ],_ggge =_ecef .NewDigest (_abee ._cbcdg );if _ggge !=nil {return _ggge ;};_bdaf .Append (_da .MakeInteger (0xfffff),_da .MakeInteger (0xfffff));};};};if _bdaf .Len ()> 0{_bdaf .Append (_da .MakeInteger (0xfffff),_da .MakeInteger (0xfffff));};for _ ,_fbcdd :=range _bccg ._eacf {if _aaea ,_aeda :=_da .GetIndirect (_fbcdd );_aeda {if _fdac ,_bdbc :=_aaea .PdfObject .(*pdfSignDictionary );_bdbc {_fdac .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bdaf );};};};_ebgg :=len (_dcga )> 0;var _cbdc _gg .Reader =_bccg ._aecg ;if _ebgg {_fcga :=make ([]_gg .Writer ,0,len (_dcga ));for _ ,_gdgdg :=range _dcga {_fcga =append (_fcga ,_gdgdg );};_cbdc =_gg .TeeReader (_bccg ._aecg ,_gg .MultiWriter (_fcga ...));};_cgad ,_gagbe :=_gg .Copy (w ,_cbdc );if _gagbe !=nil {return _gagbe ;};if len (_bccg ._eacf )==0{return nil ;};_debge ._gefgd =_cgad ;_debge .ObjNumOffset =_bccg ._faaa ;_debge ._afcac =true ;_debge ._ebabd =_bccg ._debg ;_debge ._eacgf =_bccg ._bfeb ;_debge ._fede =_bccg ._ega ;_debge ._fbdb =_bccg ._adf .PdfVersion ().Minor ;_debge ._afcee =_bccg ._geef ;_eee :=_bccg ._afbf .GetXrefType ();if _eee !=nil {_gda :=*_eee ==_da .XrefTypeObjectStream ;_debge ._egbdd =&_gda ;};_debge ._cgag =map[_da .PdfObject ]struct{}{};_debge ._fdcfd =[]_da .PdfObject {};for _ ,_feeef :=range _bccg ._eacf {if _ ,_ffce :=_bccg ._ecad [_feeef ];_ffce {continue ;};_debge .addObject (_feeef );};_aefc :=w ;if _ebgg {_aefc =_bf .NewBuffer (nil );};if _fafc :=_debge .Write (_aefc );_fafc !=nil {return _fafc ;};if _ebgg {_bcag :=_aefc .(*_bf .Buffer ).Bytes ();_gbbg :=_da .MakeArray ();var _bgca []*pdfSignDictionary ;var _adcg int64 ;for _ ,_ageeg :=range _debge ._fdcfd {if _cddfg ,_bcef :=_da .GetIndirect (_ageeg );_bcef {if _dda ,_acff :=_cddfg .PdfObject .(*pdfSignDictionary );_acff {_bgca =append (_bgca ,_dda );_dfaa :=_dda ._eagcf +int64 (_dda ._gfcef );_gbbg .Append (_da .MakeInteger (_adcg ),_da .MakeInteger (_dfaa -_adcg ));_adcg =_dda ._eagcf +int64 (_dda ._afccd );};};};_gbbg .Append (_da .MakeInteger (_adcg ),_da .MakeInteger (_cgad +int64 (len (_bcag ))-_adcg ));_cddfd :=[]byte (_gbbg .WriteString ());for _ ,_abeec :=range _bgca {_cebd :=int (_abeec ._eagcf -_cgad );for _gagf :=_abeec ._dgaeb ;_gagf < _abeec ._bbeac ;_gagf ++{_bcag [_cebd +_gagf ]=' ';};_gfea :=_bcag [_cebd +_abeec ._dgaeb :_cebd +_abeec ._bbeac ];copy (_gfea ,_cddfd );};var _cfcf int ;for _ ,_ecfb :=range _bgca {_bffc :=int (_ecfb ._eagcf -_cgad );_cdffb :=_bcag [_cfcf :_bffc +_ecfb ._gfcef ];_cfea :=*_ecfb ._cbeag ;_dcga [_cfea ].Write (_cdffb );_cfcf =_bffc +_ecfb ._afccd ;};for _ ,_fbceb :=range _bgca {_ddcfc :=_bcag [_cfcf :];_bfcd :=*_fbceb ._cbeag ;_dcga [_bfcd ].Write (_ddcfc );};for _ ,_gacg :=range _bgca {_dbdb :=int (_gacg ._eagcf -_cgad );_eebe :=*_gacg ._cbeag ;_bfdfg :=_dcga [_eebe ];if _degd :=_eebe .Sign (_gacg ._cbcdg ,_bfdfg );_degd !=nil {return _degd ;};_gacg ._cbcdg .ByteRange =_gbbg ;_bbebe :=[]byte (_gacg ._cbcdg .Contents .WriteString ());for _gfdd :=_gacg ._dgaeb ;_gfdd < _gacg ._bbeac ;_gfdd ++{_bcag [_dbdb +_gfdd ]=' ';};for _ggcbc :=_gacg ._gfcef ;_ggcbc < _gacg ._afccd ;_ggcbc ++{_bcag [_dbdb +_ggcbc ]=' ';};_fbdf :=_bcag [_dbdb +_gacg ._dgaeb :_dbdb +_gacg ._bbeac ];copy (_fbdf ,_cddfd );_fbdf =_bcag [_dbdb +_gacg ._gfcef :_dbdb +_gacg ._afccd ];copy (_fbdf ,_bbebe );};_cdfd :=_bf .NewBuffer (_bcag );_ ,_gagbe =_gg .Copy (w ,_cdfd );if _gagbe !=nil {return _gagbe ;};};_bccg ._dffd =true ;return nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _da .PdfObject ;Dest _da .PdfObject ;H _da .PdfObject ;PA _da .PdfObject ;QuadPoints _da .PdfObject ;BS _da .PdfObject ;_aega *PdfAction ;_gfd *PdfReader ;};func _cbdcf (_cdaa *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_cdaa }};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_fffgg *Image )GetSamples ()[]uint32 {_cedg :=_df .ResampleBytes (_fffgg .Data ,int (_fffgg .BitsPerComponent ));if _fffgg .BitsPerComponent < 8{_cedg =_fffgg .samplesTrimPadding (_cedg );};_beggf :=int (_fffgg .Width )*int (_fffgg .Height )*_fffgg .ColorComponents ;if len (_cedg )< _beggf {_ac .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_cedg ),_beggf );return _cedg ;}else if len (_cedg )> _beggf {_ac .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_cedg ),_beggf );_cedg =_cedg [:_beggf ];};return _cedg ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_beaf *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ac .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ac .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_ac .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ac .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_ccab ,_baee :=_eff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._efgcc ,img ._dfff );if _baee !=nil {return Image {},_baee ;};_eafc ,_baee :=_eff .NRGBAConverter .Convert (_ccab );if _baee !=nil {return Image {},_baee ;};return _abag (_eafc .Base ()),nil ;};func (_dab *PdfReader )newPdfActionSoundFromDict (_bad *_da .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bad .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bad .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bad .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bad .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bad .Get ("\u004d\u0069\u0078")},nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_da .PdfObjectArray ;Domain *_da .PdfObjectArray ;Function []PdfFunction ;Extend *_da .PdfObjectArray ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToPdfObject implements interface PdfModel.
func (_dbd *PdfActionSubmitForm )ToPdfObject ()_da .PdfObject {_dbd .PdfAction .ToPdfObject ();_dgd :=_dbd ._cf ;_fbc :=_dgd .PdfObject .(*_da .PdfObjectDictionary );_fbc .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeSubmitForm )));if _dbd .F !=nil {_fbc .Set ("\u0046",_dbd .F .ToPdfObject ());};_fbc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dbd .Fields );_fbc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dbd .Flags );return _dgd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fdbg pdfCIDFontType2 )GetCharMetrics (code _cee .CharCode )(_dg .CharMetrics ,bool ){if _bfbg ,_agcd :=_fdbg ._faag [code ];_agcd {return _dg .CharMetrics {Wx :float64 (_bfbg )},true ;};_gbda :=rune (code );_eeabc ,_fgfd :=_fdbg ._dffc [_gbda ];if !_fgfd {_eeabc =int (_fdbg ._eeef );};return _dg .CharMetrics {Wx :float64 (_eeabc )},true ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_agg :=NewPdfAnnotation ();_dabe :=&PdfAnnotationWatermark {};_dabe .PdfAnnotation =_agg ;_agg .SetContext (_dabe );return _dabe ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _da .PdfObject ;V _da .PdfObject ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fefbf :=&XObjectForm {};_afgc :=&_da .PdfObjectStream {};_afgc .PdfObjectDictionary =_da .MakeDict ();_fefbf ._faafe =_afgc ;return _fefbf ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_afb :=NewPdfAction ();_cea :=&PdfActionNamed {};_cea .PdfAction =_afb ;_afb .SetContext (_cea );return _cea ;};

// String returns a string that describes `base`.
func (_fgca fontCommon )String ()string {return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_fgca .coreString ());};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_cebdg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dbfd :=_cebdg ._gcgf ;_dbfd !=nil {return _dbfd ;};return _cebdg ._bgfd ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_fagb *BorderStyle )GetPdfName ()string {switch *_fagb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_aag :=NewPdfAnnotation ();_gfe :=&PdfAnnotationPrinterMark {};_gfe .PdfAnnotation =_aag ;_aag .SetContext (_gfe );return _gfe ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_efbcc *PdfPageResources )GetXObjectImageByName (keyName _da .PdfObjectName )(*XObjectImage ,error ){_dgef ,_cefg :=_efbcc .GetXObjectByName (keyName );if _dgef ==nil {return nil ,nil ;};if _cefg !=XObjectTypeImage {return nil ,_ag .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_afgdbg ,_deaf :=NewXObjectImageFromStream (_dgef );if _deaf !=nil {return nil ,_deaf ;};return _afgdbg ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_gaeg *XObjectImage )GetContainingPdfObject ()_da .PdfObject {return _gaeg ._cdgc };func _geebd (_dgbac *_da .PdfObjectDictionary ,_acdbf *fontCommon )(*pdfCIDFontType2 ,error ){if _acdbf ._bffg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_acdbf );return nil ,_da .ErrRangeError ;};_baeb :=_ecdag (_acdbf );_addeg ,_aagg :=_da .GetDict (_dgbac .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aagg {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_acdbf );return nil ,ErrRequiredAttributeMissing ;};_baeb .CIDSystemInfo =_addeg ;_baeb .DW =_dgbac .Get ("\u0044\u0057");_baeb .W =_dgbac .Get ("\u0057");_baeb .DW2 =_dgbac .Get ("\u0044\u0057\u0032");_baeb .W2 =_dgbac .Get ("\u0057\u0032");_baeb .CIDToGIDMap =_dgbac .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_baeb ._eeef =1000.0;if _affd ,_afged :=_da .GetNumberAsFloat (_baeb .DW );_afged ==nil {_baeb ._eeef =_affd ;};_dcfeaa ,_cbfdg :=_aecd (_baeb .W );if _cbfdg !=nil {return nil ,_cbfdg ;};if _dcfeaa ==nil {_dcfeaa =map[_cee .CharCode ]float64 {};};_baeb ._faag =_dcfeaa ;return _baeb ,nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dgeab :=PdfDate {};_cgcece :=_dabab .FindAllStringSubmatch (dateStr ,1);if len (_cgcece )< 1{return _dgeab ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_cgcece [0])!=10{return _dgeab ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_dgeab ._aaaec ,_ =_fa .ParseInt (_cgcece [0][1],10,32);_dgeab ._ddae ,_ =_fa .ParseInt (_cgcece [0][2],10,32);_dgeab ._dafbcd ,_ =_fa .ParseInt (_cgcece [0][3],10,32);_dgeab ._cegad ,_ =_fa .ParseInt (_cgcece [0][4],10,32);_dgeab ._ddcba ,_ =_fa .ParseInt (_cgcece [0][5],10,32);_dgeab ._cebdde ,_ =_fa .ParseInt (_cgcece [0][6],10,32);if len (_cgcece [0][7])> 0{_dgeab ._bgbde =_cgcece [0][7][0];}else {_dgeab ._bgbde ='+';};if len (_cgcece [0][8])> 0{_dgeab ._gbgcc ,_ =_fa .ParseInt (_cgcece [0][8],10,32);}else {_dgeab ._gbgcc =0;};if len (_cgcece [0][9])> 0{_dgeab ._gabad ,_ =_fa .ParseInt (_cgcece [0][9],10,32);}else {_dgeab ._gabad =0;};return _dgeab ,nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cdedd *PdfPageResources )GetXObjectByName (keyName _da .PdfObjectName )(*_da .PdfObjectStream ,XObjectType ){if _cdedd .XObject ==nil {return nil ,XObjectTypeUndefined ;};_eddac ,_cdbcb :=_da .TraceToDirectObject (_cdedd .XObject ).(*_da .PdfObjectDictionary );if !_cdbcb {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_da .TraceToDirectObject (_cdedd .XObject ));return nil ,XObjectTypeUndefined ;};if _adac :=_eddac .Get (keyName );_adac !=nil {_edebb ,_aabag :=_da .GetStream (_adac );if !_aabag {_ac .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_adac );return nil ,XObjectTypeUndefined ;};_ddabf :=_edebb .PdfObjectDictionary ;_egfg ,_aabag :=_da .TraceToDirectObject (_ddabf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_da .PdfObjectName );if !_aabag {_ac .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_ddabf .String ());return nil ,XObjectTypeUndefined ;};if *_egfg =="\u0049\u006d\u0061g\u0065"{return _edebb ,XObjectTypeImage ;}else if *_egfg =="\u0046\u006f\u0072\u006d"{return _edebb ,XObjectTypeForm ;}else if *_egfg =="\u0050\u0053"{return _edebb ,XObjectTypePS ;}else {_ac .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_egfg );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};func _efec (_cdbfg *_da .PdfObjectDictionary )(*PdfShadingType6 ,error ){_gfddg :=PdfShadingType6 {};_cfcbcc :=_cdbfg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cfcbcc ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ffcca ,_bafdf :=_cfcbcc .(*_da .PdfObjectInteger );if !_bafdf {_ac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfcbcc );return nil ,_da .ErrTypeError ;};_gfddg .BitsPerCoordinate =_ffcca ;_cfcbcc =_cdbfg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cfcbcc ==nil {_ac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ffcca ,_bafdf =_cfcbcc .(*_da .PdfObjectInteger );if !_bafdf {_ac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cfcbcc );return nil ,_da .ErrTypeError ;};_gfddg .BitsPerComponent =_ffcca ;_cfcbcc =_cdbfg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cfcbcc ==nil {_ac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_ffcca ,_bafdf =_cfcbcc .(*_da .PdfObjectInteger );if !_bafdf {_ac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cfcbcc );return nil ,_da .ErrTypeError ;};_gfddg .BitsPerComponent =_ffcca ;_cfcbcc =_cdbfg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cfcbcc ==nil {_ac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_feddf ,_bafdf :=_cfcbcc .(*_da .PdfObjectArray );if !_bafdf {_ac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfcbcc );return nil ,_da .ErrTypeError ;};_gfddg .Decode =_feddf ;if _bgbaf :=_cdbfg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bgbaf !=nil {_gfddg .Function =[]PdfFunction {};if _fgccg ,_gcdba :=_bgbaf .(*_da .PdfObjectArray );_gcdba {for _ ,_ecead :=range _fgccg .Elements (){_afbac ,_cabgb :=_eeebd (_ecead );if _cabgb !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cabgb );return nil ,_cabgb ;};_gfddg .Function =append (_gfddg .Function ,_afbac );};}else {_bfca ,_faafg :=_eeebd (_bgbaf );if _faafg !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_faafg );return nil ,_faafg ;};_gfddg .Function =append (_gfddg .Function ,_bfca );};};return &_gfddg ,nil ;};

// GetBorderWidth returns the border style's width.
func (_bgdgd *PdfBorderStyle )GetBorderWidth ()float64 {if _bgdgd .W ==nil {return 1;};return *_bgdgd .W ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_ageefc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_ageefc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_ageefc ._bcbc =acroForm ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_dfcb :=&PdfColorspaceLab {};_dfcb .BlackPoint =[]float64 {0.0,0.0,0.0};_dfcb .Range =[]float64 {-100,100,-100,100};return _dfcb ;};

// ToPdfObject implements interface PdfModel.
func (_agee *PdfActionJavaScript )ToPdfObject ()_da .PdfObject {_agee .PdfAction .ToPdfObject ();_cca :=_agee ._cf ;_dfc :=_cca .PdfObject .(*_da .PdfObjectDictionary );_dfc .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeJavaScript )));_dfc .SetIfNotNil ("\u004a\u0053",_agee .JS );return _cca ;};func _aeabf (_effcg *_da .PdfObjectDictionary )(*PdfShadingPattern ,error ){_eafae :=&PdfShadingPattern {};_fgbee :=_effcg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _fgbee ==nil {_ac .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfeea ,_gdbdb :=_ggcf (_fgbee );if _gdbdb !=nil {_ac .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gdbdb );return nil ,_gdbdb ;};_eafae .Shading =_cfeea ;if _geafg :=_effcg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_geafg !=nil {_fddd ,_caaca :=_geafg .(*_da .PdfObjectArray );if !_caaca {_ac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_geafg );return nil ,_da .ErrTypeError ;};_eafae .Matrix =_fddd ;};if _fgcgb :=_effcg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fgcgb !=nil {_eafae .ExtGState =_fgcgb ;};return _eafae ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cdggc =title };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_baddc *PdfShadingType2 )ToPdfObject ()_da .PdfObject {_baddc .PdfShading .ToPdfObject ();_afbcb ,_cbeggb :=_baddc .getShadingDict ();if _cbeggb !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _afbcb ==nil {_ac .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _baddc .Coords !=nil {_afbcb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_baddc .Coords );};if _baddc .Domain !=nil {_afbcb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_baddc .Domain );};if _baddc .Function !=nil {if len (_baddc .Function )==1{_afbcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_baddc .Function [0].ToPdfObject ());}else {_gccda :=_da .MakeArray ();for _ ,_gcfce :=range _baddc .Function {_gccda .Append (_gcfce .ToPdfObject ());};_afbcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gccda );};};if _baddc .Extend !=nil {_afbcb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_baddc .Extend );};return _baddc ._fgfdc ;};type pdfFontType0 struct{fontCommon ;_dccgb *_da .PdfIndirectObject ;_eceec _cee .TextEncoder ;Encoding _da .PdfObject ;DescendantFont *PdfFont ;_afec *_age .CMap ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_deag :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_deag .N =N ;return _deag ,nil ;};func (_ffde *PdfReader )newPdfActionImportDataFromDict (_gdcf *_da .PdfObjectDictionary )(*PdfActionImportData ,error ){_dcd ,_ggffe :=_caff (_gdcf .Get ("\u0046"));if _ggffe !=nil {return nil ,_ggffe ;};return &PdfActionImportData {F :_dcd },nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_dbbbg :=&PdfPageResources {};_dbbbg ._dgcae =_da .MakeDict ();return _dbbbg ;};func (_gedfb *PdfReader )newPdfSignatureFromIndirect (_eegb *_da .PdfIndirectObject )(*PdfSignature ,error ){_deded ,_agebf :=_eegb .PdfObject .(*_da .PdfObjectDictionary );if !_agebf {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _beeag ,_ddebc :=_gedfb ._gafba .GetModelFromPrimitive (_eegb ).(*PdfSignature );_ddebc {return _beeag ,nil ;};_bdcc :=&PdfSignature {};_bdcc ._egggf =_eegb ;_bdcc .Type ,_ =_da .GetName (_deded .Get ("\u0054\u0079\u0070\u0065"));_bdcc .Filter ,_agebf =_da .GetName (_deded .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_agebf {_ac .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_bdcc .SubFilter ,_ =_da .GetName (_deded .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_bdcc .Contents ,_agebf =_da .GetString (_deded .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_agebf {_ac .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_bdcc .Cert =_deded .Get ("\u0043\u0065\u0072\u0074");_bdcc .ByteRange ,_ =_da .GetArray (_deded .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_bdcc .Reference ,_ =_da .GetArray (_deded .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_bdcc .Changes ,_ =_da .GetArray (_deded .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_bdcc .Name ,_ =_da .GetString (_deded .Get ("\u004e\u0061\u006d\u0065"));_bdcc .M ,_ =_da .GetString (_deded .Get ("\u004d"));_bdcc .Location ,_ =_da .GetString (_deded .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_bdcc .Reason ,_ =_da .GetString (_deded .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_bdcc .ContactInfo ,_ =_da .GetString (_deded .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_bdcc .R ,_ =_da .GetInt (_deded .Get ("\u0052"));_bdcc .V ,_ =_da .GetInt (_deded .Get ("\u0056"));_bdcc .PropBuild ,_ =_da .GetDict (_deded .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_bdcc .PropAuthTime ,_ =_da .GetInt (_deded .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_bdcc .PropAuthType ,_ =_da .GetName (_deded .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _bdcc ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gfbb :=&PdfAppender {_aecg :reader ._cgbad ,Reader :reader ,_afbf :reader ._bcgcg ,_cdeef :reader ._affge };if _gaaa ,_aegb :=_gfbb ._aecg .Seek (0,_gg .SeekEnd );_aegb !=nil {return nil ,_aegb ;}else {_gfbb ._ega =_gaaa ;};if _ ,_bcf :=_gfbb ._aecg .Seek (0,_gg .SeekStart );_bcf !=nil {return nil ,_bcf ;};var _gbeb error ;_gfbb ._adf ,_gbeb =NewPdfReader (_gfbb ._aecg );if _gbeb !=nil {return nil ,_gbeb ;};for _ ,_cegb :=range _gfbb .Reader .GetObjectNums (){if _gfbb ._faaa < _cegb {_gfbb ._faaa =_cegb ;};};_gfbb ._debg =_gfbb ._afbf .GetXrefTable ();_gfbb ._bfeb =_gfbb ._afbf .GetXrefOffset ();_gfbb ._gfgd =make (map[_da .PdfObject ]struct{});for _ ,_afcc :=range _gfbb ._adf .PageList {_gfbb ._cadf =append (_gfbb ._cadf ,_afcc );};_gfbb ._geef =make (map[_da .PdfObject ]int64 );_gfbb ._ecad =make (map[_da .PdfObject ]struct{});_gfbb ._bcbc =_gfbb ._adf .AcroForm ;return _gfbb ,nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_acc :=&PdfAnnotation {};_acc ._cfd =_da .MakeIndirectObject (_da .MakeDict ());return _acc ;};func (_eafe *PdfAcroForm )filteredFields (_becf FieldFilterFunc ,_egga bool )[]*PdfField {if _eafe ==nil {return nil ;};return _eeeb (_eafe .Fields ,_becf ,_egga );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _da .PdfObject ;NewWindow _da .PdfObject ;T _da .PdfObject ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_fbeg :=NewPdfAnnotation ();_cfgg :=&PdfAnnotationPolyLine {};_cfgg .PdfAnnotation =_fbeg ;_cfgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbeg .SetContext (_cfgg );return _cfgg ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;VerticesPerRow *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_aef :=NewPdfAnnotation ();_fgf :=&PdfAnnotationMovie {};_fgf .PdfAnnotation =_aef ;_aef .SetContext (_fgf );return _fgf ;};func _beggg ()string {return _adcac };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_da .PdfObjectArray ;};

// Items returns all children outline items.
func (_ebdbd *OutlineItem )Items ()[]*OutlineItem {return _ebdbd .Entries };

// AddPages adds pages to be appended to the end of the source PDF.
func (_feee *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_gagb :=range pages {_gagb =_gagb .Duplicate ();_ccaad (_gagb );_feee ._cadf =append (_feee ._cadf ,_gagb );};return ;};func _caff (_fde _da .PdfObject )(*PdfFilespec ,error ){if _fde ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_fde );};func _fbba (_egae _da .PdfObject )(*PdfFunctionType2 ,error ){_feceb :=&PdfFunctionType2 {};var _eaca *_da .PdfObjectDictionary ;if _adeaa ,_dcbe :=_egae .(*_da .PdfIndirectObject );_dcbe {_faab ,_fagf :=_adeaa .PdfObject .(*_da .PdfObjectDictionary );if !_fagf {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_feceb ._gbecf =_adeaa ;_eaca =_faab ;}else if _cacge ,_dgcag :=_egae .(*_da .PdfObjectDictionary );_dgcag {_eaca =_cacge ;}else {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ac .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_eaca .String ());_fcca ,_ggdb :=_da .TraceToDirectObject (_eaca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_ggdb {_ac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fcca .Len ()< 0||_fcca .Len ()%2!=0{_ac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bacdc ,_fgbcf :=_fcca .ToFloat64Array ();if _fgbcf !=nil {return nil ,_fgbcf ;};_feceb .Domain =_bacdc ;_fcca ,_ggdb =_da .TraceToDirectObject (_eaca .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if _ggdb {if _fcca .Len ()< 0||_fcca .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fedgf ,_gcgee :=_fcca .ToFloat64Array ();if _gcgee !=nil {return nil ,_gcgee ;};_feceb .Range =_fedgf ;};_fcca ,_ggdb =_da .TraceToDirectObject (_eaca .Get ("\u0043\u0030")).(*_da .PdfObjectArray );if _ggdb {_fggc ,_aeecc :=_fcca .ToFloat64Array ();if _aeecc !=nil {return nil ,_aeecc ;};_feceb .C0 =_fggc ;};_fcca ,_ggdb =_da .TraceToDirectObject (_eaca .Get ("\u0043\u0031")).(*_da .PdfObjectArray );if _ggdb {_cgeba ,_edgb :=_fcca .ToFloat64Array ();if _edgb !=nil {return nil ,_edgb ;};_feceb .C1 =_cgeba ;};if len (_feceb .C0 )!=len (_feceb .C1 ){_ac .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_da .ErrRangeError ;};N ,_fgbcf :=_da .GetNumberAsFloat (_da .TraceToDirectObject (_eaca .Get ("\u004e")));if _fgbcf !=nil {_ac .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_eaca .String ());return nil ,_fgbcf ;};_feceb .N =N ;return _feceb ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_bgdacd *Image )ColorAt (x ,y int )(_c .Color ,error ){_ccddd :=_eff .BytesPerLine (int (_bgdacd .Width ),int (_bgdacd .BitsPerComponent ),_bgdacd .ColorComponents );switch _bgdacd .ColorComponents {case 1:return _eff .ColorAtGrayscale (x ,y ,int (_bgdacd .BitsPerComponent ),_ccddd ,_bgdacd .Data ,_bgdacd ._dfff );case 3:return _eff .ColorAtNRGBA (x ,y ,int (_bgdacd .Width ),_ccddd ,int (_bgdacd .BitsPerComponent ),_bgdacd .Data ,_bgdacd ._efgcc ,_bgdacd ._dfff );case 4:return _eff .ColorAtCMYK (x ,y ,int (_bgdacd .Width ),_bgdacd .Data ,_bgdacd ._dfff );};_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bgdacd .ColorComponents ,_bgdacd .BitsPerComponent );return nil ,_ag .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ToInteger convert to an integer format.
func (_agdce *PdfColorLab )ToInteger (bits int )[3]uint32 {_eggfd :=_bb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eggfd *_agdce .L ()),uint32 (_eggfd *_agdce .A ()),uint32 (_eggfd *_agdce .B ())};};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _da .PdfObject ;IsMap _da .PdfObject ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_acedd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};func (_fgdg *PdfReader )buildPageList (_cdcba *_da .PdfIndirectObject ,_fdfga *_da .PdfIndirectObject ,_cffca map[_da .PdfObject ]struct{})error {if _cdcba ==nil {return nil ;};if _ ,_adaea :=_cffca [_cdcba ];_adaea {_ac .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cdcba .ObjectNumber );return nil ;};_cffca [_cdcba ]=struct{}{};_fcgcd ,_fggdd :=_cdcba .PdfObject .(*_da .PdfObjectDictionary );if !_fggdd {return _ag .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_fbcfe ,_fggdd :=(*_fcgcd ).Get ("\u0054\u0079\u0070\u0065").(*_da .PdfObjectName );if !_fggdd {if _fcgcd .Get ("\u004b\u0069\u0064\u0073")==nil {return _ag .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ac .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_fbcfe =_da .MakeName ("\u0050\u0061\u0067e\u0073");_fcgcd .Set ("\u0054\u0079\u0070\u0065",_fbcfe );};_ac .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_fbcfe ,_cdcba );if *_fbcfe =="\u0050\u0061\u0067\u0065"{_ggfb ,_afedcd :=_fgdg .newPdfPageFromDict (_fcgcd );if _afedcd !=nil {return _afedcd ;};_ggfb .setContainer (_cdcba );if _fdfga !=nil {_fcgcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdfga );};_fgdg ._efbae =append (_fgdg ._efbae ,_cdcba );_fgdg .PageList =append (_fgdg .PageList ,_ggfb );return nil ;};if *_fbcfe !="\u0050\u0061\u0067e\u0073"{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_fbcfe );return _ag .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _fdfga !=nil {_fcgcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdfga );};if !_fgdg ._aceeb {_gbgac :=_fgdg .traverseObjectData (_cdcba );if _gbgac !=nil {return _gbgac ;};};_dfab ,_dbgfda :=_fgdg ._bcgcg .Resolve (_fcgcd .Get ("\u004b\u0069\u0064\u0073"));if _dbgfda !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _dbgfda ;};var _gbbfdc *_da .PdfObjectArray ;_gbbfdc ,_fggdd =_dfab .(*_da .PdfObjectArray );if !_fggdd {_ecac ,_cfgfg :=_dfab .(*_da .PdfIndirectObject );if !_cfgfg {return _ag .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gbbfdc ,_fggdd =_ecac .PdfObject .(*_da .PdfObjectArray );if !_fggdd {return _ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ac .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gbbfdc );for _debeb ,_agbd :=range _gbbfdc .Elements (){_ddecd ,_gbfe :=_da .GetIndirect (_agbd );if !_gbfe {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ddecd );return _ag .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gbbfdc .Set (_debeb ,_ddecd );_dbgfda =_fgdg .buildPageList (_ddecd ,_cdcba ,_cffca );if _dbgfda !=nil {return _dbgfda ;};};return nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_bgba *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the function.
func (_aadea *PdfFunctionType3 )ToPdfObject ()_da .PdfObject {_ebaa :=_da .MakeDict ();_ebaa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (3));_bbfeb :=&_da .PdfObjectArray {};for _ ,_aecgb :=range _aadea .Domain {_bbfeb .Append (_da .MakeFloat (_aecgb ));};_ebaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbfeb );if _aadea .Range !=nil {_ebdfg :=&_da .PdfObjectArray {};for _ ,_bccd :=range _aadea .Range {_ebdfg .Append (_da .MakeFloat (_bccd ));};_ebaa .Set ("\u0052\u0061\u006eg\u0065",_ebdfg );};if _aadea .Functions !=nil {_gbbd :=&_da .PdfObjectArray {};for _ ,_bbae :=range _aadea .Functions {_gbbd .Append (_bbae .ToPdfObject ());};_ebaa .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_gbbd );};if _aadea .Bounds !=nil {_bbfae :=&_da .PdfObjectArray {};for _ ,_accbf :=range _aadea .Bounds {_bbfae .Append (_da .MakeFloat (_accbf ));};_ebaa .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_bbfae );};if _aadea .Encode !=nil {_fbaca :=&_da .PdfObjectArray {};for _ ,_fdfe :=range _aadea .Encode {_fbaca .Append (_da .MakeFloat (_fdfe ));};_ebaa .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_fbaca );};if _aadea ._cdcd !=nil {_aadea ._cdcd .PdfObject =_ebaa ;return _aadea ._cdcd ;};return _ebaa ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_db :=NewPdfAction ();_aab :=&PdfActionThread {};_aab .PdfAction =_db ;_db .SetContext (_aab );return _aab ;};

// GetContentStream returns the pattern cell's content stream
func (_ebeb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_abege ,_ ,_ddfeg :=_ebeb .GetContentStreamWithEncoder ();return _abege ,_ddfeg ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_egg :=NewPdfAnnotation ();_dabd :=&PdfAnnotationCaret {};_dabd .PdfAnnotation =_egg ;_dabd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egg .SetContext (_dabd );return _dabd ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_efbag *PdfPage )Duplicate ()*PdfPage {var _dbcbc PdfPage ;_dbcbc =*_efbag ;_dbcbc ._ccaa =_da .MakeDict ();_dbcbc ._dabad =_da .MakeIndirectObject (_dbcbc ._ccaa );return &_dbcbc ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ddbb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ddbb .Range };

// GetNumComponents returns the number of color components (3 for Lab).
func (_dcge *PdfColorLab )GetNumComponents ()int {return 3};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _da .PdfObject ;Flags _da .PdfObject ;};func (_beabd fontCommon )coreString ()string {_dccb :="";if _beabd ._gcgf !=nil {_dccb =_beabd ._gcgf .String ();};return _f .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_beabd ._bffg ,_beabd ._dabeae ,_beabd ._afgd ,_beabd ._gffeb ,_beabd ._aeec !=nil ,_beabd .fontFlags (),_dccb );};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fb .Permissions ;Algorithm EncryptionAlgorithm ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ef .Time ){_fcbecf =creationDate };

// ToPdfObject implements interface PdfModel.
func (_ceg *PdfActionGoTo )ToPdfObject ()_da .PdfObject {_ceg .PdfAction .ToPdfObject ();_gba :=_ceg ._cf ;_caf :=_gba .PdfObject .(*_da .PdfObjectDictionary );_caf .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoTo )));_caf .SetIfNotNil ("\u0044",_ceg .D );return _gba ;};func _cdcbd (_dfaf _da .PdfObject )(*PdfPattern ,error ){_fceeg :=&PdfPattern {};var _ccba *_da .PdfObjectDictionary ;if _cbec ,_dgbef :=_da .GetIndirect (_dfaf );_dgbef {_fceeg ._geggda =_cbec ;_bafc ,_bcgfb :=_cbec .PdfObject .(*_da .PdfObjectDictionary );if !_bcgfb {_ac .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cbec .PdfObject );return nil ,_da .ErrTypeError ;};_ccba =_bafc ;}else if _ffdb ,_bgafa :=_da .GetStream (_dfaf );_bgafa {_fceeg ._geggda =_ffdb ;_ccba =_ffdb .PdfObjectDictionary ;}else {_ac .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dfaf );return nil ,_da .ErrTypeError ;};_bcgdb :=_ccba .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bcgdb ==nil {_ac .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_ggga ,_cffcb :=_bcgdb .(*_da .PdfObjectInteger );if !_cffcb {_ac .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bcgdb );return nil ,_da .ErrTypeError ;};if *_ggga !=1&&*_ggga !=2{_ac .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_ggga );return nil ,_da .ErrRangeError ;};_fceeg .PatternType =int64 (*_ggga );switch *_ggga {case 1:_acecd ,_gecc :=_adegc (_ccba );if _gecc !=nil {return nil ,_gecc ;};_acecd .PdfPattern =_fceeg ;_fceeg ._aaba =_acecd ;return _fceeg ,nil ;case 2:_dbde ,_efae :=_aeabf (_ccba );if _efae !=nil {return nil ,_efae ;};_dbde .PdfPattern =_fceeg ;_fceeg ._aaba =_dbde ;return _fceeg ,nil ;};return nil ,_ag .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_baff *PdfFieldButton )GetType ()ButtonType {_cafg :=ButtonTypeCheckbox ;if _baff .Ff !=nil {if (uint32 (*_baff .Ff )&FieldFlagPushbutton .Mask ())> 0{_cafg =ButtonTypePush ;}else if (uint32 (*_baff .Ff )&FieldFlagRadio .Mask ())> 0{_cafg =ButtonTypeRadio ;};};return _cafg ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_cccc *PdfColorCalGray )GetNumComponents ()int {return 1};func _dcdfe (_ecdba _da .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_acgde :=NewPdfColorspaceSpecialSeparation ();if _cgba ,_gbba :=_ecdba .(*_da .PdfIndirectObject );_gbba {_acgde ._addc =_cgba ;};_ecdba =_da .TraceToDirectObject (_ecdba );_cfeg ,_gec :=_ecdba .(*_da .PdfObjectArray );if !_gec {return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _cfeg .Len ()!=4{return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_ecdba =_cfeg .Get (0);_gcgc ,_gec :=_ecdba .(*_da .PdfObjectName );if !_gec {return nil ,_f .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_gcgc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_f .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_ecdba =_cfeg .Get (1);_gcgc ,_gec =_ecdba .(*_da .PdfObjectName );if !_gec {return nil ,_f .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_acgde .ColorantName =_gcgc ;_ecdba =_cfeg .Get (2);_badd ,_fadbf :=NewPdfColorspaceFromPdfObject (_ecdba );if _fadbf !=nil {return nil ,_fadbf ;};_acgde .AlternateSpace =_badd ;_eabg ,_fadbf :=_eeebd (_cfeg .Get (3));if _fadbf !=nil {return nil ,_fadbf ;};_acgde .TintTransform =_eabg ;return _acgde ,nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_aaf :=NewPdfAnnotation ();_cgae :=&PdfAnnotationLink {};_cgae .PdfAnnotation =_aaf ;_aaf .SetContext (_cgae );return _cgae ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_aegbc *PdfFont )BytesToCharcodes (data []byte )[]_cee .CharCode {_ac .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _ffdec ,_fggac :=_aegbc ._edgc .(*pdfFontType0 );_fggac &&_ffdec ._afec !=nil {if _gadd ,_bedd :=_ffdec .bytesToCharcodes (data );_bedd {return _gadd ;};};_fefd :=make ([]_cee .CharCode ,0,len (data )+len (data )%2);if _aegbc .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _fafa :=0;_fafa < len (data );_fafa +=2{_dcfea :=uint16 (data [_fafa ])<<8|uint16 (data [_fafa +1]);_fefd =append (_fefd ,_cee .CharCode (_dcfea ));};}else {for _ ,_fdcg :=range data {_fefd =append (_fefd ,_cee .CharCode (_fdcg ));};};return _fefd ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fagc *PdfOutlineTreeNode )GetContainingPdfObject ()_da .PdfObject {return _fagc .GetContext ().GetContainingPdfObject ();};var _fefae ="";

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_addg *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _addg .MediaBox !=nil {return _addg .MediaBox ,nil ;};_aaafe :=_addg .Parent ;for _aaafe !=nil {_gbbdd ,_ffgab :=_da .GetDict (_aaafe );if !_ffgab {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _cegaf :=_gbbdd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_cegaf !=nil {_ddab ,_fcbbd :=_da .GetArray (_cegaf );if !_fcbbd {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_ccdde ,_deegg :=NewPdfRectangle (*_ddab );if _deegg !=nil {return nil ,_deegg ;};return _ccdde ,nil ;};_aaafe =_gbbdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ag .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// GetContainingPdfObject implements interface PdfModel.
func (_aea *PdfAction )GetContainingPdfObject ()_da .PdfObject {return _aea ._cf };

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dbbd *PdfFieldText )ToPdfObject ()_da .PdfObject {_dbbd .PdfField .ToPdfObject ();_accaf :=_dbbd ._cfed ;_ceca :=_accaf .PdfObject .(*_da .PdfObjectDictionary );_ceca .Set ("\u0046\u0054",_da .MakeName ("\u0054\u0078"));if _dbbd .DA !=nil {_ceca .Set ("\u0044\u0041",_dbbd .DA );};if _dbbd .Q !=nil {_ceca .Set ("\u0051",_dbbd .Q );};if _dbbd .DS !=nil {_ceca .Set ("\u0044\u0053",_dbbd .DS );};if _dbbd .RV !=nil {_ceca .Set ("\u0052\u0056",_dbbd .RV );};if _dbbd .MaxLen !=nil {_ceca .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dbbd .MaxLen );};return _accaf ;};

// Val returns the color value.
func (_aged *PdfColorDeviceGray )Val ()float64 {return float64 (*_aged )};func _becef (_daab *PdfField ,_daba _da .PdfObject ){for _ ,_fbgba :=range _daab .Annotations {_fbgba .AS =_daba ;_fbgba .ToPdfObject ();};};func (_eceac *pdfCIDFontType0 )baseFields ()*fontCommon {return &_eceac .fontCommon };

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_edgd *PdfPattern )GetContext ()PdfModel {return _edgd ._aaba };var (_eadf =_eb .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_fdcd =_eb .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_bcaeg =_eb .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_dgdg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gcab ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gbfg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cafae *PdfShading )GetContainingPdfObject ()_da .PdfObject {return _cafae ._fgfdc };

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_degce :=&PdfColorspaceSpecialSeparation {};return _degce ;};func (_aebage *PdfWriter )seekByName (_abegd _da .PdfObject ,_dccgfa []string ,_becfb string )([]_da .PdfObject ,error ){_ac .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_abegd );var _cgebe []_da .PdfObject ;if _fged ,_bcba :=_abegd .(*_da .PdfIndirectObject );_bcba {return _aebage .seekByName (_fged .PdfObject ,_dccgfa ,_becfb );};if _bdbe ,_fgba :=_abegd .(*_da .PdfObjectStream );_fgba {return _aebage .seekByName (_bdbe .PdfObjectDictionary ,_dccgfa ,_becfb );};if _acbed ,_ddbfg :=_abegd .(*_da .PdfObjectDictionary );_ddbfg {_ac .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_faeedg :=range _acbed .Keys (){_bfcdg :=_acbed .Get (_faeedg );if string (_faeedg )==_becfb {_cgebe =append (_cgebe ,_bfcdg );};for _ ,_gabb :=range _dccgfa {if string (_faeedg )==_gabb {_ac .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gabb );_edfga ,_bbab :=_aebage .seekByName (_bfcdg ,_dccgfa ,_becfb );if _bbab !=nil {return _cgebe ,_bbab ;};for _ ,_bbggf :=range _edfga {_cgebe =append (_cgebe ,_bbggf );};break ;};};};return _cgebe ,nil ;};return _cgebe ,nil ;};func (_afdbe *PdfWriter )writeString (_fgdfe string ){if _afdbe ._dabfb !=nil {return ;};_acdce ,_dfbeb :=_afdbe ._gfbaa .WriteString (_fgdfe );_afdbe ._fgbeb +=int64 (_acdce );_afdbe ._dabfb =_dfbeb ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fcabb *Image )ConvertToBinary ()error {if _fcabb .ColorComponents ==1&&_fcabb .BitsPerComponent ==1{return nil ;};_ddbafg ,_bbde :=_fcabb .ToGoImage ();if _bbde !=nil {return _bbde ;};_ebad ,_bbde :=_eff .MonochromeConverter .Convert (_ddbafg );if _bbde !=nil {return _bbde ;};_fcabb .BitsPerComponent =1;_fcabb .ColorComponents =1;_fcabb .Data =_ebad .Base ().Data ;return nil ;};func (_gfa *PdfReader )newPdfAnnotationStrikeOut (_acb *_da .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_eged :=PdfAnnotationStrikeOut {};_eaf ,_edbc :=_gfa .newPdfAnnotationMarkupFromDict (_acb );if _edbc !=nil {return nil ,_edbc ;};_eged .PdfAnnotationMarkup =_eaf ;_eged .QuadPoints =_acb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eged ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_ggeg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cadfb *PdfShadingType1 )ToPdfObject ()_da .PdfObject {_cadfb .PdfShading .ToPdfObject ();_fggaa ,_bdcf :=_cadfb .getShadingDict ();if _bdcf !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cadfb .Domain !=nil {_fggaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cadfb .Domain );};if _cadfb .Matrix !=nil {_fggaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cadfb .Matrix );};if _cadfb .Function !=nil {if len (_cadfb .Function )==1{_fggaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cadfb .Function [0].ToPdfObject ());}else {_fabad :=_da .MakeArray ();for _ ,_eagdd :=range _cadfb .Function {_fabad .Append (_eagdd .ToPdfObject ());};_fggaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fabad );};};return _cadfb ._fgfdc ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_egged :=PdfPage {};_egged ._ccaa =_da .MakeDict ();_egged .Resources =NewPdfPageResources ();_cbaec :=_da .PdfIndirectObject {};_cbaec .PdfObject =_egged ._ccaa ;_egged ._dabad =&_cbaec ;return &_egged ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ebfc *PdfPage )AddContentStreamByString (contentStr string )error {_bebd ,_ddceg :=_da .MakeStream ([]byte (contentStr ),_da .NewFlateEncoder ());if _ddceg !=nil {return _ddceg ;};if _ebfc .Contents ==nil {_ebfc .Contents =_bebd ;}else {_edcdeg :=_da .TraceToDirectObject (_ebfc .Contents );_eefg ,_egee :=_edcdeg .(*_da .PdfObjectArray );if !_egee {_eefg =_da .MakeArray (_edcdeg );};_eefg .Append (_bebd );_ebfc .Contents =_eefg ;};return nil ;};func (_aeacg Image )getBase ()_eff .ImageBase {return _eff .NewImageBase (int (_aeacg .Width ),int (_aeacg .Height ),int (_aeacg .BitsPerComponent ),_aeacg .ColorComponents ,_aeacg .Data ,_aeacg ._efgcc ,_aeacg ._dfff );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_egbd *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_ecbcg *PdfWriter )copyObject (_ddafa _da .PdfObject ,_daea map[_da .PdfObject ]_da .PdfObject ,_dfggg map[_da .PdfObject ]struct{},_bbffd bool )_da .PdfObject {_dabbfb :=!_ecbcg ._afcac &&_dfggg !=nil ;if _aaeee ,_baabd :=_daea [_ddafa ];_baabd {if _dabbfb &&!_bbffd {delete (_dfggg ,_ddafa );};return _aaeee ;};_cggffg :=_ddafa ;switch _ggcag :=_ddafa .(type ){case *_da .PdfObjectArray :_fcdgc :=_da .MakeArray ();_cggffg =_fcdgc ;_daea [_ddafa ]=_cggffg ;for _ ,_fedgb :=range _ggcag .Elements (){_fcdgc .Append (_ecbcg .copyObject (_fedgb ,_daea ,_dfggg ,_bbffd ));};case *_da .PdfObjectStreams :_eegbb :=&_da .PdfObjectStreams {PdfObjectReference :_ggcag .PdfObjectReference };_cggffg =_eegbb ;_daea [_ddafa ]=_cggffg ;for _ ,_cgeeb :=range _ggcag .Elements (){_eegbb .Append (_ecbcg .copyObject (_cgeeb ,_daea ,_dfggg ,_bbffd ));};case *_da .PdfObjectStream :_dedb :=&_da .PdfObjectStream {Stream :_ggcag .Stream ,PdfObjectReference :_ggcag .PdfObjectReference };_cggffg =_dedb ;_daea [_ddafa ]=_cggffg ;_dedb .PdfObjectDictionary =_ecbcg .copyObject (_ggcag .PdfObjectDictionary ,_daea ,_dfggg ,_bbffd ).(*_da .PdfObjectDictionary );case *_da .PdfObjectDictionary :var _agabc bool ;if _dabbfb &&!_bbffd {if _cfbbf ,_ :=_da .GetNameVal (_ggcag .Get ("\u0054\u0079\u0070\u0065"));_cfbbf =="\u0050\u0061\u0067\u0065"{_ ,_gacac :=_ecbcg ._dgffg [_ggcag ];_bbffd =!_gacac ;_agabc =_bbffd ;};};_deacef :=_da .MakeDict ();_cggffg =_deacef ;_daea [_ddafa ]=_cggffg ;for _ ,_ccaeg :=range _ggcag .Keys (){_deacef .Set (_ccaeg ,_ecbcg .copyObject (_ggcag .Get (_ccaeg ),_daea ,_dfggg ,_bbffd ));};if _agabc {_cggffg =_da .MakeNull ();_bbffd =false ;};case *_da .PdfIndirectObject :_dbdbf :=&_da .PdfIndirectObject {PdfObjectReference :_ggcag .PdfObjectReference };_cggffg =_dbdbf ;_daea [_ddafa ]=_cggffg ;_dbdbf .PdfObject =_ecbcg .copyObject (_ggcag .PdfObject ,_daea ,_dfggg ,_bbffd );case *_da .PdfObjectString :_eead :=*_ggcag ;_cggffg =&_eead ;_daea [_ddafa ]=_cggffg ;case *_da .PdfObjectName :_fecee :=_da .PdfObjectName (*_ggcag );_cggffg =&_fecee ;_daea [_ddafa ]=_cggffg ;case *_da .PdfObjectNull :_cggffg =_da .MakeNull ();_daea [_ddafa ]=_cggffg ;case *_da .PdfObjectInteger :_edac :=_da .PdfObjectInteger (*_ggcag );_cggffg =&_edac ;_daea [_ddafa ]=_cggffg ;case *_da .PdfObjectReference :_acbcg :=_da .PdfObjectReference (*_ggcag );_cggffg =&_acbcg ;_daea [_ddafa ]=_cggffg ;case *_da .PdfObjectFloat :_bcfgf :=_da .PdfObjectFloat (*_ggcag );_cggffg =&_bcfgf ;_daea [_ddafa ]=_cggffg ;case *_da .PdfObjectBool :_cecea :=_da .PdfObjectBool (*_ggcag );_cggffg =&_cecea ;_daea [_ddafa ]=_cggffg ;case *pdfSignDictionary :_efga :=&pdfSignDictionary {PdfObjectDictionary :_da .MakeDict (),_cbeag :_ggcag ._cbeag ,_cbcdg :_ggcag ._cbcdg };_cggffg =_efga ;_daea [_ddafa ]=_cggffg ;for _ ,_cbabb :=range _ggcag .Keys (){_efga .Set (_cbabb ,_ecbcg .copyObject (_ggcag .Get (_cbabb ),_daea ,_dfggg ,_bbffd ));};default:_ac .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ddafa );};if _dabbfb &&_bbffd {_dfggg [_ddafa ]=struct{}{};};return _cggffg ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfAnnotationPolygon )ToPdfObject ()_da .PdfObject {_bea .PdfAnnotation .ToPdfObject ();_gdfa :=_bea ._cfd ;_acad :=_gdfa .PdfObject .(*_da .PdfObjectDictionary );_bea .PdfAnnotationMarkup .appendToPdfDictionary (_acad );_acad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_acad .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bea .Vertices );_acad .SetIfNotNil ("\u004c\u0045",_bea .LE );_acad .SetIfNotNil ("\u0042\u0053",_bea .BS );_acad .SetIfNotNil ("\u0049\u0043",_bea .IC );_acad .SetIfNotNil ("\u0042\u0045",_bea .BE );_acad .SetIfNotNil ("\u0049\u0054",_bea .IT );_acad .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bea .Measure );return _gdfa ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;RD _da .PdfObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_eebg *PdfFont )SubsetRegistered ()error {switch _dcdd :=_eebg ._edgc .(type ){case *pdfFontType0 :_cebbb :=_dcdd .subsetRegistered ();if _cebbb !=nil {_ac .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cebbb );return _cebbb ;};if _dcdd ._dccgb !=nil {if _dcdd ._eceec !=nil {_dcdd ._eceec .ToPdfObject ();};_dcdd .ToPdfObject ();};default:_ac .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_dcdd );};return nil ;};func (_ffac *Image )resampleLowBits (_bacbc []uint32 ){_ebec :=_eff .BytesPerLine (int (_ffac .Width ),int (_ffac .BitsPerComponent ),_ffac .ColorComponents );_aaeg :=make ([]byte ,_ffac .ColorComponents *_ebec *int (_ffac .Height ));_eedc :=int (_ffac .BitsPerComponent )*_ffac .ColorComponents *int (_ffac .Width );_cfcg :=uint8 (8);var (_ffgc ,_ccag int ;_ebeaf uint32 ;);for _becd :=0;_becd < int (_ffac .Height );_becd ++{_ccag =_becd *_ebec ;for _faabd :=0;_faabd < _eedc ;_faabd ++{_ebeaf =_bacbc [_ffgc ];_cfcg -=uint8 (_ffac .BitsPerComponent );_aaeg [_ccag ]|=byte (_ebeaf )<<_cfcg ;if _cfcg ==0{_cfcg =8;_ccag ++;};_ffgc ++;};};_ffac .Data =_aaeg ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ef .Time ;};

// Y returns the value of the yellow component of the color.
func (_cbeda *PdfColorDeviceCMYK )Y ()float64 {return float64 (_cbeda [2])};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_eedeeb *PdfPage )GetContainingPdfObject ()_da .PdfObject {return _eedeeb ._dabad };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ffbfb *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bagf :=vals [0];_effc :=[]float64 {_bagf };_gaed ,_acbc :=_ffbfb .TintTransform .Evaluate (_effc );if _acbc !=nil {_ac .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_acbc );_ac .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ffbfb .TintTransform );return nil ,_acbc ;};_ac .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_gaed ,_ffbfb .AlternateSpace );_gdgb ,_acbc :=_ffbfb .AlternateSpace .ColorFromFloats (_gaed );if _acbc !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_acbc );return nil ,_acbc ;};return _gdgb ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_defg *Image )ToGoImage ()(_cdf .Image ,error ){_ac .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_edfg ,_eeacf :=_eff .NewImage (int (_defg .Width ),int (_defg .Height ),int (_defg .BitsPerComponent ),_defg .ColorComponents ,_defg .Data ,_defg ._efgcc ,_defg ._dfff );if _eeacf !=nil {return nil ,_eeacf ;};return _edfg ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ggde *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func _eeeb (_ceedgd *[]*PdfField ,_gdbcd FieldFilterFunc ,_gcbca bool )[]*PdfField {if _ceedgd ==nil {return nil ;};_dacb :=*_ceedgd ;if len (*_ceedgd )==0{return nil ;};_acda :=_dacb [:0];if _gdbcd ==nil {_gdbcd =func (*PdfField )bool {return true };};var _bbedf []*PdfField ;for _ ,_fgddg :=range _dacb {_abef :=_gdbcd (_fgddg );if _abef {_bbedf =append (_bbedf ,_fgddg );if len (_fgddg .Kids )> 0{_bbedf =append (_bbedf ,_eeeb (&_fgddg .Kids ,_gdbcd ,_gcbca )...);};};if !_gcbca ||!_abef ||len (_fgddg .Kids )> 0{_acda =append (_acda ,_fgddg );};};*_ceedgd =_acda ;return _bbedf ;};func (_faffc *pdfFontType0 )subsetRegistered ()error {_acfd ,_cgbg :=_faffc .DescendantFont ._edgc .(*pdfCIDFontType2 );if !_cgbg {_ac .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_faffc .DescendantFont );return nil ;};if _acfd ==nil {return nil ;};if _acfd ._gcgf ==nil {_ac .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _faffc ._eceec ==nil {_ac .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_bcce ,_cgbg :=_da .GetStream (_acfd ._gcgf .FontFile2 );if !_cgbg {_ac .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _ag .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cafb ,_egggb :=_da .DecodeStream (_bcce );if _egggb !=nil {_ac .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_egggb );return _egggb ;};_effgg ,_egggb :=_geb .Parse (_bf .NewReader (_cafb ));if _egggb !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_bcce .Stream ));return _egggb ;};var _fdab []rune ;var _cbcgd *_geb .Font ;switch _adgge :=_faffc ._eceec .(type ){case *_cee .TrueTypeFontEncoder :_fdab =_adgge .RegisteredRunes ();_cbcgd ,_egggb =_effgg .SubsetKeepRunes (_fdab );if _egggb !=nil {_ac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egggb );return _egggb ;};_adgge .SubsetRegistered ();case *_cee .IdentityEncoder :_fdab =_adgge .RegisteredRunes ();_cdcfd :=make ([]_geb .GlyphIndex ,len (_fdab ));for _eagf ,_fbecf :=range _fdab {_cdcfd [_eagf ]=_geb .GlyphIndex (_fbecf );};_cbcgd ,_egggb =_effgg .SubsetKeepIndices (_cdcfd );if _egggb !=nil {_ac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egggb );return _egggb ;};case _cee .SimpleEncoder :_dbce :=_adgge .Charcodes ();for _ ,_dffdc :=range _dbce {_dbff ,_efbc :=_adgge .CharcodeToRune (_dffdc );if !_efbc {_ac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_dffdc );continue ;};_fdab =append (_fdab ,_dbff );};default:return _f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_faffc ._eceec );};var _gcga _bf .Buffer ;_egggb =_cbcgd .Write (&_gcga );if _egggb !=nil {_ac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egggb );return _egggb ;};if _faffc ._eeba !=nil {_gdcb :=make (map[_age .CharCode ]rune ,len (_fdab ));for _ ,_bgcd :=range _fdab {_faaf ,_egffa :=_faffc ._eceec .RuneToCharcode (_bgcd );if !_egffa {continue ;};_gdcb [_age .CharCode (_faaf )]=_bgcd ;};_faffc ._eeba =_age .NewToUnicodeCMap (_gdcb );};_bcce ,_egggb =_da .MakeStream (_gcga .Bytes (),_da .NewFlateEncoder ());if _egggb !=nil {_ac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egggb );return _egggb ;};_bcce .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_da .MakeInteger (int64 (_gcga .Len ())));if _gbeg ,_adcc :=_da .GetStream (_acfd ._gcgf .FontFile2 );_adcc {*_gbeg =*_bcce ;}else {_acfd ._gcgf .FontFile2 =_bcce ;};_dcdea :=_adcgc ();if len (_faffc ._dabeae )> 0{_faffc ._dabeae =_fbfag (_faffc ._dabeae ,_dcdea );};if len (_acfd ._dabeae )> 0{_acfd ._dabeae =_fbfag (_acfd ._dabeae ,_dcdea );};if len (_faffc ._afgd )> 0{_faffc ._afgd =_fbfag (_faffc ._afgd ,_dcdea );};if _acfd ._gcgf !=nil {_dddgb ,_cdea :=_da .GetName (_acfd ._gcgf .FontName );if _cdea &&len (_dddgb .String ())> 0{_bgcc :=_fbfag (_dddgb .String (),_dcdea );_acfd ._gcgf .FontName =_da .MakeName (_bgcc );};};return nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_abdf *PdfFieldChoice )ToPdfObject ()_da .PdfObject {_abdf .PdfField .ToPdfObject ();_efa :=_abdf ._cfed ;_dcdc :=_efa .PdfObject .(*_da .PdfObjectDictionary );_dcdc .Set ("\u0046\u0054",_da .MakeName ("\u0043\u0068"));if _abdf .Opt !=nil {_dcdc .Set ("\u004f\u0070\u0074",_abdf .Opt );};if _abdf .TI !=nil {_dcdc .Set ("\u0054\u0049",_abdf .TI );};if _abdf .I !=nil {_dcdc .Set ("\u0049",_abdf .I );};return _efa ;};func (_bbbd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bbbd ._bcgcg .GetCrypter ()!=nil &&!_bbbd ._bcgcg .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_aadfe :=_bbbd ._ddgbf ;_gffad :=_aadfe .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _gffad ==nil {return nil ,nil ;};_ac .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_dagb :=_da .ResolveReference (_gffad );_ac .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_dagb );if _bbdc :=_da .IsNullObject (_dagb );_bbdc {_ac .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_aded ,_ecgg :=_dagb .(*_da .PdfIndirectObject );if !_ecgg {if _ ,_fbgebg :=_da .GetDict (_dagb );!_fbgebg {_ac .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_ac .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_aded =_da .MakeIndirectObject (_dagb );};_fdfc ,_ecgg :=_aded .PdfObject .(*_da .PdfObjectDictionary );if !_ecgg {return nil ,_ag .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_ac .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fdfc );_cbbe ,_ ,_aage :=_bbbd .buildOutlineTree (_aded ,nil ,nil ,nil );if _aage !=nil {return nil ,_aage ;};_ac .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cbbe );return _cbbe ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_cbff *PdfAcroForm )AllFields ()[]*PdfField {if _cbff ==nil {return nil ;};var _dddbf []*PdfField ;if _cbff .Fields !=nil {for _ ,_bded :=range *_cbff .Fields {_dddbf =append (_dddbf ,_edae (_bded )...);};};return _dddbf ;};

// SetContext set the sub annotation (context).
func (_fecdf *PdfShading )SetContext (ctx PdfModel ){_fecdf ._fbacc =ctx };

// ColorToRGB converts a CalGray color to an RGB color.
func (_gfef *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_aeddd ,_cbgg :=color .(*PdfColorCalGray );if !_cbgg {_ac .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_aeddd .Val ();X :=_gfef .WhitePoint [0]*_bb .Pow (ANorm ,_gfef .Gamma );Y :=_gfef .WhitePoint [1]*_bb .Pow (ANorm ,_gfef .Gamma );Z :=_gfef .WhitePoint [2]*_bb .Pow (ANorm ,_gfef .Gamma );_dfca :=3.240479*X +-1.537150*Y +-0.498535*Z ;_daee :=-0.969256*X +1.875992*Y +0.041556*Z ;_eceb :=0.055648*X +-0.204043*Y +1.057311*Z ;_dfca =_bb .Min (_bb .Max (_dfca ,0),1.0);_daee =_bb .Min (_bb .Max (_daee ,0),1.0);_eceb =_bb .Min (_bb .Max (_eceb ,0),1.0);return NewPdfColorDeviceRGB (_dfca ,_daee ,_eceb ),nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_cgaee *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cgaee .AlternateSpace ==nil {return nil ,_ag .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _cgaee .AlternateSpace .ColorToRGB (color );};

// IsEncrypted returns true if the PDF file is encrypted.
func (_fgdebd *PdfReader )IsEncrypted ()(bool ,error ){return _fgdebd ._bcgcg .IsEncrypted ()};

// SetOCProperties sets the optional content properties.
func (_gfbdg *PdfWriter )SetOCProperties (ocProperties _da .PdfObject )error {_dabbff :=_gfbdg ._ebdee ;if ocProperties !=nil {_ac .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_dabbff .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gfbdg .addObjects (ocProperties );};return nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_abaf :_da .MakeIndirectObject (_da .MakeDict ())};};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_afca *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ag .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_afbg ,_fcdb :=_eff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._efgcc ,img ._dfff );if _fcdb !=nil {return img ,_fcdb ;};_gcaa ,_fcdb :=_eff .NRGBAConverter .Convert (_afbg );if _fcdb !=nil {return img ,_fcdb ;};_eega :=_abag (_gcaa .Base ());_ac .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ac .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ac .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_eega .Data );_ac .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_eega );return _eega ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dfeg *PdfAppender )UpdatePage (page *PdfPage ){_dfeg .updateObjectsDeep (page .ToPdfObject (),nil )};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_eage *_da .PdfIndirectObject ;_egaee *_da .PdfIndirectObject ;_dgffg map[_da .PdfObject ]struct{};_fdcfd []_da .PdfObject ;_cgag map[_da .PdfObject ]struct{};_bdaa []*_da .PdfIndirectObject ;_cgga *PdfOutlineTreeNode ;_ebdee *_da .PdfObjectDictionary ;_ddada []_da .PdfObject ;_bggda *_da .PdfIndirectObject ;_gfbaa *_a .Writer ;_fgbeb int64 ;_dabfb error ;_eafb *_da .PdfCrypt ;_gbdc *_da .PdfObjectDictionary ;_dbgbb *_da .PdfIndirectObject ;_bbacdg *_da .PdfObjectArray ;_ebee int ;_fbdb int ;_egbdd *bool ;_bfggf map[_da .PdfObject ][]*_da .PdfObjectDictionary ;_bcggg *PdfAcroForm ;_dbcgc Optimizer ;_ddcea map[int ]crossReference ;_gefgd int64 ;ObjNumOffset int ;_afcac bool ;_ebabd _da .XrefTable ;_eacgf int64 ;_fede int64 ;_afcee map[_da .PdfObject ]int64 ;_dcadd map[_da .PdfObject ]struct{};};func _fggeee (_cada _da .PdfObject )(*PdfColorspaceCalGray ,error ){_bdbcb :=NewPdfColorspaceCalGray ();if _baba ,_dfaad :=_cada .(*_da .PdfIndirectObject );_dfaad {_bdbcb ._abgc =_baba ;};_cada =_da .TraceToDirectObject (_cada );_feda ,_dadcf :=_cada .(*_da .PdfObjectArray );if !_dadcf {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _feda .Len ()!=2{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_cada =_da .TraceToDirectObject (_feda .Get (0));_cbcg ,_dadcf :=_cada .(*_da .PdfObjectName );if !_dadcf {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_cbcg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_f .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cada =_da .TraceToDirectObject (_feda .Get (1));_cefb ,_dadcf :=_cada .(*_da .PdfObjectDictionary );if !_dadcf {return nil ,_f .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_cada =_cefb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cada =_da .TraceToDirectObject (_cada );_ebba ,_dadcf :=_cada .(*_da .PdfObjectArray );if !_dadcf {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _ebba .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fgegg ,_gcfe :=_ebba .GetAsFloat64Slice ();if _gcfe !=nil {return nil ,_gcfe ;};_bdbcb .WhitePoint =_fgegg ;_cada =_cefb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cada !=nil {_cada =_da .TraceToDirectObject (_cada );_ebae ,_fceccc :=_cada .(*_da .PdfObjectArray );if !_fceccc {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _ebae .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_adff ,_deba :=_ebae .GetAsFloat64Slice ();if _deba !=nil {return nil ,_deba ;};_bdbcb .BlackPoint =_adff ;};_cada =_cefb .Get ("\u0047\u0061\u006dm\u0061");if _cada !=nil {_cada =_da .TraceToDirectObject (_cada );_beabe ,_fef :=_da .GetNumberAsFloat (_cada );if _fef !=nil {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_bdbcb .Gamma =_beabe ;};return _bdbcb ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dcafa *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dcafa ._aaba .(*PdfShadingPattern );};func (_cebgd *fontFile )parseASCIIPart (_edcb []byte )error {if len (_edcb )< 2||string (_edcb [:2])!="\u0025\u0021"{return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_facae ,_bgda ,_dbabb :=_bbac (_edcb );if _dbabb !=nil {return _dbabb ;};_gbbfd :=_cacg (_facae );_cebgd ._bffgg =_gbbfd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cebgd ._bffgg ==""{_ac .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _bgda !=""{_bgfdd ,_ddfgd :=_gbecd (_bgda );if _ddfgd !=nil {return _ddfgd ;};_fdgf ,_ddfgd :=_cee .NewCustomSimpleTextEncoder (_bgfdd ,nil );if _ddfgd !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ddfgd );return nil ;};_cebgd ._gabgg =_fdgf ;};return nil ;};

// String returns a human readable description of `fontfile`.
func (_daeea *fontFile )String ()string {_geega :="\u005b\u004e\u006f\u006e\u0065\u005d";if _daeea ._gabgg !=nil {_geega =_daeea ._gabgg .String ();};return _f .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_daeea ._bffgg ,_geega );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfecc *PdfColorspaceSpecialPattern )ToPdfObject ()_da .PdfObject {if _cfecc .UnderlyingCS ==nil {return _da .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_acgf :=_da .MakeArray (_da .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_acgf .Append (_cfecc .UnderlyingCS .ToPdfObject ());if _cfecc ._egbg !=nil {_cfecc ._egbg .PdfObject =_acgf ;return _cfecc ._egbg ;};return _acgf ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_dgfd :=&PdfColorspaceCalRGB {};_dgfd .BlackPoint =[]float64 {0.0,0.0,0.0};_dgfd .Gamma =[]float64 {1.0,1.0,1.0};_dgfd .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _dgfd ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ggd :=NewPdfAnnotation ();_dba :=&PdfAnnotationScreen {};_dba .PdfAnnotation =_ggd ;_ggd .SetContext (_dba );return _dba ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fce :=NewPdfAction ();_gc :=&PdfActionGoTo3DView {};_gc .PdfAction =_fce ;_fce .SetContext (_gc );return _gc ;};func (_aegdd *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// GetAction returns the PDF action for the annotation link.
func (_aegd *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _aegd ._aega !=nil {return _aegd ._aega ,nil ;};if _aegd .A ==nil {return nil ,nil ;};if _aegd ._gfd ==nil {return nil ,nil ;};_geaf ,_bac :=_aegd ._gfd .loadAction (_aegd .A );if _bac !=nil {return nil ,_bac ;};_aegd ._aega =_geaf ;return _aegd ._aega ,nil ;};func (_cegf *PdfReader )newPdfAnnotationScreenFromDict (_bfddb *_da .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fbfc :=PdfAnnotationScreen {};_fbfc .T =_bfddb .Get ("\u0054");_fbfc .MK =_bfddb .Get ("\u004d\u004b");_fbfc .A =_bfddb .Get ("\u0041");_fbfc .AA =_bfddb .Get ("\u0041\u0041");return &_fbfc ,nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _da .PdfObject ;};

// String implements interface PdfObject.
func (_aee *PdfAction )String ()string {_eg ,_bd :=_aee .ToPdfObject ().(*_da .PdfIndirectObject );if _bd {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aee ._ae ,_eg .PdfObject .String ());};return "";};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_afcdc *PdfTilingPattern )ToPdfObject ()_da .PdfObject {_afcdc .PdfPattern .ToPdfObject ();_bfcg :=_afcdc .getDict ();if _afcdc .PaintType !=nil {_bfcg .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_afcdc .PaintType );};if _afcdc .TilingType !=nil {_bfcg .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_afcdc .TilingType );};if _afcdc .BBox !=nil {_bfcg .Set ("\u0042\u0042\u006f\u0078",_afcdc .BBox .ToPdfObject ());};if _afcdc .XStep !=nil {_bfcg .Set ("\u0058\u0053\u0074e\u0070",_afcdc .XStep );};if _afcdc .YStep !=nil {_bfcg .Set ("\u0059\u0053\u0074e\u0070",_afcdc .YStep );};if _afcdc .Resources !=nil {_bfcg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_afcdc .Resources .ToPdfObject ());};if _afcdc .Matrix !=nil {_bfcg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afcdc .Matrix );};return _afcdc ._geggda ;};func _eeebd (_dccge _da .PdfObject )(PdfFunction ,error ){_dccge =_da .ResolveReference (_dccge );if _adae ,_ecgecf :=_dccge .(*_da .PdfObjectStream );_ecgecf {_gfbfg :=_adae .PdfObjectDictionary ;_cebe ,_dgcce :=_gfbfg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_da .PdfObjectInteger );if !_dgcce {_ac .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_cebe ==0{return _beec (_adae );}else if *_cebe ==4{return _bcagd (_adae );}else {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ecba ,_efeab :=_dccge .(*_da .PdfIndirectObject );_efeab {_egefa ,_faeeb :=_ecba .PdfObject .(*_da .PdfObjectDictionary );if !_faeeb {_ac .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_faecc ,_faeeb :=_egefa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_da .PdfObjectInteger );if !_faeeb {_ac .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_faecc ==2{return _fbba (_ecba );}else if *_faecc ==3{return _cffa (_ecba );}else {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bedae ,_fadgg :=_dccge .(*_da .PdfObjectDictionary );_fadgg {_fabgf ,_ffeb :=_bedae .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_da .PdfObjectInteger );if !_ffeb {_ac .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fabgf ==2{return _fbba (_bedae );}else if *_fabgf ==3{return _cffa (_bedae );}else {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ac .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dccge );return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// GetPage returns the PdfPage model for the specified page number.
func (_fedcc *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fedcc ._bcgcg .GetCrypter ()!=nil &&!_fedcc ._bcgcg .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_fedcc ._efbae )< pageNumber {return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_gfddbb :=pageNumber -1;if _gfddbb < 0{return nil ,_f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_facdaa :=_fedcc .PageList [_gfddbb ];return _facdaa ,nil ;};func (_bdf *PdfReader )newPdfAnnotationCircleFromDict (_gdca *_da .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_dbbb :=PdfAnnotationCircle {};_cgce ,_dadc :=_bdf .newPdfAnnotationMarkupFromDict (_gdca );if _dadc !=nil {return nil ,_dadc ;};_dbbb .PdfAnnotationMarkup =_cgce ;_dbbb .BS =_gdca .Get ("\u0042\u0053");_dbbb .IC =_gdca .Get ("\u0049\u0043");_dbbb .BE =_gdca .Get ("\u0042\u0045");_dbbb .RD =_gdca .Get ("\u0052\u0044");return &_dbbb ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_bgbce *pdfSignDictionary )WriteString ()string {_bgbce ._gfcef =0;_bgbce ._afccd =0;_bgbce ._dgaeb =0;_bgbce ._bbeac =0;_fbdfb :=_bf .NewBuffer (nil );_fbdfb .WriteString ("\u003c\u003c");for _ ,_cgbaf :=range _bgbce .Keys (){_dcade :=_bgbce .Get (_cgbaf );switch _cgbaf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fbdfb .WriteString (_cgbaf .WriteString ());_fbdfb .WriteString ("\u0020");_bgbce ._dgaeb =_fbdfb .Len ();_fbdfb .WriteString (_dcade .WriteString ());_fbdfb .WriteString ("\u0020");_bgbce ._bbeac =_fbdfb .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fbdfb .WriteString (_cgbaf .WriteString ());_fbdfb .WriteString ("\u0020");_bgbce ._gfcef =_fbdfb .Len ();_fbdfb .WriteString (_dcade .WriteString ());_fbdfb .WriteString ("\u0020");_bgbce ._afccd =_fbdfb .Len ()-1;default:_fbdfb .WriteString (_cgbaf .WriteString ());_fbdfb .WriteString ("\u0020");_fbdfb .WriteString (_dcade .WriteString ());};};_fbdfb .WriteString ("\u003e\u003e");return _fbdfb .String ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gfgf *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gfgf .Base .GetNumComponents ();_aggeb :=int (vals [0])*N ;if _aggeb < 0||(_aggeb +N -1)>=len (_gfgf ._bacc ){return nil ,_ag .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_ddbed :=_gfgf ._bacc [_aggeb :_aggeb +N ];var _aecfe []float64 ;for _ ,_bebf :=range _ddbed {_aecfe =append (_aecfe ,float64 (_bebf )/255.0);};_fcba ,_ggcdf :=_gfgf .Base .ColorFromFloats (_aecfe );if _ggcdf !=nil {return nil ,_ggcdf ;};return _fcba ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_adb *PdfActionURI )ToPdfObject ()_da .PdfObject {_adb .PdfAction .ToPdfObject ();_abc :=_adb ._cf ;_fe :=_abc .PdfObject .(*_da .PdfObjectDictionary );_fe .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeURI )));_fe .SetIfNotNil ("\u0055\u0052\u0049",_adb .URI );_fe .SetIfNotNil ("\u0049\u0073\u004da\u0070",_adb .IsMap );return _abc ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_da .PdfObjectStream )(*XObjectImage ,error ){_afbcg :=&XObjectImage {};_afbcg ._cdgc =stream ;_gadec :=*(stream .PdfObjectDictionary );_gabf ,_gbeeg :=_da .NewEncoderFromStream (stream );if _gbeeg !=nil {return nil ,_gbeeg ;};_afbcg .Filter =_gabf ;if _cggbd :=_da .TraceToDirectObject (_gadec .Get ("\u0057\u0069\u0064t\u0068"));_cggbd !=nil {_aeegb ,_ecfcc :=_cggbd .(*_da .PdfObjectInteger );if !_ecfcc {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_gegcf :=int64 (*_aeegb );_afbcg .Width =&_gegcf ;}else {return nil ,_ag .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ddege :=_da .TraceToDirectObject (_gadec .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_ddege !=nil {_gceb ,_gcdgb :=_ddege .(*_da .PdfObjectInteger );if !_gcdgb {return nil ,_ag .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gdecc :=int64 (*_gceb );_afbcg .Height =&_gdecc ;}else {return nil ,_ag .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _gccaa :=_da .TraceToDirectObject (_gadec .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_gccaa !=nil {_fdceb ,_fadcb :=NewPdfColorspaceFromPdfObject (_gccaa );if _fadcb !=nil {return nil ,_fadcb ;};_afbcg .ColorSpace =_fdceb ;}else {_ac .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_afbcg .ColorSpace =NewPdfColorspaceDeviceGray ();};if _bcdbd :=_da .TraceToDirectObject (_gadec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_bcdbd !=nil {_ebgbf ,_ggfdd :=_bcdbd .(*_da .PdfObjectInteger );if !_ggfdd {return nil ,_ag .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fbdfd :=int64 (*_ebgbf );_afbcg .BitsPerComponent =&_fbdfd ;};_afbcg .Intent =_gadec .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_afbcg .ImageMask =_gadec .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_afbcg .Mask =_gadec .Get ("\u004d\u0061\u0073\u006b");_afbcg .Decode =_gadec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_afbcg .Interpolate =_gadec .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_afbcg .Alternatives =_gadec .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_afbcg .SMask =_gadec .Get ("\u0053\u004d\u0061s\u006b");_afbcg .SMaskInData =_gadec .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_afbcg .Matte =_gadec .Get ("\u004d\u0061\u0074t\u0065");_afbcg .Name =_gadec .Get ("\u004e\u0061\u006d\u0065");_afbcg .StructParent =_gadec .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_afbcg .ID =_gadec .Get ("\u0049\u0044");_afbcg .OPI =_gadec .Get ("\u004f\u0050\u0049");_afbcg .Metadata =_gadec .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_afbcg .OC =_gadec .Get ("\u004f\u0043");_afbcg .Stream =stream .Stream ;return _afbcg ,nil ;};func (_acgae *PdfWriter )addObjects (_cbaaa _da .PdfObject )error {_ac .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _ebcae ,_aede :=_cbaaa .(*_da .PdfIndirectObject );_aede {_ac .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ac .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cbaaa ,_ebcae );_ac .Log .Trace ("\u002d\u0020\u0025\u0073",_ebcae .PdfObject );if _acgae .addObject (_ebcae ){_edag :=_acgae .addObjects (_ebcae .PdfObject );if _edag !=nil {return _edag ;};};return nil ;};if _gdaaf ,_bcgae :=_cbaaa .(*_da .PdfObjectStream );_bcgae {_ac .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ac .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cbaaa ,_cbaaa );if _acgae .addObject (_gdaaf ){_dbcf :=_acgae .addObjects (_gdaaf .PdfObjectDictionary );if _dbcf !=nil {return _dbcf ;};};return nil ;};if _ecbedg ,_bedeb :=_cbaaa .(*_da .PdfObjectDictionary );_bedeb {_ac .Log .Trace ("\u0044\u0069\u0063\u0074");_ac .Log .Trace ("\u002d\u0020\u0025\u0073",_cbaaa );for _ ,_agfbd :=range _ecbedg .Keys (){_effgd :=_ecbedg .Get (_agfbd );if _ggfdc ,_eaagee :=_effgd .(*_da .PdfObjectReference );_eaagee {_effgd =_ggfdc .Resolve ();_ecbedg .Set (_agfbd ,_effgd );};if _agfbd !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _fcbcb :=_acgae .addObjects (_effgd );_fcbcb !=nil {return _fcbcb ;};}else {if _ ,_geabd :=_effgd .(*_da .PdfObjectNull );_geabd {continue ;};if _eeeec :=_acgae .hasObject (_effgd );!_eeeec {_ac .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_effgd ,_effgd ,_effgd );_acgae ._bfggf [_effgd ]=append (_acgae ._bfggf [_effgd ],_ecbedg );};};};return nil ;};if _daaf ,_acaga :=_cbaaa .(*_da .PdfObjectArray );_acaga {_ac .Log .Trace ("\u0041\u0072\u0072a\u0079");_ac .Log .Trace ("\u002d\u0020\u0025\u0073",_cbaaa );if _daaf ==nil {return _ag .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _fcge ,_cbcca :=range _daaf .Elements (){if _geccf ,_ddfb :=_cbcca .(*_da .PdfObjectReference );_ddfb {_cbcca =_geccf .Resolve ();_daaf .Set (_fcge ,_cbcca );};if _gdae :=_acgae .addObjects (_cbcca );_gdae !=nil {return _gdae ;};};return nil ;};if _ ,_bdcbg :=_cbaaa .(*_da .PdfObjectReference );_bdcbg {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cbaaa );return _ag .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};type pdfCIDFontType2 struct{fontCommon ;_affea *_da .PdfIndirectObject ;_ggcbg _cee .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_da .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _da .PdfObject ;W _da .PdfObject ;DW2 _da .PdfObject ;W2 _da .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _da .PdfObject ;_faag map[_cee .CharCode ]float64 ;_eeef float64 ;_dffc map[rune ]int ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_da .PdfObjectArray ;ExtGState _da .PdfObject ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _da .PdfObject ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_edad :=NewPdfAnnotation ();_gcb :=&PdfAnnotationTrapNet {};_gcb .PdfAnnotation =_edad ;_edad .SetContext (_gcb );return _gcb ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_gdgc :=&PdfColorspaceCalGray {};_gdgc .BlackPoint =[]float64 {0.0,0.0,0.0};_gdgc .Gamma =1;return _gdgc ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_fcag PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fcag ._edgc .getFontDescriptor (),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gae *PdfAnnotationPrinterMark )ToPdfObject ()_da .PdfObject {_gae .PdfAnnotation .ToPdfObject ();_defe :=_gae ._cfd ;_cbed :=_defe .PdfObject .(*_da .PdfObjectDictionary );_cbed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_cbed .SetIfNotNil ("\u004d\u004e",_gae .MN );return _defe ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_cbef *PdfPageResources )SetShadingByName (keyName _da .PdfObjectName ,shadingObj _da .PdfObject )error {if _cbef .Shading ==nil {_cbef .Shading =_da .MakeDict ();};_edff ,_abffcc :=_cbef .Shading .(*_da .PdfObjectDictionary );if !_abffcc {return _da .ErrTypeError ;};_edff .Set (keyName ,shadingObj );return nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ef .Time ){_fcbecf =modifiedDate };

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _da .PdfObject ;Movie _da .PdfObject ;A _da .PdfObject ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_fcbd *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _fcbd ._bcgdd !=nil {return _fcbd ._bcgdd ,nil ;};if _fcbd .ColorSpace ==nil {return nil ,nil ;};_gcgff ,_fggf :=_dacab (_fcbd .ColorSpace );if _fggf !=nil {return nil ,_fggf ;};_fcbd ._bcgdd =_gcgff ;return _fcbd ._bcgdd ,nil ;};func (_fagd *PdfReader )buildOutlineTree (_ffgcd _da .PdfObject ,_edeb *PdfOutlineTreeNode ,_degbe *PdfOutlineTreeNode ,_dbaf map[_da .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _dbaf ==nil {_dbaf =map[_da .PdfObject ]struct{}{};};_dbaf [_ffgcd ]=struct{}{};_cbca ,_facc :=_ffgcd .(*_da .PdfIndirectObject );if !_facc {return nil ,nil ,_f .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ffgcd );};_aabff ,_bafg :=_cbca .PdfObject .(*_da .PdfObjectDictionary );if !_bafg {return nil ,nil ,_ag .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ac .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_aabff ,_cbca ,_cbca );if _fbeeg :=_aabff .Get ("\u0054\u0069\u0074l\u0065");_fbeeg !=nil {_cadab ,_bgdgg :=_fagd .newPdfOutlineItemFromIndirectObject (_cbca );if _bgdgg !=nil {return nil ,nil ,_bgdgg ;};_cadab .Parent =_edeb ;_cadab .Prev =_degbe ;_cebbbd :=_da .ResolveReference (_aabff .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_egfba :=_dbaf [_cebbbd ];_cebbbd !=nil &&_cebbbd !=_cbca &&!_egfba {if !_da .IsNullObject (_cebbbd ){_egbc ,_deege ,_fcgag :=_fagd .buildOutlineTree (_cebbbd ,&_cadab .PdfOutlineTreeNode ,nil ,_dbaf );if _fcgag !=nil {_ac .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fcgag );}else {_cadab .First =_egbc ;_cadab .Last =_deege ;};};};_caee :=_da .ResolveReference (_aabff .Get ("\u004e\u0065\u0078\u0074"));if _ ,_dgbgf :=_dbaf [_caee ];_caee !=nil &&_caee !=_cbca &&!_dgbgf {if !_da .IsNullObject (_caee ){_gfgge ,_deagf ,_eaddf :=_fagd .buildOutlineTree (_caee ,_edeb ,&_cadab .PdfOutlineTreeNode ,_dbaf );if _eaddf !=nil {_ac .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_eaddf );}else {_cadab .Next =_gfgge ;return &_cadab .PdfOutlineTreeNode ,_deagf ,nil ;};};};return &_cadab .PdfOutlineTreeNode ,&_cadab .PdfOutlineTreeNode ,nil ;};_fdca ,_edaa :=_bcgdg (_cbca );if _edaa !=nil {return nil ,nil ,_edaa ;};_fdca .Parent =_edeb ;if _fcea :=_aabff .Get ("\u0046\u0069\u0072s\u0074");_fcea !=nil {_fcea =_da .ResolveReference (_fcea );_dcea :=_da .TraceToDirectObject (_fcea );if _ ,_ccffc :=_dcea .(*_da .PdfObjectNull );!_ccffc &&_dcea !=nil {_dfddf ,_cafgf ,_adgga :=_fagd .buildOutlineTree (_fcea ,&_fdca .PdfOutlineTreeNode ,nil ,_dbaf );if _adgga !=nil {_ac .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_adgga );}else {_fdca .First =_dfddf ;_fdca .Last =_cafgf ;};};};return &_fdca .PdfOutlineTreeNode ,&_fdca .PdfOutlineTreeNode ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_abgc *_da .PdfIndirectObject ;};func (_ceec *PdfReader )newPdfAnnotationCaretFromDict (_bgb *_da .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_fee :=PdfAnnotationCaret {};_dec ,_gaf :=_ceec .newPdfAnnotationMarkupFromDict (_bgb );if _gaf !=nil {return nil ,_gaf ;};_fee .PdfAnnotationMarkup =_dec ;_fee .RD =_bgb .Get ("\u0052\u0044");_fee .Sy =_bgb .Get ("\u0053\u0079");return &_fee ,nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_feeg *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _feeg .baseFields ()._gcgf !=nil {return _feeg .baseFields ()._gcgf ;};if _cgda :=_feeg ._edgc .getFontDescriptor ();_cgda !=nil {return _cgda ;};_ac .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_feeg );return nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cee .SimpleEncoder ,error ){_fgecd ,_fcgf :=_abecb (basefont );if _fcgf !=nil {return nil ,nil ,_fcgf ;};_abcf ,_ecbc :=_fgecd .Encoder ().(_cee .SimpleEncoder );if !_ecbc {return nil ,nil ,_f .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_fgecd .Encoder ());};_eege :=make (map[rune ]_cee .GlyphName );for _afce :=range alphabet {if _ ,_dcggg :=_abcf .RuneToCharcode (_afce );!_dcggg {_ ,_adbgd :=_fgecd ._bdad [_afce ];if !_adbgd {_ac .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_afce ,_afce );continue ;};_adbcd ,_adbgd :=_cee .RuneToGlyph (_afce );if !_adbgd {_ac .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_afce ,_afce );continue ;};if len (_eege )>=255{return nil ,nil ,_ag .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_eege [_afce ]=_adbcd ;};};var (_afcgg []_cee .CharCode ;_fefbc []_cee .CharCode ;);for _gdbdc :=_cee .CharCode (1);_gdbdc <=0xff;_gdbdc ++{_fddb ,_ddfee :=_abcf .CharcodeToRune (_gdbdc );if !_ddfee {_afcgg =append (_afcgg ,_gdbdc );continue ;};if _ ,_ddfee =alphabet [_fddb ];!_ddfee {_fefbc =append (_fefbc ,_gdbdc );};};_ggba :=append (_afcgg ,_fefbc ...);if len (_ggba )< len (_eege ){return nil ,nil ,_f .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_eege ),len (_ggba ));};_ddegb :=make ([]rune ,0,len (_eege ));for _bddf :=range _eege {_ddegb =append (_ddegb ,_bddf );};_ca .Slice (_ddegb ,func (_ddgaa ,_cfga int )bool {return _ddegb [_ddgaa ]< _ddegb [_cfga ]});_abeeg :=make (map[_cee .CharCode ]_cee .GlyphName ,len (_ddegb ));for _ ,_bfcc :=range _ddegb {_cfabd :=_ggba [0];_ggba =_ggba [1:];_abeeg [_cfabd ]=_eege [_bfcc ];};_abcf =_cee .ApplyDifferences (_abcf ,_abeeg );_fgecd .SetEncoder (_abcf );return &PdfFont {_edgc :&_fgecd },_abcf ,nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_defc *PdfPageResources )GenerateXObjectName ()_da .PdfObjectName {_ggcg :=1;for {_edead :=_da .MakeName (_f .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_ggcg ));if !_defc .HasXObjectByName (*_edead ){return *_edead ;};_ggcg ++;};};

// GetContainingPdfObject implements interface PdfModel.
func (_eedfc *PdfSignature )GetContainingPdfObject ()_da .PdfObject {return _eedfc ._egggf };

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_abcg *_da .PdfIndirectObject ;};func _gcecag (_fagcg *_da .PdfObjectArray )(float64 ,error ){_aacf ,_baaeg :=_fagcg .ToFloat64Array ();if _baaeg !=nil {_ac .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fagcg ,_baaeg );};switch len (_aacf ){case 1:return _aacf [0],nil ;case 3:_bfecb :=PdfColorspaceDeviceRGB {};_cdbbe ,_agabb :=_bfecb .ColorFromFloats (_aacf );if _agabb !=nil {return 0.0,_agabb ;};return _cdbbe .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_geefe :=PdfColorspaceDeviceCMYK {};_acgad ,_faggb :=_geefe .ColorFromFloats (_aacf );if _faggb !=nil {return 0.0,_faggb ;};_bbega ,_faggb :=_geefe .ColorToRGB (_acgad .(*PdfColorDeviceCMYK ));if _faggb !=nil {return 0.0,_faggb ;};return _bbega .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_baaeg =_ag .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ac .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fagcg ,_baaeg );return 0.0,_baaeg ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_cbbfb ,_gccb :=_abecb (basefont );if _gccb !=nil {return nil ,_gccb ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_cbbfb ._bgdb =_cee .NewWinAnsiEncoder ();};return &PdfFont {_edgc :&_cbbfb },nil ;};

// ToInteger convert to an integer format.
func (_eade *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_dcde :=_bb .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_dcde *_eade .C ()),uint32 (_dcde *_eade .M ()),uint32 (_dcde *_eade .Y ()),uint32 (_dcde *_eade .K ())};};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_dabee *PdfColorspaceLab )DecodeArray ()[]float64 {_cgb :=[]float64 {0,100};if _dabee .Range !=nil &&len (_dabee .Range )==4{_cgb =append (_cgb ,_dabee .Range ...);}else {_cgb =append (_cgb ,-100,100,-100,100);};return _cgb ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cabg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cabg .AlternateSpace ==nil {return nil ,_ag .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _cabg .AlternateSpace .ColorToRGB (color );};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_dafe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_da .PdfObject {_gccg :=_da .MakeDict ();if _dafe .Subtype !=nil {_gccg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dafe .Subtype );};_gccg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_dafe .Colorants );_gccg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_dafe .Process );_gccg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_dafe .MixingHints );if _dafe ._bedc !=nil {_dafe ._bedc .PdfObject =_gccg ;return _dafe ._bedc ;};return _gccg ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ccbcc pdfCIDFontType0 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){return _dg .CharMetrics {Wx :_ccbcc ._bbcfa },true ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _da .PdfObject ;MK _da .PdfObject ;A _da .PdfObject ;AA _da .PdfObject ;BS _da .PdfObject ;Parent _da .PdfObject ;_gcec *PdfField ;_cag bool ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_dd :=NewPdfAction ();_ebg :=&PdfActionLaunch {};_ebg .PdfAction =_dd ;_dd .SetContext (_ebg );return _ebg ;};func (_cbaff *PdfWriter )hasObject (_dfeae _da .PdfObject )bool {_ ,_gcfaac :=_cbaff ._cgag [_dfeae ];return _gcfaac ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _da .PdfObject ;ColorSpace _da .PdfObject ;Pattern _da .PdfObject ;Shading _da .PdfObject ;XObject _da .PdfObject ;Font _da .PdfObject ;ProcSet _da .PdfObject ;Properties _da .PdfObject ;_dgcae *_da .PdfObjectDictionary ;_bcgdd *PdfPageResourcesColorspaces ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ebca *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_geeff ,_gega :=color .(*PdfColorDeviceGray );if !_gega {_ac .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_geeff ),float64 (*_geeff ),float64 (*_geeff )),nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ceee :=NewPdfAnnotation ();_feac :=&PdfAnnotationInk {};_feac .PdfAnnotation =_ceee ;_feac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceee .SetContext (_feac );return _feac ;};

// String returns a string describing the font descriptor.
func (_gegbe *PdfFontDescriptor )String ()string {var _dbfe []string ;if _gegbe .FontName !=nil {_dbfe =append (_dbfe ,_gegbe .FontName .String ());};if _gegbe .FontFamily !=nil {_dbfe =append (_dbfe ,_gegbe .FontFamily .String ());};if _gegbe .fontFile !=nil {_dbfe =append (_dbfe ,_gegbe .fontFile .String ());};if _gegbe ._ggab !=nil {_dbfe =append (_dbfe ,_gegbe ._ggab .String ());};_dbfe =append (_dbfe ,_f .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gegbe .FontFile3 !=nil ));return _f .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_gd .Join (_dbfe ,"\u002c\u0020"));};

// ImageToRGB convert an indexed image to RGB.
func (_ceecb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ceecb .Base .GetNumComponents ();if N < 1{return Image {},_f .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_ebce :=_eff .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._efgcc ,img ._dfff );_gggbe :=_df .NewReader (img .getBase ());_ecgdd :=_df .NewWriter (_ebce );var (_cdde uint32 ;_beaa int ;_fbgg error ;);for {_cdde ,_fbgg =_gggbe .ReadSample ();if _fbgg ==_gg .EOF {break ;}else if _fbgg !=nil {return img ,_fbgg ;};_beaa =int (_cdde );_ac .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_beaa ,N ,len (_ceecb ._bacc ));if (_beaa +1)*N > len (_ceecb ._bacc ){_beaa =len (_ceecb ._bacc )/N -1;_ac .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_beaa );if _beaa < 0{_ac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _gbec :=_beaa *N ;_gbec < (_beaa +1)*N ;_gbec ++{if _fbgg =_ecgdd .WriteSample (uint32 (_ceecb ._bacc [_gbec ]));_fbgg !=nil {return img ,_fbgg ;};};};return _ceecb .Base .ImageToRGB (_abag (&_ebce ));};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_fbf *PdfReader )newPdfActionNamedFromDict (_bdg *_da .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_bdg .Get ("\u004e")},nil ;};type pdfCIDFontType0 struct{fontCommon ;_gfcbg *_da .PdfIndirectObject ;_bcbb _cee .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_da .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _da .PdfObject ;W _da .PdfObject ;DW2 _da .PdfObject ;W2 _da .PdfObject ;_efdf map[_cee .CharCode ]float64 ;_bbcfa float64 ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_cead *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbgb ,_cfee :=color .(*PdfColorPattern );if !_cfee {_ac .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _dbgb .Color ==nil {return color ,nil ;};if _cead .UnderlyingCS ==nil {return nil ,_ag .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _cead .UnderlyingCS .ColorToRGB (_dbgb .Color );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dddb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_bcgg *PdfReader )newPdfAnnotationTextFromDict (_bgc *_da .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gggf :=PdfAnnotationText {};_beef ,_ecee :=_bcgg .newPdfAnnotationMarkupFromDict (_bgc );if _ecee !=nil {return nil ,_ecee ;};_gggf .PdfAnnotationMarkup =_beef ;_gggf .Open =_bgc .Get ("\u004f\u0070\u0065\u006e");_gggf .Name =_bgc .Get ("\u004e\u0061\u006d\u0065");_gggf .State =_bgc .Get ("\u0053\u0074\u0061t\u0065");_gggf .StateModel =_bgc .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gggf ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_feed *PdfFunctionType0 )ToPdfObject ()_da .PdfObject {if _feed ._geaa ==nil {_feed ._geaa =&_da .PdfObjectStream {};};_abceg :=_da .MakeDict ();_abceg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (0));_aaff :=&_da .PdfObjectArray {};for _ ,_dgaa :=range _feed .Domain {_aaff .Append (_da .MakeFloat (_dgaa ));};_abceg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aaff );_becb :=&_da .PdfObjectArray {};for _ ,_ffcc :=range _feed .Range {_becb .Append (_da .MakeFloat (_ffcc ));};_abceg .Set ("\u0052\u0061\u006eg\u0065",_becb );_afacg :=&_da .PdfObjectArray {};for _ ,_abefd :=range _feed .Size {_afacg .Append (_da .MakeInteger (int64 (_abefd )));};_abceg .Set ("\u0053\u0069\u007a\u0065",_afacg );_abceg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_da .MakeInteger (int64 (_feed .BitsPerSample )));if _feed .Order !=1{_abceg .Set ("\u004f\u0072\u0064e\u0072",_da .MakeInteger (int64 (_feed .Order )));};_abceg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_feed ._eaafa ))));_feed ._geaa .Stream =_feed ._eaafa ;_feed ._geaa .PdfObjectDictionary =_abceg ;return _feed ._geaa ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gbecf *_da .PdfIndirectObject ;};func (_efdab *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _faee []*PdfFieldSignature ;for _ ,_bbbca :=range _efdab .AllFields (){switch _bcaaa :=_bbbca .GetContext ().(type ){case *PdfFieldSignature :_abbc :=_bcaaa ;_faee =append (_faee ,_abbc );};};return _faee ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bcfc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_aacb *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_fgfe :=0.3*_aacb .R ()+0.59*_aacb .G ()+0.11*_aacb .B ();_fgfe =_bb .Min (_bb .Max (_fgfe ,0.0),1.0);return NewPdfColorDeviceGray (_fgfe );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_beea *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbbcc :=vals [0];if _bbbcc < 0.0||_bbbcc > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcgdg :=vals [1];if _gcgdg < 0.0||_gcgdg > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egab :=vals [2];if _egab < 0.0||_egab > 1.0{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddde :=NewPdfColorCalRGB (_bbbcc ,_gcgdg ,_egab );return _ddde ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_efgcc []byte ;_dbffg bool ;_dfff []float64 ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_gefed *modelManager )GetModelFromPrimitive (primitive _da .PdfObject )PdfModel {model ,_aeff :=_gefed ._cfcc [primitive ];if !_aeff {return nil ;};return model ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _da .PdfObject ;Name _da .PdfObject ;};

// String returns a string that describes `font`.
func (_eggg *PdfFont )String ()string {_deaae :="";if _eggg ._edgc .Encoder ()!=nil {_deaae =_eggg ._edgc .Encoder ().String ();};return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_eggg ._edgc ,_eggg .baseFields ().coreString (),_deaae );};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_bdbf *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _bdbf .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _da .PdfObject ;Sy _da .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _da .StreamEncoder ;FormType _da .PdfObject ;BBox _da .PdfObject ;Matrix _da .PdfObject ;Resources *PdfPageResources ;Group _da .PdfObject ;Ref _da .PdfObject ;MetaData _da .PdfObject ;PieceInfo _da .PdfObject ;LastModified _da .PdfObject ;StructParent _da .PdfObject ;StructParents _da .PdfObject ;OPI _da .PdfObject ;OC _da .PdfObject ;Name _da .PdfObject ;

// Stream data.
Stream []byte ;_faafe *_da .PdfObjectStream ;};func (_gab *PdfAppender )replaceObject (_ggce ,_bbdga _da .PdfObject ){switch _dgde :=_ggce .(type ){case *_da .PdfIndirectObject :_gab ._geef [_bbdga ]=_dgde .ObjectNumber ;case *_da .PdfObjectStream :_gab ._geef [_bbdga ]=_dgde .ObjectNumber ;};};

// IsCID returns true if the underlying font is CID.
func (_efaf *PdfFont )IsCID ()bool {return _efaf .baseFields ().isCIDFont ()};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_ebbbd :=&PdfSignature {Type :_da .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bdcae :=&pdfSignDictionary {PdfObjectDictionary :_da .MakeDict (),_cbeag :&handler ,_cbcdg :_ebbbd };_ebbbd ._egggf =_da .MakeIndirectObject (_bdcae );return _ebbbd ;};func _ggcfc (_fgfba *_da .PdfObjectDictionary )(*PdfShadingType2 ,error ){_fabb :=PdfShadingType2 {};_febdd :=_fgfba .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _febdd ==nil {_ac .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_cfbb ,_ggbbc :=_febdd .(*_da .PdfObjectArray );if !_ggbbc {_ac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_febdd );return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfbb .Len ()!=4{_ac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cfbb .Len ());return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_fabb .Coords =_cfbb ;if _bbdag :=_fgfba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bbdag !=nil {_bbdag =_da .TraceToDirectObject (_bbdag );_gcbcd ,_abdec :=_bbdag .(*_da .PdfObjectArray );if !_abdec {_ac .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbdag );return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fabb .Domain =_gcbcd ;};_febdd =_fgfba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _febdd ==nil {_ac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_fabb .Function =[]PdfFunction {};if _cgeg ,_fgeba :=_febdd .(*_da .PdfObjectArray );_fgeba {for _ ,_afecf :=range _cgeg .Elements (){_cebaf ,_gbfed :=_eeebd (_afecf );if _gbfed !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbfed );return nil ,_gbfed ;};_fabb .Function =append (_fabb .Function ,_cebaf );};}else {_gcca ,_bfde :=_eeebd (_febdd );if _bfde !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfde );return nil ,_bfde ;};_fabb .Function =append (_fabb .Function ,_gcca );};if _abcfc :=_fgfba .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_abcfc !=nil {_abcfc =_da .TraceToDirectObject (_abcfc );_badfd ,_dgbbc :=_abcfc .(*_da .PdfObjectArray );if !_dgbbc {_ac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abcfc );return nil ,_da .ErrTypeError ;};if _badfd .Len ()!=2{_ac .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_badfd .Len ());return nil ,ErrInvalidAttribute ;};_fabb .Extend =_badfd ;};return &_fabb ,nil ;};

// ToPdfObject returns a stream object.
func (_eadcb *XObjectImage )ToPdfObject ()_da .PdfObject {_fcccd :=_eadcb ._cdgc ;_gbcfa :=_fcccd .PdfObjectDictionary ;if _eadcb .Filter !=nil {_gbcfa =_eadcb .Filter .MakeStreamDict ();_fcccd .PdfObjectDictionary =_gbcfa ;};_gbcfa .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_gbcfa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0049\u006d\u0061g\u0065"));_gbcfa .Set ("\u0057\u0069\u0064t\u0068",_da .MakeInteger (*(_eadcb .Width )));_gbcfa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_da .MakeInteger (*(_eadcb .Height )));if _eadcb .BitsPerComponent !=nil {_gbcfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_da .MakeInteger (*(_eadcb .BitsPerComponent )));};if _eadcb .ColorSpace !=nil {_gbcfa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eadcb .ColorSpace .ToPdfObject ());};_gbcfa .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_eadcb .Intent );_gbcfa .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_eadcb .ImageMask );_gbcfa .SetIfNotNil ("\u004d\u0061\u0073\u006b",_eadcb .Mask );_gbcfa .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_eadcb .Decode );_gbcfa .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_eadcb .Interpolate );_gbcfa .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_eadcb .Alternatives );_gbcfa .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_eadcb .SMask );_gbcfa .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_eadcb .SMaskInData );_gbcfa .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_eadcb .Matte );_gbcfa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eadcb .Name );_gbcfa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eadcb .StructParent );_gbcfa .SetIfNotNil ("\u0049\u0044",_eadcb .ID );_gbcfa .SetIfNotNil ("\u004f\u0050\u0049",_eadcb .OPI );_gbcfa .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eadcb .Metadata );_gbcfa .SetIfNotNil ("\u004f\u0043",_eadcb .OC );_gbcfa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_eadcb .Stream ))));_fcccd .Stream =_eadcb .Stream ;return _fcccd ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_begb *PdfPage )GetPageAsIndirectObject ()*_da .PdfIndirectObject {return _begb ._dabad };

// ToPdfObject implements interface PdfModel.
func (_bbe *PdfActionSetOCGState )ToPdfObject ()_da .PdfObject {_bbe .PdfAction .ToPdfObject ();_eac :=_bbe ._cf ;_ddg :=_eac .PdfObject .(*_da .PdfObjectDictionary );_ddg .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeSetOCGState )));_ddg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bbe .State );_ddg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bbe .PreserveRB );return _eac ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fcdbe *PdfField )FullName ()(string ,error ){var _afggg _bf .Buffer ;if _fcdbe .T ==nil {return _afggg .String (),_ag .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_aebg :=[]string {_fcdbe .T .Decoded ()};_gbcd :=map[*PdfField ]bool {};_gbcd [_fcdbe ]=true ;_adde :=_fcdbe .Parent ;for _adde !=nil {if _ ,_egfef :=_gbcd [_adde ];_egfef {return _afggg .String (),_ag .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _adde .T ==nil {return _afggg .String (),_ag .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_aebg =append (_aebg ,_adde .T .Decoded ());_gbcd [_adde ]=true ;_adde =_adde .Parent ;};for _bcbcd :=len (_aebg )-1;_bcbcd >=0;_bcbcd --{_afggg .WriteString (_aebg [_bcbcd ]);if _bcbcd > 0{_afggg .WriteString ("\u002e");};};return _afggg .String (),nil ;};var _adcac ="";

// Mask returns the uin32 bitmask for the specific flag.
func (_cfegd FieldFlag )Mask ()uint32 {return uint32 (_cfegd )};

// RemovePage removes a page by number.
func (_fedf *PdfAppender )RemovePage (pageNum int ){_ddcf :=pageNum -1;_fedf ._cadf =append (_fedf ._cadf [0:_ddcf ],_fedf ._cadf [pageNum :]...);};

// SetForms sets the Acroform for a PDF file.
func (_bcagec *PdfWriter )SetForms (form *PdfAcroForm )error {_bcagec ._bcggg =form ;return nil };func (_cgg *PdfReader )newPdfAnnotationSquigglyFromDict (_bca *_da .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_dbeg :=PdfAnnotationSquiggly {};_fabg ,_fdd :=_cgg .newPdfAnnotationMarkupFromDict (_bca );if _fdd !=nil {return nil ,_fdd ;};_dbeg .PdfAnnotationMarkup =_fabg ;_dbeg .QuadPoints =_bca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dbeg ,nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_faf :=NewPdfAnnotation ();_abf :=&PdfAnnotationStrikeOut {};_abf .PdfAnnotation =_faf ;_abf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_faf .SetContext (_abf );return _abf ;};func _aecd (_gcdc _da .PdfObject )(map[_cee .CharCode ]float64 ,error ){if _gcdc ==nil {return nil ,nil ;};_bfdgd ,_acfef :=_da .GetArray (_gcdc );if !_acfef {return nil ,nil ;};_bdea :=map[_cee .CharCode ]float64 {};_fbff :=_bfdgd .Len ();for _bdgb :=0;_bdgb < _fbff -1;_bdgb ++{_eaeff :=_da .TraceToDirectObject (_bfdgd .Get (_bdgb ));_bgdgaf ,_beffd :=_da .GetIntVal (_eaeff );if !_beffd {return nil ,_f .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_bdgb ,_eaeff );};_bdgb ++;if _bdgb > _fbff -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bfdgd );};_dgbb :=_da .TraceToDirectObject (_bfdgd .Get (_bdgb ));switch _dgbb .(type ){case *_da .PdfObjectArray :_bdcga ,_ :=_da .GetArray (_dgbb );if _fdbbg ,_bcgf :=_bdcga .ToFloat64Array ();_bcgf ==nil {for _ccggg :=0;_ccggg < len (_fdbbg );_ccggg ++{_bdea [_cee .CharCode (_bgdgaf +_ccggg )]=_fdbbg [_ccggg ];};}else {return nil ,_f .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bdgb ,_dgbb );};case *_da .PdfObjectInteger :_gbcc ,_dabca :=_da .GetIntVal (_dgbb );if !_dabca {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bdgb ,_dgbb );};_bdgb ++;if _bdgb > _fbff -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bfdgd );};_ebdf :=_bfdgd .Get (_bdgb );_badaa ,_cegfe :=_da .GetNumberAsFloat (_ebdf );if _cegfe !=nil {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bdgb ,_ebdf );};for _aaggd :=_bgdgaf ;_aaggd <=_gbcc ;_aaggd ++{_bdea [_cee .CharCode (_aaggd )]=_badaa ;};default:return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bdgb ,_dgbb );};};return _bdea ,nil ;};type pdfSignDictionary struct{*_da .PdfObjectDictionary ;_cbeag *SignatureHandler ;_cbcdg *PdfSignature ;_eagcf int64 ;_gfcef int ;_afccd int ;_dgaeb int ;_bbeac int ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_gegg *PdfReader )newPdfAnnotationSoundFromDict (_fff *_da .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_gadc :=PdfAnnotationSound {};_afggb ,_bbg :=_gegg .newPdfAnnotationMarkupFromDict (_fff );if _bbg !=nil {return nil ,_bbg ;};_gadc .PdfAnnotationMarkup =_afggb ;_gadc .Name =_fff .Get ("\u004e\u0061\u006d\u0065");_gadc .Sound =_fff .Get ("\u0053\u006f\u0075n\u0064");return &_gadc ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ff :=NewPdfAction ();_ggff :=&PdfActionTrans {};_ggff .PdfAction =_ff ;_ff .SetContext (_ggff );return _ggff ;};func (_fffe *pdfFontType0 )baseFields ()*fontCommon {return &_fffe .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_ggf *PdfAction )ToPdfObject ()_da .PdfObject {_ad :=_ggf ._cf ;_aeg :=_ad .PdfObject .(*_da .PdfObjectDictionary );_aeg .Clear ();_aeg .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_aeg .SetIfNotNil ("\u0053",_ggf .S );_aeg .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ggf .Next );return _ad ;};var _bbcge ="";

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_gdeg *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ecaf ,_gfddb :=color .(*PdfColorDeviceCMYK );if !_gfddb {_ac .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bcdc :=_ecaf .C ();_afge :=_ecaf .M ();_bgbd :=_ecaf .Y ();_beac :=_ecaf .K ();_bcdc =_bcdc *(1-_beac )+_beac ;_afge =_afge *(1-_beac )+_beac ;_bgbd =_bgbd *(1-_beac )+_beac ;_cffc :=1-_bcdc ;_dabde :=1-_afge ;_bbaa :=1-_bgbd ;return NewPdfColorDeviceRGB (_cffc ,_dabde ,_bbaa ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gafe *PdfAnnotationStamp )ToPdfObject ()_da .PdfObject {_gafe .PdfAnnotation .ToPdfObject ();_fcecc :=_gafe ._cfd ;_eede :=_fcecc .PdfObject .(*_da .PdfObjectDictionary );_gafe .PdfAnnotationMarkup .appendToPdfDictionary (_eede );_eede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0074\u0061m\u0070"));_eede .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gafe .Name );return _fcecc ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_aada *PdfField )SetContext (ctx PdfModel ){_aada ._ffgg =ctx };

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_da .PdfObjectArray ;Matrix *_da .PdfObjectArray ;Function []PdfFunction ;};func (_aecc *PdfReader )newPdfAnnotationPopupFromDict (_dcee *_da .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_ffae :=PdfAnnotationPopup {};_ffae .Parent =_dcee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_ffae .Open =_dcee .Get ("\u004f\u0070\u0065\u006e");return &_ffae ,nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_da .PdfObjectBool ;SigFlags *_da .PdfObjectInteger ;CO *_da .PdfObjectArray ;DR *PdfPageResources ;DA *_da .PdfObjectString ;Q *_da .PdfObjectInteger ;XFA _da .PdfObject ;_abaf *_da .PdfIndirectObject ;};type pdfFontSimple struct{fontCommon ;_cgee *_da .PdfIndirectObject ;_efege map[_cee .CharCode ]float64 ;_bgdb _cee .TextEncoder ;_bfdfgg _cee .TextEncoder ;_bgfd *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _da .PdfObject ;LastChar _da .PdfObject ;Widths _da .PdfObject ;Encoding _da .PdfObject ;_bdad map[rune ]_dg .CharMetrics ;};func _adegc (_aecba *_da .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cfbac :=&PdfTilingPattern {};_ddad :=_aecba .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ddad ==nil {_ac .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_acdfb ,_ddbgg :=_ddad .(*_da .PdfObjectInteger );if !_ddbgg {_ac .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddad );return nil ,_da .ErrTypeError ;};_cfbac .PaintType =_acdfb ;_ddad =_aecba .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ddad ==nil {_ac .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_feaed ,_ddbgg :=_ddad .(*_da .PdfObjectInteger );if !_ddbgg {_ac .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddad );return nil ,_da .ErrTypeError ;};_cfbac .TilingType =_feaed ;_ddad =_aecba .Get ("\u0042\u0042\u006f\u0078");if _ddad ==nil {_ac .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ddad =_da .TraceToDirectObject (_ddad );_ffgfb ,_ddbgg :=_ddad .(*_da .PdfObjectArray );if !_ddbgg {_ac .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddad );return nil ,_da .ErrTypeError ;};_ddaaa ,_deeac :=NewPdfRectangle (*_ffgfb );if _deeac !=nil {_ac .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_deeac );return nil ,_deeac ;};_cfbac .BBox =_ddaaa ;_ddad =_aecba .Get ("\u0058\u0053\u0074e\u0070");if _ddad ==nil {_ac .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eefac ,_deeac :=_da .GetNumberAsFloat (_ddad );if _deeac !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_eefac );return nil ,_deeac ;};_cfbac .XStep =_da .MakeFloat (_eefac );_ddad =_aecba .Get ("\u0059\u0053\u0074e\u0070");if _ddad ==nil {_ac .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_caaa ,_deeac :=_da .GetNumberAsFloat (_ddad );if _deeac !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_caaa );return nil ,_deeac ;};_cfbac .YStep =_da .MakeFloat (_caaa );_ddad =_aecba .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ddad ==nil {_ac .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aecba ,_ddbgg =_da .TraceToDirectObject (_ddad ).(*_da .PdfObjectDictionary );if !_ddbgg {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddad );};_dffg ,_deeac :=NewPdfPageResourcesFromDict (_aecba );if _deeac !=nil {return nil ,_deeac ;};_cfbac .Resources =_dffg ;if _cegdg :=_aecba .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cegdg !=nil {_bfeg ,_edbbc :=_cegdg .(*_da .PdfObjectArray );if !_edbbc {_ac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cegdg );return nil ,_da .ErrTypeError ;};_cfbac .Matrix =_bfeg ;};return _cfbac ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gag :=NewPdfAnnotation ();_dbg :=&PdfAnnotationHighlight {};_dbg .PdfAnnotation =_gag ;_dbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gag .SetContext (_dbg );return _dbg ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _da .PdfObject ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_da .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_da .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_da .PdfObjectBool ;_fbacc PdfModel ;_fgfdc _da .PdfObject ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_efafa *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _efafa ._gfgdf !=nil {return _efafa ._gfgdf ,nil ;};if _efafa .Annots ==nil {_efafa ._gfgdf =[]*PdfAnnotation {};return nil ,nil ;};if _efafa ._bfcca ==nil {_efafa ._gfgdf =[]*PdfAnnotation {};return nil ,nil ;};_fafac ,_dbfa :=_efafa ._bfcca .loadAnnotations (_efafa .Annots );if _dbfa !=nil {return nil ,_dbfa ;};if _fafac ==nil {_efafa ._gfgdf =[]*PdfAnnotation {};};_efafa ._gfgdf =_fafac ;return _efafa ._gfgdf ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_decg *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bgdga :=func (_babg float64 )float64 {if _babg >=6.0/29{return _babg *_babg *_babg ;};return 108.0/841*(_babg -4/29);};_edca :=img ._dfff ;if len (_edca )!=6{_ac .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_edca =_decg .DecodeArray ();};_efee :=_df .NewReader (img .getBase ());_ebbb :=_eff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._efgcc ,img ._dfff );_cfbg :=_df .NewWriter (_ebbb );_agae :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_aadc :=make ([]uint32 ,3);var (_addae error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ccac ,_baaced ,_aaab float64 ;);for {_addae =_efee .ReadSamples (_aadc );if _addae ==_gg .EOF {break ;}else if _addae !=nil {return img ,_addae ;};Ls =float64 (_aadc [0])/_agae ;As =float64 (_aadc [1])/_agae ;Bs =float64 (_aadc [2])/_agae ;Ls =_eff .LinearInterpolate (Ls ,0.0,1.0,_edca [0],_edca [1]);As =_eff .LinearInterpolate (As ,0.0,1.0,_edca [2],_edca [3]);Bs =_eff .LinearInterpolate (Bs ,0.0,1.0,_edca [4],_edca [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_decg .WhitePoint [0]*_bgdga (L );Y =_decg .WhitePoint [1]*_bgdga (M );Z =_decg .WhitePoint [2]*_bgdga (N );_ccac =3.240479*X +-1.537150*Y +-0.498535*Z ;_baaced =-0.969256*X +1.875992*Y +0.041556*Z ;_aaab =0.055648*X +-0.204043*Y +1.057311*Z ;_ccac =_bb .Min (_bb .Max (_ccac ,0),1.0);_baaced =_bb .Min (_bb .Max (_baaced ,0),1.0);_aaab =_bb .Min (_bb .Max (_aaab ,0),1.0);_aadc [0]=uint32 (_ccac *_agae );_aadc [1]=uint32 (_baaced *_agae );_aadc [2]=uint32 (_aaab *_agae );if _addae =_cfbg .WriteSamples (_aadc );_addae !=nil {return img ,_addae ;};};return _abag (&_ebbb ),nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_bebe *PdfPattern )GetContainingPdfObject ()_da .PdfObject {return _bebe ._geggda };

// HasFontByName checks if has font resource by name.
func (_dbaa *PdfPage )HasFontByName (name _da .PdfObjectName )bool {_gegbeg ,_fbaba :=_dbaa .Resources .Font .(*_da .PdfObjectDictionary );if !_fbaba {return false ;};if _babf :=_gegbeg .Get (name );_babf !=nil {return true ;};return false ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gg .ReadSeeker )(*PdfReader ,error ){_geegf :=&PdfReader {_cgbad :rs ,_affge :map[_da .PdfObject ]struct{}{},_gafba :_bbdf (),_aceeb :true };_fbaceg ,_ceeccg :=_da .NewParser (rs );if _ceeccg !=nil {return nil ,_ceeccg ;};_geegf ._bcgcg =_fbaceg ;_ffgcc ,_ceeccg :=_geegf .IsEncrypted ();if _ceeccg !=nil {return nil ,_ceeccg ;};if !_ffgcc {_ceeccg =_geegf .loadStructure ();if _ceeccg !=nil {return nil ,_ceeccg ;};};return _geegf ,nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_eadfe *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _eadfe .AcroForm ==nil {return nil ,nil ;};if _eadfe .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_dggce *PdfSignature ;_bgcbb *PdfField ;_geabb SignatureHandler ;};var _baddb []*sigFieldPair ;for _ ,_bdeb :=range _eadfe .AcroForm .AllFields (){if _bdeb .V ==nil {continue ;};if _deafg ,_bccdd :=_da .GetDict (_bdeb .V );_bccdd {if _fgfbg ,_fcbac :=_da .GetNameVal (_deafg .Get ("\u0054\u0079\u0070\u0065"));_fcbac &&_fgfbg =="\u0053\u0069\u0067"{_gada ,_eedefa :=_da .GetIndirect (_bdeb .V );if !_eedefa {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_fecb ,_aabdc :=_eadfe .newPdfSignatureFromIndirect (_gada );if _aabdc !=nil {return nil ,_aabdc ;};var _efbab SignatureHandler ;for _ ,_cedba :=range handlers {if _cedba .IsApplicable (_fecb ){_efbab =_cedba ;break ;};};_baddb =append (_baddb ,&sigFieldPair {_dggce :_fecb ,_bgcbb :_bdeb ,_geabb :_efbab });};};};var _bagag []SignatureValidationResult ;for _ ,_abbag :=range _baddb {_accea :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_abbag ._bgcbb }};if _abbag ._geabb ==nil {_accea .Errors =append (_accea .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_bagag =append (_bagag ,_accea );continue ;};_cebec ,_adgeb :=_abbag ._geabb .NewDigest (_abbag ._dggce );if _adgeb !=nil {_accea .Errors =append (_accea .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_adgeb .Error ());_bagag =append (_bagag ,_accea );continue ;};_egebff :=_abbag ._dggce .ByteRange ;if _egebff ==nil {_accea .Errors =append (_accea .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_bagag =append (_bagag ,_accea );continue ;};for _cbede :=0;_cbede < _egebff .Len ();_cbede =_cbede +2{_adbcc ,_ :=_da .GetNumberAsInt64 (_egebff .Get (_cbede ));_aacc ,_ :=_da .GetIntVal (_egebff .Get (_cbede +1));if _ ,_gdgad :=_eadfe ._cgbad .Seek (_adbcc ,_gg .SeekStart );_gdgad !=nil {return nil ,_gdgad ;};_ebde :=make ([]byte ,_aacc );if _ ,_cageb :=_eadfe ._cgbad .Read (_ebde );_cageb !=nil {return nil ,_cageb ;};_cebec .Write (_ebde );};_efbaa ,_adgeb :=_abbag ._geabb .Validate (_abbag ._dggce ,_cebec );if _adgeb !=nil {return nil ,_adgeb ;};_efbaa .Name =_abbag ._dggce .Name .Decoded ();_efbaa .Reason =_abbag ._dggce .Reason .Decoded ();if _abbag ._dggce .M !=nil {_ggfec ,_bdedg :=NewPdfDate (_abbag ._dggce .M .String ());if _bdedg !=nil {_efbaa .Errors =append (_efbaa .Errors ,_bdedg .Error ());continue ;};_efbaa .Date =_ggfec ;};_efbaa .ContactInfo =_abbag ._dggce .ContactInfo .Decoded ();_efbaa .Location =_abbag ._dggce .Location .Decoded ();_efbaa .Fields =_accea .Fields ;_bagag =append (_bagag ,_efbaa );};return _bagag ,nil ;};func _afbfb (_ggaf *_da .PdfObjectDictionary ,_dfdee *fontCommon )(*pdfFontType0 ,error ){_deagc ,_dgea :=_da .GetArray (_ggaf .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_dgea {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_dfdee );return nil ,_da .ErrRangeError ;};if _deagc .Len ()!=1{_ac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_deagc .Len ());return nil ,_da .ErrRangeError ;};_beafb ,_aafbd :=_aeac (_deagc .Get (0),false );if _aafbd !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_aafbd ,_dfdee );return nil ,_aafbd ;};_ccae :=_cbdcf (_dfdee );_ccae .DescendantFont =_beafb ;_fcdcc ,_dgea :=_da .GetNameVal (_ggaf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dgea {if _fcdcc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_fcdcc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_ccae ._eceec =_cee .NewIdentityTextEncoder (_fcdcc );}else if _age .IsPredefinedCMap (_fcdcc ){_ccae ._afec ,_aafbd =_age .LoadPredefinedCMap (_fcdcc );if _aafbd !=nil {_ac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fcdcc ,_aafbd );};}else {_ac .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_fcdcc );};};if _edbad :=_beafb .baseFields ()._eeba ;_edbad !=nil {if _fffd :=_edbad .Name ();_fffd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_fffd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_fffd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_fffd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_ccae ._eceec =_cee .NewCMapEncoder (_fcdcc ,_ccae ._afec ,_edbad );};};return _ccae ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_eca :=NewPdfAnnotation ();_bcg :=&PdfAnnotationLine {};_bcg .PdfAnnotation =_eca ;_bcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eca .SetContext (_bcg );return _bcg ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_affbd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _affbd .Alternate ==nil {_ac .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _affbd .N ==1{_ac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_fggb :=NewPdfColorspaceDeviceGray ();return _fggb .ColorToRGB (color );}else if _affbd .N ==3{_ac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _affbd .N ==4{_ac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_daac :=NewPdfColorspaceDeviceCMYK ();return _daac .ColorToRGB (color );}else {return nil ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ac .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_affbd );return _affbd .Alternate .ColorToRGB (color );};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ecg :=&PdfBorderStyle {};return _ecg };

// ToPdfObject converts rectangle to a PDF object.
func (_ebcec *PdfRectangle )ToPdfObject ()_da .PdfObject {return _da .MakeArray (_da .MakeFloat (_ebcec .Llx ),_da .MakeFloat (_ebcec .Lly ),_da .MakeFloat (_ebcec .Urx ),_da .MakeFloat (_ebcec .Ury ));};

// Encoder returns the font's text encoder.
func (_geeg pdfCIDFontType2 )Encoder ()_cee .TextEncoder {return _geeg ._ggcbg };

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_da .PdfObjectStream )(*XObjectForm ,error ){_ffda :=&XObjectForm {};_ffda ._faafe =stream ;_bfdc :=*(stream .PdfObjectDictionary );_efbde ,_cdeeea :=_da .NewEncoderFromStream (stream );if _cdeeea !=nil {return nil ,_cdeeea ;};_ffda .Filter =_efbde ;if _gdfeg :=_bfdc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gdfeg !=nil {_cegdf ,_fbdac :=_gdfeg .(*_da .PdfObjectName );if !_fbdac {return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_cegdf !="\u0046\u006f\u0072\u006d"{_ac .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _baebc :=_bfdc .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_baebc !=nil {_ffda .FormType =_baebc ;};if _aeggd :=_bfdc .Get ("\u0042\u0042\u006f\u0078");_aeggd !=nil {_ffda .BBox =_aeggd ;};if _dbebf :=_bfdc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dbebf !=nil {_ffda .Matrix =_dbebf ;};if _bffcf :=_bfdc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bffcf !=nil {_bffcf =_da .TraceToDirectObject (_bffcf );_aegfc ,_dafbd :=_bffcf .(*_da .PdfObjectDictionary );if !_dafbd {_ac .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_da .ErrTypeError ;};_ecfef ,_bgcbf :=NewPdfPageResourcesFromDict (_aegfc );if _bgcbf !=nil {_ac .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_bgcbf ;};_ffda .Resources =_ecfef ;_ac .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ffda .Resources );};_ffda .Group =_bfdc .Get ("\u0047\u0072\u006fu\u0070");_ffda .Ref =_bfdc .Get ("\u0052\u0065\u0066");_ffda .MetaData =_bfdc .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ffda .PieceInfo =_bfdc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ffda .LastModified =_bfdc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ffda .StructParent =_bfdc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ffda .StructParents =_bfdc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ffda .OPI =_bfdc .Get ("\u004f\u0050\u0049");_ffda .OC =_bfdc .Get ("\u004f\u0043");_ffda .Name =_bfdc .Get ("\u004e\u0061\u006d\u0065");_ffda .Stream =stream .Stream ;return _ffda ,nil ;};type modelManager struct{_eefbe map[PdfModel ]_da .PdfObject ;_cfcc map[_da .PdfObject ]PdfModel ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ddcc *Outline )ToPdfOutline ()*PdfOutline {_gcbcc :=NewPdfOutline ();var _gbce []*PdfOutlineItem ;var _bbcdd int64 ;var _fbdfa *PdfOutlineItem ;for _ ,_afef :=range _ddcc .Entries {_ddebd ,_aaad :=_afef .ToPdfOutlineItem ();_ddebd .Parent =&_gcbcc .PdfOutlineTreeNode ;if _fbdfa !=nil {_fbdfa .Next =&_ddebd .PdfOutlineTreeNode ;_ddebd .Prev =&_fbdfa .PdfOutlineTreeNode ;};_gbce =append (_gbce ,_ddebd );_bbcdd +=_aaad ;_fbdfa =_ddebd ;};_eedfe :=int64 (len (_gbce ));_bbcdd +=int64 (_eedfe );if _eedfe > 0{_gcbcc .First =&_gbce [0].PdfOutlineTreeNode ;_gcbcc .Last =&_gbce [_eedfe -1].PdfOutlineTreeNode ;_gcbcc .Count =&_bbcdd ;};return _gcbcc ;};

// ToPdfObject implements interface PdfModel.
func (_gcge *PdfActionHide )ToPdfObject ()_da .PdfObject {_gcge .PdfAction .ToPdfObject ();_cfa :=_gcge ._cf ;_eed :=_cfa .PdfObject .(*_da .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeHide )));_eed .SetIfNotNil ("\u0054",_gcge .T );_eed .SetIfNotNil ("\u0048",_gcge .H );return _cfa ;};

// ToPdfObject converts the font to a PDF representation.
func (_accg *pdfFontType0 )ToPdfObject ()_da .PdfObject {if _accg ._dccgb ==nil {_accg ._dccgb =&_da .PdfIndirectObject {};};_agedf :=_accg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_accg ._dccgb .PdfObject =_agedf ;if _accg .Encoding !=nil {_agedf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_accg .Encoding );}else if _accg ._eceec !=nil {_agedf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_accg ._eceec .ToPdfObject ());};if _accg .DescendantFont !=nil {_agedf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_da .MakeArray (_accg .DescendantFont .ToPdfObject ()));};return _accg ._dccgb ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bcddb *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=_bcddb .GetNumComponents (){return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffga ,_fead :=_da .GetNumbersAsFloat (objects );if _fead !=nil {return nil ,_fead ;};return _bcddb .ColorFromFloats (_ffga );};func (_egacc *PdfReader )lookupPageByObject (_aeaf _da .PdfObject )(*PdfPage ,error ){return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_geg :=NewPdfAction ();_cg :=&PdfActionJavaScript {};_cg .PdfAction =_geg ;_geg .SetContext (_cg );return _cg ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};func (_fceb *PdfFilespec )getDict ()*_da .PdfObjectDictionary {if _dbdd ,_gffa :=_fceb ._faff .(*_da .PdfIndirectObject );_gffa {_cbab ,_bccc :=_dbdd .PdfObject .(*_da .PdfObjectDictionary );if !_bccc {return nil ;};return _cbab ;}else if _edbcg ,_bcec :=_fceb ._faff .(*_da .PdfObjectDictionary );_bcec {return _edbcg ;}else {_ac .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fceb ._faff );return nil ;};};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_egabg *pdfFontSimple )ToPdfObject ()_da .PdfObject {if _egabg ._cgee ==nil {_egabg ._cgee =&_da .PdfIndirectObject {};};_caffd :=_egabg .baseFields ().asPdfObjectDictionary ("");_egabg ._cgee .PdfObject =_caffd ;if _egabg .FirstChar !=nil {_caffd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_egabg .FirstChar );};if _egabg .LastChar !=nil {_caffd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_egabg .LastChar );};if _egabg .Widths !=nil {_caffd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_egabg .Widths );};if _egabg .Encoding !=nil {_caffd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_egabg .Encoding );}else if _egabg ._bgdb !=nil {_afbgf :=_egabg ._bgdb .ToPdfObject ();if _afbgf !=nil {_caffd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_afbgf );};};return _egabg ._cgee ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_bfgdc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_gfgfb :=_df .NewReader (img .getBase ());_dddc :=_eff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._efgcc ,img ._dfff );_cabdb :=_df .NewWriter (_dddc );_fedfd :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_bfdg :=_bfgdc .GetNumComponents ();_edbg :=make ([]uint32 ,_bfdg );_gdcaf :=make ([]float64 ,_bfdg );for {_bgaf :=_gfgfb .ReadSamples (_edbg );if _bgaf ==_gg .EOF {break ;}else if _bgaf !=nil {return img ,_bgaf ;};for _ceaf :=0;_ceaf < _bfdg ;_ceaf ++{_ecdaf :=float64 (_edbg [_ceaf ])/_fedfd ;_gdcaf [_ceaf ]=_ecdaf ;};_egba ,_bgaf :=_bfgdc .TintTransform .Evaluate (_gdcaf );if _bgaf !=nil {return img ,_bgaf ;};for _ ,_afcad :=range _egba {_afcad =_bb .Min (_bb .Max (0,_afcad ),1.0);if _bgaf =_cabdb .WriteSample (uint32 (_afcad *_fedfd ));_bgaf !=nil {return img ,_bgaf ;};};};return _bfgdc .AlternateSpace .ImageToRGB (_abag (&_dddc ));};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject implements interface PdfModel.
func (_dgfa *PdfAnnotationWidget )ToPdfObject ()_da .PdfObject {_dgfa .PdfAnnotation .ToPdfObject ();_ebga :=_dgfa ._cfd ;_ccdf :=_ebga .PdfObject .(*_da .PdfObjectDictionary );if _dgfa ._cag {return _ebga ;};_dgfa ._cag =true ;_ccdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_ccdf .SetIfNotNil ("\u0048",_dgfa .H );_ccdf .SetIfNotNil ("\u004d\u004b",_dgfa .MK );_ccdf .SetIfNotNil ("\u0041",_dgfa .A );_ccdf .SetIfNotNil ("\u0041\u0041",_dgfa .AA );_ccdf .SetIfNotNil ("\u0042\u0053",_dgfa .BS );_dcebd :=_dgfa .Parent ;if _dgfa ._gcec !=nil {if _dgfa ._gcec ._cfed ==_dgfa ._cfd {_dgfa ._gcec .ToPdfObject ();};_dcebd =_dgfa ._gcec .GetContainingPdfObject ();};if _dcebd !=_ebga {_ccdf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcebd );};_dgfa ._cag =false ;return _ebga ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_cafge *PdfPattern )ToPdfObject ()_da .PdfObject {_bdcaf :=_cafge .getDict ();_bdcaf .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bdcaf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (_cafge .PatternType ));return _cafge ._geggda ;};

// SetContext sets the sub action (context).
func (_bfd *PdfAction )SetContext (ctx PdfModel ){_bfd ._ae =ctx };func _aaeb (_agbab *_da .PdfObjectDictionary )(*PdfFieldButton ,error ){_gcadf :=&PdfFieldButton {};_gcadf .Opt ,_ =_da .GetArray (_agbab .Get ("\u004f\u0070\u0074"));return _gcadf ,nil ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_bcgcg *_da .PdfParser ;_cdcde _da .PdfObject ;_cbecc *_da .PdfIndirectObject ;_dcdcg *_da .PdfObjectDictionary ;_efbae []*_da .PdfIndirectObject ;PageList []*PdfPage ;_fdbf int ;_ddgbf *_da .PdfObjectDictionary ;_ebdfe *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;_gafba *modelManager ;_aceeb bool ;_affge map[_da .PdfObject ]struct{};_cgbad _gg .ReadSeeker ;};func _ged (_gaeb _da .PdfObject )(*PdfColorspaceDeviceN ,error ){_effgb :=NewPdfColorspaceDeviceN ();if _gcfb ,_bggbd :=_gaeb .(*_da .PdfIndirectObject );_bggbd {_effgb ._acec =_gcfb ;};_gaeb =_da .TraceToDirectObject (_gaeb );_edaf ,_egfe :=_gaeb .(*_da .PdfObjectArray );if !_egfe {return nil ,_f .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _edaf .Len ()!=4&&_edaf .Len ()!=5{return nil ,_f .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gaeb =_edaf .Get (0);_fgffe ,_egfe :=_gaeb .(*_da .PdfObjectName );if !_egfe {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_fgffe !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_f .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gaeb =_edaf .Get (1);_gaeb =_da .TraceToDirectObject (_gaeb );_dfde ,_egfe :=_gaeb .(*_da .PdfObjectArray );if !_egfe {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_effgb .ColorantNames =_dfde ;_gaeb =_edaf .Get (2);_eecf ,_egdda :=NewPdfColorspaceFromPdfObject (_gaeb );if _egdda !=nil {return nil ,_egdda ;};_effgb .AlternateSpace =_eecf ;_fcfb ,_egdda :=_eeebd (_edaf .Get (3));if _egdda !=nil {return nil ,_egdda ;};_effgb .TintTransform =_fcfb ;if _edaf .Len ()==5{_bgagg ,_bbgd :=_dbdg (_edaf .Get (4));if _bbgd !=nil {return nil ,_bbgd ;};_effgb .Attributes =_bgagg ;};return _effgb ,nil ;};func (_gdfe *PdfAnnotation )String ()string {_agfe :="";_cce ,_ggg :=_gdfe .ToPdfObject ().(*_da .PdfIndirectObject );if _ggg {_agfe =_f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gdfe ._gbd ,_cce .PdfObject .String ());};return _agfe ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_gfeb *PdfSignature )bool ;Validate (_afcdg *PdfSignature ,_ddbfbf Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_aagbf *PdfSignature )(Hasher ,error );Sign (_fdagg *PdfSignature ,_bcaaf Hasher )error ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fffa *PdfField )GetContainingPdfObject ()_da .PdfObject {return _fffa ._cfed };

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_acgdb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _fabaa []*PdfField ;if _acgdb .AcroForm !=nil {_fabaa =_acgdb .AcroForm .AllFields ();};_fege :=make (map[*PdfField ]struct{},len (_fabaa ));for _ ,_fefgg :=range _fabaa {_fege [_fefgg ]=struct{}{};};for _ ,_baad :=range _acgdb .PageList {_cbdca ,_efada :=_baad .GetAnnotations ();if _efada !=nil {return false ,_efada ;};for _ ,_fcfgf :=range _cbdca {_cegca ,_febef :=_fcfgf .GetContext ().(*PdfAnnotationWidget );if !_febef {continue ;};_fcgbc :=_cegca .Field ();if _fcgbc ==nil {return true ,nil ;};if _ ,_cccff :=_fege [_fcgbc ];!_cccff {return true ,nil ;};};};return false ,nil ;};var _aeca _ef .Time ;func _ggcf (_cgfa _da .PdfObject )(*PdfShading ,error ){_ffeeb :=&PdfShading {};var _fffec *_da .PdfObjectDictionary ;if _bdgee ,_bfgf :=_da .GetIndirect (_cgfa );_bfgf {_ffeeb ._fgfdc =_bdgee ;_ceecbf ,_eedb :=_bdgee .PdfObject .(*_da .PdfObjectDictionary );if !_eedb {_ac .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_da .ErrTypeError ;};_fffec =_ceecbf ;}else if _egaef ,_eface :=_da .GetStream (_cgfa );_eface {_ffeeb ._fgfdc =_egaef ;_fffec =_egaef .PdfObjectDictionary ;}else if _eeagg ,_bgdae :=_da .GetDict (_cgfa );_bgdae {_ffeeb ._fgfdc =_eeagg ;_fffec =_eeagg ;}else {_ac .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_cgfa );return nil ,_da .ErrTypeError ;};if _fffec ==nil {_ac .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ag .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cgfa =_fffec .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cgfa ==nil {_ac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cgfa =_da .TraceToDirectObject (_cgfa );_edfgf ,_edbce :=_cgfa .(*_da .PdfObjectInteger );if !_edbce {_ac .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cgfa );return nil ,_da .ErrTypeError ;};if *_edfgf < 1||*_edfgf > 7{_ac .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_edfgf );return nil ,_da .ErrTypeError ;};_ffeeb .ShadingType =_edfgf ;_cgfa =_fffec .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _cgfa ==nil {_ac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ecaaa ,_aabeg :=NewPdfColorspaceFromPdfObject (_cgfa );if _aabeg !=nil {_ac .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_aabeg );return nil ,_aabeg ;};_ffeeb .ColorSpace =_ecaaa ;_cgfa =_fffec .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _cgfa !=nil {_cgfa =_da .TraceToDirectObject (_cgfa );_gfgcg ,_fdage :=_cgfa .(*_da .PdfObjectArray );if !_fdage {_ac .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cgfa );return nil ,_da .ErrTypeError ;};_ffeeb .Background =_gfgcg ;};_cgfa =_fffec .Get ("\u0042\u0042\u006f\u0078");if _cgfa !=nil {_cgfa =_da .TraceToDirectObject (_cgfa );_aggff ,_bcgfd :=_cgfa .(*_da .PdfObjectArray );if !_bcgfd {_ac .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cgfa );return nil ,_da .ErrTypeError ;};_bgfda ,_dfcgd :=NewPdfRectangle (*_aggff );if _dfcgd !=nil {_ac .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dfcgd );return nil ,_dfcgd ;};_ffeeb .BBox =_bgfda ;};_cgfa =_fffec .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _cgfa !=nil {_cgfa =_da .TraceToDirectObject (_cgfa );_caeb ,_effde :=_cgfa .(*_da .PdfObjectBool );if !_effde {_ac .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgfa );return nil ,_da .ErrTypeError ;};_ffeeb .AntiAlias =_caeb ;};switch *_edfgf {case 1:_ffad ,_ebggg :=_aebcg (_fffec );if _ebggg !=nil {return nil ,_ebggg ;};_ffad .PdfShading =_ffeeb ;_ffeeb ._fbacc =_ffad ;return _ffeeb ,nil ;case 2:_fgadd ,_dgdebe :=_ggcfc (_fffec );if _dgdebe !=nil {return nil ,_dgdebe ;};_fgadd .PdfShading =_ffeeb ;_ffeeb ._fbacc =_fgadd ;return _ffeeb ,nil ;case 3:_bacae ,_edcab :=_gbbbd (_fffec );if _edcab !=nil {return nil ,_edcab ;};_bacae .PdfShading =_ffeeb ;_ffeeb ._fbacc =_bacae ;return _ffeeb ,nil ;case 4:_fadbg ,_bafb :=_becee (_fffec );if _bafb !=nil {return nil ,_bafb ;};_fadbg .PdfShading =_ffeeb ;_ffeeb ._fbacc =_fadbg ;return _ffeeb ,nil ;case 5:_ceae ,_fgbfgc :=_edffa (_fffec );if _fgbfgc !=nil {return nil ,_fgbfgc ;};_ceae .PdfShading =_ffeeb ;_ffeeb ._fbacc =_ceae ;return _ffeeb ,nil ;case 6:_caaeg ,_gfdfe :=_efec (_fffec );if _gfdfe !=nil {return nil ,_gfdfe ;};_caaeg .PdfShading =_ffeeb ;_ffeeb ._fbacc =_caaeg ;return _ffeeb ,nil ;case 7:_deebg ,_fgfb :=_fdagee (_fffec );if _fgfb !=nil {return nil ,_fgfb ;};_deebg .PdfShading =_ffeeb ;_ffeeb ._fbacc =_deebg ;return _ffeeb ,nil ;};return nil ,_ag .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bfbag *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_debfb :=NewPdfOutlineItem ();_debfb .Title =_da .MakeEncodedString (_bfbag .Title ,true );_debfb .Dest =_bfbag .Dest .ToPdfObject ();var _ccffd []*PdfOutlineItem ;var _geaaf int64 ;var _ddaag *PdfOutlineItem ;for _ ,_cgbcc :=range _bfbag .Entries {_cedgf ,_cdge :=_cgbcc .ToPdfOutlineItem ();_cedgf .Parent =&_debfb .PdfOutlineTreeNode ;if _ddaag !=nil {_ddaag .Next =&_cedgf .PdfOutlineTreeNode ;_cedgf .Prev =&_ddaag .PdfOutlineTreeNode ;};_ccffd =append (_ccffd ,_cedgf );_geaaf +=_cdge ;_ddaag =_cedgf ;};_ebgcf :=len (_ccffd );_geaaf +=int64 (_ebgcf );if _ebgcf > 0{_debfb .First =&_ccffd [0].PdfOutlineTreeNode ;_debfb .Last =&_ccffd [_ebgcf -1].PdfOutlineTreeNode ;_debfb .Count =&_geaaf ;};return _debfb ,_geaaf ;};

// ToPdfObject returns the PDF representation of the function.
func (_egfdd *PdfFunctionType2 )ToPdfObject ()_da .PdfObject {_facda :=_da .MakeDict ();_facda .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (2));_cgbgd :=&_da .PdfObjectArray {};for _ ,_ddbag :=range _egfdd .Domain {_cgbgd .Append (_da .MakeFloat (_ddbag ));};_facda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgbgd );if _egfdd .Range !=nil {_cagb :=&_da .PdfObjectArray {};for _ ,_fadgf :=range _egfdd .Range {_cagb .Append (_da .MakeFloat (_fadgf ));};_facda .Set ("\u0052\u0061\u006eg\u0065",_cagb );};if _egfdd .C0 !=nil {_cdbcd :=&_da .PdfObjectArray {};for _ ,_cbdb :=range _egfdd .C0 {_cdbcd .Append (_da .MakeFloat (_cbdb ));};_facda .Set ("\u0043\u0030",_cdbcd );};if _egfdd .C1 !=nil {_egdb :=&_da .PdfObjectArray {};for _ ,_afaf :=range _egfdd .C1 {_egdb .Append (_da .MakeFloat (_afaf ));};_facda .Set ("\u0043\u0031",_egdb );};_facda .Set ("\u004e",_da .MakeFloat (_egfdd .N ));if _egfdd ._gbecf !=nil {_egfdd ._gbecf .PdfObject =_facda ;return _egfdd ._gbecf ;};return _facda ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_caea _gg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_feaa _cdf .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_agdgf _cdf .Image )(*Image ,error );

// Compress an image.
Compress (_afaad *Image ,_bbbbb int64 )(*Image ,error );};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_bfgg :=NewPdfAction ();_ebf :=&PdfActionGoToR {};_ebf .PdfAction =_bfgg ;_bfgg .SetContext (_ebf );return _ebf ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_acdc *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ag .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_bcgaa :=field .V ;if _bcgaa ==nil {return _ag .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_cfbc :=pageNum -1;if _cfbc < 0||_cfbc > len (_acdc ._cadf )-1{return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_cebb :=_acdc .Reader .PageList [_cfbc ];field .P =_cebb .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_da .MakeString (_f .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_cebb .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _acdc ._bcbc ==_acdc ._adf .AcroForm {_acdc ._bcbc =_acdc .Reader .AcroForm ;};_ffb :=_acdc ._bcbc ;if _ffb ==nil {_ffb =NewPdfAcroForm ();};_ffb .SigFlags =_da .MakeInteger (3);_eagg :=append (_ffb .AllFields (),field .PdfField );_ffb .Fields =&_eagg ;_acdc .ReplaceAcroForm (_ffb );_acdc .UpdatePage (_cebb );_acdc ._cadf [_cfbc ]=_cebb ;return nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cgcff pdfFontSimple )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){if _cgcff ._bdad !=nil {_gggdg ,_fgfdb :=_cgcff ._bdad [r ];if _fgfdb {return _gggdg ,true ;};};_babe :=_cgcff .Encoder ();if _babe ==nil {_ac .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cgcff );return _dg .CharMetrics {},false ;};_fcacb ,_dcaa :=_babe .RuneToCharcode (r );if !_dcaa {if r !=' '{_ac .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cgcff );};return _dg .CharMetrics {},false ;};_afea ,_bagee :=_cgcff .GetCharMetrics (_fcacb );return _afea ,_bagee ;};

// A returns the value of the A component of the color.
func (_ceed *PdfColorLab )A ()float64 {return float64 (_ceed [1])};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_egdd :=NewPdfAnnotation ();_dccg :=&PdfAnnotationSquare {};_dccg .PdfAnnotation =_egdd ;_dccg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egdd .SetContext (_dccg );return _dccg ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_cagg *PdfReader )Decrypt (password []byte )(bool ,error ){_ggee ,_gbeae :=_cagg ._bcgcg .Decrypt (password );if _gbeae !=nil {return false ,_gbeae ;};if !_ggee {return false ,nil ;};_gbeae =_cagg .loadStructure ();if _gbeae !=nil {_ac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_gbeae );return false ,_gbeae ;};return true ,nil ;};func (_acd *PdfReader )newPdfActionFromIndirectObject (_cff *_da .PdfIndirectObject )(*PdfAction ,error ){_gdg ,_cacd :=_cff .PdfObject .(*_da .PdfObjectDictionary );if !_cacd {return nil ,_f .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_acd ._gafba .GetModelFromPrimitive (_gdg );model !=nil {_ffd ,_bfa :=model .(*PdfAction );if !_bfa {return nil ,_f .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _ffd ,nil ;};_ece :=&PdfAction {};_ece ._cf =_cff ;_acd ._gafba .Register (_gdg ,_ece );if _gf :=_gdg .Get ("\u0054\u0079\u0070\u0065");_gf !=nil {_dga ,_bfb :=_gf .(*_da .PdfObjectName );if !_bfb {_ac .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gf );}else {if *_dga !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ac .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_dga );};_ece .Type =_dga ;};};if _bbef :=_gdg .Get ("\u004e\u0065\u0078\u0074");_bbef !=nil {_ece .Next =_bbef ;};if _cfge :=_gdg .Get ("\u0053");_cfge !=nil {_ece .S =_cfge ;};_egb ,_ggb :=_ece .S .(*_da .PdfObjectName );if !_ggb {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ece .S );return nil ,_f .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ece .S );};_ba :=PdfActionType (_egb .String ());switch _ba {case ActionTypeGoTo :_edb ,_bae :=_acd .newPdfActionGotoFromDict (_gdg );if _bae !=nil {return nil ,_bae ;};_edb .PdfAction =_ece ;_ece ._ae =_edb ;return _ece ,nil ;case ActionTypeGoToR :_gea ,_bdc :=_acd .newPdfActionGotoRFromDict (_gdg );if _bdc !=nil {return nil ,_bdc ;};_gea .PdfAction =_ece ;_ece ._ae =_gea ;return _ece ,nil ;case ActionTypeGoToE :_fcb ,_fea :=_acd .newPdfActionGotoEFromDict (_gdg );if _fea !=nil {return nil ,_fea ;};_fcb .PdfAction =_ece ;_ece ._ae =_fcb ;return _ece ,nil ;case ActionTypeLaunch :_bfdf ,_fbe :=_acd .newPdfActionLaunchFromDict (_gdg );if _fbe !=nil {return nil ,_fbe ;};_bfdf .PdfAction =_ece ;_ece ._ae =_bfdf ;return _ece ,nil ;case ActionTypeThread :_gdf ,_adbd :=_acd .newPdfActionThreadFromDict (_gdg );if _adbd !=nil {return nil ,_adbd ;};_gdf .PdfAction =_ece ;_ece ._ae =_gdf ;return _ece ,nil ;case ActionTypeURI :_afd ,_cfae :=_acd .newPdfActionURIFromDict (_gdg );if _cfae !=nil {return nil ,_cfae ;};_afd .PdfAction =_ece ;_ece ._ae =_afd ;return _ece ,nil ;case ActionTypeSound :_aad ,_ecc :=_acd .newPdfActionSoundFromDict (_gdg );if _ecc !=nil {return nil ,_ecc ;};_aad .PdfAction =_ece ;_ece ._ae =_aad ;return _ece ,nil ;case ActionTypeMovie :_gcc ,_bag :=_acd .newPdfActionMovieFromDict (_gdg );if _bag !=nil {return nil ,_bag ;};_gcc .PdfAction =_ece ;_ece ._ae =_gcc ;return _ece ,nil ;case ActionTypeHide :_ebd ,_cef :=_acd .newPdfActionHideFromDict (_gdg );if _cef !=nil {return nil ,_cef ;};_ebd .PdfAction =_ece ;_ece ._ae =_ebd ;return _ece ,nil ;case ActionTypeNamed :_afg ,_baa :=_acd .newPdfActionNamedFromDict (_gdg );if _baa !=nil {return nil ,_baa ;};_afg .PdfAction =_ece ;_ece ._ae =_afg ;return _ece ,nil ;case ActionTypeSubmitForm :_fbcg ,_aff :=_acd .newPdfActionSubmitFormFromDict (_gdg );if _aff !=nil {return nil ,_aff ;};_fbcg .PdfAction =_ece ;_ece ._ae =_fbcg ;return _ece ,nil ;case ActionTypeResetForm :_cbf ,_dgad :=_acd .newPdfActionResetFormFromDict (_gdg );if _dgad !=nil {return nil ,_dgad ;};_cbf .PdfAction =_ece ;_ece ._ae =_cbf ;return _ece ,nil ;case ActionTypeImportData :_gfc ,_cbce :=_acd .newPdfActionImportDataFromDict (_gdg );if _cbce !=nil {return nil ,_cbce ;};_gfc .PdfAction =_ece ;_ece ._ae =_gfc ;return _ece ,nil ;case ActionTypeSetOCGState :_fbde ,_eacg :=_acd .newPdfActionSetOCGStateFromDict (_gdg );if _eacg !=nil {return nil ,_eacg ;};_fbde .PdfAction =_ece ;_ece ._ae =_fbde ;return _ece ,nil ;case ActionTypeRendition :_bbeb ,_ddc :=_acd .newPdfActionRenditionFromDict (_gdg );if _ddc !=nil {return nil ,_ddc ;};_bbeb .PdfAction =_ece ;_ece ._ae =_bbeb ;return _ece ,nil ;case ActionTypeTrans :_edc ,_bbb :=_acd .newPdfActionTransFromDict (_gdg );if _bbb !=nil {return nil ,_bbb ;};_edc .PdfAction =_ece ;_ece ._ae =_edc ;return _ece ,nil ;case ActionTypeGoTo3DView :_fec ,_dcgf :=_acd .newPdfActionGoTo3DViewFromDict (_gdg );if _dcgf !=nil {return nil ,_dcgf ;};_fec .PdfAction =_ece ;_ece ._ae =_fec ;return _ece ,nil ;case ActionTypeJavaScript :_dad ,_bec :=_acd .newPdfActionJavaScriptFromDict (_gdg );if _bec !=nil {return nil ,_bec ;};_dad .PdfAction =_ece ;_ece ._ae =_dad ;return _ece ,nil ;};_ac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ba );return nil ,nil ;};type fontFile struct{_bffgg string ;_cfdf string ;_gabgg _cee .SimpleEncoder ;};func _eaada ()string {_cgbadb :=_bfg .GetLicenseKey ();if len (_fbgea )> 0&&(_cgbadb .IsLicensed ()||_bcbcag ){return _fbgea ;};return _f .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_ddegg (),_cgbadb .TypeToString ());};

// ToPdfObject implements interface PdfModel.
func (_abffa *PdfAnnotationWatermark )ToPdfObject ()_da .PdfObject {_abffa .PdfAnnotation .ToPdfObject ();_bggd :=_abffa ._cfd ;_bbga :=_bggd .PdfObject .(*_da .PdfObjectDictionary );_bbga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_bbga .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_abffa .FixedPrint );return _bggd ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_gebb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecec ,_accbd :=_da .GetNumbersAsFloat (objects );if _accbd !=nil {return nil ,_accbd ;};return _gebb .ColorFromFloats (_ecec );};

// ColorToRGB converts an Indexed color to an RGB color.
func (_fdbb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fdbb .Base ==nil {return nil ,_ag .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _fdbb .Base .ColorToRGB (color );};

// SetAnnotations sets the annotations list.
func (_befec *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_befec ._gfgdf =annotations };func (_bcgd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bcgd ._gcgf };

// GetContainingPdfObject implements interface PdfModel.
func (_bdfb *PdfAnnotation )GetContainingPdfObject ()_da .PdfObject {return _bdfb ._cfd };

// Encoder returns the font's text encoder.
func (_acdgg pdfFontType0 )Encoder ()_cee .TextEncoder {return _acdgg ._eceec };

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cbcdb *PdfReader )GetNamedDestinations ()(_da .PdfObject ,error ){_afeea :=_da .ResolveReference (_cbcdb ._ddgbf .Get ("\u004e\u0061\u006de\u0073"));if _afeea ==nil {return nil ,nil ;};if !_cbcdb ._aceeb {_eaabb :=_cbcdb .traverseObjectData (_afeea );if _eaabb !=nil {return nil ,_eaabb ;};};return _afeea ,nil ;};func (_edddb *PdfWriter )copyObjects (){_dgbfe :=make (map[_da .PdfObject ]_da .PdfObject );_fgfce :=make ([]_da .PdfObject ,0,len (_edddb ._fdcfd ));_fcdef :=make (map[_da .PdfObject ]struct{},len (_edddb ._fdcfd ));_bedb :=make (map[_da .PdfObject ]struct{});for _ ,_bcbg :=range _edddb ._fdcfd {_cfgcdc :=_edddb .copyObject (_bcbg ,_dgbfe ,_bedb ,false );if _ ,_fgdaa :=_bedb [_bcbg ];_fgdaa {continue ;};_fgfce =append (_fgfce ,_cfgcdc );_fcdef [_cfgcdc ]=struct{}{};};_edddb ._fdcfd =_fgfce ;_edddb ._cgag =_fcdef ;_edddb ._bggda =_edddb .copyObject (_edddb ._bggda ,_dgbfe ,nil ,false ).(*_da .PdfIndirectObject );_edddb ._eage =_edddb .copyObject (_edddb ._eage ,_dgbfe ,nil ,false ).(*_da .PdfIndirectObject );if _edddb ._dbgbb !=nil {_edddb ._dbgbb =_edddb .copyObject (_edddb ._dbgbb ,_dgbfe ,nil ,false ).(*_da .PdfIndirectObject );};if _edddb ._afcac {_eegfc :=make (map[_da .PdfObject ]int64 );for _fbdcb ,_dfdea :=range _edddb ._afcee {if _cacgf ,_ccbe :=_dgbfe [_fbdcb ];_ccbe {_eegfc [_cacgf ]=_dfdea ;}else {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_edddb ._afcee =_eegfc ;};};

// GetNumComponents returns the number of color components.
func (_adeac *PdfColorspaceICCBased )GetNumComponents ()int {return _adeac .N };

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_fbeec *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_dade :=_df .NewReader (img .getBase ());_gfgb :=_eff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_aafe :=_df .NewWriter (_gfgb );_bffa :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_dacc :=make ([]uint32 ,3);var (_fdc uint32 ;ANorm ,X ,Y ,Z ,_fdba ,_dfad ,_bddd float64 ;_cgccc error ;);for {_fdc ,_cgccc =_dade .ReadSample ();if _cgccc ==_gg .EOF {break ;}else if _cgccc !=nil {return img ,_cgccc ;};ANorm =float64 (_fdc )/_bffa ;X =_fbeec .WhitePoint [0]*_bb .Pow (ANorm ,_fbeec .Gamma );Y =_fbeec .WhitePoint [1]*_bb .Pow (ANorm ,_fbeec .Gamma );Z =_fbeec .WhitePoint [2]*_bb .Pow (ANorm ,_fbeec .Gamma );_fdba =3.240479*X +-1.537150*Y +-0.498535*Z ;_dfad =-0.969256*X +1.875992*Y +0.041556*Z ;_bddd =0.055648*X +-0.204043*Y +1.057311*Z ;_fdba =_bb .Min (_bb .Max (_fdba ,0),1.0);_dfad =_bb .Min (_bb .Max (_dfad ,0),1.0);_bddd =_bb .Min (_bb .Max (_bddd ,0),1.0);_dacc [0]=uint32 (_fdba *_bffa );_dacc [1]=uint32 (_dfad *_bffa );_dacc [2]=uint32 (_bddd *_bffa );if _cgccc =_aafe .WriteSamples (_dacc );_cgccc !=nil {return img ,_cgccc ;};};return _abag (&_gfgb ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_gcfd *PdfColorspaceLab )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaafd ,_dgbf :=_da .GetNumbersAsFloat (objects );if _dgbf !=nil {return nil ,_dgbf ;};return _gcfd .ColorFromFloats (_aaafd );};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bagec *PdfColorspaceCalGray )ToPdfObject ()_da .PdfObject {_ecdb :=&_da .PdfObjectArray {};_ecdb .Append (_da .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_ccdcc :=_da .MakeDict ();if _bagec .WhitePoint !=nil {_ccdcc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_da .MakeArray (_da .MakeFloat (_bagec .WhitePoint [0]),_da .MakeFloat (_bagec .WhitePoint [1]),_da .MakeFloat (_bagec .WhitePoint [2])));}else {_ac .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bagec .BlackPoint !=nil {_ccdcc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_da .MakeArray (_da .MakeFloat (_bagec .BlackPoint [0]),_da .MakeFloat (_bagec .BlackPoint [1]),_da .MakeFloat (_bagec .BlackPoint [2])));};_ccdcc .Set ("\u0047\u0061\u006dm\u0061",_da .MakeFloat (_bagec .Gamma ));_ecdb .Append (_ccdcc );if _bagec ._abgc !=nil {_bagec ._abgc .PdfObject =_ecdb ;return _bagec ._abgc ;};return _ecdb ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _da .PdfObject ;FontFamily _da .PdfObject ;FontStretch _da .PdfObject ;FontWeight _da .PdfObject ;Flags _da .PdfObject ;FontBBox _da .PdfObject ;ItalicAngle _da .PdfObject ;Ascent _da .PdfObject ;Descent _da .PdfObject ;Leading _da .PdfObject ;CapHeight _da .PdfObject ;XHeight _da .PdfObject ;StemV _da .PdfObject ;StemH _da .PdfObject ;AvgWidth _da .PdfObject ;MaxWidth _da .PdfObject ;MissingWidth _da .PdfObject ;FontFile _da .PdfObject ;FontFile2 _da .PdfObject ;FontFile3 _da .PdfObject ;CharSet _da .PdfObject ;_faed int ;_bede float64 ;*fontFile ;_ggab *_dg .TtfType ;

// Additional entries for CIDFonts
Style _da .PdfObject ;Lang _da .PdfObject ;FD _da .PdfObject ;CIDSet _da .PdfObject ;_bfgdb *_da .PdfIndirectObject ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_da .PdfIndirectObject ;SV *_da .PdfIndirectObject ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _da .PdfObjectArray )(*PdfRectangle ,error ){_cfbge :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _egfaf error ;_cfbge .Llx ,_egfaf =_da .GetNumberAsFloat (arr .Get (0));if _egfaf !=nil {return nil ,_egfaf ;};_cfbge .Lly ,_egfaf =_da .GetNumberAsFloat (arr .Get (1));if _egfaf !=nil {return nil ,_egfaf ;};_cfbge .Urx ,_egfaf =_da .GetNumberAsFloat (arr .Get (2));if _egfaf !=nil {return nil ,_egfaf ;};_cfbge .Ury ,_egfaf =_da .GetNumberAsFloat (arr .Get (3));if _egfaf !=nil {return nil ,_egfaf ;};return &_cfbge ,nil ;};func (_accc *PdfReader )flattenFieldsWithOpts (_bdbcd bool ,_bfge FieldAppearanceGenerator ,_dddg *FieldFlattenOpts )error {if _dddg ==nil {_dddg =&FieldFlattenOpts {};};var _edda bool ;_acdgf :=map[*PdfAnnotation ]bool {};{var _ffgag []*PdfField ;_aabd :=_accc .AcroForm ;if _aabd !=nil {if _dddg .FilterFunc !=nil {_ffgag =_aabd .filteredFields (_dddg .FilterFunc ,true );_edda =_aabd .Fields !=nil &&len (*_aabd .Fields )> 0;}else {_ffgag =_aabd .AllFields ();};};for _ ,_gfcb :=range _ffgag {for _ ,_daca :=range _gfcb .Annotations {_acdgf [_daca .PdfAnnotation ]=_gfcb .V !=nil ;if _bfge !=nil {_fdda ,_afbd :=_bfge .GenerateAppearanceDict (_aabd ,_gfcb ,_daca );if _afbd !=nil {return _afbd ;};_daca .AP =_fdda ;};};};};if _bdbcd {for _ ,_gaba :=range _accc .PageList {_geac ,_beda :=_gaba .GetAnnotations ();if _beda !=nil {return _beda ;};for _ ,_ggcc :=range _geac {_acdgf [_ggcc ]=true ;};};};for _ ,_dfbe :=range _accc .PageList {var _gefga []*PdfAnnotation ;if _bfge !=nil {if _cgbc :=_bfge .WrapContentStream (_dfbe );_cgbc !=nil {return _cgbc ;};};_bcbf ,_afcaf :=_dfbe .GetAnnotations ();if _afcaf !=nil {return _afcaf ;};for _ ,_fagg :=range _bcbf {_eaecb ,_efeg :=_acdgf [_fagg ];if !_efeg {_gefga =append (_gefga ,_fagg );continue ;};switch _fagg .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_edbdf ,_geeea ,_ddbc :=_decb (_fagg );if _ddbc !=nil {if !_eaecb {_ac .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_ddbc );continue ;};if _edbdf ==nil {continue ;};_abbgg :=_dfbe .Resources .GenerateXObjectName ();_dfbe .Resources .SetXObjectFormByName (_abbgg ,_edbdf );_gaae :=_bb .Min (_geeea .Llx ,_geeea .Urx );_cegg :=_bb .Min (_geeea .Lly ,_geeea .Ury );var _bagc []string ;_bagc =append (_bagc ,"\u0071");_bagc =append (_bagc ,_f .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gaae ,_cegg ));_bagc =append (_bagc ,_f .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_abbgg .String ()));_bagc =append (_bagc ,"\u0051");_daag :=_gd .Join (_bagc ,"\u000a");_ddbc =_dfbe .AppendContentStream (_daag );if _ddbc !=nil {return _ddbc ;};if _edbdf .Resources !=nil {_gdfd ,_addb :=_da .GetDict (_edbdf .Resources .Font );if _addb {for _ ,_egaf :=range _gdfd .Keys (){if !_dfbe .Resources .HasFontByName (_egaf ){_dfbe .Resources .SetFontByName (_egaf ,_gdfd .Get (_egaf ));};};};};};if len (_gefga )> 0{_dfbe ._gfgdf =_gefga ;}else {_dfbe ._gfgdf =[]*PdfAnnotation {};};};if !_edda {_accc .AcroForm =nil ;};return nil ;};func (_ebdd *PdfPage )setContainer (_egfbg *_da .PdfIndirectObject ){_egfbg .PdfObject =_ebdd ._ccaa ;_ebdd ._dabad =_egfbg ;};

// String returns a string representation of what flags are set.
func (_adba FieldFlag )String ()string {_cgbe :="";if _adba ==FieldFlagClear {_cgbe ="\u0043\u006c\u0065a\u0072";return _cgbe ;};if _adba &FieldFlagReadOnly > 0{_cgbe +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _adba &FieldFlagRequired > 0{_cgbe +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _adba &FieldFlagNoExport > 0{_cgbe +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _adba &FieldFlagNoToggleToOff > 0{_cgbe +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _adba &FieldFlagRadio > 0{_cgbe +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _adba &FieldFlagPushbutton > 0{_cgbe +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _adba &FieldFlagRadiosInUnision > 0{_cgbe +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _adba &FieldFlagMultiline > 0{_cgbe +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _adba &FieldFlagPassword > 0{_cgbe +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _adba &FieldFlagFileSelect > 0{_cgbe +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _adba &FieldFlagDoNotScroll > 0{_cgbe +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _adba &FieldFlagComb > 0{_cgbe +="\u007c\u0043\u006fm\u0062";};if _adba &FieldFlagRichText > 0{_cgbe +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _adba &FieldFlagDoNotSpellCheck > 0{_cgbe +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _adba &FieldFlagCombo > 0{_cgbe +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _adba &FieldFlagEdit > 0{_cgbe +="\u007c\u0045\u0064i\u0074";};if _adba &FieldFlagSort > 0{_cgbe +="\u007c\u0053\u006fr\u0074";};if _adba &FieldFlagMultiSelect > 0{_cgbe +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _adba &FieldFlagCommitOnSelChange > 0{_cgbe +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _gd .Trim (_cgbe ,"\u007c");};

// Add appends a top level outline item to the outline.
func (_abdfe *Outline )Add (item *OutlineItem ){_abdfe .Entries =append (_abdfe .Entries ,item )};func (_fcg *PdfAppender )mergeResources (_dfd ,_dgada _da .PdfObject ,_egfd map[_da .PdfObjectName ]_da .PdfObjectName )_da .PdfObject {if _dgada ==nil &&_dfd ==nil {return nil ;};if _dgada ==nil {return _dfd ;};_gggd ,_fbda :=_da .GetDict (_dgada );if !_fbda {return _dfd ;};if _dfd ==nil {_fecd :=_da .MakeDict ();_fecd .Merge (_gggd );return _dgada ;};_fbcf ,_fbda :=_da .GetDict (_dfd );if !_fbda {_ac .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_fbcf =_da .MakeDict ();};for _ ,_bfac :=range _gggd .Keys (){if _abfg ,_bceg :=_egfd [_bfac ];_bceg {_fbcf .Set (_abfg ,_gggd .Get (_bfac ));}else {_fbcf .Set (_bfac ,_gggd .Get (_bfac ));};};return _fbcf ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fbffe ,_ddbf :=_ec .Open (filePath );if _ddbf !=nil {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ddbf );return nil ,_ddbf ;};defer _fbffe .Close ();return NewPdfFontFromTTF (_fbffe );};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _da .PdfObject ;RichMediaContent _da .PdfObject ;};var _cdggc ="";

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_affe *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beb :=vals [0];if _beb < 0.0||_beb > 1.0{_ac .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _beb < 0.0{_beb =0.0;}else if _beb > 1.0{_beb =1.0;};return NewPdfColorDeviceGray (_beb ),nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;BitsPerFlag *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};func (_cdccd *PdfWriter )addObject (_affba _da .PdfObject )bool {_fggbb :=_cdccd .hasObject (_affba );if !_fggbb {_gdbcg :=_da .ResolveReferencesDeep (_affba ,_cdccd ._dcadd );if _gdbcg !=nil {_ac .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_gdbcg );};_cdccd ._fdcfd =append (_cdccd ._fdcfd ,_affba );_cdccd ._cgag [_affba ]=struct{}{};return true ;};return false ;};func (_fcf *PdfReader )newPdfActionRenditionFromDict (_dbb *_da .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dbb .Get ("\u0052"),AN :_dbb .Get ("\u0041\u004e"),OP :_dbb .Get ("\u004f\u0050"),JS :_dbb .Get ("\u004a\u0053")},nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_egeba *PdfAcroForm ,_efce *PdfField ,_ggffg *PdfAnnotationWidget )(*_da .PdfObjectDictionary ,error );};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_efac :=&PdfPageResourcesColorspaces {};_efac .Names =[]string {};_efac .Colorspaces =map[string ]PdfColorspace {};_efac ._adefe =&_da .PdfIndirectObject {};return _efac ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dfgd pdfCIDFontType0 )GetCharMetrics (code _cee .CharCode )(_dg .CharMetrics ,bool ){_fbeb :=_dfgd ._bbcfa ;if _edcae ,_fedb :=_dfgd ._efdf [code ];_fedb {_fbeb =_edcae ;};return _dg .CharMetrics {Wx :_fbeb },true ;};func (_dcce *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bcfg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _da .GetNumberAsFloat (_bcfg .CapHeight );};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _da .PdfObject ;Volume _da .PdfObject ;Synchronous _da .PdfObject ;Repeat _da .PdfObject ;Mix _da .PdfObject ;};func _abag (_bgab *_eff .ImageBase )(_bbgaa Image ){_bbgaa .Width =int64 (_bgab .Width );_bbgaa .Height =int64 (_bgab .Height );_bbgaa .BitsPerComponent =int64 (_bgab .BitsPerComponent );_bbgaa .ColorComponents =_bgab .ColorComponents ;_bbgaa .Data =_bgab .Data ;_bbgaa ._dfff =_bgab .Decode ;_bbgaa ._efgcc =_bgab .Alpha ;return _bbgaa ;};

// ToPdfObject implements interface PdfModel.
func (_gafed *PdfAnnotationTrapNet )ToPdfObject ()_da .PdfObject {_gafed .PdfAnnotation .ToPdfObject ();_geeb :=_gafed ._cfd ;_dee :=_geeb .PdfObject .(*_da .PdfObjectDictionary );_dee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _geeb ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _da .PdfObject ;Q _da .PdfObject ;RC _da .PdfObject ;DS _da .PdfObject ;CL _da .PdfObject ;IT _da .PdfObject ;BE _da .PdfObject ;RD _da .PdfObject ;BS _da .PdfObject ;LE _da .PdfObject ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_abed *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_da .StreamEncoder ,error ){_bgbe ,_dbgeb :=_abed ._geggda .(*_da .PdfObjectStream );if !_dbgeb {_ac .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abed ._geggda );return nil ,nil ,_da .ErrTypeError ;};_bdadc ,_ebff :=_da .DecodeStream (_bgbe );if _ebff !=nil {_ac .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_ebff );return nil ,nil ,_ebff ;};_cgbag ,_ebff :=_da .NewEncoderFromStream (_bgbe );if _ebff !=nil {_ac .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ebff );return nil ,nil ,_ebff ;};return _bdadc ,_cgbag ,nil ;};func _ccaad (_cabdf *PdfPage ){_ecgcf :=_bfg .GetLicenseKey ();if _ecgcf !=nil &&_ecgcf .IsLicensed (){return ;};_aaac :=_da .PdfObjectName ("\u0055\u0046\u0031");if !_cabdf .Resources .HasFontByName (_aaac ){_cabdf .Resources .SetFontByName (_aaac ,DefaultFont ().ToPdfObject ());};var _bcgff []string ;_bcgff =append (_bcgff ,"\u0071");_bcgff =append (_bcgff ,"\u0042\u0054");_bcgff =append (_bcgff ,_f .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_aaac .String ()));_bcgff =append (_bcgff ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_bcgff =append (_bcgff ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_becdc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_bcgff =append (_bcgff ,_f .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_becdc ));_bcgff =append (_bcgff ,"\u0045\u0054");_bcgff =append (_bcgff ,"\u0051");_feacf :=_gd .Join (_bcgff ,"\u000a");_cabdf .AddContentStreamByString (_feacf );_cabdf .ToPdfObject ();};

// SetPatternByName sets a pattern resource specified by keyName.
func (_aaag *PdfPageResources )SetPatternByName (keyName _da .PdfObjectName ,pattern _da .PdfObject )error {if _aaag .Pattern ==nil {_aaag .Pattern =_da .MakeDict ();};_adccb ,_ebeba :=_aaag .Pattern .(*_da .PdfObjectDictionary );if !_ebeba {return _da .ErrTypeError ;};_adccb .Set (keyName ,pattern );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_agf *PdfActionSound )ToPdfObject ()_da .PdfObject {_agf .PdfAction .ToPdfObject ();_gdb :=_agf ._cf ;_bcc :=_gdb .PdfObject .(*_da .PdfObjectDictionary );_bcc .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeSound )));_bcc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_agf .Sound );_bcc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_agf .Volume );_bcc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_agf .Synchronous );_bcc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_agf .Repeat );_bcc .SetIfNotNil ("\u004d\u0069\u0078",_agf .Mix );return _gdb ;};func (_bdeac *PdfWriter )writeObject (_befbb int ,_acbb _da .PdfObject ){_ac .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_befbb );if _bdebd ,_dfabc :=_acbb .(*_da .PdfIndirectObject );_dfabc {_bdeac ._ddcea [_befbb ]=crossReference {Type :1,Offset :_bdeac ._fgbeb ,Generation :_bdebd .GenerationNumber };_geca :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_befbb );if _dbffd ,_bdebb :=_bdebd .PdfObject .(*pdfSignDictionary );_bdebb {_dbffd ._eagcf =_bdeac ._fgbeb +int64 (len (_geca ));};if _bdebd .PdfObject ==nil {_ac .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_bdebd .PdfObject =_da .MakeNull ();};_geca +=_bdebd .PdfObject .WriteString ();_geca +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bdeac .writeString (_geca );return ;};if _affbb ,_ebgga :=_acbb .(*_da .PdfObjectStream );_ebgga {_bdeac ._ddcea [_befbb ]=crossReference {Type :1,Offset :_bdeac ._fgbeb ,Generation :_affbb .GenerationNumber };_geaafc :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_befbb );_geaafc +=_affbb .PdfObjectDictionary .WriteString ();_geaafc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdeac .writeString (_geaafc );_bdeac .writeBytes (_affbb .Stream );_bdeac .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gdec ,_daaac :=_acbb .(*_da .PdfObjectStreams );_daaac {_bdeac ._ddcea [_befbb ]=crossReference {Type :1,Offset :_bdeac ._fgbeb ,Generation :_gdec .GenerationNumber };_feecc :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_befbb );var _adfca []string ;var _ffgff string ;var _ebggd int64 ;for _eacec ,_aefee :=range _gdec .Elements (){_caec ,_cagea :=_aefee .(*_da .PdfIndirectObject );if !_cagea {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_befbb ,_aefee );continue ;};_bfcf :=_caec .PdfObject .WriteString ()+"\u0020";_ffgff =_ffgff +_bfcf ;_adfca =append (_adfca ,_f .Sprintf ("\u0025\u0064\u0020%\u0064",_caec .ObjectNumber ,_ebggd ));_bdeac ._ddcea [int (_caec .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_befbb ,Index :_eacec };_ebggd =_ebggd +int64 (len ([]byte (_bfcf )));};_acadb :=_gd .Join (_adfca ,"\u0020")+"\u0020";_fddc :=_da .NewFlateEncoder ();_gdgbg :=_fddc .MakeStreamDict ();_gdgbg .Set (_da .PdfObjectName ("\u0054\u0079\u0070\u0065"),_da .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_aecbf :=int64 (_gdec .Len ());_gdgbg .Set (_da .PdfObjectName ("\u004e"),_da .MakeInteger (_aecbf ));_bfdaf :=int64 (len (_acadb ));_gdgbg .Set (_da .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_da .MakeInteger (_bfdaf ));_fadba ,_ :=_fddc .EncodeBytes ([]byte (_acadb +_ffgff ));_fedga :=int64 (len (_fadba ));_gdgbg .Set (_da .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_da .MakeInteger (_fedga ));_feecc +=_gdgbg .WriteString ();_feecc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdeac .writeString (_feecc );_bdeac .writeBytes (_fadba );_bdeac .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bdeac .writeString (_acbb .WriteString ());};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func _aebcg (_dcfbe *_da .PdfObjectDictionary )(*PdfShadingType1 ,error ){_dgfbd :=PdfShadingType1 {};if _facf :=_dcfbe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_facf !=nil {_facf =_da .TraceToDirectObject (_facf );_agcdb ,_cgeac :=_facf .(*_da .PdfObjectArray );if !_cgeac {_ac .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_facf );return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgfbd .Domain =_agcdb ;};if _gaea :=_dcfbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gaea !=nil {_gaea =_da .TraceToDirectObject (_gaea );_caedf ,_dbcde :=_gaea .(*_da .PdfObjectArray );if !_dbcde {_ac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaea );return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgfbd .Matrix =_caedf ;};_eeccd :=_dcfbe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eeccd ==nil {_ac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_dgfbd .Function =[]PdfFunction {};if _ccgef ,_feaab :=_eeccd .(*_da .PdfObjectArray );_feaab {for _ ,_ceecgd :=range _ccgef .Elements (){_baeg ,_dffce :=_eeebd (_ceecgd );if _dffce !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dffce );return nil ,_dffce ;};_dgfbd .Function =append (_dgfbd .Function ,_baeg );};}else {_fffb ,_fdbfa :=_eeebd (_eeccd );if _fdbfa !=nil {_ac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdbfa );return nil ,_fdbfa ;};_dgfbd .Function =append (_dgfbd .Function ,_fffb );};return &_dgfbd ,nil ;};func (_fag *PdfReader )newPdfAnnotationWidgetFromDict (_dgae *_da .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_cdee :=PdfAnnotationWidget {};_cdee .H =_dgae .Get ("\u0048");_cdee .MK =_dgae .Get ("\u004d\u004b");_cdee .A =_dgae .Get ("\u0041");_cdee .AA =_dgae .Get ("\u0041\u0041");_cdee .BS =_dgae .Get ("\u0042\u0053");_cdee .Parent =_dgae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_cdee ,nil ;};func (_baf *PdfReader )newPdfActionJavaScriptFromDict (_cge *_da .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cge .Get ("\u004a\u0053")},nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetContentStream returns the XObject Form's content stream.
func (_cfgfc *XObjectForm )GetContentStream ()([]byte ,error ){_egaa ,_ddfd :=_da .DecodeStream (_cfgfc ._faafe );if _ddfd !=nil {return nil ,_ddfd ;};return _egaa ,nil ;};var (CourierName =_dg .CourierName ;CourierBoldName =_dg .CourierBoldName ;CourierObliqueName =_dg .CourierObliqueName ;CourierBoldObliqueName =_dg .CourierBoldObliqueName ;HelveticaName =_dg .HelveticaName ;HelveticaBoldName =_dg .HelveticaBoldName ;HelveticaObliqueName =_dg .HelveticaObliqueName ;HelveticaBoldObliqueName =_dg .HelveticaBoldObliqueName ;SymbolName =_dg .SymbolName ;ZapfDingbatsName =_dg .ZapfDingbatsName ;TimesRomanName =_dg .TimesRomanName ;TimesBoldName =_dg .TimesBoldName ;TimesItalicName =_dg .TimesItalicName ;TimesBoldItalicName =_dg .TimesBoldItalicName ;);

// C returns the value of the C component of the color.
func (_bacf *PdfColorCalRGB )C ()float64 {return float64 (_bacf [2])};

// ToPdfObject implements interface PdfModel.
func (_dca *PdfAnnotationLine )ToPdfObject ()_da .PdfObject {_dca .PdfAnnotation .ToPdfObject ();_bfbf :=_dca ._cfd ;_efb :=_bfbf .PdfObject .(*_da .PdfObjectDictionary );_dca .PdfAnnotationMarkup .appendToPdfDictionary (_efb );_efb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u004c\u0069\u006e\u0065"));_efb .SetIfNotNil ("\u004c",_dca .L );_efb .SetIfNotNil ("\u0042\u0053",_dca .BS );_efb .SetIfNotNil ("\u004c\u0045",_dca .LE );_efb .SetIfNotNil ("\u0049\u0043",_dca .IC );_efb .SetIfNotNil ("\u004c\u004c",_dca .LL );_efb .SetIfNotNil ("\u004c\u004c\u0045",_dca .LLE );_efb .SetIfNotNil ("\u0043\u0061\u0070",_dca .Cap );_efb .SetIfNotNil ("\u0049\u0054",_dca .IT );_efb .SetIfNotNil ("\u004c\u004c\u004f",_dca .LLO );_efb .SetIfNotNil ("\u0043\u0050",_dca .CP );_efb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dca .Measure );_efb .SetIfNotNil ("\u0043\u004f",_dca .CO );return _bfbf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfdcg *PdfShadingType6 )ToPdfObject ()_da .PdfObject {_gfdcg .PdfShading .ToPdfObject ();_cbaa ,_cdege :=_gfdcg .getShadingDict ();if _cdege !=nil {_ac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gfdcg .BitsPerCoordinate !=nil {_cbaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gfdcg .BitsPerCoordinate );};if _gfdcg .BitsPerComponent !=nil {_cbaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gfdcg .BitsPerComponent );};if _gfdcg .BitsPerFlag !=nil {_cbaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gfdcg .BitsPerFlag );};if _gfdcg .Decode !=nil {_cbaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfdcg .Decode );};if _gfdcg .Function !=nil {if len (_gfdcg .Function )==1{_cbaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfdcg .Function [0].ToPdfObject ());}else {_gfcge :=_da .MakeArray ();for _ ,_ebfbe :=range _gfdcg .Function {_gfcge .Append (_ebfbe .ToPdfObject ());};_cbaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfcge );};};return _gfdcg ._fgfdc ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_da .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_acec *_da .PdfIndirectObject ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_ebaec *PdfAcroForm )GetContainingPdfObject ()_da .PdfObject {return _ebaec ._abaf };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bgag :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bgag ;};