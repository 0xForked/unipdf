//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_bg "bytes";_g "crypto/md5";_ca "crypto/rand";_gb "crypto/sha1";_e "crypto/x509";_ff "encoding/binary";_f "encoding/hex";_ecg "errors";_dc "fmt";_ef "github.com/unidoc/pkcs7";_dae "github.com/unidoc/unipdf/v3/common";_bc "github.com/unidoc/unipdf/v3/core";
_fe "github.com/unidoc/unipdf/v3/core/security";_af "github.com/unidoc/unipdf/v3/core/security/crypt";_ba "github.com/unidoc/unipdf/v3/internal/cmap";_ecc "github.com/unidoc/unipdf/v3/internal/imageutil";_ee "github.com/unidoc/unipdf/v3/internal/license";
_cbb "github.com/unidoc/unipdf/v3/internal/sampling";_cabg "github.com/unidoc/unipdf/v3/internal/textencoding";_cd "github.com/unidoc/unipdf/v3/internal/timeutils";_bf "github.com/unidoc/unipdf/v3/internal/transform";_fa "github.com/unidoc/unipdf/v3/model/internal/docutil";
_dg "github.com/unidoc/unipdf/v3/model/internal/fonts";_eg "github.com/unidoc/unipdf/v3/model/sigutil";_afa "github.com/unidoc/unipdf/v3/ps";_cab "github.com/unidoc/unitype";_dcc "golang.org/x/xerrors";_aa "hash";_gg "image";_ag "image/color";_ "image/gif";
_ "image/png";_gbe "io";_cbe "io/ioutil";_da "math";_cad "math/rand";_cg "os";_cb "regexp";_ab "sort";_ec "strconv";_dee "strings";_a "sync";_b "time";_def "unicode";_ga "unicode/utf8";);

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_badcf :=&XObjectImage {};_ddbaa :=&_bc .PdfObjectStream {};_ddbaa .PdfObjectDictionary =_bc .MakeDict ();_badcf ._egeff =_ddbaa ;return _badcf ;};func _cbcee (_ccddc *_bc .PdfObjectDictionary ,_ecbcf *fontCommon )(*pdfFontType0 ,error ){_dbcce ,_cdfd :=_bc .GetArray (_ccddc .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_cdfd {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ecbcf );
return nil ,_bc .ErrRangeError ;};if _dbcce .Len ()!=1{_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_dbcce .Len ());return nil ,_bc .ErrRangeError ;
};_dgbf ,_bffa :=_cdgf (_dbcce .Get (0),false );if _bffa !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bffa ,_ecbcf );
return nil ,_bffa ;};_dbdf :=_fecbd (_ecbcf );_dbdf .DescendantFont =_dgbf ;_gdce ,_cdfd :=_bc .GetNameVal (_ccddc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cdfd {if _gdce =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gdce =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_dbdf ._abfdg =_cabg .NewIdentityTextEncoder (_gdce );
}else if _ba .IsPredefinedCMap (_gdce ){_dbdf ._bddf ,_bffa =_ba .LoadPredefinedCMap (_gdce );if _bffa !=nil {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gdce ,_bffa );
};}else {_dae .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gdce );};};if _aceg :=_dgbf .baseFields ()._bdbee ;_aceg !=nil {if _gebc :=_aceg .Name ();_gebc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_gebc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_gebc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_gebc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_dbdf ._abfdg =_cabg .NewCMapEncoder (_gdce ,_dbdf ._bddf ,_aceg );
};};return _dbdf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_faeb *PdfAnnotationHighlight )ToPdfObject ()_bc .PdfObject {_faeb .PdfAnnotation .ToPdfObject ();_bgga :=_faeb ._gdfa ;_fcfg :=_bgga .PdfObject .(*_bc .PdfObjectDictionary );_faeb .PdfAnnotationMarkup .appendToPdfDictionary (_fcfg );_fcfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_fcfg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_faeb .QuadPoints );return _bgga ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_dcgd *pdfCIDFontType0 )ToPdfObject ()_bc .PdfObject {return _bc .MakeNull ()};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cga :=NewPdfAction ();_ggc :=&PdfActionSubmitForm {};_ggc .PdfAction =_cga ;_cga .SetContext (_ggc );return _ggc ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_caebd *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgcee :=func (_dfbc float64 )float64 {if _dfbc >=6.0/29{return _dfbc *_dfbc *_dfbc ;};return 108.0/841*(_dfbc -4/29);};_cgbbd ,_dade :=color .(*PdfColorLab );if !_dade {_dae .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cgbbd .L ();AStar :=_cgbbd .A ();BStar :=_cgbbd .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_caebd .WhitePoint [0]*_dgcee (L );Y :=_caebd .WhitePoint [1]*_dgcee (M );Z :=_caebd .WhitePoint [2]*_dgcee (N );_ecgg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_febg :=-0.969256*X +1.875992*Y +0.041556*Z ;_ceaad :=0.055648*X +-0.204043*Y +1.057311*Z ;
_ecgg =_da .Min (_da .Max (_ecgg ,0),1.0);_febg =_da .Min (_da .Max (_febg ,0),1.0);_ceaad =_da .Min (_da .Max (_ceaad ,0),1.0);return NewPdfColorDeviceRGB (_ecgg ,_febg ,_ceaad ),nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bage :=&PdfAppender {_efb :reader ._ggge ,Reader :reader ,_bdcg :reader ._afedg ,_aegc :reader ._becga };_acba ,_gagga :=_bage ._efb .Seek (0,_gbe .SeekEnd );if _gagga !=nil {return nil ,_gagga ;
};_bage ._fffdd =_acba ;if _ ,_gagga =_bage ._efb .Seek (0,_gbe .SeekStart );_gagga !=nil {return nil ,_gagga ;};_bage ._cace ,_gagga =NewPdfReader (_bage ._efb );if _gagga !=nil {return nil ,_gagga ;};for _ ,_ggf :=range _bage .Reader .GetObjectNums (){if _bage ._accc < _ggf {_bage ._accc =_ggf ;
};};_bage ._cbcd =_bage ._bdcg .GetXrefTable ();_bage ._gecd =_bage ._bdcg .GetXrefOffset ();_bage ._dgab =append (_bage ._dgab ,_bage ._cace .PageList ...);_bage ._dgae =make (map[_bc .PdfObject ]struct{});_bage ._bcca =make (map[_bc .PdfObject ]int64 );
_bage ._gfcb =make (map[_bc .PdfObject ]struct{});_bage ._eade =_bage ._cace .AcroForm ;_bage ._gbec =_bage ._cace .DSS ;return _bage ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_dfde *PdfPageResources )GetXObjectFormByName (keyName _bc .PdfObjectName )(*XObjectForm ,error ){_bacb ,_cggdc :=_dfde .GetXObjectByName (keyName );if _bacb ==nil {return nil ,nil ;};if _cggdc !=XObjectTypeForm {return nil ,_ecg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_bcgdb ,_egfcg :=NewXObjectFormFromStream (_bacb );if _egfcg !=nil {return nil ,_egfcg ;};return _bcgdb ,nil ;};func (_fbcf *PdfReader )newPdfAnnotationPopupFromDict (_fffg *_bc .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_aeafc :=PdfAnnotationPopup {};
_aeafc .Parent =_fffg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_aeafc .Open =_fffg .Get ("\u004f\u0070\u0065\u006e");return &_aeafc ,nil ;};

// HasExtGState checks if ExtGState name is available.
func (_afbea *PdfPage )HasExtGState (name _bc .PdfObjectName )bool {if _afbea .Resources ==nil {return false ;};if _afbea .Resources .ExtGState ==nil {return false ;};_beaeb ,_dbbdg :=_bc .TraceToDirectObject (_afbea .Resources .ExtGState ).(*_bc .PdfObjectDictionary );
if !_dbbdg {_dae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bc .TraceToDirectObject (_afbea .Resources .ExtGState ));
return false ;};_ddcc :=_beaeb .Get (name );_gcbbg :=_ddcc !=nil ;return _gcbbg ;};

// GetCerts returns the signature certificate chain.
func (_fdegg *PdfSignature )GetCerts ()([]*_e .Certificate ,error ){var _cccgbc []func ()([]*_e .Certificate ,error );switch _cfbaf ,_ :=_bc .GetNameVal (_fdegg .SubFilter );_cfbaf {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_cccgbc =append (_cccgbc ,_fdegg .extractChainFromPKCS7 ,_fdegg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_cccgbc =append (_cccgbc ,_fdegg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_cccgbc =append (_cccgbc ,_fdegg .extractChainFromPKCS7 );
default:return nil ,_dc .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_cfbaf );};for _ ,_efffb :=range _cccgbc {_gegbf ,_bfcff :=_efffb ();if _bfcff !=nil {return nil ,_bfcff ;
};if len (_gegbf )> 0{return _gegbf ,nil ;};};return nil ,ErrSignNoCertificates ;};func (_bbaga *PdfReader )newPdfAnnotationSquigglyFromDict (_bdf *_bc .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gfgd :=PdfAnnotationSquiggly {};_ggcc ,_dba :=_bbaga .newPdfAnnotationMarkupFromDict (_bdf );
if _dba !=nil {return nil ,_dba ;};_gfgd .PdfAnnotationMarkup =_ggcc ;_gfgd .QuadPoints =_bdf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gfgd ,nil ;};func (_dadbb *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _dbccf []*PdfFieldSignature ;
for _ ,_daefa :=range _dadbb .AllFields (){switch _feeca :=_daefa .GetContext ().(type ){case *PdfFieldSignature :_bbdac :=_feeca ;_dbccf =append (_dbccf ,_bbdac );};};return _dbccf ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gbe .ReadSeeker )(*PdfFont ,error ){_cfbfa ,_caef :=_cbe .ReadAll (r );if _caef !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_caef );
return nil ,_caef ;};_fcffc ,_caef :=_dg .TtfParse (_bg .NewReader (_cfbfa ));if _caef !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_caef );
return nil ,_caef ;};_cdef :=&pdfCIDFontType2 {fontCommon :fontCommon {_caacf :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_fcffc .Widths )<=0{return nil ,_ecg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cfbeb :=1000.0/float64 (_fcffc .UnitsPerEm );_efgg :=_cfbeb *float64 (_fcffc .Widths [0]);_aaab :=make (map[rune ]int );_daadf :=make (map[_dg .GID ]int );_ggccd :=_dg .GID (len (_fcffc .Widths ));for _ecca ,_gacf :=range _fcffc .Chars {if _gacf > _ggccd -1{continue ;
};_bbdfcf :=int (_cfbeb *float64 (_fcffc .Widths [_gacf ]));_aaab [_ecca ]=_bbdfcf ;_daadf [_gacf ]=_bbdfcf ;};_cdef ._egfd =_aaab ;_cdef .DW =_bc .MakeInteger (int64 (_efgg ));_bdea :=_gdcb (_daadf ,uint16 (_ggccd ));_cdef .W =_bc .MakeIndirectObject (_bdea );
_caaffd :=_bc .MakeDict ();_caaffd .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bc .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_caaffd .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bc .MakeString ("\u0041\u0064\u006fb\u0065"));
_caaffd .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bc .MakeInteger (0));_cdef .CIDSystemInfo =_caaffd ;_gacae :=&PdfFontDescriptor {FontName :_bc .MakeName (_fcffc .PostScriptName ),Ascent :_bc .MakeFloat (_cfbeb *float64 (_fcffc .TypoAscender )),Descent :_bc .MakeFloat (_cfbeb *float64 (_fcffc .TypoDescender )),CapHeight :_bc .MakeFloat (_cfbeb *float64 (_fcffc .CapHeight )),FontBBox :_bc .MakeArrayFromFloats ([]float64 {_cfbeb *float64 (_fcffc .Xmin ),_cfbeb *float64 (_fcffc .Ymin ),_cfbeb *float64 (_fcffc .Xmax ),_cfbeb *float64 (_fcffc .Ymax )}),ItalicAngle :_bc .MakeFloat (_fcffc .ItalicAngle ),MissingWidth :_bc .MakeFloat (_efgg )};
_ggdb ,_caef :=_bc .MakeStream (_cfbfa ,_bc .NewFlateEncoder ());if _caef !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_caef );
return nil ,_caef ;};_ggdb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bc .MakeInteger (int64 (len (_cfbfa ))));_gacae .FontFile2 =_ggdb ;if _fcffc .Bold {_gacae .StemV =_bc .MakeInteger (120);}else {_gacae .StemV =_bc .MakeInteger (70);
};_edfb :=_ebag ;if _fcffc .IsFixedPitch {_edfb |=_fabg ;};if _fcffc .ItalicAngle !=0{_edfb |=_gfdf ;};_gacae .Flags =_bc .MakeInteger (int64 (_edfb ));_cdef ._fgdf =_fcffc .PostScriptName ;_cdef ._feec =_gacae ;_egec :=pdfFontType0 {fontCommon :fontCommon {_caacf :"\u0054\u0079\u0070e\u0030",_fgdf :_fcffc .PostScriptName },DescendantFont :&PdfFont {_adffg :_cdef },Encoding :_bc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_abfdg :_fcffc .NewEncoder ()};
if len (_fcffc .Chars )> 0{_gbeceg :=make (map[_ba .CharCode ]rune ,len (_fcffc .Chars ));for _dgda ,_ddcfa :=range _fcffc .Chars {_gbbf :=_ba .CharCode (_ddcfa );if _cbdea ,_ebcb :=_gbeceg [_gbbf ];!_ebcb ||(_ebcb &&_cbdea > _dgda ){_gbeceg [_gbbf ]=_dgda ;
};};_egec ._bdbee =_ba .NewToUnicodeCMap (_gbeceg );};_abbdd :=PdfFont {_adffg :&_egec };return &_abbdd ,nil ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_bdagc *PdfPage )Size ()(float64 ,float64 ,error ){_ecbg ,_cdbcgd :=_bdagc .GetMediaBox ();if _cdbcgd !=nil {return 0,0,_cdbcgd ;};_gddaa ,_gcaab :=_ecbg .Width (),_ecbg .Height ();_ggegff ,_cdbcgd :=_bdagc .GetRotate ();if _cdbcgd !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_cdbcgd .Error ());
};if _gbfda :=_ggegff ;_gbfda %360!=0&&_gbfda %90==0{if _gacgb :=(360+_gbfda %360)%360;_gacgb ==90||_gacgb ==270{_gddaa ,_gcaab =_gcaab ,_gddaa ;};};return _gddaa ,_gcaab ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_egda *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _egda .AlternateSpace ==nil {return nil ,_ecg .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _egda .AlternateSpace .ColorToRGB (color );};func (_egcac *LTV )getCerts (_efbe []*_e .Certificate )([][]byte ,error ){_bfcab :=make ([][]byte ,0,len (_efbe ));for _ ,_ebbc :=range _efbe {_bfcab =append (_bfcab ,_ebbc .Raw );};return _bfcab ,nil ;
};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gecbg :=NewPdfOutline ();_gecbg ._bgbe =&_gecbg ;return _gecbg ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_ddf *PdfReader )newPdfAnnotationLinkFromDict (_ecfc *_bc .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bcff :=PdfAnnotationLink {};_bcff .A =_ecfc .Get ("\u0041");_bcff .Dest =_ecfc .Get ("\u0044\u0065\u0073\u0074");
_bcff .H =_ecfc .Get ("\u0048");_bcff .PA =_ecfc .Get ("\u0050\u0041");_bcff .QuadPoints =_ecfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bcff .BS =_ecfc .Get ("\u0042\u0053");return &_bcff ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_adebe *PdfReader )flattenFieldsWithOpts (_debd bool ,_edcc FieldAppearanceGenerator ,_cabeg *FieldFlattenOpts )error {if _cabeg ==nil {_cabeg =&FieldFlattenOpts {};
};var _dbecb bool ;_caae :=map[*PdfAnnotation ]bool {};{var _gaaca []*PdfField ;_cegc :=_adebe .AcroForm ;if _cegc !=nil {if _cabeg .FilterFunc !=nil {_gaaca =_cegc .filteredFields (_cabeg .FilterFunc ,true );_dbecb =_cegc .Fields !=nil &&len (*_cegc .Fields )> 0;
}else {_gaaca =_cegc .AllFields ();};};for _ ,_fbgbf :=range _gaaca {for _ ,_gbcc :=range _fbgbf .Annotations {_caae [_gbcc .PdfAnnotation ]=_fbgbf .V !=nil ;if _edcc !=nil {_babb ,_fagba :=_edcc .GenerateAppearanceDict (_cegc ,_fbgbf ,_gbcc );if _fagba !=nil {return _fagba ;
};_gbcc .AP =_babb ;};};};};if _debd {for _ ,_ggga :=range _adebe .PageList {_eafddb ,_gccef :=_ggga .GetAnnotations ();if _gccef !=nil {return _gccef ;};for _ ,_cfcg :=range _eafddb {_caae [_cfcg ]=true ;};};};for _ ,_gcfgd :=range _adebe .PageList {var _bgeaf []*PdfAnnotation ;
if _edcc !=nil {if _gbecea :=_edcc .WrapContentStream (_gcfgd );_gbecea !=nil {return _gbecea ;};};_dgbed ,_bcea :=_gcfgd .GetAnnotations ();if _bcea !=nil {return _bcea ;};for _ ,_afbc :=range _dgbed {_ccbb ,_dbcaf :=_caae [_afbc ];if !_dbcaf &&_cabeg .AnnotFilterFunc !=nil {if _ ,_fbgfb :=_afbc .GetContext ().(*PdfAnnotationWidget );
!_fbgfb {_dbcaf =_cabeg .AnnotFilterFunc (_afbc );};};if !_dbcaf {_bgeaf =append (_bgeaf ,_afbc );continue ;};switch _afbc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dcbeg ,_cbfea ,_fcgdf :=_gfab (_afbc );if _fcgdf !=nil {if !_ccbb {_dae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_fcgdf );
continue ;};if _dcbeg ==nil {continue ;};_gaaf :=_gcfgd .Resources .GenerateXObjectName ();_gcfgd .Resources .SetXObjectFormByName (_gaaf ,_dcbeg );_abgf :=_da .Min (_cbfea .Llx ,_cbfea .Urx );_baff :=_da .Min (_cbfea .Lly ,_cbfea .Ury );var _gcgcc []string ;
_gcgcc =append (_gcgcc ,"\u0071");_gcgcc =append (_gcgcc ,_dc .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_abgf ,_baff ));
_gcgcc =append (_gcgcc ,_dc .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_gaaf .String ()));_gcgcc =append (_gcgcc ,"\u0051");_dgfe :=_dee .Join (_gcgcc ,"\u000a");_fcgdf =_gcfgd .AppendContentStream (_dgfe );if _fcgdf !=nil {return _fcgdf ;};if _dcbeg .Resources !=nil {_edec ,_cadc :=_bc .GetDict (_dcbeg .Resources .Font );
if _cadc {for _ ,_cacag :=range _edec .Keys (){if !_gcfgd .Resources .HasFontByName (_cacag ){_gcfgd .Resources .SetFontByName (_cacag ,_edec .Get (_cacag ));};};};};};if len (_bgeaf )> 0{_gcfgd ._dbgcg =_bgeaf ;}else {_gcfgd ._dbgcg =[]*PdfAnnotation {};
};};if !_dbecb {_adebe .AcroForm =nil ;};return nil ;};

// Height returns the height of `rect`.
func (_gfega *PdfRectangle )Height ()float64 {return _da .Abs (_gfega .Ury -_gfega .Lly )};

// ToPdfObject implements interface PdfModel.
func (_bfg *PdfActionGoToE )ToPdfObject ()_bc .PdfObject {_bfg .PdfAction .ToPdfObject ();_eeb :=_bfg ._afdg ;_bgd :=_eeb .PdfObject .(*_bc .PdfObjectDictionary );_bgd .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeGoToE )));if _bfg .F !=nil {_bgd .Set ("\u0046",_bfg .F .ToPdfObject ());
};_bgd .SetIfNotNil ("\u0044",_bfg .D );_bgd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bfg .NewWindow );_bgd .SetIfNotNil ("\u0054",_bfg .T );return _eeb ;};func _gcad (_cacbe []byte )bool {if len (_cacbe )< 4{return true ;};for _agdbb :=range _cacbe [:4]{_eddb :=rune (_agdbb );
if !_def .Is (_def .ASCII_Hex_Digit ,_eddb )&&!_def .IsSpace (_eddb ){return true ;};};return false ;};func _dbafge ()_b .Time {_eccage .Lock ();defer _eccage .Unlock ();return _daabc };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bc .PdfObjectStream ;Data []byte ;_dffgg *_bc .PdfIndirectObject ;_abde *_bc .PdfObjectStream ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_bbccd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_deff PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bc .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_agda []_bc .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_dbab []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ggaa *PdfField )GetContainingPdfObject ()_bc .PdfObject {return _ggaa ._fegd };

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bc .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bggaa *PdfColorspaceDeviceRGB )ToPdfObject ()_bc .PdfObject {return _bc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_dafde *PdfAppender )replaceObject (_gcc ,_dgfc _bc .PdfObject ){switch _bddc :=_gcc .(type ){case *_bc .PdfIndirectObject :_dafde ._bcca [_dgfc ]=_bddc .ObjectNumber ;
case *_bc .PdfObjectStream :_dafde ._bcca [_dgfc ]=_bddc .ObjectNumber ;};};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_begb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bc .StreamEncoder ,error ){_bebg ,_ceecc :=_begb ._dacf .(*_bc .PdfObjectStream );if !_ceecc {_dae .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_begb ._dacf );
return nil ,nil ,_bc .ErrTypeError ;};_bdfg ,_ggfbdg :=_bc .DecodeStream (_bebg );if _ggfbdg !=nil {_dae .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_ggfbdg );
return nil ,nil ,_ggfbdg ;};_abgg ,_ggfbdg :=_bc .NewEncoderFromStream (_bebg );if _ggfbdg !=nil {_dae .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ggfbdg );
return nil ,nil ,_ggfbdg ;};return _bdfg ,_abgg ,nil ;};func _fbgcd (_fabdd _bc .PdfObject )(*PdfFontDescriptor ,error ){_babba :=&PdfFontDescriptor {};_fabdd =_bc .ResolveReference (_fabdd );if _bcbd ,_ageag :=_fabdd .(*_bc .PdfIndirectObject );_ageag {_babba ._effbe =_bcbd ;
_fabdd =_bcbd .PdfObject ;};_bafbg ,_dgbeb :=_bc .GetDict (_fabdd );if !_dgbeb {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fabdd );
return nil ,_bc .ErrTypeError ;};if _dcbg :=_bafbg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_dcbg !=nil {_babba .FontName =_dcbg ;}else {_dae .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_ccefe ,_ :=_bc .GetName (_babba .FontName );if _ffgca :=_bafbg .Get ("\u0054\u0079\u0070\u0065");_ffgca !=nil {_eggg ,_geac :=_ffgca .(*_bc .PdfObjectName );if !_geac ||string (*_eggg )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_dae .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ffgca ,_ccefe ,_babba .FontName );
};}else {_dae .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ccefe ,_babba .FontName );
};_babba .FontFamily =_bafbg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_babba .FontStretch =_bafbg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_babba .FontWeight =_bafbg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_babba .Flags =_bafbg .Get ("\u0046\u006c\u0061g\u0073");_babba .FontBBox =_bafbg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_babba .ItalicAngle =_bafbg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_babba .Ascent =_bafbg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_babba .Descent =_bafbg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_babba .Leading =_bafbg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_babba .CapHeight =_bafbg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_babba .XHeight =_bafbg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_babba .StemV =_bafbg .Get ("\u0053\u0074\u0065m\u0056");_babba .StemH =_bafbg .Get ("\u0053\u0074\u0065m\u0048");_babba .AvgWidth =_bafbg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_babba .MaxWidth =_bafbg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_babba .MissingWidth =_bafbg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_babba .FontFile =_bafbg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_babba .FontFile2 =_bafbg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_babba .FontFile3 =_bafbg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_babba .CharSet =_bafbg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_babba .Style =_bafbg .Get ("\u0053\u0074\u0079l\u0065");_babba .Lang =_bafbg .Get ("\u004c\u0061\u006e\u0067");
_babba .FD =_bafbg .Get ("\u0046\u0044");_babba .CIDSet =_bafbg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _babba .Flags !=nil {if _aceb ,_adedd :=_bc .GetIntVal (_babba .Flags );_adedd {_babba ._aafdg =_aceb ;};};if _babba .MissingWidth !=nil {if _eaaeg ,_agbda :=_bc .GetNumberAsFloat (_babba .MissingWidth );
_agbda ==nil {_babba ._bbgg =_eaaeg ;};};if _babba .FontFile !=nil {_gbdg ,_fgfbb :=_ebcd (_babba .FontFile );if _fgfbb !=nil {return _babba ,_fgfbb ;};_dae .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gbdg );_babba .fontFile =_gbdg ;
};if _babba .FontFile2 !=nil {_cceg ,_bcbb :=_dg .NewFontFile2FromPdfObject (_babba .FontFile2 );if _bcbb !=nil {return _babba ,_bcbb ;};_dae .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cceg .String ());_babba ._edfe =&_cceg ;
};return _babba ,nil ;};func (_ffgba *PdfWriter )setHashIDs (_agbbc _aa .Hash )error {_gcfgg :=_agbbc .Sum (nil );if _ffgba ._fafc ==""{_ffgba ._fafc =_f .EncodeToString (_gcfgg [:8]);};_ffgba .setDocumentIDs (_ffgba ._fafc ,_f .EncodeToString (_gcfgg [8:]));
return nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bc .PdfObject ;MK _bc .PdfObject ;A _bc .PdfObject ;AA _bc .PdfObject ;BS _bc .PdfObject ;Parent _bc .PdfObject ;_cae *PdfField ;_aeaa bool ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_agbe :=NewPdfAnnotation ();_dga :=&PdfAnnotationWidget {};_dga .PdfAnnotation =_agbe ;_agbe .SetContext (_dga );return _dga ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eeab *PdfColorspaceSpecialSeparation )ToPdfObject ()_bc .PdfObject {_cgbc :=_bc .MakeArray (_bc .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_cgbc .Append (_eeab .ColorantName );_cgbc .Append (_eeab .AlternateSpace .ToPdfObject ());
_cgbc .Append (_eeab .TintTransform .ToPdfObject ());if _eeab ._gcbb !=nil {_eeab ._gcbb .PdfObject =_cgbc ;return _eeab ._gcbb ;};return _cgbc ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bc .PdfObjectArray ;ExtGState _bc .PdfObject ;};func (_bgfecc *PdfReader )resolveReference (_dbafg *_bc .PdfObjectReference )(_bc .PdfObject ,bool ,error ){_degde ,_ffeeb :=_bgfecc ._afedg .ObjCache [int (_dbafg .ObjectNumber )];
if !_ffeeb {_dae .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_dbafg );_ffgbe ,_fffc :=_bgfecc ._afedg .LookupByReference (*_dbafg );if _fffc !=nil {return nil ,false ,_fffc ;};_bgfecc ._afedg .ObjCache [int (_dbafg .ObjectNumber )]=_ffgbe ;
return _ffgbe ,false ,nil ;};return _degde ,true ,nil ;};func (_beee *LTV )getCRLs (_dcecc []*_e .Certificate )([][]byte ,error ){_fcded :=make ([][]byte ,0,len (_dcecc ));for _ ,_eafbc :=range _dcecc {for _ ,_ddeg :=range _eafbc .CRLDistributionPoints {if _beee .CertClient .IsCA (_eafbc ){continue ;
};_deddbg ,_aega :=_beee .CRLClient .MakeRequest (_ddeg ,_eafbc );if _aega !=nil {_dae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_aega );continue ;
};_fcded =append (_fcded ,_deddbg );};};return _fcded ,nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_bbafc *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_egcd ,_fdafa :=_bbafc .GetTrailer ();if _fdafa !=nil {return nil ,_fdafa ;};var _ccgb *_bc .PdfObjectDictionary ;_ddeeaf :=_egcd .Get ("\u0049\u006e\u0066\u006f");switch _fceeab :=_ddeeaf .(type ){case *_bc .PdfObjectReference :_fgceb :=_fceeab ;
_ddeeaf ,_fdafa =_bbafc .GetIndirectObjectByNumber (int (_fgceb .ObjectNumber ));_ddeeaf =_bc .TraceToDirectObject (_ddeeaf );if _fdafa !=nil {return nil ,_fdafa ;};_ccgb ,_ =_ddeeaf .(*_bc .PdfObjectDictionary );case *_bc .PdfObjectDictionary :_ccgb =_fceeab ;
};if _ccgb ==nil {return nil ,_ecg .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_dfbdg ,_fdafa :=NewPdfInfoFromObject (_ccgb );if _fdafa !=nil {return nil ,_fdafa ;
};return _dfbdg ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bc .PdfObject ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bc .PdfObject ;Flags _bc .PdfObject ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_egdfe *PdfPageResources )GetContainingPdfObject ()_bc .PdfObject {return _egdfe ._cbead };

// SetBorderWidth sets the style's border width.
func (_bgdd *PdfBorderStyle )SetBorderWidth (width float64 ){_bgdd .W =&width };

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _b .Time ;};func (_ace *PdfReader )newPdfAnnotationPolygonFromDict (_gag *_bc .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_faa :=PdfAnnotationPolygon {};_gaag ,_cba :=_ace .newPdfAnnotationMarkupFromDict (_gag );if _cba !=nil {return nil ,_cba ;
};_faa .PdfAnnotationMarkup =_gaag ;_faa .Vertices =_gag .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_faa .LE =_gag .Get ("\u004c\u0045");_faa .BS =_gag .Get ("\u0042\u0053");_faa .IC =_gag .Get ("\u0049\u0043");_faa .BE =_gag .Get ("\u0042\u0045");
_faa .IT =_gag .Get ("\u0049\u0054");_faa .Measure =_gag .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_faa ,nil ;};

// SetContext set the sub annotation (context).
func (_bdga *PdfShading )SetContext (ctx PdfModel ){_bdga ._cbbab =ctx };

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bc .PdfObject ;MK _bc .PdfObject ;A _bc .PdfObject ;AA _bc .PdfObject ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bc .PdfObjectArray ;Domain *_bc .PdfObjectArray ;Function []PdfFunction ;Extend *_bc .PdfObjectArray ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;const (_fabg =0x00001;_gefba =0x00002;_ebag =0x00004;_caaga =0x00008;_acggg =0x00020;_gfdf =0x00040;_bfgca =0x10000;_dgfcg =0x20000;_effb =0x40000;);

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_fc :=NewPdfAction ();_dd :=&PdfActionResetForm {};_dd .PdfAction =_fc ;_fc .SetContext (_dd );return _dd ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;
PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_acbe :=PdfColorLab {l ,a ,b };return &_acbe };

// ReplacePage replaces the original page to a new page.
func (_cgfe *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_cbaa :=pageNum -1;for _ccab :=range _cgfe ._dgab {if _ccab ==_cbaa {_agba :=page .Duplicate ();_adefa (_agba );_cgfe ._dgab [_ccab ]=_agba ;};};};func (_agacd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _agacd ._feec };


// ToPdfObject implements interface PdfModel.
func (_feea *PdfActionJavaScript )ToPdfObject ()_bc .PdfObject {_feea .PdfAction .ToPdfObject ();_eca :=_feea ._afdg ;_fde :=_eca .PdfObject .(*_bc .PdfObjectDictionary );_fde .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeJavaScript )));_fde .SetIfNotNil ("\u004a\u0053",_feea .JS );
return _eca ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bc .PdfObject ;IC _bc .PdfObject ;BE _bc .PdfObject ;RD _bc .PdfObject ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cdcf *_bc .PdfIndirectObject ;};func (_dgcaf *PdfWriter )addObjects (_debfg _bc .PdfObject )error {_dae .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _dddee ,_ffdd :=_debfg .(*_bc .PdfIndirectObject );_ffdd {_dae .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_dae .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_debfg ,_dddee );_dae .Log .Trace ("\u002d\u0020\u0025\u0073",_dddee .PdfObject );
if _dgcaf .addObject (_dddee ){_fecfe :=_dgcaf .addObjects (_dddee .PdfObject );if _fecfe !=nil {return _fecfe ;};};return nil ;};if _ccfce ,_fdfgb :=_debfg .(*_bc .PdfObjectStream );_fdfgb {_dae .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_dae .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_debfg ,_debfg );
if _dgcaf .addObject (_ccfce ){_bbeag :=_dgcaf .addObjects (_ccfce .PdfObjectDictionary );if _bbeag !=nil {return _bbeag ;};};return nil ;};if _bfge ,_facdc :=_debfg .(*_bc .PdfObjectDictionary );_facdc {_dae .Log .Trace ("\u0044\u0069\u0063\u0074");_dae .Log .Trace ("\u002d\u0020\u0025\u0073",_debfg );
for _ ,_gbbeb :=range _bfge .Keys (){_cbcgea :=_bfge .Get (_gbbeb );if _abbbc ,_geaa :=_cbcgea .(*_bc .PdfObjectReference );_geaa {_cbcgea =_abbbc .Resolve ();_bfge .Set (_gbbeb ,_cbcgea );};if _gbbeb !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _eabfa :=_dgcaf .addObjects (_cbcgea );
_eabfa !=nil {return _eabfa ;};}else {if _ ,_dgcdc :=_cbcgea .(*_bc .PdfObjectNull );_dgcdc {continue ;};if _acac :=_dgcaf .hasObject (_cbcgea );!_acac {_dae .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cbcgea ,_cbcgea ,_cbcgea );
_dgcaf ._bdgd [_cbcgea ]=append (_dgcaf ._bdgd [_cbcgea ],_bfge );};};};return nil ;};if _dbga ,_gffccf :=_debfg .(*_bc .PdfObjectArray );_gffccf {_dae .Log .Trace ("\u0041\u0072\u0072a\u0079");_dae .Log .Trace ("\u002d\u0020\u0025\u0073",_debfg );if _dbga ==nil {return _ecg .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gccefg ,_eaebf :=range _dbga .Elements (){if _bgeca ,_abfga :=_eaebf .(*_bc .PdfObjectReference );_abfga {_eaebf =_bgeca .Resolve ();_dbga .Set (_gccefg ,_eaebf );};if _edff :=_dgcaf .addObjects (_eaebf );_edff !=nil {return _edff ;};};return nil ;
};if _ ,_fggff :=_debfg .(*_bc .PdfObjectReference );_fggff {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_debfg );
return _ecg .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_cgeb *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggadf ,_afgf :=color .(*PdfColorPattern );if !_afgf {_dae .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ggadf .Color ==nil {return color ,nil ;};if _cgeb .UnderlyingCS ==nil {return nil ,_ecg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _cgeb .UnderlyingCS .ColorToRGB (_ggadf .Color );};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_eaeaec *PdfTilingPattern )ToPdfObject ()_bc .PdfObject {_eaeaec .PdfPattern .ToPdfObject ();_bbef :=_eaeaec .getDict ();if _eaeaec .PaintType !=nil {_bbef .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_eaeaec .PaintType );};if _eaeaec .TilingType !=nil {_bbef .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eaeaec .TilingType );
};if _eaeaec .BBox !=nil {_bbef .Set ("\u0042\u0042\u006f\u0078",_eaeaec .BBox .ToPdfObject ());};if _eaeaec .XStep !=nil {_bbef .Set ("\u0058\u0053\u0074e\u0070",_eaeaec .XStep );};if _eaeaec .YStep !=nil {_bbef .Set ("\u0059\u0053\u0074e\u0070",_eaeaec .YStep );
};if _eaeaec .Resources !=nil {_bbef .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eaeaec .Resources .ToPdfObject ());};if _eaeaec .Matrix !=nil {_bbef .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eaeaec .Matrix );};return _eaeaec ._dacf ;};func (_gbcdg *PdfReader )loadStructure ()error {if _gbcdg ._afedg .GetCrypter ()!=nil &&!_gbcdg ._afedg .IsAuthenticated (){return _dc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dbecd :=_gbcdg ._afedg .GetTrailer ();if _dbecd ==nil {return _dc .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ggea ,_fdadf :=_dbecd .Get ("\u0052\u006f\u006f\u0074").(*_bc .PdfObjectReference );if !_fdadf {return _dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dbecd );
};_gagec ,_dfcbfe :=_gbcdg ._afedg .LookupByReference (*_ggea );if _dfcbfe !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dfcbfe );
return _dfcbfe ;};_dabb ,_fdadf :=_gagec .(*_bc .PdfIndirectObject );if !_fdadf {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gagec ,*_dbecd );
return _ecg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eeagb ,_fdadf :=(*_dabb ).PdfObject .(*_bc .PdfObjectDictionary );if !_fdadf {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dabb .PdfObject );
return _ecg .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dae .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eeagb );_aeeaa ,_fdadf :=_eeagb .Get ("\u0050\u0061\u0067e\u0073").(*_bc .PdfObjectReference );
if !_fdadf {return _ecg .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bgdda ,_dfcbfe :=_gbcdg ._afedg .LookupByReference (*_aeeaa );
if _dfcbfe !=nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dfcbfe ;};_feggb ,_fdadf :=_bgdda .(*_bc .PdfIndirectObject );if !_fdadf {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_dae .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_feggb );return _ecg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gdfee ,_fdadf :=_feggb .PdfObject .(*_bc .PdfObjectDictionary );if !_fdadf {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_feggb );
return _ecg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_eddaa ,_fdadf :=_bc .GetInt (_gdfee .Get ("\u0043\u006f\u0075n\u0074"));if !_fdadf {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ecg .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fdadf =_bc .GetName (_gdfee .Get ("\u0054\u0079\u0070\u0065"));!_fdadf {_dae .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_gdfee .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0050\u0061\u0067e\u0073"));};if _febec ,_dbdg :=_bc .GetInt (_gdfee .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_dbdg {_cebaa :=int64 (*_febec );_gbcdg .Rotate =&_cebaa ;};_gbcdg ._afgd =_ggea ;
_gbcdg ._bdbea =_eeagb ;_gbcdg ._ddga =_gdfee ;_gbcdg ._fgbea =_feggb ;_gbcdg ._bedaf =int (*_eddaa );_gbcdg ._ggfd =[]*_bc .PdfIndirectObject {};_ceefb :=map[_bc .PdfObject ]struct{}{};_dfcbfe =_gbcdg .buildPageList (_feggb ,nil ,_ceefb );if _dfcbfe !=nil {return _dfcbfe ;
};_dae .Log .Trace ("\u002d\u002d\u002d");_dae .Log .Trace ("\u0054\u004f\u0043");_dae .Log .Trace ("\u0050\u0061\u0067e\u0073");_dae .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_gbcdg ._ggfd ),_gbcdg ._ggfd );_gbcdg ._abdb ,_dfcbfe =_gbcdg .loadOutlines ();
if _dfcbfe !=nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dfcbfe );
return _dfcbfe ;};_gbcdg .AcroForm ,_dfcbfe =_gbcdg .loadForms ();if _dfcbfe !=nil {return _dfcbfe ;};_gbcdg .DSS ,_dfcbfe =_gbcdg .loadDSS ();if _dfcbfe !=nil {return _dfcbfe ;};return nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gcbfa *PdfPageResources )SetXObjectImageByName (keyName _bc .PdfObjectName ,ximg *XObjectImage )error {_cfga :=ximg .ToPdfObject ().(*_bc .PdfObjectStream );_eabfe :=_gcbfa .SetXObjectByName (keyName ,_cfga );return _eabfe ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_fccb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_geeb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bc .PdfObject {_acff :=_bc .MakeDict ();if _geeb .Subtype !=nil {_acff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_geeb .Subtype );};_acff .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_geeb .Colorants );
_acff .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_geeb .Process );_acff .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_geeb .MixingHints );if _geeb ._gbde !=nil {_geeb ._gbde .PdfObject =_acff ;return _geeb ._gbde ;
};return _acff ;};

// ToPdfObject implements interface PdfModel.
func (_ggade *PdfAnnotationTrapNet )ToPdfObject ()_bc .PdfObject {_ggade .PdfAnnotation .ToPdfObject ();_edd :=_ggade ._gdfa ;_fcag :=_edd .PdfObject .(*_bc .PdfObjectDictionary );_fcag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _edd ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dccfa *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_dedce *PdfWriter )SetNameDictionary (names _bc .PdfObject )error {if names ==nil {return nil ;};_dae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_dedce ._bdbgc .Set ("\u004e\u0061\u006de\u0073",names );return _dedce .addObjects (names );};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_faag *PdfPattern )GetContext ()PdfModel {return _faag ._begg };

// IsShading specifies if the pattern is a shading pattern.
func (_aeeg *PdfPattern )IsShading ()bool {return _aeeg .PatternType ==2};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gadab *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_aecd :=_gadab .fill (provider ,appGen );if _aecd !=nil {return _aecd ;};if _ ,_dggd :=provider .(FieldImageProvider );_dggd {_aecd =_gadab .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _aecd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fgce *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfeg :=vals [0];_fagfe :=[]float64 {_gfeg };_bcfc ,_bdaf :=_fgce .TintTransform .Evaluate (_fagfe );
if _bdaf !=nil {_dae .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bdaf );_dae .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fgce .TintTransform );
return nil ,_bdaf ;};_dae .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_bcfc ,_fgce .AlternateSpace );
_bcge ,_bdaf :=_fgce .AlternateSpace .ColorFromFloats (_bcfc );if _bdaf !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bdaf );
return nil ,_bdaf ;};return _bcge ,nil ;};func (_ffca *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func (_fdcg *PdfReader )newPdfSignatureFromIndirect (_cagef *_bc .PdfIndirectObject )(*PdfSignature ,error ){_bafdc ,_cdeca :=_cagef .PdfObject .(*_bc .PdfObjectDictionary );
if !_cdeca {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _bbbaf ,_gafce :=_fdcg ._afcfd .GetModelFromPrimitive (_cagef ).(*PdfSignature );_gafce {return _bbbaf ,nil ;};_dafdf :=&PdfSignature {};_dafdf ._dfaaf =_cagef ;_dafdf .Type ,_ =_bc .GetName (_bafdc .Get ("\u0054\u0079\u0070\u0065"));
_dafdf .Filter ,_cdeca =_bc .GetName (_bafdc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cdeca {_dae .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dafdf .SubFilter ,_ =_bc .GetName (_bafdc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_dafdf .Contents ,_cdeca =_bc .GetString (_bafdc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cdeca {_dae .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dafdf .Cert =_bafdc .Get ("\u0043\u0065\u0072\u0074");_dafdf .ByteRange ,_ =_bc .GetArray (_bafdc .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_dafdf .Reference ,_ =_bc .GetArray (_bafdc .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_dafdf .Changes ,_ =_bc .GetArray (_bafdc .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_dafdf .Name ,_ =_bc .GetString (_bafdc .Get ("\u004e\u0061\u006d\u0065"));_dafdf .M ,_ =_bc .GetString (_bafdc .Get ("\u004d"));_dafdf .Location ,_ =_bc .GetString (_bafdc .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_dafdf .Reason ,_ =_bc .GetString (_bafdc .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_dafdf .ContactInfo ,_ =_bc .GetString (_bafdc .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_dafdf .R ,_ =_bc .GetInt (_bafdc .Get ("\u0052"));
_dafdf .V ,_ =_bc .GetInt (_bafdc .Get ("\u0056"));_dafdf .PropBuild ,_ =_bc .GetDict (_bafdc .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_dafdf .PropAuthTime ,_ =_bc .GetInt (_bafdc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_dafdf .PropAuthType ,_ =_bc .GetName (_bafdc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _dafdf ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_ccd *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ecg .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gfcf :=field .V ;if _gfcf ==nil {return _ecg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gddde :=pageNum -1;
if _gddde < 0||_gddde > len (_ccd ._dgab )-1{return _dc .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_aeaad :=_ccd .Reader .PageList [_gddde ];field .P =_aeaad .ToPdfObject ();
if field .T ==nil ||field .T .String ()==""{field .T =_bc .MakeString (_dc .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_aeaad .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _ccd ._eade ==_ccd ._cace .AcroForm {_ccd ._eade =_ccd .Reader .AcroForm ;
};_dcdf :=_ccd ._eade ;if _dcdf ==nil {_dcdf =NewPdfAcroForm ();};_dcdf .SigFlags =_bc .MakeInteger (3);_agag :=append (_dcdf .AllFields (),field .PdfField );_dcdf .Fields =&_agag ;_ccd .ReplaceAcroForm (_dcdf );_ccd .UpdatePage (_aeaad );_ccd ._dgab [_gddde ]=_aeaad ;
return nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_becbda *_bc .PdfIndirectObject ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_eccdg :=&PdfAppender {_efb :reader ._ggge ,Reader :reader ,_bdcg :reader ._afedg ,_aegc :reader ._becga };_efcg ,_gbga :=_eccdg ._efb .Seek (0,_gbe .SeekEnd );
if _gbga !=nil {return nil ,_gbga ;};_eccdg ._fffdd =_efcg ;if _ ,_gbga =_eccdg ._efb .Seek (0,_gbe .SeekStart );_gbga !=nil {return nil ,_gbga ;};_eccdg ._cace ,_gbga =NewPdfReaderWithOpts (_eccdg ._efb ,opts );if _gbga !=nil {return nil ,_gbga ;};for _ ,_efcb :=range _eccdg .Reader .GetObjectNums (){if _eccdg ._accc < _efcb {_eccdg ._accc =_efcb ;
};};_eccdg ._cbcd =_eccdg ._bdcg .GetXrefTable ();_eccdg ._gecd =_eccdg ._bdcg .GetXrefOffset ();_eccdg ._dgab =append (_eccdg ._dgab ,_eccdg ._cace .PageList ...);_eccdg ._dgae =make (map[_bc .PdfObject ]struct{});_eccdg ._bcca =make (map[_bc .PdfObject ]int64 );
_eccdg ._gfcb =make (map[_bc .PdfObject ]struct{});_eccdg ._eade =_eccdg ._cace .AcroForm ;_eccdg ._gbec =_eccdg ._cace .DSS ;if opts !=nil {_eccdg ._abed =opts .Password ;};if encryptOptions !=nil {_eccdg ._cggb =encryptOptions ;};return _eccdg ,nil ;
};func _dacebb (_edgf _bc .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fef :=NewPdfColorspaceSpecialSeparation ();if _bbabe ,_daeb :=_edgf .(*_bc .PdfIndirectObject );_daeb {_fef ._gcbb =_bbabe ;};_edgf =_bc .TraceToDirectObject (_edgf );_ebfa ,_ecfa :=_edgf .(*_bc .PdfObjectArray );
if !_ecfa {return nil ,_dc .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _ebfa .Len ()!=4{return nil ,_dc .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_edgf =_ebfa .Get (0);_bdac ,_ecfa :=_edgf .(*_bc .PdfObjectName );if !_ecfa {return nil ,_dc .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bdac !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_dc .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_edgf =_ebfa .Get (1);_bdac ,_ecfa =_edgf .(*_bc .PdfObjectName );if !_ecfa {return nil ,_dc .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fef .ColorantName =_bdac ;_edgf =_ebfa .Get (2);_caccd ,_cbcf :=NewPdfColorspaceFromPdfObject (_edgf );if _cbcf !=nil {return nil ,_cbcf ;};_fef .AlternateSpace =_caccd ;_bagd ,_cbcf :=_ffea (_ebfa .Get (3));if _cbcf !=nil {return nil ,_cbcf ;};_fef .TintTransform =_bagd ;
return _fef ,nil ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_afdecf *PdfReader )GetCatalogStructTreeRoot ()(_bc .PdfObject ,bool ){if _afdecf ._bdbea ==nil {return nil ,false ;};_becce :=_afdecf ._bdbea .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _becce ,_becce !=nil ;
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cec :=NewPdfAction ();_fd :=&PdfActionMovie {};_fd .PdfAction =_cec ;_cec .SetContext (_fd );return _fd ;};func _bbdfg (_cbcg *_bc .PdfObjectDictionary )(*PdfFieldChoice ,error ){_eccde :=&PdfFieldChoice {};_eccde .Opt ,_ =_bc .GetArray (_cbcg .Get ("\u004f\u0070\u0074"));
_eccde .TI ,_ =_bc .GetInt (_cbcg .Get ("\u0054\u0049"));_eccde .I ,_ =_bc .GetArray (_cbcg .Get ("\u0049"));return _eccde ,nil ;};func (_aacg *PdfReader )newPdfActionRenditionFromDict (_cfe *_bc .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_cfe .Get ("\u0052"),AN :_cfe .Get ("\u0041\u004e"),OP :_cfe .Get ("\u004f\u0050"),JS :_cfe .Get ("\u004a\u0053")},nil ;
};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gbe .ReadSeeker )(*PdfFont ,error ){const _cdac =_cabg .CharCode (32);const _aggc =_cabg .CharCode (255);_cbge ,_fbda :=_cbe .ReadAll (r );if _fbda !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fbda );
return nil ,_fbda ;};_cceb ,_fbda :=_dg .TtfParse (_bg .NewReader (_cbge ));if _fbda !=nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_fbda );
return nil ,_fbda ;};_effe :=&pdfFontSimple {_cddc :make (map[_cabg .CharCode ]float64 ),fontCommon :fontCommon {_caacf :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_effe ._bfdd =_cabg .NewWinAnsiEncoder ();_effe ._fgdf =_cceb .PostScriptName ;
_effe .FirstChar =_bc .MakeInteger (int64 (_cdac ));_effe .LastChar =_bc .MakeInteger (int64 (_aggc ));_faadfe :=1000.0/float64 (_cceb .UnitsPerEm );if len (_cceb .Widths )<=0{return nil ,_ecg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ccgd :=_faadfe *float64 (_cceb .Widths [0]);_beddb :=make ([]float64 ,0,_aggc -_cdac +1);for _ccbfb :=_cdac ;_ccbfb <=_aggc ;_ccbfb ++{_fbfe ,_gfcc :=_effe .Encoder ().CharcodeToRune (_ccbfb );if !_gfcc {_dae .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ccbfb );
_beddb =append (_beddb ,_ccgd );continue ;};_abfgf ,_becda :=_cceb .Chars [_fbfe ];if !_becda {_dae .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_beddb =append (_beddb ,_ccgd );continue ;
};_edeeg :=_faadfe *float64 (_cceb .Widths [_abfgf ]);_beddb =append (_beddb ,_edeeg );};_effe .Widths =_bc .MakeIndirectObject (_bc .MakeArrayFromFloats (_beddb ));if len (_beddb )< int (_aggc -_cdac +1){_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_beddb ),255-32+1);
return nil ,_bc .ErrRangeError ;};for _cdcde :=_cdac ;_cdcde <=_aggc ;_cdcde ++{_effe ._cddc [_cdcde ]=_beddb [_cdcde -_cdac ];};_effe .Encoding =_bc .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bdgfa :=&PdfFontDescriptor {};
_bdgfa .FontName =_bc .MakeName (_cceb .PostScriptName );_bdgfa .Ascent =_bc .MakeFloat (_faadfe *float64 (_cceb .TypoAscender ));_bdgfa .Descent =_bc .MakeFloat (_faadfe *float64 (_cceb .TypoDescender ));_bdgfa .CapHeight =_bc .MakeFloat (_faadfe *float64 (_cceb .CapHeight ));
_bdgfa .FontBBox =_bc .MakeArrayFromFloats ([]float64 {_faadfe *float64 (_cceb .Xmin ),_faadfe *float64 (_cceb .Ymin ),_faadfe *float64 (_cceb .Xmax ),_faadfe *float64 (_cceb .Ymax )});_bdgfa .ItalicAngle =_bc .MakeFloat (_cceb .ItalicAngle );_bdgfa .MissingWidth =_bc .MakeFloat (_faadfe *float64 (_cceb .Widths [0]));
_dfga ,_fbda :=_bc .MakeStream (_cbge ,_bc .NewFlateEncoder ());if _fbda !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fbda );
return nil ,_fbda ;};_dfga .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bc .MakeInteger (int64 (len (_cbge ))));_bdgfa .FontFile2 =_dfga ;if _cceb .Bold {_bdgfa .StemV =_bc .MakeInteger (120);}else {_bdgfa .StemV =_bc .MakeInteger (70);
};_dbgde :=_acggg ;if _cceb .IsFixedPitch {_dbgde |=_fabg ;};if _cceb .ItalicAngle !=0{_dbgde |=_gfdf ;};_bdgfa .Flags =_bc .MakeInteger (int64 (_dbgde ));_effe ._feec =_bdgfa ;_fbgbfg :=&PdfFont {_adffg :_effe };return _fbgbfg ,nil ;};func _baabc (_fadcd _bc .PdfObject )[]*_bc .PdfObjectStream {if _fadcd ==nil {return nil ;
};_ebeaf ,_faadb :=_bc .GetArray (_fadcd );if !_faadb ||_ebeaf .Len ()==0{return nil ;};_cafgaf :=make ([]*_bc .PdfObjectStream ,0,_ebeaf .Len ());for _ ,_cfagbg :=range _ebeaf .Elements (){if _ecdga ,_adeag :=_bc .GetStream (_cfagbg );_adeag {_cafgaf =append (_cafgaf ,_ecdga );
};};return _cafgaf ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_gf :=NewPdfAction ();_cbf :=&PdfActionURI {};_cbf .PdfAction =_gf ;_gf .SetContext (_cbf );return _cbf ;};

// GetContainingPdfObject implements interface PdfModel.
func (_agadg *PdfAnnotation )GetContainingPdfObject ()_bc .PdfObject {return _agadg ._gdfa };

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func (_cgfge *PdfWriter )writeObject (_beffc int ,_afcb _bc .PdfObject ){_dae .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_beffc );if _fcfcg ,_gffdd :=_afcb .(*_bc .PdfIndirectObject );
_gffdd {_cgfge ._acede [_beffc ]=crossReference {Type :1,Offset :_cgfge ._ddaaa ,Generation :_fcfcg .GenerationNumber };_cfbcc :=_dc .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_beffc );if _cdbd ,_dgfb :=_fcfcg .PdfObject .(*pdfSignDictionary );
_dgfb {_cdbd ._dbfb =_cgfge ._ddaaa +int64 (len (_cfbcc ));};if _fcfcg .PdfObject ==nil {_dae .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_fcfcg .PdfObject =_bc .MakeNull ();};_cfbcc +=_fcfcg .PdfObject .WriteString ();_cfbcc +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cgfge .writeString (_cfbcc );return ;};if _fdabb ,_aecdb :=_afcb .(*_bc .PdfObjectStream );_aecdb {_cgfge ._acede [_beffc ]=crossReference {Type :1,Offset :_cgfge ._ddaaa ,Generation :_fdabb .GenerationNumber };
_feddf :=_dc .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_beffc );_feddf +=_fdabb .PdfObjectDictionary .WriteString ();_feddf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cgfge .writeString (_feddf );_cgfge .writeBytes (_fdabb .Stream );
_cgfge .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gfbff ,_bggdf :=_afcb .(*_bc .PdfObjectStreams );_bggdf {_cgfge ._acede [_beffc ]=crossReference {Type :1,Offset :_cgfge ._ddaaa ,Generation :_gfbff .GenerationNumber };
_ccdce :=_dc .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_beffc );var _adgcd []string ;var _abgbb string ;var _faddg int64 ;for _fagdf ,_aaebe :=range _gfbff .Elements (){_eceba ,_egce :=_aaebe .(*_bc .PdfIndirectObject );if !_egce {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_beffc ,_aaebe );
continue ;};_ggbb :=_eceba .PdfObject .WriteString ()+"\u0020";_abgbb =_abgbb +_ggbb ;_adgcd =append (_adgcd ,_dc .Sprintf ("\u0025\u0064\u0020%\u0064",_eceba .ObjectNumber ,_faddg ));_cgfge ._acede [int (_eceba .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_beffc ,Index :_fagdf };
_faddg =_faddg +int64 (len ([]byte (_ggbb )));};_afbf :=_dee .Join (_adgcd ,"\u0020")+"\u0020";_dcgf :=_bc .NewFlateEncoder ();_bacde :=_dcgf .MakeStreamDict ();_bacde .Set (_bc .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bc .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_edaba :=int64 (_gfbff .Len ());_bacde .Set (_bc .PdfObjectName ("\u004e"),_bc .MakeInteger (_edaba ));_cdffeg :=int64 (len (_afbf ));_bacde .Set (_bc .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bc .MakeInteger (_cdffeg ));_bdbaa ,_ :=_dcgf .EncodeBytes ([]byte (_afbf +_abgbb ));
_edcgd :=int64 (len (_bdbaa ));_bacde .Set (_bc .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bc .MakeInteger (_edcgd ));_ccdce +=_bacde .WriteString ();_ccdce +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cgfge .writeString (_ccdce );
_cgfge .writeBytes (_bdbaa );_cgfge .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cgfge .writeString (_afcb .WriteString ());};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_gcef :=NewPdfAnnotation ();_aed :=&PdfAnnotationMovie {};_aed .PdfAnnotation =_gcef ;_gcef .SetContext (_aed );return _aed ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_deda *LTV )Enable (sig *PdfSignature ,extraCerts []*_e .Certificate )error {if _adage :=_deda .validateSig (sig );_adage !=nil {return _adage ;};_edcba ,_acbdc :=_deda .generateVRIKey (sig );if _acbdc !=nil {return _acbdc ;};if _ ,_cefe :=_deda ._bbgdd .VRI [_edcba ];
_cefe &&_deda .SkipExisting {return nil ;};_bbcgg ,_acbdc :=sig .GetCerts ();if _acbdc !=nil {return _acbdc ;};return _deda .enable (_bbcgg ,extraCerts ,_edcba );};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// SetAnnotations sets the annotations list.
func (_adda *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_adda ._dbgcg =annotations };

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_bgcf :=&PdfPageResourcesColorspaces {};_bgcf .Names =[]string {};_bgcf .Colorspaces =map[string ]PdfColorspace {};_bgcf ._cddg =&_bc .PdfIndirectObject {};return _bgcf ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_acf :=NewPdfAnnotation ();_daff :=&PdfAnnotationHighlight {};_daff .PdfAnnotation =_acf ;_daff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acf .SetContext (_daff );return _daff ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cfgg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cfgg .Mask ()&^fl .Mask ())};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gbebf *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dae .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_acaec :=[]float64 {0.0};if _gbebf .C0 !=nil {_acaec =_gbebf .C0 ;};_dafg :=[]float64 {1.0};if _gbebf .C1 !=nil {_dafg =_gbebf .C1 ;};var _bdcb []float64 ;for _aaaga :=0;_aaaga < len (_acaec );_aaaga ++{_cdeda :=_acaec [_aaaga ]+_da .Pow (x [0],_gbebf .N )*(_dafg [_aaaga ]-_acaec [_aaaga ]);
_bdcb =append (_bdcb ,_cdeda );};return _bdcb ,nil ;};func (_dfaac *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ecbgb *PdfPageResources )GetFontByName (keyName _bc .PdfObjectName )(_bc .PdfObject ,bool ){if _ecbgb .Font ==nil {return nil ,false ;};_fcfae ,_faff :=_bc .TraceToDirectObject (_ecbgb .Font ).(*_bc .PdfObjectDictionary );if !_faff {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bc .TraceToDirectObject (_ecbgb .Font ));
return nil ,false ;};if _gaffd :=_fcfae .Get (keyName );_gaffd !=nil {return _gaffd ,true ;};return nil ,false ;};

// ToPdfObject returns a stream object.
func (_cacbac *XObjectForm )ToPdfObject ()_bc .PdfObject {_egdce :=_cacbac ._abgdag ;_faaeg :=_egdce .PdfObjectDictionary ;if _cacbac .Filter !=nil {_faaeg =_cacbac .Filter .MakeStreamDict ();_egdce .PdfObjectDictionary =_faaeg ;};_faaeg .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_faaeg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0046\u006f\u0072\u006d"));_faaeg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_cacbac .FormType );_faaeg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_cacbac .BBox );
_faaeg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_cacbac .Matrix );if _cacbac .Resources !=nil {_faaeg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cacbac .Resources .ToPdfObject ());};_faaeg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cacbac .Group );
_faaeg .SetIfNotNil ("\u0052\u0065\u0066",_cacbac .Ref );_faaeg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_cacbac .MetaData );_faaeg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cacbac .PieceInfo );_faaeg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cacbac .LastModified );
_faaeg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cacbac .StructParent );_faaeg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cacbac .StructParents );_faaeg .SetIfNotNil ("\u004f\u0050\u0049",_cacbac .OPI );
_faaeg .SetIfNotNil ("\u004f\u0043",_cacbac .OC );_faaeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cacbac .Name );_faaeg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bc .MakeInteger (int64 (len (_cacbac .Stream ))));_egdce .Stream =_cacbac .Stream ;return _egdce ;
};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bc .PdfObjectInteger ;BitsPerComponent *_bc .PdfObjectInteger ;BitsPerFlag *_bc .PdfObjectInteger ;Decode *_bc .PdfObjectArray ;Function []PdfFunction ;};func _cafe ()*modelManager {_fedga :=modelManager {};
_fedga ._aeddfe =map[PdfModel ]_bc .PdfObject {};_fedga ._ffcaa =map[_bc .PdfObject ]PdfModel {};return &_fedga ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_efcbd *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_affeg *PdfPage )AddContentStreamByString (contentStr string )error {_aefgc ,_cbdca :=_bc .MakeStream ([]byte (contentStr ),_bc .NewFlateEncoder ());if _cbdca !=nil {return _cbdca ;};if _affeg .Contents ==nil {_affeg .Contents =_aefgc ;}else {_dcff :=_bc .TraceToDirectObject (_affeg .Contents );
_deaegg ,_dgcc :=_dcff .(*_bc .PdfObjectArray );if !_dgcc {_deaegg =_bc .MakeArray (_dcff );};_deaegg .Append (_aefgc );_affeg .Contents =_deaegg ;};return nil ;};func _dbbg (_agdaa _bc .PdfObject )(*_bc .PdfObjectDictionary ,*fontCommon ,error ){_cebf :=&fontCommon {};
if _eaed ,_agffd :=_agdaa .(*_bc .PdfIndirectObject );_agffd {_cebf ._bcfe =_eaed .ObjectNumber ;};_dccdc ,_aaec :=_bc .GetDict (_agdaa );if !_aaec {_dae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_agdaa );
return nil ,nil ,ErrFontNotSupported ;};_gcded ,_aaec :=_bc .GetNameVal (_dccdc .Get ("\u0054\u0079\u0070\u0065"));if !_aaec {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gcded !="\u0046\u006f\u006e\u0074"{_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gcded ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bc .ErrTypeError ;};_bgdfc ,_aaec :=_bc .GetNameVal (_dccdc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_aaec {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_cebf ._caacf =_bgdfc ;_gfca ,_aaec :=_bc .GetNameVal (_dccdc .Get ("\u004e\u0061\u006d\u0065"));if _aaec {_cebf ._gacef =_gfca ;};_fcae :=_dccdc .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _fcae !=nil {_cebf ._gdee =_bc .TraceToDirectObject (_fcae );
_fage ,_aefb :=_bcgc (_cebf ._gdee ,_cebf );if _aefb !=nil {return _dccdc ,_cebf ,_aefb ;};_cebf ._bdbee =_fage ;}else if _bgdfc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_bgdfc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_deab ,_aecaf :=_ba .NewCIDSystemInfo (_dccdc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _aecaf !=nil {return _dccdc ,_cebf ,_aecaf ;};_dgabc :=_dc .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_deab .Registry ,_deab .Ordering );if _ba .IsPredefinedCMap (_dgabc ){_cebf ._bdbee ,_aecaf =_ba .LoadPredefinedCMap (_dgabc );
if _aecaf !=nil {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dgabc ,_aecaf );
};};};_ddbcd :=_dccdc .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _ddbcd !=nil {_ccge ,_feaf :=_fbgcd (_ddbcd );if _feaf !=nil {_dae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feaf );
return _dccdc ,_cebf ,_feaf ;};_cebf ._feec =_ccge ;};if _bgdfc !="\u0054\u0079\u0070e\u0033"{_beefb ,_efda :=_bc .GetNameVal (_dccdc .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_efda {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _dccdc ,_cebf ,ErrRequiredAttributeMissing ;};_cebf ._fgdf =_beefb ;};return _dccdc ,_cebf ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_gedg *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cabg .CharCode )(_bdbad []rune ,_feede ,_gega int ){_dbbd ,_feede ,_gega :=_gedg .CharcodesToStrings (charcodes );return []rune (_dee .Join (_dbbd ,"")),_feede ,_gega ;};

// GetNumComponents returns the number of color components.
func (_aged *PdfColorspaceICCBased )GetNumComponents ()int {return _aged .N };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_beebc *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eebb :=vals [0];if _eebb < 0.0||_eebb > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eebb );
return nil ,ErrColorOutOfRange ;};_fcee :=vals [1];if _fcee < 0.0||_fcee > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcee );return nil ,ErrColorOutOfRange ;
};_fgag :=vals [2];if _fgag < 0.0||_fgag > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgag );return nil ,ErrColorOutOfRange ;};_fdeg :=vals [3];
if _fdeg < 0.0||_fdeg > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdeg );return nil ,ErrColorOutOfRange ;};_acbd :=NewPdfColorDeviceCMYK (_eebb ,_fcee ,_fgag ,_fdeg );
return _acbd ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_bccac *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbeb :=vals [0];if _gbeb < 0.0||_gbeb > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gbeb );
return nil ,ErrColorOutOfRange ;};_dgge :=vals [1];if _dgge < 0.0||_dgge > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gbeb );return nil ,ErrColorOutOfRange ;
};_eadd :=vals [2];if _eadd < 0.0||_eadd > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gbeb );return nil ,ErrColorOutOfRange ;};_cbggc :=NewPdfColorDeviceRGB (_gbeb ,_dgge ,_eadd );
return _cbggc ,nil ;};func (_agcba *pdfFontSimple )baseFields ()*fontCommon {return &_agcba .fontCommon };var (_fcdc =_cb .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_fabbc =_cb .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_gdbda =_cb .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_dfcec ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fdfc ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_dgfg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bc .PdfObject ;LE _bc .PdfObject ;BS _bc .PdfObject ;IC _bc .PdfObject ;BE _bc .PdfObject ;IT _bc .PdfObject ;Measure _bc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bcb *PdfActionSound )ToPdfObject ()_bc .PdfObject {_bcb .PdfAction .ToPdfObject ();_baa :=_bcb ._afdg ;_bbg :=_baa .PdfObject .(*_bc .PdfObjectDictionary );_bbg .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeSound )));_bbg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bcb .Sound );
_bbg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bcb .Volume );_bbg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bcb .Synchronous );_bbg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bcb .Repeat );_bbg .SetIfNotNil ("\u004d\u0069\u0078",_bcb .Mix );
return _baa ;};func _ebce (_bfda *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bfda }};

// C returns the value of the C component of the color.
func (_ggcg *PdfColorCalRGB )C ()float64 {return _ggcg [2]};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_fgebc *LTV )EnableByName (name string ,extraCerts []*_e .Certificate )error {_fcddfc :=_fgebc ._fgff ._cace .AcroForm ;for _ ,_deaeg :=range _fcddfc .AllFields (){_eebeb ,_ :=_deaeg .GetContext ().(*PdfFieldSignature );if _eebeb ==nil {continue ;
};if _afecf :=_eebeb .PartialName ();_afecf !=name {continue ;};return _fgebc .Enable (_eebeb .V ,extraCerts );};return nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_gbgce *PdfColorLab )GetNumComponents ()int {return 3};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bace *PdfColorspaceCalGray )ToPdfObject ()_bc .PdfObject {_eggf :=&_bc .PdfObjectArray {};_eggf .Append (_bc .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_gefcd :=_bc .MakeDict ();if _bace .WhitePoint !=nil {_gefcd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bc .MakeArray (_bc .MakeFloat (_bace .WhitePoint [0]),_bc .MakeFloat (_bace .WhitePoint [1]),_bc .MakeFloat (_bace .WhitePoint [2])));
}else {_dae .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bace .BlackPoint !=nil {_gefcd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bc .MakeArray (_bc .MakeFloat (_bace .BlackPoint [0]),_bc .MakeFloat (_bace .BlackPoint [1]),_bc .MakeFloat (_bace .BlackPoint [2])));
};_gefcd .Set ("\u0047\u0061\u006dm\u0061",_bc .MakeFloat (_bace .Gamma ));_eggf .Append (_gefcd );if _bace ._ccfafb !=nil {_bace ._ccfafb .PdfObject =_eggf ;return _bace ._ccfafb ;};return _eggf ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ebbgd *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bc .GetNumberAsFloat (_ebbgd .Descent );};type pdfCIDFontType2 struct{fontCommon ;_cdfb *_bc .PdfIndirectObject ;_cdafc _cabg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bc .PdfObject ;W _bc .PdfObject ;DW2 _bc .PdfObject ;W2 _bc .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bc .PdfObject ;_gdfab map[_cabg .CharCode ]float64 ;_fefc float64 ;_egfd map[rune ]int ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_ecac :=PdfColorDeviceGray (grayVal );return &_ecac ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bebab *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fcff :=_bebab .actualFont ();if _fcff ==nil {_dae .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bebab ._adffg );
return _dg .CharMetrics {},false ;};if _gdefg ,_fdbfe :=_fcff .GetRuneMetrics (r );_fdbfe {return _gdefg ,true ;};if _agfbc ,_dbbda :=_bebab .GetFontDescriptor ();_dbbda ==nil &&_agfbc !=nil {return _dg .CharMetrics {Wx :_agfbc ._bbgg },true ;};_dae .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bebab );
return _dg .CharMetrics {},false ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_faga ,_dffba :=_cg .Open (filePath );if _dffba !=nil {_dae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dffba );
return nil ,_dffba ;};defer _faga .Close ();return NewCompositePdfFontFromTTF (_faga );};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_geadd *PdfReader )Inspect ()(map[string ]int ,error ){return _geadd ._afedg .Inspect ()};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ffffg *XObjectForm )GetContainingPdfObject ()_bc .PdfObject {return _ffffg ._abgdag };

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cade byte )byte ;

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_egdc *PdfColorspaceDeviceN )ToPdfObject ()_bc .PdfObject {_caac :=_bc .MakeArray (_bc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_caac .Append (_egdc .ColorantNames );_caac .Append (_egdc .AlternateSpace .ToPdfObject ());_caac .Append (_egdc .TintTransform .ToPdfObject ());
if _egdc .Attributes !=nil {_caac .Append (_egdc .Attributes .ToPdfObject ());};if _egdc ._febd !=nil {_egdc ._febd .PdfObject =_caac ;return _egdc ._febd ;};return _caac ;};func _aggae (_egcf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_egcf }};


// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_cacb FieldFlag )Has (fl FieldFlag )bool {return (_cacb .Mask ()&fl .Mask ())> 0};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ggab *PdfAnnotation )GetContext ()PdfModel {if _ggab ==nil {return nil ;};return _ggab ._ccb ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_ecgcd *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bc .PdfObject ;Flags _bc .PdfObject ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fgfdg *Image )Resample (targetBitsPerComponent int64 ){if _fgfdg .BitsPerComponent ==targetBitsPerComponent {return ;};_adbag :=_fgfdg .GetSamples ();if targetBitsPerComponent < _fgfdg .BitsPerComponent {_gffcc :=_fgfdg .BitsPerComponent -targetBitsPerComponent ;
for _bgfec :=range _adbag {_adbag [_bgfec ]>>=uint (_gffcc );};}else if targetBitsPerComponent > _fgfdg .BitsPerComponent {_adffed :=targetBitsPerComponent -_fgfdg .BitsPerComponent ;for _acage :=range _adbag {_adbag [_acage ]<<=uint (_adffed );};};_fgfdg .BitsPerComponent =targetBitsPerComponent ;
if _fgfdg .BitsPerComponent < 8{_fgfdg .resampleLowBits (_adbag );return ;};_gbbg :=_ecc .BytesPerLine (int (_fgfdg .Width ),int (_fgfdg .BitsPerComponent ),_fgfdg .ColorComponents );_deaef :=make ([]byte ,_gbbg *int (_fgfdg .Height ));var (_fddfb ,_gebda ,_ecggf ,_efgeg int ;
_eeefe uint32 ;);for _ecggf =0;_ecggf < int (_fgfdg .Height );_ecggf ++{_fddfb =_ecggf *_gbbg ;_gebda =(_ecggf +1)*_gbbg -1;_cgaca :=_cbb .ResampleUint32 (_adbag [_fddfb :_gebda ],int (targetBitsPerComponent ),8);for _efgeg ,_eeefe =range _cgaca {_deaef [_efgeg +_fddfb ]=byte (_eeefe );
};};_fgfdg .Data =_deaef ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";
ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbcf *PdfColorspaceDeviceGray )ToPdfObject ()_bc .PdfObject {return _bc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ToPdfObject implements interface PdfModel.
func (_efd *PdfActionResetForm )ToPdfObject ()_bc .PdfObject {_efd .PdfAction .ToPdfObject ();_fbd :=_efd ._afdg ;_eba :=_fbd .PdfObject .(*_bc .PdfObjectDictionary );_eba .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeResetForm )));_eba .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_efd .Fields );
_eba .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_efd .Flags );return _fbd ;};func _egbafc (_gegee *_ecc .ImageBase )(_agcgc Image ){_agcgc .Width =int64 (_gegee .Width );_agcgc .Height =int64 (_gegee .Height );_agcgc .BitsPerComponent =int64 (_gegee .BitsPerComponent );
_agcgc .ColorComponents =_gegee .ColorComponents ;_agcgc .Data =_gegee .Data ;_agcgc ._ggeec =_gegee .Decode ;_agcgc ._ggfad =_gegee .Alpha ;return _agcgc ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_dg .CharMetrics ;

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_addfc :=&PdfSignature {Type :_bc .MakeName ("\u0053\u0069\u0067"),Handler :handler };_gded :=&pdfSignDictionary {PdfObjectDictionary :_bc .MakeDict (),_fbbdg :&handler ,_cgeac :_addfc };_addfc ._dfaaf =_bc .MakeIndirectObject (_gded );
return _addfc ;};func (_ebe *PdfReader )newPdfAnnotationCaretFromDict (_ddac *_bc .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bbbf :=PdfAnnotationCaret {};_fbe ,_dfa :=_ebe .newPdfAnnotationMarkupFromDict (_ddac );if _dfa !=nil {return nil ,_dfa ;
};_bbbf .PdfAnnotationMarkup =_fbe ;_bbbf .RD =_ddac .Get ("\u0052\u0044");_bbbf .Sy =_ddac .Get ("\u0053\u0079");return &_bbbf ,nil ;};func (_gcgbd *PdfWriter )copyObjects (){_fagef :=make (map[_bc .PdfObject ]_bc .PdfObject );_bbbeb :=make ([]_bc .PdfObject ,0,len (_gcgbd ._bcbab ));
_cfce :=make (map[_bc .PdfObject ]struct{},len (_gcgbd ._bcbab ));_egcfb :=make (map[_bc .PdfObject ]struct{});for _ ,_fdgdg :=range _gcgbd ._bcbab {_gbggc :=_gcgbd .copyObject (_fdgdg ,_fagef ,_egcfb ,false );if _ ,_gcggc :=_egcfb [_fdgdg ];_gcggc {continue ;
};_bbbeb =append (_bbbeb ,_gbggc );_cfce [_gbggc ]=struct{}{};};_gcgbd ._bcbab =_bbbeb ;_gcgbd ._dbfde =_cfce ;_gcgbd ._eefa =_gcgbd .copyObject (_gcgbd ._eefa ,_fagef ,nil ,false ).(*_bc .PdfIndirectObject );_gcgbd ._cbdaa =_gcgbd .copyObject (_gcgbd ._cbdaa ,_fagef ,nil ,false ).(*_bc .PdfIndirectObject );
if _gcgbd ._ffdgd !=nil {_gcgbd ._ffdgd =_gcgbd .copyObject (_gcgbd ._ffdgd ,_fagef ,nil ,false ).(*_bc .PdfIndirectObject );};if _gcgbd ._dcebde {_ceaadd :=make (map[_bc .PdfObject ]int64 );for _ccdcc ,_eadbf :=range _gcgbd ._dgcaa {if _cfdgf ,_efgda :=_fagef [_ccdcc ];
_efgda {_ceaadd [_cfdgf ]=_eadbf ;}else {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_gcgbd ._dgcaa =_ceaadd ;};};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_cafg *PdfFont )SubsetRegistered ()error {switch _ecge :=_cafg ._adffg .(type ){case *pdfFontType0 :_ccde :=_ecge .subsetRegistered ();if _ccde !=nil {_dae .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ccde );
return _ccde ;};if _ecge ._adce !=nil {if _ecge ._abfdg !=nil {_ecge ._abfdg .ToPdfObject ();};_ecge .ToPdfObject ();};default:_dae .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_ecge );
};return nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fgca *PdfPageResources )SetXObjectByName (keyName _bc .PdfObjectName ,stream *_bc .PdfObjectStream )error {if _fgca .XObject ==nil {_fgca .XObject =_bc .MakeDict ();};_efgea :=_bc .TraceToDirectObject (_fgca .XObject );_bgcd ,_edgdd :=_efgea .(*_bc .PdfObjectDictionary );
if !_edgdd {_dae .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fgca .XObject ,_efgea );return _ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bgcd .Set (keyName ,stream );return nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_ebf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_dfaaf *_bc .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bc .PdfObjectName ;Filter *_bc .PdfObjectName ;SubFilter *_bc .PdfObjectName ;Contents *_bc .PdfObjectString ;Cert _bc .PdfObject ;ByteRange *_bc .PdfObjectArray ;Reference *_bc .PdfObjectArray ;Changes *_bc .PdfObjectArray ;Name *_bc .PdfObjectString ;
M *_bc .PdfObjectString ;Location *_bc .PdfObjectString ;Reason *_bc .PdfObjectString ;ContactInfo *_bc .PdfObjectString ;R *_bc .PdfObjectInteger ;V *_bc .PdfObjectInteger ;PropBuild *_bc .PdfObjectDictionary ;PropAuthTime *_bc .PdfObjectInteger ;PropAuthType *_bc .PdfObjectName ;
};func _deegb (_fgeca *_bc .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dcbccd :=&PdfShadingPattern {};_fbggb :=_fgeca .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _fbggb ==nil {_dae .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_egae ,_ffgfa :=_abbbf (_fbggb );if _ffgfa !=nil {_dae .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_ffgfa );return nil ,_ffgfa ;
};_dcbccd .Shading =_egae ;if _bbgcgf :=_fgeca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bbgcgf !=nil {_bbbge ,_gedb :=_bbgcgf .(*_bc .PdfObjectArray );if !_gedb {_dae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbgcgf );
return nil ,_bc .ErrTypeError ;};_dcbccd .Matrix =_bbbge ;};if _ffagf :=_fgeca .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ffagf !=nil {_dcbccd .ExtGState =_ffagf ;};return _dcbccd ,nil ;};func (_cbab *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};func (_ddag *PdfReader )newPdfAnnotationRichMediaFromDict (_cgcc *_bc .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_eaeg :=&PdfAnnotationRichMedia {};_eaeg .RichMediaSettings =_cgcc .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_eaeg .RichMediaContent =_cgcc .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _eaeg ,nil ;};func _cfgfd (_ecdbfd *XObjectImage )error {if _ecdbfd .SMask ==nil {return nil ;};_fbgea ,_bcbcb :=_ecdbfd .SMask .(*_bc .PdfObjectStream );
if !_bcbcb {_dae .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _bc .ErrTypeError ;};_gbba :=_fbgea .PdfObjectDictionary ;
_geab :=_gbba .Get ("\u004d\u0061\u0074t\u0065");if _geab ==nil {return nil ;};_gebed ,_ecbab :=_gbgeb (_geab .(*_bc .PdfObjectArray ));if _ecbab !=nil {return _ecbab ;};_dffec :=_bc .MakeArrayFromFloats ([]float64 {_gebed });_gbba .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dffec );
return nil ;};func (_cea *PdfReader )newPdfAnnotationScreenFromDict (_bdcc *_bc .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_gaab :=PdfAnnotationScreen {};_gaab .T =_bdcc .Get ("\u0054");_gaab .MK =_bdcc .Get ("\u004d\u004b");_gaab .A =_bdcc .Get ("\u0041");
_gaab .AA =_bdcc .Get ("\u0041\u0041");return &_gaab ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_eccage .Lock ();defer _eccage .Unlock ();_ddggd =title };

// GetTrailer returns the PDF's trailer dictionary.
func (_daffa *PdfReader )GetTrailer ()(*_bc .PdfObjectDictionary ,error ){_eeadd :=_daffa ._afedg .GetTrailer ();if _eeadd ==nil {return nil ,_ecg .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _eeadd ,nil ;
};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_fcgd *_bc .PdfObjectDictionary ;_adgb *_bc .PdfIndirectObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bc .PdfObject ;_gbdaa []byte ;_geeaf *_bc .PdfIndirectObject ;};func (_ccabd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _ccabd ._afedg .GetCrypter ()!=nil &&!_ccabd ._afedg .IsAuthenticated (){return nil ,_dc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cbfc :=_ccabd ._bdbea ;_cbegb :=_cbfc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cbegb ==nil {return nil ,nil ;};_cfcfcd ,_ :=_bc .GetIndirect (_cbegb );_cbegb =_bc .TraceToDirectObject (_cbegb );if _bc .IsNullObject (_cbegb ){_dae .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_edbe ,_gaaea :=_bc .GetDict (_cbegb );if !_gaaea {_dae .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cbegb );_dae .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_dc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cbegb );};_dae .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_dae .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_ccabd ._egcb {_bdbga :=_ccabd .traverseObjectData (_edbe );
if _bdbga !=nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_bdbga );
return nil ,_bdbga ;};};_bbafdd ,_eebec :=_ccabd .newPdfAcroFormFromDict (_cfcfcd ,_edbe );if _eebec !=nil {return nil ,_eebec ;};return _bbafdd ,nil ;};func _badbd (_ggdf string )(map[_cabg .CharCode ]_cabg .GlyphName ,error ){_cdfg :=_dee .Split (_ggdf ,"\u000a");
_afbca :=make (map[_cabg .CharCode ]_cabg .GlyphName );for _ ,_feeb :=range _cdfg {_dgdfc :=_gdbda .FindStringSubmatch (_feeb );if _dgdfc ==nil {continue ;};_agfgc ,_dadb :=_dgdfc [1],_dgdfc [2];_dgbfb ,_bffca :=_ec .Atoi (_agfgc );if _bffca !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_feeb );
return nil ,_bc .ErrTypeError ;};_afbca [_cabg .CharCode (_dgbfb )]=_cabg .GlyphName (_dadb );};_dae .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_afbca );
return _afbca ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_acef DefaultImageHandler )NewImageFromGoImage (goimg _gg .Image )(*Image ,error ){_ecgee ,_bbgdaa :=_ecc .FromGoImage (goimg );if _bbgdaa !=nil {return nil ,_bbgdaa ;};_gfeba :=_egbafc (_ecgee .Base ());return &_gfeba ,nil ;};

// B returns the value of the B component of the color.
func (_cde *PdfColorLab )B ()float64 {return _cde [2]};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bc .PdfObject ;Dest _bc .PdfObject ;H _bc .PdfObject ;PA _bc .PdfObject ;QuadPoints _bc .PdfObject ;BS _bc .PdfObject ;_bfce *PdfAction ;_dfd *PdfReader ;};type fontFile struct{_acedf string ;_agfe string ;
_ffcg _cabg .SimpleEncoder ;};

// ToPdfObject returns the PDF representation of the function.
func (_beae *PdfFunctionType3 )ToPdfObject ()_bc .PdfObject {_aeacd :=_bc .MakeDict ();_aeacd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bc .MakeInteger (3));_efba :=&_bc .PdfObjectArray {};for _ ,_cbfbb :=range _beae .Domain {_efba .Append (_bc .MakeFloat (_cbfbb ));
};_aeacd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efba );if _beae .Range !=nil {_afegf :=&_bc .PdfObjectArray {};for _ ,_aafb :=range _beae .Range {_afegf .Append (_bc .MakeFloat (_aafb ));};_aeacd .Set ("\u0052\u0061\u006eg\u0065",_afegf );};if _beae .Functions !=nil {_cdec :=&_bc .PdfObjectArray {};
for _ ,_gdccb :=range _beae .Functions {_cdec .Append (_gdccb .ToPdfObject ());};_aeacd .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_cdec );};if _beae .Bounds !=nil {_egggg :=&_bc .PdfObjectArray {};for _ ,_fdaf :=range _beae .Bounds {_egggg .Append (_bc .MakeFloat (_fdaf ));
};_aeacd .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_egggg );};if _beae .Encode !=nil {_bbbba :=&_bc .PdfObjectArray {};for _ ,_gdbdd :=range _beae .Encode {_bbbba .Append (_bc .MakeFloat (_gdbdd ));};_aeacd .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bbbba );
};if _beae ._gcaa !=nil {_beae ._gcaa .PdfObject =_aeacd ;return _beae ._gcaa ;};return _aeacd ;};func (_cabgb *PdfWriter )setWriter (_gcfa _gbe .Writer ){_cabgb ._ddaaa =_cabgb ._edece ;_cabgb ._adccb =_c .NewWriter (_gcfa );};

// AddExtGState adds a graphics state to the XObject resources.
func (_addgaf *PdfPage )AddExtGState (name _bc .PdfObjectName ,egs *_bc .PdfObjectDictionary )error {if _addgaf .Resources ==nil {_addgaf .Resources =NewPdfPageResources ();};if _addgaf .Resources .ExtGState ==nil {_addgaf .Resources .ExtGState =_bc .MakeDict ();
};_eegfb ,_ggdfd :=_bc .TraceToDirectObject (_addgaf .Resources .ExtGState ).(*_bc .PdfObjectDictionary );if !_ggdfd {_dae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bc .TraceToDirectObject (_addgaf .Resources .ExtGState ));
return _ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eegfb .Set (name ,egs );return nil ;};func (_dbf *PdfReader )newPdfAnnotationSoundFromDict (_dbef *_bc .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_cdag :=PdfAnnotationSound {};
_bbda ,_abb :=_dbf .newPdfAnnotationMarkupFromDict (_dbef );if _abb !=nil {return nil ,_abb ;};_cdag .PdfAnnotationMarkup =_bbda ;_cdag .Name =_dbef .Get ("\u004e\u0061\u006d\u0065");_cdag .Sound =_dbef .Get ("\u0053\u006f\u0075n\u0064");return &_cdag ,nil ;
};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bc .PdfObject ;Open _bc .PdfObject ;};func (_gaced *fontFile )loadFromSegments (_bgc ,_fafef []byte )error {_dae .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_bgc ),len (_fafef ));
_efcbb :=_gaced .parseASCIIPart (_bgc );if _efcbb !=nil {return _efcbb ;};_dae .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gaced );if len (_fafef )==0{return nil ;};_dae .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gaced );
return nil ;};func (_fabac *PdfWriter )mapObjectStreams (_cgfed bool )(map[_bc .PdfObject ]bool ,bool ){_fbede :=make (map[_bc .PdfObject ]bool );for _ ,_bcbeb :=range _fabac ._bcbab {if _dbbff ,_baccg :=_bcbeb .(*_bc .PdfObjectStreams );_baccg {_cgfed =true ;
for _ ,_cfbgc :=range _dbbff .Elements (){_fbede [_cfbgc ]=true ;if _eggbb ,_gdfb :=_cfbgc .(*_bc .PdfIndirectObject );_gdfb {_fbede [_eggbb .PdfObject ]=true ;};};};};return _fbede ,_cgfed ;};func (_gcge *DSS )generateHashMaps ()error {_bebcb ,_afeg :=_gcge .generateHashMap (_gcge .Certs );
if _afeg !=nil {return _afeg ;};_abdd ,_afeg :=_gcge .generateHashMap (_gcge .OCSPs );if _afeg !=nil {return _afeg ;};_adga ,_afeg :=_gcge .generateHashMap (_gcge .CRLs );if _afeg !=nil {return _afeg ;};_gcge ._gdbd =_bebcb ;_gcge ._addg =_abdd ;_gcge ._agga =_adga ;
return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dge *PdfColorspaceLab )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agac ,_dbfc :=_bc .GetNumbersAsFloat (objects );
if _dbfc !=nil {return nil ,_dbfc ;};return _dge .ColorFromFloats (_agac );};

// SetDecode sets the decode image float slice.
func (_fdedg *Image )SetDecode (decode []float64 ){_fdedg ._ggeec =decode };

// ToPdfObject implements interface PdfModel.
func (_dbfa *PdfAnnotationCaret )ToPdfObject ()_bc .PdfObject {_dbfa .PdfAnnotation .ToPdfObject ();_dab :=_dbfa ._gdfa ;_agfb :=_dab .PdfObject .(*_bc .PdfObjectDictionary );_dbfa .PdfAnnotationMarkup .appendToPdfDictionary (_agfb );_agfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0043\u0061\u0072e\u0074"));
_agfb .SetIfNotNil ("\u0052\u0044",_dbfa .RD );_agfb .SetIfNotNil ("\u0053\u0079",_dbfa .Sy );return _dab ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_gbedc *PdfPage )Duplicate ()*PdfPage {_aefdg :=*_gbedc ;_aefdg ._cbcce =_bc .MakeDict ();_aefdg ._eadb =_bc .MakeIndirectObject (_aefdg ._cbcce );return &_aefdg ;};func (_ecaff *DSS )addCerts (_cffgc [][]byte )([]*_bc .PdfObjectStream ,error ){return _ecaff .add (&_ecaff .Certs ,_ecaff ._gdbd ,_cffgc );
};var (ErrRequiredAttributeMissing =_ecg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_ecg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cgfd =_ecg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ecg .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_ecg .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_dcc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bc .ErrNotSupported );
ErrType1CFontNotSupported =_dcc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bc .ErrNotSupported );
ErrType3FontNotSupported =_dcc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bc .ErrNotSupported );
ErrTTCmapNotSupported =_dcc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bc .ErrNotSupported );
ErrSignNotEnoughSpace =_dcc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dcc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ImageToRGB convert an indexed image to RGB.
func (_adbf *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_adbf .Base .GetNumComponents ();if N < 1{return Image {},_dc .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ddgg :=_ecc .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._ggfad ,img ._ggeec );_fcfgf :=_cbb .NewReader (img .getBase ());_edeed :=_cbb .NewWriter (_ddgg );var (_fcafg uint32 ;_gada int ;_fedcc error ;);for {_fcafg ,_fedcc =_fcfgf .ReadSample ();
if _fedcc ==_gbe .EOF {break ;}else if _fedcc !=nil {return img ,_fedcc ;};_gada =int (_fcafg );_dae .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gada ,N ,len (_adbf ._gbdaa ));
if (_gada +1)*N > len (_adbf ._gbdaa ){_gada =len (_adbf ._gbdaa )/N -1;_dae .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gada );if _gada < 0{_dae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _dcbc :=_gada *N ;_dcbc < (_gada +1)*N ;_dcbc ++{if _fedcc =_edeed .WriteSample (uint32 (_adbf ._gbdaa [_dcbc ]));_fedcc !=nil {return img ,_fedcc ;};};};return _adbf .Base .ImageToRGB (_egbafc (&_ddgg ));};

// ToPdfObject implements interface PdfModel.
func (_bbfb *PdfAnnotationInk )ToPdfObject ()_bc .PdfObject {_bbfb .PdfAnnotation .ToPdfObject ();_ebb :=_bbfb ._gdfa ;_geff :=_ebb .PdfObject .(*_bc .PdfObjectDictionary );_bbfb .PdfAnnotationMarkup .appendToPdfDictionary (_geff );_geff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0049\u006e\u006b"));
_geff .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_bbfb .InkList );_geff .SetIfNotNil ("\u0042\u0053",_bbfb .BS );return _ebb ;};func _cdgf (_eafage _bc .PdfObject ,_cbabb bool )(*PdfFont ,error ){_adcf ,_abcb ,_dffbg :=_dbbg (_eafage );if _adcf !=nil {_ggaaf (_adcf );
};if _dffbg !=nil {if _dffbg ==ErrType1CFontNotSupported {_cdbc ,_daebd :=_afcg (_adcf ,_abcb ,nil );if _daebd !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abcb ,_daebd );
return nil ,_dffbg ;};return &PdfFont {_adffg :_cdbc },_dffbg ;};return nil ,_dffbg ;};_ccdd :=&PdfFont {};switch _abcb ._caacf {case "\u0054\u0079\u0070e\u0030":if !_cbabb {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abcb );
return nil ,_ecg .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_bcaa ,_bgbf :=_cbcee (_adcf ,_abcb );if _bgbf !=nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abcb ,_bgbf );
return nil ,_bgbf ;};_ccdd ._adffg =_bcaa ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bcdb *pdfFontSimple ;_caafb ,_fagbac :=_dg .NewStdFontByName (_dg .StdFontName (_abcb ._fgdf ));
if _fagbac {_faee :=_egbaf (_caafb );_ccdd ._adffg =&_faee ;_fbgd :=_bc .TraceToDirectObject (_faee .ToPdfObject ());_agbd ,_decb ,_fcbd :=_dbbg (_fbgd );if _fcbd !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abcb ,_faee );
return nil ,_fcbd ;};for _ ,_bcbg :=range _adcf .Keys (){_agbd .Set (_bcbg ,_adcf .Get (_bcbg ));};_bcdb ,_fcbd =_afcg (_agbd ,_decb ,_faee ._fbdfdc );if _fcbd !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abcb ,_faee );
return nil ,_fcbd ;};_bcdb ._cddc =_faee ._cddc ;_bcdb ._dbgc =_faee ._dbgc ;if _bcdb ._efde ==nil {_bcdb ._efde =_faee ._efde ;};}else {_bcdb ,_dffbg =_afcg (_adcf ,_abcb ,nil );if _dffbg !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abcb ,_dffbg );
return nil ,_dffbg ;};};_dffbg =_bcdb .addEncoding ();if _dffbg !=nil {return nil ,_dffbg ;};if _fagbac {_bcdb .updateStandard14Font ();};if _fagbac &&_bcdb ._bfdd ==nil &&_bcdb ._fbdfdc ==nil {_dae .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcdb );
_dae .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_caafb );};if len (_bcdb ._cddc )==0{_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bcdb );};_ccdd ._adffg =_bcdb ;
case "\u0054\u0079\u0070e\u0033":_bdcdf ,_bbddb :=_gdbc (_adcf ,_abcb );if _bbddb !=nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bbddb );
return nil ,_bbddb ;};_ccdd ._adffg =_bdcdf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fcbcc ,_ebggd :=_dgdf (_adcf ,_abcb );if _ebggd !=nil {_dae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ebggd );
return nil ,_ebggd ;};_ccdd ._adffg =_fcbcc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gade ,_ccef :=_edga (_adcf ,_abcb );if _ccef !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abcb ,_ccef );
return nil ,_ccef ;};_ccdd ._adffg =_gade ;default:_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_abcb );
return nil ,_dc .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abcb );};return _ccdd ,nil ;};

// Encoder returns the font's text encoder.
func (_ddaga pdfFontType3 )Encoder ()_cabg .TextEncoder {return _ddaga ._bagg };func (_cfagb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _cfagb ._feec ==nil &&_cfagb .DescendantFont !=nil {return _cfagb .DescendantFont .FontDescriptor ();
};return _cfagb ._feec ;};func (_abgac *PdfField )inherit (_faaf func (*PdfField )bool )(bool ,error ){_deae :=map[*PdfField ]bool {};_gecb :=false ;_fbcee :=_abgac ;for _fbcee !=nil {if _ ,_gfgg :=_deae [_fbcee ];_gfgg {return false ,_ecg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_aaef :=_faaf (_fbcee );if _aaef {_gecb =true ;break ;};_deae [_fbcee ]=true ;_fbcee =_fbcee .Parent ;};return _gecb ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_gecfd *PdfPage )SetContentStreams (cStreams []string ,encoder _bc .StreamEncoder )error {if len (cStreams )==0{_gecfd .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bc .NewRawEncoder ();};var _ffacc []*_bc .PdfObjectStream ;for _ ,_caafg :=range cStreams {_effgg :=&_bc .PdfObjectStream {};
_fecae :=encoder .MakeStreamDict ();_dggde ,_cgcgg :=encoder .EncodeBytes ([]byte (_caafg ));if _cgcgg !=nil {return _cgcgg ;};_fecae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bc .MakeInteger (int64 (len (_dggde ))));_effgg .PdfObjectDictionary =_fecae ;
_effgg .Stream =_dggde ;_ffacc =append (_ffacc ,_effgg );};if len (_ffacc )==1{_gecfd .Contents =_ffacc [0];}else {_dfcf :=_bc .MakeArray ();for _ ,_gadc :=range _ffacc {_dfcf .Append (_gadc );};_gecfd .Contents =_dfcf ;};return nil ;};

// K returns the value of the key component of the color.
func (_bdgf *PdfColorDeviceCMYK )K ()float64 {return _bdgf [3]};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ebaa :=NewPdfAnnotation ();_fba :=&PdfAnnotationProjection {};_fba .PdfAnnotation =_ebaa ;_fba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebaa .SetContext (_fba );return _fba ;};func _dcba (_cggf _bc .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_dabd :=NewPdfColorspaceSpecialIndexed ();
if _acdf ,_acaf :=_cggf .(*_bc .PdfIndirectObject );_acaf {_dabd ._geeaf =_acdf ;};_cggf =_bc .TraceToDirectObject (_cggf );_ddaa ,_bbgf :=_cggf .(*_bc .PdfObjectArray );if !_bbgf {return nil ,_dc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ddaa .Len ()!=4{return nil ,_dc .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_cggf =_ddaa .Get (0);
_afaf ,_bbgf :=_cggf .(*_bc .PdfObjectName );if !_bbgf {return nil ,_dc .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_afaf !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_dc .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_cggf =_ddaa .Get (1);_acee ,_aaae :=DetermineColorspaceNameFromPdfObject (_cggf );if _aaae !=nil {return nil ,_aaae ;};if _acee =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_acee =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dae .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_acee );
return nil ,_cgfd ;};_cbdee ,_aaae :=NewPdfColorspaceFromPdfObject (_cggf );if _aaae !=nil {return nil ,_aaae ;};_dabd .Base =_cbdee ;_cggf =_ddaa .Get (2);_efeb ,_aaae :=_bc .GetNumberAsInt64 (_cggf );if _aaae !=nil {return nil ,_aaae ;};if _efeb > 255{return nil ,_dc .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_dabd .HiVal =int (_efeb );_cggf =_ddaa .Get (3);_dabd .Lookup =_cggf ;_cggf =_bc .TraceToDirectObject (_cggf );var _fdcf []byte ;if _ebafab ,_bfdb :=_cggf .(*_bc .PdfObjectString );_bfdb {_fdcf =_ebafab .Bytes ();_dae .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_fdcf );
}else if _affgdf ,_gagfb :=_cggf .(*_bc .PdfObjectStream );_gagfb {_dae .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cggf .String ());_dae .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_affgdf .Stream ),_affgdf .Stream );
_egef ,_cedf :=_bc .DecodeStream (_affgdf );if _cedf !=nil {return nil ,_cedf ;};_dae .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_egef ),_egef );_fdcf =_egef ;}else {_dae .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cggf );
return nil ,_dc .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_fdcf )< _dabd .Base .GetNumComponents ()*(_dabd .HiVal +1){_dae .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_dae .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_fdcf ),_dabd .Base .GetNumComponents (),_dabd .HiVal );
}else {_fdcf =_fdcf [:_dabd .Base .GetNumComponents ()*(_dabd .HiVal +1)];};_dabd ._gbdaa =_fdcf ;return _dabd ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_edgaba :=&XObjectForm {};_badcg :=&_bc .PdfObjectStream {};_badcg .PdfObjectDictionary =_bc .MakeDict ();_edgaba ._abgdag =_badcg ;return _edgaba ;};var _ pdfFont =(*pdfFontSimple )(nil );

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bc .PdfObject ;IC _bc .PdfObject ;RO _bc .PdfObject ;OverlayText _bc .PdfObject ;Repeat _bc .PdfObject ;DA _bc .PdfObject ;Q _bc .PdfObject ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cddg *_bc .PdfIndirectObject ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bc .PdfObject ;T3DV _bc .PdfObject ;T3DA _bc .PdfObject ;T3DI _bc .PdfObject ;T3DB _bc .PdfObject ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_fbaae *PdfPageResources )GetColorspaceByName (keyName _bc .PdfObjectName )(PdfColorspace ,bool ){_bcced ,_gdaa :=_fbaae .GetColorspaces ();if _gdaa !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gdaa );
return nil ,false ;};if _bcced ==nil {return nil ,false ;};_gbbdc ,_geada :=_bcced .Colorspaces [string (keyName )];if !_geada {return nil ,false ;};return _gbbdc ,true ;};func (_cddef *pdfFontSimple )addEncoding ()error {var (_fdeaa string ;_ebgfe map[_cabg .CharCode ]_cabg .GlyphName ;
_fbaea _cabg .SimpleEncoder ;);if _cddef .Encoder ()!=nil {_geace ,_acaee :=_cddef .Encoder ().(_cabg .SimpleEncoder );if _acaee &&_geace !=nil {_fdeaa =_geace .BaseName ();};};if _cddef .Encoding !=nil {_baefg ,_aada ,_bfaeg :=_cddef .getFontEncoding ();
if _bfaeg !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cddef ._fgdf ,_cddef ._caacf ,_cddef .Encoding ,_cddef .Encoding ,_bfaeg );
return _bfaeg ;};if _baefg !=""{_fdeaa =_baefg ;};_ebgfe =_aada ;_fbaea ,_bfaeg =_cabg .NewSimpleTextEncoder (_fdeaa ,_ebgfe );if _bfaeg !=nil {return _bfaeg ;};};if _fbaea ==nil {_baac :=_cddef ._feec ;if _baac !=nil {switch _cddef ._caacf {case "\u0054\u0079\u0070e\u0031":if _baac .fontFile !=nil &&_baac .fontFile ._ffcg !=nil {_dae .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_fbaea =_baac .fontFile ._ffcg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _baac ._edfe !=nil {_dae .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_eede ,_gbecg :=_baac ._edfe .MakeEncoder ();
if _gbecg ==nil {_fbaea =_eede ;};};};};};if _fbaea !=nil {if _ebgfe !=nil {_dae .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebgfe ,_cddef .baseFields ());
_fbaea =_cabg .ApplyDifferences (_fbaea ,_ebgfe );};_cddef .SetEncoder (_fbaea );};return nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_dafd :=NewPdfAnnotation ();_ddc :=&PdfAnnotationCaret {};_ddc .PdfAnnotation =_dafd ;_ddc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dafd .SetContext (_ddc );return _ddc ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_bffdf *PdfWriter )GetPdfVersion ()string {return _bffdf .getPdfVersion ()};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_dbffbb *Image )SetSamples (samples []uint32 ){if _dbffbb .BitsPerComponent < 8{samples =_dbffbb .samplesAddPadding (samples );};_abdcf :=_cbb .ResampleUint32 (samples ,int (_dbffbb .BitsPerComponent ),8);_eddfb :=make ([]byte ,len (_abdcf ));for _dcgb ,_dadcb :=range _abdcf {_eddfb [_dcgb ]=byte (_dadcb );
};_dbffbb .Data =_eddfb ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_fcfda *PdfInfo )ToPdfObject ()_bc .PdfObject {_cfae :=_bc .MakeDict ();_cfae .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_fcfda .Title );_cfae .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_fcfda .Author );_cfae .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_fcfda .Subject );
_cfae .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fcfda .Keywords );_cfae .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_fcfda .Creator );_cfae .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fcfda .Producer );
_cfae .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_fcfda .Trapped );if _fcfda .CreationDate !=nil {_cfae .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fcfda .CreationDate .ToPdfObject ());};if _fcfda .ModifiedDate !=nil {_cfae .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_fcfda .ModifiedDate .ToPdfObject ());
};for _ ,_aaac :=range _fcfda ._cbeg .Keys (){_cfae .SetIfNotNil (_aaac ,_fcfda ._cbeg .Get (_aaac ));};return _cfae ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_bgb :=PdfColorCalRGB {a ,b ,c };return &_bgb ;};func (_cdd *PdfReader )newPdfActionGoTo3DViewFromDict (_fdgc *_bc .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_fdgc .Get ("\u0054\u0041"),V :_fdgc .Get ("\u0056")},nil ;
};

// SetShadingByName sets a shading resource specified by keyName.
func (_dbdfe *PdfPageResources )SetShadingByName (keyName _bc .PdfObjectName ,shadingObj _bc .PdfObject )error {if _dbdfe .Shading ==nil {_dbdfe .Shading =_bc .MakeDict ();};_cacbb ,_aebf :=_dbdfe .Shading .(*_bc .PdfObjectDictionary );if !_aebf {return _bc .ErrTypeError ;
};_cacbb .Set (keyName ,shadingObj );return nil ;};func _aggg (_edbg _bc .PdfObject )(*PdfColorspaceLab ,error ){_ebgdc :=NewPdfColorspaceLab ();if _agffg ,_fge :=_edbg .(*_bc .PdfIndirectObject );_fge {_ebgdc ._becbda =_agffg ;};_edbg =_bc .TraceToDirectObject (_edbg );
_eace ,_egagc :=_edbg .(*_bc .PdfObjectArray );if !_egagc {return nil ,_dc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eace .Len ()!=2{return nil ,_dc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_edbg =_bc .TraceToDirectObject (_eace .Get (0));_eada ,_egagc :=_edbg .(*_bc .PdfObjectName );if !_egagc {return nil ,_dc .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_eada !="\u004c\u0061\u0062"{return nil ,_dc .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_edbg =_bc .TraceToDirectObject (_eace .Get (1));_cbcc ,_egagc :=_edbg .(*_bc .PdfObjectDictionary );
if !_egagc {return nil ,_dc .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_edbg =_cbcc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_edbg =_bc .TraceToDirectObject (_edbg );_bdccd ,_egagc :=_edbg .(*_bc .PdfObjectArray );if !_egagc {return nil ,_dc .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _bdccd .Len ()!=3{return nil ,_dc .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_cffa ,_dfac :=_bdccd .GetAsFloat64Slice ();
if _dfac !=nil {return nil ,_dfac ;};_ebgdc .WhitePoint =_cffa ;_edbg =_cbcc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _edbg !=nil {_edbg =_bc .TraceToDirectObject (_edbg );_gbed ,_agde :=_edbg .(*_bc .PdfObjectArray );if !_agde {return nil ,_dc .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");
};if _gbed .Len ()!=3{return nil ,_dc .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fdea ,_eafa :=_gbed .GetAsFloat64Slice ();
if _eafa !=nil {return nil ,_eafa ;};_ebgdc .BlackPoint =_fdea ;};_edbg =_cbcc .Get ("\u0052\u0061\u006eg\u0065");if _edbg !=nil {_edbg =_bc .TraceToDirectObject (_edbg );_fdfd ,_edbaa :=_edbg .(*_bc .PdfObjectArray );if !_edbaa {_dae .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
return nil ,_dc .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdfd .Len ()!=4{_dae .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_dc .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_adff ,_acabb :=_fdfd .GetAsFloat64Slice ();if _acabb !=nil {return nil ,_acabb ;};_ebgdc .Range =_adff ;};return _ebgdc ,nil ;};func _efec (_accf _bc .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gffa :=&PdfColorspaceDeviceNAttributes {};var _bedef *_bc .PdfObjectDictionary ;
switch _abcg :=_accf .(type ){case *_bc .PdfIndirectObject :_gffa ._gbde =_abcg ;var _dcbe bool ;_bedef ,_dcbe =_abcg .PdfObject .(*_bc .PdfObjectDictionary );if !_dcbe {_dae .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ecg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bc .PdfObjectDictionary :_bedef =_abcg ;case *_bc .PdfObjectReference :_bdfeb :=_abcg .Resolve ();return _efec (_bdfeb );default:_dae .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ecg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eeae :=_bedef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_eeae !=nil {_gcedf ,_cacef :=_bc .TraceToDirectObject (_eeae ).(*_bc .PdfObjectName );if !_cacef {_dae .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ecg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gffa .Subtype =_gcedf ;};if _ceefa :=_bedef .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_ceefa !=nil {_gffa .Colorants =_ceefa ;};if _efbb :=_bedef .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_efbb !=nil {_gffa .Process =_efbb ;};if _gfffc :=_bedef .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gfffc !=nil {_gffa .MixingHints =_gfffc ;};return _gffa ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_febfe *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ecg .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_abgd ,_bbbbf :=_ecc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ggfad ,img ._ggeec );if _bbbbf !=nil {return img ,_bbbbf ;};_dfgb ,_bbbbf :=_ecc .NRGBAConverter .Convert (_abgd );
if _bbbbf !=nil {return img ,_bbbbf ;};_adfad :=_egbafc (_dfgb .Base ());_dae .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_dae .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_dae .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_adfad .Data );_dae .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_adfad );return _adfad ,nil ;};func (_bggb *PdfReader )newPdfActionHideFromDict (_ffc *_bc .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_ffc .Get ("\u0054"),H :_ffc .Get ("\u0048")},nil ;
};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dfdce *PdfPageResources )HasFontByName (keyName _bc .PdfObjectName )bool {_ ,_cbabf :=_dfdce .GetFontByName (keyName );return _cbabf ;};

// GetBorderWidth returns the border style's width.
func (_ffdcg *PdfBorderStyle )GetBorderWidth ()float64 {if _ffdcg .W ==nil {return 1;};return *_ffdcg .W ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_abdc *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _abdc .UnderlyingCS .GetNumComponents ();};func (_gaecb *PdfSignature )extractChainFromCert ()([]*_e .Certificate ,error ){var _bgaa *_bc .PdfObjectArray ;switch _bffcd :=_gaecb .Cert .(type ){case *_bc .PdfObjectString :_bgaa =_bc .MakeArray (_bffcd );
case *_bc .PdfObjectArray :_bgaa =_bffcd ;default:return nil ,_dc .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bffcd );
};var _gdbfg _bg .Buffer ;for _ ,_egbc :=range _bgaa .Elements (){_eaeeg ,_gadgf :=_bc .GetString (_egbc );if !_gadgf {return nil ,_dc .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_egbc );
};if _ ,_affcdg :=_gdbfg .Write (_eaeeg .Bytes ());_affcdg !=nil {return nil ,_affcdg ;};};return _e .ParseCertificates (_gdbfg .Bytes ());};func (_gbbfg *PdfReader )loadDSS ()(*DSS ,error ){if _gbbfg ._afedg .GetCrypter ()!=nil &&!_gbbfg ._afedg .IsAuthenticated (){return nil ,_dc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_eafge :=_gbbfg ._bdbea .Get ("\u0044\u0053\u0053");if _eafge ==nil {return nil ,nil ;};_fbac ,_ :=_bc .GetIndirect (_eafge );_eafge =_bc .TraceToDirectObject (_eafge );switch _dgcdb :=_eafge .(type ){case *_bc .PdfObjectNull :return nil ,nil ;case *_bc .PdfObjectDictionary :return _bcbc (_fbac ,_dgcdb );
};return nil ,_dc .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_eafge );};

// GetContentStream returns the pattern cell's content stream
func (_dgbfc *PdfTilingPattern )GetContentStream ()([]byte ,error ){_eagfe ,_ ,_ccag :=_dgbfc .GetContentStreamWithEncoder ();return _eagfe ,_ccag ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_dgdcf *PdfField )SetContext (ctx PdfModel ){_dgdcf ._cabed =ctx };

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_ecf *PdfAction )ToPdfObject ()_bc .PdfObject {_ced :=_ecf ._afdg ;_ea :=_ced .PdfObject .(*_bc .PdfObjectDictionary );_ea .Clear ();_ea .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ea .SetIfNotNil ("\u0053",_ecf .S );
_ea .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ecf .Next );return _ced ;};func (_dede *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fag :=NewPdfAction ();_ecb :=&PdfActionNamed {};_ecb .PdfAction =_fag ;_fag .SetContext (_ecb );return _ecb ;};

// C returns the value of the cyan component of the color.
func (_aagd *PdfColorDeviceCMYK )C ()float64 {return _aagd [0]};

// CustomKeys returns all custom info keys as list.
func (_bdafb *PdfInfo )CustomKeys ()[]string {if _bdafb ._cbeg ==nil {return nil ;};_ddcda :=make ([]string ,len (_bdafb ._cbeg .Keys ()));for _ ,_aede :=range _bdafb ._cbeg .Keys (){_ddcda =append (_ddcda ,_aede .String ());};return _ddcda ;};type pdfCIDFontType0 struct{fontCommon ;
_fbde *_bc .PdfIndirectObject ;_bbgcg _cabg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bc .PdfObject ;W _bc .PdfObject ;DW2 _bc .PdfObject ;W2 _bc .PdfObject ;_gegbb map[_cabg .CharCode ]float64 ;_bbggc float64 ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_daaee *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _daaee ._gcag ==nil {_daaee ._gcag =_afa .NewPSExecutor (_daaee .Program );};var _feeaa []_afa .PSObject ;for _ ,_fece :=range xVec {_feeaa =append (_feeaa ,_afa .MakeReal (_fece ));
};_bebfd ,_fdde :=_daaee ._gcag .Execute (_feeaa );if _fdde !=nil {return nil ,_fdde ;};_aeggf ,_fdde :=_afa .PSObjectArrayToFloat64Array (_bebfd );if _fdde !=nil {return nil ,_fdde ;};return _aeggf ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ffa :=NewPdfAction ();_cag :=&PdfActionGoToE {};_cag .PdfAction =_ffa ;_ffa .SetContext (_cag );return _cag ;};func (_ffb *PdfReader )newPdfActionGotoFromDict (_ecfb *_bc .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ecfb .Get ("\u0044")},nil ;
};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bc .PdfObject ;V _bc .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ffbg *PdfColorspaceDeviceCMYK )ToPdfObject ()_bc .PdfObject {return _bc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ToPdfObject implements interface PdfModel.
func (_bgee *PdfAnnotationSound )ToPdfObject ()_bc .PdfObject {_bgee .PdfAnnotation .ToPdfObject ();_fdff :=_bgee ._gdfa ;_cca :=_fdff .PdfObject .(*_bc .PdfObjectDictionary );_bgee .PdfAnnotationMarkup .appendToPdfDictionary (_cca );_cca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0053\u006f\u0075n\u0064"));
_cca .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bgee .Sound );_cca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bgee .Name );return _fdff ;};

// GetFillImage get attached model.Image in push button.
func (_bgec *PdfFieldButton )GetFillImage ()*Image {if _bgec .IsPush (){return _bgec ._fdcd ;};return nil ;};func (_dgcg *PdfReader )newPdfAnnotationMarkupFromDict (_dagf *_bc .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_adbc :=&PdfAnnotationMarkup {};
if _gegb :=_dagf .Get ("\u0054");_gegb !=nil {_adbc .T =_gegb ;};if _bfag :=_dagf .Get ("\u0050\u006f\u0070u\u0070");_bfag !=nil {_cada ,_ddca :=_bfag .(*_bc .PdfIndirectObject );if !_ddca {if _ ,_ddd :=_bfag .(*_bc .PdfObjectNull );!_ddd {return nil ,_ecg .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_ggcf ,_deaf :=_dgcg .newPdfAnnotationFromIndirectObject (_cada );if _deaf !=nil {return nil ,_deaf ;};if _ggcf !=nil {_feg ,_deag :=_ggcf ._ccb .(*PdfAnnotationPopup );if !_deag {return nil ,_ecg .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_adbc .Popup =_feg ;};};};if _fcda :=_dagf .Get ("\u0043\u0041");_fcda !=nil {_adbc .CA =_fcda ;};if _geag :=_dagf .Get ("\u0052\u0043");_geag !=nil {_adbc .RC =_geag ;};if _dgb :=_dagf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_dgb !=nil {_adbc .CreationDate =_dgb ;};if _dgcd :=_dagf .Get ("\u0049\u0052\u0054");_dgcd !=nil {_adbc .IRT =_dgcd ;};if _efa :=_dagf .Get ("\u0053\u0075\u0062\u006a");_efa !=nil {_adbc .Subj =_efa ;};if _ead :=_dagf .Get ("\u0052\u0054");_ead !=nil {_adbc .RT =_ead ;
};if _dcce :=_dagf .Get ("\u0049\u0054");_dcce !=nil {_adbc .IT =_dcce ;};if _fffag :=_dagf .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_fffag !=nil {_adbc .ExData =_fffag ;};return _adbc ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bc .PdfObject ;PreserveRB _bc .PdfObject ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_cggbge int ,_fcdcf *PdfPage )error ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_eegc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fbgf :=_cbb .NewReader (img .getBase ());_caccf :=_ecc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._ggfad ,img ._ggeec );
_cgda :=_cbb .NewWriter (_caccf );_fafb :=_da .Pow (2,float64 (img .BitsPerComponent ))-1;_fdbc :=_eegc .GetNumComponents ();_afag :=make ([]uint32 ,_fdbc );_bbbca :=make ([]float64 ,_fdbc );for {_bae :=_fbgf .ReadSamples (_afag );if _bae ==_gbe .EOF {break ;
}else if _bae !=nil {return img ,_bae ;};for _facfe :=0;_facfe < _fdbc ;_facfe ++{_fbce :=float64 (_afag [_facfe ])/_fafb ;_bbbca [_facfe ]=_fbce ;};_baee ,_bae :=_eegc .TintTransform .Evaluate (_bbbca );if _bae !=nil {return img ,_bae ;};for _ ,_ggb :=range _baee {_ggb =_da .Min (_da .Max (0,_ggb ),1.0);
if _bae =_cgda .WriteSample (uint32 (_ggb *_fafb ));_bae !=nil {return img ,_bae ;};};};return _eegc .AlternateSpace .ImageToRGB (_egbafc (&_caccf ));};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bc .PdfObject ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gebg :=&PdfColorspaceCalRGB {};_gebg .BlackPoint =[]float64 {0.0,0.0,0.0};_gebg .Gamma =[]float64 {1.0,1.0,1.0};_gebg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gebg ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_aegcb :=&PdfColorspaceLab {};_aegcb .BlackPoint =[]float64 {0.0,0.0,0.0};_aegcb .Range =[]float64 {-100,100,-100,100};return _aegcb ;};func (_cfgdb *PdfAcroForm )filteredFields (_fcaa FieldFilterFunc ,_abcda bool )[]*PdfField {if _cfgdb ==nil {return nil ;
};return _ffdag (_cfgdb .Fields ,_fcaa ,_abcda );};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_dgga *PdfColorspaceLab )DecodeArray ()[]float64 {_acfe :=[]float64 {0,100};if _dgga .Range !=nil &&len (_dgga .Range )==4{_acfe =append (_acfe ,_dgga .Range ...);}else {_acfe =append (_acfe ,-100,100,-100,100);};return _acfe ;};

// ToPdfObject implements model.PdfModel interface.
func (_dfcda *PdfOutputIntent )ToPdfObject ()_bc .PdfObject {if _dfcda ._afdf ==nil {_dfcda ._afdf =_bc .MakeDict ();};_agdea :=_dfcda ._afdf ;if _dfcda .Type !=""{_agdea .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName (_dfcda .Type ));};_agdea .Set ("\u0053",_bc .MakeName (_dfcda .S .String ()));
if _dfcda .OutputCondition !=""{_agdea .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bc .MakeString (_dfcda .OutputCondition ));};_agdea .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bc .MakeString (_dfcda .OutputConditionIdentifier ));
_agdea .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bc .MakeString (_dfcda .RegistryName ));if _dfcda .Info !=""{_agdea .Set ("\u0049\u006e\u0066\u006f",_bc .MakeString (_dfcda .Info ));};if len (_dfcda .DestOutputProfile )!=0{_aceda ,_dgca :=_bc .MakeStream (_dfcda .DestOutputProfile ,_bc .NewFlateEncoder ());
if _dgca !=nil {_dae .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dgca );
};_aceda .PdfObjectDictionary .Set ("\u004e",_bc .MakeInteger (int64 (_dfcda .ColorComponents )));_fagbb :=make ([]float64 ,_dfcda .ColorComponents *2);for _cbeca :=0;_cbeca < _dfcda .ColorComponents *2;_cbeca ++{_adegf :=0.0;if _cbeca %2!=0{_adegf =1.0;
};_fagbb [_cbeca ]=_adegf ;};_aceda .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bc .MakeArrayFromFloats (_fagbb ));_agdea .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_aceda );};return _agdea ;
};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_efegb *Image )GetParamsDict ()*_bc .PdfObjectDictionary {_cgfcf :=_bc .MakeDict ();_cgfcf .Set ("\u0057\u0069\u0064t\u0068",_bc .MakeInteger (_efegb .Width ));_cgfcf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bc .MakeInteger (_efegb .Height ));
_cgfcf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bc .MakeInteger (int64 (_efegb .ColorComponents )));_cgfcf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bc .MakeInteger (_efegb .BitsPerComponent ));
return _cgfcf ;};func (_gbbebb *PdfWriter )setCatalogVersion (){_gbbebb ._bdbgc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bc .MakeName (_dc .Sprintf ("\u0025\u0064\u002e%\u0064",_gbbebb ._efeae .Major ,_gbbebb ._efeae .Minor )));};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_cfcad *PdfPageResources )GetExtGState (keyName _bc .PdfObjectName )(_bc .PdfObject ,bool ){if _cfcad .ExtGState ==nil {return nil ,false ;};_beebg ,_cfge :=_bc .TraceToDirectObject (_cfcad .ExtGState ).(*_bc .PdfObjectDictionary );if !_cfge {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfcad .ExtGState );
return nil ,false ;};if _debg :=_beebg .Get (keyName );_debg !=nil {return _debg ,true ;};return nil ,false ;};func (_bcfb *DSS )addCRLs (_agdbf [][]byte )([]*_bc .PdfObjectStream ,error ){return _bcfb .add (&_bcfb .CRLs ,_bcfb ._agga ,_agdbf );};func _abea ()string {_geagc :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _eebca _bg .Buffer ;for _cffc :=0;_cffc < 6;_cffc ++{_eebca .WriteRune (rune (_geagc [_cad .Intn (len (_geagc ))]));};return _eebca .String ();};func _ggaaf (_aegba *_bc .PdfObjectDictionary ){_gaceb ,_gbbcb :=_bc .GetArray (_aegba .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_abaa ,_dfeag :=_bc .GetIntVal (_aegba .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_bgac ,_aaff :=_bc .GetIntVal (_aegba .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _gbbcb &&_dfeag &&_aaff {_cccfc :=_gaceb .Len ();if _cccfc !=_bgac -_abaa +1{_dae .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_cccfc ,_bgac );
_gecbf :=_bc .PdfObjectInteger (_abaa +_cccfc -1);_aegba .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_gecbf );};};};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_acagd :=appender .Reader .DSS ;if _acagd ==nil {_acagd =NewDSS ();};if _fcbdb :=_acagd .generateHashMaps ();_fcbdb !=nil {return nil ,_fcbdb ;};return &LTV {CertClient :_eg .NewCertClient (),OCSPClient :_eg .NewOCSPClient (),CRLClient :_eg .NewCRLClient (),SkipExisting :true ,_fgff :appender ,_bbgdd :_acagd },nil ;
};func _eege (_abbb StdFontName )(pdfFontSimple ,error ){_fggg ,_bbdd :=_dg .NewStdFontByName (_abbb );if !_bbdd {return pdfFontSimple {},ErrFontNotSupported ;};_fgfc :=_egbaf (_fggg );return _fgfc ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_ggdae *_bc .PdfIndirectObject ;Certs []*_bc .PdfObjectStream ;OCSPs []*_bc .PdfObjectStream ;CRLs []*_bc .PdfObjectStream ;VRI map[string ]*VRI ;_gdbd map[string ]*_bc .PdfObjectStream ;_addg map[string ]*_bc .PdfObjectStream ;_agga map[string ]*_bc .PdfObjectStream ;
};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_bacd *PdfAnnotationStamp )ToPdfObject ()_bc .PdfObject {_bacd .PdfAnnotation .ToPdfObject ();_cfeb :=_bacd ._gdfa ;_dcbd :=_cfeb .PdfObject .(*_bc .PdfObjectDictionary );_bacd .PdfAnnotationMarkup .appendToPdfDictionary (_dcbd );_dcbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0053\u0074\u0061m\u0070"));
_dcbd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bacd .Name );return _cfeb ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_aadde *PdfReader )GetIndirectObjectByNumber (number int )(_bc .PdfObject ,error ){_gffad ,_badd :=_aadde ._afedg .LookupByNumber (number );return _gffad ,_badd ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_eaga *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eaga .Base ==nil {return nil ,_ecg .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _eaga .Base .ColorToRGB (color );};func (_dfea *PdfReader )newPdfAnnotationWatermarkFromDict (_ecad *_bc .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bebe :=PdfAnnotationWatermark {};_bebe .FixedPrint =_ecad .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_bebe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_geffg *PdfAnnotationProjection )ToPdfObject ()_bc .PdfObject {_geffg .PdfAnnotation .ToPdfObject ();_cbfg :=_geffg ._gdfa ;_bgdc :=_cbfg .PdfObject .(*_bc .PdfObjectDictionary );_geffg .PdfAnnotationMarkup .appendToPdfDictionary (_bgdc );return _cbfg ;
};func (_fcbef *PdfWriter )writeTrailer (_ddfae int ){_fcbef .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _bcadg :=0;_bcadg <=_ddfae ;{for ;_bcadg <=_ddfae ;_bcadg ++{_efggeg ,_geegb :=_fcbef ._acede [_bcadg ];if _geegb &&(!_fcbef ._dcebde ||_fcbef ._dcebde &&(_efggeg .Type ==1&&_efggeg .Offset >=_fcbef ._gacd ||_efggeg .Type ==0)){break ;
};};var _afdaff int ;for _afdaff =_bcadg +1;_afdaff <=_ddfae ;_afdaff ++{_eacee ,_efgbe :=_fcbef ._acede [_afdaff ];if _efgbe &&(!_fcbef ._dcebde ||_fcbef ._dcebde &&(_eacee .Type ==1&&_eacee .Offset > _fcbef ._gacd )){continue ;};break ;};_gcgf :=_dc .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_bcadg ,_afdaff -_bcadg );
_fcbef .writeString (_gcgf );for _facef :=_bcadg ;_facef < _afdaff ;_facef ++{_gdbb :=_fcbef ._acede [_facef ];switch _gdbb .Type {case 0:_gcgf =_dc .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_fcbef .writeString (_gcgf );
case 1:_gcgf =_dc .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gdbb .Offset ,0);_fcbef .writeString (_gcgf );};};_bcadg =_afdaff +1;};_ddeeg :=_bc .MakeDict ();_ddeeg .Set ("\u0049\u006e\u0066\u006f",_fcbef ._eefa );
_ddeeg .Set ("\u0052\u006f\u006f\u0074",_fcbef ._cbdaa );_ddeeg .Set ("\u0053\u0069\u007a\u0065",_bc .MakeInteger (int64 (_ddfae +1)));if _fcbef ._dcebde &&_fcbef ._ebfc > 0{_ddeeg .Set ("\u0050\u0072\u0065\u0076",_bc .MakeInteger (_fcbef ._ebfc ));};if _fcbef ._gadad !=nil {_ddeeg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fcbef ._ffdgd );
};if _fcbef ._cgaaa ==nil &&_fcbef ._fafc !=""&&_fcbef ._fdbdd !=""{_fcbef ._cgaaa =_bc .MakeArray (_bc .MakeHexString (_fcbef ._fafc ),_bc .MakeHexString (_fcbef ._fdbdd ));};if _fcbef ._cgaaa !=nil {_ddeeg .Set ("\u0049\u0044",_fcbef ._cgaaa );_dae .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fcbef ._cgaaa );
};_fcbef .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_fcbef .writeString (_ddeeg .WriteString ());_fcbef .writeString ("\u000a");};type pdfSignDictionary struct{*_bc .PdfObjectDictionary ;_fbbdg *SignatureHandler ;_cgeac *PdfSignature ;
_dbfb int64 ;_bdbfe int ;_efga int ;_dfeef int ;_fgceag int ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_aedd *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbgb ,_babg :=_bc .GetNumbersAsFloat (objects );
if _babg !=nil {return nil ,_babg ;};return _aedd .ColorFromFloats (_bbgb );};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_bbad *Image )ConvertToBinary ()error {if _bbad .ColorComponents ==1&&_bbad .BitsPerComponent ==1{return nil ;};_fged ,_dgaeb :=_bbad .ToGoImage ();if _dgaeb !=nil {return _dgaeb ;};_fdec ,_dgaeb :=_ecc .MonochromeConverter .Convert (_fged );if _dgaeb !=nil {return _dgaeb ;
};_bbad .Data =_fdec .Base ().Data ;_bbad ._ggfad ,_dgaeb =_ecc .ScaleAlphaToMonochrome (_bbad ._ggfad ,int (_bbad .Width ),int (_bbad .Height ));if _dgaeb !=nil {return _dgaeb ;};_bbad .BitsPerComponent =1;_bbad .ColorComponents =1;_bbad ._ggeec =nil ;
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_agf *PdfActionSetOCGState )ToPdfObject ()_bc .PdfObject {_agf .PdfAction .ToPdfObject ();_daf :=_agf ._afdg ;_gda :=_daf .PdfObject .(*_bc .PdfObjectDictionary );_gda .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeSetOCGState )));_gda .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_agf .State );
_gda .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_agf .PreserveRB );return _daf ;};

// Register registers (caches) a model to primitive object relationship.
func (_aaeg *modelManager )Register (primitive _bc .PdfObject ,model PdfModel ){_aaeg ._aeddfe [model ]=primitive ;_aaeg ._ffcaa [primitive ]=model ;};func (_adab *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func (_ffeec *PdfWriter )writeObjects (){_dae .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_ffeec ._bcbab ));
_ffeec ._acede =make (map[int ]crossReference );_ffeec ._acede [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _ffeec ._cdgcc .ObjectMap !=nil {for _cgfcfc ,_degc :=range _ffeec ._cdgcc .ObjectMap {if _cgfcfc ==0{continue ;};if _degc .XType ==_bc .XrefTypeObjectStream {_ggfe :=crossReference {Type :2,ObjectNumber :_degc .OsObjNumber ,Index :_degc .OsObjIndex };
_ffeec ._acede [_cgfcfc ]=_ggfe ;};if _degc .XType ==_bc .XrefTypeTableEntry {_bggf :=crossReference {Type :1,ObjectNumber :_degc .ObjectNumber ,Offset :_degc .Offset };_ffeec ._acede [_cgfcfc ]=_bggf ;};};};};

// String returns a string describing the font descriptor.
func (_egbb *PdfFontDescriptor )String ()string {var _ggdd []string ;if _egbb .FontName !=nil {_ggdd =append (_ggdd ,_egbb .FontName .String ());};if _egbb .FontFamily !=nil {_ggdd =append (_ggdd ,_egbb .FontFamily .String ());};if _egbb .fontFile !=nil {_ggdd =append (_ggdd ,_egbb .fontFile .String ());
};if _egbb ._edfe !=nil {_ggdd =append (_ggdd ,_egbb ._edfe .String ());};_ggdd =append (_ggdd ,_dc .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_egbb .FontFile3 !=nil ));return _dc .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_dee .Join (_ggdd ,"\u002c\u0020"));
};func _efae (_ffae *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_ffae }};

// ToPdfObject converts the font to a PDF representation.
func (_ggcfa *pdfFontType3 )ToPdfObject ()_bc .PdfObject {if _ggcfa ._gdac ==nil {_ggcfa ._gdac =&_bc .PdfIndirectObject {};};_eebd :=_ggcfa .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ggcfa ._gdac .PdfObject =_eebd ;if _ggcfa .FirstChar !=nil {_eebd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ggcfa .FirstChar );
};if _ggcfa .LastChar !=nil {_eebd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ggcfa .LastChar );};if _ggcfa .Widths !=nil {_eebd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ggcfa .Widths );};if _ggcfa .Encoding !=nil {_eebd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ggcfa .Encoding );
}else if _ggcfa ._bagg !=nil {_dbbf :=_ggcfa ._bagg .ToPdfObject ();if _dbbf !=nil {_eebd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbbf );};};if _ggcfa .FontBBox !=nil {_eebd .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ggcfa .FontBBox );
};if _ggcfa .FontMatrix !=nil {_eebd .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ggcfa .FontMatrix );};if _ggcfa .CharProcs !=nil {_eebd .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ggcfa .CharProcs );};if _ggcfa .Resources !=nil {_eebd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ggcfa .Resources );
};return _ggcfa ._gdac ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ffeg *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adfb :=vals [0];if _adfb < 0.0||_adfb > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_adfb );
return nil ,ErrColorOutOfRange ;};_bafd :=NewPdfColorCalGray (_adfb );return _bafd ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ebde *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ffcfg int64 ;_cacfa int64 ;_ffafa int64 ;_bgad int64 ;_efaef int64 ;_dcdec int64 ;_efbce byte ;_bbac int64 ;_fcfbe int64 ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bc .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_febd *_bc .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_ebcaf *PdfColorDeviceGray )ToInteger (bits int )uint32 {_dace :=_da .Pow (2,float64 (bits ))-1;return uint32 (_dace *_ebcaf .Val ());};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cef :=NewPdfAction ();_daag :=&PdfActionSetOCGState {};_daag .PdfAction =_cef ;_cef .SetContext (_daag );return _daag ;};func (_bcf *PdfReader )newPdfActionJavaScriptFromDict (_cbfb *_bc .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cbfb .Get ("\u004a\u0053")},nil ;
};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_bfb :=NewPdfAnnotation ();_bbab :=&PdfAnnotationStrikeOut {};_bbab .PdfAnnotation =_bfb ;_bbab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfb .SetContext (_bbab );return _bbab ;};func (_cbbfc *LTV )generateVRIKey (_faggg *PdfSignature )(string ,error ){_fgbb ,_eccg :=_dcdea (_faggg .Contents .Bytes ());
if _eccg !=nil {return "",_eccg ;};return _dee .ToUpper (_f .EncodeToString (_fgbb )),nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bc .PdfObjectName ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_ddgc *PdfColorspaceICCBased )GetContainingPdfObject ()_bc .PdfObject {return _ddgc ._abde };

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// SetLocation sets the `Location` field of the signature.
func (_ffccd *PdfSignature )SetLocation (location string ){_ffccd .Location =_bc .MakeString (location )};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fcddf pdfFontType0 )GetCharMetrics (code _cabg .CharCode )(_dg .CharMetrics ,bool ){if _fcddf .DescendantFont ==nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fcddf );
return _dg .CharMetrics {},false ;};return _fcddf .DescendantFont .GetCharMetrics (code );};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gedd ,_efad :=_cg .Open (filePath );if _efad !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_efad );
return nil ,_efad ;};defer _gedd .Close ();return NewPdfFontFromTTF (_gedd );};

// GetAction returns the PDF action for the annotation link.
func (_ebab *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _ebab ._bfce !=nil {return _ebab ._bfce ,nil ;};if _ebab .A ==nil {return nil ,nil ;};if _ebab ._dfd ==nil {return nil ,nil ;};_cge ,_eeaa :=_ebab ._dfd .loadAction (_ebab .A );if _eeaa !=nil {return nil ,_eeaa ;
};_ebab ._bfce =_cge ;return _ebab ._bfce ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fgea :=&PdfFieldSignature {};_fgea .PdfField =NewPdfField ();_fgea .PdfField .SetContext (_fgea );_fgea .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fgea .PdfAnnotationWidget .SetContext (_fgea );
_fgea .PdfAnnotationWidget ._gdfa =_fgea .PdfField ._fegd ;_fgea .T =_bc .MakeString ("");_fgea .F =_bc .MakeInteger (132);_fgea .V =signature ;return _fgea ;};

// ToPdfObject implements interface PdfModel.
func (_cccf *PdfAnnotationScreen )ToPdfObject ()_bc .PdfObject {_cccf .PdfAnnotation .ToPdfObject ();_gcaee :=_cccf ._gdfa ;_gddd :=_gcaee .PdfObject .(*_bc .PdfObjectDictionary );_gddd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_gddd .SetIfNotNil ("\u0054",_cccf .T );_gddd .SetIfNotNil ("\u004d\u004b",_cccf .MK );_gddd .SetIfNotNil ("\u0041",_cccf .A );_gddd .SetIfNotNil ("\u0041\u0041",_cccf .AA );return _gcaee ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bc .PdfObjectDictionary )(*PdfPageResources ,error ){_cddae :=NewPdfPageResources ();if _cgce :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cgce !=nil {_cddae .ExtGState =_cgce ;};if _deegbd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_deegbd !=nil &&!_bc .IsNullObject (_deegbd ){_cddae .ColorSpace =_deegbd ;};if _ecebg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_ecebg !=nil {_cddae .Pattern =_ecebg ;};if _dfaef :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_dfaef !=nil {_cddae .Shading =_dfaef ;
};if _eeddf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_eeddf !=nil {_cddae .XObject =_eeddf ;};if _gdbcb :=_bc .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_gdbcb !=nil {_cddae .Font =_gdbcb ;};if _egabe :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_egabe !=nil {_cddae .ProcSet =_egabe ;};if _bagcg :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bagcg !=nil {_cddae .Properties =_bagcg ;};return _cddae ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_gggad *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _gggad ._dbgcg ==nil {_gggad .GetAnnotations ();};_gggad ._dbgcg =append (_gggad ._dbgcg ,annot );};func (_aegbd *PdfPattern )getDict ()*_bc .PdfObjectDictionary {if _agdae ,_agcf :=_aegbd ._dacf .(*_bc .PdfIndirectObject );
_agcf {_efdac ,_cgaf :=_agdae .PdfObject .(*_bc .PdfObjectDictionary );if !_cgaf {return nil ;};return _efdac ;}else if _cdedc ,_eaaad :=_aegbd ._dacf .(*_bc .PdfObjectStream );_eaaad {return _cdedc .PdfObjectDictionary ;}else {_dae .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_aegbd ._dacf );
return nil ;};};func (_deec *PdfShading )getShadingDict ()(*_bc .PdfObjectDictionary ,error ){_gbgbg :=_deec ._agbee ;if _adbde ,_cgbf :=_gbgbg .(*_bc .PdfIndirectObject );_cgbf {_acgcc ,_acfaa :=_adbde .PdfObject .(*_bc .PdfObjectDictionary );if !_acfaa {return nil ,_bc .ErrTypeError ;
};return _acgcc ,nil ;}else if _bdbag ,_afgbf :=_gbgbg .(*_bc .PdfObjectStream );_afgbf {return _bdbag .PdfObjectDictionary ,nil ;}else if _gcbg ,_egbga :=_gbgbg .(*_bc .PdfObjectDictionary );_egbga {return _gcbg ,nil ;}else {_dae .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_bc .ErrTypeError ;};};

// IsCID returns true if the underlying font is CID.
func (_eceb *PdfFont )IsCID ()bool {return _eceb .baseFields ().isCIDFont ()};func (_cfaee *PdfWriter )writeString (_beeba string ){if _cfaee ._bdda !=nil {return ;};_bbdad ,_fcdge :=_cfaee ._adccb .WriteString (_beeba );_cfaee ._ddaaa +=int64 (_bbdad );
_cfaee ._bdda =_fcdge ;};

// HasFontByName checks if has font resource by name.
func (_dfgae *PdfPage )HasFontByName (name _bc .PdfObjectName )bool {_fcad ,_ddgb :=_dfgae .Resources .Font .(*_bc .PdfObjectDictionary );if !_ddgb {return false ;};if _ecbbe :=_fcad .Get (name );_ecbbe !=nil {return true ;};return false ;};func (_cfa *PdfReader )loadAction (_edg _bc .PdfObject )(*PdfAction ,error ){if _edbad ,_adbb :=_bc .GetIndirect (_edg );
_adbb {_bfe ,_ffe :=_cfa .newPdfActionFromIndirectObject (_edbad );if _ffe !=nil {return nil ,_ffe ;};return _bfe ,nil ;}else if !_bc .IsNullObject (_edg ){return nil ,_ecg .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_bfbd *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_fced *PdfReader )newPdfAnnotationStampFromDict (_add *_bc .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_dgcb :=PdfAnnotationStamp {};
_fcbf ,_fabb :=_fced .newPdfAnnotationMarkupFromDict (_add );if _fabb !=nil {return nil ,_fabb ;};_dgcb .PdfAnnotationMarkup =_fcbf ;_dgcb .Name =_add .Get ("\u004e\u0061\u006d\u0065");return &_dgcb ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bcffaf *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bcffaf .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bcffaf ._eade =acroForm ;};func (_fdc *PdfReader )newPdfActionImportDataFromDict (_gff *_bc .PdfObjectDictionary )(*PdfActionImportData ,error ){_bfc ,_aec :=_beg (_gff .Get ("\u0046"));
if _aec !=nil {return nil ,_aec ;};return &PdfActionImportData {F :_bfc },nil ;};

// ToPdfObject implements interface PdfModel.
func (_daea *PdfActionLaunch )ToPdfObject ()_bc .PdfObject {_daea .PdfAction .ToPdfObject ();_db :=_daea ._afdg ;_gdg :=_db .PdfObject .(*_bc .PdfObjectDictionary );_gdg .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeLaunch )));if _daea .F !=nil {_gdg .Set ("\u0046",_daea .F .ToPdfObject ());
};_gdg .SetIfNotNil ("\u0057\u0069\u006e",_daea .Win );_gdg .SetIfNotNil ("\u004d\u0061\u0063",_daea .Mac );_gdg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_daea .Unix );_gdg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_daea .NewWindow );
return _db ;};

// GetNumPages returns the number of pages in the document.
func (_bceaf *PdfReader )GetNumPages ()(int ,error ){if _bceaf ._afedg .GetCrypter ()!=nil &&!_bceaf ._afedg .IsAuthenticated (){return 0,_dc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_bceaf ._ggfd ),nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dffe *PdfField )ToPdfObject ()_bc .PdfObject {_dgbec :=_dffe ._fegd ;_eddg :=_dgbec .PdfObject .(*_bc .PdfObjectDictionary );_edbgf :=_bc .MakeArray ();for _ ,_cafc :=range _dffe .Kids {_edbgf .Append (_cafc .ToPdfObject ());};for _ ,_cdba :=range _dffe .Annotations {if _cdba ._gdfa !=_dffe ._fegd {_edbgf .Append (_cdba .GetContext ().ToPdfObject ());
};};if _dffe .Parent !=nil {_eddg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dffe .Parent .GetContainingPdfObject ());};if _edbgf .Len ()> 0{_eddg .Set ("\u004b\u0069\u0064\u0073",_edbgf );};_eddg .SetIfNotNil ("\u0046\u0054",_dffe .FT );_eddg .SetIfNotNil ("\u0054",_dffe .T );
_eddg .SetIfNotNil ("\u0054\u0055",_dffe .TU );_eddg .SetIfNotNil ("\u0054\u004d",_dffe .TM );_eddg .SetIfNotNil ("\u0046\u0066",_dffe .Ff );_eddg .SetIfNotNil ("\u0056",_dffe .V );_eddg .SetIfNotNil ("\u0044\u0056",_dffe .DV );_eddg .SetIfNotNil ("\u0041\u0041",_dffe .AA );
if _dffe .VariableText !=nil {_eddg .SetIfNotNil ("\u0044\u0041",_dffe .VariableText .DA );_eddg .SetIfNotNil ("\u0051",_dffe .VariableText .Q );_eddg .SetIfNotNil ("\u0044\u0053",_dffe .VariableText .DS );_eddg .SetIfNotNil ("\u0052\u0056",_dffe .VariableText .RV );
};return _dgbec ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bc .PdfObjectBool ;SigFlags *_bc .PdfObjectInteger ;CO *_bc .PdfObjectArray ;DR *PdfPageResources ;DA *_bc .PdfObjectString ;Q *_bc .PdfObjectInteger ;XFA _bc .PdfObject ;_eded *_bc .PdfIndirectObject ;
};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_acggd *PdfPageResources )HasXObjectByName (keyName _bc .PdfObjectName )bool {_ggeeee ,_ :=_acggd .GetXObjectByName (keyName );return _ggeeee !=nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_bafc *PdfFont )CharcodesToUnicode (charcodes []_cabg .CharCode )[]rune {_gedga ,_ ,_ :=_bafc .CharcodesToUnicodeWithStats (charcodes );return _gedga ;};func _fdaa (_cefde *_bc .PdfObjectStream )(*PdfFunctionType4 ,error ){_abaee :=&PdfFunctionType4 {};
_abaee ._dedgb =_cefde ;_gfeb :=_cefde .PdfObjectDictionary ;_agffge ,_abfa :=_bc .TraceToDirectObject (_gfeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bc .PdfObjectArray );if !_abfa {_dae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _agffge .Len ()%2!=0{_dae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ecg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ecgf ,_edbdf :=_agffge .ToFloat64Array ();if _edbdf !=nil {return nil ,_edbdf ;};_abaee .Domain =_ecgf ;_agffge ,_abfa =_bc .TraceToDirectObject (_gfeb .Get ("\u0052\u0061\u006eg\u0065")).(*_bc .PdfObjectArray );
if _abfa {if _agffge .Len ()< 0||_agffge .Len ()%2!=0{return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bfedc ,_ccca :=_agffge .ToFloat64Array ();if _ccca !=nil {return nil ,_ccca ;};_abaee .Range =_bfedc ;
};_begc ,_edbdf :=_bc .DecodeStream (_cefde );if _edbdf !=nil {return nil ,_edbdf ;};_abaee ._gebf =_begc ;_dffea :=_afa .NewPSParser (_begc );_fgeb ,_edbdf :=_dffea .Parse ();if _edbdf !=nil {return nil ,_edbdf ;};_abaee .Program =_fgeb ;return _abaee ,nil ;
};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fe .Permissions ;Algorithm EncryptionAlgorithm ;};

// ToPdfObject returns the PDF representation of the function.
func (_dbfcb *PdfFunctionType0 )ToPdfObject ()_bc .PdfObject {if _dbfcb ._bfcee ==nil {_dbfcb ._bfcee =&_bc .PdfObjectStream {};};_aeebg :=_bc .MakeDict ();_aeebg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bc .MakeInteger (0));
_dgbge :=&_bc .PdfObjectArray {};for _ ,_dfaf :=range _dbfcb .Domain {_dgbge .Append (_bc .MakeFloat (_dfaf ));};_aeebg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgbge );_dfae :=&_bc .PdfObjectArray {};for _ ,_aegbc :=range _dbfcb .Range {_dfae .Append (_bc .MakeFloat (_aegbc ));
};_aeebg .Set ("\u0052\u0061\u006eg\u0065",_dfae );_afdae :=&_bc .PdfObjectArray {};for _ ,_cefa :=range _dbfcb .Size {_afdae .Append (_bc .MakeInteger (int64 (_cefa )));};_aeebg .Set ("\u0053\u0069\u007a\u0065",_afdae );_aeebg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bc .MakeInteger (int64 (_dbfcb .BitsPerSample )));
if _dbfcb .Order !=1{_aeebg .Set ("\u004f\u0072\u0064e\u0072",_bc .MakeInteger (int64 (_dbfcb .Order )));};_aeebg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bc .MakeInteger (int64 (len (_dbfcb ._acfeb ))));_dbfcb ._bfcee .Stream =_dbfcb ._acfeb ;_dbfcb ._bfcee .PdfObjectDictionary =_aeebg ;
return _dbfcb ._bfcee ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_egab *PdfAcroForm )ToPdfObject ()_bc .PdfObject {_ccafa :=_egab ._eded ;_adgbb :=_ccafa .PdfObject .(*_bc .PdfObjectDictionary );if _egab .Fields !=nil {_efee :=_bc .PdfObjectArray {};for _ ,_aefd :=range *_egab .Fields {_dcec :=_aefd .GetContext ();
if _dcec !=nil {_efee .Append (_dcec .ToPdfObject ());}else {_efee .Append (_aefd .ToPdfObject ());};};_adgbb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_efee );};if _egab .NeedAppearances !=nil {_adgbb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_egab .NeedAppearances );
};if _egab .SigFlags !=nil {_adgbb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_egab .SigFlags );};if _egab .CO !=nil {_adgbb .Set ("\u0043\u004f",_egab .CO );};if _egab .DR !=nil {_adgbb .Set ("\u0044\u0052",_egab .DR .ToPdfObject ());};if _egab .DA !=nil {_adgbb .Set ("\u0044\u0041",_egab .DA );
};if _egab .Q !=nil {_adgbb .Set ("\u0051",_egab .Q );};if _egab .XFA !=nil {_adgbb .Set ("\u0058\u0046\u0041",_egab .XFA );};return _ccafa ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_cecc *PdfFieldSignature )ToPdfObject ()_bc .PdfObject {if _cecc .PdfAnnotationWidget !=nil {_cecc .PdfAnnotationWidget .ToPdfObject ();};_cecc .PdfField .ToPdfObject ();_debfb :=_cecc ._fegd ;_ffcb :=_debfb .PdfObject .(*_bc .PdfObjectDictionary );
_ffcb .SetIfNotNil ("\u0046\u0054",_bc .MakeName ("\u0053\u0069\u0067"));_ffcb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_cecc .Lock );_ffcb .SetIfNotNil ("\u0053\u0056",_cecc .SV );if _cecc .V !=nil {_ffcb .SetIfNotNil ("\u0056",_cecc .V .ToPdfObject ());
};return _debfb ;};

// GetVersion gets the document version.
func (_ffaff *PdfWriter )GetVersion ()_bc .Version {return _ffaff ._efeae };

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ToPdfObject implements interface PdfModel.
func (_deed *PdfActionThread )ToPdfObject ()_bc .PdfObject {_deed .PdfAction .ToPdfObject ();_ega :=_deed ._afdg ;_eb :=_ega .PdfObject .(*_bc .PdfObjectDictionary );_eb .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeThread )));if _deed .F !=nil {_eb .Set ("\u0046",_deed .F .ToPdfObject ());
};_eb .SetIfNotNil ("\u0044",_deed .D );_eb .SetIfNotNil ("\u0042",_deed .B );return _ega ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_abcc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_cdae :=NewPdfAnnotation ();_beef :=&PdfAnnotationFreeText {};_beef .PdfAnnotation =_cdae ;_beef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdae .SetContext (_beef );return _beef ;};func (_efaaa *PdfFont )baseFields ()*fontCommon {if _efaaa ._adffg ==nil {_dae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _efaaa ._adffg .baseFields ();};

// Write writes out the PDF.
func (_cdeec *PdfWriter )Write (writer _gbe .Writer )error {_dae .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ddcfc :=_cdeec .checkLicense ();if _ddcfc !=nil {return _ddcfc ;};if _ddcfc =_cdeec .writeOutlines ();_ddcfc !=nil {return _ddcfc ;};
if _ddcfc =_cdeec .writeAcroFormFields ();_ddcfc !=nil {return _ddcfc ;};_cdeec .checkPendingObjects ();if _ddcfc =_cdeec .writeOutputIntents ();_ddcfc !=nil {return _ddcfc ;};_cdeec .setCatalogVersion ();_cdeec .copyObjects ();if _ddcfc =_cdeec .optimize ();
_ddcfc !=nil {return _ddcfc ;};if _ddcfc =_cdeec .optimizeDocument ();_ddcfc !=nil {return _ddcfc ;};var _dbeaf _aa .Hash ;if _cdeec ._fdcdad {_dbeaf =_g .New ();writer =_gbe .MultiWriter (_dbeaf ,writer );};_cdeec .setWriter (writer );_effba :=_cdeec .checkCrossReferenceStream ();
_edfbe ,_effba :=_cdeec .mapObjectStreams (_effba );_cdeec .adjustXRefAffectedVersion (_effba );_cdeec .writeDocumentVersion ();_cdeec .updateObjectNumbers ();_cdeec .writeObjects ();if _ddcfc =_cdeec .writeObjectsInStreams (_edfbe );_ddcfc !=nil {return _ddcfc ;
};_cbgce :=_cdeec ._ddaaa ;var _fcbcff int ;for _fadfg :=range _cdeec ._acede {if _fadfg > _fcbcff {_fcbcff =_fadfg ;};};if _cdeec ._fdcdad {if _ddcfc =_cdeec .setHashIDs (_dbeaf );_ddcfc !=nil {return _ddcfc ;};};if _effba {if _ddcfc =_cdeec .writeXRefStreams (_fcbcff ,_cbgce );
_ddcfc !=nil {return _ddcfc ;};}else {_cdeec .writeTrailer (_fcbcff );};_cdeec .makeOffSetReference (_cbgce );if _ddcfc =_cdeec .flushWriter ();_ddcfc !=nil {return _ddcfc ;};return nil ;};func _afaaf (_gbgcc string )(string ,error ){var _cfege _bg .Buffer ;
_cfege .WriteString (_gbgcc );_acbdd :=make ([]byte ,8+16);_cdacf :=_b .Now ().UTC ().UnixNano ();_ff .BigEndian .PutUint64 (_acbdd ,uint64 (_cdacf ));_ ,_adeee :=_ca .Read (_acbdd [8:]);if _adeee !=nil {return "",_adeee ;};_cfege .WriteString (_f .EncodeToString (_acbdd ));
return _cfege .String (),nil ;};

// Items returns all children outline items.
func (_aafc *Outline )Items ()[]*OutlineItem {return _aafc .Entries };func (_bafda *PdfWriter )optimizeDocument ()error {if _bafda ._egad ==nil {return nil ;};_cgeeg ,_baegd :=_bc .GetDict (_bafda ._eefa );if !_baegd {return _ecg .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adbgd :=_fa .Document {ID :[2]string {_bafda ._fafc ,_bafda ._fdbdd },Version :_bafda ._efeae ,Objects :_bafda ._bcbab ,Info :_cgeeg ,Crypt :_bafda ._gadad ,UseHashBasedID :_bafda ._fdcdad };if _fcfbg :=_bafda ._egad .ApplyStandard (&_adbgd );_fcfbg !=nil {return _fcfbg ;
};_bafda ._fafc ,_bafda ._fdbdd =_adbgd .ID [0],_adbgd .ID [1];_bafda ._efeae =_adbgd .Version ;_bafda ._bcbab =_adbgd .Objects ;_bafda ._eefa .PdfObject =_adbgd .Info ;_bafda ._fdcdad =_adbgd .UseHashBasedID ;_bafda ._gadad =_adbgd .Crypt ;_aedgc :=make (map[_bc .PdfObject ]struct{},len (_bafda ._bcbab ));
for _ ,_fbcd :=range _bafda ._bcbab {_aedgc [_fbcd ]=struct{}{};};_bafda ._dbfde =_aedgc ;return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_dbdbd *PdfPattern )GetContainingPdfObject ()_bc .PdfObject {return _dbdbd ._dacf };

// GetSubFilter returns SubFilter value or empty string.
func (_afgg *pdfSignDictionary )GetSubFilter ()string {_efdbbg :=_afgg .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _efdbbg ==nil {return "";};if _cbaca ,_ffcc :=_bc .GetNameVal (_efdbbg );_ffcc {return _cbaca ;};return "";};

// SetFillImage attach a model.Image to push button.
func (_gcca *PdfFieldButton )SetFillImage (image *Image ){if _gcca .IsPush (){_gcca ._fdcd =image ;};};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_agffc *PdfColorCalGray )GetNumComponents ()int {return 1};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_baef *PdfFieldButton )IsCheckbox ()bool {return _baef .GetType ()==ButtonTypeCheckbox };func (_eec *PdfReader )newPdfActionResetFormFromDict (_gafg *_bc .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gafg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gafg .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func (_ggeefg *PdfWriter )adjustXRefAffectedVersion (_eafbf bool ){if _eafbf &&_ggeefg ._efeae .Major ==1&&_ggeefg ._efeae .Minor < 5{_ggeefg ._efeae .Minor =5;};};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ddbba :=&PdfColorspaceDeviceN {};return _ddbba ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_gegd *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ecg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_fcabf :=&PdfColorPattern {};_cggce ,_eaddb :=objects [len (objects )-1].(*_bc .PdfObjectName );if !_eaddb {_dae .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_fcabf .PatternName =*_cggce ;if len (objects )> 1{_bfgc :=objects [0:len (objects )-1];if _gegd .UnderlyingCS ==nil {_dae .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ecg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_bfagd ,_fgcd :=_gegd .UnderlyingCS .ColorFromPdfObjects (_bfgc );if _fgcd !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_fgcd );
return nil ,_fgcd ;};_fcabf .Color =_bfagd ;};return _fcabf ,nil ;};func (_gdbcec PdfOutputIntentType )String ()string {switch _gdbcec {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";
case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";
};};

// RemovePage removes a page by number.
func (_acbf *PdfAppender )RemovePage (pageNum int ){_aefc :=pageNum -1;_acbf ._dgab =append (_acbf ._dgab [0:_aefc ],_acbf ._dgab [pageNum :]...);};

// ToPdfObject implements interface PdfModel.
func (_gcga *PdfFilespec )ToPdfObject ()_bc .PdfObject {_agggg :=_gcga .getDict ();_agggg .Clear ();_agggg .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_agggg .SetIfNotNil ("\u0046\u0053",_gcga .FS );
_agggg .SetIfNotNil ("\u0046",_gcga .F );_agggg .SetIfNotNil ("\u0055\u0046",_gcga .UF );_agggg .SetIfNotNil ("\u0044\u004f\u0053",_gcga .DOS );_agggg .SetIfNotNil ("\u004d\u0061\u0063",_gcga .Mac );_agggg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gcga .Unix );
_agggg .SetIfNotNil ("\u0049\u0044",_gcga .ID );_agggg .SetIfNotNil ("\u0056",_gcga .V );_agggg .SetIfNotNil ("\u0045\u0046",_gcga .EF );_agggg .SetIfNotNil ("\u0052\u0046",_gcga .RF );_agggg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gcga .Desc );_agggg .SetIfNotNil ("\u0043\u0049",_gcga .CI );
return _gcga ._afeeg ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_faadd *PdfPageResources )GenerateXObjectName ()_bc .PdfObjectName {_fafbg :=1;for {_eeec :=_bc .MakeName (_dc .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_fafbg ));if !_faadd .HasXObjectByName (*_eeec ){return *_eeec ;};_fafbg ++;};};func (_agggb *PdfWriter )writeObjectsInStreams (_ggefc map[_bc .PdfObject ]bool )error {for _ ,_geae :=range _agggb ._bcbab {if _fcfdc :=_ggefc [_geae ];
_fcfdc {continue ;};_cbfdb :=int64 (0);switch _gegcgd :=_geae .(type ){case *_bc .PdfIndirectObject :_cbfdb =_gegcgd .ObjectNumber ;case *_bc .PdfObjectStream :_cbfdb =_gegcgd .ObjectNumber ;case *_bc .PdfObjectStreams :_cbfdb =_gegcgd .ObjectNumber ;default:_dae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_geae );
return ErrTypeCheck ;};if _agggb ._gadad !=nil &&_geae !=_agggb ._ffdgd {_ccee :=_agggb ._gadad .Encrypt (_geae ,_cbfdb ,0);if _ccee !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ccee );
return _ccee ;};};_agggb .writeObject (int (_cbfdb ),_geae );};return nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dcbb _bc .PdfObject ;};func (_gaff *pdfFontType0 )baseFields ()*fontCommon {return &_gaff .fontCommon };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ccfafb *_bc .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_cgd *PdfAnnotationSquiggly )ToPdfObject ()_bc .PdfObject {_cgd .PdfAnnotation .ToPdfObject ();_fbdf :=_cgd ._gdfa ;_deafa :=_fbdf .PdfObject .(*_bc .PdfObjectDictionary );_cgd .PdfAnnotationMarkup .appendToPdfDictionary (_deafa );_deafa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_deafa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgd .QuadPoints );return _fbdf ;};

// ToPdfObject returns the PDF representation of the function.
func (_dagb *PdfFunctionType2 )ToPdfObject ()_bc .PdfObject {_dgbcc :=_bc .MakeDict ();_dgbcc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bc .MakeInteger (2));_adfbe :=&_bc .PdfObjectArray {};for _ ,_cbca :=range _dagb .Domain {_adfbe .Append (_bc .MakeFloat (_cbca ));
};_dgbcc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adfbe );if _dagb .Range !=nil {_cacdb :=&_bc .PdfObjectArray {};for _ ,_dfdc :=range _dagb .Range {_cacdb .Append (_bc .MakeFloat (_dfdc ));};_dgbcc .Set ("\u0052\u0061\u006eg\u0065",_cacdb );};if _dagb .C0 !=nil {_cdbgg :=&_bc .PdfObjectArray {};
for _ ,_geeac :=range _dagb .C0 {_cdbgg .Append (_bc .MakeFloat (_geeac ));};_dgbcc .Set ("\u0043\u0030",_cdbgg );};if _dagb .C1 !=nil {_begdb :=&_bc .PdfObjectArray {};for _ ,_geaf :=range _dagb .C1 {_begdb .Append (_bc .MakeFloat (_geaf ));};_dgbcc .Set ("\u0043\u0031",_begdb );
};_dgbcc .Set ("\u004e",_bc .MakeFloat (_dagb .N ));if _dagb ._cdcf !=nil {_dagb ._cdcf .PdfObject =_dgbcc ;return _dagb ._cdcf ;};return _dgbcc ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_gbcac *PdfPage )GetRotate ()(int64 ,error ){if _gbcac .Rotate !=nil {return *_gbcac .Rotate ,nil ;};_dfbd :=_gbcac .Parent ;for _dfbd !=nil {_aedg ,_fcaad :=_bc .GetDict (_dfbd );if !_fcaad {return 0,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _befff :=_aedg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_befff !=nil {_gcgaa ,_cged :=_bc .GetInt (_befff );if !_cged {return 0,_ecg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _gcgaa !=nil {return int64 (*_gcgaa ),nil ;
};return 0,_ecg .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dfbd =_aedg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ecg .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_fdg *PdfActionHide )ToPdfObject ()_bc .PdfObject {_fdg .PdfAction .ToPdfObject ();_fee :=_fdg ._afdg ;_age :=_fee .PdfObject .(*_bc .PdfObjectDictionary );_age .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeHide )));_age .SetIfNotNil ("\u0054",_fdg .T );
_age .SetIfNotNil ("\u0048",_fdg .H );return _fee ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bc .PdfObject ;Name _bc .PdfObject ;};func (_fffd *PdfReader )newPdfAnnotationFreeTextFromDict (_bccg *_bc .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_ddeb :=PdfAnnotationFreeText {};
_edge ,_abdf :=_fffd .newPdfAnnotationMarkupFromDict (_bccg );if _abdf !=nil {return nil ,_abdf ;};_ddeb .PdfAnnotationMarkup =_edge ;_ddeb .DA =_bccg .Get ("\u0044\u0041");_ddeb .Q =_bccg .Get ("\u0051");_ddeb .RC =_bccg .Get ("\u0052\u0043");_ddeb .DS =_bccg .Get ("\u0044\u0053");
_ddeb .CL =_bccg .Get ("\u0043\u004c");_ddeb .IT =_bccg .Get ("\u0049\u0054");_ddeb .BE =_bccg .Get ("\u0042\u0045");_ddeb .RD =_bccg .Get ("\u0052\u0044");_ddeb .BS =_bccg .Get ("\u0042\u0053");_ddeb .LE =_bccg .Get ("\u004c\u0045");return &_ddeb ,nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ddee *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ddee .Alternate ==nil {if _ddee .N ==1{_ebgdcg :=NewPdfColorspaceDeviceGray ();return _ebgdcg .ColorFromFloats (vals );}else if _ddee .N ==3{_gfea :=NewPdfColorspaceDeviceRGB ();
return _gfea .ColorFromFloats (vals );}else if _ddee .N ==4{_ddde :=NewPdfColorspaceDeviceCMYK ();return _ddde .ColorFromFloats (vals );}else {return nil ,_ecg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ddee .Alternate .ColorFromFloats (vals );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bc .PdfIndirectObject )*PdfOutlineItem {_dcda :=PdfOutlineItem {};_dcda ._bgbe =&_dcda ;_dcda .Title =_bc .MakeString (title );_agcde :=_bc .MakeArray ();_agcde .Append (page );_agcde .Append (_bc .MakeName ("\u0046\u0069\u0074"));
_dcda .Dest =_agcde ;return &_dcda ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bggcgb *PdfReader )Decrypt (password []byte )(bool ,error ){_ebbca ,_ageae :=_bggcgb ._afedg .Decrypt (password );if _ageae !=nil {return false ,_ageae ;};if !_ebbca {return false ,nil ;};_ageae =_bggcgb .loadStructure ();if _ageae !=nil {_dae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_ageae );
return false ,_ageae ;};return true ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_cfea *OutlineItem )Insert (index uint ,item *OutlineItem ){_daeg :=uint (len (_cfea .Entries ));if index > _daeg {index =_daeg ;};_cfea .Entries =append (_cfea .Entries [:index ],append ([]*OutlineItem {item },_cfea .Entries [index :]...)...);};


// String implements interface PdfObject.
func (_bb *PdfAction )String ()string {_aag ,_df :=_bb .ToPdfObject ().(*_bc .PdfIndirectObject );if _df {return _dc .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bb ._afd ,_aag .PdfObject .String ());};return "";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cbece *PdfShading )ToPdfObject ()_bc .PdfObject {_gecbga :=_cbece ._agbee ;_gbcab ,_dgabce :=_cbece .getShadingDict ();if _dgabce !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cbece .ShadingType !=nil {_gbcab .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cbece .ShadingType );};if _cbece .ColorSpace !=nil {_gbcab .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cbece .ColorSpace .ToPdfObject ());
};if _cbece .Background !=nil {_gbcab .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cbece .Background );};if _cbece .BBox !=nil {_gbcab .Set ("\u0042\u0042\u006f\u0078",_cbece .BBox .ToPdfObject ());};if _cbece .AntiAlias !=nil {_gbcab .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cbece .AntiAlias );
};return _gecbga ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bc .PdfObjectString ;Author *_bc .PdfObjectString ;Subject *_bc .PdfObjectString ;Keywords *_bc .PdfObjectString ;Creator *_bc .PdfObjectString ;Producer *_bc .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_bc .PdfObjectName ;
_cbeg *_bc .PdfObjectDictionary ;};

// B returns the value of the blue component of the color.
func (_cbggb *PdfColorDeviceRGB )B ()float64 {return _cbggb [2]};var (_eccage _a .Mutex ;_dagcb ="";_gccae _b .Time ;_abdfb ="";_fbfg ="";_daabc _b .Time ;_bbeae ="";_begaaf ="";_ddggd ="";);func (_bbbc *PdfReader )newPdfAnnotationWidgetFromDict (_fegg *_bc .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dccf :=PdfAnnotationWidget {};
_dccf .H =_fegg .Get ("\u0048");_dccf .MK =_fegg .Get ("\u004d\u004b");_dccf .A =_fegg .Get ("\u0041");_dccf .AA =_fegg .Get ("\u0041\u0041");_dccf .BS =_fegg .Get ("\u0042\u0053");_dccf .Parent =_fegg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dccf ,nil ;
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_aece *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dae .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ecg .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gdcf ,_eeca :=NewStandard14Font (basefont );if _eeca !=nil {panic (_dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _gdcf ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bbgd :=NewPdfAnnotation ();_aff :=&PdfAnnotationTrapNet {};_aff .PdfAnnotation =_bbgd ;_bbgd .SetContext (_aff );return _aff ;};func (_adccd *PdfWriter )writeOutlines ()error {if _adccd ._aefe ==nil {return nil ;
};_dae .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_adccd ._aefe );_befaf :=_adccd ._aefe .ToPdfObject ();_dae .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_befaf ,_befaf ,_befaf );
_adccd ._bdbgc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_befaf );_ccegc :=_adccd .addObjects (_befaf );if _ccegc !=nil {return _ccegc ;};return nil ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dgdd *PdfAppender )SetDocInfo (info *PdfInfo ){_dgdd ._ceba =info };

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_fcd :=NewPdfAction ();_cdf :=&PdfActionTrans {};_cdf .PdfAction =_fcd ;_fcd .SetContext (_cdf );return _cdf ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_dedg *PdfFont )BytesToCharcodes (data []byte )[]_cabg .CharCode {_dae .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _efac ,_aecgc :=_dedg ._adffg .(*pdfFontType0 );_aecgc &&_efac ._bddf !=nil {if _beagf ,_adea :=_efac .bytesToCharcodes (data );_adea {return _beagf ;};};_bcafb :=make ([]_cabg .CharCode ,0,len (data )+len (data )%2);if _dedg .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _eacc :=0;_eacc < len (data );_eacc +=2{_egbaa :=uint16 (data [_eacc ])<<8|uint16 (data [_eacc +1]);_bcafb =append (_bcafb ,_cabg .CharCode (_egbaa ));};}else {for _ ,_bgbd :=range data {_bcafb =append (_bcafb ,_cabg .CharCode (_bgbd ));
};};return _bcafb ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gaa :=NewPdfAnnotation ();_affg :=&PdfAnnotationRedact {};_affg .PdfAnnotation =_gaa ;_affg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaa .SetContext (_affg );return _affg ;};

// ToPdfObject implements interface PdfModel.
func (_fgab *PdfAnnotationFreeText )ToPdfObject ()_bc .PdfObject {_fgab .PdfAnnotation .ToPdfObject ();_faba :=_fgab ._gdfa ;_bffc :=_faba .PdfObject .(*_bc .PdfObjectDictionary );_fgab .PdfAnnotationMarkup .appendToPdfDictionary (_bffc );_bffc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_bffc .SetIfNotNil ("\u0044\u0041",_fgab .DA );_bffc .SetIfNotNil ("\u0051",_fgab .Q );_bffc .SetIfNotNil ("\u0052\u0043",_fgab .RC );_bffc .SetIfNotNil ("\u0044\u0053",_fgab .DS );_bffc .SetIfNotNil ("\u0043\u004c",_fgab .CL );_bffc .SetIfNotNil ("\u0049\u0054",_fgab .IT );
_bffc .SetIfNotNil ("\u0042\u0045",_fgab .BE );_bffc .SetIfNotNil ("\u0052\u0044",_fgab .RD );_bffc .SetIfNotNil ("\u0042\u0053",_fgab .BS );_bffc .SetIfNotNil ("\u004c\u0045",_fgab .LE );return _faba ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_fcbb *PdfFont )CharcodesToStrings (charcodes []_cabg .CharCode )([]string ,int ,int ){_ffafe :=_fcbb .baseFields ();_cfcd :=make ([]string ,0,len (charcodes ));_aege :=0;_ddfga :=_fcbb .Encoder ();if _ddfga !=nil {switch _cfcfe :=_ddfga .(type ){case _cabg .SimpleEncoder :_gfcgc :=_cfcfe .BaseName ();
if _ ,_gbcg :=_accbd [_gfcgc ];_gbcg {for _ ,_acfg :=range charcodes {if _bgdee ,_addgg :=_ddfga .CharcodeToRune (_acfg );_addgg {_cfcd =append (_cfcd ,string (_bgdee ));}else {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_acfg ,charcodes ,_ffafe .isCIDFont (),_fcbb ,_ddfga );
_aege ++;_cfcd =append (_cfcd ,_ba .MissingCodeString );};};return _cfcd ,len (_cfcd ),_aege ;};};};for _ ,_fgcdc :=range charcodes {if _ffafe ._bdbee !=nil {if _gedf ,_degf :=_ffafe ._bdbee .CharcodeToUnicode (_ba .CharCode (_fgcdc ));_degf {_cfcd =append (_cfcd ,_gedf );
continue ;};};if _ddfga !=nil {if _bggcg ,_eacb :=_ddfga .CharcodeToRune (_fgcdc );_eacb {_cfcd =append (_cfcd ,string (_bggcg ));continue ;};};_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fgcdc ,charcodes ,_ffafe .isCIDFont (),_fcbb ,_ddfga );
_aege ++;_cfcd =append (_cfcd ,_ba .MissingCodeString );};if _aege !=0{_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_aege ,_fcbb );
};return _cfcd ,len (_cfcd ),_aege ;};

// ToPdfObject implements interface PdfModel.
func (_cdg *PdfActionGoTo3DView )ToPdfObject ()_bc .PdfObject {_cdg .PdfAction .ToPdfObject ();_eac :=_cdg ._afdg ;_fab :=_eac .PdfObject .(*_bc .PdfObjectDictionary );_fab .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeGoTo3DView )));_fab .SetIfNotNil ("\u0054\u0041",_cdg .TA );
_fab .SetIfNotNil ("\u0056",_cdg .V );return _eac ;};

// M returns the value of the magenta component of the color.
func (_dfcde *PdfColorDeviceCMYK )M ()float64 {return _dfcde [1]};

// ToGoTime returns the date in time.Time format.
func (_fefgb PdfDate )ToGoTime ()_b .Time {_cgcf :=int (_fefgb ._bbac *60*60+_fefgb ._fcfbe *60);switch _fefgb ._efbce {case '-':_cgcf =-_cgcf ;case 'Z':_cgcf =0;};_gcff :=_dc .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fefgb ._efbce ,_fefgb ._bbac ,_fefgb ._fcfbe );
_ggeef :=_b .FixedZone (_gcff ,_cgcf );return _b .Date (int (_fefgb ._ffcfg ),_b .Month (_fefgb ._cacfa ),int (_fefgb ._ffafa ),int (_fefgb ._bgad ),int (_fefgb ._efaef ),int (_fefgb ._dcdec ),0,_ggeef );};

// ToPdfObject converts rectangle to a PDF object.
func (_dgbde *PdfRectangle )ToPdfObject ()_bc .PdfObject {return _bc .MakeArray (_bc .MakeFloat (_dgbde .Llx ),_bc .MakeFloat (_dgbde .Lly ),_bc .MakeFloat (_dgbde .Urx ),_bc .MakeFloat (_dgbde .Ury ));};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gaca *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_ggfb :=func (_gcdd float64 )float64 {if _gcdd >=6.0/29{return _gcdd *_gcdd *_gcdd ;};return 108.0/841*(_gcdd -4/29);};_cfbec :=img ._ggeec ;if len (_cfbec )!=6{_dae .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_cfbec =_gaca .DecodeArray ();};_fdfaa :=_cbb .NewReader (img .getBase ());_aacc :=_ecc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._ggfad ,img ._ggeec );_gfec :=_cbb .NewWriter (_aacc );_ebafa :=_da .Pow (2,float64 (img .BitsPerComponent ))-1;
_adgbf :=make ([]uint32 ,3);var (_cded error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_degg ,_eccdd ,_cabc float64 ;);for {_cded =_fdfaa .ReadSamples (_adgbf );if _cded ==_gbe .EOF {break ;}else if _cded !=nil {return img ,_cded ;};Ls =float64 (_adgbf [0])/_ebafa ;
As =float64 (_adgbf [1])/_ebafa ;Bs =float64 (_adgbf [2])/_ebafa ;Ls =_ecc .LinearInterpolate (Ls ,0.0,1.0,_cfbec [0],_cfbec [1]);As =_ecc .LinearInterpolate (As ,0.0,1.0,_cfbec [2],_cfbec [3]);Bs =_ecc .LinearInterpolate (Bs ,0.0,1.0,_cfbec [4],_cfbec [5]);
L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_gaca .WhitePoint [0]*_ggfb (L );Y =_gaca .WhitePoint [1]*_ggfb (M );Z =_gaca .WhitePoint [2]*_ggfb (N );_degg =3.240479*X +-1.537150*Y +-0.498535*Z ;_eccdd =-0.969256*X +1.875992*Y +0.041556*Z ;
_cabc =0.055648*X +-0.204043*Y +1.057311*Z ;_degg =_da .Min (_da .Max (_degg ,0),1.0);_eccdd =_da .Min (_da .Max (_eccdd ,0),1.0);_cabc =_da .Min (_da .Max (_cabc ,0),1.0);_adgbf [0]=uint32 (_degg *_ebafa );_adgbf [1]=uint32 (_eccdd *_ebafa );_adgbf [2]=uint32 (_cabc *_ebafa );
if _cded =_gfec .WriteSamples (_adgbf );_cded !=nil {return img ,_cded ;};};return _egbafc (&_aacc ),nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_dfeg *PdfAnnotation )ToPdfObject ()_bc .PdfObject {_becbd :=_dfeg ._gdfa ;_gege :=_becbd .PdfObject .(*_bc .PdfObjectDictionary );_gege .Clear ();_gege .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0041\u006e\u006eo\u0074"));_gege .SetIfNotNil ("\u0052\u0065\u0063\u0074",_dfeg .Rect );
_gege .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dfeg .Contents );_gege .SetIfNotNil ("\u0050",_dfeg .P );_gege .SetIfNotNil ("\u004e\u004d",_dfeg .NM );_gege .SetIfNotNil ("\u004d",_dfeg .M );_gege .SetIfNotNil ("\u0046",_dfeg .F );
_gege .SetIfNotNil ("\u0041\u0050",_dfeg .AP );_gege .SetIfNotNil ("\u0041\u0053",_dfeg .AS );_gege .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_dfeg .Border );_gege .SetIfNotNil ("\u0043",_dfeg .C );_gege .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dfeg .StructParent );
_gege .SetIfNotNil ("\u004f\u0043",_dfeg .OC );return _becbd ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_efdcd *PdfReader )GetNameDictionary ()(_bc .PdfObject ,error ){_dabdd :=_bc .ResolveReference (_efdcd ._bdbea .Get ("\u004e\u0061\u006de\u0073"));if _dabdd ==nil {return nil ,nil ;};if !_efdcd ._egcb {_cgebg :=_efdcd .traverseObjectData (_dabdd );
if _cgebg !=nil {return nil ,_cgebg ;};};return _dabdd ,nil ;};func _gfab (_ecgbc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_bdgb ,_agbf :=_bc .GetDict (_ecgbc .AP );if !_agbf {return nil ,nil ,_ecg .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _bdgb ==nil {return nil ,nil ,nil ;};_feace ,_agbf :=_bc .GetArray (_ecgbc .Rect );if !_agbf ||_feace .Len ()!=4{return nil ,nil ,_ecg .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_afgbc ,_edbag :=NewPdfRectangle (*_feace );
if _edbag !=nil {return nil ,nil ,_edbag ;};_cbcge :=_bc .TraceToDirectObject (_bdgb .Get ("\u004e"));switch _ddddc :=_cbcge .(type ){case *_bc .PdfObjectStream :_dcfe :=_ddddc ;_gbge ,_abff :=NewXObjectFormFromStream (_dcfe );return _gbge ,_afgbc ,_abff ;
case *_bc .PdfObjectDictionary :_bedb :=_ddddc ;_aceab ,_ggcab :=_bc .GetName (_ecgbc .AS );if !_ggcab {return nil ,nil ,nil ;};if _bedb .Get (*_aceab )==nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_fefg ,_ggcab :=_bc .GetStream (_bedb .Get (*_aceab ));if !_ggcab {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_aceab );
return nil ,nil ,_ecg .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_bbecf ,_bbgdc :=NewXObjectFormFromStream (_fefg );return _bbecf ,_afgbc ,_bbgdc ;};_dae .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cbcge );
return nil ,nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func _afcg (_ffff *_bc .PdfObjectDictionary ,_bdgcd *fontCommon ,_gdfdd _cabg .TextEncoder )(*pdfFontSimple ,error ){_efdg :=_ebce (_bdgcd );
_efdg ._fbdfdc =_gdfdd ;if _gdfdd ==nil {_efege :=_ffff .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _efege ==nil {_efege =_bc .MakeInteger (0);};_efdg .FirstChar =_efege ;_bcebe ,_dadg :=_bc .GetIntVal (_efege );if !_dadg {_dae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_efege );
return nil ,_bc .ErrTypeError ;};_efgb :=_cabg .CharCode (_bcebe );_efege =_ffff .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _efege ==nil {_efege =_bc .MakeInteger (255);};_efdg .LastChar =_efege ;_bcebe ,_dadg =_bc .GetIntVal (_efege );
if !_dadg {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_efege );return nil ,_bc .ErrTypeError ;
};_bccb :=_cabg .CharCode (_bcebe );_efdg ._cddc =make (map[_cabg .CharCode ]float64 );_efege =_ffff .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _efege !=nil {_efdg .Widths =_efege ;_bfab ,_bdce :=_bc .GetArray (_efege );if !_bdce {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_efege );
return nil ,_bc .ErrTypeError ;};_gdddb ,_gfbf :=_bfab .ToFloat64Array ();if _gfbf !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gfbf ;};if len (_gdddb )!=int (_bccb -_efgb +1){_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bccb -_efgb +1,len (_gdddb ));
return nil ,_bc .ErrRangeError ;};for _accca ,_debed :=range _gdddb {_efdg ._cddc [_efgb +_cabg .CharCode (_accca )]=_debed ;};};};_efdg .Encoding =_bc .TraceToDirectObject (_ffff .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _efdg ,nil ;
};

// BaseFont returns the font's "BaseFont" field.
func (_fcafc *PdfFont )BaseFont ()string {return _fcafc .baseFields ()._fgdf };

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bc .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bc .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_bfdcc ,_fbgfg :=encoder .EncodeBytes (img .Data );
if _fbgfg !=nil {_dae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fbgfg );return nil ,_fbgfg ;};_fefa :=NewXObjectImage ();_bfcad :=img .Width ;_gefbf :=img .Height ;
_fefa .Width =&_bfcad ;_fefa .Height =&_gefbf ;_gfegbb :=img .BitsPerComponent ;_fefa .BitsPerComponent =&_gfegbb ;_fefa .Filter =encoder ;_fefa .Stream =_bfdcc ;if cs ==nil {if img .ColorComponents ==1{_fefa .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_fefa .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_fefa .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ecg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_fefa .ColorSpace =cs ;};if len (img ._ggfad )!=0{_ffddf :=NewXObjectImage ();_ffddf .Filter =encoder ;_dfeba ,_edede :=encoder .EncodeBytes (img ._ggfad );if _edede !=nil {_dae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_edede );
return nil ,_edede ;};_ffddf .Stream =_dfeba ;_ffddf .BitsPerComponent =_fefa .BitsPerComponent ;_ffddf .Width =&img .Width ;_ffddf .Height =&img .Height ;_ffddf .ColorSpace =NewPdfColorspaceDeviceGray ();_fefa .SMask =_ffddf .ToPdfObject ();}else {_fefa .SMask =xobjIn .SMask ;
_fefa .ImageMask =xobjIn .ImageMask ;if _fefa .ColorSpace .GetNumComponents ()==1{_cfgfd (_fefa );};};return _fefa ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_daaca pdfCIDFontType2 )GetCharMetrics (code _cabg .CharCode )(_dg .CharMetrics ,bool ){if _fadb ,_afdaa :=_daaca ._gdfab [code ];_afdaa {return _dg .CharMetrics {Wx :_fadb },true ;};_dfcbf :=rune (code );_edabe ,_daaa :=_daaca ._egfd [_dfcbf ];if !_daaa {_edabe =int (_daaca ._fefc );
};return _dg .CharMetrics {Wx :float64 (_edabe )},true ;};func _cgcac (_ccaed ,_dcbbb string )string {if _dee .Contains (_ccaed ,"\u002b"){_abbf :=_dee .Split (_ccaed ,"\u002b");if len (_abbf )==2{_ccaed =_abbf [1];};};return _dcbbb +"\u002b"+_ccaed ;};


// ColorToRGB converts gray -> rgb for a single color component.
func (_adbbd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_eabg ,_becff :=color .(*PdfColorDeviceGray );if !_becff {_dae .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_eabg ),float64 (*_eabg ),float64 (*_eabg )),nil ;};func (_cbfa *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};func _adaf (_bdeef string )map[string ]string {_ggbg :=_aegf .Split (_bdeef ,-1);_adceb :=map[string ]string {};for _ ,_dgff :=range _ggbg {_ggegf :=_fabbc .FindStringSubmatch (_dgff );if _ggegf ==nil {continue ;};_abfcb ,_abfgb :=_ggegf [1],_ggegf [2];
_adceb [_abfcb ]=_abfgb ;};return _adceb ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_edcd *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_edcd .updateObjectsDeep (dss .ToPdfObject (),nil );};_edcd ._gbec =dss ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_eccage .Lock ();defer _eccage .Unlock ();_begaaf =subject };

// String returns a human readable description of `fontfile`.
func (_abae *fontFile )String ()string {_efecf :="\u005b\u004e\u006f\u006e\u0065\u005d";if _abae ._ffcg !=nil {_efecf =_abae ._ffcg .String ();};return _dc .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_abae ._acedf ,_efecf );
};func (_eea *PdfReader )newPdfActionLaunchFromDict (_ebc *_bc .PdfObjectDictionary )(*PdfActionLaunch ,error ){_babd ,_cbbe :=_beg (_ebc .Get ("\u0046"));if _cbbe !=nil {return nil ,_cbbe ;};return &PdfActionLaunch {Win :_ebc .Get ("\u0057\u0069\u006e"),Mac :_ebc .Get ("\u004d\u0061\u0063"),Unix :_ebc .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ebc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_babd },nil ;
};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_efb _gbe .ReadSeeker ;_bdcg *_bc .PdfParser ;_cace *PdfReader ;Reader *PdfReader ;_dgab []*PdfPage ;_eade *PdfAcroForm ;_gbec *DSS ;_cbcd _bc .XrefTable ;_gecd int64 ;_accc int ;_cgf []_bc .PdfObject ;_dgae map[_bc .PdfObject ]struct{};
_bcca map[_bc .PdfObject ]int64 ;_gfcb map[_bc .PdfObject ]struct{};_aegc map[_bc .PdfObject ]struct{};_fffdd int64 ;_bbfa bool ;_abed string ;_cggb *EncryptOptions ;_ceba *PdfInfo ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_gbbdf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bgfd :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_bffee ,_abgaa :=_gbbdf .GetNumPages ();if _abgaa !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abgaa );
return nil ,_abgaa ;};for _fcdef :=1;_fcdef <=_bffee ;_fcdef ++{_baeeg ,_fadbd :=_gbbdf .GetPage (_fcdef );if _fadbd !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fadbd );return nil ,_fadbd ;};if opts .PageProcessCallback !=nil {_fadbd =opts .PageProcessCallback (_fcdef ,_baeeg );
if _fadbd !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fadbd );return nil ,_fadbd ;};}else if opts .PageCallback !=nil {opts .PageCallback (_fcdef ,_baeeg );};_fadbd =_bgfd .AddPage (_baeeg );if _fadbd !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fadbd );
return nil ,_fadbd ;};};_bgfd ._efeae =_gbbdf .PdfVersion ();if !opts .SkipInfo {_ecgab ,_gfdgb :=_gbbdf .GetPdfInfo ();if _gfdgb !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfdgb );}else {_bgfd ._eefa .PdfObject =_ecgab .ToPdfObject ();
};};if !opts .SkipMetadata {if _bcad :=_gbbdf ._bdbea .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bcad !=nil {if _gggf :=_bgfd .SetCatalogMetadata (_bcad );_gggf !=nil {return nil ,_gggf ;};};};if !opts .SkipAcroForm {_ebfbef :=_bgfd .SetForms (_gbbdf .AcroForm );
if _ebfbef !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebfbef );return nil ,_ebfbef ;};};if !opts .SkipOutlines {_bgfd .AddOutlineTree (_gbbdf .GetOutlineTree ());};if !opts .SkipOCProperties {_gcbdf ,_gdffff :=_gbbdf .GetOCProperties ();
if _gdffff !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdffff );}else {_gdffff =_bgfd .SetOCProperties (_gcbdf );if _gdffff !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdffff );};};};if !opts .SkipPageLabels {_bfbg ,_dgfa :=_gbbdf .GetPageLabels ();
if _dgfa !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgfa );}else {_dgfa =_bgfd .SetPageLabels (_bfbg );if _dgfa !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgfa );};};};if !opts .SkipNamedDests {_fbgad ,_cgbeg :=_gbbdf .GetNamedDestinations ();
if _cgbeg !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbeg );}else {_cgbeg =_bgfd .SetNamedDestinations (_fbgad );if _cgbeg !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbeg );};};};if !opts .SkipNameDictionary {_adcc ,_ebfe :=_gbbdf .GetNameDictionary ();
if _ebfe !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebfe );}else {_ebfe =_bgfd .SetNameDictionary (_adcc );if _ebfe !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebfe );};};};if !opts .SkipRotation &&_gbbdf .Rotate !=nil {if _edeeeb :=_bgfd .SetRotation (*_gbbdf .Rotate );
_edeeeb !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edeeeb );};};return &_bgfd ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bc .PdfObjectInteger ;BitsPerComponent *_bc .PdfObjectInteger ;BitsPerFlag *_bc .PdfObjectInteger ;Decode *_bc .PdfObjectArray ;Function []PdfFunction ;};

// Val returns the value of the color.
func (_cffb *PdfColorCalGray )Val ()float64 {return float64 (*_cffb )};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_dbec *PdfFieldButton )ToPdfObject ()_bc .PdfObject {_dbec .PdfField .ToPdfObject ();_ccgg :=_dbec ._fegd ;_dffd :=_ccgg .PdfObject .(*_bc .PdfObjectDictionary );_dffd .Set ("\u0046\u0054",_bc .MakeName ("\u0042\u0074\u006e"));if _dbec .Opt !=nil {_dffd .Set ("\u004f\u0070\u0074",_dbec .Opt );
};return _ccgg ;};func (_egfbc *PdfWriter )setDocInfo (_cdcdb _bc .PdfObject ){if _egfbc .hasObject (_egfbc ._eefa ){delete (_egfbc ._dbfde ,_egfbc ._eefa );delete (_egfbc ._cgeae ,_egfbc ._eefa );for _befe ,_feddd :=range _egfbc ._bcbab {if _feddd ==_egfbc ._eefa {copy (_egfbc ._bcbab [_befe :],_egfbc ._bcbab [_befe +1:]);
_egfbc ._bcbab [len (_egfbc ._bcbab )-1]=nil ;_egfbc ._bcbab =_egfbc ._bcbab [:len (_egfbc ._bcbab )-1];break ;};};};_agfbd :=_bc .PdfIndirectObject {};_agfbd .PdfObject =_cdcdb ;_egfbc ._eefa =&_agfbd ;_egfbc .addObject (&_agfbd );};

// SetAction sets the PDF action for the annotation link.
func (_cbfe *PdfAnnotationLink )SetAction (action *PdfAction ){_cbfe ._bfce =action ;if action ==nil {_cbfe .A =nil ;};};func _cegf (_bdfb *_bc .PdfObjectDictionary )*VRI {_febe ,_ :=_bc .GetString (_bdfb .Get ("\u0054\u0055"));_eggde ,_ :=_bc .GetString (_bdfb .Get ("\u0054\u0053"));
return &VRI {Cert :_baabc (_bdfb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_baabc (_bdfb .Get ("\u004f\u0043\u0053\u0050")),CRL :_baabc (_bdfb .Get ("\u0043\u0052\u004c")),TU :_febe ,TS :_eggde };};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_bdcd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_cdffe :=map[rune ]int {};for _ ,_bgfc :=range text {_cdffe [_bgfc ]++;};return _cdffe ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gfdg *PdfColorspaceSpecialIndexed )ToPdfObject ()_bc .PdfObject {_ggccc :=_bc .MakeArray (_bc .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_ggccc .Append (_gfdg .Base .ToPdfObject ());_ggccc .Append (_bc .MakeInteger (int64 (_gfdg .HiVal )));
_ggccc .Append (_gfdg .Lookup );if _gfdg ._geeaf !=nil {_gfdg ._geeaf .PdfObject =_ggccc ;return _gfdg ._geeaf ;};return _ggccc ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fcgdd *PdfOutline )ToPdfObject ()_bc .PdfObject {_ecgd :=_fcgdd ._eadg ;_affbe :=_ecgd .PdfObject .(*_bc .PdfObjectDictionary );_affbe .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fcgdd .First !=nil {_affbe .Set ("\u0046\u0069\u0072s\u0074",_fcgdd .First .ToPdfObject ());
};if _fcgdd .Last !=nil {_affbe .Set ("\u004c\u0061\u0073\u0074",_fcgdd .Last .GetContext ().GetContainingPdfObject ());};if _fcgdd .Parent !=nil {_affbe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fcgdd .Parent .GetContext ().GetContainingPdfObject ());
};if _fcgdd .Count !=nil {_affbe .Set ("\u0043\u006f\u0075n\u0074",_bc .MakeInteger (*_fcgdd .Count ));};return _ecgd ;};

// ToPdfObject implements interface PdfModel.
func (_daab *PdfAnnotationRichMedia )ToPdfObject ()_bc .PdfObject {_daab .PdfAnnotation .ToPdfObject ();_cce :=_daab ._gdfa ;_ddbb :=_cce .PdfObject .(*_bc .PdfObjectDictionary );_ddbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_ddbb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_daab .RichMediaSettings );_ddbb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_daab .RichMediaContent );
return _cce ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ge :=&PdfAction {};_ge ._afdg =_bc .MakeIndirectObject (_bc .MakeDict ());return _ge ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bc .PdfObject )(*PdfOutputIntent ,error ){_fgaed :=&PdfOutputIntent {};if _eagde :=_fgaed .ParsePdfObject (object );_eagde !=nil {return nil ,_eagde ;};return _fgaed ,nil ;};

// B returns the value of the B component of the color.
func (_abebc *PdfColorCalRGB )B ()float64 {return _abebc [1]};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_daagb *PdfShadingType7 )ToPdfObject ()_bc .PdfObject {_daagb .PdfShading .ToPdfObject ();_cdbed ,_aecgb :=_daagb .getShadingDict ();if _aecgb !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _daagb .BitsPerCoordinate !=nil {_cdbed .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_daagb .BitsPerCoordinate );};if _daagb .BitsPerComponent !=nil {_cdbed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daagb .BitsPerComponent );
};if _daagb .BitsPerFlag !=nil {_cdbed .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_daagb .BitsPerFlag );};if _daagb .Decode !=nil {_cdbed .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_daagb .Decode );};if _daagb .Function !=nil {if len (_daagb .Function )==1{_cdbed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_daagb .Function [0].ToPdfObject ());
}else {_aegac :=_bc .MakeArray ();for _ ,_eegge :=range _daagb .Function {_aegac .Append (_eegge .ToPdfObject ());};_cdbed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aegac );};};return _daagb ._agbee ;};func (_ebeff *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};


// A returns the value of the A component of the color.
func (_ceedc *PdfColorCalRGB )A ()float64 {return _ceedc [0]};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_eccage .Lock ();defer _eccage .Unlock ();_bbeae =producer };

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_caf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_bade ,_gagf :=color .(*PdfColorDeviceCMYK );if !_gagf {_dae .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gaae :=_bade .C ();_adbg :=_bade .M ();_feccg :=_bade .Y ();_dbcb :=_bade .K ();_gaae =_gaae *(1-_dbcb )+_dbcb ;_adbg =_adbg *(1-_dbcb )+_dbcb ;
_feccg =_feccg *(1-_dbcb )+_dbcb ;_daeaa :=1-_gaae ;_bccc :=1-_adbg ;_efef :=1-_feccg ;return NewPdfColorDeviceRGB (_daeaa ,_bccc ,_efef ),nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bc .PdfObject ;Volume _bc .PdfObject ;Synchronous _bc .PdfObject ;Repeat _bc .PdfObject ;Mix _bc .PdfObject ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_bfed *PdfFieldChoice )ToPdfObject ()_bc .PdfObject {_bfed .PdfField .ToPdfObject ();_fccce :=_bfed ._fegd ;_eagdg :=_fccce .PdfObject .(*_bc .PdfObjectDictionary );_eagdg .Set ("\u0046\u0054",_bc .MakeName ("\u0043\u0068"));if _bfed .Opt !=nil {_eagdg .Set ("\u004f\u0070\u0074",_bfed .Opt );
};if _bfed .TI !=nil {_eagdg .Set ("\u0054\u0049",_bfed .TI );};if _bfed .I !=nil {_eagdg .Set ("\u0049",_bfed .I );};return _fccce ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_bcfcf *PdfInfo )AddCustomInfo (name string ,value string )error {if _bcfcf ._cbeg ==nil {_bcfcf ._cbeg =_bc .MakeDict ();};if _ ,_aegdgf :=_fgaf [name ];_aegdgf {return _dc .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_bcfcf ._cbeg .SetIfNotNil (*_bc .MakeName (name ),_bc .MakeString (value ));return nil ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_bgafa *PdfReader )GetCatalogMarkInfo ()(_bc .PdfObject ,bool ){if _bgafa ._bdbea ==nil {return nil ,false ;};_eagdbf :=_bgafa ._bdbea .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _eagdbf ,_eagdbf !=nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_eg .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_eg .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_eg .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_fgff *PdfAppender ;_bbgdd *DSS ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gea :=NewPdfAnnotation ();_eebeg :=&PdfAnnotationText {};_eebeg .PdfAnnotation =_gea ;_eebeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gea .SetContext (_eebeg );return _eebeg ;};func (_cgaa *PdfReader )newPdfActionFromIndirectObject (_agd *_bc .PdfIndirectObject )(*PdfAction ,error ){_ecba ,_fcb :=_agd .PdfObject .(*_bc .PdfObjectDictionary );
if !_fcb {return nil ,_dc .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cgaa ._afcfd .GetModelFromPrimitive (_ecba );model !=nil {_eab ,_edb :=model .(*PdfAction );if !_edb {return nil ,_dc .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _eab ,nil ;};_fcc :=&PdfAction {};_fcc ._afdg =_agd ;_cgaa ._afcfd .Register (_ecba ,_fcc );if _ecbf :=_ecba .Get ("\u0054\u0079\u0070\u0065");_ecbf !=nil {_bbb ,_fce :=_ecbf .(*_bc .PdfObjectName );if !_fce {_dae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ecbf );
}else {if *_bbb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_dae .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bbb );
};_fcc .Type =_bbb ;};};if _ggd :=_ecba .Get ("\u004e\u0065\u0078\u0074");_ggd !=nil {_fcc .Next =_ggd ;};if _dff :=_ecba .Get ("\u0053");_dff !=nil {_fcc .S =_dff ;};_bab ,_eee :=_fcc .S .(*_bc .PdfObjectName );if !_eee {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fcc .S );
return nil ,_dc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fcc .S );};_fagd :=PdfActionType (_bab .String ());
switch _fagd {case ActionTypeGoTo :_bbd ,_gee :=_cgaa .newPdfActionGotoFromDict (_ecba );if _gee !=nil {return nil ,_gee ;};_bbd .PdfAction =_fcc ;_fcc ._afd =_bbd ;return _fcc ,nil ;case ActionTypeGoToR :_gfg ,_bgg :=_cgaa .newPdfActionGotoRFromDict (_ecba );
if _bgg !=nil {return nil ,_bgg ;};_gfg .PdfAction =_fcc ;_fcc ._afd =_gfg ;return _fcc ,nil ;case ActionTypeGoToE :_ac ,_bcc :=_cgaa .newPdfActionGotoEFromDict (_ecba );if _bcc !=nil {return nil ,_bcc ;};_ac .PdfAction =_fcc ;_fcc ._afd =_ac ;return _fcc ,nil ;
case ActionTypeLaunch :_bfa ,_beb :=_cgaa .newPdfActionLaunchFromDict (_ecba );if _beb !=nil {return nil ,_beb ;};_bfa .PdfAction =_fcc ;_fcc ._afd =_bfa ;return _fcc ,nil ;case ActionTypeThread :_abe ,_aac :=_cgaa .newPdfActionThreadFromDict (_ecba );
if _aac !=nil {return nil ,_aac ;};_abe .PdfAction =_fcc ;_fcc ._afd =_abe ;return _fcc ,nil ;case ActionTypeURI :_gce ,_geg :=_cgaa .newPdfActionURIFromDict (_ecba );if _geg !=nil {return nil ,_geg ;};_gce .PdfAction =_fcc ;_fcc ._afd =_gce ;return _fcc ,nil ;
case ActionTypeSound :_dcf ,_dbe :=_cgaa .newPdfActionSoundFromDict (_ecba );if _dbe !=nil {return nil ,_dbe ;};_dcf .PdfAction =_fcc ;_fcc ._afd =_dcf ;return _fcc ,nil ;case ActionTypeMovie :_fcf ,_ded :=_cgaa .newPdfActionMovieFromDict (_ecba );if _ded !=nil {return nil ,_ded ;
};_fcf .PdfAction =_fcc ;_fcc ._afd =_fcf ;return _fcc ,nil ;case ActionTypeHide :_ggad ,_fgd :=_cgaa .newPdfActionHideFromDict (_ecba );if _fgd !=nil {return nil ,_fgd ;};_ggad .PdfAction =_fcc ;_fcc ._afd =_ggad ;return _fcc ,nil ;case ActionTypeNamed :_bdc ,_baad :=_cgaa .newPdfActionNamedFromDict (_ecba );
if _baad !=nil {return nil ,_baad ;};_bdc .PdfAction =_fcc ;_fcc ._afd =_bdc ;return _fcc ,nil ;case ActionTypeSubmitForm :_gcae ,_eeg :=_cgaa .newPdfActionSubmitFormFromDict (_ecba );if _eeg !=nil {return nil ,_eeg ;};_gcae .PdfAction =_fcc ;_fcc ._afd =_gcae ;
return _fcc ,nil ;case ActionTypeResetForm :_agea ,_bcg :=_cgaa .newPdfActionResetFormFromDict (_ecba );if _bcg !=nil {return nil ,_bcg ;};_agea .PdfAction =_fcc ;_fcc ._afd =_agea ;return _fcc ,nil ;case ActionTypeImportData :_cbg ,_gaed :=_cgaa .newPdfActionImportDataFromDict (_ecba );
if _gaed !=nil {return nil ,_gaed ;};_cbg .PdfAction =_fcc ;_fcc ._afd =_cbg ;return _fcc ,nil ;case ActionTypeSetOCGState :_dda ,_acc :=_cgaa .newPdfActionSetOCGStateFromDict (_ecba );if _acc !=nil {return nil ,_acc ;};_dda .PdfAction =_fcc ;_fcc ._afd =_dda ;
return _fcc ,nil ;case ActionTypeRendition :_cdaf ,_ccf :=_cgaa .newPdfActionRenditionFromDict (_ecba );if _ccf !=nil {return nil ,_ccf ;};_cdaf .PdfAction =_fcc ;_fcc ._afd =_cdaf ;return _fcc ,nil ;case ActionTypeTrans :_agb ,_ggg :=_cgaa .newPdfActionTransFromDict (_ecba );
if _ggg !=nil {return nil ,_ggg ;};_agb .PdfAction =_fcc ;_fcc ._afd =_agb ;return _fcc ,nil ;case ActionTypeGoTo3DView :_ffd ,_bag :=_cgaa .newPdfActionGoTo3DViewFromDict (_ecba );if _bag !=nil {return nil ,_bag ;};_ffd .PdfAction =_fcc ;_fcc ._afd =_ffd ;
return _fcc ,nil ;case ActionTypeJavaScript :_dfce ,_defc :=_cgaa .newPdfActionJavaScriptFromDict (_ecba );if _defc !=nil {return nil ,_defc ;};_dfce .PdfAction =_fcc ;_fcc ._afd =_dfce ;return _fcc ,nil ;};_dae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fagd );
return nil ,nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fegd :_bc .MakeIndirectObject (_bc .MakeDict ())}};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bc .PdfObject ;Name _bc .PdfObject ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_ffg *PdfFieldText )ToPdfObject ()_bc .PdfObject {_ffg .PdfField .ToPdfObject ();_cadab :=_ffg ._fegd ;_fdbg :=_cadab .PdfObject .(*_bc .PdfObjectDictionary );_fdbg .Set ("\u0046\u0054",_bc .MakeName ("\u0054\u0078"));if _ffg .DA !=nil {_fdbg .Set ("\u0044\u0041",_ffg .DA );
};if _ffg .Q !=nil {_fdbg .Set ("\u0051",_ffg .Q );};if _ffg .DS !=nil {_fdbg .Set ("\u0044\u0053",_ffg .DS );};if _ffg .RV !=nil {_fdbg .Set ("\u0052\u0056",_ffg .RV );};if _ffg .MaxLen !=nil {_fdbg .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_ffg .MaxLen );
};return _cadab ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cbc :=NewPdfAnnotation ();_dag :=&PdfAnnotationSquiggly {};_dag .PdfAnnotation =_cbc ;_dag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbc .SetContext (_dag );return _dag ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_facf *PdfAppender )UpdatePage (page *PdfPage ){_facf .updateObjectsDeep (page .ToPdfObject (),nil )};

// Initialize initializes the PdfSignature.
func (_fcddg *PdfSignature )Initialize ()error {if _fcddg .Handler ==nil {return _ecg .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _fcddg .Handler .InitSignature (_fcddg );};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ae :=NewPdfAction ();_baf :=&PdfActionHide {};_baf .PdfAction =_ae ;_ae .SetContext (_baf );return _baf ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fecd :=&PdfColorspaceSpecialSeparation {};return _fecd ;};func (_fgeee *PdfWriter )checkCrossReferenceStream ()bool {_efeec :=_fgeee ._efeae .Major > 1||(_fgeee ._efeae .Major ==1&&_fgeee ._efeae .Minor > 4);
if _fgeee ._egcbbc !=nil {_efeec =*_fgeee ._egcbbc ;};return _efeec ;};

// String returns a string representation of the field.
func (_dceg *PdfField )String ()string {if _afge ,_dece :=_dceg .ToPdfObject ().(*_bc .PdfIndirectObject );_dece {return _dc .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dceg ._cabed ,_afge .PdfObject .String ());};return "";};func (_gab *PdfReader )newPdfActionSetOCGStateFromDict (_aacf *_bc .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_aacf .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_aacf .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_ceac *DSS )GetContainingPdfObject ()_bc .PdfObject {return _ceac ._ggdae };

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_aea :=NewPdfAction ();_ffab :=&PdfActionRendition {};_ffab .PdfAction =_aea ;_aea .SetContext (_ffab );return _ffab ;};func _dbafd ()string {_eccage .Lock ();defer _eccage .Unlock ();_bbcb :=_ee .GetLicenseKey ();
if len (_bbeae )> 0&&(_bbcb .IsLicensed ()||_gdddd ){return _bbeae ;};return _dc .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eebg (),_bbcb .TypeToString ());
};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_begg PdfModel ;_dacf _bc .PdfObject ;};func (_eaeb *PdfReader )newPdfAnnotation3DFromDict (_fabf *_bc .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_edaff :=PdfAnnotation3D {};_edaff .T3DD =_fabf .Get ("\u0033\u0044\u0044");_edaff .T3DV =_fabf .Get ("\u0033\u0044\u0056");
_edaff .T3DA =_fabf .Get ("\u0033\u0044\u0041");_edaff .T3DI =_fabf .Get ("\u0033\u0044\u0049");_edaff .T3DB =_fabf .Get ("\u0033\u0044\u0042");return &_edaff ,nil ;};func _babfe (_ccgdf *_bc .PdfObjectDictionary )(*PdfShadingType4 ,error ){_abacf :=PdfShadingType4 {};
_gbdba :=_ccgdf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gbdba ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbace ,_cabcc :=_gbdba .(*_bc .PdfObjectInteger );if !_cabcc {_dae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbdba );
return nil ,_bc .ErrTypeError ;};_abacf .BitsPerCoordinate =_gbace ;_gbdba =_ccgdf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gbdba ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gbace ,_cabcc =_gbdba .(*_bc .PdfObjectInteger );if !_cabcc {_dae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gbdba );
return nil ,_bc .ErrTypeError ;};_abacf .BitsPerComponent =_gbace ;_gbdba =_ccgdf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gbdba ==nil {_dae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gbace ,_cabcc =_gbdba .(*_bc .PdfObjectInteger );if !_cabcc {_dae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gbdba );
return nil ,_bc .ErrTypeError ;};_abacf .BitsPerComponent =_gbace ;_gbdba =_ccgdf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gbdba ==nil {_dae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_adeff ,_cabcc :=_gbdba .(*_bc .PdfObjectArray );if !_cabcc {_dae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbdba );
return nil ,_bc .ErrTypeError ;};_abacf .Decode =_adeff ;_gbdba =_ccgdf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gbdba ==nil {_dae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_abacf .Function =[]PdfFunction {};if _abedb ,_cffddd :=_gbdba .(*_bc .PdfObjectArray );_cffddd {for _ ,_becad :=range _abedb .Elements (){_ffeab ,_degb :=_ffea (_becad );if _degb !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_degb );
return nil ,_degb ;};_abacf .Function =append (_abacf .Function ,_ffeab );};}else {_baec ,_ddaeg :=_ffea (_gbdba );if _ddaeg !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddaeg );
return nil ,_ddaeg ;};_abacf .Function =append (_abacf .Function ,_baec );};return &_abacf ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bc .StreamEncoder ;FormType _bc .PdfObject ;BBox _bc .PdfObject ;Matrix _bc .PdfObject ;Resources *PdfPageResources ;Group _bc .PdfObject ;Ref _bc .PdfObject ;MetaData _bc .PdfObject ;PieceInfo _bc .PdfObject ;LastModified _bc .PdfObject ;
StructParent _bc .PdfObject ;StructParents _bc .PdfObject ;OPI _bc .PdfObject ;OC _bc .PdfObject ;Name _bc .PdfObject ;

// Stream data.
Stream []byte ;_abgdag *_bc .PdfObjectStream ;};

// SetDate sets the `M` field of the signature.
func (_gaef *PdfSignature )SetDate (date _b .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gaef .M =_bc .MakeString (date .Format (format ));
};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_egbce *PdfWriter )SetPageLabels (pageLabels _bc .PdfObject )error {if pageLabels ==nil {return nil ;};_dae .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_egbce ._bdbgc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _egbce .addObjects (pageLabels );};var _ebbed =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_cbgg *PdfReader )newPdfActionGotoEFromDict (_daae *_bc .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gdc ,_gdf :=_beg (_daae .Get ("\u0046"));if _gdf !=nil {return nil ,_gdf ;};return &PdfActionGoToE {D :_daae .Get ("\u0044"),NewWindow :_daae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_daae .Get ("\u0054"),F :_gdc },nil ;
};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_adbca *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_adbca ._aadac =colorspace ;};func _edga (_bgdfb *_bc .PdfObjectDictionary ,_bggce *fontCommon )(*pdfCIDFontType2 ,error ){if _bggce ._caacf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bggce );
return nil ,_bc .ErrRangeError ;};_bcdaf :=_aggae (_bggce );_fdega ,_cfcb :=_bc .GetDict (_bgdfb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cfcb {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bggce );
return nil ,ErrRequiredAttributeMissing ;};_bcdaf .CIDSystemInfo =_fdega ;_bcdaf .DW =_bgdfb .Get ("\u0044\u0057");_bcdaf .W =_bgdfb .Get ("\u0057");_bcdaf .DW2 =_bgdfb .Get ("\u0044\u0057\u0032");_bcdaf .W2 =_bgdfb .Get ("\u0057\u0032");_bcdaf .CIDToGIDMap =_bgdfb .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_bcdaf ._fefc =1000.0;if _fdgd ,_bdbf :=_bc .GetNumberAsFloat (_bcdaf .DW );_bdbf ==nil {_bcdaf ._fefc =_fdgd ;};_dbaf ,_gbege :=_dfccc (_bcdaf .W );if _gbege !=nil {return nil ,_gbege ;};if _dbaf ==nil {_dbaf =map[_cabg .CharCode ]float64 {};};_bcdaf ._gdfab =_dbaf ;
return _bcdaf ,nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_bdg :=NewPdfAnnotation ();_cbbf :=&PdfAnnotationInk {};_cbbf .PdfAnnotation =_bdg ;_cbbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdg .SetContext (_cbbf );return _cbbf ;};func _bacc (_bebac *_bc .PdfObjectDictionary )(*PdfFieldButton ,error ){_abeed :=&PdfFieldButton {};
_abeed .PdfField =NewPdfField ();_abeed .PdfField .SetContext (_abeed );_abeed .Opt ,_ =_bc .GetArray (_bebac .Get ("\u004f\u0070\u0074"));_eecc :=NewPdfAnnotationWidget ();_eecc .A ,_ =_bc .GetDict (_bebac .Get ("\u0041"));_eecc .AP ,_ =_bc .GetDict (_bebac .Get ("\u0041\u0050"));
_eecc .SetContext (_abeed );_abeed .PdfField .Annotations =append (_abeed .PdfField .Annotations ,_eecc );return _abeed ,nil ;};type fontCommon struct{_fgdf string ;_caacf string ;_gacef string ;_gdee _bc .PdfObject ;_bdbee *_ba .CMap ;_feec *PdfFontDescriptor ;
_bcfe int64 ;};func _cfeaf (_aceef *_bc .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cgdb :=&PdfTilingPattern {};_fbad :=_aceef .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _fbad ==nil {_dae .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ceeg ,_daaeea :=_fbad .(*_bc .PdfObjectInteger );if !_daaeea {_dae .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fbad );
return nil ,_bc .ErrTypeError ;};_cgdb .PaintType =_ceeg ;_fbad =_aceef .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fbad ==nil {_dae .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggbf ,_daaeea :=_fbad .(*_bc .PdfObjectInteger );if !_daaeea {_dae .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbad );
return nil ,_bc .ErrTypeError ;};_cgdb .TilingType =_ggbf ;_fbad =_aceef .Get ("\u0042\u0042\u006f\u0078");if _fbad ==nil {_dae .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fbad =_bc .TraceToDirectObject (_fbad );_ddeea ,_daaeea :=_fbad .(*_bc .PdfObjectArray );if !_daaeea {_dae .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbad );
return nil ,_bc .ErrTypeError ;};_fgdcf ,_gaafe :=NewPdfRectangle (*_ddeea );if _gaafe !=nil {_dae .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gaafe );return nil ,_gaafe ;};_cgdb .BBox =_fgdcf ;_fbad =_aceef .Get ("\u0058\u0053\u0074e\u0070");
if _fbad ==nil {_dae .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fcaeb ,_gaafe :=_bc .GetNumberAsFloat (_fbad );if _gaafe !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fcaeb );
return nil ,_gaafe ;};_cgdb .XStep =_bc .MakeFloat (_fcaeb );_fbad =_aceef .Get ("\u0059\u0053\u0074e\u0070");if _fbad ==nil {_dae .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_feeaab ,_gaafe :=_bc .GetNumberAsFloat (_fbad );if _gaafe !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_feeaab );
return nil ,_gaafe ;};_cgdb .YStep =_bc .MakeFloat (_feeaab );_fbad =_aceef .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fbad ==nil {_dae .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aceef ,_daaeea =_bc .TraceToDirectObject (_fbad ).(*_bc .PdfObjectDictionary );if !_daaeea {return nil ,_dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fbad );
};_eefce ,_gaafe :=NewPdfPageResourcesFromDict (_aceef );if _gaafe !=nil {return nil ,_gaafe ;};_cgdb .Resources =_eefce ;if _abfad :=_aceef .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_abfad !=nil {_dcgc ,_ebfbe :=_abfad .(*_bc .PdfObjectArray );if !_ebfbe {_dae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abfad );
return nil ,_bc .ErrTypeError ;};_cgdb .Matrix =_dcgc ;};return _cgdb ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bbfad *PdfFunctionType4 )ToPdfObject ()_bc .PdfObject {_eccbf :=_bbfad ._dedgb ;if _eccbf ==nil {_bbfad ._dedgb =&_bc .PdfObjectStream {};_eccbf =_bbfad ._dedgb ;};_cgfg :=_bc .MakeDict ();_cgfg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bc .MakeInteger (4));
_ffdca :=&_bc .PdfObjectArray {};for _ ,_eabc :=range _bbfad .Domain {_ffdca .Append (_bc .MakeFloat (_eabc ));};_cgfg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffdca );_fbbfg :=&_bc .PdfObjectArray {};for _ ,_fdee :=range _bbfad .Range {_fbbfg .Append (_bc .MakeFloat (_fdee ));
};_cgfg .Set ("\u0052\u0061\u006eg\u0065",_fbbfg );if _bbfad ._gebf ==nil &&_bbfad .Program !=nil {_bbfad ._gebf =[]byte (_bbfad .Program .String ());};_cgfg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bc .MakeInteger (int64 (len (_bbfad ._gebf ))));
_eccbf .Stream =_bbfad ._gebf ;_eccbf .PdfObjectDictionary =_cgfg ;return _eccbf ;};

// AddOutlineTree adds outlines to a PDF file.
func (_eacdb *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_eacdb ._aefe =outlineTree };func _bad (_bbgc *PdfPage )map[_bc .PdfObjectName ]_bc .PdfObject {_bbgca :=make (map[_bc .PdfObjectName ]_bc .PdfObject );if _bbgc .Resources ==nil {return _bbgca ;
};if _bbgc .Resources .Font !=nil {if _gdfag ,_abdg :=_bc .GetDict (_bbgc .Resources .Font );_abdg {for _ ,_gcfg :=range _gdfag .Keys (){_bbgca [_gcfg ]=_gdfag .Get (_gcfg );};};};if _bbgc .Resources .ExtGState !=nil {if _beda ,_ffabd :=_bc .GetDict (_bbgc .Resources .ExtGState );
_ffabd {for _ ,_accb :=range _beda .Keys (){_bbgca [_accb ]=_beda .Get (_accb );};};};if _bbgc .Resources .XObject !=nil {if _fecc ,_bbcc :=_bc .GetDict (_bbgc .Resources .XObject );_bbcc {for _ ,_dccc :=range _fecc .Keys (){_bbgca [_dccc ]=_fecc .Get (_dccc );
};};};if _bbgc .Resources .Pattern !=nil {if _bddg ,_ddbc :=_bc .GetDict (_bbgc .Resources .Pattern );_ddbc {for _ ,_aeeb :=range _bddg .Keys (){_bbgca [_aeeb ]=_bddg .Get (_aeeb );};};};if _bbgc .Resources .Shading !=nil {if _bfba ,_dfeac :=_bc .GetDict (_bbgc .Resources .Shading );
_dfeac {for _ ,_dgd :=range _bfba .Keys (){_bbgca [_dgd ]=_bfba .Get (_dgd );};};};if _bbgc .Resources .ProcSet !=nil {if _cbba ,_ggdg :=_bc .GetDict (_bbgc .Resources .ProcSet );_ggdg {for _ ,_eagg :=range _cbba .Keys (){_bbgca [_eagg ]=_cbba .Get (_eagg );
};};};if _bbgc .Resources .Properties !=nil {if _fdfa ,_gde :=_bc .GetDict (_bbgc .Resources .Properties );_gde {for _ ,_daef :=range _fdfa .Keys (){_bbgca [_daef ]=_fdfa .Get (_daef );};};};return _bbgca ;};type pdfFontType3 struct{fontCommon ;_gdac *_bc .PdfIndirectObject ;


// These fields are specific to Type 3 fonts.
CharProcs _bc .PdfObject ;Encoding _bc .PdfObject ;FontBBox _bc .PdfObject ;FontMatrix _bc .PdfObject ;FirstChar _bc .PdfObject ;LastChar _bc .PdfObject ;Widths _bc .PdfObject ;Resources _bc .PdfObject ;_abgea map[_cabg .CharCode ]float64 ;_bagg _cabg .TextEncoder ;
};var _gdgd =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cgea *BorderStyle )GetPdfName ()string {switch *_cgea {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_edca :=PdfColorDeviceRGB {r ,g ,b };return &_edca ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_acab :=NewPdfAnnotation ();_fca :=&PdfAnnotationPolyLine {};_fca .PdfAnnotation =_acab ;_fca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acab .SetContext (_fca );return _fca ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_eeeb *PdfPageResources )ToPdfObject ()_bc .PdfObject {_abfcg :=_eeeb ._cbead ;_abfcg .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eeeb .ExtGState );if _eeeb ._aadac !=nil {_eeeb .ColorSpace =_eeeb ._aadac .ToPdfObject ();};_abfcg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eeeb .ColorSpace );
_abfcg .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_eeeb .Pattern );_abfcg .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eeeb .Shading );_abfcg .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_eeeb .XObject );_abfcg .SetIfNotNil ("\u0046\u006f\u006e\u0074",_eeeb .Font );
_abfcg .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_eeeb .ProcSet );_abfcg .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_eeeb .Properties );return _abfcg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdgfa *PdfShadingType3 )ToPdfObject ()_bc .PdfObject {_gdgfa .PdfShading .ToPdfObject ();_dccbd ,_cgbce :=_gdgfa .getShadingDict ();if _cgbce !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdgfa .Coords !=nil {_dccbd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gdgfa .Coords );};if _gdgfa .Domain !=nil {_dccbd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdgfa .Domain );};if _gdgfa .Function !=nil {if len (_gdgfa .Function )==1{_dccbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdgfa .Function [0].ToPdfObject ());
}else {_bcgbc :=_bc .MakeArray ();for _ ,_fcbca :=range _gdgfa .Function {_bcgbc .Append (_fcbca .ToPdfObject ());};_dccbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcgbc );};};if _gdgfa .Extend !=nil {_dccbd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gdgfa .Extend );
};return _gdgfa ._agbee ;};var (CourierName =_dg .CourierName ;CourierBoldName =_dg .CourierBoldName ;CourierObliqueName =_dg .CourierObliqueName ;CourierBoldObliqueName =_dg .CourierBoldObliqueName ;HelveticaName =_dg .HelveticaName ;HelveticaBoldName =_dg .HelveticaBoldName ;
HelveticaObliqueName =_dg .HelveticaObliqueName ;HelveticaBoldObliqueName =_dg .HelveticaBoldObliqueName ;SymbolName =_dg .SymbolName ;ZapfDingbatsName =_dg .ZapfDingbatsName ;TimesRomanName =_dg .TimesRomanName ;TimesBoldName =_dg .TimesBoldName ;TimesItalicName =_dg .TimesItalicName ;
TimesBoldItalicName =_dg .TimesBoldItalicName ;);

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// ToPdfObject converts the font to a PDF representation.
func (_cbag *pdfFontType0 )ToPdfObject ()_bc .PdfObject {if _cbag ._adce ==nil {_cbag ._adce =&_bc .PdfIndirectObject {};};_dbffb :=_cbag .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cbag ._adce .PdfObject =_dbffb ;if _cbag .Encoding !=nil {_dbffb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cbag .Encoding );
}else if _cbag ._abfdg !=nil {_dbffb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cbag ._abfdg .ToPdfObject ());};if _cbag .DescendantFont !=nil {_dbffb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bc .MakeArray (_cbag .DescendantFont .ToPdfObject ()));
};return _cbag ._adce ;};

// A returns the value of the A component of the color.
func (_agaa *PdfColorLab )A ()float64 {return _agaa [1]};

// AddPages adds pages to be appended to the end of the source PDF.
func (_fbgg *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_dfcg :=range pages {_dfcg =_dfcg .Duplicate ();_adefa (_dfcg );_fbgg ._dgab =append (_fbgg ._dgab ,_dfcg );};};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_acge *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _dbff []float64 ;for _acca :=0;_acca < _acge .GetNumComponents ();_acca ++{_dbff =append (_dbff ,0.0,1.0);};return _dbff ;};func _cgbbdc (_fgafd _bc .PdfObject )(string ,error ){_fgafd =_bc .TraceToDirectObject (_fgafd );
switch _bdffe :=_fgafd .(type ){case *_bc .PdfObjectString :return _bdffe .Str (),nil ;case *_bc .PdfObjectStream :_edbca ,_dffdb :=_bc .DecodeStream (_bdffe );if _dffdb !=nil {return "",_dffdb ;};return string (_edbca ),nil ;};return "",_dc .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fgafd );
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdbaa pdfFontType3 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){_bdgeb :=_fdbaa .Encoder ();if _bdgeb ==nil {_dae .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdbaa );
return _dg .CharMetrics {},false ;};_gbcaf ,_fdca :=_bdgeb .RuneToCharcode (r );if !_fdca {if r !=' '{_dae .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdbaa );
};return _dg .CharMetrics {},false ;};_fgcea ,_afcd :=_fdbaa .GetCharMetrics (_gbcaf );return _fgcea ,_afcd ;};func _deacd ()string {_eccage .Lock ();defer _eccage .Unlock ();return _fbfg };func _dcdea (_becdg []byte )([]byte ,error ){_bcbbd :=_gb .New ();
if _ ,_cccdf :=_gbe .Copy (_bcbbd ,_bg .NewReader (_becdg ));_cccdf !=nil {return nil ,_cccdf ;};return _bcbbd .Sum (nil ),nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_bfcb *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bc .PdfObject ;Sy _bc .PdfObject ;};func (_bcfd *PdfReader )newPdfFieldFromIndirectObject (_bdff *_bc .PdfIndirectObject ,_bcaf *PdfField )(*PdfField ,error ){if _afeda ,_afac :=_bcfd ._afcfd .GetModelFromPrimitive (_bdff ).(*PdfField );
_afac {return _afeda ,nil ;};_bdfc ,_cbfd :=_bc .GetDict (_bdff );if !_cbfd {return nil ,_dc .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ebebb :=NewPdfField ();_ebebb ._fegd =_bdff ;_ebebb ._fegd .PdfObject =_bdfc ;if _cfbeg ,_ffbb :=_bc .GetName (_bdfc .Get ("\u0046\u0054"));_ffbb {_ebebb .FT =_cfbeg ;};if _bcaf !=nil {_ebebb .Parent =_bcaf ;};_ebebb .T ,_ =_bdfc .Get ("\u0054").(*_bc .PdfObjectString );
_ebebb .TU ,_ =_bdfc .Get ("\u0054\u0055").(*_bc .PdfObjectString );_ebebb .TM ,_ =_bdfc .Get ("\u0054\u004d").(*_bc .PdfObjectString );_ebebb .Ff ,_ =_bdfc .Get ("\u0046\u0066").(*_bc .PdfObjectInteger );_ebebb .V =_bdfc .Get ("\u0056");_ebebb .DV =_bdfc .Get ("\u0044\u0056");
_ebebb .AA =_bdfc .Get ("\u0041\u0041");if DA :=_bdfc .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bc .GetString (DA );_ebebb .VariableText =&VariableText {DA :DA };Q ,_ :=_bdfc .Get ("\u0051").(*_bc .PdfObjectInteger );DS ,_ :=_bdfc .Get ("\u0044\u0053").(*_bc .PdfObjectString );
RV :=_bdfc .Get ("\u0052\u0056");_ebebb .VariableText .Q =Q ;_ebebb .VariableText .DS =DS ;_ebebb .VariableText .RV =RV ;};_cbbae :=_ebebb .FT ;if _cbbae ==nil &&_bcaf !=nil {_cbbae =_bcaf .FT ;};if _cbbae !=nil {switch *_cbbae {case "\u0054\u0078":_fabbe ,_gcabd :=_abfce (_bdfc );
if _gcabd !=nil {return nil ,_gcabd ;};_fabbe .PdfField =_ebebb ;_ebebb ._cabed =_fabbe ;case "\u0043\u0068":_agef ,_daacc :=_bbdfg (_bdfc );if _daacc !=nil {return nil ,_daacc ;};_agef .PdfField =_ebebb ;_ebebb ._cabed =_agef ;case "\u0042\u0074\u006e":_cdde ,_bedfd :=_bacc (_bdfc );
if _bedfd !=nil {return nil ,_bedfd ;};_cdde .PdfField =_ebebb ;_ebebb ._cabed =_cdde ;case "\u0053\u0069\u0067":_ebea ,_aeda :=_bcfd .newPdfFieldSignatureFromDict (_bdfc );if _aeda !=nil {return nil ,_aeda ;};_ebea .PdfField =_ebebb ;_ebebb ._cabed =_ebea ;
default:_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_ebebb .FT );return nil ,_ecg .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bef ,_aabe :=_bc .GetName (_bdfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_aabe {if *_bef =="\u0057\u0069\u0064\u0067\u0065\u0074"{_aegb ,_beag :=_bcfd .newPdfAnnotationFromIndirectObject (_bdff );if _beag !=nil {return nil ,_beag ;};_dfeaa ,_egdfd :=_aegb .GetContext ().(*PdfAnnotationWidget );
if !_egdfd {return nil ,_ecg .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_dfeaa ._cae =_ebebb ;_dfeaa .Parent =_ebebb ._fegd ;_ebebb .Annotations =append (_ebebb .Annotations ,_dfeaa );
return _ebebb ,nil ;};};_bfaf :=true ;if _abbe ,_fbae :=_bc .GetArray (_bdfc .Get ("\u004b\u0069\u0064\u0073"));_fbae {_cafd :=make ([]*_bc .PdfIndirectObject ,0,_abbe .Len ());for _ ,_cdea :=range _abbe .Elements (){_fgec ,_bcbe :=_bc .GetIndirect (_cdea );
if !_bcbe {_fbf ,_bafb :=_bc .GetStream (_cdea );if _bafb &&_fbf .PdfObjectDictionary !=nil {_gacc ,_eecdb :=_bc .GetNameVal (_fbf .Get ("\u0054\u0079\u0070\u0065"));if _eecdb &&_gacc =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_dae .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ecg .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_agcbg ,_ffdbc :=_bc .GetDict (_fgec );
if !_ffdbc {return nil ,ErrTypeCheck ;};if _bfaf {_bfaf =!_aeac (_agcbg );};_cafd =append (_cafd ,_fgec );};for _ ,_acgbb :=range _cafd {if _bfaf {_gbbb ,_gbdae :=_bcfd .newPdfAnnotationFromIndirectObject (_acgbb );if _gbdae !=nil {_dae .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gbdae );
return nil ,_gbdae ;};_egba ,_eafd :=_gbbb ._ccb .(*PdfAnnotationWidget );if !_eafd {return nil ,ErrTypeCheck ;};_egba ._cae =_ebebb ;_ebebb .Annotations =append (_ebebb .Annotations ,_egba );}else {_abfg ,_edeee :=_bcfd .newPdfFieldFromIndirectObject (_acgbb ,_ebebb );
if _edeee !=nil {_dae .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_edeee );return nil ,_edeee ;};_ebebb .Kids =append (_ebebb .Kids ,_abfg );
};};};return _ebebb ,nil ;};func _adefa (_gdcbf *PdfPage ){_ecdab :=_ee .GetLicenseKey ();if _ecdab !=nil &&_ecdab .IsLicensed (){return ;};_cgbegb :=_bc .PdfObjectName ("\u0055\u0046\u0031");if !_gdcbf .Resources .HasFontByName (_cgbegb ){_gdcbf .Resources .SetFontByName (_cgbegb ,DefaultFont ().ToPdfObject ());
};var _adbae []string ;_adbae =append (_adbae ,"\u0071");_adbae =append (_adbae ,"\u0042\u0054");_adbae =append (_adbae ,_dc .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_cgbegb .String ()));_adbae =append (_adbae ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_adbae =append (_adbae ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_faeg :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_adbae =append (_adbae ,_dc .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_faeg ));_adbae =append (_adbae ,"\u0045\u0054");_adbae =append (_adbae ,"\u0051");_beaee :=_dee .Join (_adbae ,"\u000a");_gdcbf .AddContentStreamByString (_beaee );_gdcbf .ToPdfObject ();
};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ffcda *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_fbegf *PdfWriter )checkLicense ()error {_fadaf :=_ee .GetLicenseKey ();if (_fadaf ==nil ||!_fadaf .IsLicensed ())&&!_gdddd {_dc .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_dc .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ecg .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_afde :=NewPdfAnnotation ();_eeed :=&PdfAnnotationCircle {};_eeed .PdfAnnotation =_afde ;_eeed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afde .SetContext (_eeed );return _eeed ;};

// ValidateSignatures validates digital signatures in the document.
func (_decce *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _decce .AcroForm ==nil {return nil ,nil ;};if _decce .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ddegd *PdfSignature ;
_daced *PdfField ;_ffcf SignatureHandler ;};var _deef []*sigFieldPair ;for _ ,_bgefa :=range _decce .AcroForm .AllFields (){if _bgefa .V ==nil {continue ;};if _caaea ,_ecacb :=_bc .GetDict (_bgefa .V );_ecacb {if _deccb ,_gabaf :=_bc .GetNameVal (_caaea .Get ("\u0054\u0079\u0070\u0065"));
_gabaf &&_deccb =="\u0053\u0069\u0067"{_dbgbf ,_gabbg :=_bc .GetIndirect (_bgefa .V );if !_gabbg {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_bbfdf ,_cccac :=_decce .newPdfSignatureFromIndirect (_dbgbf );if _cccac !=nil {return nil ,_cccac ;};var _fbdd SignatureHandler ;for _ ,_dbgfa :=range handlers {if _dbgfa .IsApplicable (_bbfdf ){_fbdd =_dbgfa ;break ;};};_deef =append (_deef ,&sigFieldPair {_ddegd :_bbfdf ,_daced :_bgefa ,_ffcf :_fbdd });
};};};var _fgdfd []SignatureValidationResult ;for _ ,_edcee :=range _deef {_dcfc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_edcee ._daced }};if _edcee ._ffcf ==nil {_dcfc .Errors =append (_dcfc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_fgdfd =append (_fgdfd ,_dcfc );continue ;};_eeeebd ,_beegf :=_edcee ._ffcf .NewDigest (_edcee ._ddegd );if _beegf !=nil {_dcfc .Errors =append (_dcfc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_beegf .Error ());_fgdfd =append (_fgdfd ,_dcfc );
continue ;};_egfg :=_edcee ._ddegd .ByteRange ;if _egfg ==nil {_dcfc .Errors =append (_dcfc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_fgdfd =append (_fgdfd ,_dcfc );continue ;};for _baea :=0;
_baea < _egfg .Len ();_baea =_baea +2{_ccgaa ,_ :=_bc .GetNumberAsInt64 (_egfg .Get (_baea ));_bbafdc ,_ :=_bc .GetIntVal (_egfg .Get (_baea +1));if _ ,_degbc :=_decce ._ggge .Seek (_ccgaa ,_gbe .SeekStart );_degbc !=nil {return nil ,_degbc ;};_efcbba :=make ([]byte ,_bbafdc );
if _ ,_bageg :=_decce ._ggge .Read (_efcbba );_bageg !=nil {return nil ,_bageg ;};_eeeebd .Write (_efcbba );};_dcbgd ,_beegf :=_edcee ._ffcf .Validate (_edcee ._ddegd ,_eeeebd );if _beegf !=nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_beegf ,_edcee ._ffcf );
_dcbgd .Errors =append (_dcbgd .Errors ,_beegf .Error ());};_dcbgd .Name =_edcee ._ddegd .Name .Decoded ();_dcbgd .Reason =_edcee ._ddegd .Reason .Decoded ();if _edcee ._ddegd .M !=nil {_eaafde ,_cbaf :=NewPdfDate (_edcee ._ddegd .M .String ());if _cbaf !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbaf );
_dcbgd .Errors =append (_dcbgd .Errors ,_cbaf .Error ());continue ;};_dcbgd .Date =_eaafde ;};_dcbgd .ContactInfo =_edcee ._ddegd .ContactInfo .Decoded ();_dcbgd .Location =_edcee ._ddegd .Location .Decoded ();_dcbgd .Fields =_dcfc .Fields ;_fgdfd =append (_fgdfd ,_dcbgd );
};return _fgdfd ,nil ;};

// GetXObjectByName gets XObject by name.
func (_egcg *PdfPage )GetXObjectByName (name _bc .PdfObjectName )(_bc .PdfObject ,bool ){_adfgd ,_agaf :=_egcg .Resources .XObject .(*_bc .PdfObjectDictionary );if !_agaf {return nil ,false ;};if _cadaa :=_adfgd .Get (name );_cadaa !=nil {return _cadaa ,true ;
};return nil ,false ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_aagb DefaultImageHandler )NewGrayImageFromGoImage (goimg _gg .Image )(*Image ,error ){_fdada :=goimg .Bounds ();_fcdfd :=&Image {Width :int64 (_fdada .Dx ()),Height :int64 (_fdada .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _efdbb :=goimg .(type ){case *_gg .Gray :if len (_efdbb .Pix )!=_fdada .Dx ()*_fdada .Dy (){_acbfd ,_eggfa :=_ecc .GrayConverter .Convert (goimg );
if _eggfa !=nil {return nil ,_eggfa ;};_fcdfd .Data =_acbfd .Pix ();}else {_fcdfd .Data =_efdbb .Pix ;};case *_gg .Gray16 :_fcdfd .BitsPerComponent =16;if len (_efdbb .Pix )!=_fdada .Dx ()*_fdada .Dy ()*2{_bgfb ,_eeede :=_ecc .Gray16Converter .Convert (goimg );
if _eeede !=nil {return nil ,_eeede ;};_fcdfd .Data =_bgfb .Pix ();}else {_fcdfd .Data =_efdbb .Pix ;};case _ecc .Image :_ecgcb :=_efdbb .Base ();if _ecgcb .ColorComponents ==1{_fcdfd .BitsPerComponent =int64 (_ecgcb .BitsPerComponent );_fcdfd .Data =_ecgcb .Data ;
return _fcdfd ,nil ;};_gddb ,_deac :=_ecc .GrayConverter .Convert (goimg );if _deac !=nil {return nil ,_deac ;};_fcdfd .Data =_gddb .Pix ();default:_ccgea ,_dfaad :=_ecc .GrayConverter .Convert (goimg );if _dfaad !=nil {return nil ,_dfaad ;};_fcdfd .Data =_ccgea .Pix ();
};return _fcdfd ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bc .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_eegb pdfFontType3 )GetCharMetrics (code _cabg .CharCode )(_dg .CharMetrics ,bool ){if _bgdec ,_ffbee :=_eegb ._abgea [code ];_ffbee {return _dg .CharMetrics {Wx :_bgdec },true ;};if _dg .IsStdFont (_dg .StdFontName (_eegb ._fgdf )){return _dg .CharMetrics {Wx :250},true ;
};return _dg .CharMetrics {},false ;};var _aegf =_cb .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bc .PdfObject ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bc .PdfObject ;BS _bc .PdfObject ;LE _bc .PdfObject ;IC _bc .PdfObject ;LL _bc .PdfObject ;LLE _bc .PdfObject ;Cap _bc .PdfObject ;IT _bc .PdfObject ;LLO _bc .PdfObject ;CP _bc .PdfObject ;
Measure _bc .PdfObject ;CO _bc .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ffcd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// IsTiling specifies if the pattern is a tiling pattern.
func (_ggbda *PdfPattern )IsTiling ()bool {return _ggbda .PatternType ==1};

// ToPdfObject returns a PDF object representation of the outline.
func (_adfe *Outline )ToPdfObject ()_bc .PdfObject {return _adfe .ToPdfOutline ().ToPdfObject ()};func (_cacd *PdfReader )newPdfAnnotationHighlightFromDict (_deeb *_bc .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_bed :=PdfAnnotationHighlight {};
_acfd ,_dad :=_cacd .newPdfAnnotationMarkupFromDict (_deeb );if _dad !=nil {return nil ,_dad ;};_bed .PdfAnnotationMarkup =_acfd ;_bed .QuadPoints =_deeb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bed ,nil ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bfeaa DefaultImageHandler )Read (reader _gbe .Reader )(*Image ,error ){_cecd ,_ ,_feaea :=_gg .Decode (reader );if _feaea !=nil {_dae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_feaea );
return nil ,_feaea ;};return _bfeaa .NewImageFromGoImage (_cecd );};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bc .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bc .PdfObject ;Contents _bc .PdfObject ;
Rotate *int64 ;Group _bc .PdfObject ;Thumb _bc .PdfObject ;B _bc .PdfObject ;Dur _bc .PdfObject ;Trans _bc .PdfObject ;AA _bc .PdfObject ;Metadata _bc .PdfObject ;PieceInfo _bc .PdfObject ;StructParents _bc .PdfObject ;ID _bc .PdfObject ;PZ _bc .PdfObject ;
SeparationInfo _bc .PdfObject ;Tabs _bc .PdfObject ;TemplateInstantiated _bc .PdfObject ;PresSteps _bc .PdfObject ;UserUnit _bc .PdfObject ;VP _bc .PdfObject ;Annots _bc .PdfObject ;_dbgcg []*PdfAnnotation ;_cbcce *_bc .PdfObjectDictionary ;_eadb *_bc .PdfIndirectObject ;
_fecff *PdfReader ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_dfffa *PdfPage )ToPdfObject ()_bc .PdfObject {_bacec :=_dfffa ._eadb ;_dfffa .GetPageDict ();return _bacec ;};

// ToPdfObject implements interface PdfModel.
func (_fdge *PdfAnnotationFileAttachment )ToPdfObject ()_bc .PdfObject {_fdge .PdfAnnotation .ToPdfObject ();_ebaba :=_fdge ._gdfa ;_gggg :=_ebaba .PdfObject .(*_bc .PdfObjectDictionary );_fdge .PdfAnnotationMarkup .appendToPdfDictionary (_gggg );_gggg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_gggg .SetIfNotNil ("\u0046\u0053",_fdge .FS );_gggg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fdge .Name );return _ebaba ;};

// G returns the value of the green component of the color.
func (_dage *PdfColorDeviceRGB )G ()float64 {return _dage [1]};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_eagd *PdfFieldButton )GetType ()ButtonType {_ddaf :=ButtonTypeCheckbox ;if _eagd .Ff !=nil {if (uint32 (*_eagd .Ff )&FieldFlagPushbutton .Mask ())> 0{_ddaf =ButtonTypePush ;}else if (uint32 (*_eagd .Ff )&FieldFlagRadio .Mask ())> 0{_ddaf =ButtonTypeRadio ;
};};return _ddaf ;};func (_aca *PdfReader )newPdfActionSubmitFormFromDict (_fed *_bc .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gdff ,_dbd :=_beg (_fed .Get ("\u0046"));if _dbd !=nil {return nil ,_dbd ;};return &PdfActionSubmitForm {F :_gdff ,Fields :_fed .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fed .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};var _fgaf =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_fbbd *PdfReader )newPdfOutlineItemFromIndirectObject (_cdadf *_bc .PdfIndirectObject )(*PdfOutlineItem ,error ){_ffge ,_dbade :=_cdadf .PdfObject .(*_bc .PdfObjectDictionary );if !_dbade {return nil ,_dc .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ggcb :=NewPdfOutlineItem ();_dbgef :=_ffge .Get ("\u0054\u0069\u0074l\u0065");if _dbgef ==nil {return nil ,_dc .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_fgdad ,_edce :=_bc .GetString (_dbgef );if !_edce {return nil ,_dc .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_dbgef );};_ggcb .Title =_fgdad ;if _cgeea :=_ffge .Get ("\u0043\u006f\u0075n\u0074");
_cgeea !=nil {_decefd ,_gdga :=_cgeea .(*_bc .PdfObjectInteger );if !_gdga {return nil ,_dc .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_cgeea );};_adcfc :=int64 (*_decefd );
_ggcb .Count =&_adcfc ;};if _eefdb :=_ffge .Get ("\u0044\u0065\u0073\u0074");_eefdb !=nil {_ggcb .Dest =_bc .ResolveReference (_eefdb );if !_fbbd ._egcb {_aagec :=_fbbd .traverseObjectData (_ggcb .Dest );if _aagec !=nil {return nil ,_aagec ;};};};if _baag :=_ffge .Get ("\u0041");
_baag !=nil {_ggcb .A =_bc .ResolveReference (_baag );if !_fbbd ._egcb {_fdedc :=_fbbd .traverseObjectData (_ggcb .A );if _fdedc !=nil {return nil ,_fdedc ;};};};if _defcf :=_ffge .Get ("\u0053\u0045");_defcf !=nil {_ggcb .SE =nil ;};if _efbd :=_ffge .Get ("\u0043");
_efbd !=nil {_ggcb .C =_bc .ResolveReference (_efbd );};if _gdcgf :=_ffge .Get ("\u0046");_gdcgf !=nil {_ggcb .F =_bc .ResolveReference (_gdcgf );};return _ggcb ,nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bc .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bc .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bc .PdfObjectBool ;_cbbab PdfModel ;_agbee _bc .PdfObject ;};func (_cbbb *PdfReader )newPdfAnnotationTextFromDict (_gdd *_bc .PdfObjectDictionary )(*PdfAnnotationText ,error ){_bgdf :=PdfAnnotationText {};
_dfg ,_cgacd :=_cbbb .newPdfAnnotationMarkupFromDict (_gdd );if _cgacd !=nil {return nil ,_cgacd ;};_bgdf .PdfAnnotationMarkup =_dfg ;_bgdf .Open =_gdd .Get ("\u004f\u0070\u0065\u006e");_bgdf .Name =_gdd .Get ("\u004e\u0061\u006d\u0065");_bgdf .State =_gdd .Get ("\u0053\u0074\u0061t\u0065");
_bgdf .StateModel =_gdd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_bgdf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_defg *PdfAnnotationCircle )ToPdfObject ()_bc .PdfObject {_defg .PdfAnnotation .ToPdfObject ();_cdb :=_defg ._gdfa ;_dgbc :=_cdb .PdfObject .(*_bc .PdfObjectDictionary );_defg .PdfAnnotationMarkup .appendToPdfDictionary (_dgbc );_dgbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_dgbc .SetIfNotNil ("\u0042\u0053",_defg .BS );_dgbc .SetIfNotNil ("\u0049\u0043",_defg .IC );_dgbc .SetIfNotNil ("\u0042\u0045",_defg .BE );_dgbc .SetIfNotNil ("\u0052\u0044",_defg .RD );return _cdb ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_egfgd *CompliancePdfReader )error ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_bfbe :=NewPdfAnnotation ();_dcga :=&PdfAnnotation3D {};_dcga .PdfAnnotation =_bfbe ;_bfbe .SetContext (_dcga );return _dcga ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_addc *pdfCIDFontType2 )baseFields ()*fontCommon {return &_addc .fontCommon };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gbgad *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgfb :=vals [0];if _fgfb < 0.0||_fgfb > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgfb );
return nil ,ErrColorOutOfRange ;};_feed :=vals [1];if _feed < 0.0||_feed > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_feed );return nil ,ErrColorOutOfRange ;
};_addb :=vals [2];if _addb < 0.0||_addb > 1.0{_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_addb );return nil ,ErrColorOutOfRange ;};_abede :=NewPdfColorCalRGB (_fgfb ,_feed ,_addb );
return _abede ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_dcbgc *pdfCIDFontType2 )ToPdfObject ()_bc .PdfObject {if _dcbgc ._cdfb ==nil {_dcbgc ._cdfb =&_bc .PdfIndirectObject {};};_cgcae :=_dcbgc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_dcbgc ._cdfb .PdfObject =_cgcae ;if _dcbgc .CIDSystemInfo !=nil {_cgcae .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_dcbgc .CIDSystemInfo );};if _dcbgc .DW !=nil {_cgcae .Set ("\u0044\u0057",_dcbgc .DW );};if _dcbgc .DW2 !=nil {_cgcae .Set ("\u0044\u0057\u0032",_dcbgc .DW2 );
};if _dcbgc .W !=nil {_cgcae .Set ("\u0057",_dcbgc .W );};if _dcbgc .W2 !=nil {_cgcae .Set ("\u0057\u0032",_dcbgc .W2 );};if _dcbgc .CIDToGIDMap !=nil {_cgcae .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_dcbgc .CIDToGIDMap );};
return _dcbgc ._cdfb ;};func (_bdeg *PdfReader )newPdfAnnotationSquareFromDict (_ece *_bc .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bgeg :=PdfAnnotationSquare {};_begf ,_bbag :=_bdeg .newPdfAnnotationMarkupFromDict (_ece );if _bbag !=nil {return nil ,_bbag ;
};_bgeg .PdfAnnotationMarkup =_begf ;_bgeg .BS =_ece .Get ("\u0042\u0053");_bgeg .IC =_ece .Get ("\u0049\u0043");_bgeg .BE =_ece .Get ("\u0042\u0045");_bgeg .RD =_ece .Get ("\u0052\u0044");return &_bgeg ,nil ;};type pdfFont interface{_dg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bc .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func _cafb (_cfgea *_bc .PdfObjectDictionary )(*PdfShadingType5 ,error ){_edgcg :=PdfShadingType5 {};_cfbae :=_cfgea .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cfbae ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efbcc ,_feff :=_cfbae .(*_bc .PdfObjectInteger );if !_feff {_dae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfbae );
return nil ,_bc .ErrTypeError ;};_edgcg .BitsPerCoordinate =_efbcc ;_cfbae =_cfgea .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cfbae ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_efbcc ,_feff =_cfbae .(*_bc .PdfObjectInteger );if !_feff {_dae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cfbae );
return nil ,_bc .ErrTypeError ;};_edgcg .BitsPerComponent =_efbcc ;_cfbae =_cfgea .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cfbae ==nil {_dae .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_efbcc ,_feff =_cfbae .(*_bc .PdfObjectInteger );if !_feff {_dae .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cfbae );
return nil ,_bc .ErrTypeError ;};_edgcg .VerticesPerRow =_efbcc ;_cfbae =_cfgea .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cfbae ==nil {_dae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aabeda ,_feff :=_cfbae .(*_bc .PdfObjectArray );if !_feff {_dae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfbae );
return nil ,_bc .ErrTypeError ;};_edgcg .Decode =_aabeda ;if _dfefb :=_cfgea .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dfefb !=nil {_edgcg .Function =[]PdfFunction {};if _bdaa ,_eafgee :=_dfefb .(*_bc .PdfObjectArray );_eafgee {for _ ,_degbe :=range _bdaa .Elements (){_deebd ,_cgae :=_ffea (_degbe );
if _cgae !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgae );return nil ,_cgae ;};_edgcg .Function =append (_edgcg .Function ,_deebd );
};}else {_aeafg ,_dacaf :=_ffea (_dfefb );if _dacaf !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dacaf );return nil ,_dacaf ;
};_edgcg .Function =append (_edgcg .Function ,_aeafg );};};return &_edgcg ,nil ;};func (_cegde *PdfWriter )checkPendingObjects (){for _agce ,_eacga :=range _cegde ._bdgd {if !_cegde .hasObject (_agce ){_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_agce ,_agce ,_agce );
for _ ,_aeffb :=range _eacga {for _ ,_efbde :=range _aeffb .Keys (){_gebfa :=_aeffb .Get (_efbde );if _gebfa ==_agce {_dae .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_aeffb .Set (_efbde ,_bc .MakeNull ());break ;};};};};};};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ggaf *PdfField )IsTerminal ()bool {return len (_ggaf .Kids )==0};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_aeg *PdfAnnotationWidget )Field ()*PdfField {return _aeg ._cae };

// HasExtGState checks whether a font is defined by the specified keyName.
func (_adecbe *PdfPageResources )HasExtGState (keyName _bc .PdfObjectName )bool {_ ,_febce :=_adecbe .GetFontByName (keyName );return _febce ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_facba *PdfReader )GetOutlines ()(*Outline ,error ){if _facba ==nil {return nil ,_ecg .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_cdcee :=_facba .GetOutlineTree ();if _cdcee ==nil {return nil ,_ecg .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _eeddb func (_dfade *PdfOutlineTreeNode ,_affgdb *[]*OutlineItem );_eeddb =func (_defff *PdfOutlineTreeNode ,_deacc *[]*OutlineItem ){if _defff ==nil {return ;};if _defff ._bgbe ==nil {_dae .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _adbge *OutlineItem ;if _ccffb ,_bedgc :=_defff ._bgbe .(*PdfOutlineItem );_bedgc {_dcebc :=_ccffb .Dest ;if (_dcebc ==nil ||_bc .IsNullObject (_dcebc ))&&_ccffb .A !=nil {if _agdde ,_cdfe :=_bc .GetDict (_ccffb .A );_cdfe {_dcebc ,_ =_bc .GetArray (_agdde .Get ("\u0044"));
};};var _adagf OutlineDest ;if _dcebc !=nil &&!_bc .IsNullObject (_dcebc ){if _gdbfd ,_fbdgd :=_bcac (_dcebc ,_facba );_fbdgd ==nil {_adagf =*_gdbfd ;}else {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_dcebc ,_fbdgd );
};};_adbge =NewOutlineItem (_ccffb .Title .Decoded (),_adagf );*_deacc =append (*_deacc ,_adbge );if _ccffb .Next !=nil {_eeddb (_ccffb .Next ,_deacc );};};if _defff .First !=nil {if _adbge !=nil {_deacc =&_adbge .Entries ;};_eeddb (_defff .First ,_deacc );
};};_ggde :=NewOutline ();_eeddb (_cdcee ,&_ggde .Entries );return _ggde ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<26););func _gdbc (_gadeff *_bc .PdfObjectDictionary ,_abfe *fontCommon )(*pdfFontType3 ,error ){_afcdc :=_efae (_abfe );_fadf :=_gadeff .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fadf ==nil {_fadf =_bc .MakeInteger (0);
};_afcdc .FirstChar =_fadf ;_dfcbb ,_bcec :=_bc .GetIntVal (_fadf );if !_bcec {_dae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fadf );
return nil ,_bc .ErrTypeError ;};_acfbe :=_cabg .CharCode (_dfcbb );_fadf =_gadeff .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fadf ==nil {_fadf =_bc .MakeInteger (255);};_afcdc .LastChar =_fadf ;_dfcbb ,_bcec =_bc .GetIntVal (_fadf );
if !_bcec {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fadf );return nil ,_bc .ErrTypeError ;
};_cbec :=_cabg .CharCode (_dfcbb );_fadf =_gadeff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fadf !=nil {_afcdc .Resources =_fadf ;};_fadf =_gadeff .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _fadf ==nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_fadf );
return nil ,_bc .ErrNotSupported ;};_afcdc .CharProcs =_fadf ;_fadf =_gadeff .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _fadf ==nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_fadf );
return nil ,_bc .ErrNotSupported ;};_afcdc .FontMatrix =_fadf ;_afcdc ._abgea =make (map[_cabg .CharCode ]float64 );_fadf =_gadeff .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fadf !=nil {_afcdc .Widths =_fadf ;_afdce ,_dbgdd :=_bc .GetArray (_fadf );
if !_dbgdd {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fadf );return nil ,_bc .ErrTypeError ;
};_cfbebf ,_eaeea :=_afdce .ToFloat64Array ();if _eaeea !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_eaeea ;};if len (_cfbebf )!=int (_cbec -_acfbe +1){_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_cbec -_acfbe +1,len (_cfbebf ));
return nil ,_bc .ErrRangeError ;};_bgfg ,_dbgdd :=_bc .GetArray (_afcdc .FontMatrix );if !_dbgdd {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_bgfg );
return nil ,_eaeea ;};_aabc ,_eaeea :=_bgfg .ToFloat64Array ();if _eaeea !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_eaeea ;};_adgaa :=_bf .NewMatrix (_aabc [0],_aabc [1],_aabc [2],_aabc [3],_aabc [4],_aabc [5]);for _ffafc ,_cbdg :=range _cfbebf {_eced ,_ :=_adgaa .Transform (_cbdg ,_cbdg );_afcdc ._abgea [_acfbe +_cabg .CharCode (_ffafc )]=_eced ;};};_afcdc .Encoding =_bc .TraceToDirectObject (_gadeff .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_edfa :=_gadeff .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _edfa !=nil {_afcdc ._gdee =_bc .TraceToDirectObject (_edfa );_fgdac ,_cgad :=_bcgc (_afcdc ._gdee ,&_afcdc .fontCommon );if _cgad !=nil {return nil ,_cgad ;};_afcdc ._bdbee =_fgdac ;
};if _adde :=_afcdc ._bdbee ;_adde !=nil {_afcdc ._bagg =_cabg .NewCMapEncoder ("",nil ,_adde );}else {_afcdc ._bagg =_cabg .NewPdfDocEncoder ();};return _afcdc ,nil ;};func (_egcc *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _egcc ._feec };


// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bc .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dbgb *PdfSignature )GetContainingPdfObject ()_bc .PdfObject {return _dbgb ._dfaaf };func (_fcga *PdfReader )newPdfAnnotationLineFromDict (_ecgc *_bc .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_ggcfc :=PdfAnnotationLine {};_bebd ,_gebe :=_fcga .newPdfAnnotationMarkupFromDict (_ecgc );
if _gebe !=nil {return nil ,_gebe ;};_ggcfc .PdfAnnotationMarkup =_bebd ;_ggcfc .L =_ecgc .Get ("\u004c");_ggcfc .BS =_ecgc .Get ("\u0042\u0053");_ggcfc .LE =_ecgc .Get ("\u004c\u0045");_ggcfc .IC =_ecgc .Get ("\u0049\u0043");_ggcfc .LL =_ecgc .Get ("\u004c\u004c");
_ggcfc .LLE =_ecgc .Get ("\u004c\u004c\u0045");_ggcfc .Cap =_ecgc .Get ("\u0043\u0061\u0070");_ggcfc .IT =_ecgc .Get ("\u0049\u0054");_ggcfc .LLO =_ecgc .Get ("\u004c\u004c\u004f");_ggcfc .CP =_ecgc .Get ("\u0043\u0050");_ggcfc .Measure =_ecgc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_ggcfc .CO =_ecgc .Get ("\u0043\u004f");return &_ggcfc ,nil ;};

// Encoder returns the font's text encoder.
func (_aegbe pdfFontType0 )Encoder ()_cabg .TextEncoder {return _aegbe ._abfdg };

// SetPatternByName sets a pattern resource specified by keyName.
func (_ddbeg *PdfPageResources )SetPatternByName (keyName _bc .PdfObjectName ,pattern _bc .PdfObject )error {if _ddbeg .Pattern ==nil {_ddbeg .Pattern =_bc .MakeDict ();};_ecgde ,_gagea :=_ddbeg .Pattern .(*_bc .PdfObjectDictionary );if !_gagea {return _bc .ErrTypeError ;
};_ecgde .Set (keyName ,pattern );return nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_gffb *PdfPage )HasXObjectByName (name _bc .PdfObjectName )bool {_ebagb ,_cddff :=_gffb .Resources .XObject .(*_bc .PdfObjectDictionary );if !_cddff {return false ;};if _eecff :=_ebagb .Get (name );_eecff !=nil {return true ;};return false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dgac *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dgac .Base .GetNumComponents ();_fcac :=int (vals [0])*N ;
if _fcac < 0||(_fcac +N -1)>=len (_dgac ._gbdaa ){_dae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcac );return nil ,ErrColorOutOfRange ;};_fcfa :=_dgac ._gbdaa [_fcac :_fcac +N ];
var _beaf []float64 ;for _ ,_eeda :=range _fcfa {_beaf =append (_beaf ,float64 (_eeda )/255.0);};_efdc ,_gcba :=_dgac .Base .ColorFromFloats (_beaf );if _gcba !=nil {return nil ,_gcba ;};return _efdc ,nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bc .StreamEncoder ;Intent _bc .PdfObject ;ImageMask _bc .PdfObject ;Mask _bc .PdfObject ;Matte _bc .PdfObject ;Decode _bc .PdfObject ;Interpolate _bc .PdfObject ;Alternatives _bc .PdfObject ;
SMask _bc .PdfObject ;SMaskInData _bc .PdfObject ;Name _bc .PdfObject ;StructParent _bc .PdfObject ;ID _bc .PdfObject ;OPI _bc .PdfObject ;Metadata _bc .PdfObject ;OC _bc .PdfObject ;Stream []byte ;_egeff *_bc .PdfObjectStream ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_faae *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacaa ,_fcaf :=_bc .GetNumbersAsFloat (objects );
if _fcaf !=nil {return nil ,_fcaf ;};return _faae .ColorFromFloats (_cacaa );};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_afede *PdfPageResources )SetXObjectFormByName (keyName _bc .PdfObjectName ,xform *XObjectForm )error {_edgdc :=xform .ToPdfObject ().(*_bc .PdfObjectStream );_cagee :=_afede .SetXObjectByName (keyName ,_edgdc );return _cagee ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_aafdac *modelManager )GetModelFromPrimitive (primitive _bc .PdfObject )PdfModel {model ,_agdgc :=_aafdac ._ffcaa [primitive ];if !_agdgc {return nil ;};return model ;};func (_egc fontCommon )isCIDFont ()bool {if _egc ._caacf ==""{_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_egc );
};_fffdb :=false ;switch _egc ._caacf {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fffdb =true ;};_dae .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fffdb ,_egc );
return _fffdb ;};func (_ffdg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func _bdeee (_cgddb _bc .PdfObject )(*PdfPattern ,error ){_bgddd :=&PdfPattern {};var _fbcbd *_bc .PdfObjectDictionary ;if _cgba ,_fgcb :=_bc .GetIndirect (_cgddb );
_fgcb {_bgddd ._dacf =_cgba ;_fagcd ,_bfef :=_cgba .PdfObject .(*_bc .PdfObjectDictionary );if !_bfef {_dae .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cgba .PdfObject );
return nil ,_bc .ErrTypeError ;};_fbcbd =_fagcd ;}else if _cgga ,_gfbg :=_bc .GetStream (_cgddb );_gfbg {_bgddd ._dacf =_cgga ;_fbcbd =_cgga .PdfObjectDictionary ;}else {_dae .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_cgddb );
return nil ,_bc .ErrTypeError ;};_cbfed :=_fbcbd .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cbfed ==nil {_dae .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gfdbc ,_ecdgb :=_cbfed .(*_bc .PdfObjectInteger );if !_ecdgb {_dae .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cbfed );
return nil ,_bc .ErrTypeError ;};if *_gfdbc !=1&&*_gfdbc !=2{_dae .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gfdbc );return nil ,_bc .ErrRangeError ;
};_bgddd .PatternType =int64 (*_gfdbc );switch *_gfdbc {case 1:_eaedf ,_ggaad :=_cfeaf (_fbcbd );if _ggaad !=nil {return nil ,_ggaad ;};_eaedf .PdfPattern =_bgddd ;_bgddd ._begg =_eaedf ;return _bgddd ,nil ;case 2:_dagba ,_fbdee :=_deegb (_fbcbd );if _fbdee !=nil {return nil ,_fbdee ;
};_dagba .PdfPattern =_bgddd ;_bgddd ._begg =_dagba ;return _bgddd ,nil ;};return nil ,_ecg .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// Width returns the width of `rect`.
func (_dfded *PdfRectangle )Width ()float64 {return _da .Abs (_dfded .Urx -_dfded .Llx )};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bc .PdfObject ;T _bc .PdfObject ;Operation _bc .PdfObject ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fcef *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_aegdg :=_cbb .NewReader (img .getBase ());_bead :=_ecc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bgdg :=_cbb .NewWriter (_bead );
_ecfbdg :=_da .Pow (2,float64 (img .BitsPerComponent ))-1;_edad :=make ([]uint32 ,3);var (_ecec error ;_agc ,_cfgd ,_ebbff ,_adgc ,_baaa ,_cefdc float64 ;);for {_ecec =_aegdg .ReadSamples (_edad );if _ecec ==_gbe .EOF {break ;}else if _ecec !=nil {return img ,_ecec ;
};_agc =float64 (_edad [0])/_ecfbdg ;_cfgd =float64 (_edad [1])/_ecfbdg ;_ebbff =float64 (_edad [2])/_ecfbdg ;_adgc =_fcef .Matrix [0]*_da .Pow (_agc ,_fcef .Gamma [0])+_fcef .Matrix [3]*_da .Pow (_cfgd ,_fcef .Gamma [1])+_fcef .Matrix [6]*_da .Pow (_ebbff ,_fcef .Gamma [2]);
_baaa =_fcef .Matrix [1]*_da .Pow (_agc ,_fcef .Gamma [0])+_fcef .Matrix [4]*_da .Pow (_cfgd ,_fcef .Gamma [1])+_fcef .Matrix [7]*_da .Pow (_ebbff ,_fcef .Gamma [2]);_cefdc =_fcef .Matrix [2]*_da .Pow (_agc ,_fcef .Gamma [0])+_fcef .Matrix [5]*_da .Pow (_cfgd ,_fcef .Gamma [1])+_fcef .Matrix [8]*_da .Pow (_ebbff ,_fcef .Gamma [2]);
_agc =3.240479*_adgc +-1.537150*_baaa +-0.498535*_cefdc ;_cfgd =-0.969256*_adgc +1.875992*_baaa +0.041556*_cefdc ;_ebbff =0.055648*_adgc +-0.204043*_baaa +1.057311*_cefdc ;_agc =_da .Min (_da .Max (_agc ,0),1.0);_cfgd =_da .Min (_da .Max (_cfgd ,0),1.0);
_ebbff =_da .Min (_da .Max (_ebbff ,0),1.0);_edad [0]=uint32 (_agc *_ecfbdg );_edad [1]=uint32 (_cfgd *_ecfbdg );_edad [2]=uint32 (_ebbff *_ecfbdg );if _ecec =_bgdg .WriteSamples (_edad );_ecec !=nil {return img ,_ecec ;};};return _egbafc (&_bead ),nil ;
};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_gdea *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _gdea ._begg .(*PdfTilingPattern );};

// Add appends a top level outline item to the outline.
func (_debdc *Outline )Add (item *OutlineItem ){_debdc .Entries =append (_debdc .Entries ,item )};

// ToPdfObject implements interface PdfModel.
func (_gaf *PdfActionSubmitForm )ToPdfObject ()_bc .PdfObject {_gaf .PdfAction .ToPdfObject ();_bea :=_gaf ._afdg ;_dfe :=_bea .PdfObject .(*_bc .PdfObjectDictionary );_dfe .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeSubmitForm )));if _gaf .F !=nil {_dfe .Set ("\u0046",_gaf .F .ToPdfObject ());
};_dfe .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gaf .Fields );_dfe .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gaf .Flags );return _bea ;};func _abbbf (_dadedf _bc .PdfObject )(*PdfShading ,error ){_febb :=&PdfShading {};var _cgdeb *_bc .PdfObjectDictionary ;
if _eaef ,_dbdfd :=_bc .GetIndirect (_dadedf );_dbdfd {_febb ._agbee =_eaef ;_gcfdf ,_cfggb :=_eaef .PdfObject .(*_bc .PdfObjectDictionary );if !_cfggb {_dae .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_bc .ErrTypeError ;};_cgdeb =_gcfdf ;}else if _affae ,_ffec :=_bc .GetStream (_dadedf );_ffec {_febb ._agbee =_affae ;_cgdeb =_affae .PdfObjectDictionary ;}else if _faacb ,_egde :=_bc .GetDict (_dadedf );_egde {_febb ._agbee =_faacb ;_cgdeb =_faacb ;
}else {_dae .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_dadedf );return nil ,_bc .ErrTypeError ;};if _cgdeb ==nil {_dae .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ecg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dadedf =_cgdeb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dadedf ==nil {_dae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dadedf =_bc .TraceToDirectObject (_dadedf );_ececf ,_cbgbd :=_dadedf .(*_bc .PdfObjectInteger );if !_cbgbd {_dae .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dadedf );
return nil ,_bc .ErrTypeError ;};if *_ececf < 1||*_ececf > 7{_dae .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_ececf );
return nil ,_bc .ErrTypeError ;};_febb .ShadingType =_ececf ;_dadedf =_cgdeb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _dadedf ==nil {_dae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddedd ,_ggabg :=NewPdfColorspaceFromPdfObject (_dadedf );if _ggabg !=nil {_dae .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ggabg );
return nil ,_ggabg ;};_febb .ColorSpace =_ddedd ;_dadedf =_cgdeb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _dadedf !=nil {_dadedf =_bc .TraceToDirectObject (_dadedf );_eaca ,_cddfg :=_dadedf .(*_bc .PdfObjectArray );if !_cddfg {_dae .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dadedf );
return nil ,_bc .ErrTypeError ;};_febb .Background =_eaca ;};_dadedf =_cgdeb .Get ("\u0042\u0042\u006f\u0078");if _dadedf !=nil {_dadedf =_bc .TraceToDirectObject (_dadedf );_aacbe ,_fdabca :=_dadedf .(*_bc .PdfObjectArray );if !_fdabca {_dae .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dadedf );
return nil ,_bc .ErrTypeError ;};_ffed ,_dbeg :=NewPdfRectangle (*_aacbe );if _dbeg !=nil {_dae .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dbeg );return nil ,_dbeg ;};_febb .BBox =_ffed ;};_dadedf =_cgdeb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _dadedf !=nil {_dadedf =_bc .TraceToDirectObject (_dadedf );_gfegb ,_beafeb :=_dadedf .(*_bc .PdfObjectBool );if !_beafeb {_dae .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dadedf );
return nil ,_bc .ErrTypeError ;};_febb .AntiAlias =_gfegb ;};switch *_ececf {case 1:_ccbfd ,_gcggd :=_bbbdb (_cgdeb );if _gcggd !=nil {return nil ,_gcggd ;};_ccbfd .PdfShading =_febb ;_febb ._cbbab =_ccbfd ;return _febb ,nil ;case 2:_ecaeb ,_abcbg :=_gefaf (_cgdeb );
if _abcbg !=nil {return nil ,_abcbg ;};_ecaeb .PdfShading =_febb ;_febb ._cbbab =_ecaeb ;return _febb ,nil ;case 3:_fbbe ,_aaba :=_cdeaa (_cgdeb );if _aaba !=nil {return nil ,_aaba ;};_fbbe .PdfShading =_febb ;_febb ._cbbab =_fbbe ;return _febb ,nil ;case 4:_fbbcf ,_eeged :=_babfe (_cgdeb );
if _eeged !=nil {return nil ,_eeged ;};_fbbcf .PdfShading =_febb ;_febb ._cbbab =_fbbcf ;return _febb ,nil ;case 5:_fbgaf ,_cdbgac :=_cafb (_cgdeb );if _cdbgac !=nil {return nil ,_cdbgac ;};_fbgaf .PdfShading =_febb ;_febb ._cbbab =_fbgaf ;return _febb ,nil ;
case 6:_gfdfg ,_cebfc :=_edbda (_cgdeb );if _cebfc !=nil {return nil ,_cebfc ;};_gfdfg .PdfShading =_febb ;_febb ._cbbab =_gfdfg ;return _febb ,nil ;case 7:_fdfbb ,_cffac :=_afab (_cgdeb );if _cffac !=nil {return nil ,_cffac ;};_fdfbb .PdfShading =_febb ;
_febb ._cbbab =_fdfbb ;return _febb ,nil ;};return nil ,_ecg .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_gafc *LTV )buildCertChain (_bdab ,_bgecba []*_e .Certificate )([]*_e .Certificate ,map[string ]*_e .Certificate ,error ){_acfac :=map[string ]*_e .Certificate {};for _ ,_aebg :=range _bdab {_acfac [_aebg .Subject .CommonName ]=_aebg ;
};_fbegbe :=_bdab ;for _ ,_gbfd :=range _bgecba {_fdac :=_gbfd .Subject .CommonName ;if _ ,_dbbcf :=_acfac [_fdac ];_dbbcf {continue ;};_acfac [_fdac ]=_gbfd ;_fbegbe =append (_fbegbe ,_gbfd );};if len (_fbegbe )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _cdbba error ;for _bcag :=_fbegbe [0];_bcag !=nil &&!_gafc .CertClient .IsCA (_bcag );{_ebeca ,_dfef :=_acfac [_bcag .Issuer .CommonName ];if !_dfef {if _ebeca ,_cdbba =_gafc .CertClient .GetIssuer (_bcag );_cdbba !=nil {_dae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_cdbba );
break ;};_acfac [_bcag .Issuer .CommonName ]=_ebeca ;_fbegbe =append (_fbegbe ,_ebeca );};_bcag =_ebeca ;};return _fbegbe ,_acfac ,nil ;};func (_cdgcg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _daaef :=_cdgcg ._feec ;_daaef !=nil {return _daaef ;
};return _cdgcg ._efde ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bc .PdfObject ;Movie _bc .PdfObject ;A _bc .PdfObject ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_fga :=NewPdfAnnotation ();_cbed :=&PdfAnnotationRichMedia {};_cbed .PdfAnnotation =_fga ;_fga .SetContext (_cbed );return _cbed ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ddcdd *PdfShadingType4 )ToPdfObject ()_bc .PdfObject {_ddcdd .PdfShading .ToPdfObject ();_cbfbg ,_abbbe :=_ddcdd .getShadingDict ();if _abbbe !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ddcdd .BitsPerCoordinate !=nil {_cbfbg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ddcdd .BitsPerCoordinate );};if _ddcdd .BitsPerComponent !=nil {_cbfbg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ddcdd .BitsPerComponent );
};if _ddcdd .BitsPerFlag !=nil {_cbfbg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ddcdd .BitsPerFlag );};if _ddcdd .Decode !=nil {_cbfbg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ddcdd .Decode );};if _ddcdd .Function !=nil {if len (_ddcdd .Function )==1{_cbfbg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddcdd .Function [0].ToPdfObject ());
}else {_dddga :=_bc .MakeArray ();for _ ,_acebg :=range _ddcdd .Function {_dddga .Append (_acebg .ToPdfObject ());};_cbfbg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dddga );};};return _ddcdd ._agbee ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_geef *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_geef .HiVal )};};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gbe .ReadSeeker )(*PdfReader ,error ){const _cdafe ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _gaaeg (rs ,&ReaderOpts {},false ,_cdafe );};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_egagg *LTV )EnableAll (extraCerts []*_e .Certificate )error {_cdafb :=_egagg ._fgff ._cace .AcroForm ;for _ ,_fbec :=range _cdafb .AllFields (){_bgecb ,_ :=_fbec .GetContext ().(*PdfFieldSignature );if _bgecb ==nil {continue ;};_eaffc :=_bgecb .V ;
if _gbee :=_egagg .validateSig (_eaffc );_gbee !=nil {_dae .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gbee );
};if _efcbc :=_egagg .Enable (_eaffc ,extraCerts );_efcbc !=nil {return _efcbc ;};};return nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_geagef *PdfTilingPattern )SetContentStream (content []byte ,encoder _bc .StreamEncoder )error {_edafe ,_cgbbde :=_geagef ._dacf .(*_bc .PdfObjectStream );if !_cgbbde {_dae .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_geagef ._dacf );
return _bc .ErrTypeError ;};if encoder ==nil {encoder =_bc .NewRawEncoder ();};_cccec :=_edafe .PdfObjectDictionary ;_abcbcc :=encoder .MakeStreamDict ();_cccec .Merge (_abcbcc );_bcgfa ,_facd :=encoder .EncodeBytes (content );if _facd !=nil {return _facd ;
};_cccec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bc .MakeInteger (int64 (len (_bcgfa ))));_edafe .Stream =_bcgfa ;return nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_eddfbe *Image )ToGoImage ()(_gg .Image ,error ){_dae .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_bfcg ,_aeedc :=_ecc .NewImage (int (_eddfbe .Width ),int (_eddfbe .Height ),int (_eddfbe .BitsPerComponent ),_eddfbe .ColorComponents ,_eddfbe .Data ,_eddfbe ._ggfad ,_eddfbe ._ggeec );
if _aeedc !=nil {return nil ,_aeedc ;};return _bfcg ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fdefe *PdfFontDescriptor )ToPdfObject ()_bc .PdfObject {_dbde :=_bc .MakeDict ();if _fdefe ._effbe ==nil {_fdefe ._effbe =&_bc .PdfIndirectObject {};};_fdefe ._effbe .PdfObject =_dbde ;_dbde .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _fdefe .FontName !=nil {_dbde .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fdefe .FontName );};if _fdefe .FontFamily !=nil {_dbde .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fdefe .FontFamily );};if _fdefe .FontStretch !=nil {_dbde .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fdefe .FontStretch );
};if _fdefe .FontWeight !=nil {_dbde .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fdefe .FontWeight );};if _fdefe .Flags !=nil {_dbde .Set ("\u0046\u006c\u0061g\u0073",_fdefe .Flags );};if _fdefe .FontBBox !=nil {_dbde .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fdefe .FontBBox );
};if _fdefe .ItalicAngle !=nil {_dbde .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fdefe .ItalicAngle );};if _fdefe .Ascent !=nil {_dbde .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fdefe .Ascent );};if _fdefe .Descent !=nil {_dbde .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fdefe .Descent );
};if _fdefe .Leading !=nil {_dbde .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fdefe .Leading );};if _fdefe .CapHeight !=nil {_dbde .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fdefe .CapHeight );};if _fdefe .XHeight !=nil {_dbde .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fdefe .XHeight );
};if _fdefe .StemV !=nil {_dbde .Set ("\u0053\u0074\u0065m\u0056",_fdefe .StemV );};if _fdefe .StemH !=nil {_dbde .Set ("\u0053\u0074\u0065m\u0048",_fdefe .StemH );};if _fdefe .AvgWidth !=nil {_dbde .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fdefe .AvgWidth );
};if _fdefe .MaxWidth !=nil {_dbde .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fdefe .MaxWidth );};if _fdefe .MissingWidth !=nil {_dbde .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fdefe .MissingWidth );};if _fdefe .FontFile !=nil {_dbde .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fdefe .FontFile );
};if _fdefe .FontFile2 !=nil {_dbde .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fdefe .FontFile2 );};if _fdefe .FontFile3 !=nil {_dbde .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fdefe .FontFile3 );};if _fdefe .CharSet !=nil {_dbde .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fdefe .CharSet );
};if _fdefe .Style !=nil {_dbde .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fdefe .FontName );};if _fdefe .Lang !=nil {_dbde .Set ("\u004c\u0061\u006e\u0067",_fdefe .Lang );};if _fdefe .FD !=nil {_dbde .Set ("\u0046\u0044",_fdefe .FD );};
if _fdefe .CIDSet !=nil {_dbde .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fdefe .CIDSet );};return _fdefe ._effbe ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_dacbg *PdfPageResources )AddExtGState (gsName _bc .PdfObjectName ,gsDict _bc .PdfObject )error {if _dacbg .ExtGState ==nil {_dacbg .ExtGState =_bc .MakeDict ();};_bbfd :=_dacbg .ExtGState ;_cdeeb ,_gdadb :=_bc .TraceToDirectObject (_bbfd ).(*_bc .PdfObjectDictionary );
if !_gdadb {_dae .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bbfd ,_bc .TraceToDirectObject (_bbfd ));
return _bc .ErrTypeError ;};_cdeeb .Set (gsName ,gsDict );return nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bc .StreamEncoder )(*XObjectImage ,error ){_eeecd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_eeecd ,img ,cs ,encoder );};func (_fagg *DSS )generateHashMap (_ggbe []*_bc .PdfObjectStream )(map[string ]*_bc .PdfObjectStream ,error ){_agae :=map[string ]*_bc .PdfObjectStream {};
for _ ,_dccag :=range _ggbe {_dcge ,_ceda :=_bc .DecodeStream (_dccag );if _ceda !=nil {return nil ,_ceda ;};_dceb ,_ceda :=_dcdea (_dcge );if _ceda !=nil {return nil ,_ceda ;};_agae [string (_dceb )]=_dccag ;};return _agae ,nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_cagc :=NewPdfAnnotation ();_acb :=&PdfAnnotationSound {};_acb .PdfAnnotation =_cagc ;_acb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cagc .SetContext (_acb );return _acb ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fgde pdfCIDFontType0 )GetCharMetrics (code _cabg .CharCode )(_dg .CharMetrics ,bool ){_gcaea :=_fgde ._bbggc ;if _gfadc ,_deeg :=_fgde ._gegbb [code ];_deeg {_gcaea =_gfadc ;};return _dg .CharMetrics {Wx :_gcaea },true ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cggbg *PdfColorspaceDeviceN )GetNumComponents ()int {return _cggbg .ColorantNames .Len ()};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_cceab *pdfFontSimple )SetEncoder (encoder _cabg .TextEncoder ){_cceab ._bfdd =encoder };

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_fgabd *LTV )EnableChain (chain []*_e .Certificate )error {return _fgabd .enable (nil ,chain ,"")};func (_abbaa *pdfFontSimple )updateStandard14Font (){_bffe ,_cfda :=_abbaa .Encoder ().(_cabg .SimpleEncoder );if !_cfda {_dae .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_abbaa .Encoder (),_abbaa );
return ;};_bbcfg :=_bffe .Charcodes ();_abbaa ._cddc =make (map[_cabg .CharCode ]float64 ,len (_bbcfg ));for _ ,_dbad :=range _bbcfg {_afff ,_ :=_bffe .CharcodeToRune (_dbad );_ccce ,_ :=_abbaa ._dbgc .Read (_afff );_abbaa ._cddc [_dbad ]=_ccce .Wx ;};
};

// ToPdfObject implements interface PdfModel.
func (_dfcd *PdfAnnotationPopup )ToPdfObject ()_bc .PdfObject {_dfcd .PdfAnnotation .ToPdfObject ();_affb :=_dfcd ._gdfa ;_dbca :=_affb .PdfObject .(*_bc .PdfObjectDictionary );_dbca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0050\u006f\u0070u\u0070"));
_dbca .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dfcd .Parent );_dbca .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dfcd .Open );return _affb ;};func (_cddd *PdfReader )newPdfAnnotationCircleFromDict (_dbc *_bc .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ddbf :=PdfAnnotationCircle {};
_fbg ,_fae :=_cddd .newPdfAnnotationMarkupFromDict (_dbc );if _fae !=nil {return nil ,_fae ;};_ddbf .PdfAnnotationMarkup =_fbg ;_ddbf .BS =_dbc .Get ("\u0042\u0053");_ddbf .IC =_dbc .Get ("\u0049\u0043");_ddbf .BE =_dbc .Get ("\u0042\u0045");_ddbf .RD =_dbc .Get ("\u0052\u0044");
return &_ddbf ,nil ;};func _daaeg (_gbeac _bc .PdfObject ){_dae .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_gbeac ,_gbeac .String ());if _abcf ,_fbbb :=_gbeac .(*_bc .PdfObjectStream );_fbbb {_caaeb ,_ageee :=_bc .DecodeStream (_abcf );
if _ageee !=nil {_dae .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_ageee );return ;};_dae .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_caaeb );}else if _bafff ,_aedge :=_gbeac .(*_bc .PdfIndirectObject );
_aedge {_dae .Log .Debug ("\u0025\u0054\u0020%\u0076",_bafff .PdfObject ,_bafff .PdfObject );_dae .Log .Debug ("\u0025\u0073",_bafff .PdfObject .String ());};};

// ToPdfObject implements interface PdfModel.
func (_gca *PdfActionTrans )ToPdfObject ()_bc .PdfObject {_gca .PdfAction .ToPdfObject ();_eebe :=_gca ._afdg ;_cgb :=_eebe .PdfObject .(*_bc .PdfObjectDictionary );_cgb .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeTrans )));_cgb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gca .Trans );
return _eebe ;};

// String returns a string that describes `font`.
func (_agcg *PdfFont )String ()string {_daga :="";if _agcg ._adffg .Encoder ()!=nil {_daga =_agcg ._adffg .Encoder ().String ();};return _dc .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_agcg ._adffg ,_agcg .baseFields ().coreString (),_daga );
};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bc .PdfObjectString ;Q *_bc .PdfObjectInteger ;DS *_bc .PdfObjectString ;RV _bc .PdfObject ;};func _gdcb (_cffce map[_dg .GID ]int ,_gccg uint16 )*_bc .PdfObjectArray {_fdefa :=&_bc .PdfObjectArray {};_gggc :=_dg .GID (_gccg );
for _cedea :=_dg .GID (0);_cedea < _gggc ;{_ccfd ,_dbabd :=_cffce [_cedea ];if !_dbabd {_cedea ++;continue ;};_cdbb :=_cedea ;for _geaged :=_cdbb +1;_geaged < _gggc ;_geaged ++{if _abgc ,_feddg :=_cffce [_geaged ];!_feddg ||_ccfd !=_abgc {break ;};_cdbb =_geaged ;
};_fdefa .Append (_bc .MakeInteger (int64 (_cedea )));_fdefa .Append (_bc .MakeInteger (int64 (_cdbb )));_fdefa .Append (_bc .MakeInteger (int64 (_ccfd )));_cedea =_cdbb +1;};return _fdefa ;};func _ecedb ()_b .Time {_eccage .Lock ();defer _eccage .Unlock ();
return _gccae };

// ToPdfObject returns the PDF representation of the pattern.
func (_beffd *PdfPattern )ToPdfObject ()_bc .PdfObject {_eddcd :=_beffd .getDict ();_eddcd .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_eddcd .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bc .MakeInteger (_beffd .PatternType ));
return _beffd ._dacf ;};

// ToPdfObject implements interface PdfModel.
func (_gacg *PdfAnnotationPolyLine )ToPdfObject ()_bc .PdfObject {_gacg .PdfAnnotation .ToPdfObject ();_acae :=_gacg ._gdfa ;_ebdd :=_acae .PdfObject .(*_bc .PdfObjectDictionary );_gacg .PdfAnnotationMarkup .appendToPdfDictionary (_ebdd );_ebdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_ebdd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gacg .Vertices );_ebdd .SetIfNotNil ("\u004c\u0045",_gacg .LE );_ebdd .SetIfNotNil ("\u0042\u0053",_gacg .BS );_ebdd .SetIfNotNil ("\u0049\u0043",_gacg .IC );_ebdd .SetIfNotNil ("\u0042\u0045",_gacg .BE );
_ebdd .SetIfNotNil ("\u0049\u0054",_gacg .IT );_ebdd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gacg .Measure );return _acae ;};func (_egbd *Image )resampleLowBits (_cadac []uint32 ){_gbbbc :=_ecc .BytesPerLine (int (_egbd .Width ),int (_egbd .BitsPerComponent ),_egbd .ColorComponents );
_gadf :=make ([]byte ,_egbd .ColorComponents *_gbbbc *int (_egbd .Height ));_gbfaa :=int (_egbd .BitsPerComponent )*_egbd .ColorComponents *int (_egbd .Width );_cadec :=uint8 (8);var (_feab ,_eabb int ;_bcgg uint32 ;);for _egdaa :=0;_egdaa < int (_egbd .Height );
_egdaa ++{_eabb =_egdaa *_gbbbc ;for _faab :=0;_faab < _gbfaa ;_faab ++{_bcgg =_cadac [_feab ];_cadec -=uint8 (_egbd .BitsPerComponent );_gadf [_eabb ]|=byte (_bcgg )<<_cadec ;if _cadec ==0{_cadec =8;_eabb ++;};_feab ++;};};_egbd .Data =_gadf ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_fccf OutlineDest )ToPdfObject ()_bc .PdfObject {if (_fccf .PageObj ==nil &&_fccf .Page < 0)||_fccf .Mode ==""{return _bc .MakeNull ();};_cafdg :=_bc .MakeArray ();if _fccf .PageObj !=nil {_cafdg .Append (_fccf .PageObj );}else {_cafdg .Append (_bc .MakeInteger (_fccf .Page ));
};_cafdg .Append (_bc .MakeName (_fccf .Mode ));switch _fccf .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cafdg .Append (_bc .MakeFloat (_fccf .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cafdg .Append (_bc .MakeFloat (_fccf .X ));
case "\u0058\u0059\u005a":_cafdg .Append (_bc .MakeFloat (_fccf .X ));_cafdg .Append (_bc .MakeFloat (_fccf .Y ));_cafdg .Append (_bc .MakeFloat (_fccf .Zoom ));default:_cafdg .Set (1,_bc .MakeName ("\u0046\u0069\u0074"));};return _cafdg ;};

// ToPdfObject implements interface PdfModel.
func (_efc *PdfActionRendition )ToPdfObject ()_bc .PdfObject {_efc .PdfAction .ToPdfObject ();_ccc :=_efc ._afdg ;_eag :=_ccc .PdfObject .(*_bc .PdfObjectDictionary );_eag .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeRendition )));_eag .SetIfNotNil ("\u0052",_efc .R );
_eag .SetIfNotNil ("\u0041\u004e",_efc .AN );_eag .SetIfNotNil ("\u004f\u0050",_efc .OP );_eag .SetIfNotNil ("\u004a\u0053",_efc .JS );return _ccc ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_deee FieldFlag )Mask ()uint32 {return uint32 (_deee )};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bc .PdfObjectStream )(*XObjectForm ,error ){_gcec :=&XObjectForm {};_gcec ._abgdag =stream ;_abbcb :=*(stream .PdfObjectDictionary );_ceecae ,_ecea :=_bc .NewEncoderFromStream (stream );if _ecea !=nil {return nil ,_ecea ;
};_gcec .Filter =_ceecae ;if _acgdd :=_abbcb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_acgdd !=nil {_eagdgd ,_febbg :=_acgdd .(*_bc .PdfObjectName );if !_febbg {return nil ,_ecg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_eagdgd !="\u0046\u006f\u0072\u006d"{_dae .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ecg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _fbgda :=_abbcb .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_fbgda !=nil {_gcec .FormType =_fbgda ;};if _dcafd :=_abbcb .Get ("\u0042\u0042\u006f\u0078");_dcafd !=nil {_gcec .BBox =_dcafd ;};if _efbccc :=_abbcb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_efbccc !=nil {_gcec .Matrix =_efbccc ;};if _gdegc :=_abbcb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdegc !=nil {_gdegc =_bc .TraceToDirectObject (_gdegc );_dafee ,_bfcgb :=_gdegc .(*_bc .PdfObjectDictionary );if !_bfcgb {_dae .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bc .ErrTypeError ;};_aggba ,_efdda :=NewPdfPageResourcesFromDict (_dafee );if _efdda !=nil {_dae .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_efdda ;};_gcec .Resources =_aggba ;_dae .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gcec .Resources );};_gcec .Group =_abbcb .Get ("\u0047\u0072\u006fu\u0070");_gcec .Ref =_abbcb .Get ("\u0052\u0065\u0066");
_gcec .MetaData =_abbcb .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gcec .PieceInfo =_abbcb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gcec .LastModified =_abbcb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_gcec .StructParent =_abbcb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gcec .StructParents =_abbcb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gcec .OPI =_abbcb .Get ("\u004f\u0050\u0049");
_gcec .OC =_abbcb .Get ("\u004f\u0043");_gcec .Name =_abbcb .Get ("\u004e\u0061\u006d\u0065");_gcec .Stream =stream .Stream ;return _gcec ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_bfca *_bc .PdfIndirectObject ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_gcaa *_bc .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_bdba *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_bafa :=_da .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bafa *_bdba .R ()),uint32 (_bafa *_bdba .G ()),uint32 (_bafa *_bdba .B ())};};

// Fill populates `form` with values provided by `provider`.
func (_bebae *PdfAcroForm )Fill (provider FieldValueProvider )error {return _bebae .fill (provider ,nil )};func (_fbgbc *PdfWriter )hasObject (_fdce _bc .PdfObject )bool {_ ,_dfdeg :=_fbgbc ._dbfde [_fdce ];return _dfdeg ;};

// R returns the value of the red component of the color.
func (_defgg *PdfColorDeviceRGB )R ()float64 {return _defgg [0]};

// Encoder returns the font's text encoder.
func (_efcd pdfCIDFontType0 )Encoder ()_cabg .TextEncoder {return _efcd ._bbgcg };

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_bgde :=NewPdfAnnotation ();_gbg :=&PdfAnnotationScreen {};_gbg .PdfAnnotation =_bgde ;_bgde .SetContext (_gbg );return _gbg ;};func (_gge *PdfReader )newPdfActionSoundFromDict (_eed *_bc .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_eed .Get ("\u0053\u006f\u0075n\u0064"),Volume :_eed .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_eed .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_eed .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_eed .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bc .PdfObject ;Mac _bc .PdfObject ;Unix _bc .PdfObject ;NewWindow _bc .PdfObject ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cafeg ,_cbbfcg :=_cd .ParsePdfTime (dateStr );if _cbbfcg !=nil {return PdfDate {},_cbbfcg ;};return NewPdfDateFromTime (_cafeg );};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_dbfca *_fa .Document )error ;};

// ToPdfObject implements interface PdfModel.
func (_faf *PdfActionMovie )ToPdfObject ()_bc .PdfObject {_faf .PdfAction .ToPdfObject ();_cda :=_faf ._afdg ;_bbf :=_cda .PdfObject .(*_bc .PdfObjectDictionary );_bbf .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeMovie )));_bbf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_faf .Annotation );
_bbf .SetIfNotNil ("\u0054",_faf .T );_bbf .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_faf .Operation );return _cda ;};func (_baeac *PdfWriter )writeAcroFormFields ()error {if _baeac ._ggbce ==nil {return nil ;};_dae .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_fbfeb :=_baeac ._ggbce .ToPdfObject ();_dae .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fbfeb );_baeac ._bdbgc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fbfeb );_aecfg :=_baeac .addObjects (_fbfeb );
if _aecfg !=nil {return _aecfg ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cffd *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfgb :=vals [0];if _cfgb < 0.0||_cfgb > 1.0{_dae .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _cfgb < 0.0{_cfgb =0.0;}else if _cfgb > 1.0{_cfgb =1.0;};return NewPdfColorDeviceGray (_cfgb ),nil ;};

// Add appends an outline item as a child of the current outline item.
func (_cgadd *OutlineItem )Add (item *OutlineItem ){_cgadd .Entries =append (_cgadd .Entries ,item )};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gdegg :=PdfWriter {};_gdegg ._dbfde =map[_bc .PdfObject ]struct{}{};_gdegg ._bcbab =[]_bc .PdfObject {};_gdegg ._bdgd =map[_bc .PdfObject ][]*_bc .PdfObjectDictionary {};_gdegg ._cgeae =map[_bc .PdfObject ]struct{}{};_gdegg ._efeae .Major =1;
_gdegg ._efeae .Minor =3;_fdadfe :=_bc .MakeDict ();_fdgba :=[]struct{_dgcfe _bc .PdfObjectName ;_cdbfe string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_dbafd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_dbbae ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_cfdae ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_bbgbb ()},{"\u0054\u0069\u0074l\u0065",_ggffa ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_deacd ()}};
for _ ,_eafac :=range _fdgba {if _eafac ._cdbfe !=""{_fdadfe .Set (_eafac ._dgcfe ,_bc .MakeString (_eafac ._cdbfe ));};};if _bbbbd :=_ecedb ();!_bbbbd .IsZero (){if _ffeda ,_ecfdg :=NewPdfDateFromTime (_bbbbd );_ecfdg ==nil {_fdadfe .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffeda .ToPdfObject ());
};};if _dcefb :=_dbafge ();!_dcefb .IsZero (){if _abbeg ,_afgae :=NewPdfDateFromTime (_dcefb );_afgae ==nil {_fdadfe .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_abbeg .ToPdfObject ());};};_bcdab :=_bc .PdfIndirectObject {};_bcdab .PdfObject =_fdadfe ;
_gdegg ._eefa =&_bcdab ;_gdegg .addObject (&_bcdab );_dbecg :=_bc .PdfIndirectObject {};_fbcab :=_bc .MakeDict ();_fbcab .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_dbecg .PdfObject =_fbcab ;_gdegg ._cbdaa =&_dbecg ;
_gdegg .addObject (_gdegg ._cbdaa );_gbdbc ,_dedcg :=_afaaf ("\u0077");if _dedcg !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dedcg );};_gdegg ._ddccd =_gbdbc ;_cbeda :=_bc .PdfIndirectObject {};_agbbe :=_bc .MakeDict ();_agbbe .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0050\u0061\u0067e\u0073"));
_caeee :=_bc .PdfObjectArray {};_agbbe .Set ("\u004b\u0069\u0064\u0073",&_caeee );_agbbe .Set ("\u0043\u006f\u0075n\u0074",_bc .MakeInteger (0));_cbeda .PdfObject =_agbbe ;_gdegg ._gagfc =&_cbeda ;_gdegg ._deacf =map[_bc .PdfObject ]struct{}{};_gdegg .addObject (_gdegg ._gagfc );
_fbcab .Set ("\u0050\u0061\u0067e\u0073",&_cbeda );_gdegg ._bdbgc =_fbcab ;_dae .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_dbecg );return _gdegg ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bc .PdfObject ;GetContainingPdfObject ()_bc .PdfObject ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_eeadf ,_cgdd :=_eege (basefont );if _cgdd !=nil {return nil ,_cgdd ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_eeadf ._bfdd =_cabg .NewWinAnsiEncoder ();};return &PdfFont {_adffg :&_eeadf },nil ;
};func _egfa (_gfff _bc .PdfObject )(*PdfColorspaceCalRGB ,error ){_fceg :=NewPdfColorspaceCalRGB ();if _fgcf ,_acdg :=_gfff .(*_bc .PdfIndirectObject );_acdg {_fceg ._adgb =_fgcf ;};_gfff =_bc .TraceToDirectObject (_gfff );_deagd ,_acgc :=_gfff .(*_bc .PdfObjectArray );
if !_acgc {return nil ,_dc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _deagd .Len ()!=2{return nil ,_dc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gfff =_bc .TraceToDirectObject (_deagd .Get (0));_egge ,_acgc :=_gfff .(*_bc .PdfObjectName );if !_acgc {return nil ,_dc .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_egge !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_dc .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gfff =_bc .TraceToDirectObject (_deagd .Get (1));
_fbaa ,_acgc :=_gfff .(*_bc .PdfObjectDictionary );if !_acgc {return nil ,_dc .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_gfff =_fbaa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gfff =_bc .TraceToDirectObject (_gfff );_aab ,_acgc :=_gfff .(*_bc .PdfObjectArray );if !_acgc {return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _aab .Len ()!=3{return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_aacb ,_dbdb :=_aab .GetAsFloat64Slice ();
if _dbdb !=nil {return nil ,_dbdb ;};_fceg .WhitePoint =_aacb ;_gfff =_fbaa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gfff !=nil {_gfff =_bc .TraceToDirectObject (_gfff );_ebedc ,_fggc :=_gfff .(*_bc .PdfObjectArray );if !_fggc {return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _ebedc .Len ()!=3{return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_geed ,_defa :=_ebedc .GetAsFloat64Slice ();
if _defa !=nil {return nil ,_defa ;};_fceg .BlackPoint =_geed ;};_gfff =_fbaa .Get ("\u0047\u0061\u006dm\u0061");if _gfff !=nil {_gfff =_bc .TraceToDirectObject (_gfff );_bfgg ,_cbbed :=_gfff .(*_bc .PdfObjectArray );if !_cbbed {return nil ,_dc .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _bfgg .Len ()!=3{return nil ,_dc .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_gfdba ,_gdgf :=_bfgg .GetAsFloat64Slice ();if _gdgf !=nil {return nil ,_gdgf ;
};_fceg .Gamma =_gfdba ;};_gfff =_fbaa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _gfff !=nil {_gfff =_bc .TraceToDirectObject (_gfff );_aaag ,_eabgb :=_gfff .(*_bc .PdfObjectArray );if !_eabgb {return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _aaag .Len ()!=9{_dae .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_aaag .String ());return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_egbg ,_fagbc :=_aaag .GetAsFloat64Slice ();if _fagbc !=nil {return nil ,_fagbc ;};_fceg .Matrix =_egbg ;};return _fceg ,nil ;};func _caafbb (_gdefc *_bc .PdfIndirectObject )(*PdfOutline ,error ){_dcaf ,_fdecf :=_gdefc .PdfObject .(*_bc .PdfObjectDictionary );
if !_fdecf {return nil ,_dc .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fdabg :=NewPdfOutline ();if _ffffb :=_dcaf .Get ("\u0054\u0079\u0070\u0065");
_ffffb !=nil {_feedg ,_abgda :=_ffffb .(*_bc .PdfObjectName );if _abgda {if *_feedg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_feedg );
};};};if _cagdg :=_dcaf .Get ("\u0043\u006f\u0075n\u0074");_cagdg !=nil {_ebdga ,_afgeg :=_bc .GetNumberAsInt64 (_cagdg );if _afgeg !=nil {return nil ,_afgeg ;};_fdabg .Count =&_ebdga ;};return _fdabg ,nil ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_eggcf *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ecg .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_eggcf .S =subtype ;return nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_aafae *PdfPage )AppendContentStream (contentStr string )error {_cdacd ,_dacda :=_aafae .GetContentStreams ();if _dacda !=nil {return _dacda ;};if len (_cdacd )==0{_cdacd =[]string {contentStr };return _aafae .SetContentStreams (_cdacd ,_bc .NewFlateEncoder ());
};var _gdagb _bg .Buffer ;_gdagb .WriteString (_cdacd [len (_cdacd )-1]);_gdagb .WriteString ("\u000a");_gdagb .WriteString (contentStr );_cdacd [len (_cdacd )-1]=_gdagb .String ();return _aafae .SetContentStreams (_cdacd ,_bc .NewFlateEncoder ());};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_afdf :_bc .MakeDict (),ColorComponents :colorComponents };
};func _beg (_fbb _bc .PdfObject )(*PdfFilespec ,error ){if _fbb ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_fbb );};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cc :=NewPdfAction ();_daa :=&PdfActionThread {};_daa .PdfAction =_cc ;_cc .SetContext (_daa );return _daa ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_eded :_bc .MakeIndirectObject (_bc .MakeDict ())};};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_dbed *PdfWriter )ApplyStandard (optimizer StandardApplier ){_dbed ._egad =optimizer };

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_afdc *DSS )ToPdfObject ()_bc .PdfObject {_fcfbb :=_afdc ._ggdae .PdfObject .(*_bc .PdfObjectDictionary );_fcfbb .Clear ();_bdbe :=_bc .MakeDict ();for _cegba ,_dfad :=range _afdc .VRI {_bdbe .Set (*_bc .MakeName (_cegba ),_dfad .ToPdfObject ());
};_fcfbb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_eacd (_afdc .Certs ));_fcfbb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_eacd (_afdc .OCSPs ));_fcfbb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_eacd (_afdc .CRLs ));_fcfbb .Set ("\u0056\u0052\u0049",_bdbe );
return _afdc ._ggdae ;};func (_fedc *PdfAnnotation )String ()string {_degd :="";_aeab ,_fac :=_fedc .ToPdfObject ().(*_bc .PdfIndirectObject );if _fac {_degd =_dc .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fedc ._ccb ,_aeab .PdfObject .String ());
};return _degd ;};func _dcfg (_cdbga _bc .PdfObject )(*PdfColorspaceDeviceN ,error ){_gfag :=NewPdfColorspaceDeviceN ();if _dbcc ,_dbcag :=_cdbga .(*_bc .PdfIndirectObject );_dbcag {_gfag ._febd =_dbcc ;};_cdbga =_bc .TraceToDirectObject (_cdbga );_ddfab ,_bbfbf :=_cdbga .(*_bc .PdfObjectArray );
if !_bbfbf {return nil ,_dc .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _ddfab .Len ()!=4&&_ddfab .Len ()!=5{return nil ,_dc .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_cdbga =_ddfab .Get (0);_dgdbd ,_bbfbf :=_cdbga .(*_bc .PdfObjectName );if !_bbfbf {return nil ,_dc .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dgdbd !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_dc .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_cdbga =_ddfab .Get (1);
_cdbga =_bc .TraceToDirectObject (_cdbga );_ggca ,_bbfbf :=_cdbga .(*_bc .PdfObjectArray );if !_bbfbf {return nil ,_dc .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_gfag .ColorantNames =_ggca ;_cdbga =_ddfab .Get (2);_bbba ,_aeddf :=NewPdfColorspaceFromPdfObject (_cdbga );if _aeddf !=nil {return nil ,_aeddf ;};_gfag .AlternateSpace =_bbba ;_dabg ,_aeddf :=_ffea (_ddfab .Get (3));if _aeddf !=nil {return nil ,_aeddf ;
};_gfag .TintTransform =_dabg ;if _ddfab .Len ()==5{_bbfbe ,_dfgdb :=_efec (_ddfab .Get (4));if _dfgdb !=nil {return nil ,_dfgdb ;};_gfag .Attributes =_bbfbe ;};return _gfag ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bc .PdfObjectStream ;OCSP []*_bc .PdfObjectStream ;CRL []*_bc .PdfObjectStream ;TU *_bc .PdfObjectString ;TS *_bc .PdfObjectString ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_cabed PdfModel ;_fegd *_bc .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bc .PdfObjectName ;T *_bc .PdfObjectString ;TU *_bc .PdfObjectString ;TM *_bc .PdfObjectString ;Ff *_bc .PdfObjectInteger ;
V _bc .PdfObject ;DV _bc .PdfObject ;AA _bc .PdfObject ;VariableText *VariableText ;};type pdfFontSimple struct{fontCommon ;_geagf *_bc .PdfIndirectObject ;_cddc map[_cabg .CharCode ]float64 ;_bfdd _cabg .TextEncoder ;_fbdfdc _cabg .TextEncoder ;_efde *PdfFontDescriptor ;


// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bc .PdfObject ;LastChar _bc .PdfObject ;Widths _bc .PdfObject ;Encoding _bc .PdfObject ;_dbgc *_dg .RuneCharSafeMap ;};

// ToPdfObject implements interface PdfModel.
func (_egd *PdfActionURI )ToPdfObject ()_bc .PdfObject {_egd .PdfAction .ToPdfObject ();_eccd :=_egd ._afdg ;_bec :=_eccd .PdfObject .(*_bc .PdfObjectDictionary );_bec .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeURI )));_bec .SetIfNotNil ("\u0055\u0052\u0049",_egd .URI );
_bec .SetIfNotNil ("\u0049\u0073\u004da\u0070",_egd .IsMap );return _eccd ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_acdfa *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_aaecg :=NewPdfOutlineItem ();_aaecg .Title =_bc .MakeEncodedString (_acdfa .Title ,true );_aaecg .Dest =_acdfa .Dest .ToPdfObject ();var _dadga []*PdfOutlineItem ;var _gbaa int64 ;
var _dcbf *PdfOutlineItem ;for _ ,_fcge :=range _acdfa .Entries {_ddbee ,_abac :=_fcge .ToPdfOutlineItem ();_ddbee .Parent =&_aaecg .PdfOutlineTreeNode ;if _dcbf !=nil {_dcbf .Next =&_ddbee .PdfOutlineTreeNode ;_ddbee .Prev =&_dcbf .PdfOutlineTreeNode ;
};_dadga =append (_dadga ,_ddbee );_gbaa +=_abac ;_dcbf =_ddbee ;};_edgab :=len (_dadga );_gbaa +=int64 (_edgab );if _edgab > 0{_aaecg .First =&_dadga [0].PdfOutlineTreeNode ;_aaecg .Last =&_dadga [_edgab -1].PdfOutlineTreeNode ;_aaecg .Count =&_gbaa ;
};return _aaecg ,_gbaa ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bc .PdfObject ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bc .PdfObjectStream )(*XObjectImage ,error ){_ceff :=&XObjectImage {};_ceff ._egeff =stream ;_bgbfa :=*(stream .PdfObjectDictionary );_cfggbg ,_ggeeeed :=_bc .NewEncoderFromStream (stream );if _ggeeeed !=nil {return nil ,_ggeeeed ;
};_ceff .Filter =_cfggbg ;if _ecace :=_bc .TraceToDirectObject (_bgbfa .Get ("\u0057\u0069\u0064t\u0068"));_ecace !=nil {_gcbfg ,_baadf :=_ecace .(*_bc .PdfObjectInteger );if !_baadf {return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fbada :=int64 (*_gcbfg );_ceff .Width =&_fbada ;}else {return nil ,_ecg .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _aafdd :=_bc .TraceToDirectObject (_bgbfa .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_aafdd !=nil {_fbag ,_ecaca :=_aafdd .(*_bc .PdfObjectInteger );if !_ecaca {return nil ,_ecg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ccbbc :=int64 (*_fbag );
_ceff .Height =&_ccbbc ;}else {return nil ,_ecg .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _fcbab :=_bc .TraceToDirectObject (_bgbfa .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_fcbab !=nil {_cafbfc ,_feee :=NewPdfColorspaceFromPdfObject (_fcbab );if _feee !=nil {return nil ,_feee ;};_ceff .ColorSpace =_cafbfc ;}else {_dae .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_ceff .ColorSpace =NewPdfColorspaceDeviceGray ();};if _gfcba :=_bc .TraceToDirectObject (_bgbfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_gfcba !=nil {_abcca ,_gabad :=_gfcba .(*_bc .PdfObjectInteger );
if !_gabad {return nil ,_ecg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bcade :=int64 (*_abcca );_ceff .BitsPerComponent =&_bcade ;};_ceff .Intent =_bgbfa .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_ceff .ImageMask =_bgbfa .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_ceff .Mask =_bgbfa .Get ("\u004d\u0061\u0073\u006b");_ceff .Decode =_bgbfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_ceff .Interpolate =_bgbfa .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_ceff .Alternatives =_bgbfa .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_ceff .SMask =_bgbfa .Get ("\u0053\u004d\u0061s\u006b");_ceff .SMaskInData =_bgbfa .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_ceff .Matte =_bgbfa .Get ("\u004d\u0061\u0074t\u0065");_ceff .Name =_bgbfa .Get ("\u004e\u0061\u006d\u0065");_ceff .StructParent =_bgbfa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ceff .ID =_bgbfa .Get ("\u0049\u0044");
_ceff .OPI =_bgbfa .Get ("\u004f\u0050\u0049");_ceff .Metadata =_bgbfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ceff .OC =_bgbfa .Get ("\u004f\u0043");_ceff .Stream =stream .Stream ;return _ceff ,nil ;};

// ToPdfObject returns a stream object.
func (_eagade *XObjectImage )ToPdfObject ()_bc .PdfObject {_abece :=_eagade ._egeff ;_ccba :=_abece .PdfObjectDictionary ;if _eagade .Filter !=nil {_ccba =_eagade .Filter .MakeStreamDict ();_abece .PdfObjectDictionary =_ccba ;};_ccba .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ccba .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0049\u006d\u0061g\u0065"));_ccba .Set ("\u0057\u0069\u0064t\u0068",_bc .MakeInteger (*(_eagade .Width )));_ccba .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bc .MakeInteger (*(_eagade .Height )));
if _eagade .BitsPerComponent !=nil {_ccba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bc .MakeInteger (*(_eagade .BitsPerComponent )));};if _eagade .ColorSpace !=nil {_ccba .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eagade .ColorSpace .ToPdfObject ());
};_ccba .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_eagade .Intent );_ccba .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_eagade .ImageMask );_ccba .SetIfNotNil ("\u004d\u0061\u0073\u006b",_eagade .Mask );_cfaba :=_ccba .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _eagade .Decode ==nil &&_cfaba {_ccba .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _eagade .Decode !=nil {_ccba .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eagade .Decode );};_ccba .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_eagade .Interpolate );
_ccba .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_eagade .Alternatives );_ccba .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_eagade .SMask );_ccba .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_eagade .SMaskInData );
_ccba .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_eagade .Matte );_ccba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eagade .Name );_ccba .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eagade .StructParent );_ccba .SetIfNotNil ("\u0049\u0044",_eagade .ID );
_ccba .SetIfNotNil ("\u004f\u0050\u0049",_eagade .OPI );_ccba .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eagade .Metadata );_ccba .SetIfNotNil ("\u004f\u0043",_eagade .OC );_ccba .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bc .MakeInteger (int64 (len (_eagade .Stream ))));
_abece .Stream =_eagade .Stream ;return _abece ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject implements interface PdfModel.
func (_cee *PdfAnnotationWatermark )ToPdfObject ()_bc .PdfObject {_cee .PdfAnnotation .ToPdfObject ();_caca :=_cee ._gdfa ;_cfcf :=_caca .PdfObject .(*_bc .PdfObjectDictionary );_cfcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_cfcf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_cee .FixedPrint );return _caca ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecgeg *PdfShadingType6 )ToPdfObject ()_bc .PdfObject {_ecgeg .PdfShading .ToPdfObject ();_aeegf ,_bacfc :=_ecgeg .getShadingDict ();if _bacfc !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecgeg .BitsPerCoordinate !=nil {_aeegf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecgeg .BitsPerCoordinate );};if _ecgeg .BitsPerComponent !=nil {_aeegf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecgeg .BitsPerComponent );
};if _ecgeg .BitsPerFlag !=nil {_aeegf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecgeg .BitsPerFlag );};if _ecgeg .Decode !=nil {_aeegf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecgeg .Decode );};if _ecgeg .Function !=nil {if len (_ecgeg .Function )==1{_aeegf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecgeg .Function [0].ToPdfObject ());
}else {_fffgg :=_bc .MakeArray ();for _ ,_eebcb :=range _ecgeg .Function {_fffgg .Append (_eebcb .ToPdfObject ());};_aeegf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fffgg );};};return _ecgeg ._agbee ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bc .PdfObject ;ColorSpace _bc .PdfObject ;Pattern _bc .PdfObject ;Shading _bc .PdfObject ;XObject _bc .PdfObject ;Font _bc .PdfObject ;ProcSet _bc .PdfObject ;Properties _bc .PdfObject ;_cbead *_bc .PdfObjectDictionary ;
_aadac *PdfPageResourcesColorspaces ;};func (_cgaea *PdfWriter )seekByName (_gadcd _bc .PdfObject ,_defga []string ,_bfeag string )([]_bc .PdfObject ,error ){_dae .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gadcd );
var _gceda []_bc .PdfObject ;if _bddaa ,_dacdaa :=_gadcd .(*_bc .PdfIndirectObject );_dacdaa {return _cgaea .seekByName (_bddaa .PdfObject ,_defga ,_bfeag );};if _eecb ,_debeg :=_gadcd .(*_bc .PdfObjectStream );_debeg {return _cgaea .seekByName (_eecb .PdfObjectDictionary ,_defga ,_bfeag );
};if _gaaa ,_adfc :=_gadcd .(*_bc .PdfObjectDictionary );_adfc {_dae .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fcbccb :=range _gaaa .Keys (){_cagg :=_gaaa .Get (_fcbccb );if string (_fcbccb )==_bfeag {_gceda =append (_gceda ,_cagg );};for _ ,_gbdgf :=range _defga {if string (_fcbccb )==_gbdgf {_dae .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gbdgf );
_dabgad ,_ecgbg :=_cgaea .seekByName (_cagg ,_defga ,_bfeag );if _ecgbg !=nil {return _gceda ,_ecgbg ;};_gceda =append (_gceda ,_dabgad ...);break ;};};};return _gceda ,nil ;};return _gceda ,nil ;};func (_ebgfd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _ebgfd ._afedg .GetCrypter ()!=nil &&!_ebgfd ._afedg .IsAuthenticated (){return nil ,_dc .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bfbdd :=_ebgfd ._bdbea ;_bdgg :=_bfbdd .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _bdgg ==nil {return nil ,nil ;};_dae .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_dcef :=_bc .ResolveReference (_bdgg );
_dae .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_dcef );if _bgdeg :=_bc .IsNullObject (_dcef );_bgdeg {_dae .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_fbgbd ,_gcfe :=_dcef .(*_bc .PdfIndirectObject );if !_gcfe {if _ ,_gdde :=_bc .GetDict (_dcef );!_gdde {_dae .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_dae .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_fbgbd =_bc .MakeIndirectObject (_dcef );};_ecbaf ,_gcfe :=_fbgbd .PdfObject .(*_bc .PdfObjectDictionary );if !_gcfe {return nil ,_ecg .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_dae .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_ecbaf );_ceadb ,_ ,_aafcg :=_ebgfd .buildOutlineTree (_fbgbd ,nil ,nil ,nil );if _aafcg !=nil {return nil ,_aafcg ;};_dae .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ceadb );
return _ceadb ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_cgfb *PdfWriter )SetForms (form *PdfAcroForm )error {_cgfb ._ggbce =form ;return nil };

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cfbca *XObjectForm )SetContentStream (content []byte ,encoder _bc .StreamEncoder )error {_fegdc :=content ;if encoder ==nil {if _cfbca .Filter !=nil {encoder =_cfbca .Filter ;}else {encoder =_bc .NewRawEncoder ();};};_ebfdg ,_fcccg :=encoder .EncodeBytes (_fegdc );
if _fcccg !=nil {return _fcccg ;};_fegdc =_ebfdg ;_cfbca .Stream =_fegdc ;_cfbca .Filter =encoder ;return nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_eecf :=&PdfFilespec {};_eecf ._afeeg =_bc .MakeIndirectObject (_bc .MakeDict ());return _eecf ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_acdad *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _acdad ._dbgcg !=nil {return _acdad ._dbgcg ,nil ;};if _acdad .Annots ==nil {_acdad ._dbgcg =[]*PdfAnnotation {};return nil ,nil ;};if _acdad ._fecff ==nil {_acdad ._dbgcg =[]*PdfAnnotation {};
return nil ,nil ;};_fbca ,_fdadc :=_acdad ._fecff .loadAnnotations (_acdad .Annots );if _fdadc !=nil {return nil ,_fdadc ;};if _fbca ==nil {_acdad ._dbgcg =[]*PdfAnnotation {};};_acdad ._dbgcg =_fbca ;return _acdad ._dbgcg ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_ceaa *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ParserMetadata gets the parser  metadata.
func (_fbbcd *CompliancePdfReader )ParserMetadata ()_bc .ParserMetadata {if _fbbcd ._edbga ==(_bc .ParserMetadata {}){_fbbcd ._edbga ,_ =_fbbcd ._afedg .ParserMetadata ();};return _fbbcd ._edbga ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cefd :=PdfColorCalGray (grayVal );return &_cefd ;};var ErrColorOutOfRange =_ecg .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// String returns a string representation of what flags are set.
func (_cdbgad FieldFlag )String ()string {_dabaf :="";if _cdbgad ==FieldFlagClear {_dabaf ="\u0043\u006c\u0065a\u0072";return _dabaf ;};if _cdbgad &FieldFlagReadOnly > 0{_dabaf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cdbgad &FieldFlagRequired > 0{_dabaf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _cdbgad &FieldFlagNoExport > 0{_dabaf +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cdbgad &FieldFlagNoToggleToOff > 0{_dabaf +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cdbgad &FieldFlagRadio > 0{_dabaf +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _cdbgad &FieldFlagPushbutton > 0{_dabaf +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cdbgad &FieldFlagRadiosInUnision > 0{_dabaf +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";
};if _cdbgad &FieldFlagMultiline > 0{_dabaf +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _cdbgad &FieldFlagPassword > 0{_dabaf +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cdbgad &FieldFlagFileSelect > 0{_dabaf +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";
};if _cdbgad &FieldFlagDoNotScroll > 0{_dabaf +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _cdbgad &FieldFlagComb > 0{_dabaf +="\u007c\u0043\u006fm\u0062";};if _cdbgad &FieldFlagRichText > 0{_dabaf +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";
};if _cdbgad &FieldFlagDoNotSpellCheck > 0{_dabaf +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _cdbgad &FieldFlagCombo > 0{_dabaf +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cdbgad &FieldFlagEdit > 0{_dabaf +="\u007c\u0045\u0064i\u0074";
};if _cdbgad &FieldFlagSort > 0{_dabaf +="\u007c\u0053\u006fr\u0074";};if _cdbgad &FieldFlagMultiSelect > 0{_dabaf +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _cdbgad &FieldFlagCommitOnSelChange > 0{_dabaf +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";
};return _dee .Trim (_dabaf ,"\u007c");};func (_acfbd *pdfFontType0 )subsetRegistered ()error {_beea ,_ecccb :=_acfbd .DescendantFont ._adffg .(*pdfCIDFontType2 );if !_ecccb {_dae .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_acfbd .DescendantFont );
return nil ;};if _beea ==nil {return nil ;};if _beea ._feec ==nil {_dae .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _acfbd ._abfdg ==nil {_dae .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_eeef ,_ecccb :=_bc .GetStream (_beea ._feec .FontFile2 );if !_ecccb {_dae .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ecg .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bccca ,_bedeb :=_bc .DecodeStream (_eeef );if _bedeb !=nil {_dae .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bedeb );
return _bedeb ;};_fdfae ,_bedeb :=_cab .Parse (_bg .NewReader (_bccca ));if _bedeb !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_eeef .Stream ));
return _bedeb ;};var _efdca []rune ;var _ggafg *_cab .Font ;switch _edbfac :=_acfbd ._abfdg .(type ){case *_cabg .TrueTypeFontEncoder :_efdca =_edbfac .RegisteredRunes ();_ggafg ,_bedeb =_fdfae .SubsetKeepRunes (_efdca );if _bedeb !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bedeb );
return _bedeb ;};_edbfac .SubsetRegistered ();case *_cabg .IdentityEncoder :_efdca =_edbfac .RegisteredRunes ();_ecfd :=make ([]_cab .GlyphIndex ,len (_efdca ));for _dbggf ,_cfcfb :=range _efdca {_ecfd [_dbggf ]=_cab .GlyphIndex (_cfcfb );};_ggafg ,_bedeb =_fdfae .SubsetKeepIndices (_ecfd );
if _bedeb !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bedeb );return _bedeb ;};case _cabg .SimpleEncoder :_gadef :=_edbfac .Charcodes ();for _ ,_fbggc :=range _gadef {_bgef ,_eefb :=_edbfac .CharcodeToRune (_fbggc );if !_eefb {_dae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fbggc );
continue ;};_efdca =append (_efdca ,_bgef );};default:return _dc .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_acfbd ._abfdg );
};var _dbbb _bg .Buffer ;_bedeb =_ggafg .Write (&_dbbb );if _bedeb !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bedeb );return _bedeb ;};if _acfbd ._bdbee !=nil {_bbeb :=make (map[_ba .CharCode ]rune ,len (_efdca ));for _ ,_faad :=range _efdca {_dfba ,_faadf :=_acfbd ._abfdg .RuneToCharcode (_faad );
if !_faadf {continue ;};_bbeb [_ba .CharCode (_dfba )]=_faad ;};_acfbd ._bdbee =_ba .NewToUnicodeCMap (_bbeb );};_eeef ,_bedeb =_bc .MakeStream (_dbbb .Bytes (),_bc .NewFlateEncoder ());if _bedeb !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bedeb );
return _bedeb ;};_eeef .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bc .MakeInteger (int64 (_dbbb .Len ())));if _egca ,_bgebc :=_bc .GetStream (_beea ._feec .FontFile2 );_bgebc {*_egca =*_eeef ;}else {_beea ._feec .FontFile2 =_eeef ;};_ccfafe :=_abea ();
if len (_acfbd ._fgdf )> 0{_acfbd ._fgdf =_cgcac (_acfbd ._fgdf ,_ccfafe );};if len (_beea ._fgdf )> 0{_beea ._fgdf =_cgcac (_beea ._fgdf ,_ccfafe );};if len (_acfbd ._gacef )> 0{_acfbd ._gacef =_cgcac (_acfbd ._gacef ,_ccfafe );};if _beea ._feec !=nil {_efea ,_gdfdc :=_bc .GetName (_beea ._feec .FontName );
if _gdfdc &&len (_efea .String ())> 0{_gadbe :=_cgcac (_efea .String (),_ccfafe );_beea ._feec .FontName =_bc .MakeName (_gadbe );};};return nil ;};

// Items returns all children outline items.
func (_fdag *OutlineItem )Items ()[]*OutlineItem {return _fdag .Entries };func _ebcd (_bdfbd _bc .PdfObject )(*fontFile ,error ){_dae .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bdfbd );
_ffgf :=&fontFile {};_bdfbd =_bc .TraceToDirectObject (_bdfbd );_gdec ,_fbfd :=_bdfbd .(*_bc .PdfObjectStream );if !_fbfd {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bdfbd );
return nil ,_bc .ErrTypeError ;};_bfgb :=_gdec .PdfObjectDictionary ;_fbdb ,_ebeg :=_bc .DecodeStream (_gdec );if _ebeg !=nil {return nil ,_ebeg ;};_gdged ,_fbfd :=_bc .GetNameVal (_bfgb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fbfd {_ffgf ._agfe =_gdged ;
if _gdged =="\u0054\u0079\u0070\u0065\u0031\u0043"{_dae .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_ffbf ,_ :=_bc .GetIntVal (_bfgb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_cebab ,_ :=_bc .GetIntVal (_bfgb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ffbf > len (_fbdb ){_ffbf =len (_fbdb );};
if _ffbf +_cebab > len (_fbdb ){_cebab =len (_fbdb )-_ffbf ;};_cegd :=_fbdb [:_ffbf ];var _bgbb []byte ;if _cebab > 0{_bgbb =_fbdb [_ffbf :_ffbf +_cebab ];};if _ffbf > 0&&_cebab > 0{_gffde :=_ffgf .loadFromSegments (_cegd ,_bgbb );if _gffde !=nil {return nil ,_gffde ;
};};return _ffgf ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_aegacb *PdfWriter )SetRotation (rotate int64 )error {_badbdg ,_eccfeg :=_bc .GetDict (_aegacb ._gagfc );if !_eccfeg {return ErrTypeCheck ;};_badbdg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bc .MakeInteger (rotate ));return nil ;};

// Y returns the value of the yellow component of the color.
func (_ggdag *PdfColorDeviceCMYK )Y ()float64 {return _ggdag [2]};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_ebgd *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbaac ,_ccff :=_bc .GetNumbersAsFloat (objects );
if _ccff !=nil {return nil ,_ccff ;};return _ebgd .ColorFromFloats (_bbaac );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fdbff *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fdbff .NumInputs {_dae .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ecg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fdbff ._bdced ==nil {_ceae :=_fdbff .processSamples ();if _ceae !=nil {return nil ,_ceae ;};};_aacgb :=_fdbff .Encode ;if _aacgb ==nil {_aacgb =[]float64 {};
for _fgba :=0;_fgba < len (_fdbff .Size );_fgba ++{_aacgb =append (_aacgb ,0);_aacgb =append (_aacgb ,float64 (_fdbff .Size [_fgba ]-1));};};_gaagc :=_fdbff .Decode ;if _gaagc ==nil {_gaagc =_fdbff .Range ;};_eccddd :=make ([]int ,len (x ));for _efge :=0;
_efge < len (x );_efge ++{_cfebd :=x [_efge ];_daceba :=_da .Min (_da .Max (_cfebd ,_fdbff .Domain [2*_efge ]),_fdbff .Domain [2*_efge +1]);_ebdbg :=_ecc .LinearInterpolate (_daceba ,_fdbff .Domain [2*_efge ],_fdbff .Domain [2*_efge +1],_aacgb [2*_efge ],_aacgb [2*_efge +1]);
_gdca :=_da .Min (_da .Max (_ebdbg ,0),float64 (_fdbff .Size [_efge ]-1));_effbc :=int (_da .Floor (_gdca +0.5));if _effbc < 0{_effbc =0;}else if _effbc > _fdbff .Size [_efge ]{_effbc =_fdbff .Size [_efge ]-1;};_eccddd [_efge ]=_effbc ;};_ebbffa :=_eccddd [0];
for _gcbc :=1;_gcbc < _fdbff .NumInputs ;_gcbc ++{_beac :=_eccddd [_gcbc ];for _bbebf :=0;_bbebf < _gcbc ;_bbebf ++{_beac *=_fdbff .Size [_bbebf ];};_ebbffa +=_beac ;};_ebbffa *=_fdbff .NumOutputs ;var _bfbaf []float64 ;for _bcgaa :=0;_bcgaa < _fdbff .NumOutputs ;
_bcgaa ++{_ceab :=_ebbffa +_bcgaa ;if _ceab >=len (_fdbff ._bdced ){_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_dggee :=_fdbff ._bdced [_ceab ];_aedaf :=_ecc .LinearInterpolate (float64 (_dggee ),0,_da .Pow (2,float64 (_fdbff .BitsPerSample )),_gaagc [2*_bcgaa ],_gaagc [2*_bcgaa +1]);_aagdg :=_da .Min (_da .Max (_aedaf ,_fdbff .Range [2*_bcgaa ]),_fdbff .Range [2*_bcgaa +1]);
_bfbaf =append (_bfbaf ,_aagdg );};return _bfbaf ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cbeae *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_cfegg ,_cccb :=_bc .GetDict (_cbeae ._bdbgc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cccb {_cfegg =_bc .MakeDict ();_cbeae ._bdbgc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_cfegg );
};_ceegd ,_cccb :=_bc .GetDict (_cfegg .Get (_bc .PdfObjectName (extName )));if !_cccb {_ceegd =_bc .MakeDict ();_cfegg .Set (_bc .PdfObjectName (extName ),_ceegd );};if _dbfdc ,_ :=_bc .GetNameVal (_ceegd .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_dbfdc !=baseVersion {_ceegd .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bc .MakeName (baseVersion ));};if _ceceg ,_ :=_bc .GetIntVal (_ceegd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_ceceg !=extLevel {_ceegd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bc .MakeInteger (int64 (extLevel )));};};func (_ecce *Image )samplesAddPadding (_dafc []uint32 )[]uint32 {_gdgda :=_ecc .BytesPerLine (int (_ecce .Width ),int (_ecce .BitsPerComponent ),_ecce .ColorComponents )*(8/int (_ecce .BitsPerComponent ));
_dbaeg :=_gdgda *int (_ecce .Height );if len (_dafc )==_dbaeg {return _dafc ;};_ceefc :=make ([]uint32 ,_dbaeg );_bfdda :=int (_ecce .Width )*_ecce .ColorComponents ;for _cdbf :=0;_cdbf < int (_ecce .Height );_cdbf ++{_fcede :=_cdbf *int (_ecce .Width );
_ffaa :=_cdbf *_gdgda ;for _ebaag :=0;_ebaag < _bfdda ;_ebaag ++{_ceefc [_ffaa +_ebaag ]=_dafc [_fcede +_ebaag ];};};return _ceefc ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_eccfe *PdfReader )CheckAccessRights (password []byte )(bool ,_fe .Permissions ,error ){return _eccfe ._afedg .CheckAccessRights (password );};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _b .Time )(PdfDate ,error ){_efgbd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_caecg ,_ :=_ec .ParseInt (_efgbd [1:3],10,32);_egdcc ,_ :=_ec .ParseInt (_efgbd [4:6],10,32);return PdfDate {_ffcfg :int64 (timeObj .Year ()),_cacfa :int64 (timeObj .Month ()),_ffafa :int64 (timeObj .Day ()),_bgad :int64 (timeObj .Hour ()),_efaef :int64 (timeObj .Minute ()),_dcdec :int64 (timeObj .Second ()),_efbce :_efgbd [0],_bbac :_caecg ,_fcfbe :_egdcc },nil ;
};

// ColorToRGB converts a CalGray color to an RGB color.
func (_deebf *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbggf ,_fgaeb :=color .(*PdfColorCalGray );if !_fgaeb {_dae .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cbggf .Val ();X :=_deebf .WhitePoint [0]*_da .Pow (ANorm ,_deebf .Gamma );Y :=_deebf .WhitePoint [1]*_da .Pow (ANorm ,_deebf .Gamma );
Z :=_deebf .WhitePoint [2]*_da .Pow (ANorm ,_deebf .Gamma );_eccf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dfaae :=-0.969256*X +1.875992*Y +0.041556*Z ;_gfad :=0.055648*X +-0.204043*Y +1.057311*Z ;_eccf =_da .Min (_da .Max (_eccf ,0),1.0);_dfaae =_da .Min (_da .Max (_dfaae ,0),1.0);
_gfad =_da .Min (_da .Max (_gfad ,0),1.0);return NewPdfColorDeviceRGB (_eccf ,_dfaae ,_gfad ),nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_cg .File ,error ){const _ggag ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_edda ,_ebgfef :=_cg .Open (pdfFile );if _ebgfef !=nil {return nil ,nil ,_ebgfef ;};_cebgf ,_ebgfef :=_gaaeg (_edda ,opts ,true ,_ggag );if _ebgfef !=nil {_edda .Close ();return nil ,nil ,_ebgfef ;};return _cebgf ,_edda ,nil ;};func (_agad *PdfReader )newPdfAnnotationTrapNetFromDict (_gcaeb *_bc .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_fcfb :=PdfAnnotationTrapNet {};
return &_fcfb ,nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_bgfdb *PdfWriter )SetCatalogMetadata (meta _bc .PdfObject )error {if meta ==nil {_bgfdb ._bdbgc .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bgcba ,_ffcga :=_bc .GetStream (meta );if !_ffcga {return _ecg .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_bgfdb .addObject (_bgcba );_bgfdb ._bdbgc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgcba );return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_afcc *PdfShadingType1 )ToPdfObject ()_bc .PdfObject {_afcc .PdfShading .ToPdfObject ();_egcbb ,_cafga :=_afcc .getShadingDict ();if _cafga !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _afcc .Domain !=nil {_egcbb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_afcc .Domain );};if _afcc .Matrix !=nil {_egcbb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afcc .Matrix );};if _afcc .Function !=nil {if len (_afcc .Function )==1{_egcbb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afcc .Function [0].ToPdfObject ());
}else {_abgfa :=_bc .MakeArray ();for _ ,_gffcd :=range _afcc .Function {_abgfa .Append (_gffcd .ToPdfObject ());};_egcbb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abgfa );};};return _afcc ._agbee ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_caga *PdfFont )ToPdfObject ()_bc .PdfObject {if _caga ._adffg ==nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bc .MakeNull ();
};return _caga ._adffg .ToPdfObject ();};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_aga :=NewPdfAnnotation ();_fagc :=&PdfAnnotationFileAttachment {};_fagc .PdfAnnotation =_aga ;_fagc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aga .SetContext (_fagc );return _fagc ;
};func (_bffg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_fcdf *_bc .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_eebf :=PdfAnnotationPrinterMark {};_eebf .MN =_fcdf .Get ("\u004d\u004e");return &_eebf ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_fcegb *PdfAcroForm )AllFields ()[]*PdfField {if _fcegb ==nil {return nil ;};var _acccd []*PdfField ;if _fcegb .Fields !=nil {for _ ,_cebg :=range *_fcegb .Fields {_acccd =append (_acccd ,_aabed (_cebg )...);};};return _acccd ;};func _gaec (_eaegcd *PdfField ,_dcgaac _bc .PdfObject ){for _ ,_cdge :=range _eaegcd .Annotations {_cdge .AS =_dcgaac ;
_cdge .ToPdfObject ();};};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// SetOCProperties sets the optional content properties.
func (_efgge *PdfWriter )SetOCProperties (ocProperties _bc .PdfObject )error {_fgga :=_efgge ._bdbgc ;if ocProperties !=nil {_dae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_fgga .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _efgge .addObjects (ocProperties );};return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gcedcg *PdfShadingPattern )ToPdfObject ()_bc .PdfObject {_gcedcg .PdfPattern .ToPdfObject ();_cbdgc :=_gcedcg .getDict ();if _gcedcg .Shading !=nil {_cbdgc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gcedcg .Shading .ToPdfObject ());};if _gcedcg .Matrix !=nil {_cbdgc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gcedcg .Matrix );
};if _gcedcg .ExtGState !=nil {_cbdgc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gcedcg .ExtGState );};return _gcedcg ._dacf ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_bceb *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_cffg :=0.3*_bceb .R ()+0.59*_bceb .G ()+0.11*_bceb .B ();_cffg =_da .Min (_da .Max (_cffg ,0.0),1.0);return NewPdfColorDeviceGray (_cffg );};

// MergePageWith appends page content to source Pdf file page content.
func (_faea *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ebgg :=pageNum -1;var _ebed *PdfPage ;for _efg ,_ffeb :=range _faea ._dgab {if _efg ==_ebgg {_ebed =_ffeb ;};};if _ebed ==nil {return _dc .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _ebed ._eadb !=nil &&_ebed ._eadb .GetParser ()==_faea ._cace ._afedg {_ebed =_ebed .Duplicate ();_faea ._dgab [_ebgg ]=_ebed ;};page =page .Duplicate ();_adefa (page );_efeg :=_bad (_ebed );_eaae :=_bad (page );_bbbcd :=make (map[_bc .PdfObjectName ]_bc .PdfObjectName );
for _ffag :=range _eaae {if _ ,_dffa :=_efeg [_ffag ];_dffa {for _cfg :=1;true ;_cfg ++{_fbbg :=_bc .PdfObjectName (string (_ffag )+_ec .Itoa (_cfg ));if _ ,_abba :=_efeg [_fbbg ];!_abba {_bbbcd [_ffag ]=_fbbg ;break ;};};};};_aded ,_gegc :=page .GetContentStreams ();
if _gegc !=nil {return _gegc ;};_caeb ,_gegc :=_ebed .GetContentStreams ();if _gegc !=nil {return _gegc ;};for _badf ,_dfag :=range _aded {for _gace ,_cfbg :=range _bbbcd {_dfag =_dee .Replace (_dfag ,"\u002f"+string (_gace ),"\u002f"+string (_cfbg ),-1);
};_aded [_badf ]=_dfag ;};_caeb =append (_caeb ,_aded ...);if _aeca :=_ebed .SetContentStreams (_caeb ,_bc .NewFlateEncoder ());_aeca !=nil {return _aeca ;};_ebed ._dbgcg =append (_ebed ._dbgcg ,page ._dbgcg ...);if _ebed .Resources ==nil {_ebed .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_ebed .Resources .Font =_faea .mergeResources (_ebed .Resources .Font ,page .Resources .Font ,_bbbcd );_ebed .Resources .XObject =_faea .mergeResources (_ebed .Resources .XObject ,page .Resources .XObject ,_bbbcd );_ebed .Resources .Properties =_faea .mergeResources (_ebed .Resources .Properties ,page .Resources .Properties ,_bbbcd );
if _ebed .Resources .ProcSet ==nil {_ebed .Resources .ProcSet =page .Resources .ProcSet ;};_ebed .Resources .Shading =_faea .mergeResources (_ebed .Resources .Shading ,page .Resources .Shading ,_bbbcd );_ebed .Resources .ExtGState =_faea .mergeResources (_ebed .Resources .ExtGState ,page .Resources .ExtGState ,_bbbcd );
};_gbece ,_gegc :=_ebed .GetMediaBox ();if _gegc !=nil {return _gegc ;};_fbef ,_gegc :=page .GetMediaBox ();if _gegc !=nil {return _gegc ;};var _geec bool ;if _gbece .Llx > _fbef .Llx {_gbece .Llx =_fbef .Llx ;_geec =true ;};if _gbece .Lly > _fbef .Lly {_gbece .Lly =_fbef .Lly ;
_geec =true ;};if _gbece .Urx < _fbef .Urx {_gbece .Urx =_fbef .Urx ;_geec =true ;};if _gbece .Ury < _fbef .Ury {_gbece .Ury =_fbef .Ury ;_geec =true ;};if _geec {_ebed .MediaBox =_gbece ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbgb *PdfAnnotationMovie )ToPdfObject ()_bc .PdfObject {_fbgb .PdfAnnotation .ToPdfObject ();_gacbe :=_fbgb ._gdfa ;_baga :=_gacbe .PdfObject .(*_bc .PdfObjectDictionary );_baga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u004d\u006f\u0076i\u0065"));
_baga .SetIfNotNil ("\u0054",_fbgb .T );_baga .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_fbgb .Movie );_baga .SetIfNotNil ("\u0041",_fbgb .A );return _gacbe ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_egdf *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _egdf .UnderlyingCS ==nil {return nil ,_ecg .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _egdf .UnderlyingCS .ColorFromFloats (vals );};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject implements interface PdfModel.
func (_bd *PdfActionGoToR )ToPdfObject ()_bc .PdfObject {_bd .PdfAction .ToPdfObject ();_bba :=_bd ._afdg ;_dgg :=_bba .PdfObject .(*_bc .PdfObjectDictionary );_dgg .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeGoToR )));if _bd .F !=nil {_dgg .Set ("\u0046",_bd .F .ToPdfObject ());
};_dgg .SetIfNotNil ("\u0044",_bd .D );_dgg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bd .NewWindow );return _bba ;};func _afae (_feeg _bc .PdfObject )(*PdfColorspaceICCBased ,error ){_ggef :=&PdfColorspaceICCBased {};if _edee ,_aaaab :=_feeg .(*_bc .PdfIndirectObject );
_aaaab {_ggef ._dffgg =_edee ;};_feeg =_bc .TraceToDirectObject (_feeg );_afgb ,_ebdb :=_feeg .(*_bc .PdfObjectArray );if !_ebdb {return nil ,_dc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afgb .Len ()!=2{return nil ,_dc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_feeg =_bc .TraceToDirectObject (_afgb .Get (0));_agcb ,_ebdb :=_feeg .(*_bc .PdfObjectName );if !_ebdb {return nil ,_dc .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_agcb !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_dc .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_feeg =_afgb .Get (1);
_dbfe ,_ebdb :=_bc .GetStream (_feeg );if !_ebdb {_dae .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_feeg );
return nil ,_dc .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_adedf :=_dbfe .PdfObjectDictionary ;_fddf ,_ebdb :=_adedf .Get ("\u004e").(*_bc .PdfObjectInteger );
if !_ebdb {return nil ,_dc .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fddf !=1&&*_fddf !=3&&*_fddf !=4{return nil ,_dc .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_ggef .N =int (*_fddf );if _dfbe :=_adedf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dfbe !=nil {_fdgg ,_fbegb :=NewPdfColorspaceFromPdfObject (_dfbe );if _fbegb !=nil {return nil ,_fbegb ;};_ggef .Alternate =_fdgg ;};if _agfg :=_adedf .Get ("\u0052\u0061\u006eg\u0065");
_agfg !=nil {_agfg =_bc .TraceToDirectObject (_agfg );_gaba ,_fedd :=_agfg .(*_bc .PdfObjectArray );if !_fedd {return nil ,_dc .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _gaba .Len ()!=2*_ggef .N {return nil ,_dc .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_facfc ,_ddcg :=_gaba .GetAsFloat64Slice ();if _ddcg !=nil {return nil ,_ddcg ;};_ggef .Range =_facfc ;}else {_ggef .Range =make ([]float64 ,2*_ggef .N );for _fdbd :=0;_fdbd < _ggef .N ;_fdbd ++{_ggef .Range [2*_fdbd ]=0.0;_ggef .Range [2*_fdbd +1]=1.0;
};};if _cfd :=_adedf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cfd !=nil {_ddfc ,_dcdeb :=_cfd .(*_bc .PdfObjectStream );if !_dcdeb {return nil ,_dc .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_ggef .Metadata =_ddfc ;};_fagfg ,_bgdgf :=_bc .DecodeStream (_dbfe );if _bgdgf !=nil {return nil ,_bgdgf ;};_ggef .Data =_fagfg ;_ggef ._abde =_dbfe ;return _ggef ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_caag *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgbd ,_aeafb :=_bc .GetNumbersAsFloat (objects );
if _aeafb !=nil {return nil ,_aeafb ;};return _caag .ColorFromFloats (_dgbd );};func (_ebafc *PdfReader )newPdfFieldSignatureFromDict (_fcgc *_bc .PdfObjectDictionary )(*PdfFieldSignature ,error ){_faebe :=&PdfFieldSignature {};_bccdb ,_gcabdf :=_bc .GetIndirect (_fcgc .Get ("\u0056"));
if _gcabdf {var _edbc error ;_faebe .V ,_edbc =_ebafc .newPdfSignatureFromIndirect (_bccdb );if _edbc !=nil {return nil ,_edbc ;};};_faebe .Lock ,_ =_bc .GetIndirect (_fcgc .Get ("\u004c\u006f\u0063\u006b"));_faebe .SV ,_ =_bc .GetIndirect (_fcgc .Get ("\u0053\u0056"));
return _faebe ,nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_gbbgb *PdfOutputIntent )GetContainingPdfObject ()_bc .PdfObject {return _gbbgb ._afdf };

// GetNumComponents returns the number of color components (1 for Separation).
func (_ebeb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_ccdab *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _ccdab ._aadac !=nil {return _ccdab ._aadac ,nil ;};if _ccdab .ColorSpace ==nil {return nil ,nil ;};_dgef ,_dcebd :=_aecef (_ccdab .ColorSpace );if _dcebd !=nil {return nil ,_dcebd ;
};_ccdab ._aadac =_dgef ;return _ccdab ._aadac ,nil ;};func _dbbae ()string {_eccage .Lock ();defer _eccage .Unlock ();if len (_abdfb )> 0{return _abdfb ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func (_befa Image )getBase ()_ecc .ImageBase {return _ecc .NewImageBase (int (_befa .Width ),int (_befa .Height ),int (_befa .BitsPerComponent ),_befa .ColorComponents ,_befa .Data ,_befa ._ggfad ,_befa ._ggeec );};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// AddFont adds a font dictionary to the Font resources.
func (_fbbde *PdfPage )AddFont (name _bc .PdfObjectName ,font _bc .PdfObject )error {if _fbbde .Resources ==nil {_fbbde .Resources =NewPdfPageResources ();};if _fbbde .Resources .Font ==nil {_fbbde .Resources .Font =_bc .MakeDict ();};_eddca ,_bbbd :=_bc .TraceToDirectObject (_fbbde .Resources .Font ).(*_bc .PdfObjectDictionary );
if !_bbbd {_dae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bc .TraceToDirectObject (_fbbde .Resources .Font ));
return _ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eddca .Set (name ,font );return nil ;};func (_gdcg fontCommon )fontFlags ()int {if _gdcg ._feec ==nil {return 0;};return _gdcg ._feec ._aafdg ;
};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_cgggd *PdfWriter )SetOpenAction (dest _bc .PdfObject )error {if dest ==nil ||_bc .IsNullObject (dest ){return nil ;};_cgggd ._bdbgc .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _cgggd .addObjects (dest );};func _gbgeb (_feagg *_bc .PdfObjectArray )(float64 ,error ){_eedef ,_efggb :=_feagg .ToFloat64Array ();
if _efggb !=nil {_dae .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feagg ,_efggb );};switch len (_eedef ){case 1:return _eedef [0],nil ;
case 3:_cbbce :=PdfColorspaceDeviceRGB {};_ggdcd ,_cdeeg :=_cbbce .ColorFromFloats (_eedef );if _cdeeg !=nil {return 0.0,_cdeeg ;};return _ggdcd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_cffaa :=PdfColorspaceDeviceCMYK {};_eacbd ,_eecfe :=_cffaa .ColorFromFloats (_eedef );
if _eecfe !=nil {return 0.0,_eecfe ;};_bbdaca ,_eecfe :=_cffaa .ColorToRGB (_eacbd .(*PdfColorDeviceCMYK ));if _eecfe !=nil {return 0.0,_eecfe ;};return _bbdaca .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_efggb =_ecg .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_dae .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feagg ,_efggb );return 0.0,_efggb ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_ebfec *PdfPageResources )HasColorspaceByName (keyName _bc .PdfObjectName )bool {_bgbff ,_caee :=_ebfec .GetColorspaces ();if _caee !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_caee );
return false ;};if _bgbff ==nil {return false ;};_ ,_fbaac :=_bgbff .Colorspaces [string (keyName )];return _fbaac ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_eega *PdfWriter )flushWriter ()error {if _eega ._bdda ==nil {_eega ._bdda =_eega ._adccb .Flush ();
};return _eega ._bdda ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cccgg *Outline )Insert (index uint ,item *OutlineItem ){_bcggf :=uint (len (_cccgg .Entries ));if index > _bcggf {index =_bcggf ;};_cccgg .Entries =append (_cccgg .Entries [:index ],append ([]*OutlineItem {item },_cccgg .Entries [index :]...)...);
};func _afegd (_bdfee _bc .PdfObject )(*PdfFunctionType2 ,error ){_bfad :=&PdfFunctionType2 {};var _ddebe *_bc .PdfObjectDictionary ;if _afea ,_bbfac :=_bdfee .(*_bc .PdfIndirectObject );_bbfac {_adfag ,_dddf :=_afea .PdfObject .(*_bc .PdfObjectDictionary );
if !_dddf {return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfad ._cdcf =_afea ;_ddebe =_adfag ;}else if _edgde ,_aabb :=_bdfee .(*_bc .PdfObjectDictionary );_aabb {_ddebe =_edgde ;}else {return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dae .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_ddebe .String ());_gccf ,_egeaf :=_bc .TraceToDirectObject (_ddebe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bc .PdfObjectArray );if !_egeaf {_dae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gccf .Len ()< 0||_gccf .Len ()%2!=0{_dae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_ecg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gbbfc ,_gbgaa :=_gccf .ToFloat64Array ();if _gbgaa !=nil {return nil ,_gbgaa ;};_bfad .Domain =_gbbfc ;_gccf ,_egeaf =_bc .TraceToDirectObject (_ddebe .Get ("\u0052\u0061\u006eg\u0065")).(*_bc .PdfObjectArray );
if _egeaf {if _gccf .Len ()< 0||_gccf .Len ()%2!=0{return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_acebe ,_cgcd :=_gccf .ToFloat64Array ();if _cgcd !=nil {return nil ,_cgcd ;};_bfad .Range =_acebe ;
};_gccf ,_egeaf =_bc .TraceToDirectObject (_ddebe .Get ("\u0043\u0030")).(*_bc .PdfObjectArray );if _egeaf {_geee ,_gcdfb :=_gccf .ToFloat64Array ();if _gcdfb !=nil {return nil ,_gcdfb ;};_bfad .C0 =_geee ;};_gccf ,_egeaf =_bc .TraceToDirectObject (_ddebe .Get ("\u0043\u0031")).(*_bc .PdfObjectArray );
if _egeaf {_fbfa ,_afdgf :=_gccf .ToFloat64Array ();if _afdgf !=nil {return nil ,_afdgf ;};_bfad .C1 =_fbfa ;};if len (_bfad .C0 )!=len (_bfad .C1 ){_dae .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_bc .ErrRangeError ;};N ,_gbgaa :=_bc .GetNumberAsFloat (_bc .TraceToDirectObject (_ddebe .Get ("\u004e")));if _gbgaa !=nil {_dae .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_ddebe .String ());
return nil ,_gbgaa ;};_bfad .N =N ;return _bfad ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bc .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gcbb *_bc .PdfIndirectObject ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cdgc :=NewPdfAnnotation ();_geb :=&PdfAnnotationStamp {};_geb .PdfAnnotation =_cdgc ;_geb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdgc .SetContext (_geb );return _geb ;};

// Encoder returns the font's text encoder.
func (_bdgcc *pdfFontSimple )Encoder ()_cabg .TextEncoder {if _bdgcc ._bfdd !=nil {return _bdgcc ._bfdd ;};if _bdgcc ._fbdfdc !=nil {return _bdgcc ._fbdfdc ;};_gccb ,_ :=_cabg .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _gccb ;};func (_befd *PdfReader )newPdfAcroFormFromDict (_geeff *_bc .PdfIndirectObject ,_gafe *_bc .PdfObjectDictionary )(*PdfAcroForm ,error ){_fbdge :=NewPdfAcroForm ();if _geeff !=nil {_fbdge ._eded =_geeff ;_geeff .PdfObject =_bc .MakeDict ();
};if _dcfga :=_gafe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_dcfga !=nil &&!_bc .IsNullObject (_dcfga ){_fbee ,_baggb :=_bc .GetArray (_dcfga );if !_baggb {return nil ,_dc .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dcfga );
};var _efada []*PdfField ;for _ ,_daeabg :=range _fbee .Elements (){_dbaaa ,_eaegc :=_bc .GetIndirect (_daeabg );if !_eaegc {if _ ,_bcbga :=_daeabg .(*_bc .PdfObjectNull );_bcbga {_dae .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_dae .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_daeabg );
return nil ,_dc .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ggfbd ,_addgad :=_befd .newPdfFieldFromIndirectObject (_dbaaa ,nil );
if _addgad !=nil {return nil ,_addgad ;};_dae .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ggfbd );_efada =append (_efada ,_ggfbd );};_fbdge .Fields =&_efada ;};if _bfbf :=_gafe .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_bfbf !=nil {_gcfgf ,_afega :=_bc .GetBool (_bfbf );if _afega {_fbdge .NeedAppearances =_gcfgf ;}else {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bfbf );
};};if _ecacc :=_gafe .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_ecacc !=nil {_bceba ,_bdad :=_bc .GetInt (_ecacc );if _bdad {_fbdge .SigFlags =_bceba ;}else {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecacc );
};};if _ffgda :=_gafe .Get ("\u0043\u004f");_ffgda !=nil {_cdefb ,_dbeed :=_bc .GetArray (_ffgda );if _dbeed {_fbdge .CO =_cdefb ;}else {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ffgda );
};};if _gfge :=_gafe .Get ("\u0044\u0052");_gfge !=nil {if _dfedae ,_dcbcc :=_bc .GetDict (_gfge );_dcbcc {_bcecd ,_agcd :=NewPdfPageResourcesFromDict (_dfedae );if _agcd !=nil {_dae .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_agcd );
return nil ,_agcd ;};_fbdge .DR =_bcecd ;}else {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gfge );};};if _eafga :=_gafe .Get ("\u0044\u0041");
_eafga !=nil {_efce ,_bbabg :=_bc .GetString (_eafga );if _bbabg {_fbdge .DA =_efce ;}else {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eafga );
};};if _bbgcb :=_gafe .Get ("\u0051");_bbgcb !=nil {_eacf ,_cedef :=_bc .GetInt (_bbgcb );if _cedef {_fbdge .Q =_eacf ;}else {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bbgcb );
};};if _cedc :=_gafe .Get ("\u0058\u0046\u0041");_cedc !=nil {_fbdge .XFA =_cedc ;};_fbdge .ToPdfObject ();return _fbdge ,nil ;};

// ToInteger convert to an integer format.
func (_ede *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_defd :=_da .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_defd *_ede .C ()),uint32 (_defd *_ede .M ()),uint32 (_defd *_ede .Y ()),uint32 (_defd *_ede .K ())};};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ffbed *Image )ToJBIG2Image ()(*_bc .JBIG2Image ,error ){_efbab ,_bfaegc :=_ffbed .ToGoImage ();if _bfaegc !=nil {return nil ,_bfaegc ;};return _bc .GoImageToJBIG2 (_efbab ,_bc .JB2ImageAutoThreshold );};

// ToInteger convert to an integer format.
func (_eccc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ffdb :=_da .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ffdb *_eccc .A ()),uint32 (_ffdb *_eccc .B ()),uint32 (_ffdb *_eccc .C ())};};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bc .PdfObject )(*PdfFont ,error ){return _cdgf (fontObj ,true )};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fgadg *PdfField )Flags ()FieldFlag {var _dagc FieldFlag ;_gfaeg ,_fdeda :=_fgadg .inherit (func (_cgdc *PdfField )bool {if _cgdc .Ff !=nil {_dagc =FieldFlag (*_cgdc .Ff );return true ;};return false ;});if _fdeda !=nil {_dae .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_fdeda );
};if !_gfaeg {_dae .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _dagc ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_eabbc :=&PdfOutlineItem {_affd :_bc .MakeIndirectObject (_bc .MakeDict ())};_eabbc ._bgbe =_eabbc ;return _eabbc ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cedd :=PdfPage {};_cedd ._cbcce =_bc .MakeDict ();_cedd .Resources =NewPdfPageResources ();_dgad :=_bc .PdfIndirectObject {};_dgad .PdfObject =_cedd ._cbcce ;_cedd ._eadb =&_dgad ;return &_cedd ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func (_ddgf *PdfPage )setContainer (_gcgb *_bc .PdfIndirectObject ){_gcgb .PdfObject =_ddgf ._cbcce ;_ddgf ._eadb =_gcgb ;};func (_edbgg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_edbgg .fontCommon };


// GetPageDict converts the Page to a PDF object dictionary.
func (_ddagg *PdfPage )GetPageDict ()*_bc .PdfObjectDictionary {_fgebd :=_ddagg ._cbcce ;_fgebd .Clear ();_fgebd .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0050\u0061\u0067\u0065"));_fgebd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddagg .Parent );
if _ddagg .LastModified !=nil {_fgebd .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ddagg .LastModified .ToPdfObject ());};if _ddagg .Resources !=nil {_fgebd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ddagg .Resources .ToPdfObject ());
};if _ddagg .CropBox !=nil {_fgebd .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_ddagg .CropBox .ToPdfObject ());};if _ddagg .MediaBox !=nil {_fgebd .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_ddagg .MediaBox .ToPdfObject ());};if _ddagg .BleedBox !=nil {_fgebd .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_ddagg .BleedBox .ToPdfObject ());
};if _ddagg .TrimBox !=nil {_fgebd .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_ddagg .TrimBox .ToPdfObject ());};if _ddagg .ArtBox !=nil {_fgebd .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_ddagg .ArtBox .ToPdfObject ());};_fgebd .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_ddagg .BoxColorInfo );
_fgebd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ddagg .Contents );if _ddagg .Rotate !=nil {_fgebd .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bc .MakeInteger (*_ddagg .Rotate ));};_fgebd .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ddagg .Group );
_fgebd .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_ddagg .Thumb );_fgebd .SetIfNotNil ("\u0042",_ddagg .B );_fgebd .SetIfNotNil ("\u0044\u0075\u0072",_ddagg .Dur );_fgebd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ddagg .Trans );_fgebd .SetIfNotNil ("\u0041\u0041",_ddagg .AA );
_fgebd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ddagg .Metadata );_fgebd .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ddagg .PieceInfo );_fgebd .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ddagg .StructParents );
_fgebd .SetIfNotNil ("\u0049\u0044",_ddagg .ID );_fgebd .SetIfNotNil ("\u0050\u005a",_ddagg .PZ );_fgebd .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_ddagg .SeparationInfo );_fgebd .SetIfNotNil ("\u0054\u0061\u0062\u0073",_ddagg .Tabs );
_fgebd .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_ddagg .TemplateInstantiated );_fgebd .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_ddagg .PresSteps );_fgebd .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_ddagg .UserUnit );
_fgebd .SetIfNotNil ("\u0056\u0050",_ddagg .VP );if _ddagg ._dbgcg !=nil {_fcecg :=_bc .MakeArray ();for _ ,_decba :=range _ddagg ._dbgcg {if _aegdd :=_decba .GetContext ();_aegdd !=nil {_fcecg .Append (_aegdd .ToPdfObject ());}else {_fcecg .Append (_decba .ToPdfObject ());
};};if _fcecg .Len ()> 0{_fgebd .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_fcecg );};}else if _ddagg .Annots !=nil {_fgebd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_ddagg .Annots );};return _fgebd ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ffcdg *PdfOutlineTreeNode )GetContainingPdfObject ()_bc .PdfObject {return _ffcdg .GetContext ().GetContainingPdfObject ();};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bc .PdfObject ;};func _bcbc (_bcda *_bc .PdfIndirectObject ,_dcdg *_bc .PdfObjectDictionary )(*DSS ,error ){if _bcda ==nil {_bcda =_bc .MakeIndirectObject (nil );};_bcda .PdfObject =_bc .MakeDict ();_begfb :=map[string ]*VRI {};
if _cabf ,_becfg :=_bc .GetDict (_dcdg .Get ("\u0056\u0052\u0049"));_becfg {for _ ,_dbgda :=range _cabf .Keys (){if _cfbf ,_ebgc :=_bc .GetDict (_cabf .Get (_dbgda ));_ebgc {_begfb [_dee .ToUpper (_dbgda .String ())]=_cegf (_cfbf );};};};return &DSS {Certs :_baabc (_dcdg .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_baabc (_dcdg .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_baabc (_dcdg .Get ("\u0043\u0052\u004c\u0073")),VRI :_begfb ,_ggdae :_bcda },nil ;
};func (_fgb *PdfAppender )addNewObject (_dada _bc .PdfObject ){if _ ,_aace :=_fgb ._dgae [_dada ];!_aace {_fgb ._cgf =append (_fgb ._cgf ,_dada );_fgb ._dgae [_dada ]=struct{}{};};};func _ffea (_ebbd _bc .PdfObject )(PdfFunction ,error ){_ebbd =_bc .ResolveReference (_ebbd );
if _cggfb ,_egabc :=_ebbd .(*_bc .PdfObjectStream );_egabc {_faebc :=_cggfb .PdfObjectDictionary ;_dded ,_ggcdc :=_faebc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bc .PdfObjectInteger );if !_ggcdc {_dae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ecg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dded ==0{return _cbacc (_cggfb );}else if *_dded ==4{return _fdaa (_cggfb );
}else {return nil ,_ecg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ddef ,_dcac :=_ebbd .(*_bc .PdfIndirectObject );_dcac {_abfeg ,_ecda :=_ddef .PdfObject .(*_bc .PdfObjectDictionary );
if !_ecda {_dae .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ecg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_dfff ,_ecda :=_abfeg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bc .PdfObjectInteger );
if !_ecda {_dae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ecg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_dfff ==2{return _afegd (_ddef );}else if *_dfff ==3{return _abcgf (_ddef );}else {return nil ,_ecg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cbbcb ,_adgd :=_ebbd .(*_bc .PdfObjectDictionary );
_adgd {_dcbge ,_bdag :=_cbbcb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bc .PdfObjectInteger );if !_bdag {_dae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ecg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dcbge ==2{return _afegd (_cbbcb );}else if *_dcbge ==3{return _abcgf (_cbbcb );
}else {return nil ,_ecg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_dae .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_ebbd );
return nil ,_ecg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ggeb ,_bggdb :=_dg .NewStdFontByName (HelveticaName );if !_bggdb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_adbdc :=_egbaf (_ggeb );return &PdfFont {_adffg :&_adbdc };};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_dbead DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_fdcbc *PdfInfo )GetCustomInfo (name string )*_bc .PdfObjectString {var _fcdd *_bc .PdfObjectString ;if _fdcbc ._cbeg ==nil {return _fcdd ;};if _eggag ,_cbabc :=_fdcbc ._cbeg .Get (*_bc .MakeName (name )).(*_bc .PdfObjectString );_cbabc {_fcdd =_eggag ;
};return _fcdd ;};func (_fcecf *PdfWriter )writeDocumentVersion (){if _fcecf ._dcebde {_fcecf .writeString ("\u000a");}else {_fcecf .writeString (_dc .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fcecf ._efeae .Major ,_fcecf ._efeae .Minor ));
_fcecf .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cafcd _gbe .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_cagd _gg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_efca _gg .Image )(*Image ,error );

// Compress an image.
Compress (_gbag *Image ,_affgc int64 )(*Image ,error );};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_bbada *PdfOutlineTreeNode )ToPdfObject ()_bc .PdfObject {return _bbada .GetContext ().ToPdfObject ();};

// GetOptimizer returns current PDF optimizer.
func (_aabd *PdfWriter )GetOptimizer ()Optimizer {return _aabd ._ggbfa };

// ColorToRGB converts a ICCBased color to an RGB color.
func (_aggfb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aggfb .Alternate ==nil {_dae .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _aggfb .N ==1{_dae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bgfe :=NewPdfColorspaceDeviceGray ();return _bgfe .ColorToRGB (color );}else if _aggfb .N ==3{_dae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _aggfb .N ==4{_dae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_egea :=NewPdfColorspaceDeviceCMYK ();return _egea .ColorToRGB (color );}else {return nil ,_ecg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dae .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_aggfb );
return _aggfb .Alternate .ColorToRGB (color );};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_dfab *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=_dfab .GetNumComponents (){return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacf ,_aecg :=_bc .GetNumbersAsFloat (objects );
if _aecg !=nil {return nil ,_aecg ;};return _dfab .ColorFromFloats (_cacf );};

// ToPdfObject implements interface PdfModel.
func (_fagb *PdfAnnotationLink )ToPdfObject ()_bc .PdfObject {_fagb .PdfAnnotation .ToPdfObject ();_ecbb :=_fagb ._gdfa ;_egf :=_ecbb .PdfObject .(*_bc .PdfObjectDictionary );_egf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u004c\u0069\u006e\u006b"));
if _fagb ._bfce !=nil &&_fagb ._bfce ._afd !=nil {_egf .Set ("\u0041",_fagb ._bfce ._afd .ToPdfObject ());}else if _fagb .A !=nil {_egf .Set ("\u0041",_fagb .A );};_egf .SetIfNotNil ("\u0044\u0065\u0073\u0074",_fagb .Dest );_egf .SetIfNotNil ("\u0048",_fagb .H );
_egf .SetIfNotNil ("\u0050\u0041",_fagb .PA );_egf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fagb .QuadPoints );_egf .SetIfNotNil ("\u0042\u0053",_fagb .BS );return _ecbb ;};func (_afdd *PdfReader )newPdfAnnotationPolyLineFromDict (_baae *_bc .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cfbc :=PdfAnnotationPolyLine {};
_gdafe ,_dfec :=_afdd .newPdfAnnotationMarkupFromDict (_baae );if _dfec !=nil {return nil ,_dfec ;};_cfbc .PdfAnnotationMarkup =_gdafe ;_cfbc .Vertices =_baae .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cfbc .LE =_baae .Get ("\u004c\u0045");
_cfbc .BS =_baae .Get ("\u0042\u0053");_cfbc .IC =_baae .Get ("\u0049\u0043");_cfbc .BE =_baae .Get ("\u0042\u0045");_cfbc .IT =_baae .Get ("\u0049\u0054");_cfbc .Measure =_baae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cfbc ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_ddb :=NewPdfAnnotation ();_becb :=&PdfAnnotationPolygon {};_becb .PdfAnnotation =_ddb ;_becb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddb .SetContext (_becb );return _becb ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bc .PdfObjectArray ;TI *_bc .PdfObjectInteger ;I *_bc .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_dgc *PdfActionNamed )ToPdfObject ()_bc .PdfObject {_dgc .PdfAction .ToPdfObject ();_cgac :=_dgc ._afdg ;_fb :=_cgac .PdfObject .(*_bc .PdfObjectDictionary );_fb .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeNamed )));_fb .SetIfNotNil ("\u004e",_dgc .N );
return _cgac ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cdecg *PdfPage )GetAllContentStreams ()(string ,error ){_dgbdg ,_cadabe :=_cdecg .GetContentStreams ();if _cadabe !=nil {return "",_cadabe ;};return _dee .Join (_dgbdg ,"\u0020"),nil ;};func (_gdgeb *LTV )enable (_baeg ,_efddg []*_e .Certificate ,_dddg string )error {_gadgd ,_dfbcb ,_ccdcaa :=_gdgeb .buildCertChain (_baeg ,_efddg );
if _ccdcaa !=nil {return _ccdcaa ;};_cddag ,_ccdcaa :=_gdgeb .getCerts (_gadgd );if _ccdcaa !=nil {return _ccdcaa ;};_eefc ,_ccdcaa :=_gdgeb .getOCSPs (_gadgd ,_dfbcb );if _ccdcaa !=nil {return _ccdcaa ;};_bbgcac ,_ccdcaa :=_gdgeb .getCRLs (_gadgd );if _ccdcaa !=nil {return _ccdcaa ;
};_accbe :=_gdgeb ._bbgdd ;_ebbb ,_ccdcaa :=_accbe .addCerts (_cddag );if _ccdcaa !=nil {return _ccdcaa ;};_fcegc ,_ccdcaa :=_accbe .addOCSPs (_eefc );if _ccdcaa !=nil {return _ccdcaa ;};_fcccd ,_ccdcaa :=_accbe .addCRLs (_bbgcac );if _ccdcaa !=nil {return _ccdcaa ;
};if _dddg !=""{_accbe .VRI [_dddg ]=&VRI {Cert :_ebbb ,OCSP :_fcegc ,CRL :_fcccd };};_gdgeb ._fgff .SetDSS (_accbe );return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_daceb *PdfColorspaceICCBased )ToPdfObject ()_bc .PdfObject {_dccdb :=&_bc .PdfObjectArray {};_dccdb .Append (_bc .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gefd *_bc .PdfObjectStream ;if _daceb ._abde !=nil {_gefd =_daceb ._abde ;
}else {_gefd =&_bc .PdfObjectStream {};};_efbg :=_bc .MakeDict ();_efbg .Set ("\u004e",_bc .MakeInteger (int64 (_daceb .N )));if _daceb .Alternate !=nil {_efbg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_daceb .Alternate .ToPdfObject ());};if _daceb .Metadata !=nil {_efbg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_daceb .Metadata );
};if _daceb .Range !=nil {var _gdge []_bc .PdfObject ;for _ ,_caaff :=range _daceb .Range {_gdge =append (_gdge ,_bc .MakeFloat (_caaff ));};_efbg .Set ("\u0052\u0061\u006eg\u0065",_bc .MakeArray (_gdge ...));};_efbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bc .MakeInteger (int64 (len (_daceb .Data ))));
_gefd .Stream =_daceb .Data ;_gefd .PdfObjectDictionary =_efbg ;_dccdb .Append (_gefd );if _daceb ._dffgg !=nil {_daceb ._dffgg .PdfObject =_dccdb ;return _daceb ._dffgg ;};return _dccdb ;};var _accbd =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ToPdfObject implements interface PdfModel.
func (_gec *PdfBorderStyle )ToPdfObject ()_bc .PdfObject {_dddd :=_bc .MakeDict ();if _gec ._dcbb !=nil {if _bede ,_ceea :=_gec ._dcbb .(*_bc .PdfIndirectObject );_ceea {_bede .PdfObject =_dddd ;};};_dddd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _gec .W !=nil {_dddd .Set ("\u0057",_bc .MakeFloat (*_gec .W ));};if _gec .S !=nil {_dddd .Set ("\u0053",_bc .MakeName (_gec .S .GetPdfName ()));};if _gec .D !=nil {_dddd .Set ("\u0044",_bc .MakeArrayFromIntegers (*_gec .D ));};if _gec ._dcbb !=nil {return _gec ._dcbb ;
};return _dddd ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_afd PdfModel ;Type _bc .PdfObject ;S _bc .PdfObject ;Next _bc .PdfObject ;_afdg *_bc .PdfIndirectObject ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bc .PdfObject )(_bc .PdfObjectName ,error ){var _cgbe *_bc .PdfObjectName ;var _cbde *_bc .PdfObjectArray ;if _cbga ,_bged :=obj .(*_bc .PdfIndirectObject );_bged {if _acaef ,_cdced :=_cbga .PdfObject .(*_bc .PdfObjectArray );
_cdced {_cbde =_acaef ;}else if _caeg ,_bdfd :=_cbga .PdfObject .(*_bc .PdfObjectName );_bdfd {_cgbe =_caeg ;};}else if _fdd ,_fcde :=obj .(*_bc .PdfObjectArray );_fcde {_cbde =_fdd ;}else if _gefb ,_ceee :=obj .(*_bc .PdfObjectName );_ceee {_cgbe =_gefb ;
};if _cgbe !=nil {switch *_cgbe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_cgbe ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_cgbe ,nil ;
};};if _cbde !=nil &&_cbde .Len ()> 0{if _feaeg ,_gcce :=_cbde .Get (0).(*_bc .PdfObjectName );_gcce {switch *_feaeg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cbde .Len ()==1{return *_feaeg ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_feaeg ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_feaeg ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_feaeg ,nil ;};};};return "",nil ;};func _dfccc (_cgbbf _bc .PdfObject )(map[_cabg .CharCode ]float64 ,error ){if _cgbbf ==nil {return nil ,nil ;
};_dabe ,_bcaad :=_bc .GetArray (_cgbbf );if !_bcaad {return nil ,nil ;};_baeea :=map[_cabg .CharCode ]float64 {};_ebcc :=_dabe .Len ();for _ffdbb :=0;_ffdbb < _ebcc -1;_ffdbb ++{_egdg :=_bc .TraceToDirectObject (_dabe .Get (_ffdbb ));_dbag ,_bcgb :=_bc .GetIntVal (_egdg );
if !_bcgb {return nil ,_dc .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ffdbb ,_egdg );};_ffdbb ++;if _ffdbb > _ebcc -1{return nil ,_dc .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_dabe );
};_fcec :=_bc .TraceToDirectObject (_dabe .Get (_ffdbb ));switch _fcec .(type ){case *_bc .PdfObjectArray :_bdec ,_ :=_bc .GetArray (_fcec );if _cfec ,_gbdb :=_bdec .ToFloat64Array ();_gbdb ==nil {for _afbe :=0;_afbe < len (_cfec );_afbe ++{_baeea [_cabg .CharCode (_dbag +_afbe )]=_cfec [_afbe ];
};}else {return nil ,_dc .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ffdbb ,_fcec );};case *_bc .PdfObjectInteger :_fdbfd ,_aebd :=_bc .GetIntVal (_fcec );
if !_aebd {return nil ,_dc .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ffdbb ,_fcec );};_ffdbb ++;if _ffdbb > _ebcc -1{return nil ,_dc .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_dabe );
};_bcafc :=_dabe .Get (_ffdbb );_bgdcc ,_ebgcg :=_bc .GetNumberAsFloat (_bcafc );if _ebgcg !=nil {return nil ,_dc .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ffdbb ,_bcafc );
};for _gcbd :=_dbag ;_gcbd <=_fdbfd ;_gcbd ++{_baeea [_cabg .CharCode (_gcbd )]=_bgdcc ;};default:return nil ,_dc .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ffdbb ,_fcec );
};};return _baeea ,nil ;};type pdfFontType0 struct{fontCommon ;_adce *_bc .PdfIndirectObject ;_abfdg _cabg .TextEncoder ;Encoding _bc .PdfObject ;DescendantFont *PdfFont ;_bddf *_ba .CMap ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_dbcd :=&PdfBorderStyle {};return _dbcd };

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bfae *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func _ccdca (_bccee *PdfField ,_dbea _bc .PdfObject )error {switch _bccee .GetContext ().(type ){case *PdfFieldText :switch _ggdde :=_dbea .(type ){case *_bc .PdfObjectName :_dgbg :=_ggdde ;
_dae .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_dgbg .String ());
_bccee .V =_bc .MakeEncodedString (_ggdde .String (),true );case *_bc .PdfObjectString :_bccee .V =_bc .MakeEncodedString (_ggdde .String (),true );default:_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_ggdde ,_ggdde );
};case *PdfFieldButton :switch _dbea .(type ){case *_bc .PdfObjectName :if len (_dbea .String ())> 0{_bccee .V =_dbea ;_gaec (_bccee ,_dbea );};case *_bc .PdfObjectString :if len (_dbea .String ())> 0{_bccee .V =_bc .MakeName (_dbea .String ());_gaec (_bccee ,_bccee .V );
};default:_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bccee .PartialName (),_dbea );_bccee .V =_dbea ;};case *PdfFieldChoice :switch _dbea .(type ){case *_bc .PdfObjectName :if len (_dbea .String ())> 0{_bccee .V =_bc .MakeString (_dbea .String ());
_gaec (_bccee ,_dbea );};case *_bc .PdfObjectString :if len (_dbea .String ())> 0{_bccee .V =_dbea ;_gaec (_bccee ,_bc .MakeName (_dbea .String ()));};default:_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bccee .PartialName (),_dbea );
_bccee .V =_dbea ;};case *PdfFieldSignature :_dae .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bccee .PartialName (),_dbea );
};return nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bbdgc *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bbdgc .baseFields ()._feec !=nil {return _bbdgc .baseFields ()._feec ;};if _gccc :=_bbdgc ._adffg .getFontDescriptor ();_gccc !=nil {return _gccc ;};_dae .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bbdgc );
return nil ;};func (_bcafd *PdfWriter )getPdfVersion ()string {return _dc .Sprintf ("\u0025\u0064\u002e%\u0064",_bcafd ._efeae .Major ,_bcafd ._efeae .Minor );};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_aagdb *PdfField )FullName ()(string ,error ){var _eadag _bg .Buffer ;_aeabd :=[]string {};if _aagdb .T !=nil {_aeabd =append (_aeabd ,_aagdb .T .Decoded ());};_ecdb :=map[*PdfField ]bool {};_ecdb [_aagdb ]=true ;_bbec :=_aagdb .Parent ;for _bbec !=nil {if _ ,_eaaec :=_ecdb [_bbec ];
_eaaec {return _eadag .String (),_ecg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bbec .T ==nil {return _eadag .String (),_ecg .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_aeabd =append (_aeabd ,_bbec .T .Decoded ());_ecdb [_bbec ]=true ;_bbec =_bbec .Parent ;};for _bccgf :=len (_aeabd )-1;_bccgf >=0;_bccgf --{_eadag .WriteString (_aeabd [_bccgf ]);if _bccgf > 0{_eadag .WriteString ("\u002e");};};return _eadag .String (),nil ;
};func _eebg ()string {return _dae .Version };func (_gdcbe *PdfAcroForm )fill (_ccebd FieldValueProvider ,_efdb FieldAppearanceGenerator )error {if _gdcbe ==nil {return nil ;};_bbagd ,_gfage :=_ccebd .FieldValues ();if _gfage !=nil {return _gfage ;};for _ ,_ggdbg :=range _gdcbe .AllFields (){_ceedcb :=_ggdbg .PartialName ();
_gcbfd ,_dafe :=_bbagd [_ceedcb ];if !_dafe {if _gbfa ,_eaffb :=_ggdbg .FullName ();_eaffb ==nil {_gcbfd ,_dafe =_bbagd [_gbfa ];};};if !_dafe {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_ceedcb );
continue ;};if _bgbdd :=_ccdca (_ggdbg ,_gcbfd );_bgbdd !=nil {return _bgbdd ;};if _efdb ==nil {continue ;};for _ ,_cbea :=range _ggdbg .Annotations {_gfcae ,_eefd :=_efdb .GenerateAppearanceDict (_gdcbe ,_ggdbg ,_cbea );if _eefd !=nil {return _eefd ;};
_cbea .AP =_gfcae ;_cbea .ToPdfObject ();};};return nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func _aecef (_bfgce _bc .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cdfdf :=&PdfPageResourcesColorspaces {};if _accfgc ,_ccda :=_bfgce .(*_bc .PdfIndirectObject );_ccda {_cdfdf ._cddg =_accfgc ;_bfgce =_accfgc .PdfObject ;
};_bbafe ,_caafa :=_bc .GetDict (_bfgce );if !_caafa {return nil ,_ecg .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cdfdf .Names =[]string {};_cdfdf .Colorspaces =map[string ]PdfColorspace {};
for _ ,_begfd :=range _bbafe .Keys (){_cebe :=_bbafe .Get (_begfd );_cdfdf .Names =append (_cdfdf .Names ,string (_begfd ));_eagbc ,_fgagf :=NewPdfColorspaceFromPdfObject (_cebe );if _fgagf !=nil {return nil ,_fgagf ;};_cdfdf .Colorspaces [string (_begfd )]=_eagbc ;
};return _cdfdf ,nil ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_edbga _bc .ParserMetadata ;};func (_dbbad SignatureValidationResult )String ()string {var _dfaea _bg .Buffer ;_dfaea .WriteString (_dc .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_dbbad .Name ));
if _dbbad .Date ._ffcfg > 0{_dfaea .WriteString (_dc .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_dbbad .Date .ToGoTime ().String ()));}else {_dfaea .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_dbbad .Reason )> 0{_dfaea .WriteString (_dc .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dbbad .Reason ));}else {_dfaea .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_dbbad .Location )> 0{_dfaea .WriteString (_dc .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dbbad .Location ));}else {_dfaea .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_dbbad .ContactInfo )> 0{_dfaea .WriteString (_dc .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_dbbad .ContactInfo ));}else {_dfaea .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_dfaea .WriteString (_dc .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_dbbad .Fields )));if _dbbad .IsSigned {_dfaea .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_dfaea .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _dbbad .IsVerified {_dfaea .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_dfaea .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _dbbad .IsTrusted {_dfaea .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_dfaea .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_dbbad .GeneralizedTime .IsZero (){_dfaea .WriteString (_dc .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_dbbad .GeneralizedTime .String ()));
};return _dfaea .String ();};

// AddWatermarkImage adds a watermark to the page.
func (_cgagb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ffcbb ,_becbb :=_cgagb .GetMediaBox ();if _becbb !=nil {return _becbb ;};_efdgb :=_ffcbb .Urx -_ffcbb .Llx ;_cbbeb :=_ffcbb .Ury -_ffcbb .Lly ;_ggdc :=float64 (*ximg .Width );
_cdgee :=(_efdgb -_ggdc )/2;if opt .FitToWidth {_ggdc =_efdgb ;_cdgee =0;};_cbdeg :=_cbbeb ;_defgc :=float64 (0);if opt .PreserveAspectRatio {_cbdeg =_ggdc *float64 (*ximg .Height )/float64 (*ximg .Width );_defgc =(_cbbeb -_cbdeg )/2;};if _cgagb .Resources ==nil {_cgagb .Resources =NewPdfPageResources ();
};_fbga :=0;_aeggb :=_bc .PdfObjectName (_dc .Sprintf ("\u0049\u006d\u0077%\u0064",_fbga ));for _cgagb .Resources .HasXObjectByName (_aeggb ){_fbga ++;_aeggb =_bc .PdfObjectName (_dc .Sprintf ("\u0049\u006d\u0077%\u0064",_fbga ));};_becbb =_cgagb .AddImageResource (_aeggb ,ximg );
if _becbb !=nil {return _becbb ;};_fbga =0;_eagdb :=_bc .PdfObjectName (_dc .Sprintf ("\u0047\u0053\u0025\u0064",_fbga ));for _cgagb .HasExtGState (_eagdb ){_fbga ++;_eagdb =_bc .PdfObjectName (_dc .Sprintf ("\u0047\u0053\u0025\u0064",_fbga ));};_cfca :=_bc .MakeDict ();
_cfca .Set ("\u0042\u004d",_bc .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cfca .Set ("\u0043\u0041",_bc .MakeFloat (opt .Alpha ));_cfca .Set ("\u0063\u0061",_bc .MakeFloat (opt .Alpha ));_becbb =_cgagb .AddExtGState (_eagdb ,_cfca );if _becbb !=nil {return _becbb ;
};_fcaeg :=_dc .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_eagdb ,_ggdc ,_cbdeg ,_cdgee ,_defgc ,_aeggb );
_cgagb .AddContentStreamByString (_fcaeg );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bedf *PdfAnnotationRedact )ToPdfObject ()_bc .PdfObject {_bedf .PdfAnnotation .ToPdfObject ();_agab :=_bedf ._gdfa ;_edgc :=_agab .PdfObject .(*_bc .PdfObjectDictionary );_bedf .PdfAnnotationMarkup .appendToPdfDictionary (_edgc );_edgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_edgc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bedf .QuadPoints );_edgc .SetIfNotNil ("\u0049\u0043",_bedf .IC );_edgc .SetIfNotNil ("\u0052\u004f",_bedf .RO );_edgc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_bedf .OverlayText );
_edgc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bedf .Repeat );_edgc .SetIfNotNil ("\u0044\u0041",_bedf .DA );_edgc .SetIfNotNil ("\u0051",_bedf .Q );return _agab ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bc .PdfObject ;B _bc .PdfObject ;};func (_dfb *PdfAppender )updateObjectsDeep (_bebb _bc .PdfObject ,_dbda map[_bc .PdfObject ]struct{}){if _dbda ==nil {_dbda =map[_bc .PdfObject ]struct{}{};};
if _ ,_bcd :=_dbda [_bebb ];_bcd ||_bebb ==nil {return ;};_dbda [_bebb ]=struct{}{};_edc :=_bc .ResolveReferencesDeep (_bebb ,_dfb ._aegc );if _edc !=nil {_dae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edc );};switch _bcce :=_bebb .(type ){case *_bc .PdfIndirectObject :switch {case _bcce .GetParser ()==_dfb ._cace ._afedg :return ;
case _bcce .GetParser ()==_dfb .Reader ._afedg :_afee ,_ :=_dfb ._cace .GetIndirectObjectByNumber (int (_bcce .ObjectNumber ));_ccac ,_cfef :=_afee .(*_bc .PdfIndirectObject );if _cfef &&_ccac !=nil {if _ccac .PdfObject !=_bcce .PdfObject &&_ccac .PdfObject .WriteString ()!=_bcce .PdfObject .WriteString (){_dfb .addNewObject (_bebb );
_dfb ._bcca [_bebb ]=_bcce .ObjectNumber ;};};default:_dfb .addNewObject (_bebb );};_dfb .updateObjectsDeep (_bcce .PdfObject ,_dbda );case *_bc .PdfObjectArray :for _ ,_fedg :=range _bcce .Elements (){_dfb .updateObjectsDeep (_fedg ,_dbda );};case *_bc .PdfObjectDictionary :for _ ,_adeb :=range _bcce .Keys (){_dfb .updateObjectsDeep (_bcce .Get (_adeb ),_dbda );
};case *_bc .PdfObjectStreams :if _bcce .GetParser ()!=_dfb ._cace ._afedg {for _ ,_gbgc :=range _bcce .Elements (){_dfb .updateObjectsDeep (_gbgc ,_dbda );};};case *_bc .PdfObjectStream :switch {case _bcce .GetParser ()==_dfb ._cace ._afedg :return ;case _bcce .GetParser ()==_dfb .Reader ._afedg :if _dgcde ,_bagc :=_dfb ._cace ._afedg .LookupByReference (_bcce .PdfObjectReference );
_bagc ==nil {var _ecgb bool ;if _ecae ,_affe :=_bc .GetStream (_dgcde );_affe &&_bg .Equal (_ecae .Stream ,_bcce .Stream ){_ecgb =true ;};if _bggae ,_eeaae :=_bc .GetDict (_dgcde );_ecgb &&_eeaae {_ecgb =_bggae .WriteString ()==_bcce .PdfObjectDictionary .WriteString ();
};if _ecgb {return ;};};if _bcce .ObjectNumber !=0{_dfb ._bcca [_bebb ]=_bcce .ObjectNumber ;};default:if _ ,_fdcb :=_dfb ._dgae [_bebb ];!_fdcb {_dfb .addNewObject (_bebb );};};_dfb .updateObjectsDeep (_bcce .PdfObjectDictionary ,_dbda );};};

// IsColored specifies if the pattern is colored.
func (_dacc *PdfTilingPattern )IsColored ()bool {if _dacc .PaintType !=nil &&*_dacc .PaintType ==1{return true ;};return false ;};func (_bbbb *PdfReader )newPdfActionMovieFromDict (_gfb *_bc .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_gfb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_gfb .Get ("\u0054"),Operation :_gfb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToPdfObject implements interface PdfModel.
func (_fecb *PdfAnnotationSquare )ToPdfObject ()_bc .PdfObject {_fecb .PdfAnnotation .ToPdfObject ();_aaa :=_fecb ._gdfa ;_ebd :=_aaa .PdfObject .(*_bc .PdfObjectDictionary );if _fecb .PdfAnnotationMarkup !=nil {_fecb .PdfAnnotationMarkup .appendToPdfDictionary (_ebd );
};_ebd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ebd .SetIfNotNil ("\u0042\u0053",_fecb .BS );_ebd .SetIfNotNil ("\u0049\u0043",_fecb .IC );_ebd .SetIfNotNil ("\u0042\u0045",_fecb .BE );
_ebd .SetIfNotNil ("\u0052\u0044",_fecb .RD );return _aaa ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_eaea *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _eaea .flattenFieldsWithOpts (false ,appgen ,opts );};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_debc *PdfPage )GetContentStreamObjs ()[]_bc .PdfObject {if _debc .Contents ==nil {return nil ;};_acfc :=_bc .TraceToDirectObject (_debc .Contents );if _eeeea ,_dbba :=_acfc .(*_bc .PdfObjectArray );_dbba {return _eeeea .Elements ();};return []_bc .PdfObject {_acfc };
};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// SetVersion sets the PDF version of the output file.
func (_bdcgg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bdcgg ._efeae .Major =majorVersion ;_bdcgg ._efeae .Minor =minorVersion ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fdcfb *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fdcfb .GetNumComponents (){return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgee ,_eafb :=_fdcfb .TintTransform .Evaluate (vals );
if _eafb !=nil {return nil ,_eafb ;};_cacaaa ,_eafb :=_fdcfb .AlternateSpace .ColorFromFloats (_fgee );if _eafb !=nil {return nil ,_eafb ;};return _cacaaa ,nil ;};func (_gebdd *PdfAcroForm )fillImageWithAppearance (_cdfge FieldImageProvider ,_ggggd FieldAppearanceGenerator )error {if _gebdd ==nil {return nil ;
};_fgbc ,_gdcc :=_cdfge .FieldImageValues ();if _gdcc !=nil {return _gdcc ;};for _ ,_aaaef :=range _gebdd .AllFields (){_agdd :=_aaaef .PartialName ();_efefe ,_eceda :=_fgbc [_agdd ];if !_eceda {if _bfcba ,_cdfgg :=_aaaef .FullName ();_cdfgg ==nil {_efefe ,_eceda =_fgbc [_bfcba ];
};};if !_eceda {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_agdd );
continue ;};switch _cbbgg :=_aaaef .GetContext ().(type ){case *PdfFieldButton :if _cbbgg .IsPush (){_cbbgg .SetFillImage (_efefe );};};if _ggggd ==nil {continue ;};for _ ,_cfdb :=range _aaaef .Annotations {_cbgb ,_deddb :=_ggggd .GenerateAppearanceDict (_gebdd ,_aaaef ,_cfdb );
if _deddb !=nil {return _deddb ;};_cfdb .AP =_cbgb ;_cfdb .ToPdfObject ();};};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_adcb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caceg ,_eafag :=_bc .GetNumbersAsFloat (objects );
if _eafag !=nil {return nil ,_eafag ;};return _adcb .ColorFromFloats (_caceg );};

// SetFontByName sets the font specified by keyName to the given object.
func (_cdeab *PdfPageResources )SetFontByName (keyName _bc .PdfObjectName ,obj _bc .PdfObject )error {if _cdeab .Font ==nil {_cdeab .Font =_bc .MakeDict ();};_bfggg ,_cbdbe :=_bc .TraceToDirectObject (_cdeab .Font ).(*_bc .PdfObjectDictionary );if !_cbdbe {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bc .TraceToDirectObject (_cdeab .Font ));
return _bc .ErrTypeError ;};_bfggg .Set (keyName ,obj );return nil ;};func _gaaeg (_cgegb _gbe .ReadSeeker ,_bcbgb *ReaderOpts ,_fbge bool ,_dffc string )(*PdfReader ,error ){if _bcbgb ==nil {_bcbgb =NewReaderOpts ();};_cabfb :=&PdfReader {_ggge :_cgegb ,_becga :map[_bc .PdfObject ]struct{}{},_afcfd :_cafe (),_egcb :_bcbgb .LazyLoad ,_cbda :_bcbgb .ComplianceMode };
_dfecd ,_afdfc :=_afaaf ("\u0072");if _afdfc !=nil {return nil ,_afdfc ;};_afdfc =_ee .Track (_dfecd ,_dffc );if _afdfc !=nil {return nil ,_afdfc ;};_cabfb ._acece =_dfecd ;var _bbaaa *_bc .PdfParser ;if !_cabfb ._cbda {_bbaaa ,_afdfc =_bc .NewParser (_cgegb );
}else {_bbaaa ,_afdfc =_bc .NewCompliancePdfParser (_cgegb );};if _afdfc !=nil {return nil ,_afdfc ;};_cabfb ._afedg =_bbaaa ;_acgf ,_afdfc :=_cabfb .IsEncrypted ();if _afdfc !=nil {return nil ,_afdfc ;};if !_acgf {_afdfc =_cabfb .loadStructure ();if _afdfc !=nil {return nil ,_afdfc ;
};}else if _fbge {_gbdaf ,_cebc :=_cabfb .Decrypt ([]byte (_bcbgb .Password ));if _cebc !=nil {return nil ,_cebc ;};if !_gbdaf {return nil ,_ecg .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _cabfb ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fcafe *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _cdbe []*PdfField ;if _fcafe .AcroForm !=nil {_cdbe =_fcafe .AcroForm .AllFields ();};_dfacf :=make (map[*PdfField ]struct{},len (_cdbe ));for _ ,_dbefd :=range _cdbe {_dfacf [_dbefd ]=struct{}{};
};for _ ,_eaaaf :=range _fcafe .PageList {_edabeg ,_eddbc :=_eaaaf .GetAnnotations ();if _eddbc !=nil {return false ,_eddbc ;};for _ ,_bcfce :=range _edabeg {_ecgfc ,_fdfba :=_bcfce .GetContext ().(*PdfAnnotationWidget );if !_fdfba {continue ;};_ecgbb :=_ecgfc .Field ();
if _ecgbb ==nil {return true ,nil ;};if _ ,_fdage :=_dfacf [_ecgbb ];!_fdage {return true ,nil ;};};};return false ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bdbd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _ebdf (_fabc _bc .PdfObject )(*PdfColorspaceCalGray ,error ){_ffdcc :=NewPdfColorspaceCalGray ();if _bfea ,_cacg :=_fabc .(*_bc .PdfIndirectObject );_cacg {_ffdcc ._ccfafb =_bfea ;
};_fabc =_bc .TraceToDirectObject (_fabc );_ceed ,_bgegc :=_fabc .(*_bc .PdfObjectArray );if !_bgegc {return nil ,_dc .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ceed .Len ()!=2{return nil ,_dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_fabc =_bc .TraceToDirectObject (_ceed .Get (0));_fagf ,_bgegc :=_fabc .(*_bc .PdfObjectName );if !_bgegc {return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_fagf !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_dc .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fabc =_bc .TraceToDirectObject (_ceed .Get (1));
_ageb ,_bgegc :=_fabc .(*_bc .PdfObjectDictionary );if !_bgegc {return nil ,_dc .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_fabc =_ageb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fabc =_bc .TraceToDirectObject (_fabc );_acda ,_bgegc :=_fabc .(*_bc .PdfObjectArray );if !_bgegc {return nil ,_dc .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _acda .Len ()!=3{return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gecc ,_edbfa :=_acda .GetAsFloat64Slice ();
if _edbfa !=nil {return nil ,_edbfa ;};_ffdcc .WhitePoint =_gecc ;_fabc =_ageb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fabc !=nil {_fabc =_bc .TraceToDirectObject (_fabc );_edaa ,_cggc :=_fabc .(*_bc .PdfObjectArray );
if !_cggc {return nil ,_dc .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _edaa .Len ()!=3{return nil ,_dc .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_feacc ,_eaba :=_edaa .GetAsFloat64Slice ();if _eaba !=nil {return nil ,_eaba ;};_ffdcc .BlackPoint =_feacc ;};_fabc =_ageb .Get ("\u0047\u0061\u006dm\u0061");if _fabc !=nil {_fabc =_bc .TraceToDirectObject (_fabc );_gfbd ,_gdda :=_bc .GetNumberAsFloat (_fabc );
if _gdda !=nil {return nil ,_dc .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ffdcc .Gamma =_gfbd ;};return _ffdcc ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dadc pdfCIDFontType0 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){return _dg .CharMetrics {Wx :_dadc ._bbggc },true ;};

// GetContentStreams returns the content stream as an array of strings.
func (_edggd *PdfPage )GetContentStreams ()([]string ,error ){_bfecb :=_edggd .GetContentStreamObjs ();var _aecgf []string ;for _ ,_edde :=range _bfecb {_gebff ,_gagee :=_cgbbdc (_edde );if _gagee !=nil {return nil ,_gagee ;};_aecgf =append (_aecgf ,_gebff );
};return _aecgf ,nil ;};func (_bbaf *PdfReader )newPdfAnnotationUnderlineFromDict (_egg *_bc .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_ade :=PdfAnnotationUnderline {};_ccfaf ,_gdfd :=_bbaf .newPdfAnnotationMarkupFromDict (_egg );if _gdfd !=nil {return nil ,_gdfd ;
};_ade .PdfAnnotationMarkup =_ccfaf ;_ade .QuadPoints =_egg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ade ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ffdf *PdfWriter )SetOptimizer (optimizer Optimizer ){_ffdf ._ggbfa =optimizer };

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_bcgcc *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bgcbg []*PdfField ;_fdabc :=map[*_bc .PdfIndirectObject ]struct{}{};for _ ,_gfccd :=range _bcgcc .PageList {_abcgff ,_eaab :=_gfccd .GetAnnotations ();if _eaab !=nil {return _eaab ;
};for _ ,_acde :=range _abcgff {var _geeabc *PdfField ;switch _cbgba :=_acde .GetContext ().(type ){case *PdfAnnotationWidget :if _cbgba ._cae !=nil {_geeabc =_cbgba ._cae ;break ;};if _deaae ,_egbaaa :=_bc .GetIndirect (_cbgba .Parent );_egbaaa {_geeabc ,_eaab =_bcgcc .newPdfFieldFromIndirectObject (_deaae ,nil );
if _eaab ==nil {break ;};_dae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_deaae ,_eaab );
};if _cbgba ._gdfa !=nil {_geeabc ,_eaab =_bcgcc .newPdfFieldFromIndirectObject (_cbgba ._gdfa ,nil );if _eaab ==nil {break ;};_dae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cbgba ._gdfa ,_eaab );
};};if _geeabc ==nil {continue ;};if _ ,_gbdd :=_fdabc [_geeabc ._fegd ];_gbdd {continue ;};_fdabc [_geeabc ._fegd ]=struct{}{};_bgcbg =append (_bgcbg ,_geeabc );};};if len (_bgcbg )==0{return nil ;};if _bcgcc .AcroForm ==nil {_bcgcc .AcroForm =NewPdfAcroForm ();
};_bcgcc .AcroForm .Fields =&_bgcbg ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bee *PdfActionImportData )ToPdfObject ()_bc .PdfObject {_bee .PdfAction .ToPdfObject ();_eda :=_bee ._afdg ;_dgf :=_eda .PdfObject .(*_bc .PdfObjectDictionary );_dgf .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeImportData )));if _bee .F !=nil {_dgf .Set ("\u0046",_bee .F .ToPdfObject ());
};return _eda ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_bcba *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_fdcab :=_bcba .GetContentStreamObjs ();wrapContents =wrapContents &&len (_fdcab )> 0;_accfg :=_bc .NewFlateEncoder ();_cfbgf :=_bc .MakeArray ();if wrapContents {_bffab ,_cage :=_bc .MakeStream ([]byte ("\u0071\u000a"),_accfg );
if _cage !=nil {return _cage ;};_cfbgf .Append (_bffab );};_cfbgf .Append (_fdcab ...);if wrapContents {_decc ,_cabef :=_bc .MakeStream ([]byte ("\u000a\u0051\u000a"),_accfg );if _cabef !=nil {return _cabef ;};_cfbgf .Append (_decc );};_cgde ,_fdfgd :=_bc .MakeStream (cs ,_accfg );
if _fdfgd !=nil {return _fdfgd ;};_cfbgf .Append (_cgde );_bcba .Contents =_cfbgf ;return nil ;};func _edbda (_eaeec *_bc .PdfObjectDictionary )(*PdfShadingType6 ,error ){_edgcc :=PdfShadingType6 {};_fabab :=_eaeec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fabab ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cddaeg ,_eceff :=_fabab .(*_bc .PdfObjectInteger );if !_eceff {_dae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fabab );
return nil ,_bc .ErrTypeError ;};_edgcc .BitsPerCoordinate =_cddaeg ;_fabab =_eaeec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fabab ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cddaeg ,_eceff =_fabab .(*_bc .PdfObjectInteger );if !_eceff {_dae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fabab );
return nil ,_bc .ErrTypeError ;};_edgcc .BitsPerComponent =_cddaeg ;_fabab =_eaeec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fabab ==nil {_dae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cddaeg ,_eceff =_fabab .(*_bc .PdfObjectInteger );if !_eceff {_dae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fabab );
return nil ,_bc .ErrTypeError ;};_edgcc .BitsPerComponent =_cddaeg ;_fabab =_eaeec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fabab ==nil {_dae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbbggd ,_eceff :=_fabab .(*_bc .PdfObjectArray );if !_eceff {_dae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fabab );
return nil ,_bc .ErrTypeError ;};_edgcc .Decode =_cbbggd ;if _adabb :=_eaeec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_adabb !=nil {_edgcc .Function =[]PdfFunction {};if _gaeb ,_feead :=_adabb .(*_bc .PdfObjectArray );_feead {for _ ,_dega :=range _gaeb .Elements (){_ffeag ,_dgceg :=_ffea (_dega );
if _dgceg !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgceg );return nil ,_dgceg ;};_edgcc .Function =append (_edgcc .Function ,_ffeag );
};}else {_eagad ,_cefeg :=_ffea (_adabb );if _cefeg !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cefeg );return nil ,_cefeg ;
};_edgcc .Function =append (_edgcc .Function ,_eagad );};};return &_edgcc ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dce *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bggd :=_cbb .NewReader (img .getBase ());_gfae :=_ecc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dce .AlternateSpace .GetNumComponents (),nil ,img ._ggfad ,nil );
_ggcgc :=_cbb .NewWriter (_gfae );_eaafd :=_da .Pow (2,float64 (img .BitsPerComponent ))-1;_dae .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_dae .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dce .TintTransform );_efgdc :=_dce .AlternateSpace .DecodeArray ();var (_gbbd uint32 ;_fbbc error ;);for {_gbbd ,_fbbc =_bggd .ReadSample ();if _fbbc ==_gbe .EOF {break ;
};if _fbbc !=nil {return img ,_fbbc ;};_ebdec :=float64 (_gbbd )/_eaafd ;_ccaf ,_eddc :=_dce .TintTransform .Evaluate ([]float64 {_ebdec });if _eddc !=nil {return img ,_eddc ;};for _fded ,_gagd :=range _ccaf {_face :=_ecc .LinearInterpolate (_gagd ,_efgdc [_fded *2],_efgdc [_fded *2+1],0,1);
if _eddc =_ggcgc .WriteSample (uint32 (_face *_eaafd ));_eddc !=nil {return img ,_eddc ;};};};return _dce .AlternateSpace .ImageToRGB (_egbafc (&_gfae ));};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_aedc :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_aedc ;};func (_afb *PdfReader )newPdfActionThreadFromDict (_bgf *_bc .PdfObjectDictionary )(*PdfActionThread ,error ){_fcg ,_dbeb :=_beg (_bgf .Get ("\u0046"));
if _dbeb !=nil {return nil ,_dbeb ;};return &PdfActionThread {D :_bgf .Get ("\u0044"),B :_bgf .Get ("\u0042"),F :_fcg },nil ;};func (_ddcf fontCommon )coreString ()string {_bafbc :="";if _ddcf ._feec !=nil {_bafbc =_ddcf ._feec .String ();};return _dc .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ddcf ._caacf ,_ddcf ._fgdf ,_ddcf ._gacef ,_ddcf ._bcfe ,_ddcf ._gdee !=nil ,_ddcf .fontFlags (),_bafbc );
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_edddd []_bc .PdfObject )([]_bc .PdfObject ,error );};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// GetAscent returns the Ascent of the font `descriptor`.
func (_adgf *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bc .GetNumberAsFloat (_adgf .Ascent );};func (_bedad *PdfWriter )writeXRefStreams (_ggfff int ,_cgef int64 )error {_dddb :=_ggfff +1;_bedad ._acede [_dddb ]=crossReference {Type :1,ObjectNumber :_dddb ,Offset :_cgef };
_ddefg :=_bg .NewBuffer (nil );_eggbc :=_bc .MakeArray ();for _bcgaac :=0;_bcgaac <=_ggfff ;{for ;_bcgaac <=_ggfff ;_bcgaac ++{_cdcfc ,_fbbeb :=_bedad ._acede [_bcgaac ];if _fbbeb &&(!_bedad ._dcebde ||_bedad ._dcebde &&(_cdcfc .Type ==1&&_cdcfc .Offset >=_bedad ._gacd ||_cdcfc .Type ==0)){break ;
};};var _cfdde int ;for _cfdde =_bcgaac +1;_cfdde <=_ggfff ;_cfdde ++{_cegfa ,_ddda :=_bedad ._acede [_cfdde ];if _ddda &&(!_bedad ._dcebde ||_bedad ._dcebde &&(_cegfa .Type ==1&&_cegfa .Offset > _bedad ._gacd )){continue ;};break ;};_eggbc .Append (_bc .MakeInteger (int64 (_bcgaac )),_bc .MakeInteger (int64 (_cfdde -_bcgaac )));
for _ddcab :=_bcgaac ;_ddcab < _cfdde ;_ddcab ++{_bdade :=_bedad ._acede [_ddcab ];switch _bdade .Type {case 0:_ff .Write (_ddefg ,_ff .BigEndian ,byte (0));_ff .Write (_ddefg ,_ff .BigEndian ,uint32 (0));_ff .Write (_ddefg ,_ff .BigEndian ,uint16 (0xFFFF));
case 1:_ff .Write (_ddefg ,_ff .BigEndian ,byte (1));_ff .Write (_ddefg ,_ff .BigEndian ,uint32 (_bdade .Offset ));_ff .Write (_ddefg ,_ff .BigEndian ,uint16 (_bdade .Generation ));case 2:_ff .Write (_ddefg ,_ff .BigEndian ,byte (2));_ff .Write (_ddefg ,_ff .BigEndian ,uint32 (_bdade .ObjectNumber ));
_ff .Write (_ddefg ,_ff .BigEndian ,uint16 (_bdade .Index ));};};_bcgaac =_cfdde +1;};_aeceg ,_cffag :=_bc .MakeStream (_ddefg .Bytes (),_bc .NewFlateEncoder ());if _cffag !=nil {return _cffag ;};_aeceg .ObjectNumber =int64 (_dddb );_aeceg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0058\u0052\u0065\u0066"));
_aeceg .PdfObjectDictionary .Set ("\u0057",_bc .MakeArray (_bc .MakeInteger (1),_bc .MakeInteger (4),_bc .MakeInteger (2)));_aeceg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_eggbc );_aeceg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bc .MakeInteger (int64 (_dddb +1)));
_aeceg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_bedad ._eefa );_aeceg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_bedad ._cbdaa );if _bedad ._dcebde &&_bedad ._ebfc > 0{_aeceg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bc .MakeInteger (_bedad ._ebfc ));
};if _bedad ._gadad !=nil {_aeceg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bedad ._ffdgd );};if _bedad ._cgaaa ==nil &&_bedad ._fafc !=""&&_bedad ._fdbdd !=""{_bedad ._cgaaa =_bc .MakeArray (_bc .MakeHexString (_bedad ._fafc ),_bc .MakeHexString (_bedad ._fdbdd ));
};if _bedad ._cgaaa !=nil {_dae .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bedad ._cgaaa );_aeceg .Set ("\u0049\u0044",_bedad ._cgaaa );};_bedad .writeObject (int (_aeceg .ObjectNumber ),_aeceg );return nil ;};func _afab (_afaa *_bc .PdfObjectDictionary )(*PdfShadingType7 ,error ){_fbgfbc :=PdfShadingType7 {};
_fddgb :=_afaa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fddgb ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_egcgd ,_aaeb :=_fddgb .(*_bc .PdfObjectInteger );if !_aaeb {_dae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fddgb );
return nil ,_bc .ErrTypeError ;};_fbgfbc .BitsPerCoordinate =_egcgd ;_fddgb =_afaa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fddgb ==nil {_dae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_egcgd ,_aaeb =_fddgb .(*_bc .PdfObjectInteger );if !_aaeb {_dae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fddgb );
return nil ,_bc .ErrTypeError ;};_fbgfbc .BitsPerComponent =_egcgd ;_fddgb =_afaa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fddgb ==nil {_dae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_egcgd ,_aaeb =_fddgb .(*_bc .PdfObjectInteger );if !_aaeb {_dae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fddgb );
return nil ,_bc .ErrTypeError ;};_fbgfbc .BitsPerComponent =_egcgd ;_fddgb =_afaa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fddgb ==nil {_dae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffdaa ,_aaeb :=_fddgb .(*_bc .PdfObjectArray );if !_aaeb {_dae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fddgb );
return nil ,_bc .ErrTypeError ;};_fbgfbc .Decode =_ffdaa ;if _dddda :=_afaa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dddda !=nil {_fbgfbc .Function =[]PdfFunction {};if _feceg ,_dbccd :=_dddda .(*_bc .PdfObjectArray );_dbccd {for _ ,_aggde :=range _feceg .Elements (){_agaee ,_eeeeb :=_ffea (_aggde );
if _eeeeb !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeeeb );return nil ,_eeeeb ;};_fbgfbc .Function =append (_fbgfbc .Function ,_agaee );
};}else {_afbg ,_babge :=_ffea (_dddda );if _babge !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_babge );return nil ,_babge ;
};_fbgfbc .Function =append (_fbgfbc .Function ,_afbg );};};return &_fbgfbc ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_ggfad []byte ;_ggeec []float64 ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_bfbec *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bc .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _edbd *_bc .PdfIndirectObject ;var _eggd *_bc .PdfObjectName ;var _fbcg *_bc .PdfObjectArray ;if _gffc ,_gcea :=obj .(*_bc .PdfIndirectObject );
_gcea {_edbd =_gffc ;};obj =_bc .TraceToDirectObject (obj );switch _cdada :=obj .(type ){case *_bc .PdfObjectArray :_fbcg =_cdada ;case *_bc .PdfObjectName :_eggd =_cdada ;};if _eggd !=nil {switch *_eggd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_dae .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_eggd );return nil ,_cgfd ;};};if _fbcg !=nil &&_fbcg .Len ()> 0{var _afcf _bc .PdfObject =_edbd ;
if _edbd ==nil {_afcf =_fbcg ;};if _cabe ,_agbc :=_bc .GetName (_fbcg .Get (0));_agbc {switch _cabe .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fbcg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fbcg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fbcg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ebdf (_afcf );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _egfa (_afcf );
case "\u004c\u0061\u0062":return _aggg (_afcf );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _afae (_afcf );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bced (_afcf );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dcba (_afcf );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dacebb (_afcf );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _dcfg (_afcf );default:_dae .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_cabe );
};};};_dae .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fcbcf *PdfFont )ToUnicode ()string {if _fcbcf .baseFields ()._bdbee ==nil {return "";};return _fcbcf .baseFields ()._bdbee .Name ();};

// GetOCProperties returns the optional content properties PdfObject.
func (_dgdad *PdfReader )GetOCProperties ()(_bc .PdfObject ,error ){_gebef :=_dgdad ._bdbea ;_dbgfe :=_gebef .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dbgfe =_bc .ResolveReference (_dbgfe );if !_dgdad ._egcb {_gaeg :=_dgdad .traverseObjectData (_dbgfe );
if _gaeg !=nil {return nil ,_gaeg ;};};return _dbgfe ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_cbdb pdfFontSimple )GetCharMetrics (code _cabg .CharCode )(_dg .CharMetrics ,bool ){if _dgee ,_gaccd :=_cbdb ._cddc [code ];_gaccd {return _dg .CharMetrics {Wx :_dgee },true ;};if _dg .IsStdFont (_dg .StdFontName (_cbdb ._fgdf )){return _dg .CharMetrics {Wx :250},true ;
};return _dg .CharMetrics {},false ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_cbdaa *_bc .PdfIndirectObject ;_gagfc *_bc .PdfIndirectObject ;_deacf map[_bc .PdfObject ]struct{};_bcbab []_bc .PdfObject ;_dbfde map[_bc .PdfObject ]struct{};_dcee []*_bc .PdfIndirectObject ;_aefe *PdfOutlineTreeNode ;_bdbgc *_bc .PdfObjectDictionary ;
_baffd []_bc .PdfObject ;_eefa *_bc .PdfIndirectObject ;_adccb *_c .Writer ;_ddaaa int64 ;_bdda error ;_gadad *_bc .PdfCrypt ;_febee *_bc .PdfObjectDictionary ;_ffdgd *_bc .PdfIndirectObject ;_cgaaa *_bc .PdfObjectArray ;_efeae _bc .Version ;_egcbbc *bool ;
_bdgd map[_bc .PdfObject ][]*_bc .PdfObjectDictionary ;_ggbce *PdfAcroForm ;_ggbfa Optimizer ;_egad StandardApplier ;_acede map[int ]crossReference ;_edece int64 ;ObjNumOffset int ;_dcebde bool ;_cdgcc _bc .XrefTable ;_ebfc int64 ;_gacd int64 ;_dgcaa map[_bc .PdfObject ]int64 ;
_cgeae map[_bc .PdfObject ]struct{};_ddccd string ;_fgdff []*PdfOutputIntent ;_fdcdad bool ;_fafc ,_fdbdd string ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bc .PdfObject ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_dgba *Image )ColorAt (x ,y int )(_ag .Color ,error ){_gbgbe :=_ecc .BytesPerLine (int (_dgba .Width ),int (_dgba .BitsPerComponent ),_dgba .ColorComponents );switch _dgba .ColorComponents {case 1:return _ecc .ColorAtGrayscale (x ,y ,int (_dgba .BitsPerComponent ),_gbgbe ,_dgba .Data ,_dgba ._ggeec );
case 3:return _ecc .ColorAtNRGBA (x ,y ,int (_dgba .Width ),_gbgbe ,int (_dgba .BitsPerComponent ),_dgba .Data ,_dgba ._ggfad ,_dgba ._ggeec );case 4:return _ecc .ColorAtCMYK (x ,y ,int (_dgba .Width ),_dgba .Data ,_dgba ._ggeec );};_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dgba .ColorComponents ,_dgba .BitsPerComponent );
return nil ,_ecg .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_agfa *PdfColorCalRGB )GetNumComponents ()int {return 3};

// Subtype returns the font's "Subtype" field.
func (_ddcag *PdfFont )Subtype ()string {_bbdfc :=_ddcag .baseFields ()._caacf ;if _bbdfe ,_cacga :=_ddcag ._adffg .(*pdfFontType0 );_cacga {_bbdfc =_bbdfc +"\u003a"+_bbdfe .DescendantFont .Subtype ();};return _bbdfc ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_cefc *PdfPage )error ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bc .PdfObject ;FontFamily _bc .PdfObject ;FontStretch _bc .PdfObject ;FontWeight _bc .PdfObject ;Flags _bc .PdfObject ;FontBBox _bc .PdfObject ;ItalicAngle _bc .PdfObject ;Ascent _bc .PdfObject ;Descent _bc .PdfObject ;
Leading _bc .PdfObject ;CapHeight _bc .PdfObject ;XHeight _bc .PdfObject ;StemV _bc .PdfObject ;StemH _bc .PdfObject ;AvgWidth _bc .PdfObject ;MaxWidth _bc .PdfObject ;MissingWidth _bc .PdfObject ;FontFile _bc .PdfObject ;FontFile2 _bc .PdfObject ;FontFile3 _bc .PdfObject ;
CharSet _bc .PdfObject ;_aafdg int ;_bbgg float64 ;*fontFile ;_edfe *_dg .TtfType ;

// Additional entries for CIDFonts
Style _bc .PdfObject ;Lang _bc .PdfObject ;FD _bc .PdfObject ;CIDSet _bc .PdfObject ;_effbe *_bc .PdfIndirectObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dcab *PdfColorspaceCalRGB )ToPdfObject ()_bc .PdfObject {_geeg :=&_bc .PdfObjectArray {};_geeg .Append (_bc .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_beegd :=_bc .MakeDict ();if _dcab .WhitePoint !=nil {_afed :=_bc .MakeArray (_bc .MakeFloat (_dcab .WhitePoint [0]),_bc .MakeFloat (_dcab .WhitePoint [1]),_bc .MakeFloat (_dcab .WhitePoint [2]));
_beegd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_afed );}else {_dae .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _dcab .BlackPoint !=nil {_affaf :=_bc .MakeArray (_bc .MakeFloat (_dcab .BlackPoint [0]),_bc .MakeFloat (_dcab .BlackPoint [1]),_bc .MakeFloat (_dcab .BlackPoint [2]));_beegd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_affaf );
};if _dcab .Gamma !=nil {_abga :=_bc .MakeArray (_bc .MakeFloat (_dcab .Gamma [0]),_bc .MakeFloat (_dcab .Gamma [1]),_bc .MakeFloat (_dcab .Gamma [2]));_beegd .Set ("\u0047\u0061\u006dm\u0061",_abga );};if _dcab .Matrix !=nil {_affea :=_bc .MakeArray (_bc .MakeFloat (_dcab .Matrix [0]),_bc .MakeFloat (_dcab .Matrix [1]),_bc .MakeFloat (_dcab .Matrix [2]),_bc .MakeFloat (_dcab .Matrix [3]),_bc .MakeFloat (_dcab .Matrix [4]),_bc .MakeFloat (_dcab .Matrix [5]),_bc .MakeFloat (_dcab .Matrix [6]),_bc .MakeFloat (_dcab .Matrix [7]),_bc .MakeFloat (_dcab .Matrix [8]));
_beegd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_affea );};_geeg .Append (_beegd );if _dcab ._adgb !=nil {_dcab ._adgb .PdfObject =_geeg ;return _dcab ._adgb ;};return _geeg ;};func (_fcbee *PdfWriter )makeOffSetReference (_eceg int64 ){_debde :=_dc .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_eceg );
_fcbee .writeString (_debde );_fcbee .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};func _eccad (_fdgcb []byte )(_ccga ,_dgcf string ,_edfbd error ){_dae .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_fdgcb ));
_gegcg :=_fcdc .FindIndex (_fdgcb );if _gegcg ==nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bc .ErrTypeError ;};_gcgg :=_gegcg [1];_ccbd :=_dee .Index (string (_fdgcb [_gcgg :]),_dfcec );if _ccbd < 0{_ccga =string (_fdgcb [_gcgg :]);return _ccga ,"",nil ;};_fdfg :=_gcgg +_ccbd ;_ccga =string (_fdgcb [_gcgg :_fdfg ]);_cgdad :=_fdfg ;
_ccbd =_dee .Index (string (_fdgcb [_cgdad :]),_fdfc );if _ccbd < 0{_dae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_edfbd );
return "","",_bc .ErrTypeError ;};_aeef :=_cgdad +_ccbd ;_dgcf =string (_fdgcb [_cgdad :_aeef ]);return _ccga ,_dgcf ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_fea :=NewPdfAnnotation ();_cece :=&PdfAnnotationPopup {};_cece .PdfAnnotation =_fea ;_fea .SetContext (_cece );return _cece ;};var _ _bc .PdfObject =&pdfSignDictionary {};func _aeac (_egaf *_bc .PdfObjectDictionary )bool {for _ ,_cdbaf :=range _egaf .Keys (){if _ ,_febdc :=_ebbed [_cdbaf .String ()];
_febdc {return true ;};};return false ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_acg :=NewPdfAnnotation ();_fdf :=&PdfAnnotationSquare {};_fdf .PdfAnnotation =_acg ;_fdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acg .SetContext (_fdf );return _fdf ;};func (_ddfa *PdfReader )newPdfAnnotationFileAttachmentFromDict (_fdbf *_bc .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_agg :=PdfAnnotationFileAttachment {};
_cgc ,_gcee :=_ddfa .newPdfAnnotationMarkupFromDict (_fdbf );if _gcee !=nil {return nil ,_gcee ;};_agg .PdfAnnotationMarkup =_cgc ;_agg .FS =_fdbf .Get ("\u0046\u0053");_agg .Name =_fdbf .Get ("\u004e\u0061\u006d\u0065");return &_agg ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bc .PdfIndirectObject ;SV *_bc .PdfIndirectObject ;};

// PartialName returns the partial name of the field.
func (_cfbfe *PdfField )PartialName ()string {_dbdac :="";if _cfbfe .T !=nil {_dbdac =_cfbfe .T .Decoded ();}else {_dae .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _dbdac ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fgc :=NewPdfAction ();_gbb :=&PdfActionGoTo3DView {};_gbb .PdfAction =_fgc ;_fgc .SetContext (_gbb );return _gbb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbeca *PdfShadingType5 )ToPdfObject ()_bc .PdfObject {_gbeca .PdfShading .ToPdfObject ();_afeb ,_dgeb :=_gbeca .getShadingDict ();if _dgeb !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gbeca .BitsPerCoordinate !=nil {_afeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gbeca .BitsPerCoordinate );};if _gbeca .BitsPerComponent !=nil {_afeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbeca .BitsPerComponent );
};if _gbeca .VerticesPerRow !=nil {_afeb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_gbeca .VerticesPerRow );};if _gbeca .Decode !=nil {_afeb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gbeca .Decode );};if _gbeca .Function !=nil {if len (_gbeca .Function )==1{_afeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbeca .Function [0].ToPdfObject ());
}else {_dbac :=_bc .MakeArray ();for _ ,_geefb :=range _gbeca .Function {_dbac .Append (_geefb .ToPdfObject ());};_afeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbac );};};return _gbeca ._agbee ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gbe .ReadSeeker )(*PdfReader ,error ){const _afcag ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _gaaeg (rs ,&ReaderOpts {LazyLoad :true },false ,_afcag );
};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_acd :=NewPdfAnnotation ();_ged :=&PdfAnnotationPrinterMark {};_ged .PdfAnnotation =_acd ;_acd .SetContext (_ged );return _ged ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bc .PdfObject ;NewWindow _bc .PdfObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bde :=NewPdfAnnotation ();_aeb :=&PdfAnnotationUnderline {};_aeb .PdfAnnotation =_bde ;_aeb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bde .SetContext (_aeb );return _aeb ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_edfd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _edfd .RunesToCharcodeBytes ([]rune (str ));};

// ToPdfObject implements interface PdfModel.
func (_effc *PdfAnnotationStrikeOut )ToPdfObject ()_bc .PdfObject {_effc .PdfAnnotation .ToPdfObject ();_bbee :=_effc ._gdfa ;_dccd :=_bbee .PdfObject .(*_bc .PdfObjectDictionary );_effc .PdfAnnotationMarkup .appendToPdfDictionary (_dccd );_dccd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_dccd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_effc .QuadPoints );return _bbee ;};func (_eecaf *pdfFontType0 )bytesToCharcodes (_gede []byte )([]_cabg .CharCode ,bool ){if _eecaf ._bddf ==nil {return nil ,false ;};_ccbef ,_beefga :=_eecaf ._bddf .BytesToCharcodes (_gede );
if !_beefga {return nil ,false ;};_cdceb :=make ([]_cabg .CharCode ,len (_ccbef ));for _fffad ,_fceea :=range _ccbef {_cdceb [_fffad ]=_cabg .CharCode (_fceea );};return _cdceb ,true ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_dcaa *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dcaa .AlternateSpace ==nil {return nil ,_ecg .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _dcaa .AlternateSpace .ColorToRGB (color );};func (_bbaa *PdfReader )newPdfAnnotationRedactFromDict (_babf *_bc .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fgad :=PdfAnnotationRedact {};_cfee ,_becf :=_bbaa .newPdfAnnotationMarkupFromDict (_babf );
if _becf !=nil {return nil ,_becf ;};_fgad .PdfAnnotationMarkup =_cfee ;_fgad .QuadPoints =_babf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fgad .IC =_babf .Get ("\u0049\u0043");_fgad .RO =_babf .Get ("\u0052\u004f");_fgad .OverlayText =_babf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fgad .Repeat =_babf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fgad .DA =_babf .Get ("\u0044\u0041");_fgad .Q =_babf .Get ("\u0051");return &_fgad ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_adbcf *PdfShadingType2 )ToPdfObject ()_bc .PdfObject {_adbcf .PdfShading .ToPdfObject ();_afccc ,_gcbdb :=_adbcf .getShadingDict ();if _gcbdb !=nil {_dae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _afccc ==nil {_dae .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _adbcf .Coords !=nil {_afccc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_adbcf .Coords );
};if _adbcf .Domain !=nil {_afccc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adbcf .Domain );};if _adbcf .Function !=nil {if len (_adbcf .Function )==1{_afccc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adbcf .Function [0].ToPdfObject ());
}else {_aedgd :=_bc .MakeArray ();for _ ,_bcedd :=range _adbcf .Function {_aedgd .Append (_bcedd .ToPdfObject ());};_afccc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aedgd );};};if _adbcf .Extend !=nil {_afccc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_adbcf .Extend );
};return _adbcf ._agbee ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_faeea *PdfOutline )GetContainingPdfObject ()_bc .PdfObject {return _faeea ._eadg };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ddae *Image )AlphaMap (mapFunc AlphaMapFunc ){for _cddbc ,_bbdgd :=range _ddae ._ggfad {_ddae ._ggfad [_cddbc ]=mapFunc (_bbdgd );};};

// String returns a string that describes `base`.
func (_cdbcg fontCommon )String ()string {return _dc .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_cdbcg .coreString ());};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bc .PdfObjectArray )(*PdfRectangle ,error ){_ceggb :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _aaebd error ;_ceggb .Llx ,_aaebd =_bc .GetNumberAsFloat (arr .Get (0));if _aaebd !=nil {return nil ,_aaebd ;};_ceggb .Lly ,_aaebd =_bc .GetNumberAsFloat (arr .Get (1));if _aaebd !=nil {return nil ,_aaebd ;};_ceggb .Urx ,_aaebd =_bc .GetNumberAsFloat (arr .Get (2));
if _aaebd !=nil {return nil ,_aaebd ;};_ceggb .Ury ,_aaebd =_bc .GetNumberAsFloat (arr .Get (3));if _aaebd !=nil {return nil ,_aaebd ;};return &_ceggb ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_efbaa *XObjectImage )ToImage ()(*Image ,error ){_gbgff :=&Image {};if _efbaa .Height ==nil {return nil ,_ecg .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gbgff .Height =*_efbaa .Height ;if _efbaa .Width ==nil {return nil ,_ecg .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gbgff .Width =*_efbaa .Width ;if _efbaa .BitsPerComponent ==nil {switch _efbaa .Filter .(type ){case *_bc .CCITTFaxEncoder ,*_bc .JBIG2Encoder :_gbgff .BitsPerComponent =1;
case *_bc .LZWEncoder ,*_bc .RunLengthEncoder :_gbgff .BitsPerComponent =8;default:return nil ,_ecg .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_gbgff .BitsPerComponent =*_efbaa .BitsPerComponent ;};_gbgff .ColorComponents =_efbaa .ColorSpace .GetNumComponents ();_efbaa ._egeff .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bc .MakeInteger (int64 (_gbgff .ColorComponents )));
_ggfaf ,_acaa :=_bc .DecodeStream (_efbaa ._egeff );if _acaa !=nil {return nil ,_acaa ;};_gbgff .Data =_ggfaf ;if _efbaa .Decode !=nil {_baeae ,_bcbge :=_efbaa .Decode .(*_bc .PdfObjectArray );if !_bcbge {_dae .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ecg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ggfbb ,_eafbg :=_baeae .ToFloat64Array ();if _eafbg !=nil {return nil ,_eafbg ;};_gbgff ._ggeec =_ggfbb ;};return _gbgff ,nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_egfe int ,_fgbga *PdfPage );func (_ffbec *PdfReader )buildPageList (_cbdaf *_bc .PdfIndirectObject ,_ceeed *_bc .PdfIndirectObject ,_acafc map[_bc .PdfObject ]struct{})error {if _cbdaf ==nil {return nil ;};if _ ,_ggdgf :=_acafc [_cbdaf ];
_ggdgf {_dae .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cbdaf .ObjectNumber );return nil ;};_acafc [_cbdaf ]=struct{}{};
_abeg ,_gfece :=_cbdaf .PdfObject .(*_bc .PdfObjectDictionary );if !_gfece {return _ecg .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gdcfd ,_gfece :=(*_abeg ).Get ("\u0054\u0079\u0070\u0065").(*_bc .PdfObjectName );
if !_gfece {if _abeg .Get ("\u004b\u0069\u0064\u0073")==nil {return _ecg .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_dae .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_gdcfd =_bc .MakeName ("\u0050\u0061\u0067e\u0073");_abeg .Set ("\u0054\u0079\u0070\u0065",_gdcfd );};_dae .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gdcfd ,_cbdaf );
if *_gdcfd =="\u0050\u0061\u0067\u0065"{_acfba ,_fbceg :=_ffbec .newPdfPageFromDict (_abeg );if _fbceg !=nil {return _fbceg ;};_acfba .setContainer (_cbdaf );if _ceeed !=nil {_abeg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ceeed );};_ffbec ._ggfd =append (_ffbec ._ggfd ,_cbdaf );
_ffbec .PageList =append (_ffbec .PageList ,_acfba );return nil ;};if *_gdcfd !="\u0050\u0061\u0067e\u0073"{_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gdcfd );
return _ecg .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _ceeed !=nil {_abeg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ceeed );};if !_ffbec ._egcb {_bebea :=_ffbec .traverseObjectData (_cbdaf );if _bebea !=nil {return _bebea ;};};_abecc ,_eecfd :=_ffbec ._afedg .Resolve (_abeg .Get ("\u004b\u0069\u0064\u0073"));
if _eecfd !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _eecfd ;};var _ddec *_bc .PdfObjectArray ;
_ddec ,_gfece =_abecc .(*_bc .PdfObjectArray );if !_gfece {_fbff ,_ggbff :=_abecc .(*_bc .PdfIndirectObject );if !_ggbff {return _ecg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddec ,_gfece =_fbff .PdfObject .(*_bc .PdfObjectArray );
if !_gfece {return _ecg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_dae .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ddec );
for _gdcfg ,_ffbda :=range _ddec .Elements (){_ecag ,_dfbg :=_bc .GetIndirect (_ffbda );if !_dfbg {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ecag );
return _ecg .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddec .Set (_gdcfg ,_ecag );_eecfd =_ffbec .buildPageList (_ecag ,_cbdaf ,_acafc );if _eecfd !=nil {return _eecfd ;
};};return nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_aaegb *PdfPageResources )GetXObjectByName (keyName _bc .PdfObjectName )(*_bc .PdfObjectStream ,XObjectType ){if _aaegb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cgaae ,_bece :=_bc .TraceToDirectObject (_aaegb .XObject ).(*_bc .PdfObjectDictionary );
if !_bece {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bc .TraceToDirectObject (_aaegb .XObject ));
return nil ,XObjectTypeUndefined ;};if _dccad :=_cgaae .Get (keyName );_dccad !=nil {_ebebg ,_fdadde :=_bc .GetStream (_dccad );if !_fdadde {_dae .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_dccad );
return nil ,XObjectTypeUndefined ;};_abdeg :=_ebebg .PdfObjectDictionary ;_dcbag ,_fdadde :=_bc .TraceToDirectObject (_abdeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bc .PdfObjectName );if !_fdadde {_dae .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_abdeg .String ());
return nil ,XObjectTypeUndefined ;};if *_dcbag =="\u0049\u006d\u0061g\u0065"{return _ebebg ,XObjectTypeImage ;}else if *_dcbag =="\u0046\u006f\u0072\u006d"{return _ebebg ,XObjectTypeForm ;}else if *_dcbag =="\u0050\u0053"{return _ebebg ,XObjectTypePS ;
}else {_dae .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_dcbag );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_afec pdfCIDFontType2 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){_affc ,_adef :=_afec ._egfd [r ];if !_adef {_abbg ,_adfg :=_bc .GetInt (_afec .DW );if !_adfg {return _dg .CharMetrics {},false ;};_affc =int (*_abbg );};return _dg .CharMetrics {Wx :float64 (_affc )},true ;
};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_fg :=NewPdfAction ();_dfc :=&PdfActionGoToR {};_dfc .PdfAction =_fg ;_fg .SetContext (_dfc );return _dfc ;};func (_dbb *PdfReader )newPdfAnnotationStrikeOut (_abc *_bc .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_eedb :=PdfAnnotationStrikeOut {};
_ecaf ,_fadd :=_dbb .newPdfAnnotationMarkupFromDict (_abc );if _fadd !=nil {return nil ,_fadd ;};_eedb .PdfAnnotationMarkup =_ecaf ;_eedb .QuadPoints =_abc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eedb ,nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_cagba *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _adedc []*PdfOutlineTreeNode ;var _dgbbg []string ;var _bggaad func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_bggaad =func (_bdgbd *PdfOutlineTreeNode ,_afgba *[]*PdfOutlineTreeNode ,_ffgb *[]string ,_bcfag int ){if _bdgbd ==nil {return ;
};if _bdgbd ._bgbe ==nil {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_cecfc ,_dgabe :=_bdgbd ._bgbe .(*PdfOutlineItem );if _dgabe {*_afgba =append (*_afgba ,&_cecfc .PdfOutlineTreeNode );
_ddddf :=_dee .Repeat ("\u0020",_bcfag *2)+_cecfc .Title .Decoded ();*_ffgb =append (*_ffgb ,_ddddf );};if _bdgbd .First !=nil {_eedcb :=_dee .Repeat ("\u0020",_bcfag *2)+"\u002b";*_ffgb =append (*_ffgb ,_eedcb );_bggaad (_bdgbd .First ,_afgba ,_ffgb ,_bcfag +1);
};if _dgabe &&_cecfc .Next !=nil {_bggaad (_cecfc .Next ,_afgba ,_ffgb ,_bcfag );};};_bggaad (_cagba ._abdb ,&_adedc ,&_dgbbg ,0);return _adedc ,_dgbbg ,nil ;};func (_ceec *PdfFunctionType0 )processSamples ()error {_cggd :=_cbb .ResampleBytes (_ceec ._acfeb ,_ceec .BitsPerSample );
_ceec ._bdced =_cggd ;return nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_ecbgd *PdfWriter )SetDocInfo (info *PdfInfo ){_ecbgd .setDocInfo (info .ToPdfObject ())};

// GetContentStream returns the XObject Form's content stream.
func (_bbabb *XObjectForm )GetContentStream ()([]byte ,error ){_dbece ,_adbda :=_bc .DecodeStream (_bbabb ._abgdag );if _adbda !=nil {return nil ,_adbda ;};return _dbece ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_fgcg *PdfAppender )WriteToFile (outputPath string )error {_eeedf ,_ecade :=_cg .Create (outputPath );if _ecade !=nil {return _ecade ;};defer _eeedf .Close ();return _fgcg .Write (_eeedf );};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cead FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cead .Mask ()|fl .Mask ())};func _bfeda (_eafab []byte )[]byte {const _decef =52845;const _ecdg =22719;_bffeb :=55665;for _ ,_bfbb :=range _eafab [:4]{_bffeb =(int (_bfbb )+_bffeb )*_decef +_ecdg ;
};_ffga :=make ([]byte ,len (_eafab )-4);for _ffac ,_fddd :=range _eafab [4:]{_ffga [_ffac ]=byte (int (_fddd )^_bffeb >>8);_bffeb =(int (_fddd )+_bffeb )*_decef +_ecdg ;};return _ffga ;};func _ggffa ()string {_eccage .Lock ();defer _eccage .Unlock ();
return _ddggd };const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bc .PdfObject ;H _bc .PdfObject ;};func (_dadd *PdfPage )getParentResources ()(*PdfPageResources ,error ){_ebdgb :=_dadd .Parent ;for _ebdgb !=nil {_cbgc ,_dddge :=_bc .GetDict (_ebdgb );if !_dddge {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_ecg .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _beaec :=_cbgc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_beaec !=nil {_fgdd ,_gbcdd :=_bc .GetDict (_beaec );
if !_gbcdd {return nil ,_ecg .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bbgfb ,_febed :=NewPdfPageResourcesFromDict (_fgdd );if _febed !=nil {return nil ,_febed ;};return _bbgfb ,nil ;
};_ebdgb =_cbgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_eadg *_bc .PdfIndirectObject ;};func (_dbgf *PdfReader )newPdfActionNamedFromDict (_gad *_bc .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gad .Get ("\u004e")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_dbae *PdfAnnotationPolygon )ToPdfObject ()_bc .PdfObject {_dbae .PdfAnnotation .ToPdfObject ();_gacb :=_dbae ._gdfa ;_bcffa :=_gacb .PdfObject .(*_bc .PdfObjectDictionary );_dbae .PdfAnnotationMarkup .appendToPdfDictionary (_bcffa );_bcffa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_bcffa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dbae .Vertices );_bcffa .SetIfNotNil ("\u004c\u0045",_dbae .LE );_bcffa .SetIfNotNil ("\u0042\u0053",_dbae .BS );_bcffa .SetIfNotNil ("\u0049\u0043",_dbae .IC );_bcffa .SetIfNotNil ("\u0042\u0045",_dbae .BE );
_bcffa .SetIfNotNil ("\u0049\u0054",_dbae .IT );_bcffa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dbae .Measure );return _gacb ;};func (_ccdedd *PdfWriter )writeBytes (_egbea []byte ){if _ccdedd ._bdda !=nil {return ;};_fffb ,_dfeff :=_ccdedd ._adccb .Write (_egbea );
_ccdedd ._ddaaa +=int64 (_fffb );_ccdedd ._bdda =_dfeff ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_feba *PdfOutlineItem )GetContainingPdfObject ()_bc .PdfObject {return _feba ._affd };

// ToPdfObject returns the PDF representation of the colorspace.
func (_dfecc *PdfColorspaceSpecialPattern )ToPdfObject ()_bc .PdfObject {if _dfecc .UnderlyingCS ==nil {return _bc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_ccdc :=_bc .MakeArray (_bc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ccdc .Append (_dfecc .UnderlyingCS .ToPdfObject ());
if _dfecc ._bfca !=nil {_dfecc ._bfca .PdfObject =_ccdc ;return _dfecc ._bfca ;};return _ccdc ;};

// L returns the value of the L component of the color.
func (_cdffg *PdfColorLab )L ()float64 {return _cdffg [0]};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_afdf *_bc .PdfObjectDictionary ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bc .PdfObject ;LE _bc .PdfObject ;BS _bc .PdfObject ;IC _bc .PdfObject ;BE _bc .PdfObject ;IT _bc .PdfObject ;Measure _bc .PdfObject ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_deg :=NewPdfAction ();_gae :=&PdfActionJavaScript {};_gae .PdfAction =_deg ;_deg .SetContext (_gae );return _gae ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_bff :=&PdfAnnotation {};_bff ._gdfa =_bc .MakeIndirectObject (_bc .MakeDict ());return _bff ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bc .PdfObject ;Popup *PdfAnnotationPopup ;CA _bc .PdfObject ;RC _bc .PdfObject ;CreationDate _bc .PdfObject ;IRT _bc .PdfObject ;Subj _bc .PdfObject ;RT _bc .PdfObject ;IT _bc .PdfObject ;ExData _bc .PdfObject ;};func (_cbgec *PdfWriter )optimize ()error {if _cbgec ._ggbfa ==nil {return nil ;
};var _cafbf error ;_cbgec ._bcbab ,_cafbf =_cbgec ._ggbfa .Optimize (_cbgec ._bcbab );if _cafbf !=nil {return _cafbf ;};_afbga :=make (map[_bc .PdfObject ]struct{},len (_cbgec ._bcbab ));for _ ,_baabb :=range _cbgec ._bcbab {_afbga [_baabb ]=struct{}{};
};_cbgec ._dbfde =_afbga ;return nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bfd *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bfd .Range };

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bc .PdfObject ;RichMediaContent _bc .PdfObject ;};func (_gacgc PdfFont )actualFont ()pdfFont {if _gacgc ._adffg ==nil {_dae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gacgc );
};return _gacgc ._adffg ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bc .PdfObject )(*PdfFilespec ,error ){_cdcc :=&PdfFilespec {};var _efdd *_bc .PdfObjectDictionary ;if _accd ,_eeba :=_bc .GetIndirect (obj );_eeba {_cdcc ._afeeg =_accd ;_fabdc ,_ffee :=_bc .GetDict (_accd .PdfObject );
if !_ffee {_dae .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bc .ErrTypeError ;};_efdd =_fabdc ;}else if _fdfb ,_bdgc :=_bc .GetDict (obj );
_bdgc {_cdcc ._afeeg =_fdfb ;_efdd =_fdfb ;}else {_dae .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bc .ErrTypeError ;};if _efdd ==nil {_dae .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ecg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _eafdd :=_efdd .Get ("\u0054\u0079\u0070\u0065");_eafdd !=nil {_bgdgd ,_efegc :=_eafdd .(*_bc .PdfObjectName );if !_efegc {_dae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eafdd );
}else {if *_bgdgd !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_dae .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bgdgd );
};};};if _feegf :=_efdd .Get ("\u0046\u0053");_feegf !=nil {_cdcc .FS =_feegf ;};if _edcb :=_efdd .Get ("\u0046");_edcb !=nil {_cdcc .F =_edcb ;};if _gfdc :=_efdd .Get ("\u0055\u0046");_gfdc !=nil {_cdcc .UF =_gfdc ;};if _beff :=_efdd .Get ("\u0044\u004f\u0053");
_beff !=nil {_cdcc .DOS =_beff ;};if _dgbcd :=_efdd .Get ("\u004d\u0061\u0063");_dgbcd !=nil {_cdcc .Mac =_dgbcd ;};if _dfeace :=_efdd .Get ("\u0055\u006e\u0069\u0078");_dfeace !=nil {_cdcc .Unix =_dfeace ;};if _dbee :=_efdd .Get ("\u0049\u0044");_dbee !=nil {_cdcc .ID =_dbee ;
};if _faca :=_efdd .Get ("\u0056");_faca !=nil {_cdcc .V =_faca ;};if _cbbg :=_efdd .Get ("\u0045\u0046");_cbbg !=nil {_cdcc .EF =_cbbg ;};if _agbbf :=_efdd .Get ("\u0052\u0046");_agbbf !=nil {_cdcc .RF =_agbbf ;};if _bgea :=_efdd .Get ("\u0044\u0065\u0073\u0063");
_bgea !=nil {_cdcc .Desc =_bgea ;};if _fcfac :=_efdd .Get ("\u0043\u0049");_fcfac !=nil {_cdcc .CI =_fcfac ;};return _cdcc ,nil ;};func (_gcbff *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject implements interface PdfModel.
func (_babe *PdfAnnotationText )ToPdfObject ()_bc .PdfObject {_babe .PdfAnnotation .ToPdfObject ();_ccbf :=_babe ._gdfa ;_dbeba :=_ccbf .PdfObject .(*_bc .PdfObjectDictionary );if _babe .PdfAnnotationMarkup !=nil {_babe .PdfAnnotationMarkup .appendToPdfDictionary (_dbeba );
};_dbeba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0054\u0065\u0078\u0074"));_dbeba .SetIfNotNil ("\u004f\u0070\u0065\u006e",_babe .Open );_dbeba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_babe .Name );_dbeba .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_babe .State );
_dbeba .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_babe .StateModel );return _ccbf ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bc .PdfObjectInteger ;BitsPerComponent *_bc .PdfObjectInteger ;VerticesPerRow *_bc .PdfObjectInteger ;Decode *_bc .PdfObjectArray ;Function []PdfFunction ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_accg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _accg ._begg .(*PdfShadingPattern );};

// Val returns the color value.
func (_dcde *PdfColorDeviceGray )Val ()float64 {return float64 (*_dcde )};func (_bddeb *PdfReader )newPdfPageFromDict (_dgcbg *_bc .PdfObjectDictionary )(*PdfPage ,error ){_agdga :=NewPdfPage ();_agdga ._cbcce =_dgcbg ;_fagca :=*_dgcbg ;_feag ,_gbbcf :=_fagca .Get ("\u0054\u0079\u0070\u0065").(*_bc .PdfObjectName );
if !_gbbcf {return nil ,_ecg .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_feag !="\u0050\u0061\u0067\u0065"{return nil ,_ecg .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _gccgd :=_fagca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gccgd !=nil {_agdga .Parent =_gccgd ;};if _gcaeee :=_fagca .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gcaeee !=nil {_cdbggg ,_gfecd :=_bc .GetString (_gcaeee );
if !_gfecd {return nil ,_ecg .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_ggdfc ,_ddad :=NewPdfDate (_cdbggg .Str ());if _ddad !=nil {return nil ,_ddad ;};_agdga .LastModified =&_ggdfc ;};if _fdbca :=_fagca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fdbca !=nil &&!_bc .IsNullObject (_fdbca ){_abec ,_fgggb :=_bc .GetDict (_fdbca );
if !_fgggb {return nil ,_dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fdbca );};var _eefcf error ;_agdga .Resources ,_eefcf =NewPdfPageResourcesFromDict (_abec );
if _eefcf !=nil {return nil ,_eefcf ;};}else {_facb ,_bfdcg :=_agdga .getParentResources ();if _bfdcg !=nil {return nil ,_bfdcg ;};if _facb ==nil {_facb =NewPdfPageResources ();};_agdga .Resources =_facb ;};if _fbdfb :=_fagca .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fbdfb !=nil {_eeee ,_ebebbg :=_bc .GetArray (_fbdfb );if !_ebebbg {return nil ,_ecg .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _ebee error ;
_agdga .MediaBox ,_ebee =NewPdfRectangle (*_eeee );if _ebee !=nil {return nil ,_ebee ;};};if _eedeg :=_fagca .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_eedeg !=nil {_dacbd ,_bccbc :=_bc .GetArray (_eedeg );if !_bccbc {return nil ,_ecg .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _cdgd error ;_agdga .CropBox ,_cdgd =NewPdfRectangle (*_dacbd );if _cdgd !=nil {return nil ,_cdgd ;};};if _agcbc :=_fagca .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_agcbc !=nil {_fgadf ,_edcce :=_bc .GetArray (_agcbc );if !_edcce {return nil ,_ecg .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _egdd error ;_agdga .BleedBox ,_egdd =NewPdfRectangle (*_fgadf );if _egdd !=nil {return nil ,_egdd ;};};if _fadc :=_fagca .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_fadc !=nil {_aecdc ,_babdg :=_bc .GetArray (_fadc );if !_babdg {return nil ,_ecg .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ddfaf error ;_agdga .TrimBox ,_ddfaf =NewPdfRectangle (*_aecdc );if _ddfaf !=nil {return nil ,_ddfaf ;};};if _gdfabe :=_fagca .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gdfabe !=nil {_cgfaee ,_cbbggc :=_bc .GetArray (_gdfabe );if !_cbbggc {return nil ,_ecg .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _adecf error ;_agdga .ArtBox ,_adecf =NewPdfRectangle (*_cgfaee );if _adecf !=nil {return nil ,_adecf ;};};if _eaeae :=_fagca .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_eaeae !=nil {_agdga .BoxColorInfo =_eaeae ;
};if _dcegg :=_fagca .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_dcegg !=nil {_agdga .Contents =_dcegg ;};if _gdfc :=_fagca .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gdfc !=nil {_ffdae ,_bgab :=_bc .GetNumberAsInt64 (_gdfc );if _bgab !=nil {return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_agdga .Rotate =&_ffdae ;};if _gdeg :=_fagca .Get ("\u0047\u0072\u006fu\u0070");_gdeg !=nil {_agdga .Group =_gdeg ;};if _bgbbe :=_fagca .Get ("\u0054\u0068\u0075m\u0062");_bgbbe !=nil {_agdga .Thumb =_bgbbe ;};if _bfagb :=_fagca .Get ("\u0042");_bfagb !=nil {_agdga .B =_bfagb ;
};if _ceeb :=_fagca .Get ("\u0044\u0075\u0072");_ceeb !=nil {_agdga .Dur =_ceeb ;};if _cgcg :=_fagca .Get ("\u0054\u0072\u0061n\u0073");_cgcg !=nil {_agdga .Trans =_cgcg ;};if _faeag :=_fagca .Get ("\u0041\u0041");_faeag !=nil {_agdga .AA =_faeag ;};if _edccd :=_fagca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_edccd !=nil {_agdga .Metadata =_edccd ;};if _feccab :=_fagca .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_feccab !=nil {_agdga .PieceInfo =_feccab ;};if _aegbfb :=_fagca .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_aegbfb !=nil {_agdga .StructParents =_aegbfb ;};if _bcbgc :=_fagca .Get ("\u0049\u0044");_bcbgc !=nil {_agdga .ID =_bcbgc ;};if _fbdbb :=_fagca .Get ("\u0050\u005a");_fbdbb !=nil {_agdga .PZ =_fbdbb ;};if _aagg :=_fagca .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_aagg !=nil {_agdga .SeparationInfo =_aagg ;};if _gcdg :=_fagca .Get ("\u0054\u0061\u0062\u0073");_gcdg !=nil {_agdga .Tabs =_gcdg ;};if _bcfg :=_fagca .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bcfg !=nil {_agdga .TemplateInstantiated =_bcfg ;};if _bbea :=_fagca .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bbea !=nil {_agdga .PresSteps =_bbea ;};if _faddd :=_fagca .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_faddd !=nil {_agdga .UserUnit =_faddd ;
};if _afdfb :=_fagca .Get ("\u0056\u0050");_afdfb !=nil {_agdga .VP =_afdfb ;};if _becbg :=_fagca .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_becbg !=nil {_agdga .Annots =_becbg ;};_agdga ._fecff =_bddeb ;return _agdga ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bc .PdfObjectInteger ;TilingType *_bc .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bc .PdfObjectFloat ;YStep *_bc .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bc .PdfObjectArray ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_acffc *PdfReader )GetNamedDestinations ()(_bc .PdfObject ,error ){_gbcgc :=_bc .ResolveReference (_acffc ._bdbea .Get ("\u0044\u0065\u0073t\u0073"));if _gbcgc ==nil {return nil ,nil ;};if !_acffc ._egcb {_dfaba :=_acffc .traverseObjectData (_gbcgc );
if _dfaba !=nil {return nil ,_dfaba ;};};return _gbcgc ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gcdf *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if _gcdf .Alternate ==nil {if _gcdf .N ==1{_adfd :=NewPdfColorspaceDeviceGray ();return _adfd .ColorFromPdfObjects (objects );}else if _gcdf .N ==3{_fbbad :=NewPdfColorspaceDeviceRGB ();
return _fbbad .ColorFromPdfObjects (objects );}else if _gcdf .N ==4{_cffdd :=NewPdfColorspaceDeviceCMYK ();return _cffdd .ColorFromPdfObjects (objects );}else {return nil ,_ecg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gcdf .Alternate .ColorFromPdfObjects (objects );};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bc .PdfObject ;IsMap _bc .PdfObject ;};func (_bbbee *PdfReader )newPdfAnnotationProjectionFromDict (_dcb *_bc .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cbbfd :=&PdfAnnotationProjection {};_bdd ,_gbf :=_bbbee .newPdfAnnotationMarkupFromDict (_dcb );
if _gbf !=nil {return nil ,_gbf ;};_cbbfd .PdfAnnotationMarkup =_bdd ;return _cbbfd ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_dfgg *Image )GetSamples ()[]uint32 {_faaed :=_cbb .ResampleBytes (_dfgg .Data ,int (_dfgg .BitsPerComponent ));if _dfgg .BitsPerComponent < 8{_faaed =_dfgg .samplesTrimPadding (_faaed );};_fbggcb :=int (_dfgg .Width )*int (_dfgg .Height )*_dfgg .ColorComponents ;
if len (_faaed )< _fbggcb {_dae .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_faaed ),_fbggcb );
return _faaed ;}else if len (_faaed )> _fbggcb {_dae .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_faaed ),_fbggcb );
_faaed =_faaed [:_fbggcb ];};return _faaed ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dfecca *PdfShading )GetContext ()PdfModel {return _dfecca ._cbbab };

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bc .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bc .PdfObject ;A _bc .PdfObject ;SE _bc .PdfObject ;C _bc .PdfObject ;F _bc .PdfObject ;
_affd *_bc .PdfIndirectObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_cfdcg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gdfae :=RC4_128bit ;if options !=nil {_gdfae =options .Algorithm ;};_badc :=_fe .PermOwner ;if options !=nil {_badc =options .Permissions ;};var _afged _af .Filter ;
switch _gdfae {case RC4_128bit :_afged =_af .NewFilterV2 (16);case AES_128bit :_afged =_af .NewFilterAESV2 ();case AES_256bit :_afged =_af .NewFilterAESV3 ();default:return _dc .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_fadae ,_aeacb ,_gaeba :=_bc .PdfCryptNewEncrypt (_afged ,userPass ,ownerPass ,_badc );if _gaeba !=nil {return _gaeba ;};_cfdcg ._gadad =_fadae ;if _aeacb .Major !=0{_cfdcg .SetVersion (_aeacb .Major ,_aeacb .Minor );};_cfdcg ._febee =_aeacb .Encrypt ;
_cfdcg ._fafc ,_cfdcg ._fdbdd =_aeacb .ID0 ,_aeacb .ID1 ;_bfgfc :=_bc .MakeIndirectObject (_aeacb .Encrypt );_cfdcg ._ffdgd =_bfgfc ;_cfdcg .addObject (_bfgfc );return nil ;};func _ffdag (_edgda *[]*PdfField ,_fdcbd FieldFilterFunc ,_cfcfg bool )[]*PdfField {if _edgda ==nil {return nil ;
};_adba :=*_edgda ;if len (*_edgda )==0{return nil ;};_fgbg :=_adba [:0];if _fdcbd ==nil {_fdcbd =func (*PdfField )bool {return true };};var _fbgdb []*PdfField ;for _ ,_ffdbd :=range _adba {_dbeac :=_fdcbd (_ffdbd );if _dbeac {_fbgdb =append (_fbgdb ,_ffdbd );
if len (_ffdbd .Kids )> 0{_fbgdb =append (_fbgdb ,_ffdag (&_ffdbd .Kids ,_fdcbd ,_cfcfg )...);};};if !_cfcfg ||!_dbeac ||len (_ffdbd .Kids )> 0{_fgbg =append (_fgbg ,_ffdbd );};};*_edgda =_fgbg ;return _fbgdb ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_eefca *PdfReader )IsEncrypted ()(bool ,error ){return _eefca ._afedg .IsEncrypted ()};

// SetContext sets the sub action (context).
func (_bge *PdfAction )SetContext (ctx PdfModel ){_bge ._afd =ctx };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bc .PdfObjectArray ;Domain *_bc .PdfObjectArray ;Function []PdfFunction ;Extend *_bc .PdfObjectArray ;};

// WriteString outputs the object as it is to be written to file.
func (_badg *pdfSignDictionary )WriteString ()string {_badg ._bdbfe =0;_badg ._efga =0;_badg ._dfeef =0;_badg ._fgceag =0;_cffbe :=_bg .NewBuffer (nil );_cffbe .WriteString ("\u003c\u003c");for _ ,_gfcgd :=range _badg .Keys (){_dffdbf :=_badg .Get (_gfcgd );
switch _gfcgd {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cffbe .WriteString (_gfcgd .WriteString ());_cffbe .WriteString ("\u0020");_badg ._dfeef =_cffbe .Len ();_cffbe .WriteString (_dffdbf .WriteString ());_cffbe .WriteString ("\u0020");_badg ._fgceag =_cffbe .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cffbe .WriteString (_gfcgd .WriteString ());_cffbe .WriteString ("\u0020");_badg ._bdbfe =_cffbe .Len ();_cffbe .WriteString (_dffdbf .WriteString ());_cffbe .WriteString ("\u0020");_badg ._efga =_cffbe .Len ()-1;
default:_cffbe .WriteString (_gfcgd .WriteString ());_cffbe .WriteString ("\u0020");_cffbe .WriteString (_dffdbf .WriteString ());};};_cffbe .WriteString ("\u003e\u003e");return _cffbe .String ();};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_aeed *PdfAcroForm )GetContainingPdfObject ()_bc .PdfObject {return _aeed ._eded };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bc .PdfObjectArray ;_fdcd *Image ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_dafff *PdfFieldButton )IsRadio ()bool {return _dafff .GetType ()==ButtonTypeRadio };

// String returns the name of the colorspace (DeviceN).
func (_bdfe *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};func _bbbdb (_gecce *_bc .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ccabdf :=PdfShadingType1 {};if _fdbcf :=_gecce .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_fdbcf !=nil {_fdbcf =_bc .TraceToDirectObject (_fdbcf );_egbe ,_fbfb :=_fdbcf .(*_bc .PdfObjectArray );if !_fbfb {_dae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdbcf );
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccabdf .Domain =_egbe ;};if _cfeg :=_gecce .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cfeg !=nil {_cfeg =_bc .TraceToDirectObject (_cfeg );
_bccdd ,_caad :=_cfeg .(*_bc .PdfObjectArray );if !_caad {_dae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfeg );return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ccabdf .Matrix =_bccdd ;};_cabce :=_gecce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cabce ==nil {_dae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ccabdf .Function =[]PdfFunction {};if _fege ,_beagg :=_cabce .(*_bc .PdfObjectArray );_beagg {for _ ,_cccgb :=range _fege .Elements (){_caff ,_gaffb :=_ffea (_cccgb );if _gaffb !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gaffb );
return nil ,_gaffb ;};_ccabdf .Function =append (_ccabdf .Function ,_caff );};}else {_bgebea ,_fabcg :=_ffea (_cabce );if _fabcg !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fabcg );
return nil ,_fabcg ;};_ccabdf .Function =append (_ccabdf .Function ,_bgebea );};return &_ccabdf ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bc .PdfObject ;Q _bc .PdfObject ;RC _bc .PdfObject ;DS _bc .PdfObject ;CL _bc .PdfObject ;IT _bc .PdfObject ;BE _bc .PdfObject ;RD _bc .PdfObject ;BS _bc .PdfObject ;LE _bc .PdfObject ;
};func _edbac (_gcgcce *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_gcgcce }};func _abcgf (_geeef _bc .PdfObject )(*PdfFunctionType3 ,error ){_deebc :=&PdfFunctionType3 {};var _ebge *_bc .PdfObjectDictionary ;if _bcgf ,_bcebbc :=_geeef .(*_bc .PdfIndirectObject );
_bcebbc {_faeab ,_bgcb :=_bcgf .PdfObject .(*_bc .PdfObjectDictionary );if !_bgcb {return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_deebc ._gcaa =_bcgf ;_ebge =_faeab ;}else if _cdfbd ,_cgdaa :=_geeef .(*_bc .PdfObjectDictionary );
_cgdaa {_ebge =_cdfbd ;}else {return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egafg ,_bgebe :=_bc .TraceToDirectObject (_ebge .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bc .PdfObjectArray );
if !_bgebe {_dae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _egafg .Len ()!=2{_dae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ecg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bcef ,_afdb :=_egafg .ToFloat64Array ();
if _afdb !=nil {return nil ,_afdb ;};_deebc .Domain =_bcef ;_egafg ,_bgebe =_bc .TraceToDirectObject (_ebge .Get ("\u0052\u0061\u006eg\u0065")).(*_bc .PdfObjectArray );if _bgebe {if _egafg .Len ()< 0||_egafg .Len ()%2!=0{return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fdffaf ,_effec :=_egafg .ToFloat64Array ();if _effec !=nil {return nil ,_effec ;};_deebc .Range =_fdffaf ;};_egafg ,_bgebe =_bc .TraceToDirectObject (_ebge .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bc .PdfObjectArray );if !_bgebe {_dae .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_deebc .Functions =[]PdfFunction {};
for _ ,_bdeaf :=range _egafg .Elements (){_ebcbd ,_gdbce :=_ffea (_bdeaf );if _gdbce !=nil {return nil ,_gdbce ;};_deebc .Functions =append (_deebc .Functions ,_ebcbd );};_egafg ,_bgebe =_bc .TraceToDirectObject (_ebge .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bc .PdfObjectArray );
if !_bgebe {_dae .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_aefga ,_afdb :=_egafg .ToFloat64Array ();if _afdb !=nil {return nil ,_afdb ;};_deebc .Bounds =_aefga ;if len (_deebc .Bounds )!=len (_deebc .Functions )-1{_dae .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_deebc .Bounds ),len (_deebc .Functions ));
return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egafg ,_bgebe =_bc .TraceToDirectObject (_ebge .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bc .PdfObjectArray );if !_bgebe {_dae .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cgee ,_afdb :=_egafg .ToFloat64Array ();
if _afdb !=nil {return nil ,_afdb ;};_deebc .Encode =_cgee ;if len (_deebc .Encode )!=2*len (_deebc .Functions ){_dae .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_deebc .Encode ),len (_deebc .Functions ));
return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _deebc ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_efcgc *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_bffcb ,_ ,_ccbbe :=_efcgc .CharcodesToUnicodeWithStats (_efcgc .BytesToCharcodes (data ));_cgagc :=_cabg .ExpandLigatures (_bffcb );return _cgagc ,_ga .RuneCountInString (_cgagc ),_ccbbe ;
};func (_cfab *PdfReader )buildOutlineTree (_cedaf _bc .PdfObject ,_deebe *PdfOutlineTreeNode ,_aegaa *PdfOutlineTreeNode ,_edcg map[_bc .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _edcg ==nil {_edcg =map[_bc .PdfObject ]struct{}{};
};_edcg [_cedaf ]=struct{}{};_dcgdc ,_cdgfc :=_cedaf .(*_bc .PdfIndirectObject );if !_cdgfc {return nil ,nil ,_dc .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cedaf );
};_fadbf ,_adfgg :=_dcgdc .PdfObject .(*_bc .PdfObjectDictionary );if !_adfgg {return nil ,nil ,_ecg .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dae .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fadbf ,_dcgdc ,_dcgdc );
if _gfac :=_fadbf .Get ("\u0054\u0069\u0074l\u0065");_gfac !=nil {_cdfc ,_accbc :=_cfab .newPdfOutlineItemFromIndirectObject (_dcgdc );if _accbc !=nil {return nil ,nil ,_accbc ;};_cdfc .Parent =_deebe ;_cdfc .Prev =_aegaa ;_beaecg :=_bc .ResolveReference (_fadbf .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cegdf :=_edcg [_beaecg ];_beaecg !=nil &&_beaecg !=_dcgdc &&!_cegdf {if !_bc .IsNullObject (_beaecg ){_ecgcf ,_gbbce ,_fcbdba :=_cfab .buildOutlineTree (_beaecg ,&_cdfc .PdfOutlineTreeNode ,nil ,_edcg );if _fcbdba !=nil {_dae .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fcbdba );
}else {_cdfc .First =_ecgcf ;_cdfc .Last =_gbbce ;};};};_agbgb :=_bc .ResolveReference (_fadbf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_bagdd :=_edcg [_agbgb ];_agbgb !=nil &&_agbgb !=_dcgdc &&!_bagdd {if !_bc .IsNullObject (_agbgb ){_cafae ,_ddce ,_defce :=_cfab .buildOutlineTree (_agbgb ,_deebe ,&_cdfc .PdfOutlineTreeNode ,_edcg );
if _defce !=nil {_dae .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_defce );
}else {_cdfc .Next =_cafae ;return &_cdfc .PdfOutlineTreeNode ,_ddce ,nil ;};};};return &_cdfc .PdfOutlineTreeNode ,&_cdfc .PdfOutlineTreeNode ,nil ;};_cdfbb ,_aebe :=_caafbb (_dcgdc );if _aebe !=nil {return nil ,nil ,_aebe ;};_cdfbb .Parent =_deebe ;if _fbgge :=_fadbf .Get ("\u0046\u0069\u0072s\u0074");
_fbgge !=nil {_fbgge =_bc .ResolveReference (_fbgge );if _ ,_eaac :=_edcg [_fbgge ];_fbgge !=nil &&_fbgge !=_dcgdc &&!_eaac {_facfca :=_bc .TraceToDirectObject (_fbgge );if _ ,_bbce :=_facfca .(*_bc .PdfObjectNull );!_bbce &&_facfca !=nil {_bcfae ,_gceb ,_fcbe :=_cfab .buildOutlineTree (_fbgge ,&_cdfbb .PdfOutlineTreeNode ,nil ,_edcg );
if _fcbe !=nil {_dae .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_fcbe );
}else {_cdfbb .First =_bcfae ;_cdfbb .Last =_gceb ;};};};};return &_cdfbb .PdfOutlineTreeNode ,&_cdfbb .PdfOutlineTreeNode ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ed :=NewPdfAction ();_afe :=&PdfActionImportData {};_afe .PdfAction =_ed ;_ed .SetContext (_afe );return _afe ;};func _dgdf (_daca *_bc .PdfObjectDictionary ,_dbdbb *fontCommon )(*pdfCIDFontType0 ,error ){if _dbdbb ._caacf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_dae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dbdbb );
return nil ,_bc .ErrRangeError ;};_bfeg :=_edbac (_dbdbb );_bbeg ,_acfec :=_bc .GetDict (_daca .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_acfec {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dbdbb );
return nil ,ErrRequiredAttributeMissing ;};_bfeg .CIDSystemInfo =_bbeg ;_bfeg .DW =_daca .Get ("\u0044\u0057");_bfeg .W =_daca .Get ("\u0057");_bfeg .DW2 =_daca .Get ("\u0044\u0057\u0032");_bfeg .W2 =_daca .Get ("\u0057\u0032");_bfeg ._bbggc =1000.0;if _bfcag ,_cdcce :=_bc .GetNumberAsFloat (_bfeg .DW );
_cdcce ==nil {_bfeg ._bbggc =_bfcag ;};_ggeg ,_dbffd :=_dfccc (_bfeg .W );if _dbffd !=nil {return nil ,_dbffd ;};if _ggeg ==nil {_ggeg =map[_cabg .CharCode ]float64 {};};_bfeg ._gegbb =_ggeg ;return _bfeg ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_eagdbe *PdfPageResources )GetXObjectImageByName (keyName _bc .PdfObjectName )(*XObjectImage ,error ){_caegf ,_gcedfc :=_eagdbe .GetXObjectByName (keyName );if _caegf ==nil {return nil ,nil ;};if _gcedfc !=XObjectTypeImage {return nil ,_ecg .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_gbgg ,_cgfgd :=NewXObjectImageFromStream (_caegf );if _cgfgd !=nil {return nil ,_cgfgd ;};return _gbgg ,nil ;};type modelManager struct{_aeddfe map[PdfModel ]_bc .PdfObject ;_ffcaa map[_bc .PdfObject ]PdfModel ;};

// ToPdfObject implements interface PdfModel.
func (_gcab *PdfAnnotationPrinterMark )ToPdfObject ()_bc .PdfObject {_gcab .PdfAnnotation .ToPdfObject ();_bccgd :=_gcab ._gdfa ;_fdad :=_bccgd .PdfObject .(*_bc .PdfObjectDictionary );_fdad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_fdad .SetIfNotNil ("\u004d\u004e",_gcab .MN );return _bccgd ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_dafbd *PdfOutputIntent )ParsePdfObject (object _bc .PdfObject )error {_fbfee ,_feaff :=_bc .GetDict (object );if !_feaff {_dae .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ecg .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_dafbd ._afdf =_fbfee ;_dafbd .Type ,_ =_fbfee .GetString ("\u0054\u0079\u0070\u0065");_cdacc ,_feaff :=_fbfee .GetString ("\u0053");if _feaff {switch _cdacc {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_dafbd .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_dafbd .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_dafbd .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_dafbd .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_dafbd .S =PdfOutputIntentTypeX ;
};};_dafbd .OutputCondition ,_ =_fbfee .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_dafbd .OutputConditionIdentifier ,_ =_fbfee .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_dafbd .RegistryName ,_ =_fbfee .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_dafbd .Info ,_ =_fbfee .GetString ("\u0049\u006e\u0066\u006f");if _gegbbd ,_deffe :=_bc .GetStream (_fbfee .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_deffe {_dafbd .ColorComponents ,_ =_bc .GetIntVal (_gegbbd .Get ("\u004e"));_ccgc ,_gddf :=_bc .DecodeStream (_gegbbd );if _gddf !=nil {return _gddf ;};_dafbd .DestOutputProfile =_ccgc ;};return nil ;};func (_edf *DSS )addOCSPs (_ebec [][]byte )([]*_bc .PdfObjectStream ,error ){return _edf .add (&_edf .OCSPs ,_edf ._addg ,_ebec );
};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_gfceg :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_gfceg .N =N ;return _gfceg ,nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_afdf :_bc .MakeDict ()};
};func (_gcgd *PdfAppender )mergeResources (_fcfgb ,_adf _bc .PdfObject ,_gfcg map[_bc .PdfObjectName ]_bc .PdfObjectName )_bc .PdfObject {if _adf ==nil &&_fcfgb ==nil {return nil ;};if _adf ==nil {return _fcfgb ;};_dca ,_cdbg :=_bc .GetDict (_adf );if !_cdbg {return _fcfgb ;
};if _fcfgb ==nil {_eedd :=_bc .MakeDict ();_eedd .Merge (_dca );return _adf ;};_debf ,_cdbg :=_bc .GetDict (_fcfgb );if !_cdbg {_dae .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_debf =_bc .MakeDict ();};for _ ,_bbbcb :=range _dca .Keys (){if _daac ,_effd :=_gfcg [_bbbcb ];_effd {_debf .Set (_daac ,_dca .Get (_bbbcb ));}else {_debf .Set (_bbbcb ,_dca .Get (_bbbcb ));};};return _debf ;};func (_abd *PdfReader )newPdfActionURIFromDict (_cccd *_bc .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cccd .Get ("\u0055\u0052\u0049"),IsMap :_cccd .Get ("\u0049\u0073\u004da\u0070")},nil ;
};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cf :=NewPdfAction ();_ceb :=&PdfActionSound {};_ceb .PdfAction =_cf ;_cf .SetContext (_ceb );return _ceb ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_dccdd *PdfAcroForm ,_dageb *PdfField ,_ccae *PdfAnnotationWidget )(*_bc .PdfObjectDictionary ,error );};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cabg .SimpleEncoder ,error ){_ecgbd ,_bdcce :=_eege (basefont );if _bdcce !=nil {return nil ,nil ,_bdcce ;};_gdfe ,_dcdfa :=_ecgbd .Encoder ().(_cabg .SimpleEncoder );
if !_dcdfa {return nil ,nil ,_dc .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ecgbd .Encoder ());
};_badb :=make (map[rune ]_cabg .GlyphName );for _ggfa :=range alphabet {if _ ,_bbfbfa :=_gdfe .RuneToCharcode (_ggfa );!_bbfbfa {_ ,_agead :=_ecgbd ._dbgc .Read (_ggfa );if !_agead {_dae .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_ggfa ,_ggfa );
continue ;};_dcfeg ,_agead :=_cabg .RuneToGlyph (_ggfa );if !_agead {_dae .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_ggfa ,_ggfa );continue ;};if len (_badb )>=255{return nil ,nil ,_ecg .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_badb [_ggfa ]=_dcfeg ;};};var (_egac []_cabg .CharCode ;_dfcb []_cabg .CharCode ;);for _ccbfa :=_cabg .CharCode (1);_ccbfa <=0xff;_ccbfa ++{_aafda ,_bcebb :=_gdfe .CharcodeToRune (_ccbfa );if !_bcebb {_egac =append (_egac ,_ccbfa );continue ;};if _ ,_bcebb =alphabet [_aafda ];
!_bcebb {_dfcb =append (_dfcb ,_ccbfa );};};_cddb :=append (_egac ,_dfcb ...);if len (_cddb )< len (_badb ){return nil ,nil ,_dc .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_badb ),len (_cddb ));
};_adffe :=make ([]rune ,0,len (_badb ));for _ddgcb :=range _badb {_adffe =append (_adffe ,_ddgcb );};_ab .Slice (_adffe ,func (_fgcec ,_efff int )bool {return _adffe [_fgcec ]< _adffe [_efff ]});_beafe :=make (map[_cabg .CharCode ]_cabg .GlyphName ,len (_adffe ));
for _ ,_febgc :=range _adffe {_egfb :=_cddb [0];_cddb =_cddb [1:];_beafe [_egfb ]=_badb [_febgc ];};_gdfe =_cabg .ApplyDifferences (_gdfe ,_beafe );_ecgbd .SetEncoder (_gdfe );return &PdfFont {_adffg :&_ecgbd },_gdfe ,nil ;};func (_dcfb *LTV )getOCSPs (_fdgb []*_e .Certificate ,_ebead map[string ]*_e .Certificate )([][]byte ,error ){_fcfdad :=make ([][]byte ,0,len (_fdgb ));
for _ ,_ggcgcc :=range _fdgb {for _ ,_aadf :=range _ggcgcc .OCSPServer {if _dcfb .CertClient .IsCA (_ggcgcc ){continue ;};_afdbb ,_fcba :=_ebead [_ggcgcc .Issuer .CommonName ];if !_fcba {_dae .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_dgbb ,_gccfa :=_dcfb .OCSPClient .MakeRequest (_aadf ,_ggcgcc ,_afdbb );if _gccfa !=nil {_dae .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_gccfa );
continue ;};_fcfdad =append (_fcfdad ,_dgbb );};};return _fcfdad ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_bbcfc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_acec *PdfFieldButton )IsPush ()bool {return _acec .GetType ()==ButtonTypePush };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aeage *PdfOutlineItem )ToPdfObject ()_bc .PdfObject {_gdcd :=_aeage ._affd ;_gbac :=_gdcd .PdfObject .(*_bc .PdfObjectDictionary );_gbac .Set ("\u0054\u0069\u0074l\u0065",_aeage .Title );if _aeage .A !=nil {_gbac .Set ("\u0041",_aeage .A );};if _bbbcc :=_gbac .Get ("\u0053\u0045");
_bbbcc !=nil {_gbac .Remove ("\u0053\u0045");};if _aeage .C !=nil {_gbac .Set ("\u0043",_aeage .C );};if _aeage .Dest !=nil {_gbac .Set ("\u0044\u0065\u0073\u0074",_aeage .Dest );};if _aeage .F !=nil {_gbac .Set ("\u0046",_aeage .F );};if _aeage .Count !=nil {_gbac .Set ("\u0043\u006f\u0075n\u0074",_bc .MakeInteger (*_aeage .Count ));
};if _aeage .Next !=nil {_gbac .Set ("\u004e\u0065\u0078\u0074",_aeage .Next .ToPdfObject ());};if _aeage .First !=nil {_gbac .Set ("\u0046\u0069\u0072s\u0074",_aeage .First .ToPdfObject ());};if _aeage .Prev !=nil {_gbac .Set ("\u0050\u0072\u0065\u0076",_aeage .Prev .GetContext ().GetContainingPdfObject ());
};if _aeage .Last !=nil {_gbac .Set ("\u004c\u0061\u0073\u0074",_aeage .Last .GetContext ().GetContainingPdfObject ());};if _aeage .Parent !=nil {_gbac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aeage .Parent .GetContext ().GetContainingPdfObject ());
};return _gdcd ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_becga :map[_bc .PdfObject ]struct{}{},_afcfd :_cafe (),_afedg :_bc .NewParserFromString (txt )};};func (_cdad *PdfReader )newPdfAnnotationInkFromDict (_bbbe *_bc .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_geeab :=PdfAnnotationInk {};
_aef ,_ffbd :=_cdad .newPdfAnnotationMarkupFromDict (_bbbe );if _ffbd !=nil {return nil ,_ffbd ;};_geeab .PdfAnnotationMarkup =_aef ;_geeab .InkList =_bbbe .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_geeab .BS =_bbbe .Get ("\u0042\u0053");return &_geeab ,nil ;
};

// WriteToFile writes the output PDF to file.
func (_daabgd *PdfWriter )WriteToFile (outputFilePath string )error {_abgbf ,_beccd :=_cg .Create (outputFilePath );if _beccd !=nil {return _beccd ;};defer _abgbf .Close ();return _daabgd .Write (_abgbf );};func _bcgc (_cdeaf _bc .PdfObject ,_ecef *fontCommon )(*_ba .CMap ,error ){_afaee ,_ffgd :=_bc .GetStream (_cdeaf );
if !_ffgd {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_cdeaf );
return nil ,_bc .ErrTypeError ;};_eddf ,_bega :=_bc .DecodeStream (_afaee );if _bega !=nil {return nil ,_bega ;};_deaed ,_bega :=_ba .LoadCmapFromData (_eddf ,!_ecef .isCIDFont ());if _bega !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_afaee .ObjectNumber ,_bega );
};return _deaed ,_bega ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_eccage .Lock ();defer _eccage .Unlock ();_fbfg =keywords };func (_fbggcd *PdfWriter )setDocumentIDs (_bcfef ,_dafdg string ){_fbggcd ._cgaaa =_bc .MakeArray (_bc .MakeHexString (_bcfef ),_bc .MakeHexString (_dafdg ));
};func (_aeead *PdfWriter )writeOutputIntents ()error {if len (_aeead ._fgdff )==0{return nil ;};_bcged :=make ([]_bc .PdfObject ,len (_aeead ._fgdff ));for _afdac ,_dcag :=range _aeead ._fgdff {_fggb :=_dcag .ToPdfObject ();_bcged [_afdac ]=_bc .MakeIndirectObject (_fggb );
};_cgdg :=_bc .MakeIndirectObject (_bc .MakeArray (_bcged ...));_aeead ._bdbgc .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_cgdg );if _defef :=_aeead .addObjects (_cgdg );_defef !=nil {return _defef ;};return nil ;
};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_aegd *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_eaee :=_cbb .NewReader (img .getBase ());_acgg :=_ecc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fgcgd :=_cbb .NewWriter (_acgg );
_fccc :=_da .Pow (2,float64 (img .BitsPerComponent ))-1;_dfcea :=make ([]uint32 ,3);var (_bbdg uint32 ;ANorm ,X ,Y ,Z ,_gfe ,_edcf ,_gbbe float64 ;_cfbbf error ;);for {_bbdg ,_cfbbf =_eaee .ReadSample ();if _cfbbf ==_gbe .EOF {break ;}else if _cfbbf !=nil {return img ,_cfbbf ;
};ANorm =float64 (_bbdg )/_fccc ;X =_aegd .WhitePoint [0]*_da .Pow (ANorm ,_aegd .Gamma );Y =_aegd .WhitePoint [1]*_da .Pow (ANorm ,_aegd .Gamma );Z =_aegd .WhitePoint [2]*_da .Pow (ANorm ,_aegd .Gamma );_gfe =3.240479*X +-1.537150*Y +-0.498535*Z ;_edcf =-0.969256*X +1.875992*Y +0.041556*Z ;
_gbbe =0.055648*X +-0.204043*Y +1.057311*Z ;_gfe =_da .Min (_da .Max (_gfe ,0),1.0);_edcf =_da .Min (_da .Max (_edcf ,0),1.0);_gbbe =_da .Min (_da .Max (_gbbe ,0),1.0);_dfcea [0]=uint32 (_gfe *_fccc );_dfcea [1]=uint32 (_edcf *_fccc );_dfcea [2]=uint32 (_gbbe *_fccc );
if _cfbbf =_fgcgd .WriteSamples (_dfcea );_cfbbf !=nil {return img ,_cfbbf ;};};return _egbafc (&_acgg ),nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_caec *PdfReader )GetEncryptionMethod ()string {_cecef :=_caec ._afedg .GetCrypter ();return _cecef .String ();};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fdba *PdfColorspaceLab )ToPdfObject ()_bc .PdfObject {_fggf :=_bc .MakeArray ();_fggf .Append (_bc .MakeName ("\u004c\u0061\u0062"));_cbded :=_bc .MakeDict ();if _fdba .WhitePoint !=nil {_acgd :=_bc .MakeArray (_bc .MakeFloat (_fdba .WhitePoint [0]),_bc .MakeFloat (_fdba .WhitePoint [1]),_bc .MakeFloat (_fdba .WhitePoint [2]));
_cbded .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_acgd );}else {_dae .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fdba .BlackPoint !=nil {_gdag :=_bc .MakeArray (_bc .MakeFloat (_fdba .BlackPoint [0]),_bc .MakeFloat (_fdba .BlackPoint [1]),_bc .MakeFloat (_fdba .BlackPoint [2]));_cbded .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gdag );
};if _fdba .Range !=nil {_caab :=_bc .MakeArray (_bc .MakeFloat (_fdba .Range [0]),_bc .MakeFloat (_fdba .Range [1]),_bc .MakeFloat (_fdba .Range [2]),_bc .MakeFloat (_fdba .Range [3]));_cbded .Set ("\u0052\u0061\u006eg\u0065",_caab );};_fggf .Append (_cbded );
if _fdba ._becbda !=nil {_fdba ._becbda .PdfObject =_fggf ;return _fdba ._becbda ;};return _fggf ;};

// SetContext sets the sub annotation (context).
func (_fffa *PdfAnnotation )SetContext (ctx PdfModel ){_fffa ._ccb =ctx };

// ToPdfObject implements interface PdfModel.
func (_bbgdbg *PdfSignature )ToPdfObject ()_bc .PdfObject {_bgbbf :=_bbgdbg ._dfaaf ;var _gfged *_bc .PdfObjectDictionary ;if _bdccb ,_fabgc :=_bgbbf .PdfObject .(*pdfSignDictionary );_fabgc {_gfged =_bdccb .PdfObjectDictionary ;}else {_gfged =_bgbbf .PdfObject .(*_bc .PdfObjectDictionary );
};_gfged .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bbgdbg .Type );_gfged .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_bbgdbg .Filter );_gfged .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_bbgdbg .SubFilter );_gfged .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bbgdbg .ByteRange );
_gfged .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bbgdbg .Contents );_gfged .SetIfNotNil ("\u0043\u0065\u0072\u0074",_bbgdbg .Cert );_gfged .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bbgdbg .Name );_gfged .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_bbgdbg .Reason );
_gfged .SetIfNotNil ("\u004d",_bbgdbg .M );_gfged .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_bbgdbg .Reference );_gfged .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_bbgdbg .Changes );_gfged .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_bbgdbg .ContactInfo );
return _bgbbf ;};func (_adcbe *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _adcbe ._feec };

// SetFlag sets the flag for the field.
func (_cgfc *PdfField )SetFlag (flag FieldFlag ){_cgfc .Ff =_bc .MakeInteger (int64 (flag ))};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_ffaad *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_beaac *PdfSignature ,_bggca Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_ebbdc *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_cgaef *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_efbda *PdfSignature ,_bebfe Hasher )error ;};

// ToInteger convert to an integer format.
func (_fgcca *PdfColorLab )ToInteger (bits int )[3]uint32 {_eccdc :=_da .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eccdc *_fgcca .L ()),uint32 (_eccdc *_fgcca .A ()),uint32 (_eccdc *_fgcca .B ())};};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_afda *PdfAppender )UpdateObject (obj _bc .PdfObject ){_afda .replaceObject (obj ,obj );if _ ,_ecd :=_afda ._dgae [obj ];!_ecd {_afda ._cgf =append (_afda ._cgf ,obj );_afda ._dgae [obj ]=struct{}{};};};

// PdfVersion returns version of the PDF file.
func (_cfdc *PdfReader )PdfVersion ()_bc .Version {return _cfdc ._afedg .PdfVersion ()};var _gdddd =false ;

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gdb :=NewPdfAction ();_ad :=&PdfActionLaunch {};_ad .PdfAction =_gdb ;_gdb .SetContext (_ad );return _ad ;};func (_abbd *PdfFilespec )getDict ()*_bc .PdfObjectDictionary {if _gba ,_bbfg :=_abbd ._afeeg .(*_bc .PdfIndirectObject );
_bbfg {_gage ,_edbfc :=_gba .PdfObject .(*_bc .PdfObjectDictionary );if !_edbfc {return nil ;};return _gage ;}else if _cddea ,_bfbca :=_abbd ._afeeg .(*_bc .PdfObjectDictionary );_bfbca {return _cddea ;}else {_dae .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_abbd ._afeeg );
return nil ;};};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bc .PdfObject ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ggeba *PdfPage )GetContainingPdfObject ()_bc .PdfObject {return _ggeba ._eadb };func _eacd (_faacc []*_bc .PdfObjectStream )*_bc .PdfObjectArray {if len (_faacc )==0{return nil ;};_gcadc :=make ([]_bc .PdfObject ,0,len (_faacc ));for _ ,_cacba :=range _faacc {_gcadc =append (_gcadc ,_cacba );
};return _bc .MakeArray (_gcadc ...);};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _b .Time ){_eccage .Lock ();defer _eccage .Unlock ();_gccae =creationDate ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_gfcd *PdfWriter )AddPage (page *PdfPage )error {const _cfbaed ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_adefa (page );_adbgec :=page .ToPdfObject ();_dae .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_dae .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_adbgec );_ebcbg ,_edbeg :=_bc .GetIndirect (_adbgec );if !_edbeg {return _ecg .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dae .Log .Trace ("\u0025\u0073",_ebcbg );_dae .Log .Trace ("\u0025\u0073",_ebcbg .PdfObject );_ffcec ,_edbeg :=_bc .GetDict (_ebcbg .PdfObject );if !_edbeg {return _ecg .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fbdeg ,_edbeg :=_bc .GetName (_ffcec .Get ("\u0054\u0079\u0070\u0065"));if !_edbeg {return _dc .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_ffcec .Get ("\u0054\u0079\u0070\u0065"));
};if _fbdeg .String ()!="\u0050\u0061\u0067\u0065"{return _ecg .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_cbee :=[]_bc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_edeg ,_ffbc :=_bc .GetIndirect (_ffcec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dae .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_ffcec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_ffbc );
for _ffbc {_dae .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edeg );_agaab ,_ddcdf :=_bc .GetDict (_edeg .PdfObject );if !_ddcdf {return _ecg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_caba :=range _cbee {_dae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_caba );if _ffcec .Get (_caba )!=nil {_dae .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _fbeb :=_agaab .Get (_caba );_fbeb !=nil {_dae .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_caba );_ffcec .Set (_caba ,_fbeb );};};_edeg ,_ffbc =_bc .GetIndirect (_agaab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_dae .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_agaab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dae .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_ffcec .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfcd ._gagfc );_ebcbg .PdfObject =_ffcec ;_fbdba ,_edbeg :=_bc .GetDict (_gfcd ._gagfc .PdfObject );if !_edbeg {return _ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bddad ,_edbeg :=_bc .GetArray (_fbdba .Get ("\u004b\u0069\u0064\u0073"));if !_edbeg {return _ecg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bddad .Append (_ebcbg );_gfcd ._deacf [_ffcec ]=struct{}{};_gbfb ,_edbeg :=_bc .GetInt (_fbdba .Get ("\u0043\u006f\u0075n\u0074"));if !_edbeg {return _ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_gbfb =*_gbfb +1;if page ._fecff ==nil {_acbdbg :=_ee .Track (_gfcd ._ddccd ,_cfbaed );if _acbdbg !=nil {return _acbdbg ;};}else {_edfg :=_ee .Track (page ._fecff ._acece ,_cfbaed );if _edfg !=nil {return _edfg ;};};_gfcd .addObject (_ebcbg );_bcbdc :=_gfcd .addObjects (_ffcec );
if _bcbdc !=nil {return _bcbdc ;};return nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bc .PdfObject ;IC _bc .PdfObject ;BE _bc .PdfObject ;RD _bc .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_cdgfa *PdfFont )GetCharMetrics (code _cabg .CharCode )(CharMetrics ,bool ){var _fdffb _dg .CharMetrics ;switch _becc :=_cdgfa ._adffg .(type ){case *pdfFontSimple :if _cdaa ,_deeba :=_becc .GetCharMetrics (code );_deeba {return _cdaa ,_deeba ;};
case *pdfFontType0 :if _daagg ,_ecfcg :=_becc .GetCharMetrics (code );_ecfcg {return _daagg ,_ecfcg ;};case *pdfCIDFontType0 :if _fdab ,_fdgef :=_becc .GetCharMetrics (code );_fdgef {return _fdab ,_fdgef ;};case *pdfCIDFontType2 :if _gagdf ,_ffgc :=_becc .GetCharMetrics (code );
_ffgc {return _gagdf ,_ffgc ;};case *pdfFontType3 :if _edgg ,_eggb :=_becc .GetCharMetrics (code );_eggb {return _edgg ,_eggb ;};default:_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_cdgfa ._adffg );
return _fdffb ,false ;};if _bdfcc ,_dedc :=_cdgfa .GetFontDescriptor ();_dedc ==nil &&_bdfcc !=nil {return _dg .CharMetrics {Wx :_bdfcc ._bbgg },true ;};_dae .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_cdgfa );
return _fdffb ,false ;};

// GetContainingPdfObject implements interface PdfModel.
func (_adabf *PdfFilespec )GetContainingPdfObject ()_bc .PdfObject {return _adabf ._afeeg };

// Encoder returns the font's text encoder.
func (_dfbbg *PdfFont )Encoder ()_cabg .TextEncoder {_acbb :=_dfbbg .actualFont ();if _acbb ==nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dfbbg ._adffg );
return nil ;};return _acbb .Encoder ();};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dgdc *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eebcg ,_aeba :=_bc .GetNumbersAsFloat (objects );
if _aeba !=nil {return nil ,_aeba ;};return _dgdc .ColorFromFloats (_eebcg );};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_bgbe interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};var _ pdfFont =(*pdfFontType3 )(nil );

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bbgda *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bc .GetNumberAsFloat (_bbgda .CapHeight );};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dgbdb *PdfOutlineTreeNode )GetContext ()PdfModel {if _bfccf ,_gacab :=_dgbdb ._bgbe .(*PdfOutline );_gacab {return _bfccf ;};if _aadbb ,_adgdg :=_dgbdb ._bgbe .(*PdfOutlineItem );_adgdg {return _aadbb ;};_dae .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_cffdc *Image )SetAlpha (alpha []byte ){_cffdc ._ggfad =alpha };

// ToPdfObject implements interface PdfModel.
func (_gagg *PdfAnnotationUnderline )ToPdfObject ()_bc .PdfObject {_gagg .PdfAnnotation .ToPdfObject ();_dgbe :=_gagg ._gdfa ;_begd :=_dgbe .PdfObject .(*_bc .PdfObjectDictionary );_gagg .PdfAnnotationMarkup .appendToPdfDictionary (_begd );_begd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_begd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gagg .QuadPoints );return _dgbe ;};func (_dgebe *PdfWriter )copyObject (_cabdb _bc .PdfObject ,_gcgeb map[_bc .PdfObject ]_bc .PdfObject ,_ecfdgd map[_bc .PdfObject ]struct{},_bfedae bool )_bc .PdfObject {_bggbb :=!_dgebe ._dcebde &&_ecfdgd !=nil ;
if _cfde ,_ffbeda :=_gcgeb [_cabdb ];_ffbeda {if _bggbb &&!_bfedae {delete (_ecfdgd ,_cabdb );};return _cfde ;};_affac :=_cabdb ;switch _bcdaa :=_cabdb .(type ){case *_bc .PdfObjectArray :_edecag :=_bc .MakeArray ();_affac =_edecag ;_gcgeb [_cabdb ]=_affac ;
for _ ,_bdcgf :=range _bcdaa .Elements (){_edecag .Append (_dgebe .copyObject (_bdcgf ,_gcgeb ,_ecfdgd ,_bfedae ));};case *_bc .PdfObjectStreams :_cgec :=&_bc .PdfObjectStreams {PdfObjectReference :_bcdaa .PdfObjectReference };_affac =_cgec ;_gcgeb [_cabdb ]=_affac ;
for _ ,_fcfde :=range _bcdaa .Elements (){_cgec .Append (_dgebe .copyObject (_fcfde ,_gcgeb ,_ecfdgd ,_bfedae ));};case *_bc .PdfObjectStream :_cbgceb :=&_bc .PdfObjectStream {Stream :_bcdaa .Stream ,PdfObjectReference :_bcdaa .PdfObjectReference };_affac =_cbgceb ;
_gcgeb [_cabdb ]=_affac ;_cbgceb .PdfObjectDictionary =_dgebe .copyObject (_bcdaa .PdfObjectDictionary ,_gcgeb ,_ecfdgd ,_bfedae ).(*_bc .PdfObjectDictionary );case *_bc .PdfObjectDictionary :var _fcgeb bool ;if _bggbb &&!_bfedae {if _fccgf ,_ :=_bc .GetNameVal (_bcdaa .Get ("\u0054\u0079\u0070\u0065"));
_fccgf =="\u0050\u0061\u0067\u0065"{_ ,_defcc :=_dgebe ._deacf [_bcdaa ];_bfedae =!_defcc ;_fcgeb =_bfedae ;};};_daeac :=_bc .MakeDict ();_affac =_daeac ;_gcgeb [_cabdb ]=_affac ;for _ ,_ffgdc :=range _bcdaa .Keys (){_daeac .Set (_ffgdc ,_dgebe .copyObject (_bcdaa .Get (_ffgdc ),_gcgeb ,_ecfdgd ,_bfedae ));
};if _fcgeb {_affac =_bc .MakeNull ();_bfedae =false ;};case *_bc .PdfIndirectObject :_abdeaa :=&_bc .PdfIndirectObject {PdfObjectReference :_bcdaa .PdfObjectReference };_affac =_abdeaa ;_gcgeb [_cabdb ]=_affac ;_abdeaa .PdfObject =_dgebe .copyObject (_bcdaa .PdfObject ,_gcgeb ,_ecfdgd ,_bfedae );
case *_bc .PdfObjectString :_gaee :=*_bcdaa ;_affac =&_gaee ;_gcgeb [_cabdb ]=_affac ;case *_bc .PdfObjectName :_edbcc :=*_bcdaa ;_affac =&_edbcc ;_gcgeb [_cabdb ]=_affac ;case *_bc .PdfObjectNull :_affac =_bc .MakeNull ();_gcgeb [_cabdb ]=_affac ;case *_bc .PdfObjectInteger :_fcbaf :=*_bcdaa ;
_affac =&_fcbaf ;_gcgeb [_cabdb ]=_affac ;case *_bc .PdfObjectReference :_aaea :=*_bcdaa ;_affac =&_aaea ;_gcgeb [_cabdb ]=_affac ;case *_bc .PdfObjectFloat :_ecfe :=*_bcdaa ;_affac =&_ecfe ;_gcgeb [_cabdb ]=_affac ;case *_bc .PdfObjectBool :_edae :=*_bcdaa ;
_affac =&_edae ;_gcgeb [_cabdb ]=_affac ;case *pdfSignDictionary :_aebec :=&pdfSignDictionary {PdfObjectDictionary :_bc .MakeDict (),_fbbdg :_bcdaa ._fbbdg ,_cgeac :_bcdaa ._cgeac };_affac =_aebec ;_gcgeb [_cabdb ]=_affac ;for _ ,_fcgb :=range _bcdaa .Keys (){_aebec .Set (_fcgb ,_dgebe .copyObject (_bcdaa .Get (_fcgb ),_gcgeb ,_ecfdgd ,_bfedae ));
};default:_dae .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_cabdb );
};if _bggbb &&_bfedae {_ecfdgd [_cabdb ]=struct{}{};};return _affac ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bc .PdfObject ;FS _bc .PdfObject ;F _bc .PdfObject ;UF _bc .PdfObject ;DOS _bc .PdfObject ;Mac _bc .PdfObject ;Unix _bc .PdfObject ;ID _bc .PdfObject ;V _bc .PdfObject ;EF _bc .PdfObject ;RF _bc .PdfObject ;Desc _bc .PdfObject ;
CI _bc .PdfObject ;_afeeg _bc .PdfObject ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _gbe .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gffe ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _gaaeg (rs ,opts ,true ,_gffe );
};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_bdfcf *PdfReader )GetObjectNums ()[]int {return _bdfcf ._afedg .GetObjectNums ()};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_afbcae *PdfWriter )SetNamedDestinations (dests _bc .PdfObject )error {if dests ==nil {return nil ;};_dae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_afbcae ._bdbgc .Set ("\u0044\u0065\u0073t\u0073",dests );return _afbcae .addObjects (dests );};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bdde *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_dae .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_dae .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_dae .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_dae .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_fdgf ,_bacdc :=_ecc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ggfad ,img ._ggeec );if _bacdc !=nil {return Image {},_bacdc ;};_fbeg ,_bacdc :=_ecc .NRGBAConverter .Convert (_fdgf );
if _bacdc !=nil {return Image {},_bacdc ;};return _egbafc (_fbeg .Base ()),nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_faac :=&PdfPageResources {};_faac ._cbead =_bc .MakeDict ();return _faac ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_dbbadg *PdfRectangle )Normalize (){if _dbbadg .Llx > _dbbadg .Urx {_dbbadg .Llx ,_dbbadg .Urx =_dbbadg .Urx ,_dbbadg .Llx ;};if _dbbadg .Lly > _dbbadg .Ury {_dbbadg .Lly ,_dbbadg .Ury =_dbbadg .Ury ,_dbbadg .Lly ;};};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_eccage .Lock ();defer _eccage .Unlock ();_abdfb =creator };

// GetOutlineTree returns the outline tree.
func (_gggfb *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _gggfb ._abdb };

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_gga :=NewPdfAction ();_cabgc :=&PdfActionGoTo {};_cabgc .PdfAction =_gga ;_gga .SetContext (_cabgc );return _cabgc ;};func (_egbbd *PdfWriter )addObject (_gfcec _bc .PdfObject )bool {_gfdbe :=_egbbd .hasObject (_gfcec );
if !_gfdbe {_bfdad :=_bc .ResolveReferencesDeep (_gfcec ,_egbbd ._cgeae );if _bfdad !=nil {_dae .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_bfdad );};_egbbd ._bcbab =append (_egbbd ._bcbab ,_gfcec );
_egbbd ._dbfde [_gfcec ]=struct{}{};return true ;};return false ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bc .PdfObject ;AN _bc .PdfObject ;OP _bc .PdfObject ;JS _bc .PdfObject ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_beab *PdfField )GetContext ()PdfModel {return _beab ._cabed };

// ToPdfObject returns the PDF representation of the colorspace.
func (_ceafc *PdfPageResourcesColorspaces )ToPdfObject ()_bc .PdfObject {_babcc :=_bc .MakeDict ();for _ ,_ddbd :=range _ceafc .Names {_babcc .Set (_bc .PdfObjectName (_ddbd ),_ceafc .Colorspaces [_ddbd ].ToPdfObject ());};if _ceafc ._cddg !=nil {_ceafc ._cddg .PdfObject =_babcc ;
return _ceafc ._cddg ;};return _babcc ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_cdcd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ecafe ,_adbe :=color .(*PdfColorDeviceRGB );if !_adbe {_dae .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ecafe ,nil ;};func (_fcfc *LTV )validateSig (_ageg *PdfSignature )error {if _ageg ==nil ||_ageg .Contents ==nil ||len (_ageg .Contents .Bytes ())==0{return _dc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_ageg );
};return nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bgff *XObjectImage )SetFilter (encoder _bc .StreamEncoder )error {_fffdbb :=_bgff .Stream ;_afdgd ,_ddabd :=_bgff .Filter .DecodeBytes (_fffdbb );if _ddabd !=nil {return _ddabd ;};_bgff .Filter =encoder ;encoder .UpdateParams (_bgff .getParamsDict ());
_fffdbb ,_ddabd =encoder .EncodeBytes (_afdgd );if _ddabd !=nil {return _ddabd ;};_bgff .Stream =_fffdbb ;return nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bc .PdfObjectArray ;Matrix *_bc .PdfObjectArray ;Function []PdfFunction ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_geda *PdfAppender )Write (w _gbe .Writer )error {if _geda ._bbfa {return _ecg .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_dbdd :=NewPdfWriter ();_agdb ,_dfgd :=_bc .GetDict (_dbdd ._gagfc );if !_dfgd {return _ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gcgc ,_dfgd :=_agdb .Get ("\u004b\u0069\u0064\u0073").(*_bc .PdfObjectArray );if !_dfgd {return _ecg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_feca ,_dfgd :=_agdb .Get ("\u0043\u006f\u0075n\u0074").(*_bc .PdfObjectInteger );if !_dfgd {return _ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_dddc :=_geda ._cace ._afedg ;_dac :=_dddc .GetTrailer ();if _dac ==nil {return _ecg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gadg ,_dfgd :=_bc .GetIndirect (_dac .Get ("\u0052\u006f\u006f\u0074"));
if !_dfgd {return _ecg .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ecfbd ,_dfgd :=_bc .GetDict (_gadg );if !_dfgd {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gadg ,*_dac );
return _ecg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_bebc :=range _ecfbd .Keys (){if _dbdd ._bdbgc .Get (_bebc )==nil {_fbba :=_ecfbd .Get (_bebc );_dbdd ._bdbgc .Set (_bebc ,_fbba );};};if _geda ._eade !=nil {_dbdd ._bdbgc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_geda ._eade .ToPdfObject ());
_geda .updateObjectsDeep (_geda ._eade .ToPdfObject (),nil );};if _geda ._gbec !=nil {_geda .updateObjectsDeep (_geda ._gbec .ToPdfObject (),nil );_dbdd ._bdbgc .Set ("\u0044\u0053\u0053",_geda ._gbec .GetContainingPdfObject ());};if _dbdd ._efeae .Major < 2{_dbdd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_dbdd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _bebda ,_aefg :=_bc .GetDict (_dac .Get ("\u0049\u006e\u0066\u006f"));_aefg {if _cdagb ,_adg :=_bc .GetDict (_dbdd ._eefa );_adg {for _ ,_dcbdf :=range _bebda .Keys (){if _cdagb .Get (_dcbdf )==nil {_cdagb .Set (_dcbdf ,_bebda .Get (_dcbdf ));
};};};};if _geda ._ceba !=nil {_dbdd ._eefa =_bc .MakeIndirectObject (_geda ._ceba .ToPdfObject ());};_geda .addNewObject (_dbdd ._eefa );_geda .addNewObject (_dbdd ._cbdaa );_addf :=false ;if len (_geda ._cace .PageList )!=len (_geda ._dgab ){_addf =true ;
}else {for _gcbf :=range _geda ._cace .PageList {switch {case _geda ._dgab [_gcbf ]==_geda ._cace .PageList [_gcbf ]:case _geda ._dgab [_gcbf ]==_geda .Reader .PageList [_gcbf ]:default:_addf =true ;};if _addf {break ;};};};if _addf {_geda .updateObjectsDeep (_dbdd ._gagfc ,nil );
}else {_geda ._gfcb [_dbdd ._gagfc ]=struct{}{};};_dbdd ._gagfc .ObjectNumber =_geda .Reader ._fgbea .ObjectNumber ;_geda ._bcca [_dbdd ._gagfc ]=_geda .Reader ._fgbea .ObjectNumber ;_cdade :=[]_bc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_ebef :=range _geda ._dgab {_ebbe :=_ebef .ToPdfObject ();*_feca =*_feca +1;if _aaaa ,_dagfa :=_ebbe .(*_bc .PdfIndirectObject );_dagfa &&_aaaa .GetParser ()==_geda ._cace ._afedg {_gcgc .Append (&_aaaa .PdfObjectReference );continue ;};if _fgf ,_eccb :=_bc .GetDict (_ebbe );
_eccb {_fcabe ,_febf :=_fgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bc .PdfIndirectObject );for _febf {_dae .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fcabe );_dgaea ,_abee :=_fcabe .PdfObject .(*_bc .PdfObjectDictionary );
if !_abee {return _ecg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_abfc :=range _cdade {_dae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_abfc );if _fgf .Get (_abfc )!=nil {_dae .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _efcf :=_dgaea .Get (_abfc );_efcf !=nil {_dae .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_abfc );_fgf .Set (_abfc ,_efcf );};};_fcabe ,_febf =_dgaea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bc .PdfIndirectObject );
_dae .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dgaea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fgf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dbdd ._gagfc );};_geda .updateObjectsDeep (_ebbe ,nil );
_gcgc .Append (_ebbe );};if _ ,_cgfa :=_geda ._efb .Seek (0,_gbe .SeekStart );_cgfa !=nil {return _cgfa ;};_bacf :=make (map[SignatureHandler ]_gbe .Writer );_cgdf :=_bc .MakeArray ();for _ ,_affa :=range _geda ._cgf {if _cdce ,_gegcf :=_bc .GetIndirect (_affa );
_gegcf {if _ddg ,_adc :=_cdce .PdfObject .(*pdfSignDictionary );_adc {_cffe :=*_ddg ._fbbdg ;var _bdb error ;_bacf [_cffe ],_bdb =_cffe .NewDigest (_ddg ._cgeac );if _bdb !=nil {return _bdb ;};_cgdf .Append (_bc .MakeInteger (0xfffff),_bc .MakeInteger (0xfffff));
};};};if _cgdf .Len ()> 0{_cgdf .Append (_bc .MakeInteger (0xfffff),_bc .MakeInteger (0xfffff));};for _ ,_dacb :=range _geda ._cgf {if _bfcf ,_bbbg :=_bc .GetIndirect (_dacb );_bbbg {if _egfc ,_aafd :=_bfcf .PdfObject .(*pdfSignDictionary );_aafd {_egfc .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cgdf );
};};};_bbge :=len (_bacf )> 0;var _cdff _gbe .Reader =_geda ._efb ;if _bbge {_gfce :=make ([]_gbe .Writer ,0,len (_bacf ));for _ ,_ccfc :=range _bacf {_gfce =append (_gfce ,_ccfc );};_cdff =_gbe .TeeReader (_geda ._efb ,_gbe .MultiWriter (_gfce ...));};
_adeg ,_gfcga :=_gbe .Copy (w ,_cdff );if _gfcga !=nil {return _gfcga ;};if len (_geda ._cgf )==0{return nil ;};_dbdd ._edece =_adeg ;_dbdd .ObjNumOffset =_geda ._accc ;_dbdd ._dcebde =true ;_dbdd ._cdgcc =_geda ._cbcd ;_dbdd ._ebfc =_geda ._gecd ;_dbdd ._gacd =_geda ._fffdd ;
_dbdd ._efeae =_geda ._cace .PdfVersion ();_dbdd ._dgcaa =_geda ._bcca ;_dbdd ._gadad =_geda ._bdcg .GetCrypter ();_dbdd ._ffdgd =_geda ._bdcg .GetEncryptObj ();_cacc :=_geda ._bdcg .GetXrefType ();if _cacc !=nil {_efgd :=*_cacc ==_bc .XrefTypeObjectStream ;
_dbdd ._egcbbc =&_efgd ;};_dbdd ._dbfde =map[_bc .PdfObject ]struct{}{};_dbdd ._bcbab =[]_bc .PdfObject {};for _ ,_cegg :=range _geda ._cgf {if _ ,_ebbeb :=_geda ._gfcb [_cegg ];_ebbeb {continue ;};_dbdd .addObject (_cegg );};_fecf :=w ;if _bbge {_fecf =_bg .NewBuffer (nil );
};if _geda ._abed !=""&&_dbdd ._gadad ==nil {_dbdd .Encrypt ([]byte (_geda ._abed ),[]byte (_geda ._abed ),_geda ._cggb );};if _ggee :=_dac .Get ("\u0049\u0044");_ggee !=nil {if _cgbg ,_dgdb :=_bc .GetArray (_ggee );_dgdb {_dbdd ._cgaaa =_cgbg ;};};if _egb :=_dbdd .Write (_fecf );
_egb !=nil {return _egb ;};if _bbge {_dcae :=_fecf .(*_bg .Buffer ).Bytes ();_cebd :=_bc .MakeArray ();var _cgff []*pdfSignDictionary ;var _egag int64 ;for _ ,_beba :=range _dbdd ._bcbab {if _acfa ,_dbgd :=_bc .GetIndirect (_beba );_dbgd {if _dffg ,_bga :=_acfa .PdfObject .(*pdfSignDictionary );
_bga {_cgff =append (_cgff ,_dffg );_bfbc :=_dffg ._dbfb +int64 (_dffg ._bdbfe );_cebd .Append (_bc .MakeInteger (_egag ),_bc .MakeInteger (_bfbc -_egag ));_egag =_dffg ._dbfb +int64 (_dffg ._efga );};};};_cebd .Append (_bc .MakeInteger (_egag ),_bc .MakeInteger (_adeg +int64 (len (_dcae ))-_egag ));
_cccc :=[]byte (_cebd .WriteString ());for _ ,_agdf :=range _cgff {_ebba :=int (_agdf ._dbfb -_adeg );for _fcbc :=_agdf ._dfeef ;_fcbc < _agdf ._fgceag ;_fcbc ++{_dcae [_ebba +_fcbc ]=' ';};_bdge :=_dcae [_ebba +_agdf ._dfeef :_ebba +_agdf ._fgceag ];copy (_bdge ,_cccc );
};var _afg int ;for _ ,_aeec :=range _cgff {_aedf :=int (_aeec ._dbfb -_adeg );_edbf :=_dcae [_afg :_aedf +_aeec ._bdbfe ];_aae :=*_aeec ._fbbdg ;_bacf [_aae ].Write (_edbf );_afg =_aedf +_aeec ._efga ;};for _ ,_gefca :=range _cgff {_ggda :=_dcae [_afg :];
_aecf :=*_gefca ._fbbdg ;_bacf [_aecf ].Write (_ggda );};for _ ,_bca :=range _cgff {_daad :=int (_bca ._dbfb -_adeg );_fbgc :=*_bca ._fbbdg ;_acgb :=_bacf [_fbgc ];if _cfebe :=_fbgc .Sign (_bca ._cgeac ,_acgb );_cfebe !=nil {return _cfebe ;};_bca ._cgeac .ByteRange =_cebd ;
_dbgfb :=[]byte (_bca ._cgeac .Contents .WriteString ());for _eddd :=_bca ._dfeef ;_eddd < _bca ._fgceag ;_eddd ++{_dcae [_daad +_eddd ]=' ';};for _cede :=_bca ._bdbfe ;_cede < _bca ._efga ;_cede ++{_dcae [_daad +_cede ]=' ';};_aafa :=_dcae [_daad +_bca ._dfeef :_daad +_bca ._fgceag ];
copy (_aafa ,_cccc );_aafa =_dcae [_daad +_bca ._bdbfe :_daad +_bca ._efga ];copy (_aafa ,_dbgfb );};_adcg :=_bg .NewBuffer (_dcae );_ ,_gfcga =_gbe .Copy (w ,_adcg );if _gfcga !=nil {return _gfcga ;};};_geda ._bbfa =true ;return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cgfaf *Outline )ToPdfOutline ()*PdfOutline {_agee :=NewPdfOutline ();var _fade []*PdfOutlineItem ;var _bdbef int64 ;var _acecg *PdfOutlineItem ;for _ ,_agege :=range _cgfaf .Entries {_agfgg ,_cagab :=_agege .ToPdfOutlineItem ();_agfgg .Parent =&_agee .PdfOutlineTreeNode ;
if _acecg !=nil {_acecg .Next =&_agfgg .PdfOutlineTreeNode ;_agfgg .Prev =&_acecg .PdfOutlineTreeNode ;};_fade =append (_fade ,_agfgg );_bdbef +=_cagab ;_acecg =_agfgg ;};_afca :=int64 (len (_fade ));_bdbef +=_afca ;if _afca > 0{_agee .First =&_fade [0].PdfOutlineTreeNode ;
_agee .Last =&_fade [_afca -1].PdfOutlineTreeNode ;_agee .Count =&_bdbef ;};return _agee ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_bbc *PdfAnnotationMarkup )appendToPdfDictionary (_cfcc *_bc .PdfObjectDictionary ){_cfcc .SetIfNotNil ("\u0054",_bbc .T );
if _bbc .Popup !=nil {_cfcc .Set ("\u0050\u006f\u0070u\u0070",_bbc .Popup .ToPdfObject ());};_cfcc .SetIfNotNil ("\u0043\u0041",_bbc .CA );_cfcc .SetIfNotNil ("\u0052\u0043",_bbc .RC );_cfcc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bbc .CreationDate );
_cfcc .SetIfNotNil ("\u0049\u0052\u0054",_bbc .IRT );_cfcc .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bbc .Subj );_cfcc .SetIfNotNil ("\u0052\u0054",_bbc .RT );_cfcc .SetIfNotNil ("\u0049\u0054",_bbc .IT );_cfcc .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bbc .ExData );
};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bc .PdfObjectString ;Q *_bc .PdfObjectInteger ;DS *_bc .PdfObjectString ;RV _bc .PdfObject ;MaxLen *_bc .PdfObjectInteger ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _gbe .ReadSeeker )(*CompliancePdfReader ,error ){const _eaded ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_bebed ,_bfgcc :=_gaaeg (rs ,&ReaderOpts {ComplianceMode :true },false ,_eaded );
if _bfgcc !=nil {return nil ,_bfgcc ;};return &CompliancePdfReader {PdfReader :_bebed },nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebbg *PdfAnnotationWidget )ToPdfObject ()_bc .PdfObject {_ebbg .PdfAnnotation .ToPdfObject ();_cfbb :=_ebbg ._gdfa ;_cfebg :=_cfbb .PdfObject .(*_bc .PdfObjectDictionary );if _ebbg ._aeaa {return _cfbb ;};_ebbg ._aeaa =true ;_cfebg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_cfebg .SetIfNotNil ("\u0048",_ebbg .H );_cfebg .SetIfNotNil ("\u004d\u004b",_ebbg .MK );_cfebg .SetIfNotNil ("\u0041",_ebbg .A );_cfebg .SetIfNotNil ("\u0041\u0041",_ebbg .AA );_cfebg .SetIfNotNil ("\u0042\u0053",_ebbg .BS );_gcd :=_ebbg .Parent ;if _ebbg ._cae !=nil {if _ebbg ._cae ._fegd ==_ebbg ._gdfa {_ebbg ._cae .ToPdfObject ();
};_gcd =_ebbg ._cae .GetContainingPdfObject ();};if _gcd !=_cfbb {_cfebg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcd );};_ebbg ._aeaa =false ;return _cfbb ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cbdgb *PdfPageResources )GetPatternByName (keyName _bc .PdfObjectName )(*PdfPattern ,bool ){if _cbdgb .Pattern ==nil {return nil ,false ;};_deaba ,_gfda :=_bc .TraceToDirectObject (_cbdgb .Pattern ).(*_bc .PdfObjectDictionary );if !_gfda {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbdgb .Pattern );
return nil ,false ;};if _fdbe :=_deaba .Get (keyName );_fdbe !=nil {_gefe ,_ecgfa :=_bdeee (_fdbe );if _ecgfa !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_ecgfa );
return nil ,false ;};return _gefe ,true ;};return nil ,false ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dgdbe *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eagb ,_gddg :=_bc .GetNumbersAsFloat (objects );
if _gddg !=nil {return nil ,_gddg ;};return _dgdbe .ColorFromFloats (_eagb );};

// XObjectType represents the type of an XObject.
type XObjectType int ;func _aabed (_agcbe *PdfField )[]*PdfField {_agfgcd :=[]*PdfField {_agcbe };for _ ,_addga :=range _agcbe .Kids {_agfgcd =append (_agfgcd ,_aabed (_addga )...);};return _agfgcd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_ffda *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_acgge *PdfReader )GetPageLabels ()(_bc .PdfObject ,error ){_dccb :=_bc .ResolveReference (_acgge ._bdbea .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _dccb ==nil {return nil ,nil ;};if !_acgge ._egcb {_cfgfb :=_acgge .traverseObjectData (_dccb );
if _cfgfb !=nil {return nil ,_cfgfb ;};};return _dccb ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_febc *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _febc .Alternate ==nil {_dae .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _febc .N ==1{_dae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_adfda :=NewPdfColorspaceDeviceGray ();return _adfda .ImageToRGB (img );}else if _febc .N ==3{_dae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _febc .N ==4{_dae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fgeg :=NewPdfColorspaceDeviceCMYK ();return _fgeg .ImageToRGB (img );}else {return img ,_ecg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dae .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_febc );
_gddac ,_bbga :=_febc .Alternate .ImageToRGB (img );_dae .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_dae .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_gddac );
return _gddac ,_bbga ;};func (_bbcce *pdfFontSimple )getFontEncoding ()(_gfed string ,_fcgcc map[_cabg .CharCode ]_cabg .GlyphName ,_gcddb error ){_gfed ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _eegg ,_daeab :=_gdgd [_bbcce ._fgdf ];
_daeab {_gfed =_eegg ;}else if _bbcce .fontFlags ()&_ebag !=0{for _geefd ,_agec :=range _gdgd {if _dee .Contains (_bbcce ._fgdf ,_geefd ){_gfed =_agec ;break ;};};};if _bbcce .Encoding ==nil {return _gfed ,nil ,nil ;};switch _dagff :=_bbcce .Encoding .(type ){case *_bc .PdfObjectName :return string (*_dagff ),nil ,nil ;
case *_bc .PdfObjectDictionary :_ecff ,_aadb :=_bc .GetName (_dagff .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _aadb {_gfed =_ecff .String ();};if _dbggd :=_dagff .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_dbggd !=nil {_efacf ,_acag :=_bc .GetArray (_dbggd );if !_acag {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_dagff ,_dagff .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bc .ErrTypeError ;};_fcgcc ,_gcddb =_cabg .FromFontDifferences (_efacf );};return _gfed ,_fcgcc ,_gcddb ;default:_dae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bbcce .Encoding ,_bbcce .Encoding );
return "",nil ,_bc .ErrTypeError ;};};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_egff *PdfPage )GetPageAsIndirectObject ()*_bc .PdfIndirectObject {return _egff ._eadb };

// ToPdfObject implements interface PdfModel.
func (_ffce *PdfAnnotation3D )ToPdfObject ()_bc .PdfObject {_ffce .PdfAnnotation .ToPdfObject ();_fgae :=_ffce ._gdfa ;_ddbfb :=_fgae .PdfObject .(*_bc .PdfObjectDictionary );_ddbfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0033\u0044"));
_ddbfb .SetIfNotNil ("\u0033\u0044\u0044",_ffce .T3DD );_ddbfb .SetIfNotNil ("\u0033\u0044\u0056",_ffce .T3DV );_ddbfb .SetIfNotNil ("\u0033\u0044\u0041",_ffce .T3DA );_ddbfb .SetIfNotNil ("\u0033\u0044\u0049",_ffce .T3DI );_ddbfb .SetIfNotNil ("\u0033\u0044\u0042",_ffce .T3DB );
return _fgae ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bc .PdfObject ,error );};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_abeb :=NewPdfAnnotation ();_aeaf :=&PdfAnnotationWatermark {};_aeaf .PdfAnnotation =_abeb ;_abeb .SetContext (_aeaf );return _aeaf ;};

// ToPdfObject implements interface PdfModel.
func (_be *PdfActionGoTo )ToPdfObject ()_bc .PdfObject {_be .PdfAction .ToPdfObject ();_gc :=_be ._afdg ;_dcg :=_gc .PdfObject .(*_bc .PdfObjectDictionary );_dcg .SetIfNotNil ("\u0053",_bc .MakeName (string (ActionTypeGoTo )));_dcg .SetIfNotNil ("\u0044",_be .D );
return _gc ;};

// StdFontName represents name of a standard font.
type StdFontName =_dg .StdFontName ;func _gefaf (_gfga *_bc .PdfObjectDictionary )(*PdfShadingType2 ,error ){_edcfb :=PdfShadingType2 {};_feedd :=_gfga .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _feedd ==nil {_dae .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_acbdb ,_fcaee :=_feedd .(*_bc .PdfObjectArray );if !_fcaee {_dae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feedd );
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _acbdb .Len ()!=4{_dae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acbdb .Len ());
return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_edcfb .Coords =_acbdb ;if _adaa :=_gfga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_adaa !=nil {_adaa =_bc .TraceToDirectObject (_adaa );
_cacbf ,_aeff :=_adaa .(*_bc .PdfObjectArray );if !_aeff {_dae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adaa );return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_edcfb .Domain =_cacbf ;};_feedd =_gfga .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _feedd ==nil {_dae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_edcfb .Function =[]PdfFunction {};if _gffea ,_eccdf :=_feedd .(*_bc .PdfObjectArray );_eccdf {for _ ,_eeadfd :=range _gffea .Elements (){_fceb ,_eacg :=_ffea (_eeadfd );if _eacg !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eacg );
return nil ,_eacg ;};_edcfb .Function =append (_edcfb .Function ,_fceb );};}else {_gdbg ,_gfcgcd :=_ffea (_feedd );if _gfcgcd !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfcgcd );
return nil ,_gfcgcd ;};_edcfb .Function =append (_edcfb .Function ,_gdbg );};if _bbage :=_gfga .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bbage !=nil {_bbage =_bc .TraceToDirectObject (_bbage );_edgdg ,_efdgf :=_bbage .(*_bc .PdfObjectArray );if !_efdgf {_dae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbage );
return nil ,_bc .ErrTypeError ;};if _edgdg .Len ()!=2{_dae .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_edgdg .Len ());return nil ,ErrInvalidAttribute ;
};_edcfb .Extend =_edgdg ;};return &_edcfb ,nil ;};func (_abbc *PdfSignature )extractChainFromPKCS7 ()([]*_e .Certificate ,error ){_aabac ,_bceag :=_ef .Parse (_abbc .Contents .Bytes ());if _bceag !=nil {return nil ,_bceag ;};return _aabac .Certificates ,nil ;
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gccfb *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gccfb .MediaBox !=nil {return _gccfb .MediaBox ,nil ;};_bdeac :=_gccfb .Parent ;for _bdeac !=nil {_aefa ,_adecb :=_bc .GetDict (_bdeac );if !_adecb {return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fadeg :=_aefa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fadeg !=nil {_daead ,_gdfeb :=_bc .GetArray (_fadeg );if !_gdfeb {return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_cgged ,_fgded :=NewPdfRectangle (*_daead );if _fgded !=nil {return nil ,_fgded ;};return _cgged ,nil ;};_bdeac =_aefa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ecg .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func (_cgaed *XObjectImage )getParamsDict ()*_bc .PdfObjectDictionary {_cgefg :=_bc .MakeDict ();_cgefg .Set ("\u0057\u0069\u0064t\u0068",_bc .MakeInteger (*_cgaed .Width ));_cgefg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bc .MakeInteger (*_cgaed .Height ));
_cgefg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bc .MakeInteger (int64 (_cgaed .ColorSpace .GetNumComponents ())));_cgefg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bc .MakeInteger (*_cgaed .BitsPerComponent ));
return _cgefg ;};

// AddImageResource adds an image to the XObject resources.
func (_fgdfa *PdfPage )AddImageResource (name _bc .PdfObjectName ,ximg *XObjectImage )error {var _dgabf *_bc .PdfObjectDictionary ;if _fgdfa .Resources .XObject ==nil {_dgabf =_bc .MakeDict ();_fgdfa .Resources .XObject =_dgabf ;}else {var _defca bool ;
_dgabf ,_defca =(_fgdfa .Resources .XObject ).(*_bc .PdfObjectDictionary );if !_defca {return _ecg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dgabf .Set (name ,ximg .ToPdfObject ());
return nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_dcea *PdfReader )GetCatalogMetadata ()(_bc .PdfObject ,bool ){if _dcea ._bdbea ==nil {return nil ,false ;};_bcgbg :=_dcea ._bdbea .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bcgbg ,_bcgbg !=nil ;};

// SetName sets the `Name` field of the signature.
func (_cecfd *PdfSignature )SetName (name string ){_cecfd .Name =_bc .MakeString (name )};func (_gegeg *PdfReader )loadAnnotations (_gbfe _bc .PdfObject )([]*PdfAnnotation ,error ){_daabb ,_eafgf :=_bc .GetArray (_gbfe );if !_eafgf {return nil ,_dc .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _geafd []*PdfAnnotation ;for _ ,_adgfa :=range _daabb .Elements (){_adgfa =_bc .ResolveReference (_adgfa );if _ ,_begaa :=_adgfa .(*_bc .PdfObjectNull );_begaa {continue ;};_daded ,_bcfa :=_adgfa .(*_bc .PdfObjectDictionary );_babc ,_bbdda :=_adgfa .(*_bc .PdfIndirectObject );
if _bcfa {_babc =&_bc .PdfIndirectObject {};_babc .PdfObject =_daded ;}else {if !_bbdda {return nil ,_dc .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_dgfea ,_ffebd :=_gegeg .newPdfAnnotationFromIndirectObject (_babc );if _ffebd !=nil {return nil ,_ffebd ;};switch _geece :=_dgfea .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_addd :=range _gegeg .AcroForm .AllFields (){if _addd ._fegd ==_geece .Parent {_geece ._cae =_addd ;
break ;};};};if _dgfea !=nil {_geafd =append (_geafd ,_dgfea );};};return _geafd ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cgaab *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cgaab .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_fddb []byte )(_dggg int ,_ffba error );};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_gcf :=NewPdfAnnotation ();_fad :=&PdfAnnotationLine {};_fad .PdfAnnotation =_gcf ;_fad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcf .SetContext (_fad );return _fad ;};func _bcac (_cgagf _bc .PdfObject ,_effce *PdfReader )(*OutlineDest ,error ){_bded ,_gffg :=_bc .GetArray (_cgagf );
if !_gffg {return nil ,_ecg .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_dfagd :=_bded .Len ();if _dfagd < 2{return nil ,_dc .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_dfagd );
};_agbef :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_ceaf :=_bded .Get (0);if _egdb ,_aaabc :=_bc .GetIndirect (_ceaf );_aaabc {if _ ,_gbbcg ,_fgbcc :=_effce .PageFromIndirectObject (_egdb );_fgbcc ==nil {_agbef .Page =int64 (_gbbcg -1);}else {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_egdb );
};_agbef .PageObj =_egdb ;}else if _gabe ,_dbbgb :=_bc .GetIntVal (_ceaf );_dbbgb {if _gabe >=0&&_gabe < len (_effce .PageList ){_agbef .PageObj =_effce .PageList [_gabe ].GetPageAsIndirectObject ();}else {_dae .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gabe );
};_agbef .Page =int64 (_gabe );}else {return nil ,_dc .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_ceaf );};_cgfdb ,_gffg :=_bc .GetNameVal (_bded .Get (1));
if !_gffg {_dae .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_bded .Get (1));
return _agbef ,nil ;};switch _cgfdb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _dfagd > 2{_agbef .Y ,_ =_bc .GetNumberAsFloat (_bc .TraceToDirectObject (_bded .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _dfagd > 2{_agbef .X ,_ =_bc .GetNumberAsFloat (_bc .TraceToDirectObject (_bded .Get (2)));
};case "\u0058\u0059\u005a":if _dfagd > 4{_agbef .X ,_ =_bc .GetNumberAsFloat (_bc .TraceToDirectObject (_bded .Get (2)));_agbef .Y ,_ =_bc .GetNumberAsFloat (_bc .TraceToDirectObject (_bded .Get (3)));_agbef .Zoom ,_ =_bc .GetNumberAsFloat (_bc .TraceToDirectObject (_bded .Get (4)));
};default:_cgfdb ="\u0046\u0069\u0074";};_agbef .Mode =_cgfdb ;return _agbef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abf *PdfAnnotationLine )ToPdfObject ()_bc .PdfObject {_abf .PdfAnnotation .ToPdfObject ();_cgg :=_abf ._gdfa ;_dafa :=_cgg .PdfObject .(*_bc .PdfObjectDictionary );_abf .PdfAnnotationMarkup .appendToPdfDictionary (_dafa );_dafa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u004c\u0069\u006e\u0065"));
_dafa .SetIfNotNil ("\u004c",_abf .L );_dafa .SetIfNotNil ("\u0042\u0053",_abf .BS );_dafa .SetIfNotNil ("\u004c\u0045",_abf .LE );_dafa .SetIfNotNil ("\u0049\u0043",_abf .IC );_dafa .SetIfNotNil ("\u004c\u004c",_abf .LL );_dafa .SetIfNotNil ("\u004c\u004c\u0045",_abf .LLE );
_dafa .SetIfNotNil ("\u0043\u0061\u0070",_abf .Cap );_dafa .SetIfNotNil ("\u0049\u0054",_abf .IT );_dafa .SetIfNotNil ("\u004c\u004c\u004f",_abf .LLO );_dafa .SetIfNotNil ("\u0043\u0050",_abf .CP );_dafa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_abf .Measure );
_dafa .SetIfNotNil ("\u0043\u004f",_abf .CO );return _cgg ;};

// IsValid checks if the given pdf output intent type is valid.
func (_cbef PdfOutputIntentType )IsValid ()bool {return _cbef >=PdfOutputIntentTypeA1 &&_cbef <=PdfOutputIntentTypeX ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_bbafd *OutlineItem )ToPdfObject ()_bc .PdfObject {_fdabd ,_ :=_bbafd .ToPdfOutlineItem ();return _fdabd .ToPdfObject ();};func (_cccge *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dffb *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbce :=vals [0];if _cbce < 0.0||_cbce > 100.0{_dae .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cbce );
return nil ,ErrColorOutOfRange ;};_gbeg :=vals [1];_bdded :=float64 (-100);_eef :=float64 (100);if len (_dffb .Range )> 1{_bdded =_dffb .Range [0];_eef =_dffb .Range [1];};if _gbeg < _bdded ||_gbeg > _eef {_dae .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gbeg ,_bdded ,_eef );
return nil ,ErrColorOutOfRange ;};_cfbe :=vals [2];_dafb :=float64 (-100);_cgca :=float64 (100);if len (_dffb .Range )> 3{_dafb =_dffb .Range [2];_cgca =_dffb .Range [3];};if _cfbe < _dafb ||_cfbe > _cgca {_dae .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cfbe ,_dafb ,_cgca );
return nil ,ErrColorOutOfRange ;};_fedgd :=NewPdfColorLab (_cbce ,_gbeg ,_cfbe );return _fedgd ,nil ;};func (_ebcg *PdfReader )newPdfActionTransFromDict (_dedd *_bc .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dedd .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func _cfdae ()string {_eccage .Lock ();defer _eccage .Unlock ();return _dagcb };

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_afedg *_bc .PdfParser ;_afgd _bc .PdfObject ;_fgbea *_bc .PdfIndirectObject ;_ddga *_bc .PdfObjectDictionary ;_ggfd []*_bc .PdfIndirectObject ;PageList []*PdfPage ;_bedaf int ;_bdbea *_bc .PdfObjectDictionary ;_abdb *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_afcfd *modelManager ;_egcb bool ;_becga map[_bc .PdfObject ]struct{};_ggge _gbe .ReadSeeker ;_acece string ;_cbda bool ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gd *PdfAction )GetContext ()PdfModel {if _gd ==nil {return nil ;};return _gd ._afd ;};func (_cdddc *PdfReader )lookupPageByObject (_gfgb _bc .PdfObject )(*PdfPage ,error ){return nil ,_ecg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// GetContainingPdfObject implements interface PdfModel.
func (_gbd *PdfAction )GetContainingPdfObject ()_bc .PdfObject {return _gbd ._afdg };

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bc .PdfObject )(*PdfInfo ,error ){var _bgeb PdfInfo ;_beefg ,_fgda :=obj .(*_bc .PdfObjectDictionary );if !_fgda {return nil ,_dc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_ddcd :=range _beefg .Keys (){switch _ddcd {case "\u0054\u0069\u0074l\u0065":_bgeb .Title ,_ =_bc .GetString (_beefg .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_bgeb .Author ,_ =_bc .GetString (_beefg .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_bgeb .Subject ,_ =_bc .GetString (_beefg .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_bgeb .Keywords ,_ =_bc .GetString (_beefg .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_bgeb .Creator ,_ =_bc .GetString (_beefg .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_bgeb .Producer ,_ =_bc .GetString (_beefg .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_bgeb .Trapped ,_ =_bc .GetName (_beefg .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _fccbd ,_dbce :=_bc .GetString (_beefg .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_dbce &&_fccbd .String ()!=""{_dfbb ,_fcfaa :=NewPdfDate (_fccbd .String ());if _fcfaa !=nil {return nil ,_dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_fcfaa );
};_bgeb .CreationDate =&_dfbb ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _gdef ,_eedf :=_bc .GetString (_beefg .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_eedf &&_gdef .String ()!=""{_cbbc ,_aba :=NewPdfDate (_gdef .String ());if _aba !=nil {return nil ,_dc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_aba );
};_bgeb .ModifiedDate =&_cbbc ;};default:_eggc ,_ :=_bc .GetString (_beefg .Get (_ddcd ));if _bgeb ._cbeg ==nil {_bgeb ._cbeg =_bc .MakeDict ();};_bgeb ._cbeg .Set (_ddcd ,_eggc );};};return &_bgeb ,nil ;};func (_fgdc fontCommon )asPdfObjectDictionary (_gecf string )*_bc .PdfObjectDictionary {if _gecf !=""&&_fgdc ._caacf !=""&&_gecf !=_fgdc ._caacf {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gecf ,_fgdc );
}else if _gecf ==""&&_fgdc ._caacf ==""{_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgdc );
}else if _fgdc ._caacf ==""{_fgdc ._caacf =_gecf ;};_dbgg :=_bc .MakeDict ();_dbgg .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0046\u006f\u006e\u0074"));_dbgg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bc .MakeName (_fgdc ._fgdf ));
_dbgg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName (_fgdc ._caacf ));if _fgdc ._feec !=nil {_dbgg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_fgdc ._feec .ToPdfObject ());};if _fgdc ._gdee !=nil {_dbgg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fgdc ._gdee );
}else if _fgdc ._bdbee !=nil {_fgge ,_dbccb :=_fgdc ._bdbee .Stream ();if _dbccb !=nil {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dbccb );
}else {_dbgg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fgge );};};return _dbgg ;};func (_ccdac *PdfWriter )updateObjectNumbers (){_cdeb :=_ccdac .ObjNumOffset ;_febgg :=0;for _ ,_fefcd :=range _ccdac ._bcbab {_bdfeba :=int64 (_febgg +1+_cdeb );
_dgbecd :=true ;if _ccdac ._dcebde {if _fbeea ,_gaaag :=_ccdac ._dgcaa [_fefcd ];_gaaag {_bdfeba =_fbeea ;_dgbecd =false ;};};switch _dbega :=_fefcd .(type ){case *_bc .PdfIndirectObject :_dbega .ObjectNumber =_bdfeba ;_dbega .GenerationNumber =0;case *_bc .PdfObjectStream :_dbega .ObjectNumber =_bdfeba ;
_dbega .GenerationNumber =0;case *_bc .PdfObjectStreams :_dbega .ObjectNumber =_bdfeba ;_dbega .GenerationNumber =0;default:_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_dbega );
continue ;};if _dgbecd {_febgg ++;};};_ebagd :=func (_eadf _bc .PdfObject )int64 {switch _daeag :=_eadf .(type ){case *_bc .PdfIndirectObject :return _daeag .ObjectNumber ;case *_bc .PdfObjectStream :return _daeag .ObjectNumber ;case *_bc .PdfObjectStreams :return _daeag .ObjectNumber ;
};return 0;};_ab .SliceStable (_ccdac ._bcbab ,func (_edafd ,_dfabd int )bool {return _ebagd (_ccdac ._bcbab [_edafd ])< _ebagd (_ccdac ._bcbab [_dfabd ])});};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bc .PdfObjectName ;Colorants _bc .PdfObject ;Process _bc .PdfObject ;MixingHints _bc .PdfObject ;_gbde *_bc .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_gebd *PdfColorCalGray )ToInteger (bits int )uint32 {_aggf :=_da .Pow (2,float64 (bits ))-1;return uint32 (_aggf *_gebd .Val ());};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_dcad *PdfReader )PageFromIndirectObject (ind *_bc .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_dcad .PageList )!=len (_dcad ._ggfd ){return nil ,0,_ecg .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _abdbg ,_affcd :=range _dcad ._ggfd {if _affcd ==ind {return _dcad .PageList [_abdbg ],_abdbg +1,nil ;};};return nil ,0,_ecg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cafcg *PdfShading )GetContainingPdfObject ()_bc .PdfObject {return _cafcg ._agbee };

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fdeb *PdfPageResourcesColorspaces )Set (key _bc .PdfObjectName ,val PdfColorspace ){if _ ,_bdece :=_fdeb .Colorspaces [string (key )];!_bdece {_fdeb .Names =append (_fdeb .Names ,string (key ));};_fdeb .Colorspaces [string (key )]=val ;};func _egbaf (_dggae _dg .StdFont )pdfFontSimple {_cebde :=_dggae .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_caacf :"\u0054\u0079\u0070e\u0031",_fgdf :_dggae .Name ()},_dbgc :_dggae .GetMetricsTable (),_efde :&PdfFontDescriptor {FontName :_bc .MakeName (string (_cebde .Name )),FontFamily :_bc .MakeName (_cebde .Family ),FontWeight :_bc .MakeFloat (float64 (_cebde .Weight )),Flags :_bc .MakeInteger (int64 (_cebde .Flags )),FontBBox :_bc .MakeArrayFromFloats (_cebde .BBox [:]),ItalicAngle :_bc .MakeFloat (_cebde .ItalicAngle ),Ascent :_bc .MakeFloat (_cebde .Ascent ),Descent :_bc .MakeFloat (_cebde .Descent ),CapHeight :_bc .MakeFloat (_cebde .CapHeight ),XHeight :_bc .MakeFloat (_cebde .XHeight ),StemV :_bc .MakeFloat (_cebde .StemV ),StemH :_bc .MakeFloat (_cebde .StemH )},_fbdfdc :_dggae .Encoder ()};
};func (_efcfd *PdfReader )traverseObjectData (_abcdc _bc .PdfObject )error {return _bc .ResolveReferencesDeep (_abcdc ,_efcfd ._becga );};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_acfeb []byte ;_bdced []uint32 ;_bfcee *_bc .PdfObjectStream ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_abcbc *modelManager )GetPrimitiveFromModel (model PdfModel )_bc .PdfObject {_fggfa ,_gaad :=_abcbc ._aeddfe [model ];if !_gaad {return nil ;};return _fggfa ;};func (_edba *PdfReader )newPdfActionGotoRFromDict (_cecb *_bc .PdfObjectDictionary )(*PdfActionGoToR ,error ){_fff ,_dfeb :=_beg (_cecb .Get ("\u0046"));
if _dfeb !=nil {return nil ,_dfeb ;};return &PdfActionGoToR {D :_cecb .Get ("\u0044"),NewWindow :_cecb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fff },nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ffaf :=&PdfColorspaceCalGray {};_ffaf .BlackPoint =[]float64 {0.0,0.0,0.0};_ffaf .Gamma =1;return _ffaf ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _b .Time ){_eccage .Lock ();defer _eccage .Unlock ();_daabc =modifiedDate ;};func _fecbd (_bdbg *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bdbg }};func _bced (_adbed _bc .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_dae .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_adbed .String (),_adbed );
_ecdd :=NewPdfColorspaceSpecialPattern ();if _abfd ,_daabg :=_adbed .(*_bc .PdfIndirectObject );_daabg {_ecdd ._bfca =_abfd ;};_adbed =_bc .TraceToDirectObject (_adbed );if _ddbe ,_fedf :=_adbed .(*_bc .PdfObjectName );_fedf {if *_ddbe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_dc .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _ecdd ,nil ;};_cebb ,_eegf :=_adbed .(*_bc .PdfObjectArray );if !_eegf {_dae .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_adbed );
return nil ,_dc .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _cebb .Len ()!=1&&_cebb .Len ()!=2{_dae .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_cebb );
return nil ,_dc .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_adbed =_cebb .Get (0);if _bedg ,_efbc :=_adbed .(*_bc .PdfObjectName );_efbc {if *_bedg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dae .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bedg );
return nil ,_dc .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _cebb .Len ()> 1{_adbed =_cebb .Get (1);_adbed =_bc .TraceToDirectObject (_adbed );_bfdc ,_fbbac :=NewPdfColorspaceFromPdfObject (_adbed );if _fbbac !=nil {return nil ,_fbbac ;
};_ecdd .UnderlyingCS =_bfdc ;};_dae .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_ecdd .UnderlyingCS );
return _ecdd ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bc .PdfObject ;Name _bc .PdfObject ;State _bc .PdfObject ;StateModel _bc .PdfObject ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bc .PdfObject ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_abaeg *XObjectImage )GetContainingPdfObject ()_bc .PdfObject {return _abaeg ._egeff };func (_eafg *fontFile )parseASCIIPart (_feafd []byte )error {if len (_feafd )< 2||string (_feafd [:2])!="\u0025\u0021"{return _ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fcfgbc ,_eedfe ,_edgec :=_eccad (_feafd );if _edgec !=nil {return _edgec ;};_dabac :=_adaf (_fcfgbc );_eafg ._acedf =_dabac ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _eafg ._acedf ==""{_dae .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _eedfe !=""{_cfad ,_edgd :=_badbd (_eedfe );if _edgd !=nil {return _edgd ;};_dfeda ,_edgd :=_cabg .NewCustomSimpleTextEncoder (_cfad ,nil );if _edgd !=nil {_dae .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_edgd );
return nil ;};_eafg ._ffcg =_dfeda ;};return nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bbdde *PdfPageResources )GetShadingByName (keyName _bc .PdfObjectName )(*PdfShading ,bool ){if _bbdde .Shading ==nil {return nil ,false ;};_baab ,_adabd :=_bc .TraceToDirectObject (_bbdde .Shading ).(*_bc .PdfObjectDictionary );if !_adabd {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbdde .Shading );
return nil ,false ;};if _fgebg :=_baab .Get (keyName );_fgebg !=nil {_adbgc ,_ccgbe :=_abbbf (_fgebg );if _ccgbe !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_ccgbe );
return nil ,false ;};return _adbgc ,true ;};return nil ,false ;};

// GetStandardApplier gets currently used StandardApplier..
func (_geecc *PdfWriter )GetStandardApplier ()StandardApplier {return _geecc ._egad };func (_cdda *Image )samplesTrimPadding (_gbaga []uint32 )[]uint32 {_bfgf :=_cdda .ColorComponents *int (_cdda .Width )*int (_cdda .Height );if len (_gbaga )==_bfgf {return _gbaga ;
};_gdfff :=make ([]uint32 ,_bfgf );_aegbf :=int (_cdda .Width )*_cdda .ColorComponents ;var _bfedb ,_ddfb ,_efed ,_beca int ;_dcgac :=_ecc .BytesPerLine (int (_cdda .Width ),int (_cdda .BitsPerComponent ),_cdda .ColorComponents );for _bfedb =0;_bfedb < int (_cdda .Height );
_bfedb ++{_ddfb =_bfedb *int (_cdda .Width );_efed =_bfedb *_dcgac ;for _beca =0;_beca < _aegbf ;_beca ++{_gdfff [_ddfb +_beca ]=_gbaga [_efed +_beca ];};};return _gdfff ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_agdg pdfFontType0 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){if _agdg .DescendantFont ==nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_agdg );
return _dg .CharMetrics {},false ;};return _agdg .DescendantFont .GetRuneMetrics (r );};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_ffbe *pdfFontSimple )ToPdfObject ()_bc .PdfObject {if _ffbe ._geagf ==nil {_ffbe ._geagf =&_bc .PdfIndirectObject {};};_ggac :=_ffbe .baseFields ().asPdfObjectDictionary ("");_ffbe ._geagf .PdfObject =_ggac ;if _ffbe .FirstChar !=nil {_ggac .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ffbe .FirstChar );
};if _ffbe .LastChar !=nil {_ggac .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ffbe .LastChar );};if _ffbe .Widths !=nil {_ggac .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ffbe .Widths );};if _ffbe .Encoding !=nil {_ggac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ffbe .Encoding );
}else if _ffbe ._bfdd !=nil {_fbed :=_ffbe ._bfdd .ToPdfObject ();if _fbed !=nil {_ggac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fbed );};};return _ffbe ._geagf ;};func _bbgbb ()string {_eccage .Lock ();defer _eccage .Unlock ();return _begaaf };


// ToPdfObject converts date to a PDF string object.
func (_aedb *PdfDate )ToPdfObject ()_bc .PdfObject {_fegdb :=_dc .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_aedb ._ffcfg ,_aedb ._cacfa ,_aedb ._ffafa ,_aedb ._bgad ,_aedb ._efaef ,_aedb ._dcdec ,_aedb ._efbce ,_aedb ._bbac ,_aedb ._fcfbe );
return _bc .MakeString (_fegdb );};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bc .PdfObject ;BS _bc .PdfObject ;};

// GetPage returns the PdfPage model for the specified page number.
func (_fdacd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fdacd ._afedg .GetCrypter ()!=nil &&!_fdacd ._afedg .IsAuthenticated (){return nil ,_dc .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_fdacd ._ggfd )< pageNumber {return nil ,_ecg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_cfff :=pageNumber -1;if _cfff < 0{return nil ,_dc .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fdeae :=_fdacd .PageList [_cfff ];
return _fdeae ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bc .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_aadd *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _gbca []_cabg .TextEncoder ;var _ggff _cabg .CMapEncoder ;if _fdffa :=_aadd .baseFields ()._bdbee ;_fdffa !=nil {_ggff =_cabg .NewCMapEncoder ("",nil ,_fdffa );};_effg :=_aadd .Encoder ();
if _effg !=nil {switch _abce :=_effg .(type ){case _cabg .SimpleEncoder :_edddf :=_abce .BaseName ();if _ ,_bgge :=_accbd [_edddf ];_bgge {_gbca =append (_gbca ,_effg );};};};if len (_gbca )==0{if _aadd .baseFields ()._bdbee !=nil {_gbca =append (_gbca ,_ggff );
};if _effg !=nil {_gbca =append (_gbca ,_effg );};};var _cbac _bg .Buffer ;var _dfcc int ;for _ ,_cffeb :=range data {var _gebb bool ;for _ ,_aage :=range _gbca {if _gcdc :=_aage .Encode (string (_cffeb ));len (_gcdc )> 0{_cbac .Write (_gcdc );_gebb =true ;
break ;};};if !_gebb {_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cffeb );
_dfcc ++;};};if _dfcc !=0{_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dfcc ,_aadd ,_gbca );
};return _cbac .Bytes (),_dfcc ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_eagf *PdfPattern )SetContext (ctx PdfModel ){_eagf ._begg =ctx };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_adffg pdfFont };

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ecab pdfFontSimple )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){if _ecab ._dbgc !=nil {_bagb ,_bffd :=_ecab ._dbgc .Read (r );if _bffd {return _bagb ,true ;};};_cdee :=_ecab .Encoder ();if _cdee ==nil {_dae .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ecab );
return _dg .CharMetrics {},false ;};_eaff ,_bgaf :=_cdee .RuneToCharcode (r );if !_bgaf {if r !=' '{_dae .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ecab );
};return _dg .CharMetrics {},false ;};_ebgf ,_dfee :=_ecab .GetCharMetrics (_eaff );return _ebgf ,_dfee ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_ccfb *VRI )ToPdfObject ()*_bc .PdfObjectDictionary {_ebfd :=_bc .MakeDict ();_ebfd .SetIfNotNil (_bc .PdfObjectName ("\u0043\u0065\u0072\u0074"),_eacd (_ccfb .Cert ));_ebfd .SetIfNotNil (_bc .PdfObjectName ("\u004f\u0043\u0053\u0050"),_eacd (_ccfb .OCSP ));
_ebfd .SetIfNotNil (_bc .PdfObjectName ("\u0043\u0052\u004c"),_eacd (_ccfb .CRL ));_ebfd .SetIfNotNil ("\u0054\u0055",_ccfb .TU );_ebfd .SetIfNotNil ("\u0054\u0053",_ccfb .TS );return _ebfd ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fbdfd *PdfFieldButton )SetType (btype ButtonType ){_ccg :=uint32 (0);if _fbdfd .Ff !=nil {_ccg =uint32 (*_fbdfd .Ff );};switch btype {case ButtonTypePush :_ccg |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_ccg |=FieldFlagRadio .Mask ();};
_fbdfd .Ff =_bc .MakeInteger (int64 (_ccg ));};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_ggdae :_bc .MakeIndirectObject (_bc .MakeDict ()),VRI :map[string ]*VRI {}};};

// Encoder returns the font's text encoder.
func (_aegg pdfCIDFontType2 )Encoder ()_cabg .TextEncoder {return _aegg ._cdafc };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ebbec *PdfPageResources )SetColorspaceByName (keyName _bc .PdfObjectName ,cs PdfColorspace )error {_fbcgg ,_ddebb :=_ebbec .GetColorspaces ();if _ddebb !=nil {_dae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ddebb );
return _ddebb ;};if _fbcgg ==nil {_fbcgg =NewPdfPageResourcesColorspaces ();_ebbec .SetColorSpace (_fbcgg );};_fbcgg .Set (keyName ,cs );return nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ccbe *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ecg .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_gefg ,_gceff :=_ecc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ggfad ,img ._ggeec );if _gceff !=nil {return img ,_gceff ;};_cgfae ,_gceff :=_ecc .GrayConverter .Convert (_gefg );
if _gceff !=nil {return img ,_gceff ;};return _egbafc (_cgfae .Base ()),nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_dfdg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _dfdg ._adffg .getFontDescriptor (),nil ;};func (_beaa *PdfReader )newPdfAnnotationFromIndirectObject (_bggc *_bc .PdfIndirectObject )(*PdfAnnotation ,error ){_fgg ,_gaac :=_bggc .PdfObject .(*_bc .PdfObjectDictionary );
if !_gaac {return nil ,_dc .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_beaa ._afcfd .GetModelFromPrimitive (_fgg );model !=nil {_feac ,_cac :=model .(*PdfAnnotation );if !_cac {return nil ,_dc .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _feac ,nil ;};_abebg :=&PdfAnnotation {};_abebg ._gdfa =_bggc ;_beaa ._afcfd .Register (_fgg ,_abebg );if _ccfa :=_fgg .Get ("\u0054\u0079\u0070\u0065");_ccfa !=nil {_gced ,_aeabc :=_ccfa .(*_bc .PdfObjectName );if !_aeabc {_dae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ccfa );
}else {if *_gced !="\u0041\u006e\u006eo\u0074"{_dae .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gced );};};};
if _dcca :=_fgg .Get ("\u0052\u0065\u0063\u0074");_dcca !=nil {_abebg .Rect =_dcca ;};if _gbda :=_fgg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gbda !=nil {_abebg .Contents =_gbda ;};if _ada :=_fgg .Get ("\u0050");_ada !=nil {_abebg .P =_ada ;
};if _dgaf :=_fgg .Get ("\u004e\u004d");_dgaf !=nil {_abebg .NM =_dgaf ;};if _ebca :=_fgg .Get ("\u004d");_ebca !=nil {_abebg .M =_ebca ;};if _gdaf :=_fgg .Get ("\u0046");_gdaf !=nil {_abebg .F =_gdaf ;};if _ege :=_fgg .Get ("\u0041\u0050");_ege !=nil {_abebg .AP =_ege ;
};if _caa :=_fgg .Get ("\u0041\u0053");_caa !=nil {_abebg .AS =_caa ;};if _fcab :=_fgg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fcab !=nil {_abebg .Border =_fcab ;};if _gadb :=_fgg .Get ("\u0043");_gadb !=nil {_abebg .C =_gadb ;};if _eaa :=_fgg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_eaa !=nil {_abebg .StructParent =_eaa ;};if _eae :=_fgg .Get ("\u004f\u0043");_eae !=nil {_abebg .OC =_eae ;};_fdb :=_fgg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fdb ==nil {_dae .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_abebg ._ccb =nil ;return _abebg ,nil ;};_dcgaa ,_ffdc :=_fdb .(*_bc .PdfObjectName );if !_ffdc {_dae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fdb );
return nil ,_dc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fdb );};switch *_dcgaa {case "\u0054\u0065\u0078\u0074":_geea ,_gbef :=_beaa .newPdfAnnotationTextFromDict (_fgg );
if _gbef !=nil {return nil ,_gbef ;};_geea .PdfAnnotation =_abebg ;_abebg ._ccb =_geea ;return _abebg ,nil ;case "\u004c\u0069\u006e\u006b":_ebg ,_fec :=_beaa .newPdfAnnotationLinkFromDict (_fgg );if _fec !=nil {return nil ,_fec ;};_ebg .PdfAnnotation =_abebg ;
_abebg ._ccb =_ebg ;return _abebg ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fcdg ,_gef :=_beaa .newPdfAnnotationFreeTextFromDict (_fgg );if _gef !=nil {return nil ,_gef ;};_fcdg .PdfAnnotation =_abebg ;_abebg ._ccb =_fcdg ;return _abebg ,nil ;
case "\u004c\u0069\u006e\u0065":_cfc ,_caaa :=_beaa .newPdfAnnotationLineFromDict (_fgg );if _caaa !=nil {return nil ,_caaa ;};_cfc .PdfAnnotation =_abebg ;_abebg ._ccb =_cfc ;_dae .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_abebg ,_abebg );
_dae .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_cfc ,_cfc );_dae .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_cfc .PdfAnnotationMarkup ,_cfc .PdfAnnotationMarkup );
return _abebg ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_feae ,_eedc :=_beaa .newPdfAnnotationSquareFromDict (_fgg );if _eedc !=nil {return nil ,_eedc ;};_feae .PdfAnnotation =_abebg ;_abebg ._ccb =_feae ;return _abebg ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_aee ,_ceg :=_beaa .newPdfAnnotationCircleFromDict (_fgg );
if _ceg !=nil {return nil ,_ceg ;};_aee .PdfAnnotation =_abebg ;_abebg ._ccb =_aee ;return _abebg ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_bda ,_bac :=_beaa .newPdfAnnotationPolygonFromDict (_fgg );if _bac !=nil {return nil ,_bac ;};_bda .PdfAnnotation =_abebg ;
_abebg ._ccb =_bda ;return _abebg ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_ddbg ,_cfb :=_beaa .newPdfAnnotationPolyLineFromDict (_fgg );if _cfb !=nil {return nil ,_cfb ;};_ddbg .PdfAnnotation =_abebg ;_abebg ._ccb =_ddbg ;return _abebg ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ecga ,_cegb :=_beaa .newPdfAnnotationHighlightFromDict (_fgg );if _cegb !=nil {return nil ,_cegb ;};_ecga .PdfAnnotation =_abebg ;_abebg ._ccb =_ecga ;return _abebg ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_fda ,_cdc :=_beaa .newPdfAnnotationUnderlineFromDict (_fgg );
if _cdc !=nil {return nil ,_cdc ;};_fda .PdfAnnotation =_abebg ;_abebg ._ccb =_fda ;return _abebg ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_fbc ,_fccg :=_beaa .newPdfAnnotationSquigglyFromDict (_fgg );if _fccg !=nil {return nil ,_fccg ;
};_fbc .PdfAnnotation =_abebg ;_abebg ._ccb =_fbc ;return _abebg ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_dde ,_cfba :=_beaa .newPdfAnnotationStrikeOut (_fgg );if _cfba !=nil {return nil ,_cfba ;};_dde .PdfAnnotation =_abebg ;_abebg ._ccb =_dde ;
return _abebg ,nil ;case "\u0043\u0061\u0072e\u0074":_edaf ,_gffd :=_beaa .newPdfAnnotationCaretFromDict (_fgg );if _gffd !=nil {return nil ,_gffd ;};_edaf .PdfAnnotation =_abebg ;_abebg ._ccb =_edaf ;return _abebg ,nil ;case "\u0053\u0074\u0061m\u0070":_bbe ,_dcd :=_beaa .newPdfAnnotationStampFromDict (_fgg );
if _dcd !=nil {return nil ,_dcd ;};_bbe .PdfAnnotation =_abebg ;_abebg ._ccb =_bbe ;return _abebg ,nil ;case "\u0049\u006e\u006b":_dec ,_bcgd :=_beaa .newPdfAnnotationInkFromDict (_fgg );if _bcgd !=nil {return nil ,_bcgd ;};_dec .PdfAnnotation =_abebg ;
_abebg ._ccb =_dec ;return _abebg ,nil ;case "\u0050\u006f\u0070u\u0070":_acbc ,_afc :=_beaa .newPdfAnnotationPopupFromDict (_fgg );if _afc !=nil {return nil ,_afc ;};_acbc .PdfAnnotation =_abebg ;_abebg ._ccb =_acbc ;return _abebg ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_gfdb ,_dbge :=_beaa .newPdfAnnotationFileAttachmentFromDict (_fgg );
if _dbge !=nil {return nil ,_dbge ;};_gfdb .PdfAnnotation =_abebg ;_abebg ._ccb =_gfdb ;return _abebg ,nil ;case "\u0053\u006f\u0075n\u0064":_dgce ,_abg :=_beaa .newPdfAnnotationSoundFromDict (_fgg );if _abg !=nil {return nil ,_abg ;};_dgce .PdfAnnotation =_abebg ;
_abebg ._ccb =_dgce ;return _abebg ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bfcc ,_fbab :=_beaa .newPdfAnnotationRichMediaFromDict (_fgg );if _fbab !=nil {return nil ,_fbab ;};_bfcc .PdfAnnotation =_abebg ;_abebg ._ccb =_bfcc ;return _abebg ,nil ;
case "\u004d\u006f\u0076i\u0065":_feb ,_ebae :=_beaa .newPdfAnnotationMovieFromDict (_fgg );if _ebae !=nil {return nil ,_ebae ;};_feb .PdfAnnotation =_abebg ;_abebg ._ccb =_feb ;return _abebg ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_gac ,_dea :=_beaa .newPdfAnnotationScreenFromDict (_fgg );
if _dea !=nil {return nil ,_dea ;};_gac .PdfAnnotation =_abebg ;_abebg ._ccb =_gac ;return _abebg ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_eff ,_gcb :=_beaa .newPdfAnnotationWidgetFromDict (_fgg );if _gcb !=nil {return nil ,_gcb ;};_eff .PdfAnnotation =_abebg ;
_abebg ._ccb =_eff ;return _abebg ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gdgcf ,_gbc :=_beaa .newPdfAnnotationPrinterMarkFromDict (_fgg );if _gbc !=nil {return nil ,_gbc ;};_gdgcf .PdfAnnotation =_abebg ;_abebg ._ccb =_gdgcf ;
return _abebg ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_agff ,_efe :=_beaa .newPdfAnnotationTrapNetFromDict (_fgg );if _efe !=nil {return nil ,_efe ;};_agff .PdfAnnotation =_abebg ;_abebg ._ccb =_agff ;return _abebg ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gbea ,_eaaf :=_beaa .newPdfAnnotationWatermarkFromDict (_fgg );
if _eaaf !=nil {return nil ,_eaaf ;};_gbea .PdfAnnotation =_abebg ;_abebg ._ccb =_gbea ;return _abebg ,nil ;case "\u0033\u0044":_aeae ,_aad :=_beaa .newPdfAnnotation3DFromDict (_fgg );if _aad !=nil {return nil ,_aad ;};_aeae .PdfAnnotation =_abebg ;_abebg ._ccb =_aeae ;
return _abebg ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_deb ,_fbdg :=_beaa .newPdfAnnotationProjectionFromDict (_fgg );if _fbdg !=nil {return nil ,_fbdg ;};_deb .PdfAnnotation =_abebg ;_abebg ._ccb =_deb ;return _abebg ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_fabd ,_adb :=_beaa .newPdfAnnotationRedactFromDict (_fgg );if _adb !=nil {return nil ,_adb ;};_fabd .PdfAnnotation =_abebg ;_abebg ._ccb =_fabd ;return _abebg ,nil ;};_dae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_dcgaa );
return nil ,nil ;};

// SetImage updates XObject Image with new image data.
func (_bedfb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_bedfb .Filter .UpdateParams (img .GetParamsDict ());_ddbae ,_ggffb :=_bedfb .Filter .EncodeBytes (img .Data );if _ggffb !=nil {return _ggffb ;};_bedfb .Stream =_ddbae ;_caabc :=img .Width ;
_bedfb .Width =&_caabc ;_gbbgg :=img .Height ;_bedfb .Height =&_gbbgg ;_ggeab :=img .BitsPerComponent ;_bedfb .BitsPerComponent =&_ggeab ;if cs ==nil {if img .ColorComponents ==1{_bedfb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_bedfb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_bedfb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ecg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bedfb .ColorSpace =cs ;};return nil ;
};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bc .PdfObjectInteger ;BitsPerComponent *_bc .PdfObjectInteger ;BitsPerFlag *_bc .PdfObjectInteger ;Decode *_bc .PdfObjectArray ;Function []PdfFunction ;};

// SetReason sets the `Reason` field of the signature.
func (_bdeb *PdfSignature )SetReason (reason string ){_bdeb .Reason =_bc .MakeString (reason )};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_aaee :=&PdfOutline {_eadg :_bc .MakeIndirectObject (_bc .MakeDict ())};_aaee ._bgbe =_aaee ;return _aaee ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bedd *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_babfg ,_eaf :=color .(*PdfColorCalRGB );if !_eaf {_dae .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ecg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgdfa :=_babfg .A ();_fffdg :=_babfg .B ();_ddbgg :=_babfg .C ();X :=_bedd .Matrix [0]*_da .Pow (_bgdfa ,_bedd .Gamma [0])+_bedd .Matrix [3]*_da .Pow (_fffdg ,_bedd .Gamma [1])+_bedd .Matrix [6]*_da .Pow (_ddbgg ,_bedd .Gamma [2]);
Y :=_bedd .Matrix [1]*_da .Pow (_bgdfa ,_bedd .Gamma [0])+_bedd .Matrix [4]*_da .Pow (_fffdg ,_bedd .Gamma [1])+_bedd .Matrix [7]*_da .Pow (_ddbgg ,_bedd .Gamma [2]);Z :=_bedd .Matrix [2]*_da .Pow (_bgdfa ,_bedd .Gamma [0])+_bedd .Matrix [5]*_da .Pow (_fffdg ,_bedd .Gamma [1])+_bedd .Matrix [8]*_da .Pow (_ddbgg ,_bedd .Gamma [2]);
_affgd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dbaa :=-0.969256*X +1.875992*Y +0.041556*Z ;_bccab :=0.055648*X +-0.204043*Y +1.057311*Z ;_affgd =_da .Min (_da .Max (_affgd ,0),1.0);_dbaa =_da .Min (_da .Max (_dbaa ,0),1.0);_bccab =_da .Min (_da .Max (_bccab ,0),1.0);
return NewPdfColorDeviceRGB (_affgd ,_dbaa ,_bccab ),nil ;};func (_agbg *PdfReader )newPdfAnnotationMovieFromDict (_eecd *_bc .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_fcea :=PdfAnnotationMovie {};_fcea .T =_eecd .Get ("\u0054");_fcea .Movie =_eecd .Get ("\u004d\u006f\u0076i\u0065");
_fcea .A =_eecd .Get ("\u0041");return &_fcea ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_afa .PSProgram ;_gcag *_afa .PSExecutor ;_gebf []byte ;_dedgb *_bc .PdfObjectStream ;};func (_ddea *DSS )add (_gbbc *[]*_bc .PdfObjectStream ,_cagf map[string ]*_bc .PdfObjectStream ,_ggcd [][]byte )([]*_bc .PdfObjectStream ,error ){_ggbd :=make ([]*_bc .PdfObjectStream ,0,len (_ggcd ));
for _ ,_dcfd :=range _ggcd {_eead ,_edeec :=_dcdea (_dcfd );if _edeec !=nil {return nil ,_edeec ;};_gcac ,_cabd :=_cagf [string (_eead )];if !_cabd {_gcac ,_edeec =_bc .MakeStream (_dcfd ,_bc .NewRawEncoder ());if _edeec !=nil {return nil ,_edeec ;};_cagf [string (_eead )]=_gcac ;
*_gbbc =append (*_gbbc ,_gcac );};_ggbd =append (_ggbd ,_gcac );};return _ggbd ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ccb PdfModel ;Rect _bc .PdfObject ;Contents _bc .PdfObject ;P _bc .PdfObject ;NM _bc .PdfObject ;M _bc .PdfObject ;F _bc .PdfObject ;AP _bc .PdfObject ;AS _bc .PdfObject ;Border _bc .PdfObject ;C _bc .PdfObject ;StructParent _bc .PdfObject ;
OC _bc .PdfObject ;_gdfa *_bc .PdfIndirectObject ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bc .PdfObject ;};func _cbacc (_gadeg *_bc .PdfObjectStream )(*PdfFunctionType0 ,error ){_cbfeae :=&PdfFunctionType0 {};_cbfeae ._bfcee =_gadeg ;_abcga :=_gadeg .PdfObjectDictionary ;
_deaa ,_cadce :=_bc .TraceToDirectObject (_abcga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bc .PdfObjectArray );if !_cadce {_dae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _deaa .Len ()< 0||_deaa .Len ()%2!=0{_dae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ecg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cbfeae .NumInputs =_deaa .Len ()/2;_bbff ,_aeea :=_deaa .ToFloat64Array ();if _aeea !=nil {return nil ,_aeea ;};_cbfeae .Domain =_bbff ;_deaa ,_cadce =_bc .TraceToDirectObject (_abcga .Get ("\u0052\u0061\u006eg\u0065")).(*_bc .PdfObjectArray );if !_cadce {_dae .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _deaa .Len ()< 0||_deaa .Len ()%2!=0{return nil ,_ecg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cbfeae .NumOutputs =_deaa .Len ()/2;_ffbdb ,_aeea :=_deaa .ToFloat64Array ();if _aeea !=nil {return nil ,_aeea ;};_cbfeae .Range =_ffbdb ;_deaa ,_cadce =_bc .TraceToDirectObject (_abcga .Get ("\u0053\u0069\u007a\u0065")).(*_bc .PdfObjectArray );if !_cadce {_dae .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dccca ,_aeea :=_deaa .ToIntegerArray ();
if _aeea !=nil {return nil ,_aeea ;};if len (_dccca )!=_cbfeae .NumInputs {_dae .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbfeae .Size =_dccca ;_fgcde ,_cadce :=_bc .TraceToDirectObject (_abcga .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bc .PdfObjectInteger );
if !_cadce {_dae .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ecg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fgcde !=1&&*_fgcde !=2&&*_fgcde !=4&&*_fgcde !=8&&*_fgcde !=12&&*_fgcde !=16&&*_fgcde !=24&&*_fgcde !=32{_dae .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fgcde );
return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbfeae .BitsPerSample =int (*_fgcde );_cbfeae .Order =1;_cbbag ,_cadce :=_bc .TraceToDirectObject (_abcga .Get ("\u004f\u0072\u0064e\u0072")).(*_bc .PdfObjectInteger );
if _cadce {if *_cbbag !=1&&*_cbbag !=3{_dae .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_cbbag );return nil ,_ecg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbfeae .Order =int (*_cbbag );
};_deaa ,_cadce =_bc .TraceToDirectObject (_abcga .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bc .PdfObjectArray );if _cadce {_ceadd ,_acafg :=_deaa .ToFloat64Array ();if _acafg !=nil {return nil ,_acafg ;};_cbfeae .Encode =_ceadd ;};_deaa ,_cadce =_bc .TraceToDirectObject (_abcga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bc .PdfObjectArray );
if _cadce {_ddggb ,_ecfg :=_deaa .ToFloat64Array ();if _ecfg !=nil {return nil ,_ecfg ;};_cbfeae .Decode =_ddggb ;};_cfdg ,_aeea :=_bc .DecodeStream (_gadeg );if _aeea !=nil {return nil ,_aeea ;};_cbfeae ._acfeb =_cfdg ;return _cbfeae ,nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gfd :=NewPdfAnnotation ();_gdgc :=&PdfAnnotationLink {};_gdgc .PdfAnnotation =_gfd ;_gfd .SetContext (_gdgc );return _gdgc ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_eccage .Lock ();defer _eccage .Unlock ();_dagcb =author };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bbgdb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bbgdb .ToPdfOutline ().PdfOutlineTreeNode ;};func _fbbf (_bfec _bc .PdfObject )(*PdfBorderStyle ,error ){_gfa :=&PdfBorderStyle {};_gfa ._dcbb =_bfec ;var _gcg *_bc .PdfObjectDictionary ;
_bfec =_bc .TraceToDirectObject (_bfec );_gcg ,_ebaf :=_bfec .(*_bc .PdfObjectDictionary );if !_ebaf {return nil ,_ecg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _bbca :=_gcg .Get ("\u0054\u0079\u0070\u0065");_bbca !=nil {_bcga ,_gfc :=_bbca .(*_bc .PdfObjectName );
if !_gfc {_dae .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bbca );
}else {if *_bcga !="\u0042\u006f\u0072\u0064\u0065\u0072"{_dae .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bcga );};};};if _beeg :=_gcg .Get ("\u0057");
_beeg !=nil {_acea ,_fgdb :=_bc .GetNumberAsFloat (_beeg );if _fgdb !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_fgdb );return nil ,_fgdb ;};_gfa .W =&_acea ;
};if _adbd :=_gcg .Get ("\u0053");_adbd !=nil {_bbcd ,_fcgf :=_adbd .(*_bc .PdfObjectName );if !_fcgf {return nil ,_ecg .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ebbf BorderStyle ;switch *_bbcd {case "\u0053":_ebbf =BorderStyleSolid ;case "\u0044":_ebbf =BorderStyleDashed ;case "\u0042":_ebbf =BorderStyleBeveled ;case "\u0049":_ebbf =BorderStyleInset ;case "\u0055":_ebbf =BorderStyleUnderline ;default:_dae .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bbcd );
return nil ,_ecg .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gfa .S =&_ebbf ;};if _aggb :=_gcg .Get ("\u0044");_aggb !=nil {_aggd ,_bacg :=_aggb .(*_bc .PdfObjectArray );
if !_bacg {_dae .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_aggb );return nil ,_ecg .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_adec ,_cfag :=_aggd .ToIntegerArray ();if _cfag !=nil {_dae .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cfag );
return nil ,_cfag ;};_gfa .D =&_adec ;};return _gfa ,nil ;};func (_bfff *pdfFontType3 )baseFields ()*fontCommon {return &_bfff .fontCommon };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bc .PdfObject ;NewWindow _bc .PdfObject ;T _bc .PdfObject ;};func _cdeaa (_edaag *_bc .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cddaf :=PdfShadingType3 {};_eecdf :=_edaag .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _eecdf ==nil {_dae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_feegb ,_bcfda :=_eecdf .(*_bc .PdfObjectArray );if !_bcfda {_dae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eecdf );return nil ,_bc .ErrTypeError ;
};if _feegb .Len ()!=6{_dae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_feegb .Len ());return nil ,ErrInvalidAttribute ;};_cddaf .Coords =_feegb ;
if _ceeca :=_edaag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ceeca !=nil {_ceeca =_bc .TraceToDirectObject (_ceeca );_fecbb ,_bbeff :=_ceeca .(*_bc .PdfObjectArray );if !_bbeff {_dae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceeca );
return nil ,_bc .ErrTypeError ;};_cddaf .Domain =_fecbb ;};_eecdf =_edaag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eecdf ==nil {_dae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cddaf .Function =[]PdfFunction {};if _cgdbe ,_faeaa :=_eecdf .(*_bc .PdfObjectArray );_faeaa {for _ ,_fafea :=range _cgdbe .Elements (){_afbcab ,_dgea :=_ffea (_fafea );if _dgea !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgea );
return nil ,_dgea ;};_cddaf .Function =append (_cddaf .Function ,_afbcab );};}else {_fefd ,_bdceda :=_ffea (_eecdf );if _bdceda !=nil {_dae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdceda );
return nil ,_bdceda ;};_cddaf .Function =append (_cddaf .Function ,_fefd );};if _eeefb :=_edaag .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eeefb !=nil {_eeefb =_bc .TraceToDirectObject (_eeefb );_cfgbf ,_cdgca :=_eeefb .(*_bc .PdfObjectArray );if !_cdgca {_dae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeefb );
return nil ,_bc .ErrTypeError ;};if _cfgbf .Len ()!=2{_dae .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cfgbf .Len ());return nil ,ErrInvalidAttribute ;
};_cddaf .Extend =_cfgbf ;};return &_cddaf ,nil ;};func _abfce (_geecg *_bc .PdfObjectDictionary )(*PdfFieldText ,error ){_ecbc :=&PdfFieldText {};_ecbc .DA ,_ =_bc .GetString (_geecg .Get ("\u0044\u0041"));_ecbc .Q ,_ =_bc .GetInt (_geecg .Get ("\u0051"));
_ecbc .DS ,_ =_bc .GetString (_geecg .Get ("\u0044\u0053"));_ecbc .RV =_geecg .Get ("\u0052\u0056");_ecbc .MaxLen ,_ =_bc .GetInt (_geecg .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _ecbc ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;