//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_bea "bytes";_ef "crypto/md5";_eec "crypto/rand";_cb "crypto/sha1";_ee "crypto/x509";_bg "encoding/binary";_e "encoding/hex";_cg "errors";_a "fmt";_eb "github.com/unidoc/pkcs7";_beag "github.com/unidoc/unipdf/v3/common";
_fe "github.com/unidoc/unipdf/v3/core";_aff "github.com/unidoc/unipdf/v3/core/security";_ag "github.com/unidoc/unipdf/v3/core/security/crypt";_bf "github.com/unidoc/unipdf/v3/internal/cmap";_gege "github.com/unidoc/unipdf/v3/internal/imageutil";_cbb "github.com/unidoc/unipdf/v3/internal/license";
_fad "github.com/unidoc/unipdf/v3/internal/sampling";_aee "github.com/unidoc/unipdf/v3/internal/textencoding";_eba "github.com/unidoc/unipdf/v3/internal/timeutils";_cd "github.com/unidoc/unipdf/v3/internal/transform";_ed "github.com/unidoc/unipdf/v3/model/internal/docutil";
_fg "github.com/unidoc/unipdf/v3/model/internal/fonts";_adb "github.com/unidoc/unipdf/v3/model/sigutil";_ebf "github.com/unidoc/unipdf/v3/ps";_ad "github.com/unidoc/unitype";_geg "golang.org/x/xerrors";_be "hash";_bgf "image";_bd "image/color";_ "image/gif";
_ "image/png";_ecf "io";_ec "io/ioutil";_fa "math";_d "math/rand";_bb "os";_f "regexp";_af "sort";_ge "strconv";_ca "strings";_ac "sync";_ae "time";_acc "unicode";_g "unicode/utf8";);func (_bbdge *PdfWriter )hasObject (_daeef _fe .PdfObject )bool {_ ,_bgadf :=_bbdge ._ebfbf [_daeef ];
return _bgadf ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_eg :=NewPdfAction ();_ege :=&PdfActionMovie {};_ege .PdfAction =_eg ;_eg .SetContext (_ege );return _ege ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fe .PdfObject ;LE _fe .PdfObject ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;IT _fe .PdfObject ;Measure _fe .PdfObject ;};func _dfgf (_abecee *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_abecee }};


// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cafbe pdfFontType0 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){if _cafbe .DescendantFont ==nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cafbe );
return _fg .CharMetrics {},false ;};return _cafbe .DescendantFont .GetRuneMetrics (r );};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_faf :=NewPdfAction ();_de :=&PdfActionTrans {};_de .PdfAction =_faf ;_faf .SetContext (_de );return _de ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_dgcf *PdfPage )SetContentStreams (cStreams []string ,encoder _fe .StreamEncoder )error {if len (cStreams )==0{_dgcf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fe .NewRawEncoder ();};var _fdagb []*_fe .PdfObjectStream ;for _ ,_dbcff :=range cStreams {_befd :=&_fe .PdfObjectStream {};
_cdaag :=encoder .MakeStreamDict ();_gadd ,_ggac :=encoder .EncodeBytes ([]byte (_dbcff ));if _ggac !=nil {return _ggac ;};_cdaag .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_gadd ))));_befd .PdfObjectDictionary =_cdaag ;
_befd .Stream =_gadd ;_fdagb =append (_fdagb ,_befd );};if len (_fdagb )==1{_dgcf .Contents =_fdagb [0];}else {_dbca :=_fe .MakeArray ();for _ ,_dbba :=range _fdagb {_dbca .Append (_dbba );};_dgcf .Contents =_dbca ;};return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_afcbc *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_afcbc .NumInputs {_beag .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _afcbc ._eabde ==nil {_adgg :=_afcbc .processSamples ();if _adgg !=nil {return nil ,_adgg ;};};_fgfgb :=_afcbc .Encode ;if _fgfgb ==nil {_fgfgb =[]float64 {};
for _ddcd :=0;_ddcd < len (_afcbc .Size );_ddcd ++{_fgfgb =append (_fgfgb ,0);_fgfgb =append (_fgfgb ,float64 (_afcbc .Size [_ddcd ]-1));};};_bdcef :=_afcbc .Decode ;if _bdcef ==nil {_bdcef =_afcbc .Range ;};_dgdaf :=make ([]int ,len (x ));for _bdgcb :=0;
_bdgcb < len (x );_bdgcb ++{_geebg :=x [_bdgcb ];_fbbb :=_fa .Min (_fa .Max (_geebg ,_afcbc .Domain [2*_bdgcb ]),_afcbc .Domain [2*_bdgcb +1]);_agadb :=_gege .LinearInterpolate (_fbbb ,_afcbc .Domain [2*_bdgcb ],_afcbc .Domain [2*_bdgcb +1],_fgfgb [2*_bdgcb ],_fgfgb [2*_bdgcb +1]);
_dffdg :=_fa .Min (_fa .Max (_agadb ,0),float64 (_afcbc .Size [_bdgcb ]-1));_bbed :=int (_fa .Floor (_dffdg +0.5));if _bbed < 0{_bbed =0;}else if _bbed > _afcbc .Size [_bdgcb ]{_bbed =_afcbc .Size [_bdgcb ]-1;};_dgdaf [_bdgcb ]=_bbed ;};_beced :=_dgdaf [0];
for _acgef :=1;_acgef < _afcbc .NumInputs ;_acgef ++{_feff :=_dgdaf [_acgef ];for _gfdaf :=0;_gfdaf < _acgef ;_gfdaf ++{_feff *=_afcbc .Size [_gfdaf ];};_beced +=_feff ;};_beced *=_afcbc .NumOutputs ;var _gcadd []float64 ;for _fdcda :=0;_fdcda < _afcbc .NumOutputs ;
_fdcda ++{_fedba :=_beced +_fdcda ;if _fedba >=len (_afcbc ._eabde ){_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_gfgc :=_afcbc ._eabde [_fedba ];_ccfab :=_gege .LinearInterpolate (float64 (_gfgc ),0,_fa .Pow (2,float64 (_afcbc .BitsPerSample )),_bdcef [2*_fdcda ],_bdcef [2*_fdcda +1]);_gddb :=_fa .Min (_fa .Max (_ccfab ,_afcbc .Range [2*_fdcda ]),_afcbc .Range [2*_fdcda +1]);
_gcadd =append (_gcadd ,_gddb );};return _gcadd ,nil ;};

// String returns a string that describes `base`.
func (_cfac fontCommon )String ()string {return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_cfac .coreString ());};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_dgebe *PdfField )FullName ()(string ,error ){var _cebgc _bea .Buffer ;_facc :=[]string {};if _dgebe .T !=nil {_facc =append (_facc ,_dgebe .T .Decoded ());};_afage :=map[*PdfField ]bool {};_afage [_dgebe ]=true ;_fafbb :=_dgebe .Parent ;for _fafbb !=nil {if _ ,_ddfd :=_afage [_fafbb ];
_ddfd {return _cebgc .String (),_cg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _fafbb .T ==nil {return _cebgc .String (),_cg .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_facc =append (_facc ,_fafbb .T .Decoded ());_afage [_fafbb ]=true ;_fafbb =_fafbb .Parent ;};for _efaf :=len (_facc )-1;_efaf >=0;_efaf --{_cebgc .WriteString (_facc [_efaf ]);if _efaf > 0{_cebgc .WriteString ("\u002e");};};return _cebgc .String (),nil ;
};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_adac *PdfColorspaceLab )DecodeArray ()[]float64 {_bdacf :=[]float64 {0,100};if _adac .Range !=nil &&len (_adac .Range )==4{_bdacf =append (_bdacf ,_adac .Range ...);}else {_bdacf =append (_bdacf ,-100,100,-100,100);};return _bdacf ;};func (_eebc *fontFile )loadFromSegments (_cfbee ,_bbcdd []byte )error {_beag .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cfbee ),len (_bbcdd ));
_fdbf :=_eebc .parseASCIIPart (_cfbee );if _fdbf !=nil {return _fdbf ;};_beag .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_eebc );if len (_bbcdd )==0{return nil ;};_beag .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_eebc );
return nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fe .PdfObject )(*PdfFont ,error ){return _cbcdc (fontObj ,true )};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fbacc *Image )Resample (targetBitsPerComponent int64 ){if _fbacc .BitsPerComponent ==targetBitsPerComponent {return ;};_aagc :=_fbacc .GetSamples ();if targetBitsPerComponent < _fbacc .BitsPerComponent {_ffgcf :=_fbacc .BitsPerComponent -targetBitsPerComponent ;
for _bbeaea :=range _aagc {_aagc [_bbeaea ]>>=uint (_ffgcf );};}else if targetBitsPerComponent > _fbacc .BitsPerComponent {_fbggf :=targetBitsPerComponent -_fbacc .BitsPerComponent ;for _fegdd :=range _aagc {_aagc [_fegdd ]<<=uint (_fbggf );};};_fbacc .BitsPerComponent =targetBitsPerComponent ;
if _fbacc .BitsPerComponent < 8{_fbacc .resampleLowBits (_aagc );return ;};_egaa :=_gege .BytesPerLine (int (_fbacc .Width ),int (_fbacc .BitsPerComponent ),_fbacc .ColorComponents );_eceee :=make ([]byte ,_egaa *int (_fbacc .Height ));var (_facef ,_dfef ,_gdaed ,_efbf int ;
_bbgc uint32 ;);for _gdaed =0;_gdaed < int (_fbacc .Height );_gdaed ++{_facef =_gdaed *_egaa ;_dfef =(_gdaed +1)*_egaa -1;_egeag :=_fad .ResampleUint32 (_aagc [_facef :_dfef ],int (targetBitsPerComponent ),8);for _efbf ,_bbgc =range _egeag {_eceee [_efbf +_facef ]=byte (_bbgc );
};};_fbacc .Data =_eceee ;};

// ToPdfObject implements interface PdfModel.
func (_ggbc *PdfAnnotationWatermark )ToPdfObject ()_fe .PdfObject {_ggbc .PdfAnnotation .ToPdfObject ();_cbec :=_ggbc ._egb ;_fede :=_cbec .PdfObject .(*_fe .PdfObjectDictionary );_fede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_fede .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_ggbc .FixedPrint );return _cbec ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fe .PdfObject ;V _fe .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_dgfgc *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_bec *PdfActionGoTo )ToPdfObject ()_fe .PdfObject {_bec .PdfAction .ToPdfObject ();_ecg :=_bec ._bgfg ;_cafe :=_ecg .PdfObject .(*_fe .PdfObjectDictionary );_cafe .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoTo )));_cafe .SetIfNotNil ("\u0044",_bec .D );
return _ecg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gegb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbeg ,_dbbf :=_fe .GetNumbersAsFloat (objects );
if _dbbf !=nil {return nil ,_dbbf ;};return _gegb .ColorFromFloats (_cbeg );};

// ToPdfObject implements interface PdfModel.
func (_egc *PdfAnnotationMovie )ToPdfObject ()_fe .PdfObject {_egc .PdfAnnotation .ToPdfObject ();_bff :=_egc ._egb ;_fbge :=_bff .PdfObject .(*_fe .PdfObjectDictionary );_fbge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u004d\u006f\u0076i\u0065"));
_fbge .SetIfNotNil ("\u0054",_egc .T );_fbge .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_egc .Movie );_fbge .SetIfNotNil ("\u0041",_egc .A );return _bff ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject implements interface PdfModel.
func (_fdd *PdfAnnotationFreeText )ToPdfObject ()_fe .PdfObject {_fdd .PdfAnnotation .ToPdfObject ();_abgc :=_fdd ._egb ;_cdaa :=_abgc .PdfObject .(*_fe .PdfObjectDictionary );_fdd .PdfAnnotationMarkup .appendToPdfDictionary (_cdaa );_cdaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_cdaa .SetIfNotNil ("\u0044\u0041",_fdd .DA );_cdaa .SetIfNotNil ("\u0051",_fdd .Q );_cdaa .SetIfNotNil ("\u0052\u0043",_fdd .RC );_cdaa .SetIfNotNil ("\u0044\u0053",_fdd .DS );_cdaa .SetIfNotNil ("\u0043\u004c",_fdd .CL );_cdaa .SetIfNotNil ("\u0049\u0054",_fdd .IT );
_cdaa .SetIfNotNil ("\u0042\u0045",_fdd .BE );_cdaa .SetIfNotNil ("\u0052\u0044",_fdd .RD );_cdaa .SetIfNotNil ("\u0042\u0053",_fdd .BS );_cdaa .SetIfNotNil ("\u004c\u0045",_fdd .LE );return _abgc ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fe .PdfObject ;Mac _fe .PdfObject ;Unix _fe .PdfObject ;NewWindow _fe .PdfObject ;};func _dcgfa (_abgbe _fe .PdfObject )(*PdfFunctionType3 ,error ){_cddbd :=&PdfFunctionType3 {};var _decgb *_fe .PdfObjectDictionary ;
if _aebgc ,_abebd :=_abgbe .(*_fe .PdfIndirectObject );_abebd {_gebgc ,_dbecf :=_aebgc .PdfObject .(*_fe .PdfObjectDictionary );if !_dbecf {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cddbd ._fdbff =_aebgc ;_decgb =_gebgc ;}else if _faeff ,_addb :=_abgbe .(*_fe .PdfObjectDictionary );_addb {_decgb =_faeff ;}else {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgbee ,_ecfcg :=_fe .TraceToDirectObject (_decgb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );
if !_ecfcg {_beag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cgbee .Len ()!=2{_beag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_acafe ,_gggcg :=_cgbee .ToFloat64Array ();
if _gggcg !=nil {return nil ,_gggcg ;};_cddbd .Domain =_acafe ;_cgbee ,_ecfcg =_fe .TraceToDirectObject (_decgb .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );if _ecfcg {if _cgbee .Len ()< 0||_cgbee .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fceg ,_dgefb :=_cgbee .ToFloat64Array ();if _dgefb !=nil {return nil ,_dgefb ;};_cddbd .Range =_fceg ;};_cgbee ,_ecfcg =_fe .TraceToDirectObject (_decgb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fe .PdfObjectArray );if !_ecfcg {_beag .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cddbd .Functions =[]PdfFunction {};
for _ ,_efab :=range _cgbee .Elements (){_agebd ,_afac :=_aacg (_efab );if _afac !=nil {return nil ,_afac ;};_cddbd .Functions =append (_cddbd .Functions ,_agebd );};_cgbee ,_ecfcg =_fe .TraceToDirectObject (_decgb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fe .PdfObjectArray );
if !_ecfcg {_beag .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_eadead ,_gggcg :=_cgbee .ToFloat64Array ();if _gggcg !=nil {return nil ,_gggcg ;};_cddbd .Bounds =_eadead ;if len (_cddbd .Bounds )!=len (_cddbd .Functions )-1{_beag .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_cddbd .Bounds ),len (_cddbd .Functions ));
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbee ,_ecfcg =_fe .TraceToDirectObject (_decgb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fe .PdfObjectArray );if !_ecfcg {_beag .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bdaef ,_gggcg :=_cgbee .ToFloat64Array ();
if _gggcg !=nil {return nil ,_gggcg ;};_cddbd .Encode =_bdaef ;if len (_cddbd .Encode )!=2*len (_cddbd .Functions ){_beag .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_cddbd .Encode ),len (_cddbd .Functions ));
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _cddbd ,nil ;};func (_aabag *PdfSignature )extractChainFromCert ()([]*_ee .Certificate ,error ){var _ddea *_fe .PdfObjectArray ;switch _geff :=_aabag .Cert .(type ){case *_fe .PdfObjectString :_ddea =_fe .MakeArray (_geff );
case *_fe .PdfObjectArray :_ddea =_geff ;default:return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_geff );
};var _ebeff _bea .Buffer ;for _ ,_dbeae :=range _ddea .Elements (){_gdddc ,_eafbg :=_fe .GetString (_dbeae );if !_eafbg {return nil ,_a .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_dbeae );
};if _ ,_cfdcce :=_ebeff .Write (_gdddc .Bytes ());_cfdcce !=nil {return nil ,_cfdcce ;};};return _ee .ParseCertificates (_ebeff .Bytes ());};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gaag :=NewPdfAnnotation ();_bdfbg :=&PdfAnnotation3D {};_bdfbg .PdfAnnotation =_gaag ;_gaag .SetContext (_bdfbg );return _bdfbg ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_fdge *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcgcf ,_bbee :=_fe .GetNumbersAsFloat (objects );
if _bbee !=nil {return nil ,_bbee ;};return _fdge .ColorFromFloats (_fcgcf );};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_bedcc FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_bedcc .Mask ()&^fl .Mask ())};func (_ecfcb *Image )samplesAddPadding (_bggcb []uint32 )[]uint32 {_aacda :=_gege .BytesPerLine (int (_ecfcb .Width ),int (_ecfcb .BitsPerComponent ),_ecfcb .ColorComponents )*(8/int (_ecfcb .BitsPerComponent ));
_cabb :=_aacda *int (_ecfcb .Height );if len (_bggcb )==_cabb {return _bggcb ;};_ddecd :=make ([]uint32 ,_cabb );_bgfcdf :=int (_ecfcb .Width )*_ecfcb .ColorComponents ;for _gcbfa :=0;_gcbfa < int (_ecfcb .Height );_gcbfa ++{_feege :=_gcbfa *int (_ecfcb .Width );
_fbgca :=_gcbfa *_aacda ;for _efed :=0;_efed < _bgfcdf ;_efed ++{_ddecd [_fbgca +_efed ]=_bggcb [_feege +_efed ];};};return _ddecd ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_becca *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _cg .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_becca .S =subtype ;return nil ;};func (_befc *PdfReader )newPdfActionFromIndirectObject (_ace *_fe .PdfIndirectObject )(*PdfAction ,error ){_dff ,_egg :=_ace .PdfObject .(*_fe .PdfObjectDictionary );if !_egg {return nil ,_a .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_befc ._befdc .GetModelFromPrimitive (_dff );model !=nil {_fag ,_gab :=model .(*PdfAction );if !_gab {return nil ,_a .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _fag ,nil ;};_bab :=&PdfAction {};_bab ._bgfg =_ace ;_befc ._befdc .Register (_dff ,_bab );if _dcg :=_dff .Get ("\u0054\u0079\u0070\u0065");_dcg !=nil {_caff ,_gga :=_dcg .(*_fe .PdfObjectName );if !_gga {_beag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dcg );
}else {if *_caff !="\u0041\u0063\u0074\u0069\u006f\u006e"{_beag .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_caff );
};_bab .Type =_caff ;};};if _afd :=_dff .Get ("\u004e\u0065\u0078\u0074");_afd !=nil {_bab .Next =_afd ;};if _fce :=_dff .Get ("\u0053");_fce !=nil {_bab .S =_fce ;};_aab ,_ecc :=_bab .S .(*_fe .PdfObjectName );if !_ecc {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bab .S );
return nil ,_a .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bab .S );};_fae :=PdfActionType (_aab .String ());
switch _fae {case ActionTypeGoTo :_ddb ,_ggf :=_befc .newPdfActionGotoFromDict (_dff );if _ggf !=nil {return nil ,_ggf ;};_ddb .PdfAction =_bab ;_bab ._gf =_ddb ;return _bab ,nil ;case ActionTypeGoToR :_bge ,_dcge :=_befc .newPdfActionGotoRFromDict (_dff );
if _dcge !=nil {return nil ,_dcge ;};_bge .PdfAction =_bab ;_bab ._gf =_bge ;return _bab ,nil ;case ActionTypeGoToE :_gbe ,_dbd :=_befc .newPdfActionGotoEFromDict (_dff );if _dbd !=nil {return nil ,_dbd ;};_gbe .PdfAction =_bab ;_bab ._gf =_gbe ;return _bab ,nil ;
case ActionTypeLaunch :_egff ,_gfff :=_befc .newPdfActionLaunchFromDict (_dff );if _gfff !=nil {return nil ,_gfff ;};_egff .PdfAction =_bab ;_bab ._gf =_egff ;return _bab ,nil ;case ActionTypeThread :_fafg ,_eac :=_befc .newPdfActionThreadFromDict (_dff );
if _eac !=nil {return nil ,_eac ;};_fafg .PdfAction =_bab ;_bab ._gf =_fafg ;return _bab ,nil ;case ActionTypeURI :_ccb ,_fcd :=_befc .newPdfActionURIFromDict (_dff );if _fcd !=nil {return nil ,_fcd ;};_ccb .PdfAction =_bab ;_bab ._gf =_ccb ;return _bab ,nil ;
case ActionTypeSound :_gbc ,_fb :=_befc .newPdfActionSoundFromDict (_dff );if _fb !=nil {return nil ,_fb ;};_gbc .PdfAction =_bab ;_bab ._gf =_gbc ;return _bab ,nil ;case ActionTypeMovie :_fgd ,_feg :=_befc .newPdfActionMovieFromDict (_dff );if _feg !=nil {return nil ,_feg ;
};_fgd .PdfAction =_bab ;_bab ._gf =_fgd ;return _bab ,nil ;case ActionTypeHide :_gfe ,_ddc :=_befc .newPdfActionHideFromDict (_dff );if _ddc !=nil {return nil ,_ddc ;};_gfe .PdfAction =_bab ;_bab ._gf =_gfe ;return _bab ,nil ;case ActionTypeNamed :_edf ,_dgb :=_befc .newPdfActionNamedFromDict (_dff );
if _dgb !=nil {return nil ,_dgb ;};_edf .PdfAction =_bab ;_bab ._gf =_edf ;return _bab ,nil ;case ActionTypeSubmitForm :_accbb ,_ccf :=_befc .newPdfActionSubmitFormFromDict (_dff );if _ccf !=nil {return nil ,_ccf ;};_accbb .PdfAction =_bab ;_bab ._gf =_accbb ;
return _bab ,nil ;case ActionTypeResetForm :_bede ,_abe :=_befc .newPdfActionResetFormFromDict (_dff );if _abe !=nil {return nil ,_abe ;};_bede .PdfAction =_bab ;_bab ._gf =_bede ;return _bab ,nil ;case ActionTypeImportData :_abc ,_gag :=_befc .newPdfActionImportDataFromDict (_dff );
if _gag !=nil {return nil ,_gag ;};_abc .PdfAction =_bab ;_bab ._gf =_abc ;return _bab ,nil ;case ActionTypeSetOCGState :_fbd ,_acb :=_befc .newPdfActionSetOCGStateFromDict (_dff );if _acb !=nil {return nil ,_acb ;};_fbd .PdfAction =_bab ;_bab ._gf =_fbd ;
return _bab ,nil ;case ActionTypeRendition :_cec ,_bgfc :=_befc .newPdfActionRenditionFromDict (_dff );if _bgfc !=nil {return nil ,_bgfc ;};_cec .PdfAction =_bab ;_bab ._gf =_cec ;return _bab ,nil ;case ActionTypeTrans :_cfd ,_fcb :=_befc .newPdfActionTransFromDict (_dff );
if _fcb !=nil {return nil ,_fcb ;};_cfd .PdfAction =_bab ;_bab ._gf =_cfd ;return _bab ,nil ;case ActionTypeGoTo3DView :_abcb ,_gce :=_befc .newPdfActionGoTo3DViewFromDict (_dff );if _gce !=nil {return nil ,_gce ;};_abcb .PdfAction =_bab ;_bab ._gf =_abcb ;
return _bab ,nil ;case ActionTypeJavaScript :_bba ,_fea :=_befc .newPdfActionJavaScriptFromDict (_dff );if _fea !=nil {return nil ,_fea ;};_bba .PdfAction =_bab ;_bab ._gf =_bba ;return _bab ,nil ;};_beag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fae );
return nil ,nil ;};func (_ecacd *LTV )getCRLs (_fcccf []*_ee .Certificate )([][]byte ,error ){_gdcdd :=make ([][]byte ,0,len (_fcccf ));for _ ,_ggcf :=range _fcccf {for _ ,_fefda :=range _ggcf .CRLDistributionPoints {if _ecacd .CertClient .IsCA (_ggcf ){continue ;
};_adbf ,_effc :=_ecacd .CRLClient .MakeRequest (_fefda ,_ggcf );if _effc !=nil {_beag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_effc );continue ;
};_gdcdd =append (_gdcdd ,_adbf );};};return _gdcdd ,nil ;};

// Encoder returns the font's text encoder.
func (_gaaad pdfCIDFontType0 )Encoder ()_aee .TextEncoder {return _gaaad ._dcbe };func (_faefg Image )getBase ()_gege .ImageBase {return _gege .NewImageBase (int (_faefg .Width ),int (_faefg .Height ),int (_faefg .BitsPerComponent ),_faefg .ColorComponents ,_faefg .Data ,_faefg ._fdcdb ,_faefg ._abeag );
};

// ToPdfObject returns the PDF representation of the page resources.
func (_agbb *PdfPageResources )ToPdfObject ()_fe .PdfObject {_dccd :=_agbb ._dafc ;_dccd .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_agbb .ExtGState );if _agbb ._ebdcb !=nil {_agbb .ColorSpace =_agbb ._ebdcb .ToPdfObject ();};_dccd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_agbb .ColorSpace );
_dccd .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_agbb .Pattern );_dccd .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_agbb .Shading );_dccd .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_agbb .XObject );_dccd .SetIfNotNil ("\u0046\u006f\u006e\u0074",_agbb .Font );
_dccd .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_agbb .ProcSet );_dccd .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_agbb .Properties );return _dccd ;};func (_fadab *pdfFontType0 )subsetRegistered ()error {_becaa ,_ecdfg :=_fadab .DescendantFont ._cdgee .(*pdfCIDFontType2 );
if !_ecdfg {_beag .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_fadab .DescendantFont );return nil ;};if _becaa ==nil {return nil ;
};if _becaa ._eaaeg ==nil {_beag .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _fadab ._gbdda ==nil {_beag .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_edddf ,_ecdfg :=_fe .GetStream (_becaa ._eaaeg .FontFile2 );if !_ecdfg {_beag .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cg .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_acbca ,_dgga :=_fe .DecodeStream (_edddf );if _dgga !=nil {_beag .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dgga );
return _dgga ;};_faabb ,_dgga :=_ad .Parse (_bea .NewReader (_acbca ));if _dgga !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_edddf .Stream ));
return _dgga ;};var _dfbeg []rune ;var _cegf *_ad .Font ;switch _ccgd :=_fadab ._gbdda .(type ){case *_aee .TrueTypeFontEncoder :_dfbeg =_ccgd .RegisteredRunes ();_cegf ,_dgga =_faabb .SubsetKeepRunes (_dfbeg );if _dgga !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgga );
return _dgga ;};_ccgd .SubsetRegistered ();case *_aee .IdentityEncoder :_dfbeg =_ccgd .RegisteredRunes ();_aacag :=make ([]_ad .GlyphIndex ,len (_dfbeg ));for _aebd ,_gbfg :=range _dfbeg {_aacag [_aebd ]=_ad .GlyphIndex (_gbfg );};_cegf ,_dgga =_faabb .SubsetKeepIndices (_aacag );
if _dgga !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgga );return _dgga ;};case _aee .SimpleEncoder :_ggdda :=_ccgd .Charcodes ();for _ ,_agff :=range _ggdda {_dccc ,_gdaea :=_ccgd .CharcodeToRune (_agff );if !_gdaea {_beag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_agff );
continue ;};_dfbeg =append (_dfbeg ,_dccc );};default:return _a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_fadab ._gbdda );
};var _ggc _bea .Buffer ;_dgga =_cegf .Write (&_ggc );if _dgga !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgga );return _dgga ;};if _fadab ._ggee !=nil {_ccbga :=make (map[_bf .CharCode ]rune ,len (_dfbeg ));for _ ,_bageg :=range _dfbeg {_afec ,_ggfff :=_fadab ._gbdda .RuneToCharcode (_bageg );
if !_ggfff {continue ;};_ccbga [_bf .CharCode (_afec )]=_bageg ;};_fadab ._ggee =_bf .NewToUnicodeCMap (_ccbga );};_edddf ,_dgga =_fe .MakeStream (_ggc .Bytes (),_fe .NewFlateEncoder ());if _dgga !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgga );
return _dgga ;};_edddf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fe .MakeInteger (int64 (_ggc .Len ())));if _bfed ,_feceb :=_fe .GetStream (_becaa ._eaaeg .FontFile2 );_feceb {*_bfed =*_edddf ;}else {_becaa ._eaaeg .FontFile2 =_edddf ;};_abeg :=_ecdc ();
if len (_fadab ._agee )> 0{_fadab ._agee =_dgbf (_fadab ._agee ,_abeg );};if len (_becaa ._agee )> 0{_becaa ._agee =_dgbf (_becaa ._agee ,_abeg );};if len (_fadab ._bggg )> 0{_fadab ._bggg =_dgbf (_fadab ._bggg ,_abeg );};if _becaa ._eaaeg !=nil {_fedcd ,_eeccd :=_fe .GetName (_becaa ._eaaeg .FontName );
if _eeccd &&len (_fedcd .String ())> 0{_fdeda :=_dgbf (_fedcd .String (),_abeg );_becaa ._eaaeg .FontName =_fe .MakeName (_fdeda );};};return nil ;};func (_gfcfd *PdfWriter )writeObjectsInStreams (_bgadc map[_fe .PdfObject ]bool )error {for _ ,_accgae :=range _gfcfd ._cfabe {if _bfaea :=_bgadc [_accgae ];
_bfaea {continue ;};_aeeeg :=int64 (0);switch _dggfd :=_accgae .(type ){case *_fe .PdfIndirectObject :_aeeeg =_dggfd .ObjectNumber ;case *_fe .PdfObjectStream :_aeeeg =_dggfd .ObjectNumber ;case *_fe .PdfObjectStreams :_aeeeg =_dggfd .ObjectNumber ;default:_beag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_accgae );
return ErrTypeCheck ;};if _gfcfd ._fddf !=nil &&_accgae !=_gfcfd ._eeebf {_geggd :=_gfcfd ._fddf .Encrypt (_accgae ,_aeeeg ,0);if _geggd !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_geggd );
return _geggd ;};};_gfcfd .writeObject (int (_aeeeg ),_accgae );};return nil ;};func _dcbdd (_bfeg *_fe .PdfObjectDictionary )(*PdfShadingType5 ,error ){_bdbefd :=PdfShadingType5 {};_eggcd :=_bfeg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eggcd ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dafba ,_dbbag :=_eggcd .(*_fe .PdfObjectInteger );if !_dbbag {_beag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eggcd );
return nil ,_fe .ErrTypeError ;};_bdbefd .BitsPerCoordinate =_dafba ;_eggcd =_bfeg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eggcd ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dafba ,_dbbag =_eggcd .(*_fe .PdfObjectInteger );if !_dbbag {_beag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eggcd );
return nil ,_fe .ErrTypeError ;};_bdbefd .BitsPerComponent =_dafba ;_eggcd =_bfeg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _eggcd ==nil {_beag .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_dafba ,_dbbag =_eggcd .(*_fe .PdfObjectInteger );if !_dbbag {_beag .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_eggcd );
return nil ,_fe .ErrTypeError ;};_bdbefd .VerticesPerRow =_dafba ;_eggcd =_bfeg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eggcd ==nil {_beag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edfbg ,_dbbag :=_eggcd .(*_fe .PdfObjectArray );if !_dbbag {_beag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eggcd );
return nil ,_fe .ErrTypeError ;};_bdbefd .Decode =_edfbg ;if _bbcfd :=_bfeg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bbcfd !=nil {_bdbefd .Function =[]PdfFunction {};if _baeebb ,_dgcd :=_bbcfd .(*_fe .PdfObjectArray );_dgcd {for _ ,_fefcd :=range _baeebb .Elements (){_cdbg ,_cfad :=_aacg (_fefcd );
if _cfad !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfad );return nil ,_cfad ;};_bdbefd .Function =append (_bdbefd .Function ,_cdbg );
};}else {_acabfc ,_gagff :=_aacg (_bbcfd );if _gagff !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gagff );return nil ,_gagff ;
};_bdbefd .Function =append (_bdbefd .Function ,_acabfc );};};return &_bdbefd ,nil ;};func _cfdec (_afcc map[_fg .GID ]int ,_bfee uint16 )*_fe .PdfObjectArray {_dedab :=&_fe .PdfObjectArray {};_babge :=_fg .GID (_bfee );for _bafbd :=_fg .GID (0);_bafbd < _babge ;
{_bbfd ,_adab :=_afcc [_bafbd ];if !_adab {_bafbd ++;continue ;};_ccfga :=_bafbd ;for _adcda :=_ccfga +1;_adcda < _babge ;_adcda ++{if _gdfd ,_cfdcc :=_afcc [_adcda ];!_cfdcc ||_bbfd !=_gdfd {break ;};_ccfga =_adcda ;};_dedab .Append (_fe .MakeInteger (int64 (_bafbd )));
_dedab .Append (_fe .MakeInteger (int64 (_ccfga )));_dedab .Append (_fe .MakeInteger (int64 (_bbfd )));_bafbd =_ccfga +1;};return _dedab ;};func (_gdg *PdfReader )newPdfActionMovieFromDict (_acbf *_fe .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_acbf .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_acbf .Get ("\u0054"),Operation :_acbf .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_gafc *PdfReader )newPdfAnnotationFreeTextFromDict (_edff *_fe .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fga :=PdfAnnotationFreeText {};_aeb ,_fedg :=_gafc .newPdfAnnotationMarkupFromDict (_edff );if _fedg !=nil {return nil ,_fedg ;
};_fga .PdfAnnotationMarkup =_aeb ;_fga .DA =_edff .Get ("\u0044\u0041");_fga .Q =_edff .Get ("\u0051");_fga .RC =_edff .Get ("\u0052\u0043");_fga .DS =_edff .Get ("\u0044\u0053");_fga .CL =_edff .Get ("\u0043\u004c");_fga .IT =_edff .Get ("\u0049\u0054");
_fga .BE =_edff .Get ("\u0042\u0045");_fga .RD =_edff .Get ("\u0052\u0044");_fga .BS =_edff .Get ("\u0042\u0053");_fga .LE =_edff .Get ("\u004c\u0045");return &_fga ,nil ;};func (_cebba *PdfAcroForm )filteredFields (_gddd FieldFilterFunc ,_fafaf bool )[]*PdfField {if _cebba ==nil {return nil ;
};return _cgdef (_cebba .Fields ,_gddd ,_fafaf );};func _cbcdc (_cgadg _fe .PdfObject ,_ffbgf bool )(*PdfFont ,error ){_gfef ,_ccgb ,_deac :=_fecda (_cgadg );if _deac !=nil {if _deac ==ErrType1CFontNotSupported {_agfe ,_cccb :=_fdeg (_gfef ,_ccgb ,nil );
if _cccb !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ccgb ,_cccb );
return nil ,_deac ;};return &PdfFont {_cdgee :_agfe },_deac ;};return nil ,_deac ;};_fffg :=&PdfFont {};switch _ccgb ._eegd {case "\u0054\u0079\u0070e\u0030":if !_ffbgf {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccgb );
return nil ,_cg .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_fcbbb ,_gdcda :=_gfdg (_gfef ,_ccgb );if _gdcda !=nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccgb ,_gdcda );
return nil ,_gdcda ;};_fffg ._cdgee =_fcbbb ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dadg *pdfFontSimple ;_gecgg ,_faee :=_fg .NewStdFontByName (_fg .StdFontName (_ccgb ._agee ));
if _faee {_bafe :=_bdbe (_gecgg );_fffg ._cdgee =&_bafe ;_fafbba :=_fe .TraceToDirectObject (_bafe .ToPdfObject ());_ecefe ,_befe ,_bfaaa :=_fecda (_fafbba );if _bfaaa !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ccgb ,_bafe );
return nil ,_bfaaa ;};for _ ,_edbae :=range _gfef .Keys (){_ecefe .Set (_edbae ,_gfef .Get (_edbae ));};_dadg ,_bfaaa =_fdeg (_ecefe ,_befe ,_bafe ._geadc );if _bfaaa !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ccgb ,_bafe );
return nil ,_bfaaa ;};_dadg ._eecac =_bafe ._eecac ;_dadg ._gcecc =_bafe ._gcecc ;if _dadg ._cdged ==nil {_dadg ._cdged =_bafe ._cdged ;};}else {_dadg ,_deac =_fdeg (_gfef ,_ccgb ,nil );if _deac !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ccgb ,_deac );
return nil ,_deac ;};};_deac =_dadg .addEncoding ();if _deac !=nil {return nil ,_deac ;};if _faee {_dadg .updateStandard14Font ();};if _faee &&_dadg ._cgefeb ==nil &&_dadg ._geadc ==nil {_beag .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dadg );
_beag .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_gecgg );};if len (_dadg ._eecac )==0{_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dadg );};_fffg ._cdgee =_dadg ;
case "\u0054\u0079\u0070e\u0033":_fafff ,_faaba :=_cbfag (_gfef ,_ccgb );if _faaba !=nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_faaba );
return nil ,_faaba ;};_fffg ._cdgee =_fafff ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_egegg ,_fdbgd :=_aagfd (_gfef ,_ccgb );if _fdbgd !=nil {_beag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fdbgd );
return nil ,_fdbgd ;};_fffg ._cdgee =_egegg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_face ,_bbeee :=_eeac (_gfef ,_ccgb );if _bbeee !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccgb ,_bbeee );
return nil ,_bbeee ;};_fffg ._cdgee =_face ;default:_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_ccgb );
return nil ,_a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccgb );};return _fffg ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_fbbba *PdfWriter )AddPage (page *PdfPage )error {const _ffecc ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_bcbca (page );_ffaa :=page .ToPdfObject ();_beag .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_beag .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ffaa );_gbfc ,_fgdfb :=_fe .GetIndirect (_ffaa );if !_fgdfb {return _cg .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_beag .Log .Trace ("\u0025\u0073",_gbfc );_beag .Log .Trace ("\u0025\u0073",_gbfc .PdfObject );_fcgbg ,_fgdfb :=_fe .GetDict (_gbfc .PdfObject );if !_fgdfb {return _cg .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_agfgg ,_fgdfb :=_fe .GetName (_fcgbg .Get ("\u0054\u0079\u0070\u0065"));if !_fgdfb {return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_fcgbg .Get ("\u0054\u0079\u0070\u0065"));
};if _agfgg .String ()!="\u0050\u0061\u0067\u0065"{return _cg .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_aefgg :=[]_fe .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gfdaa ,_gefag :=_fe .GetIndirect (_fcgbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_beag .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_fcgbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gefag );
for _gefag {_beag .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gfdaa );_fgffb ,_cfcee :=_fe .GetDict (_gfdaa .PdfObject );if !_cfcee {return _cg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cefc :=range _aefgg {_beag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cefc );if _fcgbg .Get (_cefc )!=nil {_beag .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _acbgb :=_fgffb .Get (_cefc );_acbgb !=nil {_beag .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cefc );_fcgbg .Set (_cefc ,_acbgb );};};_gfdaa ,_gefag =_fe .GetIndirect (_fgffb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_beag .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fgffb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_beag .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_fcgbg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbbba ._dgdfc );_gbfc .PdfObject =_fcgbg ;_febadg ,_fgdfb :=_fe .GetDict (_fbbba ._dgdfc .PdfObject );if !_fgdfb {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dgbcf ,_fgdfb :=_fe .GetArray (_febadg .Get ("\u004b\u0069\u0064\u0073"));if !_fgdfb {return _cg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dgbcf .Append (_gbfc );_fbbba ._fbgee [_fcgbg ]=struct{}{};_ecffcc ,_fgdfb :=_fe .GetInt (_febadg .Get ("\u0043\u006f\u0075n\u0074"));if !_fgdfb {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ecffcc =*_ecffcc +1;if page ._bcfb ==nil {_dfdge :=_cbb .Track (_fbbba ._dcda ,_ffecc );if _dfdge !=nil {return _dfdge ;};}else {_fdaed :=_cbb .Track (page ._bcfb ._gcfc ,_ffecc );if _fdaed !=nil {return _fdaed ;};};_fbbba .addObject (_gbfc );_ecadc :=_fbbba .addObjects (_fcgbg );
if _ecadc !=nil {return _ecadc ;};return nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_edfe *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _ceaca []*PdfOutlineTreeNode ;var _aegc []string ;var _eagff func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_eagff =func (_bgcggb *PdfOutlineTreeNode ,_adcff *[]*PdfOutlineTreeNode ,_dbbed *[]string ,_gdda int ){if _bgcggb ==nil {return ;
};if _bgcggb ._affe ==nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_defa ,_ddde :=_bgcggb ._affe .(*PdfOutlineItem );if _ddde {*_adcff =append (*_adcff ,&_defa .PdfOutlineTreeNode );
_geddg :=_ca .Repeat ("\u0020",_gdda *2)+_defa .Title .Decoded ();*_dbbed =append (*_dbbed ,_geddg );};if _bgcggb .First !=nil {_egfgd :=_ca .Repeat ("\u0020",_gdda *2)+"\u002b";*_dbbed =append (*_dbbed ,_egfgd );_eagff (_bgcggb .First ,_adcff ,_dbbed ,_gdda +1);
};if _ddde &&_defa .Next !=nil {_eagff (_defa .Next ,_adcff ,_dbbed ,_gdda );};};_eagff (_edfe ._agaga ,&_ceaca ,&_aegc ,0);return _ceaca ,_aegc ,nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_bafg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_bafg .Mask ()|fl .Mask ())};func (_baabe *PdfWriter )setWriter (_cage _ecf .Writer ){_baabe ._bgefgf =_baabe ._eebed ;_baabe ._babfg =_c .NewWriter (_cage );};func (_edd *PdfReader )newPdfAnnotationLineFromDict (_cbgdd *_fe .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_gbed :=PdfAnnotationLine {};
_bbgd ,_aedb :=_edd .newPdfAnnotationMarkupFromDict (_cbgdd );if _aedb !=nil {return nil ,_aedb ;};_gbed .PdfAnnotationMarkup =_bbgd ;_gbed .L =_cbgdd .Get ("\u004c");_gbed .BS =_cbgdd .Get ("\u0042\u0053");_gbed .LE =_cbgdd .Get ("\u004c\u0045");_gbed .IC =_cbgdd .Get ("\u0049\u0043");
_gbed .LL =_cbgdd .Get ("\u004c\u004c");_gbed .LLE =_cbgdd .Get ("\u004c\u004c\u0045");_gbed .Cap =_cbgdd .Get ("\u0043\u0061\u0070");_gbed .IT =_cbgdd .Get ("\u0049\u0054");_gbed .LLO =_cbgdd .Get ("\u004c\u004c\u004f");_gbed .CP =_cbgdd .Get ("\u0043\u0050");
_gbed .Measure =_cbgdd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_gbed .CO =_cbgdd .Get ("\u0043\u004f");return &_gbed ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbeba *PdfAnnotation3D )ToPdfObject ()_fe .PdfObject {_cbeba .PdfAnnotation .ToPdfObject ();_bbbe :=_cbeba ._egb ;_debf :=_bbbe .PdfObject .(*_fe .PdfObjectDictionary );_debf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0033\u0044"));
_debf .SetIfNotNil ("\u0033\u0044\u0044",_cbeba .T3DD );_debf .SetIfNotNil ("\u0033\u0044\u0056",_cbeba .T3DV );_debf .SetIfNotNil ("\u0033\u0044\u0041",_cbeba .T3DA );_debf .SetIfNotNil ("\u0033\u0044\u0049",_cbeba .T3DI );_debf .SetIfNotNil ("\u0033\u0044\u0042",_cbeba .T3DB );
return _bbbe ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cfbc *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_beag .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_beag .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_beag .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_beag .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bbfg ,_ggde :=_gege .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fdcdb ,img ._abeag );if _ggde !=nil {return Image {},_ggde ;};_edea ,_ggde :=_gege .NRGBAConverter .Convert (_bbfg );
if _ggde !=nil {return Image {},_ggde ;};return _bfcga (_edea .Base ()),nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ecgdd []byte ;_eabde []uint32 ;_gbfa *_fe .PdfObjectStream ;};

// Write writes out the PDF.
func (_cgee *PdfWriter )Write (writer _ecf .Writer )error {_beag .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_becfe :=_cgee .checkLicense ();if _becfe !=nil {return _becfe ;};if _becfe =_cgee .writeOutlines ();_becfe !=nil {return _becfe ;};if _becfe =_cgee .writeAcroFormFields ();
_becfe !=nil {return _becfe ;};_cgee .checkPendingObjects ();if _becfe =_cgee .writeOutputIntents ();_becfe !=nil {return _becfe ;};_cgee .setCatalogVersion ();_cgee .copyObjects ();if _becfe =_cgee .optimize ();_becfe !=nil {return _becfe ;};if _becfe =_cgee .optimizeDocument ();
_becfe !=nil {return _becfe ;};var _fgacdd _be .Hash ;if _cgee ._babfe {_fgacdd =_ef .New ();writer =_ecf .MultiWriter (_fgacdd ,writer );};_cgee .setWriter (writer );_cebcc :=_cgee .checkCrossReferenceStream ();_bdbgg ,_cebcc :=_cgee .mapObjectStreams (_cebcc );
_cgee .adjustXRefAffectedVersion (_cebcc );_cgee .writeDocumentVersion ();_cgee .updateObjectNumbers ();_cgee .writeObjects ();if _becfe =_cgee .writeObjectsInStreams (_bdbgg );_becfe !=nil {return _becfe ;};_bgcbbf :=_cgee ._bgefgf ;var _ddgfd int ;for _fegea :=range _cgee ._cabdb {if _fegea > _ddgfd {_ddgfd =_fegea ;
};};if _cgee ._babfe {if _becfe =_cgee .setHashIDs (_fgacdd );_becfe !=nil {return _becfe ;};};if _cebcc {if _becfe =_cgee .writeXRefStreams (_ddgfd ,_bgcbbf );_becfe !=nil {return _becfe ;};}else {_cgee .writeTrailer (_ddgfd );};_cgee .makeOffSetReference (_bgcbbf );
if _becfe =_cgee .flushWriter ();_becfe !=nil {return _becfe ;};return nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bege *PdfShading )GetContainingPdfObject ()_fe .PdfObject {return _bege ._ebfb };

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_cbfgb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cbfgb .AlternateSpace ==nil {return nil ,_cg .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _cbfgb .AlternateSpace .ColorToRGB (color );};func _abaf (_feagb *_fe .PdfObjectDictionary )(*PdfShadingType6 ,error ){_caebg :=PdfShadingType6 {};_aaabb :=_feagb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _aaabb ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cdcg ,_ggae :=_aaabb .(*_fe .PdfObjectInteger );if !_ggae {_beag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaabb );
return nil ,_fe .ErrTypeError ;};_caebg .BitsPerCoordinate =_cdcg ;_aaabb =_feagb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aaabb ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cdcg ,_ggae =_aaabb .(*_fe .PdfObjectInteger );if !_ggae {_beag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aaabb );
return nil ,_fe .ErrTypeError ;};_caebg .BitsPerComponent =_cdcg ;_aaabb =_feagb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aaabb ==nil {_beag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cdcg ,_ggae =_aaabb .(*_fe .PdfObjectInteger );if !_ggae {_beag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aaabb );
return nil ,_fe .ErrTypeError ;};_caebg .BitsPerComponent =_cdcg ;_aaabb =_feagb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aaabb ==nil {_beag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fcgb ,_ggae :=_aaabb .(*_fe .PdfObjectArray );if !_ggae {_beag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aaabb );
return nil ,_fe .ErrTypeError ;};_caebg .Decode =_fcgb ;if _daadg :=_feagb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_daadg !=nil {_caebg .Function =[]PdfFunction {};if _bfgeb ,_bddcce :=_daadg .(*_fe .PdfObjectArray );_bddcce {for _ ,_ffbfg :=range _bfgeb .Elements (){_ggcdb ,_ccfcc :=_aacg (_ffbfg );
if _ccfcc !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccfcc );return nil ,_ccfcc ;};_caebg .Function =append (_caebg .Function ,_ggcdb );
};}else {_cebgcd ,_dgcca :=_aacg (_daadg );if _dgcca !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgcca );return nil ,_dgcca ;
};_caebg .Function =append (_caebg .Function ,_cebgcd );};};return &_caebg ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_ecba *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cg .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_aecc ,_bfgb :=_gege .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fdcdb ,img ._abeag );if _bfgb !=nil {return img ,_bfgb ;};_gcaec ,_bfgb :=_gege .NRGBAConverter .Convert (_aecc );
if _bfgb !=nil {return img ,_bfgb ;};_fbcbda :=_bfcga (_gcaec .Base ());_beag .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_beag .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_beag .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fbcbda .Data );_beag .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fbcbda );return _fbcbda ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_agfg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cg .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dacb :=field .V ;if _dacb ==nil {return _cg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bbaf :=pageNum -1;
if _bbaf < 0||_bbaf > len (_agfg ._ffbc )-1{return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_efg :=_agfg .Reader .PageList [_bbaf ];field .P =_efg .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fe .MakeString (_a .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_efg .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _agfg ._bdge ==_agfg ._agfb .AcroForm {_agfg ._bdge =_agfg .Reader .AcroForm ;};_dbe :=_agfg ._bdge ;if _dbe ==nil {_dbe =NewPdfAcroForm ();};_dbe .SigFlags =_fe .MakeInteger (3);_dgea :=append (_dbe .AllFields (),field .PdfField );
_dbe .Fields =&_dgea ;_agfg .ReplaceAcroForm (_dbe );_agfg .UpdatePage (_efg );_agfg ._ffbc [_bbaf ]=_efg ;return nil ;};func (_aede *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _aede ._eaaeg };

// AddCustomInfo adds a custom info into document info dictionary.
func (_addc *PdfInfo )AddCustomInfo (name string ,value string )error {if _addc ._fefc ==nil {_addc ._fefc =_fe .MakeDict ();};if _ ,_ecaa :=_cfce [name ];_ecaa {return _a .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_addc ._fefc .SetIfNotNil (*_fe .MakeName (name ),_fe .MakeString (value ));return nil ;};func (_deca *PdfReader )newPdfFieldSignatureFromDict (_fdbdc *_fe .PdfObjectDictionary )(*PdfFieldSignature ,error ){_ccea :=&PdfFieldSignature {};_cebde ,_gcfa :=_fe .GetIndirect (_fdbdc .Get ("\u0056"));
if _gcfa {var _gfdae error ;_ccea .V ,_gfdae =_deca .newPdfSignatureFromIndirect (_cebde );if _gfdae !=nil {return nil ,_gfdae ;};};_ccea .Lock ,_ =_fe .GetIndirect (_fdbdc .Get ("\u004c\u006f\u0063\u006b"));_ccea .SV ,_ =_fe .GetIndirect (_fdbdc .Get ("\u0053\u0056"));
return _ccea ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_aefg *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_gcdg :=_aefg .fill (provider ,appGen );if _gcdg !=nil {return _gcdg ;};if _ ,_cdff :=provider .(FieldImageProvider );_cdff {_gcdg =_aefg .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _gcdg ;};func (_eff *PdfAnnotation )String ()string {_ecda :="";_aabd ,_ecbg :=_eff .ToPdfObject ().(*_fe .PdfIndirectObject );if _ecbg {_ecda =_a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eff ._acg ,_aabd .PdfObject .String ());};return _ecda ;
};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_fcbc *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _fdgg (_fcaf _fe .PdfObject )(*PdfFunctionType2 ,error ){_bfde :=&PdfFunctionType2 {};var _agacg *_fe .PdfObjectDictionary ;if _fbfca ,_cdebb :=_fcaf .(*_fe .PdfIndirectObject );
_cdebb {_gfed ,_ebee :=_fbfca .PdfObject .(*_fe .PdfObjectDictionary );if !_ebee {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfde ._agfd =_fbfca ;_agacg =_gfed ;}else if _bcbcg ,_afcd :=_fcaf .(*_fe .PdfObjectDictionary );
_afcd {_agacg =_bcbcg ;}else {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_beag .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_agacg .String ());_geed ,_adagbg :=_fe .TraceToDirectObject (_agacg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );
if !_adagbg {_beag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _geed .Len ()< 0||_geed .Len ()%2!=0{_beag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ceaec ,_ggfb :=_geed .ToFloat64Array ();if _ggfb !=nil {return nil ,_ggfb ;};_bfde .Domain =_ceaec ;_geed ,_adagbg =_fe .TraceToDirectObject (_agacg .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );if _adagbg {if _geed .Len ()< 0||_geed .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_daaec ,_eeccf :=_geed .ToFloat64Array ();if _eeccf !=nil {return nil ,_eeccf ;};_bfde .Range =_daaec ;};_geed ,_adagbg =_fe .TraceToDirectObject (_agacg .Get ("\u0043\u0030")).(*_fe .PdfObjectArray );if _adagbg {_gdeae ,_fdea :=_geed .ToFloat64Array ();
if _fdea !=nil {return nil ,_fdea ;};_bfde .C0 =_gdeae ;};_geed ,_adagbg =_fe .TraceToDirectObject (_agacg .Get ("\u0043\u0031")).(*_fe .PdfObjectArray );if _adagbg {_aaegc ,_cecbe :=_geed .ToFloat64Array ();if _cecbe !=nil {return nil ,_cecbe ;};_bfde .C1 =_aaegc ;
};if len (_bfde .C0 )!=len (_bfde .C1 ){_beag .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_fe .ErrRangeError ;};N ,_ggfb :=_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_agacg .Get ("\u004e")));
if _ggfb !=nil {_beag .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_agacg .String ());return nil ,_ggfb ;};_bfde .N =N ;
return _bfde ,nil ;};

// K returns the value of the key component of the color.
func (_dbcfb *PdfColorDeviceCMYK )K ()float64 {return _dbcfb [3]};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_gbea *CompliancePdfReader )error ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_gfbc *Outline )ToPdfObject ()_fe .PdfObject {return _gfbc .ToPdfOutline ().ToPdfObject ()};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_gdee *PdfFont )CharcodesToUnicodeWithStats (charcodes []_aee .CharCode )(_abfa []rune ,_ddaa ,_fddc int ){_ddbb ,_ddaa ,_fddc :=_gdee .CharcodesToStrings (charcodes );return []rune (_ca .Join (_ddbb ,"")),_ddaa ,_fddc ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fe .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_dedag int64 ;_ffcef int64 ;_ecega int64 ;_dffba int64 ;_ddcdgg int64 ;_edbgd int64 ;_eggcc byte ;_fabgc int64 ;_ebcbe int64 ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fdeac DefaultImageHandler )NewGrayImageFromGoImage (goimg _bgf .Image )(*Image ,error ){_feeag :=goimg .Bounds ();_gcgf :=&Image {Width :int64 (_feeag .Dx ()),Height :int64 (_feeag .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _dfgfd :=goimg .(type ){case *_bgf .Gray :if len (_dfgfd .Pix )!=_feeag .Dx ()*_feeag .Dy (){_fgcg ,_dfec :=_gege .GrayConverter .Convert (goimg );
if _dfec !=nil {return nil ,_dfec ;};_gcgf .Data =_fgcg .Pix ();}else {_gcgf .Data =_dfgfd .Pix ;};case *_bgf .Gray16 :_gcgf .BitsPerComponent =16;if len (_dfgfd .Pix )!=_feeag .Dx ()*_feeag .Dy ()*2{_fccgg ,_aebea :=_gege .Gray16Converter .Convert (goimg );
if _aebea !=nil {return nil ,_aebea ;};_gcgf .Data =_fccgg .Pix ();}else {_gcgf .Data =_dfgfd .Pix ;};case _gege .Image :_eccfb :=_dfgfd .Base ();if _eccfb .ColorComponents ==1{_gcgf .BitsPerComponent =int64 (_eccfb .BitsPerComponent );_gcgf .Data =_eccfb .Data ;
return _gcgf ,nil ;};_cbdd ,_ggbb :=_gege .GrayConverter .Convert (goimg );if _ggbb !=nil {return nil ,_ggbb ;};_gcgf .Data =_cbdd .Pix ();default:_eeafdb ,_ecdef :=_gege .GrayConverter .Convert (goimg );if _ecdef !=nil {return nil ,_ecdef ;};_gcgf .Data =_eeafdb .Pix ();
};return _gcgf ,nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_dbga *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddae ,_aeggb :=color .(*PdfColorCalGray );if !_aeggb {_beag .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ddae .Val ();X :=_dbga .WhitePoint [0]*_fa .Pow (ANorm ,_dbga .Gamma );Y :=_dbga .WhitePoint [1]*_fa .Pow (ANorm ,_dbga .Gamma );
Z :=_dbga .WhitePoint [2]*_fa .Pow (ANorm ,_dbga .Gamma );_cfbdb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ffgcec :=-0.969256*X +1.875992*Y +0.041556*Z ;_deab :=0.055648*X +-0.204043*Y +1.057311*Z ;_cfbdb =_fa .Min (_fa .Max (_cfbdb ,0),1.0);_ffgcec =_fa .Min (_fa .Max (_ffgcec ,0),1.0);
_deab =_fa .Min (_fa .Max (_deab ,0),1.0);return NewPdfColorDeviceRGB (_cfbdb ,_ffgcec ,_deab ),nil ;};func _aadf (_ddgc *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_ddgc }};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dbcee pdfFontType3 )GetCharMetrics (code _aee .CharCode )(_fg .CharMetrics ,bool ){if _begg ,_dfggd :=_dbcee ._efac [code ];_dfggd {return _fg .CharMetrics {Wx :_begg },true ;};if _fg .IsStdFont (_fg .StdFontName (_dbcee ._agee )){return _fg .CharMetrics {Wx :250},true ;
};return _fg .CharMetrics {},false ;};var _ _fe .PdfObject =&pdfSignDictionary {};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gdfe :=&PdfAppender {_dec :reader ._cbace ,Reader :reader ,_dabd :reader ._fbega ,_fcbf :reader ._afabg };_gaad ,_gefg :=_gdfe ._dec .Seek (0,_ecf .SeekEnd );if _gefg !=nil {return nil ,_gefg ;
};_gdfe ._dgcb =_gaad ;if _ ,_gefg =_gdfe ._dec .Seek (0,_ecf .SeekStart );_gefg !=nil {return nil ,_gefg ;};_gdfe ._agfb ,_gefg =NewPdfReader (_gdfe ._dec );if _gefg !=nil {return nil ,_gefg ;};for _ ,_bcde :=range _gdfe .Reader .GetObjectNums (){if _gdfe ._afga < _bcde {_gdfe ._afga =_bcde ;
};};_gdfe ._beebe =_gdfe ._dabd .GetXrefTable ();_gdfe ._dedg =_gdfe ._dabd .GetXrefOffset ();_gdfe ._ffbc =append (_gdfe ._ffbc ,_gdfe ._agfb .PageList ...);_gdfe ._bfga =make (map[_fe .PdfObject ]struct{});_gdfe ._fced =make (map[_fe .PdfObject ]int64 );
_gdfe ._gaaa =make (map[_fe .PdfObject ]struct{});_gdfe ._bdge =_gdfe ._agfb .AcroForm ;_gdfe ._eaeg =_gdfe ._agfb .DSS ;return _gdfe ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_decb *PdfColorLab )GetNumComponents ()int {return 3};func _cdae (_bfcg *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bfcg }};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fe .PdfObject ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_aeaab :=NewPdfOutline ();_aeaab ._affe =&_aeaab ;return _aeaab ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_baccbd *Image )ToJBIG2Image ()(*_fe .JBIG2Image ,error ){_feaaeg ,_bbag :=_baccbd .ToGoImage ();if _bbag !=nil {return nil ,_bbag ;};return _fe .GoImageToJBIG2 (_feaaeg ,_fe .JB2ImageAutoThreshold );};func (_eeafe *PdfReader )newPdfSignatureFromIndirect (_adbd *_fe .PdfIndirectObject )(*PdfSignature ,error ){_cdgeb ,_cgddb :=_adbd .PdfObject .(*_fe .PdfObjectDictionary );
if !_cgddb {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gbdag ,_dffaa :=_eeafe ._befdc .GetModelFromPrimitive (_adbd ).(*PdfSignature );_dffaa {return _gbdag ,nil ;};_ddfg :=&PdfSignature {};_ddfg ._fafad =_adbd ;_ddfg .Type ,_ =_fe .GetName (_cdgeb .Get ("\u0054\u0079\u0070\u0065"));
_ddfg .Filter ,_cgddb =_fe .GetName (_cdgeb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cgddb {_beag .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ddfg .SubFilter ,_ =_fe .GetName (_cdgeb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ddfg .Contents ,_cgddb =_fe .GetString (_cdgeb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cgddb {_beag .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ddfg .Cert =_cdgeb .Get ("\u0043\u0065\u0072\u0074");_ddfg .ByteRange ,_ =_fe .GetArray (_cdgeb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_ddfg .Reference ,_ =_fe .GetArray (_cdgeb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_ddfg .Changes ,_ =_fe .GetArray (_cdgeb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ddfg .Name ,_ =_fe .GetString (_cdgeb .Get ("\u004e\u0061\u006d\u0065"));_ddfg .M ,_ =_fe .GetString (_cdgeb .Get ("\u004d"));_ddfg .Location ,_ =_fe .GetString (_cdgeb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_ddfg .Reason ,_ =_fe .GetString (_cdgeb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ddfg .ContactInfo ,_ =_fe .GetString (_cdgeb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ddfg .R ,_ =_fe .GetInt (_cdgeb .Get ("\u0052"));
_ddfg .V ,_ =_fe .GetInt (_cdgeb .Get ("\u0056"));_ddfg .PropBuild ,_ =_fe .GetDict (_cdgeb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ddfg .PropAuthTime ,_ =_fe .GetInt (_cdgeb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_ddfg .PropAuthType ,_ =_fe .GetName (_cdgeb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _ddfg ,nil ;};func _cdbf (_febf *_fe .PdfIndirectObject )(*PdfOutline ,error ){_agcg ,_fbddg :=_febf .PdfObject .(*_fe .PdfObjectDictionary );
if !_fbddg {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gcbe :=NewPdfOutline ();if _cbdg :=_agcg .Get ("\u0054\u0079\u0070\u0065");
_cbdg !=nil {_gebgf ,_gdagd :=_cbdg .(*_fe .PdfObjectName );if _gdagd {if *_gebgf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gebgf );
};};};if _acbeb :=_agcg .Get ("\u0043\u006f\u0075n\u0074");_acbeb !=nil {_ggeca ,_bagbc :=_fe .GetNumberAsInt64 (_acbeb );if _bagbc !=nil {return nil ,_bagbc ;};_gcbe .Count =&_ggeca ;};return _gcbe ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fe .StreamEncoder ;FormType _fe .PdfObject ;BBox _fe .PdfObject ;Matrix _fe .PdfObject ;Resources *PdfPageResources ;Group _fe .PdfObject ;Ref _fe .PdfObject ;MetaData _fe .PdfObject ;PieceInfo _fe .PdfObject ;LastModified _fe .PdfObject ;
StructParent _fe .PdfObject ;StructParents _fe .PdfObject ;OPI _fe .PdfObject ;OC _fe .PdfObject ;Name _fe .PdfObject ;

// Stream data.
Stream []byte ;_edaef *_fe .PdfObjectStream ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_caed *_fe .PdfObjectDictionary ;_dbbe *_fe .PdfIndirectObject ;};

// AddOutlineTree adds outlines to a PDF file.
func (_ecbca *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_ecbca ._ddegc =outlineTree };

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_afgf :_fe .MakeDict (),ColorComponents :colorComponents };
};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fe .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_ggdg *PdfAnnotationUnderline )ToPdfObject ()_fe .PdfObject {_ggdg .PdfAnnotation .ToPdfObject ();_ged :=_ggdg ._egb ;_cbade :=_ged .PdfObject .(*_fe .PdfObjectDictionary );_ggdg .PdfAnnotationMarkup .appendToPdfDictionary (_cbade );_cbade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_cbade .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ggdg .QuadPoints );return _ged ;};

// SetFillImage attach a model.Image to push button.
func (_cgde *PdfFieldButton )SetFillImage (image *Image ){if _cgde .IsPush (){_cgde ._febba =image ;};};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ebf .PSProgram ;_gbaf *_ebf .PSExecutor ;_efddb []byte ;_dbffec *_fe .PdfObjectStream ;};func _bdccd ()string {_aagdg .Lock ();defer _aagdg .Unlock ();return _fgccgg };func (_ebgd *PdfFunctionType0 )processSamples ()error {_bcedc :=_fad .ResampleBytes (_ebgd ._ecgdd ,_ebgd .BitsPerSample );
_ebgd ._eabde =_bcedc ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fgae *PdfAnnotationLine )ToPdfObject ()_fe .PdfObject {_fgae .PdfAnnotation .ToPdfObject ();_ecgbb :=_fgae ._egb ;_afa :=_ecgbb .PdfObject .(*_fe .PdfObjectDictionary );_fgae .PdfAnnotationMarkup .appendToPdfDictionary (_afa );_afa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u004c\u0069\u006e\u0065"));
_afa .SetIfNotNil ("\u004c",_fgae .L );_afa .SetIfNotNil ("\u0042\u0053",_fgae .BS );_afa .SetIfNotNil ("\u004c\u0045",_fgae .LE );_afa .SetIfNotNil ("\u0049\u0043",_fgae .IC );_afa .SetIfNotNil ("\u004c\u004c",_fgae .LL );_afa .SetIfNotNil ("\u004c\u004c\u0045",_fgae .LLE );
_afa .SetIfNotNil ("\u0043\u0061\u0070",_fgae .Cap );_afa .SetIfNotNil ("\u0049\u0054",_fgae .IT );_afa .SetIfNotNil ("\u004c\u004c\u004f",_fgae .LLO );_afa .SetIfNotNil ("\u0043\u0050",_fgae .CP );_afa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fgae .Measure );
_afa .SetIfNotNil ("\u0043\u004f",_fgae .CO );return _ecgbb ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fe .PdfObject ;ColorSpace _fe .PdfObject ;Pattern _fe .PdfObject ;Shading _fe .PdfObject ;XObject _fe .PdfObject ;Font _fe .PdfObject ;ProcSet _fe .PdfObject ;Properties _fe .PdfObject ;_dafc *_fe .PdfObjectDictionary ;
_ebdcb *PdfPageResourcesColorspaces ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_agfd *_fe .PdfIndirectObject ;};func (_ffdabd *PdfReader )lookupPageByObject (_efaee _fe .PdfObject )(*PdfPage ,error ){return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_bdfcf *PdfPage )GetContentStreamObjs ()[]_fe .PdfObject {if _bdfcf .Contents ==nil {return nil ;};_gadaf :=_fe .TraceToDirectObject (_bdfcf .Contents );if _bbagg ,_bebad :=_gadaf .(*_fe .PdfObjectArray );_bebad {return _bbagg .Elements ();};return []_fe .PdfObject {_gadaf };
};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_aacgd *PdfPage )GetAllContentStreams ()(string ,error ){_efcab ,_fdfdg :=_aacgd .GetContentStreams ();if _fdfdg !=nil {return "",_fdfdg ;};return _ca .Join (_efcab ,"\u0020"),nil ;};func (_bdfcfd *PdfWriter )addObjects (_bded _fe .PdfObject )error {_beag .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _bbgaaa ,_egbga :=_bded .(*_fe .PdfIndirectObject );_egbga {_beag .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_beag .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_bded ,_bbgaaa );_beag .Log .Trace ("\u002d\u0020\u0025\u0073",_bbgaaa .PdfObject );
if _bdfcfd .addObject (_bbgaaa ){_dfbg :=_bdfcfd .addObjects (_bbgaaa .PdfObject );if _dfbg !=nil {return _dfbg ;};};return nil ;};if _fcgce ,_gecfg :=_bded .(*_fe .PdfObjectStream );_gecfg {_beag .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_beag .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_bded ,_bded );
if _bdfcfd .addObject (_fcgce ){_adfff :=_bdfcfd .addObjects (_fcgce .PdfObjectDictionary );if _adfff !=nil {return _adfff ;};};return nil ;};if _gfcaf ,_cdcdc :=_bded .(*_fe .PdfObjectDictionary );_cdcdc {_beag .Log .Trace ("\u0044\u0069\u0063\u0074");
_beag .Log .Trace ("\u002d\u0020\u0025\u0073",_bded );for _ ,_cbdcg :=range _gfcaf .Keys (){_bfedc :=_gfcaf .Get (_cbdcg );if _geebf ,_feefc :=_bfedc .(*_fe .PdfObjectReference );_feefc {_bfedc =_geebf .Resolve ();_gfcaf .Set (_cbdcg ,_bfedc );};if _cbdcg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ecagad :=_bdfcfd .addObjects (_bfedc );
_ecagad !=nil {return _ecagad ;};}else {if _ ,_bbeff :=_bfedc .(*_fe .PdfObjectNull );_bbeff {continue ;};if _cgdf :=_bdfcfd .hasObject (_bfedc );!_cgdf {_beag .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bfedc ,_bfedc ,_bfedc );
_bdfcfd ._acbab [_bfedc ]=append (_bdfcfd ._acbab [_bfedc ],_gfcaf );};};};return nil ;};if _bfdee ,_ccfbc :=_bded .(*_fe .PdfObjectArray );_ccfbc {_beag .Log .Trace ("\u0041\u0072\u0072a\u0079");_beag .Log .Trace ("\u002d\u0020\u0025\u0073",_bded );if _bfdee ==nil {return _cg .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fgdd ,_aabf :=range _bfdee .Elements (){if _cdaadb ,_babbb :=_aabf .(*_fe .PdfObjectReference );_babbb {_aabf =_cdaadb .Resolve ();_bfdee .Set (_fgdd ,_aabf );};if _cfebd :=_bdfcfd .addObjects (_aabf );_cfebd !=nil {return _cfebd ;};};return nil ;
};if _ ,_gfce :=_bded .(*_fe .PdfObjectReference );_gfce {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_bded );
return _cg .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// PartialName returns the partial name of the field.
func (_ffdg *PdfField )PartialName ()string {_abaa :="";if _ffdg .T !=nil {_abaa =_ffdg .T .Decoded ();}else {_beag .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _abaa ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_gecb *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_eddbbc :=_gecb .GetContentStreamObjs ();wrapContents =wrapContents &&len (_eddbbc )> 0;_ageff :=_fe .NewFlateEncoder ();_agbf :=_fe .MakeArray ();if wrapContents {_dcfgf ,_cbdgf :=_fe .MakeStream ([]byte ("\u0071\u000a"),_ageff );
if _cbdgf !=nil {return _cbdgf ;};_agbf .Append (_dcfgf );};_agbf .Append (_eddbbc ...);if wrapContents {_eegdc ,_faffd :=_fe .MakeStream ([]byte ("\u000a\u0051\u000a"),_ageff );if _faffd !=nil {return _faffd ;};_agbf .Append (_eegdc );};_eeceg ,_aaged :=_fe .MakeStream (cs ,_ageff );
if _aaged !=nil {return _aaged ;};_agbf .Append (_eeceg );_gecb .Contents =_agbf ;return nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_fdcba *PdfPage )AppendContentStream (contentStr string )error {_fccdd ,_dfdb :=_fdcba .GetContentStreams ();if _dfdb !=nil {return _dfdb ;};if len (_fccdd )==0{_fccdd =[]string {contentStr };return _fdcba .SetContentStreams (_fccdd ,_fe .NewFlateEncoder ());
};var _aada _bea .Buffer ;_aada .WriteString (_fccdd [len (_fccdd )-1]);_aada .WriteString ("\u000a");_aada .WriteString (contentStr );_fccdd [len (_fccdd )-1]=_aada .String ();return _fdcba .SetContentStreams (_fccdd ,_fe .NewFlateEncoder ());};

// ToPdfObject returns the PDF representation of the function.
func (_affd *PdfFunctionType4 )ToPdfObject ()_fe .PdfObject {_abda :=_affd ._dbffec ;if _abda ==nil {_affd ._dbffec =&_fe .PdfObjectStream {};_abda =_affd ._dbffec ;};_becfbb :=_fe .MakeDict ();_becfbb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (4));
_befed :=&_fe .PdfObjectArray {};for _ ,_cgfb :=range _affd .Domain {_befed .Append (_fe .MakeFloat (_cgfb ));};_becfbb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_befed );_efbg :=&_fe .PdfObjectArray {};for _ ,_cgage :=range _affd .Range {_efbg .Append (_fe .MakeFloat (_cgage ));
};_becfbb .Set ("\u0052\u0061\u006eg\u0065",_efbg );if _affd ._efddb ==nil &&_affd .Program !=nil {_affd ._efddb =[]byte (_affd .Program .String ());};_becfbb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_affd ._efddb ))));
_abda .Stream =_affd ._efddb ;_abda .PdfObjectDictionary =_becfbb ;return _abda ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ecf .ReadSeeker )(*CompliancePdfReader ,error ){const _gbde ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_cbbgf ,_ebcbd :=_eggbd (rs ,&ReaderOpts {ComplianceMode :true },true ,_gbde );
if _ebcbd !=nil {return nil ,_ebcbd ;};return &CompliancePdfReader {PdfReader :_cbbgf },nil ;};func (_gfdd *PdfAppender )mergeResources (_daaf ,_cedb _fe .PdfObject ,_eddb map[_fe .PdfObjectName ]_fe .PdfObjectName )_fe .PdfObject {if _cedb ==nil &&_daaf ==nil {return nil ;
};if _cedb ==nil {return _daaf ;};_fbec ,_bddd :=_fe .GetDict (_cedb );if !_bddd {return _daaf ;};if _daaf ==nil {_efeb :=_fe .MakeDict ();_efeb .Merge (_fbec );return _cedb ;};_cbea ,_bddd :=_fe .GetDict (_daaf );if !_bddd {_beag .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_cbea =_fe .MakeDict ();};for _ ,_baab :=range _fbec .Keys (){if _bdde ,_bfdg :=_eddb [_baab ];_bfdg {_cbea .Set (_bdde ,_fbec .Get (_baab ));}else {_cbea .Set (_baab ,_fbec .Get (_baab ));};};return _cbea ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_dbcd *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_egab :=func (_adefd float64 )float64 {if _adefd >=6.0/29{return _adefd *_adefd *_adefd ;};return 108.0/841*(_adefd -4/29);};_gecge :=img ._abeag ;if len (_gecge )!=6{_beag .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_gecge =_dbcd .DecodeArray ();};_bfffd :=_fad .NewReader (img .getBase ());_bggd :=_gege .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._fdcdb ,img ._abeag );_fagec :=_fad .NewWriter (_bggd );_eeffe :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;
_gbae :=make ([]uint32 ,3);var (_cef error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_debe ,_bacfd ,_fagg float64 ;);for {_cef =_bfffd .ReadSamples (_gbae );if _cef ==_ecf .EOF {break ;}else if _cef !=nil {return img ,_cef ;};Ls =float64 (_gbae [0])/_eeffe ;As =float64 (_gbae [1])/_eeffe ;
Bs =float64 (_gbae [2])/_eeffe ;Ls =_gege .LinearInterpolate (Ls ,0.0,1.0,_gecge [0],_gecge [1]);As =_gege .LinearInterpolate (As ,0.0,1.0,_gecge [2],_gecge [3]);Bs =_gege .LinearInterpolate (Bs ,0.0,1.0,_gecge [4],_gecge [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_dbcd .WhitePoint [0]*_egab (L );Y =_dbcd .WhitePoint [1]*_egab (M );Z =_dbcd .WhitePoint [2]*_egab (N );_debe =3.240479*X +-1.537150*Y +-0.498535*Z ;_bacfd =-0.969256*X +1.875992*Y +0.041556*Z ;_fagg =0.055648*X +-0.204043*Y +1.057311*Z ;
_debe =_fa .Min (_fa .Max (_debe ,0),1.0);_bacfd =_fa .Min (_fa .Max (_bacfd ,0),1.0);_fagg =_fa .Min (_fa .Max (_fagg ,0),1.0);_gbae [0]=uint32 (_debe *_eeffe );_gbae [1]=uint32 (_bacfd *_eeffe );_gbae [2]=uint32 (_fagg *_eeffe );if _cef =_fagec .WriteSamples (_gbae );
_cef !=nil {return img ,_cef ;};};return _bfcga (&_bggd ),nil ;};func (_ffga *PdfReader )traverseObjectData (_bbgdd _fe .PdfObject )error {return _fe .ResolveReferencesDeep (_bbgdd ,_ffga ._afabg );};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_baee :=&PdfColorspaceCalRGB {};_baee .BlackPoint =[]float64 {0.0,0.0,0.0};_baee .Gamma =[]float64 {1.0,1.0,1.0};_baee .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _baee ;};

// IsShading specifies if the pattern is a shading pattern.
func (_fgeg *PdfPattern )IsShading ()bool {return _fgeg .PatternType ==2};func (_cgfa *PdfPattern )getDict ()*_fe .PdfObjectDictionary {if _ccge ,_gacec :=_cgfa ._deebb .(*_fe .PdfIndirectObject );_gacec {_begdc ,_dbbc :=_ccge .PdfObject .(*_fe .PdfObjectDictionary );
if !_dbbc {return nil ;};return _begdc ;}else if _aebae ,_dfebc :=_cgfa ._deebb .(*_fe .PdfObjectStream );_dfebc {return _aebae .PdfObjectDictionary ;}else {_beag .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_cgfa ._deebb );
return nil ;};};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_gdab *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cg .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_efad ,_adc :=_gege .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fdcdb ,img ._abeag );if _adc !=nil {return img ,_adc ;};_afba ,_adc :=_gege .GrayConverter .Convert (_efad );if _adc !=nil {return img ,_adc ;
};return _bfcga (_afba .Base ()),nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_bfdga _ecf .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_deead _bgf .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_gaeeg _bgf .Image )(*Image ,error );

// Compress an image.
Compress (_efbfd *Image ,_cbga int64 )(*Image ,error );};func _fgcb (_gebb *PdfField ,_fgbbe _fe .PdfObject ){for _ ,_efdee :=range _gebb .Annotations {_efdee .AS =_fgbbe ;_efdee .ToPdfObject ();};};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_aaeb :=&PdfBorderStyle {};return _aaeb };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dcgf *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeaf :=vals [0];if _eeaf < 0.0||_eeaf > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ebaeb :=vals [1];if _ebaeb < 0.0||_ebaeb > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcf :=vals [2];if _gcf < 0.0||_gcf > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_begd :=vals [3];if _begd < 0.0||_begd > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acedf :=NewPdfColorDeviceCMYK (_eeaf ,_ebaeb ,_gcf ,_begd );return _acedf ,nil ;};func (_ebaebe *pdfFontSimple )baseFields ()*fontCommon {return &_ebaebe .fontCommon };


// Y returns the value of the yellow component of the color.
func (_cgbg *PdfColorDeviceCMYK )Y ()float64 {return _cgbg [2]};func (_fdba *PdfReader )newPdfAnnotationStampFromDict (_fgdbe *_fe .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_bacc :=PdfAnnotationStamp {};_afcb ,_bcf :=_fdba .newPdfAnnotationMarkupFromDict (_fgdbe );
if _bcf !=nil {return nil ,_bcf ;};_bacc .PdfAnnotationMarkup =_afcb ;_bacc .Name =_fgdbe .Get ("\u004e\u0061\u006d\u0065");return &_bacc ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gagc *PdfAnnotationWidget )Field ()*PdfField {return _gagc ._fgdb };

// ToPdfObject returns the PDF representation of the colorspace.
func (_dgaee *PdfColorspaceDeviceRGB )ToPdfObject ()_fe .PdfObject {return _fe .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_beca *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=_beca .GetNumComponents (){return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_febb ,_dbcdg :=_fe .GetNumbersAsFloat (objects );
if _dbcdg !=nil {return nil ,_dbcdg ;};return _beca .ColorFromFloats (_febb );};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};func _ccbee (_gfdda _fe .PdfObject )(*PdfColorspaceLab ,error ){_gaed :=NewPdfColorspaceLab ();if _ffdd ,_fdfe :=_gfdda .(*_fe .PdfIndirectObject );_fdfe {_gaed ._daafa =_ffdd ;
};_gfdda =_fe .TraceToDirectObject (_gfdda );_dacba ,_cfc :=_gfdda .(*_fe .PdfObjectArray );if !_cfc {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dacba .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gfdda =_fe .TraceToDirectObject (_dacba .Get (0));_fecb ,_cfc :=_gfdda .(*_fe .PdfObjectName );if !_cfc {return nil ,_a .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_fecb !="\u004c\u0061\u0062"{return nil ,_a .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gfdda =_fe .TraceToDirectObject (_dacba .Get (1));_acgc ,_cfc :=_gfdda .(*_fe .PdfObjectDictionary );
if !_cfc {return nil ,_a .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gfdda =_acgc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_gfdda =_fe .TraceToDirectObject (_gfdda );_ebcf ,_cfc :=_gfdda .(*_fe .PdfObjectArray );if !_cfc {return nil ,_a .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _ebcf .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gfca ,_ebcb :=_ebcf .GetAsFloat64Slice ();if _ebcb !=nil {return nil ,_ebcb ;};_gaed .WhitePoint =_gfca ;_gfdda =_acgc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gfdda !=nil {_gfdda =_fe .TraceToDirectObject (_gfdda );
_gadae ,_cfgf :=_gfdda .(*_fe .PdfObjectArray );if !_cfgf {return nil ,_a .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gadae .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gffa ,_fgac :=_gadae .GetAsFloat64Slice ();if _fgac !=nil {return nil ,_fgac ;};_gaed .BlackPoint =_gffa ;};_gfdda =_acgc .Get ("\u0052\u0061\u006eg\u0065");if _gfdda !=nil {_gfdda =_fe .TraceToDirectObject (_gfdda );_agef ,_dgg :=_gfdda .(*_fe .PdfObjectArray );
if !_dgg {_beag .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_a .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _agef .Len ()!=4{_beag .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cggabf ,_dedb :=_agef .GetAsFloat64Slice ();if _dedb !=nil {return nil ,_dedb ;};_gaed .Range =_cggabf ;};return _gaed ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dafff *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_aagdg .Lock ();defer _aagdg .Unlock ();_cfcf =subject };

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ccdga *PdfPage )AddContentStreamByString (contentStr string )error {_cfdcg ,_geebdb :=_fe .MakeStream ([]byte (contentStr ),_fe .NewFlateEncoder ());if _geebdb !=nil {return _geebdb ;};if _ccdga .Contents ==nil {_ccdga .Contents =_cfdcg ;}else {_eegcc :=_fe .TraceToDirectObject (_ccdga .Contents );
_bgcgg ,_aadb :=_eegcc .(*_fe .PdfObjectArray );if !_aadb {_bgcgg =_fe .MakeArray (_eegcc );};_bgcgg .Append (_cfdcg );_ccdga .Contents =_bgcgg ;};return nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gfbag *modelManager )GetPrimitiveFromModel (model PdfModel )_fe .PdfObject {_deddg ,_fefaf :=_gfbag ._afecf [model ];if !_fefaf {return nil ;};return _deddg ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_daacb :=appender .Reader .DSS ;if _daacb ==nil {_daacb =NewDSS ();};if _bbgff :=_daacb .generateHashMaps ();_bbgff !=nil {return nil ,_bbgff ;};return &LTV {CertClient :_adb .NewCertClient (),OCSPClient :_adb .NewOCSPClient (),CRLClient :_adb .NewCRLClient (),SkipExisting :true ,_ebeg :appender ,_fabg :_daacb },nil ;
};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_acg PdfModel ;Rect _fe .PdfObject ;Contents _fe .PdfObject ;P _fe .PdfObject ;NM _fe .PdfObject ;M _fe .PdfObject ;F _fe .PdfObject ;AP _fe .PdfObject ;AS _fe .PdfObject ;Border _fe .PdfObject ;C _fe .PdfObject ;StructParent _fe .PdfObject ;
OC _fe .PdfObject ;_egb *_fe .PdfIndirectObject ;};func (_bbgf *PdfReader )newPdfAnnotationHighlightFromDict (_fbf *_fe .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fdfc :=PdfAnnotationHighlight {};_fbgd ,_cegd :=_bbgf .newPdfAnnotationMarkupFromDict (_fbf );
if _cegd !=nil {return nil ,_cegd ;};_fdfc .PdfAnnotationMarkup =_fbgd ;_fdfc .QuadPoints =_fbf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fdfc ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cagc *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cagc ._dcbbc ==nil {_cagc .GetAnnotations ();};_cagc ._dcbbc =append (_cagc ._dcbbc ,annot );};

// String returns a string representation of the field.
func (_eddga *PdfField )String ()string {if _edde ,_affcb :=_eddga .ToPdfObject ().(*_fe .PdfIndirectObject );_affcb {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eddga ._bbdf ,_edde .PdfObject .String ());};return "";};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fe .PdfObject ;NewWindow _fe .PdfObject ;T _fe .PdfObject ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_bgadg *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_dfdcb ,_eacgf :=_fe .GetDict (_bgadg ._gagg .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_eacgf {_dfdcb =_fe .MakeDict ();_bgadg ._gagg .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_dfdcb );
};_edfa ,_eacgf :=_fe .GetDict (_dfdcb .Get (_fe .PdfObjectName (extName )));if !_eacgf {_edfa =_fe .MakeDict ();_dfdcb .Set (_fe .PdfObjectName (extName ),_edfa );};if _adabb ,_ :=_fe .GetNameVal (_edfa .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_adabb !=baseVersion {_edfa .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fe .MakeName (baseVersion ));};if _gcdac ,_ :=_fe .GetIntVal (_edfa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_gcdac !=extLevel {_edfa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fe .MakeInteger (int64 (extLevel )));};};

// IsValid checks if the given pdf output intent type is valid.
func (_baae PdfOutputIntentType )IsValid ()bool {return _baae >=PdfOutputIntentTypeA1 &&_baae <=PdfOutputIntentTypeX ;};

// ToPdfObject implements interface PdfModel.
func (_gcag *PdfAnnotationPrinterMark )ToPdfObject ()_fe .PdfObject {_gcag .PdfAnnotation .ToPdfObject ();_bdbb :=_gcag ._egb ;_edbf :=_bdbb .PdfObject .(*_fe .PdfObjectDictionary );_edbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_edbf .SetIfNotNil ("\u004d\u004e",_gcag .MN );return _bdbb ;};func (_baggg *PdfReader )newPdfPageFromDict (_gedbg *_fe .PdfObjectDictionary )(*PdfPage ,error ){_egcef :=NewPdfPage ();_egcef ._dcfdb =_gedbg ;_baeae :=*_gedbg ;_dcgaa ,_efgdc :=_baeae .Get ("\u0054\u0079\u0070\u0065").(*_fe .PdfObjectName );
if !_efgdc {return nil ,_cg .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_dcgaa !="\u0050\u0061\u0067\u0065"{return nil ,_cg .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _bdfcea :=_baeae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bdfcea !=nil {_egcef .Parent =_bdfcea ;};if _daeb :=_baeae .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_daeb !=nil {_dabaa ,_bffg :=_fe .GetString (_daeb );
if !_bffg {return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_gbadc ,_bdfgf :=NewPdfDate (_dabaa .Str ());if _bdfgf !=nil {return nil ,_bdfgf ;};_egcef .LastModified =&_gbadc ;};if _gdagdg :=_baeae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdagdg !=nil &&!_fe .IsNullObject (_gdagdg ){_bfaaf ,_eacca :=_fe .GetDict (_gdagdg );
if !_eacca {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gdagdg );};var _dbea error ;_egcef .Resources ,_dbea =NewPdfPageResourcesFromDict (_bfaaf );
if _dbea !=nil {return nil ,_dbea ;};}else {_bgfgg ,_fadc :=_egcef .getParentResources ();if _fadc !=nil {return nil ,_fadc ;};if _bgfgg ==nil {_bgfgg =NewPdfPageResources ();};_egcef .Resources =_bgfgg ;};if _cafce :=_baeae .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cafce !=nil {_abgcee ,_fcdg :=_fe .GetArray (_cafce );if !_fcdg {return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fdebe error ;
_egcef .MediaBox ,_fdebe =NewPdfRectangle (*_abgcee );if _fdebe !=nil {return nil ,_fdebe ;};};if _bagda :=_baeae .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bagda !=nil {_aagce ,_gabg :=_fe .GetArray (_bagda );if !_gabg {return nil ,_cg .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fbaba error ;_egcef .CropBox ,_fbaba =NewPdfRectangle (*_aagce );if _fbaba !=nil {return nil ,_fbaba ;};};if _geeba :=_baeae .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_geeba !=nil {_ddda ,_dadga :=_fe .GetArray (_geeba );if !_dadga {return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _cfdfc error ;_egcef .BleedBox ,_cfdfc =NewPdfRectangle (*_ddda );if _cfdfc !=nil {return nil ,_cfdfc ;};};if _gacbd :=_baeae .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gacbd !=nil {_gdfc ,_acecb :=_fe .GetArray (_gacbd );if !_acecb {return nil ,_cg .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gaded error ;_egcef .TrimBox ,_gaded =NewPdfRectangle (*_gdfc );if _gaded !=nil {return nil ,_gaded ;};};if _geeab :=_baeae .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_geeab !=nil {_affab ,_ecff :=_fe .GetArray (_geeab );if !_ecff {return nil ,_cg .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gecda error ;_egcef .ArtBox ,_gecda =NewPdfRectangle (*_affab );if _gecda !=nil {return nil ,_gecda ;};};if _fdaef :=_baeae .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fdaef !=nil {_egcef .BoxColorInfo =_fdaef ;
};if _gcgccd :=_baeae .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gcgccd !=nil {_egcef .Contents =_gcgccd ;};if _gegcd :=_baeae .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gegcd !=nil {_dcbc ,_bbdfef :=_fe .GetNumberAsInt64 (_gegcd );
if _bbdfef !=nil {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_egcef .Rotate =&_dcbc ;};if _ddgfg :=_baeae .Get ("\u0047\u0072\u006fu\u0070");
_ddgfg !=nil {_egcef .Group =_ddgfg ;};if _daabe :=_baeae .Get ("\u0054\u0068\u0075m\u0062");_daabe !=nil {_egcef .Thumb =_daabe ;};if _dadd :=_baeae .Get ("\u0042");_dadd !=nil {_egcef .B =_dadd ;};if _deagb :=_baeae .Get ("\u0044\u0075\u0072");_deagb !=nil {_egcef .Dur =_deagb ;
};if _cgdd :=_baeae .Get ("\u0054\u0072\u0061n\u0073");_cgdd !=nil {_egcef .Trans =_cgdd ;};if _bdgbg :=_baeae .Get ("\u0041\u0041");_bdgbg !=nil {_egcef .AA =_bdgbg ;};if _cebdb :=_baeae .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cebdb !=nil {_egcef .Metadata =_cebdb ;
};if _ccbbc :=_baeae .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ccbbc !=nil {_egcef .PieceInfo =_ccbbc ;};if _gdaad :=_baeae .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gdaad !=nil {_egcef .StructParents =_gdaad ;
};if _ffgcc :=_baeae .Get ("\u0049\u0044");_ffgcc !=nil {_egcef .ID =_ffgcc ;};if _bfacb :=_baeae .Get ("\u0050\u005a");_bfacb !=nil {_egcef .PZ =_bfacb ;};if _bgcbb :=_baeae .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bgcbb !=nil {_egcef .SeparationInfo =_bgcbb ;};if _ffgbd :=_baeae .Get ("\u0054\u0061\u0062\u0073");_ffgbd !=nil {_egcef .Tabs =_ffgbd ;};if _efda :=_baeae .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_efda !=nil {_egcef .TemplateInstantiated =_efda ;};if _gfac :=_baeae .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_gfac !=nil {_egcef .PresSteps =_gfac ;};if _ccdg :=_baeae .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ccdg !=nil {_egcef .UserUnit =_ccdg ;
};if _cdfb :=_baeae .Get ("\u0056\u0050");_cdfb !=nil {_egcef .VP =_cdfb ;};if _ggcbc :=_baeae .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_ggcbc !=nil {_egcef .Annots =_ggcbc ;};_egcef ._bcfb =_baggg ;return _egcef ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gcdb *PdfReader )GetPageLabels ()(_fe .PdfObject ,error ){_cffcd :=_fe .ResolveReference (_gcdb ._gbbce .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cffcd ==nil {return nil ,nil ;};if !_gcdb ._edeea {_gbcca :=_gcdb .traverseObjectData (_cffcd );
if _gbcca !=nil {return nil ,_gbcca ;};};return _cffcd ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fe .PdfIndirectObject )*PdfOutlineItem {_dfffc :=PdfOutlineItem {};_dfffc ._affe =&_dfffc ;_dfffc .Title =_fe .MakeString (title );_bdba :=_fe .MakeArray ();_bdba .Append (page );_bdba .Append (_fe .MakeName ("\u0046\u0069\u0074"));
_dfffc .Dest =_bdba ;return &_dfffc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_abgb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbgb ,_cgdb :=_fe .GetNumbersAsFloat (objects );
if _cgdb !=nil {return nil ,_cgdb ;};return _abgb .ColorFromFloats (_gbgb );};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_ddbe :=NewPdfAnnotation ();_dgd :=&PdfAnnotationHighlight {};_dgd .PdfAnnotation =_ddbe ;_dgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddbe .SetContext (_dgd );return _dgd ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_eccab *PdfPageResources )GetPatternByName (keyName _fe .PdfObjectName )(*PdfPattern ,bool ){if _eccab .Pattern ==nil {return nil ,false ;};_eabdg ,_abfecf :=_fe .TraceToDirectObject (_eccab .Pattern ).(*_fe .PdfObjectDictionary );if !_abfecf {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eccab .Pattern );
return nil ,false ;};if _abaaf :=_eabdg .Get (keyName );_abaaf !=nil {_efdg ,_efebd :=_cfae (_abaaf );if _efebd !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_efebd );
return nil ,false ;};return _efdg ,true ;};return nil ,false ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bde *PdfColorspaceCalGray )ToPdfObject ()_fe .PdfObject {_cegdc :=&_fe .PdfObjectArray {};_cegdc .Append (_fe .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_dcfb :=_fe .MakeDict ();if _bde .WhitePoint !=nil {_dcfb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fe .MakeArray (_fe .MakeFloat (_bde .WhitePoint [0]),_fe .MakeFloat (_bde .WhitePoint [1]),_fe .MakeFloat (_bde .WhitePoint [2])));
}else {_beag .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bde .BlackPoint !=nil {_dcfb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fe .MakeArray (_fe .MakeFloat (_bde .BlackPoint [0]),_fe .MakeFloat (_bde .BlackPoint [1]),_fe .MakeFloat (_bde .BlackPoint [2])));
};_dcfb .Set ("\u0047\u0061\u006dm\u0061",_fe .MakeFloat (_bde .Gamma ));_cegdc .Append (_dcfb );if _bde ._aaab !=nil {_bde ._aaab .PdfObject =_cegdc ;return _bde ._aaab ;};return _cegdc ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fe .PdfObject ;NewWindow _fe .PdfObject ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_dacbb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fe .GetNumberAsFloat (_dacbb .CapHeight );};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fe .PdfIndirectObject ;SV *_fe .PdfIndirectObject ;};

// ParserMetadata gets the parser  metadata.
func (_cdec *CompliancePdfReader )ParserMetadata ()_fe .ParserMetadata {if _cdec ._bgda ==(_fe .ParserMetadata {}){_cdec ._bgda ,_ =_cdec ._fbega .ParserMetadata ();};return _cdec ._bgda ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func (_cafc *PdfReader )newPdfActionURIFromDict (_efbc *_fe .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_efbc .Get ("\u0055\u0052\u0049"),IsMap :_efbc .Get ("\u0049\u0073\u004da\u0070")},nil ;
};func (_fbfc *PdfField )inherit (_dfdc func (*PdfField )bool )(bool ,error ){_dfdce :=map[*PdfField ]bool {};_effea :=false ;_bafb :=_fbfc ;for _bafb !=nil {if _ ,_gcebb :=_dfdce [_bafb ];_gcebb {return false ,_cg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_gffd :=_dfdc (_bafb );if _gffd {_effea =true ;break ;};_dfdce [_bafb ]=true ;_bafb =_bafb .Parent ;};return _effea ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gf PdfModel ;Type _fe .PdfObject ;S _fe .PdfObject ;Next _fe .PdfObject ;_bgfg *_fe .PdfIndirectObject ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// Val returns the color value.
func (_dgee *PdfColorDeviceGray )Val ()float64 {return float64 (*_dgee )};func (_cfdde PdfOutputIntentType )String ()string {switch _cfdde {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";
case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";
};};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_cga :=NewPdfAnnotation ();_ccd :=&PdfAnnotationPopup {};_ccd .PdfAnnotation =_cga ;_cga .SetContext (_ccd );return _ccd ;};

// ToPdfObject implements interface PdfModel.
func (_eaba *PdfAnnotationWidget )ToPdfObject ()_fe .PdfObject {_eaba .PdfAnnotation .ToPdfObject ();_bddb :=_eaba ._egb ;_beeea :=_bddb .PdfObject .(*_fe .PdfObjectDictionary );if _eaba ._ceb {return _bddb ;};_eaba ._ceb =true ;_beeea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_beeea .SetIfNotNil ("\u0048",_eaba .H );_beeea .SetIfNotNil ("\u004d\u004b",_eaba .MK );_beeea .SetIfNotNil ("\u0041",_eaba .A );_beeea .SetIfNotNil ("\u0041\u0041",_eaba .AA );_beeea .SetIfNotNil ("\u0042\u0053",_eaba .BS );_baff :=_eaba .Parent ;if _eaba ._fgdb !=nil {if _eaba ._fgdb ._beebc ==_eaba ._egb {_eaba ._fgdb .ToPdfObject ();
};_baff =_eaba ._fgdb .GetContainingPdfObject ();};if _baff !=_bddb {_beeea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_baff );};_eaba ._ceb =false ;return _bddb ;};

// MergePageWith appends page content to source Pdf file page content.
func (_adafa *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_gafab :=pageNum -1;var _cbgc *PdfPage ;for _ccbe ,_becd :=range _adafa ._ffbc {if _ccbe ==_gafab {_cbgc =_becd ;};};if _cbgc ==nil {return _a .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _cbgc ._eacfe !=nil &&_cbgc ._eacfe .GetParser ()==_adafa ._agfb ._fbega {_cbgc =_cbgc .Duplicate ();_adafa ._ffbc [_gafab ]=_cbgc ;};page =page .Duplicate ();_bcbca (page );_cffa :=_debg (_cbgc );_defe :=_debg (page );_acbc :=make (map[_fe .PdfObjectName ]_fe .PdfObjectName );
for _agb :=range _defe {if _ ,_bfgf :=_cffa [_agb ];_bfgf {for _fbca :=1;true ;_fbca ++{_acbaa :=_fe .PdfObjectName (string (_agb )+_ge .Itoa (_fbca ));if _ ,_fcgg :=_cffa [_acbaa ];!_fcgg {_acbc [_agb ]=_acbaa ;break ;};};};};_fecc ,_fbddf :=page .GetContentStreams ();
if _fbddf !=nil {return _fbddf ;};_ecef ,_fbddf :=_cbgc .GetContentStreams ();if _fbddf !=nil {return _fbddf ;};for _affc ,_abbc :=range _fecc {for _cgcc ,_ggbe :=range _acbc {_abbc =_ca .Replace (_abbc ,"\u002f"+string (_cgcc ),"\u002f"+string (_ggbe ),-1);
};_fecc [_affc ]=_abbc ;};_ecef =append (_ecef ,_fecc ...);if _cdeb :=_cbgc .SetContentStreams (_ecef ,_fe .NewFlateEncoder ());_cdeb !=nil {return _cdeb ;};_cbgc ._dcbbc =append (_cbgc ._dcbbc ,page ._dcbbc ...);if _cbgc .Resources ==nil {_cbgc .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_cbgc .Resources .Font =_adafa .mergeResources (_cbgc .Resources .Font ,page .Resources .Font ,_acbc );_cbgc .Resources .XObject =_adafa .mergeResources (_cbgc .Resources .XObject ,page .Resources .XObject ,_acbc );_cbgc .Resources .Properties =_adafa .mergeResources (_cbgc .Resources .Properties ,page .Resources .Properties ,_acbc );
if _cbgc .Resources .ProcSet ==nil {_cbgc .Resources .ProcSet =page .Resources .ProcSet ;};_cbgc .Resources .Shading =_adafa .mergeResources (_cbgc .Resources .Shading ,page .Resources .Shading ,_acbc );_cbgc .Resources .ExtGState =_adafa .mergeResources (_cbgc .Resources .ExtGState ,page .Resources .ExtGState ,_acbc );
};_cebc ,_fbddf :=_cbgc .GetMediaBox ();if _fbddf !=nil {return _fbddf ;};_cgef ,_fbddf :=page .GetMediaBox ();if _fbddf !=nil {return _fbddf ;};var _bfba bool ;if _cebc .Llx > _cgef .Llx {_cebc .Llx =_cgef .Llx ;_bfba =true ;};if _cebc .Lly > _cgef .Lly {_cebc .Lly =_cgef .Lly ;
_bfba =true ;};if _cebc .Urx < _cgef .Urx {_cebc .Urx =_cgef .Urx ;_bfba =true ;};if _cebc .Ury < _cgef .Ury {_cebc .Ury =_cgef .Ury ;_bfba =true ;};if _bfba {_cbgc .MediaBox =_cebc ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fgfc *PdfAnnotationSquiggly )ToPdfObject ()_fe .PdfObject {_fgfc .PdfAnnotation .ToPdfObject ();_bgef :=_fgfc ._egb ;_cbaf :=_bgef .PdfObject .(*_fe .PdfObjectDictionary );_fgfc .PdfAnnotationMarkup .appendToPdfDictionary (_cbaf );_cbaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_cbaf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fgfc .QuadPoints );return _bgef ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dgbda *PdfFontDescriptor )ToPdfObject ()_fe .PdfObject {_cebdc :=_fe .MakeDict ();if _dgbda ._ceeg ==nil {_dgbda ._ceeg =&_fe .PdfIndirectObject {};};_dgbda ._ceeg .PdfObject =_cebdc ;_cebdc .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dgbda .FontName !=nil {_cebdc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dgbda .FontName );};if _dgbda .FontFamily !=nil {_cebdc .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dgbda .FontFamily );};if _dgbda .FontStretch !=nil {_cebdc .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dgbda .FontStretch );
};if _dgbda .FontWeight !=nil {_cebdc .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dgbda .FontWeight );};if _dgbda .Flags !=nil {_cebdc .Set ("\u0046\u006c\u0061g\u0073",_dgbda .Flags );};if _dgbda .FontBBox !=nil {_cebdc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dgbda .FontBBox );
};if _dgbda .ItalicAngle !=nil {_cebdc .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dgbda .ItalicAngle );};if _dgbda .Ascent !=nil {_cebdc .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dgbda .Ascent );};if _dgbda .Descent !=nil {_cebdc .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dgbda .Descent );
};if _dgbda .Leading !=nil {_cebdc .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dgbda .Leading );};if _dgbda .CapHeight !=nil {_cebdc .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dgbda .CapHeight );};if _dgbda .XHeight !=nil {_cebdc .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dgbda .XHeight );
};if _dgbda .StemV !=nil {_cebdc .Set ("\u0053\u0074\u0065m\u0056",_dgbda .StemV );};if _dgbda .StemH !=nil {_cebdc .Set ("\u0053\u0074\u0065m\u0048",_dgbda .StemH );};if _dgbda .AvgWidth !=nil {_cebdc .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dgbda .AvgWidth );
};if _dgbda .MaxWidth !=nil {_cebdc .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dgbda .MaxWidth );};if _dgbda .MissingWidth !=nil {_cebdc .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dgbda .MissingWidth );};
if _dgbda .FontFile !=nil {_cebdc .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dgbda .FontFile );};if _dgbda .FontFile2 !=nil {_cebdc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dgbda .FontFile2 );};if _dgbda .FontFile3 !=nil {_cebdc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dgbda .FontFile3 );
};if _dgbda .CharSet !=nil {_cebdc .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dgbda .CharSet );};if _dgbda .Style !=nil {_cebdc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dgbda .FontName );};if _dgbda .Lang !=nil {_cebdc .Set ("\u004c\u0061\u006e\u0067",_dgbda .Lang );
};if _dgbda .FD !=nil {_cebdc .Set ("\u0046\u0044",_dgbda .FD );};if _dgbda .CIDSet !=nil {_cebdc .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dgbda .CIDSet );};return _dgbda ._ceeg ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_bada pdfFontSimple )GetCharMetrics (code _aee .CharCode )(_fg .CharMetrics ,bool ){if _dged ,_cdce :=_bada ._eecac [code ];_cdce {return _fg .CharMetrics {Wx :_dged },true ;};if _fg .IsStdFont (_fg .StdFontName (_bada ._agee )){return _fg .CharMetrics {Wx :250},true ;
};return _fg .CharMetrics {},false ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_caga *_fe .PdfIndirectObject ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ddcg :=NewPdfAnnotation ();_ggb :=&PdfAnnotationCircle {};_ggb .PdfAnnotation =_ddcg ;_ggb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddcg .SetContext (_ggb );return _ggb ;};

// ToPdfObject implements interface PdfModel.
func (_fgb *PdfActionJavaScript )ToPdfObject ()_fe .PdfObject {_fgb .PdfAction .ToPdfObject ();_gb :=_fgb ._bgfg ;_fdf :=_gb .PdfObject .(*_fe .PdfObjectDictionary );_fdf .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeJavaScript )));_fdf .SetIfNotNil ("\u004a\u0053",_fgb .JS );
return _gb ;};func (_abgd *PdfReader )newPdfActionSoundFromDict (_afdc *_fe .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_afdc .Get ("\u0053\u006f\u0075n\u0064"),Volume :_afdc .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_afdc .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_afdc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_afdc .Get ("\u004d\u0069\u0078")},nil ;
};func (_aaega *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _aaega ._eaaeg };func (_fddae PdfFont )actualFont ()pdfFont {if _fddae ._cdgee ==nil {_beag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fddae );
};return _fddae ._cdgee ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_aegee *VRI )ToPdfObject ()*_fe .PdfObjectDictionary {_ggfaf :=_fe .MakeDict ();_ggfaf .SetIfNotNil (_fe .PdfObjectName ("\u0043\u0065\u0072\u0074"),_fabd (_aegee .Cert ));_ggfaf .SetIfNotNil (_fe .PdfObjectName ("\u004f\u0043\u0053\u0050"),_fabd (_aegee .OCSP ));
_ggfaf .SetIfNotNil (_fe .PdfObjectName ("\u0043\u0052\u004c"),_fabd (_aegee .CRL ));_ggfaf .SetIfNotNil ("\u0054\u0055",_aegee .TU );_ggfaf .SetIfNotNil ("\u0054\u0053",_aegee .TS );return _ggfaf ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_aacad :=&PdfColorspaceSpecialSeparation {};return _aacad ;};func _fdbd (_edfg _fe .PdfObject )(*PdfBorderStyle ,error ){_cbebad :=&PdfBorderStyle {};_cbebad ._ggab =_edfg ;var _dcdc *_fe .PdfObjectDictionary ;
_edfg =_fe .TraceToDirectObject (_edfg );_dcdc ,_ggad :=_edfg .(*_fe .PdfObjectDictionary );if !_ggad {return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _aeae :=_dcdc .Get ("\u0054\u0079\u0070\u0065");_aeae !=nil {_gfaec ,_gagcb :=_aeae .(*_fe .PdfObjectName );
if !_gagcb {_beag .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_aeae );
}else {if *_gfaec !="\u0042\u006f\u0072\u0064\u0065\u0072"{_beag .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_gfaec );};};};if _bgcg :=_dcdc .Get ("\u0057");
_bgcg !=nil {_cbgde ,_bdac :=_fe .GetNumberAsFloat (_bgcg );if _bdac !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_bdac );return nil ,_bdac ;};_cbebad .W =&_cbgde ;
};if _gffc :=_dcdc .Get ("\u0053");_gffc !=nil {_fcgc ,_egba :=_gffc .(*_fe .PdfObjectName );if !_egba {return nil ,_cg .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _edca BorderStyle ;switch *_fcgc {case "\u0053":_edca =BorderStyleSolid ;case "\u0044":_edca =BorderStyleDashed ;case "\u0042":_edca =BorderStyleBeveled ;case "\u0049":_edca =BorderStyleInset ;case "\u0055":_edca =BorderStyleUnderline ;default:_beag .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_fcgc );
return nil ,_cg .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cbebad .S =&_edca ;};if _eefea :=_dcdc .Get ("\u0044");_eefea !=nil {_cbff ,_dcb :=_eefea .(*_fe .PdfObjectArray );
if !_dcb {_beag .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_eefea );return nil ,_cg .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_adfb ,_cdfc :=_cbff .ToIntegerArray ();if _cdfc !=nil {_beag .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cdfc );
return nil ,_cdfc ;};_cbebad .D =&_adfb ;};return _cbebad ,nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ebbee *PdfPageResources )GetShadingByName (keyName _fe .PdfObjectName )(*PdfShading ,bool ){if _ebbee .Shading ==nil {return nil ,false ;};_fcbcef ,_caaad :=_fe .TraceToDirectObject (_ebbee .Shading ).(*_fe .PdfObjectDictionary );if !_caaad {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebbee .Shading );
return nil ,false ;};if _aafcd :=_fcbcef .Get (keyName );_aafcd !=nil {_abagd ,_cadc :=_ddfff (_aafcd );if _cadc !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cadc );
return nil ,false ;};return _abagd ,true ;};return nil ,false ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dcfba ,_dfda :=_bb .Open (filePath );if _dfda !=nil {_beag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dfda );
return nil ,_dfda ;};defer _dcfba .Close ();return NewCompositePdfFontFromTTF (_dcfba );};func (_caadc *PdfFilespec )getDict ()*_fe .PdfObjectDictionary {if _feagd ,_cddc :=_caadc ._gcbg .(*_fe .PdfIndirectObject );_cddc {_bffaa ,_fgce :=_feagd .PdfObject .(*_fe .PdfObjectDictionary );
if !_fgce {return nil ;};return _bffaa ;}else if _fcfga ,_gafce :=_caadc ._gcbg .(*_fe .PdfObjectDictionary );_gafce {return _fcfga ;}else {_beag .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_caadc ._gcbg );
return nil ;};};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fe .PdfObject ;};func _bbgce (_cabe *_fe .PdfObjectDictionary )(*PdfTilingPattern ,error ){_gaae :=&PdfTilingPattern {};_edgbd :=_cabe .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _edgbd ==nil {_beag .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gcab ,_edfcf :=_edgbd .(*_fe .PdfObjectInteger );if !_edfcf {_beag .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_edgbd );
return nil ,_fe .ErrTypeError ;};_gaae .PaintType =_gcab ;_edgbd =_cabe .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _edgbd ==nil {_beag .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fffbc ,_edfcf :=_edgbd .(*_fe .PdfObjectInteger );if !_edfcf {_beag .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgbd );
return nil ,_fe .ErrTypeError ;};_gaae .TilingType =_fffbc ;_edgbd =_cabe .Get ("\u0042\u0042\u006f\u0078");if _edgbd ==nil {_beag .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_edgbd =_fe .TraceToDirectObject (_edgbd );_dddde ,_edfcf :=_edgbd .(*_fe .PdfObjectArray );if !_edfcf {_beag .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgbd );
return nil ,_fe .ErrTypeError ;};_gdffc ,_cbbgff :=NewPdfRectangle (*_dddde );if _cbbgff !=nil {_beag .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cbbgff );return nil ,_cbbgff ;};_gaae .BBox =_gdffc ;_edgbd =_cabe .Get ("\u0058\u0053\u0074e\u0070");
if _edgbd ==nil {_beag .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_accbd ,_cbbgff :=_fe .GetNumberAsFloat (_edgbd );if _cbbgff !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_accbd );
return nil ,_cbbgff ;};_gaae .XStep =_fe .MakeFloat (_accbd );_edgbd =_cabe .Get ("\u0059\u0053\u0074e\u0070");if _edgbd ==nil {_beag .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bcce ,_cbbgff :=_fe .GetNumberAsFloat (_edgbd );if _cbbgff !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bcce );
return nil ,_cbbgff ;};_gaae .YStep =_fe .MakeFloat (_bcce );_edgbd =_cabe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _edgbd ==nil {_beag .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cabe ,_edfcf =_fe .TraceToDirectObject (_edgbd ).(*_fe .PdfObjectDictionary );if !_edfcf {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edgbd );
};_bfdc ,_cbbgff :=NewPdfPageResourcesFromDict (_cabe );if _cbbgff !=nil {return nil ,_cbbgff ;};_gaae .Resources =_bfdc ;if _cbag :=_cabe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cbag !=nil {_fbga ,_fdged :=_cbag .(*_fe .PdfObjectArray );if !_fdged {_beag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbag );
return nil ,_fe .ErrTypeError ;};_gaae .Matrix =_fbga ;};return _gaae ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gagdg *Image )GetSamples ()[]uint32 {_ecbe :=_fad .ResampleBytes (_gagdg .Data ,int (_gagdg .BitsPerComponent ));if _gagdg .BitsPerComponent < 8{_ecbe =_gagdg .samplesTrimPadding (_ecbe );};_cggg :=int (_gagdg .Width )*int (_gagdg .Height )*_gagdg .ColorComponents ;
if len (_ecbe )< _cggg {_beag .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ecbe ),_cggg );
return _ecbe ;}else if len (_ecbe )> _cggg {_beag .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ecbe ),_cggg );
_ecbe =_ecbe [:_cggg ];};return _ecbe ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_cgge *PdfAppender )UpdatePage (page *PdfPage ){_cgge .updateObjectsDeep (page .ToPdfObject (),nil )};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fffa *PdfPageResourcesColorspaces )Set (key _fe .PdfObjectName ,val PdfColorspace ){if _ ,_ddbc :=_fffa .Colorspaces [string (key )];!_ddbc {_fffa .Names =append (_fffa .Names ,string (key ));};_fffa .Colorspaces [string (key )]=val ;};

// SetFlag sets the flag for the field.
func (_ebga *PdfField )SetFlag (flag FieldFlag ){_ebga .Ff =_fe .MakeInteger (int64 (flag ))};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fe .PdfObject ;IsMap _fe .PdfObject ;};

// SetAnnotations sets the annotations list.
func (_dfgge *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_dfgge ._dcbbc =annotations };func (_fcfc *DSS )add (_gdadc *[]*_fe .PdfObjectStream ,_eabda map[string ]*_fe .PdfObjectStream ,_abbbc [][]byte )([]*_fe .PdfObjectStream ,error ){_egef :=make ([]*_fe .PdfObjectStream ,0,len (_abbbc ));
for _ ,_aaegd :=range _abbbc {_eeafd ,_fgfgf :=_cccgcf (_aaegd );if _fgfgf !=nil {return nil ,_fgfgf ;};_bfcc ,_efcb :=_eabda [string (_eeafd )];if !_efcb {_bfcc ,_fgfgf =_fe .MakeStream (_aaegd ,_fe .NewRawEncoder ());if _fgfgf !=nil {return nil ,_fgfgf ;
};_eabda [string (_eeafd )]=_bfcc ;*_gdadc =append (*_gdadc ,_bfcc );};_egef =append (_egef ,_bfcc );};return _egef ,nil ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_bgda _fe .ParserMetadata ;};

// WriteToFile writes the Appender output to file specified by path.
func (_gad *PdfAppender )WriteToFile (outputPath string )error {_gfbd ,_ggbf :=_bb .Create (outputPath );if _ggbf !=nil {return _ggbf ;};defer _gfbd .Close ();return _gad .Write (_gfbd );};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_fbefa *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fe .PdfObject {_aaege :=_fe .MakeDict ();if _fbefa .Subtype !=nil {_aaege .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbefa .Subtype );};_aaege .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_fbefa .Colorants );
_aaege .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_fbefa .Process );_aaege .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_fbefa .MixingHints );if _fbefa ._gbad !=nil {_fbefa ._gbad .PdfObject =_aaege ;return _fbefa ._gbad ;
};return _aaege ;};func (_bgae *LTV )enable (_fecge ,_dcac []*_ee .Certificate ,_dcdgf string )error {_aagea ,_dbfdb ,_beefc :=_bgae .buildCertChain (_fecge ,_dcac );if _beefc !=nil {return _beefc ;};_eefb ,_beefc :=_bgae .getCerts (_aagea );if _beefc !=nil {return _beefc ;
};_dgdcd ,_beefc :=_bgae .getOCSPs (_aagea ,_dbfdb );if _beefc !=nil {return _beefc ;};_ccag ,_beefc :=_bgae .getCRLs (_aagea );if _beefc !=nil {return _beefc ;};_febc :=_bgae ._fabg ;_edeb ,_beefc :=_febc .addCerts (_eefb );if _beefc !=nil {return _beefc ;
};_efcg ,_beefc :=_febc .addOCSPs (_dgdcd );if _beefc !=nil {return _beefc ;};_faeffc ,_beefc :=_febc .addCRLs (_ccag );if _beefc !=nil {return _beefc ;};if _dcdgf !=""{_febc .VRI [_dcdgf ]=&VRI {Cert :_edeb ,OCSP :_efcg ,CRL :_faeffc };};_bgae ._ebeg .SetDSS (_febc );
return nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dgde :=NewPdfAnnotation ();_gdc :=&PdfAnnotationSound {};_gdc .PdfAnnotation =_dgde ;_gdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgde .SetContext (_gdc );return _gdc ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ecac *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_cged :=_fad .NewReader (img .getBase ());_ffbg :=_gege .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fdae :=_fad .NewWriter (_ffbg );
_dabdc :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_ffgb :=make ([]uint32 ,3);var (_ecdf uint32 ;ANorm ,X ,Y ,Z ,_gedd ,_cbd ,_edfd float64 ;_dedf error ;);for {_ecdf ,_dedf =_cged .ReadSample ();if _dedf ==_ecf .EOF {break ;}else if _dedf !=nil {return img ,_dedf ;
};ANorm =float64 (_ecdf )/_dabdc ;X =_ecac .WhitePoint [0]*_fa .Pow (ANorm ,_ecac .Gamma );Y =_ecac .WhitePoint [1]*_fa .Pow (ANorm ,_ecac .Gamma );Z =_ecac .WhitePoint [2]*_fa .Pow (ANorm ,_ecac .Gamma );_gedd =3.240479*X +-1.537150*Y +-0.498535*Z ;_cbd =-0.969256*X +1.875992*Y +0.041556*Z ;
_edfd =0.055648*X +-0.204043*Y +1.057311*Z ;_gedd =_fa .Min (_fa .Max (_gedd ,0),1.0);_cbd =_fa .Min (_fa .Max (_cbd ,0),1.0);_edfd =_fa .Min (_fa .Max (_edfd ,0),1.0);_ffgb [0]=uint32 (_gedd *_dabdc );_ffgb [1]=uint32 (_cbd *_dabdc );_ffgb [2]=uint32 (_edfd *_dabdc );
if _dedf =_fdae .WriteSamples (_ffgb );_dedf !=nil {return img ,_dedf ;};};return _bfcga (&_ffbg ),nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_fege *PdfPageResources )HasExtGState (keyName _fe .PdfObjectName )bool {_ ,_aafef :=_fege .GetFontByName (keyName );return _aafef ;};func (_caage *PdfWriter )setDocInfo (_ebab _fe .PdfObject ){if _caage .hasObject (_caage ._fcdfd ){delete (_caage ._ebfbf ,_caage ._fcdfd );
delete (_caage ._eafce ,_caage ._fcdfd );for _adgfc ,_acdfe :=range _caage ._cfabe {if _acdfe ==_caage ._fcdfd {copy (_caage ._cfabe [_adgfc :],_caage ._cfabe [_adgfc +1:]);_caage ._cfabe [len (_caage ._cfabe )-1]=nil ;_caage ._cfabe =_caage ._cfabe [:len (_caage ._cfabe )-1];
break ;};};};_acacc :=_fe .PdfIndirectObject {};_acacc .PdfObject =_ebab ;_caage ._fcdfd =&_acacc ;_caage .addObject (&_acacc );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bcef *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dddd ,_dbfgb :=_fe .GetNumbersAsFloat (objects );
if _dbfgb !=nil {return nil ,_dbfgb ;};return _bcef .ColorFromFloats (_dddd );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_cgffe *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _cgffe ._dcbbc !=nil {return _cgffe ._dcbbc ,nil ;};if _cgffe .Annots ==nil {_cgffe ._dcbbc =[]*PdfAnnotation {};return nil ,nil ;};if _cgffe ._bcfb ==nil {_cgffe ._dcbbc =[]*PdfAnnotation {};
return nil ,nil ;};_efdbd ,_cbeae :=_cgffe ._bcfb .loadAnnotations (_cgffe .Annots );if _cbeae !=nil {return nil ,_cbeae ;};if _efdbd ==nil {_cgffe ._dcbbc =[]*PdfAnnotation {};};_cgffe ._dcbbc =_efdbd ;return _cgffe ._dcbbc ,nil ;};var (CourierName =_fg .CourierName ;
CourierBoldName =_fg .CourierBoldName ;CourierObliqueName =_fg .CourierObliqueName ;CourierBoldObliqueName =_fg .CourierBoldObliqueName ;HelveticaName =_fg .HelveticaName ;HelveticaBoldName =_fg .HelveticaBoldName ;HelveticaObliqueName =_fg .HelveticaObliqueName ;
HelveticaBoldObliqueName =_fg .HelveticaBoldObliqueName ;SymbolName =_fg .SymbolName ;ZapfDingbatsName =_fg .ZapfDingbatsName ;TimesRomanName =_fg .TimesRomanName ;TimesBoldName =_fg .TimesBoldName ;TimesItalicName =_fg .TimesItalicName ;TimesBoldItalicName =_fg .TimesBoldItalicName ;
);

// SetDate sets the `M` field of the signature.
func (_gfgf *PdfSignature )SetDate (date _ae .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gfgf .M =_fe .MakeString (date .Format (format ));
};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cbdda *PdfPattern )SetContext (ctx PdfModel ){_cbdda ._bfea =ctx };const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// ToInteger convert to an integer format.
func (_fcfgd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_dacdb :=_fa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dacdb *_fcfgd .A ()),uint32 (_dacdb *_fcfgd .B ()),uint32 (_dacdb *_fcfgd .C ())};};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fe .PdfObjectArray )(*PdfRectangle ,error ){_bbfac :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _cgceea error ;_bbfac .Llx ,_cgceea =_fe .GetNumberAsFloat (arr .Get (0));if _cgceea !=nil {return nil ,_cgceea ;};_bbfac .Lly ,_cgceea =_fe .GetNumberAsFloat (arr .Get (1));if _cgceea !=nil {return nil ,_cgceea ;};_bbfac .Urx ,_cgceea =_fe .GetNumberAsFloat (arr .Get (2));
if _cgceea !=nil {return nil ,_cgceea ;};_bbfac .Ury ,_cgceea =_fe .GetNumberAsFloat (arr .Get (3));if _cgceea !=nil {return nil ,_cgceea ;};return &_bbfac ,nil ;};func (_bdbf *PdfReader )newPdfAnnotationSquareFromDict (_cfa *_fe .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gegef :=PdfAnnotationSquare {};
_gaca ,_gcgb :=_bdbf .newPdfAnnotationMarkupFromDict (_cfa );if _gcgb !=nil {return nil ,_gcgb ;};_gegef .PdfAnnotationMarkup =_gaca ;_gegef .BS =_cfa .Get ("\u0042\u0053");_gegef .IC =_cfa .Get ("\u0049\u0043");_gegef .BE =_cfa .Get ("\u0042\u0045");_gegef .RD =_cfa .Get ("\u0052\u0044");
return &_gegef ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_dgf :=NewPdfAnnotation ();_bcd :=&PdfAnnotationSquiggly {};_bcd .PdfAnnotation =_dgf ;_bcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgf .SetContext (_bcd );return _bcd ;};func (_cbf *PdfReader )newPdfActionGotoRFromDict (_ddg *_fe .PdfObjectDictionary )(*PdfActionGoToR ,error ){_ece ,_bbg :=_feba (_ddg .Get ("\u0046"));
if _bbg !=nil {return nil ,_bbg ;};return &PdfActionGoToR {D :_ddg .Get ("\u0044"),NewWindow :_ddg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ece },nil ;};func (_deba *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;BitsPerFlag *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};

// String returns the name of the colorspace (DeviceN).
func (_gbac *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};func _gadc (_dbce *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_dbce }};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cabg *PdfField )Flags ()FieldFlag {var _dafd FieldFlag ;_eaccg ,_adfbe :=_cabg .inherit (func (_becc *PdfField )bool {if _becc .Ff !=nil {_dafd =FieldFlag (*_becc .Ff );return true ;};return false ;});if _adfbe !=nil {_beag .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_adfbe );
};if !_eaccg {_beag .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _dafd ;};

// ToInteger convert to an integer format.
func (_cgce *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ebdgb :=_fa .Pow (2,float64 (bits ))-1;return uint32 (_ebdgb *_cgce .Val ());};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_ggfde []_fe .PdfObject )([]_fe .PdfObject ,error );};func (_gccgf *PdfPage )setContainer (_adfc *_fe .PdfIndirectObject ){_adfc .PdfObject =_gccgf ._dcfdb ;_gccgf ._eacfe =_adfc ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_eecbc *PdfReader )GetObjectNums ()[]int {return _eecbc ._fbega .GetObjectNums ()};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_bb .File ,error ){const _fdec ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_ecae ,_gfddad :=_bb .Open (pdfFile );if _gfddad !=nil {return nil ,nil ,_gfddad ;};_ffeab ,_gfddad :=_eggbd (_ecae ,opts ,true ,_fdec );if _gfddad !=nil {_ecae .Close ();return nil ,nil ,_gfddad ;};return _ffeab ,_ecae ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_acbg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cced ,_acfa :=_fe .GetNumbersAsFloat (objects );
if _acfa !=nil {return nil ,_acfa ;};return _acbg .ColorFromFloats (_cced );};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ecf .ReadSeeker )(*PdfFont ,error ){_ffbd ,_gbddd :=_ec .ReadAll (r );if _gbddd !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gbddd );
return nil ,_gbddd ;};_aacee ,_gbddd :=_fg .TtfParse (_bea .NewReader (_ffbd ));if _gbddd !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gbddd );
return nil ,_gbddd ;};_caaf :=&pdfCIDFontType2 {fontCommon :fontCommon {_eegd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fe .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_aacee .Widths )<=0{return nil ,_cg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gdaf :=1000.0/float64 (_aacee .UnitsPerEm );_eafde :=_gdaf *float64 (_aacee .Widths [0]);_eaeec :=make (map[rune ]int );_egfg :=make (map[_fg .GID ]int );_bedb :=_fg .GID (len (_aacee .Widths ));for _bbef ,_acff :=range _aacee .Chars {if _acff > _bedb -1{continue ;
};_fadee :=int (_gdaf *float64 (_aacee .Widths [_acff ]));_eaeec [_bbef ]=_fadee ;_egfg [_acff ]=_fadee ;};_caaf ._agcfb =_eaeec ;_caaf .DW =_fe .MakeInteger (int64 (_eafde ));_bccf :=_cfdec (_egfg ,uint16 (_bedb ));_caaf .W =_fe .MakeIndirectObject (_bccf );
_gbgac :=_fe .MakeDict ();_gbgac .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fe .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gbgac .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fe .MakeString ("\u0041\u0064\u006fb\u0065"));
_gbgac .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fe .MakeInteger (0));_caaf .CIDSystemInfo =_gbgac ;_dfeec :=&PdfFontDescriptor {FontName :_fe .MakeName (_aacee .PostScriptName ),Ascent :_fe .MakeFloat (_gdaf *float64 (_aacee .TypoAscender )),Descent :_fe .MakeFloat (_gdaf *float64 (_aacee .TypoDescender )),CapHeight :_fe .MakeFloat (_gdaf *float64 (_aacee .CapHeight )),FontBBox :_fe .MakeArrayFromFloats ([]float64 {_gdaf *float64 (_aacee .Xmin ),_gdaf *float64 (_aacee .Ymin ),_gdaf *float64 (_aacee .Xmax ),_gdaf *float64 (_aacee .Ymax )}),ItalicAngle :_fe .MakeFloat (_aacee .ItalicAngle ),MissingWidth :_fe .MakeFloat (_eafde )};
_dccbf ,_gbddd :=_fe .MakeStream (_ffbd ,_fe .NewFlateEncoder ());if _gbddd !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gbddd );
return nil ,_gbddd ;};_dccbf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fe .MakeInteger (int64 (len (_ffbd ))));_dfeec .FontFile2 =_dccbf ;if _aacee .Bold {_dfeec .StemV =_fe .MakeInteger (120);}else {_dfeec .StemV =_fe .MakeInteger (70);
};_aaagg :=_daaa ;if _aacee .IsFixedPitch {_aaagg |=_ceea ;};if _aacee .ItalicAngle !=0{_aaagg |=_gbgg ;};_dfeec .Flags =_fe .MakeInteger (int64 (_aaagg ));_caaf ._agee =_aacee .PostScriptName ;_caaf ._eaaeg =_dfeec ;_baeaf :=pdfFontType0 {fontCommon :fontCommon {_eegd :"\u0054\u0079\u0070e\u0030",_agee :_aacee .PostScriptName },DescendantFont :&PdfFont {_cdgee :_caaf },Encoding :_fe .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_gbdda :_aacee .NewEncoder ()};
if len (_aacee .Chars )> 0{_fffbb :=make (map[_bf .CharCode ]rune ,len (_aacee .Chars ));for _eega ,_bafd :=range _aacee .Chars {_aaebd :=_bf .CharCode (_bafd );if _feaae ,_gfbaa :=_fffbb [_aaebd ];!_gfbaa ||(_gfbaa &&_feaae > _eega ){_fffbb [_aaebd ]=_eega ;
};};_baeaf ._ggee =_bf .NewToUnicodeCMap (_fffbb );};_ddbbd :=PdfFont {_cdgee :&_baeaf };return &_ddbbd ,nil ;};func (_dcd *PdfReader )newPdfAnnotationTextFromDict (_gabd *_fe .PdfObjectDictionary )(*PdfAnnotationText ,error ){_adeb :=PdfAnnotationText {};
_cgec ,_bcbg :=_dcd .newPdfAnnotationMarkupFromDict (_gabd );if _bcbg !=nil {return nil ,_bcbg ;};_adeb .PdfAnnotationMarkup =_cgec ;_adeb .Open =_gabd .Get ("\u004f\u0070\u0065\u006e");_adeb .Name =_gabd .Get ("\u004e\u0061\u006d\u0065");_adeb .State =_gabd .Get ("\u0053\u0074\u0061t\u0065");
_adeb .StateModel =_gabd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_adeb ,nil ;};func _debg (_bbd *PdfPage )map[_fe .PdfObjectName ]_fe .PdfObject {_fgbf :=make (map[_fe .PdfObjectName ]_fe .PdfObject );if _bbd .Resources ==nil {return _fgbf ;
};if _bbd .Resources .Font !=nil {if _cfab ,_fdc :=_fe .GetDict (_bbd .Resources .Font );_fdc {for _ ,_dfbf :=range _cfab .Keys (){_fgbf [_dfbf ]=_cfab .Get (_dfbf );};};};if _bbd .Resources .ExtGState !=nil {if _fdg ,_cgg :=_fe .GetDict (_bbd .Resources .ExtGState );
_cgg {for _ ,_caad :=range _fdg .Keys (){_fgbf [_caad ]=_fdg .Get (_caad );};};};if _bbd .Resources .XObject !=nil {if _eagf ,_ebc :=_fe .GetDict (_bbd .Resources .XObject );_ebc {for _ ,_ffbf :=range _eagf .Keys (){_fgbf [_ffbf ]=_eagf .Get (_ffbf );};
};};if _bbd .Resources .Pattern !=nil {if _bfe ,_decd :=_fe .GetDict (_bbd .Resources .Pattern );_decd {for _ ,_edabe :=range _bfe .Keys (){_fgbf [_edabe ]=_bfe .Get (_edabe );};};};if _bbd .Resources .Shading !=nil {if _gea ,_gdgf :=_fe .GetDict (_bbd .Resources .Shading );
_gdgf {for _ ,_dbcf :=range _gea .Keys (){_fgbf [_dbcf ]=_gea .Get (_dbcf );};};};if _bbd .Resources .ProcSet !=nil {if _ebdg ,_fbba :=_fe .GetDict (_bbd .Resources .ProcSet );_fbba {for _ ,_ccfc :=range _ebdg .Keys (){_fgbf [_ccfc ]=_ebdg .Get (_ccfc );
};};};if _bbd .Resources .Properties !=nil {if _cfbea ,_dfga :=_fe .GetDict (_bbd .Resources .Properties );_dfga {for _ ,_cgb :=range _cfbea .Keys (){_fgbf [_cgb ]=_cfbea .Get (_cgb );};};};return _fgbf ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_cgefe *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func _dgecf ()_ae .Time {_aagdg .Lock ();defer _aagdg .Unlock ();return _daee };

// ToPdfObject implements interface PdfModel.
func (_cffe *PdfAnnotationCircle )ToPdfObject ()_fe .PdfObject {_cffe .PdfAnnotation .ToPdfObject ();_bdgb :=_cffe ._egb ;_bgegf :=_bdgb .PdfObject .(*_fe .PdfObjectDictionary );_cffe .PdfAnnotationMarkup .appendToPdfDictionary (_bgegf );_bgegf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_bgegf .SetIfNotNil ("\u0042\u0053",_cffe .BS );_bgegf .SetIfNotNil ("\u0049\u0043",_cffe .IC );_bgegf .SetIfNotNil ("\u0042\u0045",_cffe .BE );_bgegf .SetIfNotNil ("\u0052\u0044",_cffe .RD );return _bdgb ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_efef *PdfColorspaceSpecialPattern )ToPdfObject ()_fe .PdfObject {if _efef .UnderlyingCS ==nil {return _fe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_ddaff :=_fe .MakeArray (_fe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ddaff .Append (_efef .UnderlyingCS .ToPdfObject ());
if _efef ._caga !=nil {_efef ._caga .PdfObject =_ddaff ;return _efef ._caga ;};return _ddaff ;};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfActionSound )ToPdfObject ()_fe .PdfObject {_ecb .PdfAction .ToPdfObject ();_cbg :=_ecb ._bgfg ;_bgg :=_cbg .PdfObject .(*_fe .PdfObjectDictionary );_bgg .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeSound )));_bgg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ecb .Sound );
_bgg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ecb .Volume );_bgg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ecb .Synchronous );_bgg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ecb .Repeat );_bgg .SetIfNotNil ("\u004d\u0069\u0078",_ecb .Mix );
return _cbg ;};

// ToPdfObject implements interface PdfModel.
func (_ffgg *PdfActionNamed )ToPdfObject ()_fe .PdfObject {_ffgg .PdfAction .ToPdfObject ();_bdf :=_ffgg ._bgfg ;_gaf :=_bdf .PdfObject .(*_fe .PdfObjectDictionary );_gaf .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeNamed )));_gaf .SetIfNotNil ("\u004e",_ffgg .N );
return _bdf ;};func (_gbec *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_daec *PdfPageResources )HasXObjectByName (keyName _fe .PdfObjectName )bool {_begcd ,_ :=_daec .GetXObjectByName (keyName );return _begcd !=nil ;};

// WriteToFile writes the output PDF to file.
func (_bceca *PdfWriter )WriteToFile (outputFilePath string )error {_bebag ,_bffbf :=_bb .Create (outputFilePath );if _bffbf !=nil {return _bffbf ;};defer _bebag .Close ();return _bceca .Write (_bebag );};

// Initialize initializes the PdfSignature.
func (_abcbgc *PdfSignature )Initialize ()error {if _abcbgc .Handler ==nil {return _cg .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _abcbgc .Handler .InitSignature (_abcbgc );};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fe .PdfObject ;BS _fe .PdfObject ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fe .PdfObject ;GetContainingPdfObject ()_fe .PdfObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject implements interface PdfModel.
func (_dfg *PdfAnnotationRichMedia )ToPdfObject ()_fe .PdfObject {_dfg .PdfAnnotation .ToPdfObject ();_gccf :=_dfg ._egb ;_cfbe :=_gccf .PdfObject .(*_fe .PdfObjectDictionary );_cfbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_cfbe .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_dfg .RichMediaSettings );_cfbe .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_dfg .RichMediaContent );
return _gccf ;};func (_bcdeb *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_gaaab *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _ccfg []float64 ;for _dgaef :=0;_dgaef < _gaaab .GetNumComponents ();_dgaef ++{_ccfg =append (_ccfg ,0.0,1.0);};return _ccfg ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_bebce *PdfPageResources )SetXObjectImageByName (keyName _fe .PdfObjectName ,ximg *XObjectImage )error {_ecffc :=ximg .ToPdfObject ().(*_fe .PdfObjectStream );_fdcfb :=_bebce .SetXObjectByName (keyName ,_ecffc );return _fdcfb ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_ccff *PdfReader )newPdfAnnotationPopupFromDict (_dceg *_fe .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_adg :=PdfAnnotationPopup {};_adg .Parent =_dceg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_adg .Open =_dceg .Get ("\u004f\u0070\u0065\u006e");return &_adg ,nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;VerticesPerRow *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};func _gebaf (_beceg *PdfField ,_ceddc _fe .PdfObject )error {switch _beceg .GetContext ().(type ){case *PdfFieldText :switch _gbded :=_ceddc .(type ){case *_fe .PdfObjectName :_geebd :=_gbded ;
_beag .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_geebd .String ());
_beceg .V =_fe .MakeEncodedString (_gbded .String (),true );case *_fe .PdfObjectString :_beceg .V =_fe .MakeEncodedString (_gbded .String (),true );default:_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gbded ,_gbded );
};case *PdfFieldButton :switch _ceddc .(type ){case *_fe .PdfObjectName :if len (_ceddc .String ())> 0{_beceg .V =_ceddc ;_fgcb (_beceg ,_ceddc );};case *_fe .PdfObjectString :if len (_ceddc .String ())> 0{_beceg .V =_fe .MakeName (_ceddc .String ());_fgcb (_beceg ,_beceg .V );
};default:_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_beceg .PartialName (),_ceddc );_beceg .V =_ceddc ;};case *PdfFieldChoice :switch _ceddc .(type ){case *_fe .PdfObjectName :if len (_ceddc .String ())> 0{_beceg .V =_fe .MakeString (_ceddc .String ());
_fgcb (_beceg ,_ceddc );};case *_fe .PdfObjectString :if len (_ceddc .String ())> 0{_beceg .V =_ceddc ;_fgcb (_beceg ,_fe .MakeName (_ceddc .String ()));};default:_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_beceg .PartialName (),_ceddc );
_beceg .V =_ceddc ;};case *PdfFieldSignature :_beag .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_beceg .PartialName (),_ceddc );
};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gffg *PdfShadingType2 )ToPdfObject ()_fe .PdfObject {_gffg .PdfShading .ToPdfObject ();_bggcd ,_cgabb :=_gffg .getShadingDict ();if _cgabb !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bggcd ==nil {_beag .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _gffg .Coords !=nil {_bggcd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gffg .Coords );
};if _gffg .Domain !=nil {_bggcd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gffg .Domain );};if _gffg .Function !=nil {if len (_gffg .Function )==1{_bggcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gffg .Function [0].ToPdfObject ());}else {_bcfdd :=_fe .MakeArray ();
for _ ,_gaccg :=range _gffg .Function {_bcfdd .Append (_gaccg .ToPdfObject ());};_bggcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcfdd );};};if _gffg .Extend !=nil {_bggcd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gffg .Extend );};
return _gffg ._ebfb ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_abec *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_defc *PdfReader )newPdfAnnotationProjectionFromDict (_bbec *_fe .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_dffa :=&PdfAnnotationProjection {};_ffd ,_aagf :=_defc .newPdfAnnotationMarkupFromDict (_bbec );
if _aagf !=nil {return nil ,_aagf ;};_dffa .PdfAnnotationMarkup =_ffd ;return _dffa ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_baadf *PdfReader )Decrypt (password []byte )(bool ,error ){_fddd ,_bbfgf :=_baadf ._fbega .Decrypt (password );if _bbfgf !=nil {return false ,_bbfgf ;};if !_fddd {return false ,nil ;};_bbfgf =_baadf .loadStructure ();if _bbfgf !=nil {_beag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bbfgf );
return false ,_bbfgf ;};return true ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gged *PdfFont )GetCharMetrics (code _aee .CharCode )(CharMetrics ,bool ){var _eafd _fg .CharMetrics ;switch _defd :=_gged ._cdgee .(type ){case *pdfFontSimple :if _bfccd ,_bfdb :=_defd .GetCharMetrics (code );_bfdb {return _bfccd ,_bfdb ;};case *pdfFontType0 :if _fbddc ,_abfad :=_defd .GetCharMetrics (code );
_abfad {return _fbddc ,_abfad ;};case *pdfCIDFontType0 :if _eddd ,_aggd :=_defd .GetCharMetrics (code );_aggd {return _eddd ,_aggd ;};case *pdfCIDFontType2 :if _dbcgg ,_bagg :=_defd .GetCharMetrics (code );_bagg {return _dbcgg ,_bagg ;};case *pdfFontType3 :if _decgd ,_geeff :=_defd .GetCharMetrics (code );
_geeff {return _decgd ,_geeff ;};default:_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gged ._cdgee );
return _eafd ,false ;};if _eageb ,_fcebg :=_gged .GetFontDescriptor ();_fcebg ==nil &&_eageb !=nil {return _fg .CharMetrics {Wx :_eageb ._cbde },true ;};_beag .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gged );
return _eafd ,false ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_bcga *PdfInfo )ToPdfObject ()_fe .PdfObject {_adbbb :=_fe .MakeDict ();_adbbb .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_bcga .Title );_adbbb .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_bcga .Author );_adbbb .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_bcga .Subject );
_adbbb .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bcga .Keywords );_adbbb .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_bcga .Creator );_adbbb .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bcga .Producer );
_adbbb .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_bcga .Trapped );if _bcga .CreationDate !=nil {_adbbb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bcga .CreationDate .ToPdfObject ());};if _bcga .ModifiedDate !=nil {_adbbb .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_bcga .ModifiedDate .ToPdfObject ());
};for _ ,_gggfe :=range _bcga ._fefc .Keys (){_adbbb .SetIfNotNil (_gggfe ,_bcga ._fefc .Get (_gggfe ));};return _adbbb ;};func _cfae (_fdgdg _fe .PdfObject )(*PdfPattern ,error ){_eegccc :=&PdfPattern {};var _babbe *_fe .PdfObjectDictionary ;if _bdefd ,_cfbfe :=_fe .GetIndirect (_fdgdg );
_cfbfe {_eegccc ._deebb =_bdefd ;_ggbff ,_cbadd :=_bdefd .PdfObject .(*_fe .PdfObjectDictionary );if !_cbadd {_beag .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_bdefd .PdfObject );
return nil ,_fe .ErrTypeError ;};_babbe =_ggbff ;}else if _addaf ,_fbea :=_fe .GetStream (_fdgdg );_fbea {_eegccc ._deebb =_addaf ;_babbe =_addaf .PdfObjectDictionary ;}else {_beag .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fdgdg );
return nil ,_fe .ErrTypeError ;};_cgdeg :=_babbe .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cgdeg ==nil {_beag .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bfdf ,_bffagd :=_cgdeg .(*_fe .PdfObjectInteger );if !_bffagd {_beag .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cgdeg );
return nil ,_fe .ErrTypeError ;};if *_bfdf !=1&&*_bfdf !=2{_beag .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_bfdf );return nil ,_fe .ErrRangeError ;
};_eegccc .PatternType =int64 (*_bfdf );switch *_bfdf {case 1:_bbgbd ,_bgefg :=_bbgce (_babbe );if _bgefg !=nil {return nil ,_bgefg ;};_bbgbd .PdfPattern =_eegccc ;_eegccc ._bfea =_bbgbd ;return _eegccc ,nil ;case 2:_fbdc ,_ddbefa :=_caagc (_babbe );if _ddbefa !=nil {return nil ,_ddbefa ;
};_fbdc .PdfPattern =_eegccc ;_eegccc ._bfea =_fbdc ;return _eegccc ,nil ;};return nil ,_cg .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func (_bdff *PdfReader )newPdfAnnotationCircleFromDict (_cfdf *_fe .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_gefbe :=PdfAnnotationCircle {};
_fece ,_ded :=_bdff .newPdfAnnotationMarkupFromDict (_cfdf );if _ded !=nil {return nil ,_ded ;};_gefbe .PdfAnnotationMarkup =_fece ;_gefbe .BS =_cfdf .Get ("\u0042\u0053");_gefbe .IC =_cfdf .Get ("\u0049\u0043");_gefbe .BE =_cfdf .Get ("\u0042\u0045");
_gefbe .RD =_cfdf .Get ("\u0052\u0044");return &_gefbe ,nil ;};func _eggbd (_fcbd _ecf .ReadSeeker ,_cabfc *ReaderOpts ,_ccbec bool ,_gffbe string )(*PdfReader ,error ){if _cabfc ==nil {_cabfc =NewReaderOpts ();};_gdfb :=&PdfReader {_cbace :_fcbd ,_afabg :map[_fe .PdfObject ]struct{}{},_befdc :_cfbcf (),_edeea :_cabfc .LazyLoad ,_ccadd :_cabfc .ComplianceMode };
_bggga ,_fbcae :=_beegdb ("\u0072");if _fbcae !=nil {return nil ,_fbcae ;};_fbcae =_cbb .Track (_bggga ,_gffbe );if _fbcae !=nil {return nil ,_fbcae ;};_gdfb ._gcfc =_bggga ;var _ffcde *_fe .PdfParser ;if !_gdfb ._ccadd {_ffcde ,_fbcae =_fe .NewParser (_fcbd );
}else {_ffcde ,_fbcae =_fe .NewCompliancePdfParser (_fcbd );};if _fbcae !=nil {return nil ,_fbcae ;};_gdfb ._fbega =_ffcde ;_daaag ,_fbcae :=_gdfb .IsEncrypted ();if _fbcae !=nil {return nil ,_fbcae ;};if !_daaag {_fbcae =_gdfb .loadStructure ();if _fbcae !=nil {return nil ,_fbcae ;
};}else if _ccbec {_fabba ,_gabb :=_gdfb .Decrypt ([]byte (_cabfc .Password ));if _gabb !=nil {return nil ,_gabb ;};if !_fabba {return nil ,_cg .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _gdfb ,nil ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_aecgg ,_ebcbb :=_bb .Open (filePath );if _ebcbb !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ebcbb );
return nil ,_ebcbb ;};defer _aecgg .Close ();return NewPdfFontFromTTF (_aecgg );};func (_gcce *pdfFontSimple )updateStandard14Font (){_bbbca ,_eagb :=_gcce .Encoder ().(_aee .SimpleEncoder );if !_eagb {_beag .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_gcce .Encoder (),_gcce );
return ;};_cbef :=_bbbca .Charcodes ();_gcce ._eecac =make (map[_aee .CharCode ]float64 ,len (_cbef ));for _ ,_ceeaa :=range _cbef {_gacc ,_ :=_bbbca .CharcodeToRune (_ceeaa );_fbbef ,_ :=_gcce ._gcecc .Read (_gacc );_gcce ._eecac [_ceeaa ]=_fbbef .Wx ;
};};func (_gaeg *PdfShading )getShadingDict ()(*_fe .PdfObjectDictionary ,error ){_efge :=_gaeg ._ebfb ;if _beedf ,_eceba :=_efge .(*_fe .PdfIndirectObject );_eceba {_bcgb ,_fegb :=_beedf .PdfObject .(*_fe .PdfObjectDictionary );if !_fegb {return nil ,_fe .ErrTypeError ;
};return _bcgb ,nil ;}else if _faccgc ,_addga :=_efge .(*_fe .PdfObjectStream );_addga {return _faccgc .PdfObjectDictionary ,nil ;}else if _gecga ,_dggc :=_efge .(*_fe .PdfObjectDictionary );_dggc {return _gecga ,nil ;}else {_beag .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_fe .ErrTypeError ;};};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_efgg *PdfFieldButton )ToPdfObject ()_fe .PdfObject {_efgg .PdfField .ToPdfObject ();_daae :=_efgg ._beebc ;_ccfca :=_daae .PdfObject .(*_fe .PdfObjectDictionary );_ccfca .Set ("\u0046\u0054",_fe .MakeName ("\u0042\u0074\u006e"));if _efgg .Opt !=nil {_ccfca .Set ("\u004f\u0070\u0074",_efgg .Opt );
};return _daae ;};

// ToGoTime returns the date in time.Time format.
func (_fffdd PdfDate )ToGoTime ()_ae .Time {_gdgdg :=int (_fffdd ._fabgc *60*60+_fffdd ._ebcbe *60);switch _fffdd ._eggcc {case '-':_gdgdg =-_gdgdg ;case 'Z':_gdgdg =0;};_cbdca :=_a .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fffdd ._eggcc ,_fffdd ._fabgc ,_fffdd ._ebcbe );
_cbcda :=_ae .FixedZone (_cbdca ,_gdgdg );return _ae .Date (int (_fffdd ._dedag ),_ae .Month (_fffdd ._ffcef ),int (_fffdd ._ecega ),int (_fffdd ._dffba ),int (_fffdd ._ddcdgg ),int (_fffdd ._edbgd ),0,_cbcda );};func (_ebgeg *PdfWriter )writeBytes (_ebgec []byte ){if _ebgeg ._adage !=nil {return ;
};_fdaefc ,_gdggfc :=_ebgeg ._babfg .Write (_ebgec );_ebgeg ._bgefgf +=int64 (_fdaefc );_ebgeg ._adage =_gdggfc ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_aecg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbbdf *PdfShadingType6 )ToPdfObject ()_fe .PdfObject {_fbbdf .PdfShading .ToPdfObject ();_cdbc ,_bdag :=_fbbdf .getShadingDict ();if _bdag !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbbdf .BitsPerCoordinate !=nil {_cdbc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbbdf .BitsPerCoordinate );};if _fbbdf .BitsPerComponent !=nil {_cdbc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbbdf .BitsPerComponent );
};if _fbbdf .BitsPerFlag !=nil {_cdbc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fbbdf .BitsPerFlag );};if _fbbdf .Decode !=nil {_cdbc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbbdf .Decode );};if _fbbdf .Function !=nil {if len (_fbbdf .Function )==1{_cdbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbbdf .Function [0].ToPdfObject ());
}else {_dbcec :=_fe .MakeArray ();for _ ,_fdefa :=range _fbbdf .Function {_dbcec .Append (_fdefa .ToPdfObject ());};_cdbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbcec );};};return _fbbdf ._ebfb ;};func (_ddef *pdfFontType3 )baseFields ()*fontCommon {return &_ddef .fontCommon };
func (_daacbg *PdfWriter )mapObjectStreams (_gdaaa bool )(map[_fe .PdfObject ]bool ,bool ){_agfce :=make (map[_fe .PdfObject ]bool );for _ ,_deefg :=range _daacbg ._cfabe {if _dfbfa ,_ggdcf :=_deefg .(*_fe .PdfObjectStreams );_ggdcf {_gdaaa =true ;for _ ,_bfgge :=range _dfbfa .Elements (){_agfce [_bfgge ]=true ;
if _fdffe ,_aegfbg :=_bfgge .(*_fe .PdfIndirectObject );_aegfbg {_agfce [_fdffe .PdfObject ]=true ;};};};};return _agfce ,_gdaaa ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gabf *PdfFieldSignature )ToPdfObject ()_fe .PdfObject {if _gabf .PdfAnnotationWidget !=nil {_gabf .PdfAnnotationWidget .ToPdfObject ();};_gabf .PdfField .ToPdfObject ();_eacg :=_gabf ._beebc ;_eaee :=_eacg .PdfObject .(*_fe .PdfObjectDictionary );
_eaee .SetIfNotNil ("\u0046\u0054",_fe .MakeName ("\u0053\u0069\u0067"));_eaee .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gabf .Lock );_eaee .SetIfNotNil ("\u0053\u0056",_gabf .SV );if _gabf .V !=nil {_eaee .SetIfNotNil ("\u0056",_gabf .V .ToPdfObject ());
};return _eacg ;};

// G returns the value of the green component of the color.
func (_becb *PdfColorDeviceRGB )G ()float64 {return _becb [1]};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ddeg :=NewPdfAnnotation ();_fcf :=&PdfAnnotationFileAttachment {};_fcf .PdfAnnotation =_ddeg ;_fcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddeg .SetContext (_fcf );return _fcf ;
};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_fbega *_fe .PdfParser ;_ebda _fe .PdfObject ;_ddff *_fe .PdfIndirectObject ;_dega *_fe .PdfObjectDictionary ;_dgdea []*_fe .PdfIndirectObject ;PageList []*PdfPage ;_facag int ;_gbbce *_fe .PdfObjectDictionary ;_agaga *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_befdc *modelManager ;_edeea bool ;_afabg map[_fe .PdfObject ]struct{};_cbace _ecf .ReadSeeker ;_gcfc string ;_ccadd bool ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gbfgc *PdfReader )GetIndirectObjectByNumber (number int )(_fe .PdfObject ,error ){_acccg ,_eaed :=_gbfgc ._fbega .LookupByNumber (number );return _acccg ,_eaed ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func (_aagg *PdfReader )newPdfAnnotationUnderlineFromDict (_gffb *_fe .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_cbe :=PdfAnnotationUnderline {};_bacf ,_abbbd :=_aagg .newPdfAnnotationMarkupFromDict (_gffb );
if _abbbd !=nil {return nil ,_abbbd ;};_cbe .PdfAnnotationMarkup =_bacf ;_cbe .QuadPoints =_gffb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cbe ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bcecc *PdfPattern )IsTiling ()bool {return _bcecc .PatternType ==1};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bgfbd :=PdfColorDeviceGray (grayVal );return &_bgfbd ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fe .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _cgabe *_fe .PdfIndirectObject ;var _dcad *_fe .PdfObjectName ;var _gabdg *_fe .PdfObjectArray ;if _bdbba ,_faag :=obj .(*_fe .PdfIndirectObject );
_faag {_cgabe =_bdbba ;};obj =_fe .TraceToDirectObject (obj );switch _ebbg :=obj .(type ){case *_fe .PdfObjectArray :_gabdg =_ebbg ;case *_fe .PdfObjectName :_dcad =_ebbg ;};if _dcad !=nil {switch *_dcad {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_beag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_dcad );return nil ,_deea ;};};if _gabdg !=nil &&_gabdg .Len ()> 0{var _eeaa _fe .PdfObject =_cgabe ;
if _cgabe ==nil {_eeaa =_gabdg ;};if _edg ,_ggbdc :=_fe .GetName (_gabdg .Get (0));_ggbdc {switch _edg .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gabdg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gabdg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gabdg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _aaef (_eeaa );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _acfc (_eeaa );
case "\u004c\u0061\u0062":return _ccbee (_eeaa );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _beaa (_eeaa );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _feage (_eeaa );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dacdbf (_eeaa );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _eaae (_eeaa );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _deaeg (_eeaa );default:_beag .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_edg );
};};};_beag .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_eeadd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _eeadd ._fbega .GetCrypter ()!=nil &&!_eeadd ._fbega .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ddfc :=_eeadd ._gbbce ;_feee :=_ddfc .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _feee ==nil {return nil ,nil ;};_beag .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fadcb :=_fe .ResolveReference (_feee );
_beag .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fadcb );if _agggd :=_fe .IsNullObject (_fadcb );_agggd {_beag .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_dgceg ,_defdb :=_fadcb .(*_fe .PdfIndirectObject );if !_defdb {if _ ,_fgaa :=_fe .GetDict (_fadcb );!_fgaa {_beag .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_beag .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_dgceg =_fe .MakeIndirectObject (_fadcb );};_eggc ,_defdb :=_dgceg .PdfObject .(*_fe .PdfObjectDictionary );if !_defdb {return nil ,_cg .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_beag .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_eggc );_ffbga ,_ ,_faffgd :=_eeadd .buildOutlineTree (_dgceg ,nil ,nil ,nil );if _faffgd !=nil {return nil ,_faffgd ;};_beag .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ffbga );
return _ffbga ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gddc *Outline )ToPdfOutline ()*PdfOutline {_gfgbc :=NewPdfOutline ();var _afda []*PdfOutlineItem ;var _gfabb int64 ;var _bddde *PdfOutlineItem ;for _ ,_fgccg :=range _gddc .Entries {_gfcad ,_daaad :=_fgccg .ToPdfOutlineItem ();_gfcad .Parent =&_gfgbc .PdfOutlineTreeNode ;
if _bddde !=nil {_bddde .Next =&_gfcad .PdfOutlineTreeNode ;_gfcad .Prev =&_bddde .PdfOutlineTreeNode ;};_afda =append (_afda ,_gfcad );_gfabb +=_daaad ;_bddde =_gfcad ;};_fecebg :=int64 (len (_afda ));_gfabb +=_fecebg ;if _fecebg > 0{_gfgbc .First =&_afda [0].PdfOutlineTreeNode ;
_gfgbc .Last =&_afda [_fecebg -1].PdfOutlineTreeNode ;_gfgbc .Count =&_gfabb ;};return _gfgbc ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_cbge *PdfReader )PageFromIndirectObject (ind *_fe .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_cbge .PageList )!=len (_cbge ._dgdea ){return nil ,0,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _afedf ,_bdbae :=range _cbge ._dgdea {if _bdbae ==ind {return _cbge .PageList [_afedf ],_afedf +1,nil ;};};return nil ,0,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_gegcbf *pdfCIDFontType2 )baseFields ()*fontCommon {return &_gegcbf .fontCommon };
func _bggda (_gdegc *XObjectImage )error {if _gdegc .SMask ==nil {return nil ;};_adbfc ,_ebcbbb :=_gdegc .SMask .(*_fe .PdfObjectStream );if !_ebcbbb {_beag .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _fe .ErrTypeError ;};_cffga :=_adbfc .PdfObjectDictionary ;_abfaa :=_cffga .Get ("\u004d\u0061\u0074t\u0065");if _abfaa ==nil {return nil ;};_babec ,_bdcdf :=_ccfaca (_abfaa .(*_fe .PdfObjectArray ));if _bdcdf !=nil {return _bdcdf ;};_aacfa :=_fe .MakeArrayFromFloats ([]float64 {_babec });
_cffga .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aacfa );return nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fe .PdfObjectArray ;Domain *_fe .PdfObjectArray ;Function []PdfFunction ;Extend *_fe .PdfObjectArray ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_ffdgd *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fe .GetNumberAsFloat (_ffdgd .Ascent );};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fbbe *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func _cgdef (_efacd *[]*PdfField ,_fadbe FieldFilterFunc ,_ggaa bool )[]*PdfField {if _efacd ==nil {return nil ;};_dbfe :=*_efacd ;if len (*_efacd )==0{return nil ;};_fafe :=_dbfe [:0];if _fadbe ==nil {_fadbe =func (*PdfField )bool {return true };
};var _ebdde []*PdfField ;for _ ,_geeffe :=range _dbfe {_ffbfd :=_fadbe (_geeffe );if _ffbfd {_ebdde =append (_ebdde ,_geeffe );if len (_geeffe .Kids )> 0{_ebdde =append (_ebdde ,_cgdef (&_geeffe .Kids ,_fadbe ,_ggaa )...);};};if !_ggaa ||!_ffbfd ||len (_geeffe .Kids )> 0{_fafe =append (_fafe ,_geeffe );
};};*_efacd =_fafe ;return _ebdde ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fe .PdfObject ;_cfbf []byte ;_bdded *_fe .PdfIndirectObject ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_feae *PdfColorspaceDeviceN )ToPdfObject ()_fe .PdfObject {_gagf :=_fe .MakeArray (_fe .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gagf .Append (_feae .ColorantNames );_gagf .Append (_feae .AlternateSpace .ToPdfObject ());_gagf .Append (_feae .TintTransform .ToPdfObject ());
if _feae .Attributes !=nil {_gagf .Append (_feae .Attributes .ToPdfObject ());};if _feae ._efefb !=nil {_feae ._efefb .PdfObject =_gagf ;return _feae ._efefb ;};return _gagf ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fe .PdfObject ;Name _fe .PdfObject ;State _fe .PdfObject ;StateModel _fe .PdfObject ;};func (_eacfa *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_dbgac *PdfColorspaceICCBased )ToPdfObject ()_fe .PdfObject {_beefe :=&_fe .PdfObjectArray {};_beefe .Append (_fe .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _acgb *_fe .PdfObjectStream ;if _dbgac ._bdfce !=nil {_acgb =_dbgac ._bdfce ;
}else {_acgb =&_fe .PdfObjectStream {};};_eagac :=_fe .MakeDict ();_eagac .Set ("\u004e",_fe .MakeInteger (int64 (_dbgac .N )));if _dbgac .Alternate !=nil {_eagac .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_dbgac .Alternate .ToPdfObject ());};
if _dbgac .Metadata !=nil {_eagac .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dbgac .Metadata );};if _dbgac .Range !=nil {var _bbcg []_fe .PdfObject ;for _ ,_dcgbg :=range _dbgac .Range {_bbcg =append (_bbcg ,_fe .MakeFloat (_dcgbg ));};_eagac .Set ("\u0052\u0061\u006eg\u0065",_fe .MakeArray (_bbcg ...));
};_eagac .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_dbgac .Data ))));_acgb .Stream =_dbgac .Data ;_acgb .PdfObjectDictionary =_eagac ;_beefe .Append (_acgb );if _dbgac ._gccg !=nil {_dbgac ._gccg .PdfObject =_beefe ;return _dbgac ._gccg ;
};return _beefe ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_gafa :=NewPdfAnnotation ();_ageg :=&PdfAnnotationPolyLine {};_ageg .PdfAnnotation =_gafa ;_ageg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gafa .SetContext (_ageg );return _ageg ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};func (_aacagc *PdfWriter )copyObject (_ceag _fe .PdfObject ,_cgagb map[_fe .PdfObject ]_fe .PdfObject ,_fcffe map[_fe .PdfObject ]struct{},_eaeab bool )_fe .PdfObject {_bbfeac :=!_aacagc ._ccbff &&_fcffe !=nil ;if _dffe ,_ggedb :=_cgagb [_ceag ];
_ggedb {if _bbfeac &&!_eaeab {delete (_fcffe ,_ceag );};return _dffe ;};_efee :=_ceag ;switch _bdcf :=_ceag .(type ){case *_fe .PdfObjectArray :_dfcda :=_fe .MakeArray ();_efee =_dfcda ;_cgagb [_ceag ]=_efee ;for _ ,_gaacf :=range _bdcf .Elements (){_dfcda .Append (_aacagc .copyObject (_gaacf ,_cgagb ,_fcffe ,_eaeab ));
};case *_fe .PdfObjectStreams :_gfcade :=&_fe .PdfObjectStreams {PdfObjectReference :_bdcf .PdfObjectReference };_efee =_gfcade ;_cgagb [_ceag ]=_efee ;for _ ,_bfae :=range _bdcf .Elements (){_gfcade .Append (_aacagc .copyObject (_bfae ,_cgagb ,_fcffe ,_eaeab ));
};case *_fe .PdfObjectStream :_bgaaa :=&_fe .PdfObjectStream {Stream :_bdcf .Stream ,PdfObjectReference :_bdcf .PdfObjectReference };_efee =_bgaaa ;_cgagb [_ceag ]=_efee ;_bgaaa .PdfObjectDictionary =_aacagc .copyObject (_bdcf .PdfObjectDictionary ,_cgagb ,_fcffe ,_eaeab ).(*_fe .PdfObjectDictionary );
case *_fe .PdfObjectDictionary :var _bgcabc bool ;if _bbfeac &&!_eaeab {if _cgeg ,_ :=_fe .GetNameVal (_bdcf .Get ("\u0054\u0079\u0070\u0065"));_cgeg =="\u0050\u0061\u0067\u0065"{_ ,_dddag :=_aacagc ._fbgee [_bdcf ];_eaeab =!_dddag ;_bgcabc =_eaeab ;};
};_acgbe :=_fe .MakeDict ();_efee =_acgbe ;_cgagb [_ceag ]=_efee ;for _ ,_cbgeg :=range _bdcf .Keys (){_acgbe .Set (_cbgeg ,_aacagc .copyObject (_bdcf .Get (_cbgeg ),_cgagb ,_fcffe ,_eaeab ));};if _bgcabc {_efee =_fe .MakeNull ();_eaeab =false ;};case *_fe .PdfIndirectObject :_dbefd :=&_fe .PdfIndirectObject {PdfObjectReference :_bdcf .PdfObjectReference };
_efee =_dbefd ;_cgagb [_ceag ]=_efee ;_dbefd .PdfObject =_aacagc .copyObject (_bdcf .PdfObject ,_cgagb ,_fcffe ,_eaeab );case *_fe .PdfObjectString :_accda :=*_bdcf ;_efee =&_accda ;_cgagb [_ceag ]=_efee ;case *_fe .PdfObjectName :_acdga :=*_bdcf ;_efee =&_acdga ;
_cgagb [_ceag ]=_efee ;case *_fe .PdfObjectNull :_efee =_fe .MakeNull ();_cgagb [_ceag ]=_efee ;case *_fe .PdfObjectInteger :_dfafg :=*_bdcf ;_efee =&_dfafg ;_cgagb [_ceag ]=_efee ;case *_fe .PdfObjectReference :_efagb :=*_bdcf ;_efee =&_efagb ;_cgagb [_ceag ]=_efee ;
case *_fe .PdfObjectFloat :_gdac :=*_bdcf ;_efee =&_gdac ;_cgagb [_ceag ]=_efee ;case *_fe .PdfObjectBool :_ecefgd :=*_bdcf ;_efee =&_ecefgd ;_cgagb [_ceag ]=_efee ;case *pdfSignDictionary :_eabeb :=&pdfSignDictionary {PdfObjectDictionary :_fe .MakeDict (),_fbgdc :_bdcf ._fbgdc ,_badba :_bdcf ._badba };
_efee =_eabeb ;_cgagb [_ceag ]=_efee ;for _ ,_efdca :=range _bdcf .Keys (){_eabeb .Set (_efdca ,_aacagc .copyObject (_bdcf .Get (_efdca ),_cgagb ,_fcffe ,_eaeab ));};default:_beag .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ceag );
};if _bbfeac &&_eaeab {_fcffe [_ceag ]=struct{}{};};return _efee ;};func (_cddb *DSS )addOCSPs (_cccga [][]byte )([]*_fe .PdfObjectStream ,error ){return _cddb .add (&_cddb .OCSPs ,_cddb ._bffde ,_cccga );};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_bc :=NewPdfAction ();_gc :=&PdfActionURI {};_gc .PdfAction =_bc ;_bc .SetContext (_gc );return _gc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_eabb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if _eabb .Alternate ==nil {if _eabb .N ==1{_beaae :=NewPdfColorspaceDeviceGray ();return _beaae .ColorFromPdfObjects (objects );}else if _eabb .N ==3{_dcga :=NewPdfColorspaceDeviceRGB ();
return _dcga .ColorFromPdfObjects (objects );}else if _eabb .N ==4{_gacac :=NewPdfColorspaceDeviceCMYK ();return _gacac .ColorFromPdfObjects (objects );}else {return nil ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _eabb .Alternate .ColorFromPdfObjects (objects );};type pdfFontSimple struct{fontCommon ;_fcbg *_fe .PdfIndirectObject ;_eecac map[_aee .CharCode ]float64 ;_cgefeb _aee .TextEncoder ;_geadc _aee .TextEncoder ;_cdged *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fe .PdfObject ;LastChar _fe .PdfObject ;Widths _fe .PdfObject ;Encoding _fe .PdfObject ;_gcecc *_fg .RuneCharSafeMap ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_fcge int ,_cecee *PdfPage );func (_edfga *LTV )validateSig (_ddcf *PdfSignature )error {if _ddcf ==nil ||_ddcf .Contents ==nil ||len (_ddcf .Contents .Bytes ())==0{return _a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_ddcf );
};return nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_gfab :=NewPdfAnnotation ();_ecbc :=&PdfAnnotationPrinterMark {};_ecbc .PdfAnnotation =_gfab ;_gfab .SetContext (_ecbc );return _ecbc ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ae .Time ){_aagdg .Lock ();defer _aagdg .Unlock ();_daee =modifiedDate ;};

// ToPdfObject implements interface PdfModel.
func (_dbabc *PdfSignature )ToPdfObject ()_fe .PdfObject {_bgbbb :=_dbabc ._fafad ;var _aafcdd *_fe .PdfObjectDictionary ;if _aaegff ,_daegb :=_bgbbb .PdfObject .(*pdfSignDictionary );_daegb {_aafcdd =_aaegff .PdfObjectDictionary ;}else {_aafcdd =_bgbbb .PdfObject .(*_fe .PdfObjectDictionary );
};_aafcdd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dbabc .Type );_aafcdd .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_dbabc .Filter );_aafcdd .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_dbabc .SubFilter );_aafcdd .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dbabc .ByteRange );
_aafcdd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dbabc .Contents );_aafcdd .SetIfNotNil ("\u0043\u0065\u0072\u0074",_dbabc .Cert );_aafcdd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dbabc .Name );_aafcdd .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_dbabc .Reason );
_aafcdd .SetIfNotNil ("\u004d",_dbabc .M );_aafcdd .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_dbabc .Reference );_aafcdd .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_dbabc .Changes );_aafcdd .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_dbabc .ContactInfo );
return _bgbbb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cggc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggbacd :=vals [0];if _ggbacd < 0.0||_ggbacd > 100.0{_beag .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ggbacd );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbdf :=vals [1];_cfbef :=float64 (-100);_dcdd :=float64 (100);if len (_cggc .Range )> 1{_cfbef =_cggc .Range [0];_dcdd =_cggc .Range [1];};if _gbdf < _cfbef ||_gbdf > _dcdd {_beag .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gbdf ,_cfbef ,_dcdd );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfde :=vals [2];_fdcd :=float64 (-100);_cdebd :=float64 (100);if len (_cggc .Range )> 3{_fdcd =_cggc .Range [2];_cdebd =_cggc .Range [3];};if _cfde < _fdcd ||_cfde > _cdebd {_beag .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cfde ,_fdcd ,_cdebd );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcdeg :=NewPdfColorLab (_ggbacd ,_gbdf ,_cfde );return _bcdeg ,nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fe .PdfObjectStream )(*XObjectImage ,error ){_beccc :=&XObjectImage {};_beccc ._egeea =stream ;_eaaga :=*(stream .PdfObjectDictionary );_bcdaf ,_cegggf :=_fe .NewEncoderFromStream (stream );if _cegggf !=nil {return nil ,_cegggf ;
};_beccc .Filter =_bcdaf ;if _adeaga :=_fe .TraceToDirectObject (_eaaga .Get ("\u0057\u0069\u0064t\u0068"));_adeaga !=nil {_faeca ,_agdad :=_adeaga .(*_fe .PdfObjectInteger );if !_agdad {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_eeaca :=int64 (*_faeca );_beccc .Width =&_eeaca ;}else {return nil ,_cg .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cbggc :=_fe .TraceToDirectObject (_eaaga .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_cbggc !=nil {_fcgfe ,_gadbc :=_cbggc .(*_fe .PdfObjectInteger );if !_gadbc {return nil ,_cg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_aebfa :=int64 (*_fcgfe );
_beccc .Height =&_aebfa ;}else {return nil ,_cg .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _ebfbe :=_fe .TraceToDirectObject (_eaaga .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_ebfbe !=nil {_afabe ,_gefbf :=NewPdfColorspaceFromPdfObject (_ebfbe );if _gefbf !=nil {return nil ,_gefbf ;};_beccc .ColorSpace =_afabe ;}else {_beag .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_beccc .ColorSpace =NewPdfColorspaceDeviceGray ();};if _dcbgg :=_fe .TraceToDirectObject (_eaaga .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dcbgg !=nil {_gbgea ,_fbddge :=_dcbgg .(*_fe .PdfObjectInteger );
if !_fbddge {return nil ,_cg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cbbef :=int64 (*_gbgea );_beccc .BitsPerComponent =&_cbbef ;};_beccc .Intent =_eaaga .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_beccc .ImageMask =_eaaga .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_beccc .Mask =_eaaga .Get ("\u004d\u0061\u0073\u006b");_beccc .Decode =_eaaga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_beccc .Interpolate =_eaaga .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_beccc .Alternatives =_eaaga .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_beccc .SMask =_eaaga .Get ("\u0053\u004d\u0061s\u006b");_beccc .SMaskInData =_eaaga .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_beccc .Matte =_eaaga .Get ("\u004d\u0061\u0074t\u0065");_beccc .Name =_eaaga .Get ("\u004e\u0061\u006d\u0065");_beccc .StructParent =_eaaga .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_beccc .ID =_eaaga .Get ("\u0049\u0044");
_beccc .OPI =_eaaga .Get ("\u004f\u0050\u0049");_beccc .Metadata =_eaaga .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_beccc .OC =_eaaga .Get ("\u004f\u0043");_beccc .Stream =stream .Stream ;return _beccc ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_bgbdf *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_gcc *PdfReader )newPdfActionNamedFromDict (_gfee *_fe .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gfee .Get ("\u004e")},nil ;
};

// HasFontByName checks if has font resource by name.
func (_egbce *PdfPage )HasFontByName (name _fe .PdfObjectName )bool {_ccae ,_agbe :=_egbce .Resources .Font .(*_fe .PdfObjectDictionary );if !_agbe {return false ;};if _dgdcg :=_ccae .Get (name );_dgdcg !=nil {return true ;};return false ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_gaaff *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _gaaff .Alternate ==nil {_beag .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gaaff .N ==1{_beag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_eece :=NewPdfColorspaceDeviceGray ();return _eece .ImageToRGB (img );}else if _gaaff .N ==3{_beag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _gaaff .N ==4{_beag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gcgdd :=NewPdfColorspaceDeviceCMYK ();return _gcgdd .ImageToRGB (img );}else {return img ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_beag .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gaaff );
_bebc ,_fgfcd :=_gaaff .Alternate .ImageToRGB (img );_beag .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_beag .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_bebc );
return _bebc ,_fgfcd ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fe .PdfObject ;H _fe .PdfObject ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_efcgb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_efcgb .ToPdfOutline ().PdfOutlineTreeNode ;};func _gdcdf (_acgcc *_fe .PdfObjectDictionary )*VRI {_gaeb ,_ :=_fe .GetString (_acgcc .Get ("\u0054\u0055"));_ggdc ,_ :=_fe .GetString (_acgcc .Get ("\u0054\u0053"));
return &VRI {Cert :_egfeg (_acgcc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_egfeg (_acgcc .Get ("\u004f\u0043\u0053\u0050")),CRL :_egfeg (_acgcc .Get ("\u0043\u0052\u004c")),TU :_gaeb ,TS :_ggdc };};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dcgdf *Image )GetParamsDict ()*_fe .PdfObjectDictionary {_cfebc :=_fe .MakeDict ();_cfebc .Set ("\u0057\u0069\u0064t\u0068",_fe .MakeInteger (_dcgdf .Width ));_cfebc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fe .MakeInteger (_dcgdf .Height ));
_cfebc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fe .MakeInteger (int64 (_dcgdf .ColorComponents )));_cfebc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fe .MakeInteger (_dcgdf .BitsPerComponent ));
return _cfebc ;};func (_afbcd *PdfWriter )checkLicense ()error {_baedd :=_cbb .GetLicenseKey ();if (_baedd ==nil ||!_baedd .IsLicensed ())&&!_aadca {_a .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_a .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cg .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_ebbe *PdfPage )GetContentStreams ()([]string ,error ){_gdfab :=_ebbe .GetContentStreamObjs ();var _faecb []string ;for _ ,_ffggg :=range _gdfab {_caeb ,_fged :=_dfbce (_ffggg );if _fged !=nil {return nil ,_fged ;};_faecb =append (_faecb ,_caeb );
};return _faecb ,nil ;};func (_fbgc *DSS )generateHashMap (_fbab []*_fe .PdfObjectStream )(map[string ]*_fe .PdfObjectStream ,error ){_agad :=map[string ]*_fe .PdfObjectStream {};for _ ,_abbfb :=range _fbab {_dagba ,_ebaf :=_fe .DecodeStream (_abbfb );
if _ebaf !=nil {return nil ,_ebaf ;};_dgba ,_ebaf :=_cccgcf (_dagba );if _ebaf !=nil {return nil ,_ebaf ;};_agad [string (_dgba )]=_abbfb ;};return _agad ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cebf *PdfReader )IsEncrypted ()(bool ,error ){return _cebf ._fbega .IsEncrypted ()};func _ecdc ()string {_bdea :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _cbed _bea .Buffer ;for _fedee :=0;_fedee < 6;_fedee ++{_cbed .WriteRune (rune (_bdea [_d .Intn (len (_bdea ))]));};return _cbed .String ();};func (_fcfgdg *PdfWriter )setDocumentIDs (_aceb ,_effgc string ){_fcfgdg ._eecbce =_fe .MakeArray (_fe .MakeHexString (_aceb ),_fe .MakeHexString (_effgc ));
};func (_gceg *PdfWriter )updateObjectNumbers (){_eagc :=_gceg .ObjNumOffset ;_aeaf :=0;for _ ,_acbabf :=range _gceg ._cfabe {_cegce :=int64 (_aeaf +1+_eagc );_cbcfe :=true ;if _gceg ._ccbff {if _ebbab ,_bcdca :=_gceg ._bbgfff [_acbabf ];_bcdca {_cegce =_ebbab ;
_cbcfe =false ;};};switch _aaafd :=_acbabf .(type ){case *_fe .PdfIndirectObject :_aaafd .ObjectNumber =_cegce ;_aaafd .GenerationNumber =0;case *_fe .PdfObjectStream :_aaafd .ObjectNumber =_cegce ;_aaafd .GenerationNumber =0;case *_fe .PdfObjectStreams :_aaafd .ObjectNumber =_cegce ;
_aaafd .GenerationNumber =0;default:_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_aaafd );continue ;
};if _cbcfe {_aeaf ++;};};_afbc :=func (_cbefd _fe .PdfObject )int64 {switch _cabc :=_cbefd .(type ){case *_fe .PdfIndirectObject :return _cabc .ObjectNumber ;case *_fe .PdfObjectStream :return _cabc .ObjectNumber ;case *_fe .PdfObjectStreams :return _cabc .ObjectNumber ;
};return 0;};_af .SliceStable (_gceg ._cfabe ,func (_cefd ,_cafbec int )bool {return _afbc (_gceg ._cfabe [_cefd ])< _afbc (_gceg ._cfabe [_cafbec ])});};

// SetContentStream sets the pattern cell's content stream.
func (_ggeba *PdfTilingPattern )SetContentStream (content []byte ,encoder _fe .StreamEncoder )error {_fafce ,_fddab :=_ggeba ._deebb .(*_fe .PdfObjectStream );if !_fddab {_beag .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggeba ._deebb );
return _fe .ErrTypeError ;};if encoder ==nil {encoder =_fe .NewRawEncoder ();};_ccbfb :=_fafce .PdfObjectDictionary ;_bdbbg :=encoder .MakeStreamDict ();_ccbfb .Merge (_bdbbg );_bcfa ,_befccb :=encoder .EncodeBytes (content );if _befccb !=nil {return _befccb ;
};_ccbfb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_bcfa ))));_fafce .Stream =_bcfa ;return nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_abde *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_abde .Base .GetNumComponents ();if N < 1{return Image {},_a .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_bgcbd :=_gege .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._fdcdb ,img ._abeag );_efbb :=_fad .NewReader (img .getBase ());_fegd :=_fad .NewWriter (_bgcbd );var (_ddeb uint32 ;_efffb int ;_ddebd error ;);for {_ddeb ,_ddebd =_efbb .ReadSample ();
if _ddebd ==_ecf .EOF {break ;}else if _ddebd !=nil {return img ,_ddebd ;};_efffb =int (_ddeb );_beag .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_efffb ,N ,len (_abde ._cfbf ));
if (_efffb +1)*N > len (_abde ._cfbf ){_efffb =len (_abde ._cfbf )/N -1;_beag .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_efffb );if _efffb < 0{_beag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _abag :=_efffb *N ;_abag < (_efffb +1)*N ;_abag ++{if _ddebd =_fegd .WriteSample (uint32 (_abde ._cfbf [_abag ]));_ddebd !=nil {return img ,_ddebd ;};};};return _abde .Base .ImageToRGB (_bfcga (&_bgcbd ));};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fe .PdfObjectArray ;Matrix *_fe .PdfObjectArray ;Function []PdfFunction ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gggc *BorderStyle )GetPdfName ()string {switch *_gggc {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};func _ccafd (_gcgbc *_fe .PdfObjectDictionary )(*PdfFieldButton ,error ){_cgcd :=&PdfFieldButton {};_cgcd .PdfField =NewPdfField ();_cgcd .PdfField .SetContext (_cgcd );_cgcd .Opt ,_ =_fe .GetArray (_gcgbc .Get ("\u004f\u0070\u0074"));_bgge :=NewPdfAnnotationWidget ();
_bgge .A ,_ =_fe .GetDict (_gcgbc .Get ("\u0041"));_bgge .AP ,_ =_fe .GetDict (_gcgbc .Get ("\u0041\u0050"));_bgge .SetContext (_cgcd );_cgcd .PdfField .Annotations =append (_cgcd .PdfField .Annotations ,_bgge );return _cgcd ,nil ;};

// Val returns the value of the color.
func (_agdb *PdfColorCalGray )Val ()float64 {return float64 (*_agdb )};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_fed :=NewPdfAnnotation ();_dce :=&PdfAnnotationText {};_dce .PdfAnnotation =_fed ;_dce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fed .SetContext (_dce );return _dce ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fe .PdfObject ;Name _fe .PdfObject ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fe .PdfObject ;FontFamily _fe .PdfObject ;FontStretch _fe .PdfObject ;FontWeight _fe .PdfObject ;Flags _fe .PdfObject ;FontBBox _fe .PdfObject ;ItalicAngle _fe .PdfObject ;Ascent _fe .PdfObject ;Descent _fe .PdfObject ;
Leading _fe .PdfObject ;CapHeight _fe .PdfObject ;XHeight _fe .PdfObject ;StemV _fe .PdfObject ;StemH _fe .PdfObject ;AvgWidth _fe .PdfObject ;MaxWidth _fe .PdfObject ;MissingWidth _fe .PdfObject ;FontFile _fe .PdfObject ;FontFile2 _fe .PdfObject ;FontFile3 _fe .PdfObject ;
CharSet _fe .PdfObject ;_edbfa int ;_cbde float64 ;*fontFile ;_faecg *_fg .TtfType ;

// Additional entries for CIDFonts
Style _fe .PdfObject ;Lang _fe .PdfObject ;FD _fe .PdfObject ;CIDSet _fe .PdfObject ;_ceeg *_fe .PdfIndirectObject ;};

// Fill populates `form` with values provided by `provider`.
func (_ffec *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ffec .fill (provider ,nil )};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_dgca :=&PdfFilespec {};_dgca ._gcbg =_fe .MakeIndirectObject (_fe .MakeDict ());return _dgca ;};func (_bcg *PdfReader )newPdfActionSubmitFormFromDict (_age *_fe .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_agea ,_beb :=_feba (_age .Get ("\u0046"));
if _beb !=nil {return nil ,_beb ;};return &PdfActionSubmitForm {F :_agea ,Fields :_age .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_age .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffe *PdfAnnotationPolygon )ToPdfObject ()_fe .PdfObject {_ffe .PdfAnnotation .ToPdfObject ();_dfb :=_ffe ._egb ;_gfec :=_dfb .PdfObject .(*_fe .PdfObjectDictionary );_ffe .PdfAnnotationMarkup .appendToPdfDictionary (_gfec );_gfec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_gfec .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ffe .Vertices );_gfec .SetIfNotNil ("\u004c\u0045",_ffe .LE );_gfec .SetIfNotNil ("\u0042\u0053",_ffe .BS );_gfec .SetIfNotNil ("\u0049\u0043",_ffe .IC );_gfec .SetIfNotNil ("\u0042\u0045",_ffe .BE );
_gfec .SetIfNotNil ("\u0049\u0054",_ffe .IT );_gfec .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ffe .Measure );return _dfb ;};func (_gefb *PdfReader )newPdfAnnotationFromIndirectObject (_daa *_fe .PdfIndirectObject )(*PdfAnnotation ,error ){_fbc ,_bedf :=_daa .PdfObject .(*_fe .PdfObjectDictionary );
if !_bedf {return nil ,_a .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gefb ._befdc .GetModelFromPrimitive (_fbc );model !=nil {_cece ,_fecf :=model .(*PdfAnnotation );if !_fecf {return nil ,_a .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _cece ,nil ;};_dge :=&PdfAnnotation {};_dge ._egb =_daa ;_gefb ._befdc .Register (_fbc ,_dge );if _ffcd :=_fbc .Get ("\u0054\u0079\u0070\u0065");_ffcd !=nil {_cfbb ,_bbe :=_ffcd .(*_fe .PdfObjectName );if !_bbe {_beag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ffcd );
}else {if *_cfbb !="\u0041\u006e\u006eo\u0074"{_beag .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_cfbb );};};
};if _eeeb :=_fbc .Get ("\u0052\u0065\u0063\u0074");_eeeb !=nil {_dge .Rect =_eeeb ;};if _bad :=_fbc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bad !=nil {_dge .Contents =_bad ;};if _gbd :=_fbc .Get ("\u0050");_gbd !=nil {_dge .P =_gbd ;
};if _gcg :=_fbc .Get ("\u004e\u004d");_gcg !=nil {_dge .NM =_gcg ;};if _gagcc :=_fbc .Get ("\u004d");_gagcc !=nil {_dge .M =_gagcc ;};if _bcdb :=_fbc .Get ("\u0046");_bcdb !=nil {_dge .F =_bcdb ;};if _egbc :=_fbc .Get ("\u0041\u0050");_egbc !=nil {_dge .AP =_egbc ;
};if _ddge :=_fbc .Get ("\u0041\u0053");_ddge !=nil {_dge .AS =_ddge ;};if _fab :=_fbc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fab !=nil {_dge .Border =_fab ;};if _egffg :=_fbc .Get ("\u0043");_egffg !=nil {_dge .C =_egffg ;};if _ddag :=_fbc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_ddag !=nil {_dge .StructParent =_ddag ;};if _bgac :=_fbc .Get ("\u004f\u0043");_bgac !=nil {_dge .OC =_bgac ;};_cfda :=_fbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _cfda ==nil {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_dge ._acg =nil ;return _dge ,nil ;};_gbf ,_fde :=_cfda .(*_fe .PdfObjectName );if !_fde {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cfda );
return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_cfda );};switch *_gbf {case "\u0054\u0065\u0078\u0074":_cdgd ,_bdaf :=_gefb .newPdfAnnotationTextFromDict (_fbc );
if _bdaf !=nil {return nil ,_bdaf ;};_cdgd .PdfAnnotation =_dge ;_dge ._acg =_cdgd ;return _dge ,nil ;case "\u004c\u0069\u006e\u006b":_ggg ,_gaaga :=_gefb .newPdfAnnotationLinkFromDict (_fbc );if _gaaga !=nil {return nil ,_gaaga ;};_ggg .PdfAnnotation =_dge ;
_dge ._acg =_ggg ;return _dge ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_afb ,_gge :=_gefb .newPdfAnnotationFreeTextFromDict (_fbc );if _gge !=nil {return nil ,_gge ;};_afb .PdfAnnotation =_dge ;_dge ._acg =_afb ;return _dge ,nil ;case "\u004c\u0069\u006e\u0065":_bgc ,_efec :=_gefb .newPdfAnnotationLineFromDict (_fbc );
if _efec !=nil {return nil ,_efec ;};_bgc .PdfAnnotation =_dge ;_dge ._acg =_bgc ;_beag .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dge ,_dge );
_beag .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_bgc ,_bgc );_beag .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_bgc .PdfAnnotationMarkup ,_bgc .PdfAnnotationMarkup );
return _dge ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_beagc ,_dad :=_gefb .newPdfAnnotationSquareFromDict (_fbc );if _dad !=nil {return nil ,_dad ;};_beagc .PdfAnnotation =_dge ;_dge ._acg =_beagc ;return _dge ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ggbd ,_bfbe :=_gefb .newPdfAnnotationCircleFromDict (_fbc );
if _bfbe !=nil {return nil ,_bfbe ;};_ggbd .PdfAnnotation =_dge ;_dge ._acg =_ggbd ;return _dge ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ccbf ,_fcc :=_gefb .newPdfAnnotationPolygonFromDict (_fbc );if _fcc !=nil {return nil ,_fcc ;};_ccbf .PdfAnnotation =_dge ;
_dge ._acg =_ccbf ;return _dge ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_ccg ,_cae :=_gefb .newPdfAnnotationPolyLineFromDict (_fbc );if _cae !=nil {return nil ,_cae ;};_ccg .PdfAnnotation =_dge ;_dge ._acg =_ccg ;return _dge ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ebd ,_gace :=_gefb .newPdfAnnotationHighlightFromDict (_fbc );if _gace !=nil {return nil ,_gace ;};_ebd .PdfAnnotation =_dge ;_dge ._acg =_ebd ;return _dge ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gdf ,_dag :=_gefb .newPdfAnnotationUnderlineFromDict (_fbc );
if _dag !=nil {return nil ,_dag ;};_gdf .PdfAnnotation =_dge ;_dge ._acg =_gdf ;return _dge ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_aac ,_acba :=_gefb .newPdfAnnotationSquigglyFromDict (_fbc );if _acba !=nil {return nil ,_acba ;};
_aac .PdfAnnotation =_dge ;_dge ._acg =_aac ;return _dge ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bdae ,_eca :=_gefb .newPdfAnnotationStrikeOut (_fbc );if _eca !=nil {return nil ,_eca ;};_bdae .PdfAnnotation =_dge ;_dge ._acg =_bdae ;
return _dge ,nil ;case "\u0043\u0061\u0072e\u0074":_fba ,_acfb :=_gefb .newPdfAnnotationCaretFromDict (_fbc );if _acfb !=nil {return nil ,_acfb ;};_fba .PdfAnnotation =_dge ;_dge ._acg =_fba ;return _dge ,nil ;case "\u0053\u0074\u0061m\u0070":_febad ,_ega :=_gefb .newPdfAnnotationStampFromDict (_fbc );
if _ega !=nil {return nil ,_ega ;};_febad .PdfAnnotation =_dge ;_dge ._acg =_febad ;return _dge ,nil ;case "\u0049\u006e\u006b":_cfdd ,_gceb :=_gefb .newPdfAnnotationInkFromDict (_fbc );if _gceb !=nil {return nil ,_gceb ;};_cfdd .PdfAnnotation =_dge ;_dge ._acg =_cfdd ;
return _dge ,nil ;case "\u0050\u006f\u0070u\u0070":_gefe ,_gee :=_gefb .newPdfAnnotationPopupFromDict (_fbc );if _gee !=nil {return nil ,_gee ;};_gefe .PdfAnnotation =_dge ;_dge ._acg =_gefe ;return _dge ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ecee ,_ggd :=_gefb .newPdfAnnotationFileAttachmentFromDict (_fbc );
if _ggd !=nil {return nil ,_ggd ;};_ecee .PdfAnnotation =_dge ;_dge ._acg =_ecee ;return _dge ,nil ;case "\u0053\u006f\u0075n\u0064":_cfbg ,_dga :=_gefb .newPdfAnnotationSoundFromDict (_fbc );if _dga !=nil {return nil ,_dga ;};_cfbg .PdfAnnotation =_dge ;
_dge ._acg =_cfbg ;return _dge ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_eafe ,_eecc :=_gefb .newPdfAnnotationRichMediaFromDict (_fbc );if _eecc !=nil {return nil ,_eecc ;};_eafe .PdfAnnotation =_dge ;_dge ._acg =_eafe ;return _dge ,nil ;
case "\u004d\u006f\u0076i\u0065":_dbfd ,_cba :=_gefb .newPdfAnnotationMovieFromDict (_fbc );if _cba !=nil {return nil ,_cba ;};_dbfd .PdfAnnotation =_dge ;_dge ._acg =_dbfd ;return _dge ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_eeb ,_bbb :=_gefb .newPdfAnnotationScreenFromDict (_fbc );
if _bbb !=nil {return nil ,_bbb ;};_eeb .PdfAnnotation =_dge ;_dge ._acg =_eeb ;return _dge ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_ccbg ,_ggfe :=_gefb .newPdfAnnotationWidgetFromDict (_fbc );if _ggfe !=nil {return nil ,_ggfe ;};_ccbg .PdfAnnotation =_dge ;
_dge ._acg =_ccbg ;return _dge ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bdgd ,_gbag :=_gefb .newPdfAnnotationPrinterMarkFromDict (_fbc );if _gbag !=nil {return nil ,_gbag ;};_bdgd .PdfAnnotation =_dge ;_dge ._acg =_bdgd ;
return _dge ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_eda ,_gdgc :=_gefb .newPdfAnnotationTrapNetFromDict (_fbc );if _gdgc !=nil {return nil ,_gdgc ;};_eda .PdfAnnotation =_dge ;_dge ._acg =_eda ;return _dge ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_fgdbf ,_bbba :=_gefb .newPdfAnnotationWatermarkFromDict (_fbc );
if _bbba !=nil {return nil ,_bbba ;};_fgdbf .PdfAnnotation =_dge ;_dge ._acg =_fgdbf ;return _dge ,nil ;case "\u0033\u0044":_acde ,_aegg :=_gefb .newPdfAnnotation3DFromDict (_fbc );if _aegg !=nil {return nil ,_aegg ;};_acde .PdfAnnotation =_dge ;_dge ._acg =_acde ;
return _dge ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_cceb ,_fbcb :=_gefb .newPdfAnnotationProjectionFromDict (_fbc );if _fbcb !=nil {return nil ,_fbcb ;};_cceb .PdfAnnotation =_dge ;_dge ._acg =_cceb ;return _dge ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_daga ,_bgd :=_gefb .newPdfAnnotationRedactFromDict (_fbc );if _bgd !=nil {return nil ,_bgd ;};_daga .PdfAnnotation =_dge ;_dge ._acg =_daga ;return _dge ,nil ;};_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gbf );
return nil ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_faeb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _faeb .Alternate ==nil {_beag .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _faeb .N ==1{_beag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_gcfe :=NewPdfColorspaceDeviceGray ();return _gcfe .ColorToRGB (color );}else if _faeb .N ==3{_beag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _faeb .N ==4{_beag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cebg :=NewPdfColorspaceDeviceCMYK ();return _cebg .ColorToRGB (color );}else {return nil ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_beag .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_faeb );
return _faeb .Alternate .ColorToRGB (color );};func (_egce *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _fcbfg :=_egce ._eaaeg ;_fcbfg !=nil {return _fcbfg ;};return _egce ._cdged ;};func (_bfdae *PdfReader )resolveReference (_cffd *_fe .PdfObjectReference )(_fe .PdfObject ,bool ,error ){_cgccg ,_ebegg :=_bfdae ._fbega .ObjCache [int (_cffd .ObjectNumber )];
if !_ebegg {_beag .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cffd );_gfbab ,_afcgg :=_bfdae ._fbega .LookupByReference (*_cffd );if _afcgg !=nil {return nil ,false ,_afcgg ;};_bfdae ._fbega .ObjCache [int (_cffd .ObjectNumber )]=_gfbab ;
return _gfbab ,false ,nil ;};return _cgccg ,true ,nil ;};func _cgbda (_eabae StdFontName )(pdfFontSimple ,error ){_dcgff ,_ccga :=_fg .NewStdFontByName (_eabae );if !_ccga {return pdfFontSimple {},ErrFontNotSupported ;};_eabe :=_bdbe (_dcgff );return _eabe ,nil ;
};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_faad *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_febd ,_eeeg :=color .(*PdfColorDeviceCMYK );if !_eeeg {_beag .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaebg :=_febd .C ();_fbac :=_febd .M ();_becg :=_febd .Y ();_cdbd :=_febd .K ();_aaebg =_aaebg *(1-_cdbd )+_cdbd ;_fbac =_fbac *(1-_cdbd )+_cdbd ;
_becg =_becg *(1-_cdbd )+_cdbd ;_fefe :=1-_aaebg ;_afae :=1-_fbac ;_eaegb :=1-_becg ;return NewPdfColorDeviceRGB (_fefe ,_afae ,_eaegb ),nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_eaa :=NewPdfAnnotation ();_cdg :=&PdfAnnotationCaret {};_cdg .PdfAnnotation =_eaa ;_cdg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaa .SetContext (_cdg );return _cdg ;};func (_bdee *PdfReader )newPdfAcroFormFromDict (_gddfe *_fe .PdfIndirectObject ,_gabeb *_fe .PdfObjectDictionary )(*PdfAcroForm ,error ){_aaaf :=NewPdfAcroForm ();
if _gddfe !=nil {_aaaf ._faagg =_gddfe ;_gddfe .PdfObject =_fe .MakeDict ();};if _ecfg :=_gabeb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_ecfg !=nil {_bebg ,_bcbga :=_fe .GetArray (_ecfg );if !_bcbga {return nil ,_a .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ecfg );
};var _bgeef []*PdfField ;for _ ,_bbeg :=range _bebg .Elements (){_bbeae ,_dgdd :=_fe .GetIndirect (_bbeg );if !_dgdd {if _ ,_gacga :=_bbeg .(*_fe .PdfObjectNull );_gacga {_beag .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_beag .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bbeg );
return nil ,_a .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cbafe ,_feagde :=_bdee .newPdfFieldFromIndirectObject (_bbeae ,nil );
if _feagde !=nil {return nil ,_feagde ;};_beag .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_cbafe );_bgeef =append (_bgeef ,_cbafe );};_aaaf .Fields =&_bgeef ;};if _gcbb :=_gabeb .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_gcbb !=nil {_effed ,_agcd :=_fe .GetBool (_gcbb );if _agcd {_aaaf .NeedAppearances =_effed ;}else {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_gcbb );
};};if _gcebe :=_gabeb .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_gcebe !=nil {_ebdff ,_gccce :=_fe .GetInt (_gcebe );if _gccce {_aaaf .SigFlags =_ebdff ;}else {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcebe );
};};if _fdbfa :=_gabeb .Get ("\u0043\u004f");_fdbfa !=nil {_bgaba ,_gbdde :=_fe .GetArray (_fdbfa );if _gbdde {_aaaf .CO =_bgaba ;}else {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fdbfa );
};};if _fgcef :=_gabeb .Get ("\u0044\u0052");_fgcef !=nil {if _ecdgc ,_agfc :=_fe .GetDict (_fgcef );_agfc {_ebeb ,_egac :=NewPdfPageResourcesFromDict (_ecdgc );if _egac !=nil {_beag .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_egac );
return nil ,_egac ;};_aaaf .DR =_ebeb ;}else {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fgcef );};};if _fafge :=_gabeb .Get ("\u0044\u0041");
_fafge !=nil {_dbef ,_fbed :=_fe .GetString (_fafge );if _fbed {_aaaf .DA =_dbef ;}else {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fafge );
};};if _eabc :=_gabeb .Get ("\u0051");_eabc !=nil {_dffd ,_ddddg :=_fe .GetInt (_eabc );if _ddddg {_aaaf .Q =_dffd ;}else {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eabc );
};};if _bfged :=_gabeb .Get ("\u0058\u0046\u0041");_bfged !=nil {_aaaf .XFA =_bfged ;};_aaaf .ToPdfObject ();return _aaaf ,nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_beaec *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gaccb :=RC4_128bit ;if options !=nil {_gaccb =options .Algorithm ;};_faegb :=_aff .PermOwner ;if options !=nil {_faegb =options .Permissions ;};var _ebcfe _ag .Filter ;
switch _gaccb {case RC4_128bit :_ebcfe =_ag .NewFilterV2 (16);case AES_128bit :_ebcfe =_ag .NewFilterAESV2 ();case AES_256bit :_ebcfe =_ag .NewFilterAESV3 ();default:return _a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_eeag ,_eeebe ,_eeaddd :=_fe .PdfCryptNewEncrypt (_ebcfe ,userPass ,ownerPass ,_faegb );if _eeaddd !=nil {return _eeaddd ;};_beaec ._fddf =_eeag ;if _eeebe .Major !=0{_beaec .SetVersion (_eeebe .Major ,_eeebe .Minor );};_beaec ._ggbbe =_eeebe .Encrypt ;
_beaec ._ggfeag ,_beaec ._fbegc =_eeebe .ID0 ,_eeebe .ID1 ;_edefb :=_fe .MakeIndirectObject (_eeebe .Encrypt );_beaec ._eeebf =_edefb ;_beaec .addObject (_edefb );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bdfb *PdfActionGoTo3DView )ToPdfObject ()_fe .PdfObject {_bdfb .PdfAction .ToPdfObject ();_bfgdc :=_bdfb ._bgfg ;_bce :=_bfgdc .PdfObject .(*_fe .PdfObjectDictionary );_bce .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoTo3DView )));_bce .SetIfNotNil ("\u0054\u0041",_bdfb .TA );
_bce .SetIfNotNil ("\u0056",_bdfb .V );return _bfgdc ;};type pdfFontType0 struct{fontCommon ;_aabc *_fe .PdfIndirectObject ;_gbdda _aee .TextEncoder ;Encoding _fe .PdfObject ;DescendantFont *PdfFont ;_feaad *_bf .CMap ;};func _ccggg (_gbecg _fe .PdfObject )(map[_aee .CharCode ]float64 ,error ){if _gbecg ==nil {return nil ,nil ;
};_baade ,_gdfgd :=_fe .GetArray (_gbecg );if !_gdfgd {return nil ,nil ;};_cffc :=map[_aee .CharCode ]float64 {};_edgb :=_baade .Len ();for _ceaa :=0;_ceaa < _edgb -1;_ceaa ++{_fdafa :=_fe .TraceToDirectObject (_baade .Get (_ceaa ));_fcgd ,_gega :=_fe .GetIntVal (_fdafa );
if !_gega {return nil ,_a .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ceaa ,_fdafa );};_ceaa ++;if _ceaa > _edgb -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_baade );
};_feef :=_fe .TraceToDirectObject (_baade .Get (_ceaa ));switch _feef .(type ){case *_fe .PdfObjectArray :_dcbgf ,_ :=_fe .GetArray (_feef );if _efebae ,_bcbgd :=_dcbgf .ToFloat64Array ();_bcbgd ==nil {for _gbcde :=0;_gbcde < len (_efebae );_gbcde ++{_cffc [_aee .CharCode (_fcgd +_gbcde )]=_efebae [_gbcde ];
};}else {return nil ,_a .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ceaa ,_feef );};case *_fe .PdfObjectInteger :_bgab ,_dbab :=_fe .GetIntVal (_feef );
if !_dbab {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ceaa ,_feef );};_ceaa ++;if _ceaa > _edgb -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_baade );
};_ageb :=_baade .Get (_ceaa );_aagff ,_feea :=_fe .GetNumberAsFloat (_ageb );if _feea !=nil {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ceaa ,_ageb );
};for _bgfcd :=_fcgd ;_bgfcd <=_bgab ;_bgfcd ++{_cffc [_aee .CharCode (_bgfcd )]=_aagff ;};default:return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ceaa ,_feef );
};};return _cffc ,nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dec _ecf .ReadSeeker ;_dabd *_fe .PdfParser ;_agfb *PdfReader ;Reader *PdfReader ;_ffbc []*PdfPage ;_bdge *PdfAcroForm ;_eaeg *DSS ;_beebe _fe .XrefTable ;_dedg int64 ;_afga int ;_ebdd []_fe .PdfObject ;_bfga map[_fe .PdfObject ]struct{};
_fced map[_fe .PdfObject ]int64 ;_gaaa map[_fe .PdfObject ]struct{};_fcbf map[_fe .PdfObject ]struct{};_dgcb int64 ;_fgbc bool ;};var _cfce =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_eead *PdfAnnotationMarkup )appendToPdfDictionary (_dffb *_fe .PdfObjectDictionary ){_dffb .SetIfNotNil ("\u0054",_eead .T );if _eead .Popup !=nil {_dffb .Set ("\u0050\u006f\u0070u\u0070",_eead .Popup .ToPdfObject ());};_dffb .SetIfNotNil ("\u0043\u0041",_eead .CA );
_dffb .SetIfNotNil ("\u0052\u0043",_eead .RC );_dffb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eead .CreationDate );_dffb .SetIfNotNil ("\u0049\u0052\u0054",_eead .IRT );_dffb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_eead .Subj );
_dffb .SetIfNotNil ("\u0052\u0054",_eead .RT );_dffb .SetIfNotNil ("\u0049\u0054",_eead .IT );_dffb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_eead .ExData );};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_acgfc *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _acgfc .RunesToCharcodeBytes ([]rune (str ));};func (_aceab *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _aceab ._eaaeg };

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ColorToRGB converts a CalRGB color to an RGB color.
func (_adba *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbbeb ,_gdeb :=color .(*PdfColorCalRGB );if !_gdeb {_beag .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdbc :=_cbbeb .A ();_fdcb :=_cbbeb .B ();_adeae :=_cbbeb .C ();X :=_adba .Matrix [0]*_fa .Pow (_gdbc ,_adba .Gamma [0])+_adba .Matrix [3]*_fa .Pow (_fdcb ,_adba .Gamma [1])+_adba .Matrix [6]*_fa .Pow (_adeae ,_adba .Gamma [2]);
Y :=_adba .Matrix [1]*_fa .Pow (_gdbc ,_adba .Gamma [0])+_adba .Matrix [4]*_fa .Pow (_fdcb ,_adba .Gamma [1])+_adba .Matrix [7]*_fa .Pow (_adeae ,_adba .Gamma [2]);Z :=_adba .Matrix [2]*_fa .Pow (_gdbc ,_adba .Gamma [0])+_adba .Matrix [5]*_fa .Pow (_fdcb ,_adba .Gamma [1])+_adba .Matrix [8]*_fa .Pow (_adeae ,_adba .Gamma [2]);
_dage :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fdcfc :=-0.969256*X +1.875992*Y +0.041556*Z ;_gdae :=0.055648*X +-0.204043*Y +1.057311*Z ;_dage =_fa .Min (_fa .Max (_dage ,0),1.0);_fdcfc =_fa .Min (_fa .Max (_fdcfc ,0),1.0);_gdae =_fa .Min (_fa .Max (_gdae ,0),1.0);
return NewPdfColorDeviceRGB (_dage ,_fdcfc ,_gdae ),nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_bbaa *PdfOutlineItem )GetContainingPdfObject ()_fe .PdfObject {return _bbaa ._agcb };

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_cdba :=PdfColorCalRGB {a ,b ,c };return &_cdba ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bedd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bedd .Alternate ==nil {if _bedd .N ==1{_afbe :=NewPdfColorspaceDeviceGray ();return _afbe .ColorFromFloats (vals );}else if _bedd .N ==3{_adbbe :=NewPdfColorspaceDeviceRGB ();
return _adbbe .ColorFromFloats (vals );}else if _bedd .N ==4{_ceff :=NewPdfColorspaceDeviceCMYK ();return _ceff .ColorFromFloats (vals );}else {return nil ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bedd .Alternate .ColorFromFloats (vals );};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fe .PdfObjectStream )(*XObjectForm ,error ){_dadf :=&XObjectForm {};_dadf ._edaef =stream ;_gaacc :=*(stream .PdfObjectDictionary );_gdbca ,_ebcbee :=_fe .NewEncoderFromStream (stream );if _ebcbee !=nil {return nil ,_ebcbee ;
};_dadf .Filter =_gdbca ;if _afeba :=_gaacc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_afeba !=nil {_ecdec ,_facee :=_afeba .(*_fe .PdfObjectName );if !_facee {return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_ecdec !="\u0046\u006f\u0072\u006d"{_beag .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _gacbdb :=_gaacc .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_gacbdb !=nil {_dadf .FormType =_gacbdb ;};if _adbg :=_gaacc .Get ("\u0042\u0042\u006f\u0078");_adbg !=nil {_dadf .BBox =_adbg ;};if _dcdf :=_gaacc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_dcdf !=nil {_dadf .Matrix =_dcdf ;};if _abbee :=_gaacc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_abbee !=nil {_abbee =_fe .TraceToDirectObject (_abbee );_gebaa ,_gbgfa :=_abbee .(*_fe .PdfObjectDictionary );if !_gbgfa {_beag .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fe .ErrTypeError ;};_ddedd ,_egfgg :=NewPdfPageResourcesFromDict (_gebaa );if _egfgg !=nil {_beag .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_egfgg ;};_dadf .Resources =_ddedd ;_beag .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_dadf .Resources );};_dadf .Group =_gaacc .Get ("\u0047\u0072\u006fu\u0070");_dadf .Ref =_gaacc .Get ("\u0052\u0065\u0066");
_dadf .MetaData =_gaacc .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_dadf .PieceInfo =_gaacc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dadf .LastModified =_gaacc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_dadf .StructParent =_gaacc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dadf .StructParents =_gaacc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_dadf .OPI =_gaacc .Get ("\u004f\u0050\u0049");
_dadf .OC =_gaacc .Get ("\u004f\u0043");_dadf .Name =_gaacc .Get ("\u004e\u0061\u006d\u0065");_dadf .Stream =stream .Stream ;return _dadf ,nil ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_faada :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_faada .N =N ;return _faada ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_bcdba *PdfFont )BaseFont ()string {return _bcdba .baseFields ()._agee };

// Items returns all children outline items.
func (_faeea *Outline )Items ()[]*OutlineItem {return _faeea .Entries };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_affe interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_ebde *PdfAppender )UpdateObject (obj _fe .PdfObject ){_ebde .replaceObject (obj ,obj );if _ ,_dgfc :=_ebde ._bfga [obj ];!_dgfc {_ebde ._ebdd =append (_ebde ._ebdd ,obj );_ebde ._bfga [obj ]=struct{}{};};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ggddd pdfFontType0 )GetCharMetrics (code _aee .CharCode )(_fg .CharMetrics ,bool ){if _ggddd .DescendantFont ==nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ggddd );
return _fg .CharMetrics {},false ;};return _ggddd .DescendantFont .GetCharMetrics (code );};func _beaa (_egcd _fe .PdfObject )(*PdfColorspaceICCBased ,error ){_dggb :=&PdfColorspaceICCBased {};if _fgdbeg ,_abfe :=_egcd .(*_fe .PdfIndirectObject );_abfe {_dggb ._gccg =_fgdbeg ;
};_egcd =_fe .TraceToDirectObject (_egcd );_fdaa ,_bcbc :=_egcd .(*_fe .PdfObjectArray );if !_bcbc {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdaa .Len ()!=2{return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_egcd =_fe .TraceToDirectObject (_fdaa .Get (0));_cgfd ,_bcbc :=_egcd .(*_fe .PdfObjectName );if !_bcbc {return nil ,_a .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cgfd !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_a .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_egcd =_fdaa .Get (1);
_cdgf ,_bcbc :=_fe .GetStream (_egcd );if !_bcbc {_beag .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_egcd );
return nil ,_a .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_aafe :=_cdgf .PdfObjectDictionary ;_ccdf ,_bcbc :=_aafe .Get ("\u004e").(*_fe .PdfObjectInteger );
if !_bcbc {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ccdf !=1&&*_ccdf !=3&&*_ccdf !=4{return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_dggb .N =int (*_ccdf );if _efde :=_aafe .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_efde !=nil {_aacfc ,_gdedf :=NewPdfColorspaceFromPdfObject (_efde );if _gdedf !=nil {return nil ,_gdedf ;};_dggb .Alternate =_aacfc ;};if _dfge :=_aafe .Get ("\u0052\u0061\u006eg\u0065");
_dfge !=nil {_dfge =_fe .TraceToDirectObject (_dfge );_gfaff ,_adeg :=_dfge .(*_fe .PdfObjectArray );if !_adeg {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _gfaff .Len ()!=2*_dggb .N {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_ecaga ,_bffd :=_gfaff .GetAsFloat64Slice ();if _bffd !=nil {return nil ,_bffd ;};_dggb .Range =_ecaga ;}else {_dggb .Range =make ([]float64 ,2*_dggb .N );for _cbee :=0;_cbee < _dggb .N ;_cbee ++{_dggb .Range [2*_cbee ]=0.0;_dggb .Range [2*_cbee +1]=1.0;
};};if _ccbb :=_aafe .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ccbb !=nil {_gcaaf ,_caab :=_ccbb .(*_fe .PdfObjectStream );if !_caab {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_dggb .Metadata =_gcaaf ;};_ddgb ,_bbgfc :=_fe .DecodeStream (_cdgf );if _bbgfc !=nil {return nil ,_bbgfc ;};_dggb .Data =_ddgb ;_dggb ._bdfce =_cdgf ;return _dggb ,nil ;};func _dgbf (_fcebd ,_fdag string )string {if _ca .Contains (_fcebd ,"\u002b"){_daaaa :=_ca .Split (_fcebd ,"\u002b");
if len (_daaaa )==2{_fcebd =_daaaa [1];};};return _fdag +"\u002b"+_fcebd ;};

// ToPdfObject converts the font to a PDF representation.
func (_abfee *pdfFontType3 )ToPdfObject ()_fe .PdfObject {if _abfee ._bgefa ==nil {_abfee ._bgefa =&_fe .PdfIndirectObject {};};_ffdgdf :=_abfee .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_abfee ._bgefa .PdfObject =_ffdgdf ;if _abfee .FirstChar !=nil {_ffdgdf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_abfee .FirstChar );
};if _abfee .LastChar !=nil {_ffdgdf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_abfee .LastChar );};if _abfee .Widths !=nil {_ffdgdf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_abfee .Widths );};if _abfee .Encoding !=nil {_ffdgdf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abfee .Encoding );
}else if _abfee ._gbaede !=nil {_dgdc :=_abfee ._gbaede .ToPdfObject ();if _dgdc !=nil {_ffdgdf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dgdc );};};if _abfee .FontBBox !=nil {_ffdgdf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_abfee .FontBBox );
};if _abfee .FontMatrix !=nil {_ffdgdf .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_abfee .FontMatrix );};if _abfee .CharProcs !=nil {_ffdgdf .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_abfee .CharProcs );};if _abfee .Resources !=nil {_ffdgdf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abfee .Resources );
};return _abfee ._bgefa ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_dbeee *PdfReader )GetNameDictionary ()(_fe .PdfObject ,error ){_aadcf :=_fe .ResolveReference (_dbeee ._gbbce .Get ("\u004e\u0061\u006de\u0073"));if _aadcf ==nil {return nil ,nil ;};if !_dbeee ._edeea {_gcagb :=_dbeee .traverseObjectData (_aadcf );
if _gcagb !=nil {return nil ,_gcagb ;};};return _aadcf ,nil ;};func (_cda *PdfReader )newPdfActionJavaScriptFromDict (_def *_fe .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_def .Get ("\u004a\u0053")},nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_afdce *PdfFieldButton )IsCheckbox ()bool {return _afdce .GetType ()==ButtonTypeCheckbox };

// Encoder returns the font's text encoder.
func (_gcgcc *PdfFont )Encoder ()_aee .TextEncoder {_eeee :=_gcgcc .actualFont ();if _eeee ==nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_gcgcc ._cdgee );
return nil ;};return _eeee .Encoder ();};func (_eag *PdfReader )newPdfActionHideFromDict (_gfa *_fe .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gfa .Get ("\u0054"),H :_gfa .Get ("\u0048")},nil ;};

// String returns a string representation of what flags are set.
func (_adcd FieldFlag )String ()string {_aeca :="";if _adcd ==FieldFlagClear {_aeca ="\u0043\u006c\u0065a\u0072";return _aeca ;};if _adcd &FieldFlagReadOnly > 0{_aeca +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _adcd &FieldFlagRequired > 0{_aeca +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _adcd &FieldFlagNoExport > 0{_aeca +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _adcd &FieldFlagNoToggleToOff > 0{_aeca +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _adcd &FieldFlagRadio > 0{_aeca +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _adcd &FieldFlagPushbutton > 0{_aeca +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _adcd &FieldFlagRadiosInUnision > 0{_aeca +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _adcd &FieldFlagMultiline > 0{_aeca +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _adcd &FieldFlagPassword > 0{_aeca +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _adcd &FieldFlagFileSelect > 0{_aeca +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _adcd &FieldFlagDoNotScroll > 0{_aeca +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _adcd &FieldFlagComb > 0{_aeca +="\u007c\u0043\u006fm\u0062";};if _adcd &FieldFlagRichText > 0{_aeca +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _adcd &FieldFlagDoNotSpellCheck > 0{_aeca +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _adcd &FieldFlagCombo > 0{_aeca +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _adcd &FieldFlagEdit > 0{_aeca +="\u007c\u0045\u0064i\u0074";};if _adcd &FieldFlagSort > 0{_aeca +="\u007c\u0053\u006fr\u0074";};if _adcd &FieldFlagMultiSelect > 0{_aeca +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _adcd &FieldFlagCommitOnSelChange > 0{_aeca +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ca .Trim (_aeca ,"\u007c");};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_afgd ,_gcee :=NewStandard14Font (basefont );if _gcee !=nil {panic (_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _afgd ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_gfd :=&PdfAction {};_gfd ._bgfg =_fe .MakeIndirectObject (_fe .MakeDict ());return _gfd ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_bgeg *PdfReader )newPdfActionSetOCGStateFromDict (_acef *_fe .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_acef .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_acef .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func (_egbceb *PdfWriter )copyObjects (){_cbdab :=make (map[_fe .PdfObject ]_fe .PdfObject );_feaee :=make ([]_fe .PdfObject ,0,len (_egbceb ._cfabe ));_cbgegc :=make (map[_fe .PdfObject ]struct{},len (_egbceb ._cfabe ));_daade :=make (map[_fe .PdfObject ]struct{});
for _ ,_gbbe :=range _egbceb ._cfabe {_acfcc :=_egbceb .copyObject (_gbbe ,_cbdab ,_daade ,false );if _ ,_acbda :=_daade [_gbbe ];_acbda {continue ;};_feaee =append (_feaee ,_acfcc );_cbgegc [_acfcc ]=struct{}{};};_egbceb ._cfabe =_feaee ;_egbceb ._ebfbf =_cbgegc ;
_egbceb ._fcdfd =_egbceb .copyObject (_egbceb ._fcdfd ,_cbdab ,nil ,false ).(*_fe .PdfIndirectObject );_egbceb ._edadg =_egbceb .copyObject (_egbceb ._edadg ,_cbdab ,nil ,false ).(*_fe .PdfIndirectObject );if _egbceb ._eeebf !=nil {_egbceb ._eeebf =_egbceb .copyObject (_egbceb ._eeebf ,_cbdab ,nil ,false ).(*_fe .PdfIndirectObject );
};if _egbceb ._ccbff {_cfbcca :=make (map[_fe .PdfObject ]int64 );for _baeafa ,_affg :=range _egbceb ._bbgfff {if _cegcf ,_gbdbc :=_cbdab [_baeafa ];_gbdbc {_cfbcca [_cegcf ]=_affg ;}else {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_egbceb ._bbgfff =_cfbcca ;};};

// ToPdfObject implements interface PdfModel.
func (_eggb *PdfFilespec )ToPdfObject ()_fe .PdfObject {_ccfa :=_eggb .getDict ();_ccfa .Clear ();_ccfa .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_ccfa .SetIfNotNil ("\u0046\u0053",_eggb .FS );
_ccfa .SetIfNotNil ("\u0046",_eggb .F );_ccfa .SetIfNotNil ("\u0055\u0046",_eggb .UF );_ccfa .SetIfNotNil ("\u0044\u004f\u0053",_eggb .DOS );_ccfa .SetIfNotNil ("\u004d\u0061\u0063",_eggb .Mac );_ccfa .SetIfNotNil ("\u0055\u006e\u0069\u0078",_eggb .Unix );
_ccfa .SetIfNotNil ("\u0049\u0044",_eggb .ID );_ccfa .SetIfNotNil ("\u0056",_eggb .V );_ccfa .SetIfNotNil ("\u0045\u0046",_eggb .EF );_ccfa .SetIfNotNil ("\u0052\u0046",_eggb .RF );_ccfa .SetIfNotNil ("\u0044\u0065\u0073\u0063",_eggb .Desc );_ccfa .SetIfNotNil ("\u0043\u0049",_eggb .CI );
return _eggb ._gcbg ;};

// ToPdfObject implements interface PdfModel.
func (_acd *PdfActionMovie )ToPdfObject ()_fe .PdfObject {_acd .PdfAction .ToPdfObject ();_dbac :=_acd ._bgfg ;_bfb :=_dbac .PdfObject .(*_fe .PdfObjectDictionary );_bfb .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeMovie )));_bfb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_acd .Annotation );
_bfb .SetIfNotNil ("\u0054",_acd .T );_bfb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_acd .Operation );return _dbac ;};func (_cabd *PdfReader )newPdfFieldFromIndirectObject (_gfcg *_fe .PdfIndirectObject ,_gegd *PdfField )(*PdfField ,error ){if _cabda ,_eagee :=_cabd ._befdc .GetModelFromPrimitive (_gfcg ).(*PdfField );
_eagee {return _cabda ,nil ;};_ebdc ,_aeeed :=_fe .GetDict (_gfcg );if !_aeeed {return nil ,_a .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_febag :=NewPdfField ();_febag ._beebc =_gfcg ;_febag ._beebc .PdfObject =_ebdc ;if _befac ,_eegg :=_fe .GetName (_ebdc .Get ("\u0046\u0054"));_eegg {_febag .FT =_befac ;};if _gegd !=nil {_febag .Parent =_gegd ;};_febag .T ,_ =_ebdc .Get ("\u0054").(*_fe .PdfObjectString );
_febag .TU ,_ =_ebdc .Get ("\u0054\u0055").(*_fe .PdfObjectString );_febag .TM ,_ =_ebdc .Get ("\u0054\u004d").(*_fe .PdfObjectString );_febag .Ff ,_ =_ebdc .Get ("\u0046\u0066").(*_fe .PdfObjectInteger );_febag .V =_ebdc .Get ("\u0056");_febag .DV =_ebdc .Get ("\u0044\u0056");
_febag .AA =_ebdc .Get ("\u0041\u0041");_aeecf :=_febag .FT ;if _aeecf ==nil &&_gegd !=nil {_aeecf =_gegd .FT ;};if _aeecf !=nil {switch *_aeecf {case "\u0054\u0078":_ageac ,_aaga :=_fecd (_ebdc );if _aaga !=nil {return nil ,_aaga ;};_ageac .PdfField =_febag ;
_febag ._bbdf =_ageac ;case "\u0043\u0068":_dbgad ,_dfagb :=_bdbc (_ebdc );if _dfagb !=nil {return nil ,_dfagb ;};_dbgad .PdfField =_febag ;_febag ._bbdf =_dbgad ;case "\u0042\u0074\u006e":_daaeg ,_accbf :=_ccafd (_ebdc );if _accbf !=nil {return nil ,_accbf ;
};_daaeg .PdfField =_febag ;_febag ._bbdf =_daaeg ;case "\u0053\u0069\u0067":_cedd ,_dgdb :=_cabd .newPdfFieldSignatureFromDict (_ebdc );if _dgdb !=nil {return nil ,_dgdb ;};_cedd .PdfField =_febag ;_febag ._bbdf =_cedd ;default:_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_febag .FT );
return nil ,_cg .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _eafbb ,_effb :=_fe .GetName (_ebdc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_effb {if *_eafbb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dfaf ,_faef :=_cabd .newPdfAnnotationFromIndirectObject (_gfcg );
if _faef !=nil {return nil ,_faef ;};_becf ,_eccb :=_dfaf .GetContext ().(*PdfAnnotationWidget );if !_eccb {return nil ,_cg .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_becf ._fgdb =_febag ;_becf .Parent =_febag ._beebc ;_febag .Annotations =append (_febag .Annotations ,_becf );return _febag ,nil ;};};_fbbc :=true ;if _bfbg ,_bgaf :=_fe .GetArray (_ebdc .Get ("\u004b\u0069\u0064\u0073"));_bgaf {_fedc :=make ([]*_fe .PdfIndirectObject ,0,_bfbg .Len ());
for _ ,_ecde :=range _bfbg .Elements (){_afeg ,_affcc :=_fe .GetIndirect (_ecde );if !_affcc {_dbgb ,_feaa :=_fe .GetStream (_ecde );if _feaa &&_dbgb .PdfObjectDictionary !=nil {_ecgaee ,_fcad :=_fe .GetNameVal (_dbgb .Get ("\u0054\u0079\u0070\u0065"));
if _fcad &&_ecgaee =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_beag .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cg .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_edbg ,_gfgb :=_fe .GetDict (_afeg );
if !_gfgb {return nil ,ErrTypeCheck ;};if _fbbc {_fbbc =!_adfdc (_edbg );};_fedc =append (_fedc ,_afeg );};for _ ,_agge :=range _fedc {if _fbbc {_bbea ,_gfdb :=_cabd .newPdfAnnotationFromIndirectObject (_agge );if _gfdb !=nil {_beag .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gfdb );
return nil ,_gfdb ;};_ddbaa ,_bddc :=_bbea ._acg .(*PdfAnnotationWidget );if !_bddc {return nil ,ErrTypeCheck ;};_ddbaa ._fgdb =_febag ;_febag .Annotations =append (_febag .Annotations ,_ddbaa );}else {_ecdg ,_bfdaf :=_cabd .newPdfFieldFromIndirectObject (_agge ,_febag );
if _bfdaf !=nil {_beag .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_bfdaf );return nil ,_bfdaf ;};_febag .Kids =append (_febag .Kids ,_ecdg );
};};};return _febag ,nil ;};func (_cbfga *PdfWriter )writeTrailer (_cggaf int ){_cbfga .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _ceggc :=0;_ceggc <=_cggaf ;{for ;_ceggc <=_cggaf ;_ceggc ++{_fcaeb ,_ffccc :=_cbfga ._cabdb [_ceggc ];if _ffccc &&(!_cbfga ._ccbff ||_cbfga ._ccbff &&(_fcaeb .Type ==1&&_fcaeb .Offset >=_cbfga ._agdca ||_fcaeb .Type ==0)){break ;
};};var _bcbe int ;for _bcbe =_ceggc +1;_bcbe <=_cggaf ;_bcbe ++{_eeedd ,_gbbg :=_cbfga ._cabdb [_bcbe ];if _gbbg &&(!_cbfga ._ccbff ||_cbfga ._ccbff &&(_eeedd .Type ==1&&_eeedd .Offset > _cbfga ._agdca )){continue ;};break ;};_decbbc :=_a .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ceggc ,_bcbe -_ceggc );
_cbfga .writeString (_decbbc );for _gcbgd :=_ceggc ;_gcbgd < _bcbe ;_gcbgd ++{_cgcdgg :=_cbfga ._cabdb [_gcbgd ];switch _cgcdgg .Type {case 0:_decbbc =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_cbfga .writeString (_decbbc );case 1:_decbbc =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_cgcdgg .Offset ,0);_cbfga .writeString (_decbbc );};};_ceggc =_bcbe +1;};_cfgee :=_fe .MakeDict ();_cfgee .Set ("\u0049\u006e\u0066\u006f",_cbfga ._fcdfd );
_cfgee .Set ("\u0052\u006f\u006f\u0074",_cbfga ._edadg );_cfgee .Set ("\u0053\u0069\u007a\u0065",_fe .MakeInteger (int64 (_cggaf +1)));if _cbfga ._ccbff &&_cbfga ._gfafe > 0{_cfgee .Set ("\u0050\u0072\u0065\u0076",_fe .MakeInteger (_cbfga ._gfafe ));};
if _cbfga ._fddf !=nil {_cfgee .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cbfga ._eeebf );};if _cbfga ._eecbce ==nil &&_cbfga ._ggfeag !=""&&_cbfga ._fbegc !=""{_cbfga ._eecbce =_fe .MakeArray (_fe .MakeHexString (_cbfga ._ggfeag ),_fe .MakeHexString (_cbfga ._fbegc ));
};if _cbfga ._eecbce !=nil {_cfgee .Set ("\u0049\u0044",_cbfga ._eecbce );_beag .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cbfga ._eecbce );};_cbfga .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_cbfga .writeString (_cfgee .WriteString ());
_cbfga .writeString ("\u000a");};

// ToPdfObject implements interface PdfModel.
func (_gegc *PdfActionSubmitForm )ToPdfObject ()_fe .PdfObject {_gegc .PdfAction .ToPdfObject ();_gd :=_gegc ._bgfg ;_afca :=_gd .PdfObject .(*_fe .PdfObjectDictionary );_afca .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeSubmitForm )));if _gegc .F !=nil {_afca .Set ("\u0046",_gegc .F .ToPdfObject ());
};_afca .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gegc .Fields );_afca .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gegc .Flags );return _gd ;};

// ValidateSignatures validates digital signatures in the document.
func (_addbf *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _addbf .AcroForm ==nil {return nil ,nil ;};if _addbf .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_cefge *PdfSignature ;
_gcbgc *PdfField ;_dcgeg SignatureHandler ;};var _ddga []*sigFieldPair ;for _ ,_deaga :=range _addbf .AcroForm .AllFields (){if _deaga .V ==nil {continue ;};if _ebfga ,_agfbf :=_fe .GetDict (_deaga .V );_agfbf {if _eeggf ,_ebcbc :=_fe .GetNameVal (_ebfga .Get ("\u0054\u0079\u0070\u0065"));
_ebcbc &&_eeggf =="\u0053\u0069\u0067"{_agbac ,_cagfg :=_fe .GetIndirect (_deaga .V );if !_cagfg {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_fdcbae ,_gcbfg :=_addbf .newPdfSignatureFromIndirect (_agbac );if _gcbfg !=nil {return nil ,_gcbfg ;};var _cbccc SignatureHandler ;for _ ,_ddeag :=range handlers {if _ddeag .IsApplicable (_fdcbae ){_cbccc =_ddeag ;break ;};
};_ddga =append (_ddga ,&sigFieldPair {_cefge :_fdcbae ,_gcbgc :_deaga ,_dcgeg :_cbccc });};};};var _abgcf []SignatureValidationResult ;for _ ,_fbbcg :=range _ddga {_ccbdc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fbbcg ._gcbgc }};
if _fbbcg ._dcgeg ==nil {_ccbdc .Errors =append (_ccbdc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_abgcf =append (_abgcf ,_ccbdc );continue ;};_befb ,_gceba :=_fbbcg ._dcgeg .NewDigest (_fbbcg ._cefge );
if _gceba !=nil {_ccbdc .Errors =append (_ccbdc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gceba .Error ());_abgcf =append (_abgcf ,_ccbdc );continue ;};_bgbbf :=_fbbcg ._cefge .ByteRange ;if _bgbbf ==nil {_ccbdc .Errors =append (_ccbdc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_abgcf =append (_abgcf ,_ccbdc );continue ;};for _bcada :=0;_bcada < _bgbbf .Len ();_bcada =_bcada +2{_efggd ,_ :=_fe .GetNumberAsInt64 (_bgbbf .Get (_bcada ));_aacb ,_ :=_fe .GetIntVal (_bgbbf .Get (_bcada +1));if _ ,_afffb :=_addbf ._cbace .Seek (_efggd ,_ecf .SeekStart );
_afffb !=nil {return nil ,_afffb ;};_bgefcc :=make ([]byte ,_aacb );if _ ,_daafc :=_addbf ._cbace .Read (_bgefcc );_daafc !=nil {return nil ,_daafc ;};_befb .Write (_bgefcc );};_deabe ,_gceba :=_fbbcg ._dcgeg .Validate (_fbbcg ._cefge ,_befb );if _gceba !=nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_gceba ,_fbbcg ._dcgeg );
_deabe .Errors =append (_deabe .Errors ,_gceba .Error ());};_deabe .Name =_fbbcg ._cefge .Name .Decoded ();_deabe .Reason =_fbbcg ._cefge .Reason .Decoded ();if _fbbcg ._cefge .M !=nil {_bdecf ,_bbedd :=NewPdfDate (_fbbcg ._cefge .M .String ());if _bbedd !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbedd );
_deabe .Errors =append (_deabe .Errors ,_bbedd .Error ());continue ;};_deabe .Date =_bdecf ;};_deabe .ContactInfo =_fbbcg ._cefge .ContactInfo .Decoded ();_deabe .Location =_fbbcg ._cefge .Location .Decoded ();_deabe .Fields =_ccbdc .Fields ;_abgcf =append (_abgcf ,_deabe );
};return _abgcf ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_afff *PdfFont )ToPdfObject ()_fe .PdfObject {if _afff ._cdgee ==nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fe .MakeNull ();
};return _afff ._cdgee .ToPdfObject ();};func (_cbad *PdfReader )newPdfAnnotationFileAttachmentFromDict (_eaca *_fe .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_bfcf :=PdfAnnotationFileAttachment {};_bae ,_gcb :=_cbad .newPdfAnnotationMarkupFromDict (_eaca );
if _gcb !=nil {return nil ,_gcb ;};_bfcf .PdfAnnotationMarkup =_bae ;_bfcf .FS =_eaca .Get ("\u0046\u0053");_bfcf .Name =_eaca .Get ("\u004e\u0061\u006d\u0065");return &_bfcf ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_faegf pdfCIDFontType0 )GetCharMetrics (code _aee .CharCode )(_fg .CharMetrics ,bool ){_gadga :=_faegf ._eccd ;if _efdd ,_cgeae :=_faegf ._feebb [code ];_cgeae {_gadga =_efdd ;};return _fg .CharMetrics {Wx :_gadga },true ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fe .PdfObject )(*PdfFilespec ,error ){_cgff :=&PdfFilespec {};var _acab *_fe .PdfObjectDictionary ;if _bbgb ,_dfdcc :=_fe .GetIndirect (obj );_dfdcc {_cgff ._gcbg =_bbgb ;_dbffe ,_efbce :=_fe .GetDict (_bbgb .PdfObject );
if !_efbce {_beag .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fe .ErrTypeError ;};_acab =_dbffe ;}else if _bedcf ,_efgd :=_fe .GetDict (obj );
_efgd {_cgff ._gcbg =_bedcf ;_acab =_bedcf ;}else {_beag .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fe .ErrTypeError ;};if _acab ==nil {_beag .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _aagb :=_acab .Get ("\u0054\u0079\u0070\u0065");_aagb !=nil {_gbecc ,_aaadf :=_aagb .(*_fe .PdfObjectName );if !_aaadf {_beag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aagb );
}else {if *_gbecc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_beag .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_gbecc );
};};};if _dddgc :=_acab .Get ("\u0046\u0053");_dddgc !=nil {_cgff .FS =_dddgc ;};if _fcbfb :=_acab .Get ("\u0046");_fcbfb !=nil {_cgff .F =_fcbfb ;};if _efdc :=_acab .Get ("\u0055\u0046");_efdc !=nil {_cgff .UF =_efdc ;};if _baccb :=_acab .Get ("\u0044\u004f\u0053");
_baccb !=nil {_cgff .DOS =_baccb ;};if _cceac :=_acab .Get ("\u004d\u0061\u0063");_cceac !=nil {_cgff .Mac =_cceac ;};if _cffg :=_acab .Get ("\u0055\u006e\u0069\u0078");_cffg !=nil {_cgff .Unix =_cffg ;};if _agegc :=_acab .Get ("\u0049\u0044");_agegc !=nil {_cgff .ID =_agegc ;
};if _afaee :=_acab .Get ("\u0056");_afaee !=nil {_cgff .V =_afaee ;};if _faffa :=_acab .Get ("\u0045\u0046");_faffa !=nil {_cgff .EF =_faffa ;};if _fcfe :=_acab .Get ("\u0052\u0046");_fcfe !=nil {_cgff .RF =_fcfe ;};if _fffc :=_acab .Get ("\u0044\u0065\u0073\u0063");
_fffc !=nil {_cgff .Desc =_fffc ;};if _cade :=_acab .Get ("\u0043\u0049");_cade !=nil {_cgff .CI =_cade ;};return _cgff ,nil ;};func _adfdc (_dbge *_fe .PdfObjectDictionary )bool {for _ ,_abgde :=range _dbge .Keys (){if _ ,_bfdd :=_fecg [_abgde .String ()];
_bfdd {return true ;};};return false ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_edcf :=NewPdfAnnotation ();_aae :=&PdfAnnotationScreen {};_aae .PdfAnnotation =_edcf ;_edcf .SetContext (_aae );return _aae ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bbdf PdfModel ;_beebc *_fe .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fe .PdfObjectName ;T *_fe .PdfObjectString ;TU *_fe .PdfObjectString ;TM *_fe .PdfObjectString ;Ff *_fe .PdfObjectInteger ;
V _fe .PdfObject ;DV _fe .PdfObject ;AA _fe .PdfObject ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fe .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fe .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fe .PdfObjectBool ;_ddfbb PdfModel ;_ebfb _fe .PdfObject ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_dcgcf *PdfPage )AddExtGState (name _fe .PdfObjectName ,egs *_fe .PdfObjectDictionary )error {if _dcgcf .Resources ==nil {_dcgcf .Resources =NewPdfPageResources ();};if _dcgcf .Resources .ExtGState ==nil {_dcgcf .Resources .ExtGState =_fe .MakeDict ();
};_afaad ,_fgfe :=_fe .TraceToDirectObject (_dcgcf .Resources .ExtGState ).(*_fe .PdfObjectDictionary );if !_fgfe {_beag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fe .TraceToDirectObject (_dcgcf .Resources .ExtGState ));
return _cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afaad .Set (name ,egs );return nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_bbeaead *pdfSignDictionary )GetSubFilter ()string {_ccgaf :=_bbeaead .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _ccgaf ==nil {return "";};if _aebcg ,_bcacg :=_fe .GetNameVal (_ccgaf );_bcacg {return _aebcg ;};return "";};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fe .PdfObject ;LE _fe .PdfObject ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;IT _fe .PdfObject ;Measure _fe .PdfObject ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_acbgg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _acbgg ._bfea .(*PdfShadingPattern );};type pdfCIDFontType0 struct{fontCommon ;_dfgae *_fe .PdfIndirectObject ;_dcbe _aee .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fe .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fe .PdfObject ;W _fe .PdfObject ;DW2 _fe .PdfObject ;W2 _fe .PdfObject ;_feebb map[_aee .CharCode ]float64 ;_eccd float64 ;};func (_eacf *PdfAppender )addNewObject (_fge _fe .PdfObject ){if _ ,_agac :=_eacf ._bfga [_fge ];!_agac {_eacf ._ebdd =append (_eacf ._ebdd ,_fge );
_eacf ._bfga [_fge ]=struct{}{};};};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fe .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cdeg *PdfColorspaceCalRGB )ToPdfObject ()_fe .PdfObject {_fgbd :=&_fe .PdfObjectArray {};_fgbd .Append (_fe .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_bggcc :=_fe .MakeDict ();if _cdeg .WhitePoint !=nil {_feed :=_fe .MakeArray (_fe .MakeFloat (_cdeg .WhitePoint [0]),_fe .MakeFloat (_cdeg .WhitePoint [1]),_fe .MakeFloat (_cdeg .WhitePoint [2]));
_bggcc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_feed );}else {_beag .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cdeg .BlackPoint !=nil {_dgfg :=_fe .MakeArray (_fe .MakeFloat (_cdeg .BlackPoint [0]),_fe .MakeFloat (_cdeg .BlackPoint [1]),_fe .MakeFloat (_cdeg .BlackPoint [2]));_bggcc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dgfg );
};if _cdeg .Gamma !=nil {_bgcab :=_fe .MakeArray (_fe .MakeFloat (_cdeg .Gamma [0]),_fe .MakeFloat (_cdeg .Gamma [1]),_fe .MakeFloat (_cdeg .Gamma [2]));_bggcc .Set ("\u0047\u0061\u006dm\u0061",_bgcab );};if _cdeg .Matrix !=nil {_feaf :=_fe .MakeArray (_fe .MakeFloat (_cdeg .Matrix [0]),_fe .MakeFloat (_cdeg .Matrix [1]),_fe .MakeFloat (_cdeg .Matrix [2]),_fe .MakeFloat (_cdeg .Matrix [3]),_fe .MakeFloat (_cdeg .Matrix [4]),_fe .MakeFloat (_cdeg .Matrix [5]),_fe .MakeFloat (_cdeg .Matrix [6]),_fe .MakeFloat (_cdeg .Matrix [7]),_fe .MakeFloat (_cdeg .Matrix [8]));
_bggcc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_feaf );};_fgbd .Append (_bggcc );if _cdeg ._dbbe !=nil {_cdeg ._dbbe .PdfObject =_fgbd ;return _cdeg ._dbbe ;};return _fgbd ;};

// ToPdfObject implements interface PdfModel.
func (_cafd *PdfAnnotationStrikeOut )ToPdfObject ()_fe .PdfObject {_cafd .PdfAnnotation .ToPdfObject ();_dgc :=_cafd ._egb ;_gfae :=_dgc .PdfObject .(*_fe .PdfObjectDictionary );_cafd .PdfAnnotationMarkup .appendToPdfDictionary (_gfae );_gfae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_gfae .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cafd .QuadPoints );return _dgc ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ToInteger convert to an integer format.
func (_gbeb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_acefg :=_fa .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_acefg *_gbeb .C ()),uint32 (_acefg *_gbeb .M ()),uint32 (_acefg *_gbeb .Y ()),uint32 (_acefg *_gbeb .K ())};};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fe .PdfObject ;MK _fe .PdfObject ;A _fe .PdfObject ;AA _fe .PdfObject ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fe .PdfObjectStream ;OCSP []*_fe .PdfObjectStream ;CRL []*_fe .PdfObjectStream ;TU *_fe .PdfObjectString ;TS *_fe .PdfObjectString ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fe .PdfObjectArray ;ExtGState _fe .PdfObject ;};func (_bgcb *PdfReader )newPdfAnnotationScreenFromDict (_bfa *_fe .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_dccb :=PdfAnnotationScreen {};
_dccb .T =_bfa .Get ("\u0054");_dccb .MK =_bfa .Get ("\u004d\u004b");_dccb .A =_bfa .Get ("\u0041");_dccb .AA =_bfa .Get ("\u0041\u0041");return &_dccb ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fe .PdfObject ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_dcbgfg *LTV )EnableByName (name string ,extraCerts []*_ee .Certificate )error {_bddcca :=_dcbgfg ._ebeg ._agfb .AcroForm ;for _ ,_baefg :=range _bddcca .AllFields (){_cccgg ,_ :=_baefg .GetContext ().(*PdfFieldSignature );if _cccgg ==nil {continue ;
};if _aeggf :=_cccgg .PartialName ();_aeggf !=name {continue ;};return _dcbgfg .Enable (_cccgg .V ,extraCerts );};return nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_ea :=NewPdfAction ();_ffg :=&PdfActionJavaScript {};_ffg .PdfAction =_ea ;_ea .SetContext (_ffg );return _ffg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_agacd *PdfColorspaceCalGray )GetNumComponents ()int {return 1};var _fabbf =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_fafad *_fe .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fe .PdfObjectName ;Filter *_fe .PdfObjectName ;SubFilter *_fe .PdfObjectName ;Contents *_fe .PdfObjectString ;Cert _fe .PdfObject ;ByteRange *_fe .PdfObjectArray ;Reference *_fe .PdfObjectArray ;Changes *_fe .PdfObjectArray ;Name *_fe .PdfObjectString ;
M *_fe .PdfObjectString ;Location *_fe .PdfObjectString ;Reason *_fe .PdfObjectString ;ContactInfo *_fe .PdfObjectString ;R *_fe .PdfObjectInteger ;V *_fe .PdfObjectInteger ;PropBuild *_fe .PdfObjectDictionary ;PropAuthTime *_fe .PdfObjectInteger ;PropAuthType *_fe .PdfObjectName ;
};func (_eaac *PdfAppender )updateObjectsDeep (_abd _fe .PdfObject ,_ddafa map[_fe .PdfObject ]struct{}){if _ddafa ==nil {_ddafa =map[_fe .PdfObject ]struct{}{};};if _ ,_gaceg :=_ddafa [_abd ];_gaceg ||_abd ==nil {return ;};_ddafa [_abd ]=struct{}{};_ddee :=_fe .ResolveReferencesDeep (_abd ,_eaac ._fcbf );
if _ddee !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddee );};switch _dbfdf :=_abd .(type ){case *_fe .PdfIndirectObject :switch {case _dbfdf .GetParser ()==_eaac ._agfb ._fbega :return ;case _dbfdf .GetParser ()==_eaac .Reader ._fbega :_fgc ,_ :=_eaac ._agfb .GetIndirectObjectByNumber (int (_dbfdf .ObjectNumber ));
_abbd ,_cgcf :=_fgc .(*_fe .PdfIndirectObject );if _cgcf &&_abbd !=nil {if _abbd .PdfObject !=_dbfdf .PdfObject &&_abbd .PdfObject .WriteString ()!=_dbfdf .PdfObject .WriteString (){_eaac .addNewObject (_abd );_eaac ._fced [_abd ]=_dbfdf .ObjectNumber ;
};};default:_eaac .addNewObject (_abd );};_eaac .updateObjectsDeep (_dbfdf .PdfObject ,_ddafa );case *_fe .PdfObjectArray :for _ ,_bcad :=range _dbfdf .Elements (){_eaac .updateObjectsDeep (_bcad ,_ddafa );};case *_fe .PdfObjectDictionary :for _ ,_dcegb :=range _dbfdf .Keys (){_eaac .updateObjectsDeep (_dbfdf .Get (_dcegb ),_ddafa );
};case *_fe .PdfObjectStreams :if _dbfdf .GetParser ()!=_eaac ._agfb ._fbega {for _ ,_bfca :=range _dbfdf .Elements (){_eaac .updateObjectsDeep (_bfca ,_ddafa );};};case *_fe .PdfObjectStream :switch {case _dbfdf .GetParser ()==_eaac ._agfb ._fbega :return ;
case _dbfdf .GetParser ()==_eaac .Reader ._fbega :if _eaaa ,_gead :=_eaac ._agfb ._fbega .LookupByReference (_dbfdf .PdfObjectReference );_gead ==nil {var _efd bool ;if _bgb ,_cgbf :=_fe .GetStream (_eaaa );_cgbf &&_bea .Equal (_bgb .Stream ,_dbfdf .Stream ){_efd =true ;
};if _gecg ,_eeff :=_fe .GetDict (_eaaa );_efd &&_eeff {_efd =_gecg .WriteString ()==_dbfdf .PdfObjectDictionary .WriteString ();};if _efd {return ;};};if _dbfdf .ObjectNumber !=0{_eaac ._fced [_abd ]=_dbfdf .ObjectNumber ;};default:if _ ,_gedf :=_eaac ._bfga [_abd ];
!_gedf {_eaac .addNewObject (_abd );};};_eaac .updateObjectsDeep (_dbfdf .PdfObjectDictionary ,_ddafa );};};func (_cfdc *PdfReader )newPdfAnnotationMovieFromDict (_dcgc *_fe .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_gbg :=PdfAnnotationMovie {};
_gbg .T =_dcgc .Get ("\u0054");_gbg .Movie =_dcgc .Get ("\u004d\u006f\u0076i\u0065");_gbg .A =_dcgc .Get ("\u0041");return &_gbg ,nil ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_fddaf *_ed .Document )error ;};

// ToInteger convert to an integer format.
func (_adea *PdfColorCalGray )ToInteger (bits int )uint32 {_cada :=_fa .Pow (2,float64 (bits ))-1;return uint32 (_cada *_adea .Val ());};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_fdcdb []byte ;_abeag []float64 ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fe .PdfObject ;Dest _fe .PdfObject ;H _fe .PdfObject ;PA _fe .PdfObject ;QuadPoints _fe .PdfObject ;BS _fe .PdfObject ;_bdd *PdfAction ;_gac *PdfReader ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_befcb *PdfPageResources )GetColorspaceByName (keyName _fe .PdfObjectName )(PdfColorspace ,bool ){_gecab ,_bade :=_befcb .GetColorspaces ();if _bade !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bade );
return nil ,false ;};if _gecab ==nil {return nil ,false ;};_begda ,_acedfa :=_gecab .Colorspaces [string (keyName )];if !_acedfa {return nil ,false ;};return _begda ,true ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fedaa *PdfColorspaceLab )ToPdfObject ()_fe .PdfObject {_gbcb :=_fe .MakeArray ();_gbcb .Append (_fe .MakeName ("\u004c\u0061\u0062"));_fbcc :=_fe .MakeDict ();if _fedaa .WhitePoint !=nil {_eaga :=_fe .MakeArray (_fe .MakeFloat (_fedaa .WhitePoint [0]),_fe .MakeFloat (_fedaa .WhitePoint [1]),_fe .MakeFloat (_fedaa .WhitePoint [2]));
_fbcc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_eaga );}else {_beag .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fedaa .BlackPoint !=nil {_cegcb :=_fe .MakeArray (_fe .MakeFloat (_fedaa .BlackPoint [0]),_fe .MakeFloat (_fedaa .BlackPoint [1]),_fe .MakeFloat (_fedaa .BlackPoint [2]));_fbcc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cegcb );
};if _fedaa .Range !=nil {_dfbfd :=_fe .MakeArray (_fe .MakeFloat (_fedaa .Range [0]),_fe .MakeFloat (_fedaa .Range [1]),_fe .MakeFloat (_fedaa .Range [2]),_fe .MakeFloat (_fedaa .Range [3]));_fbcc .Set ("\u0052\u0061\u006eg\u0065",_dfbfd );};_gbcb .Append (_fbcc );
if _fedaa ._daafa !=nil {_fedaa ._daafa .PdfObject =_gbcb ;return _fedaa ._daafa ;};return _gbcb ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_fcccb *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _fcccb ._ebdcb !=nil {return _fcccb ._ebdcb ,nil ;};if _fcccb .ColorSpace ==nil {return nil ,nil ;};_afddb ,_ggcg :=_bdbef (_fcccb .ColorSpace );if _ggcg !=nil {return nil ,_ggcg ;
};_fcccb ._ebdcb =_afddb ;return _fcccb ._ebdcb ,nil ;};func (_dadc *PdfReader )loadAction (_agg _fe .PdfObject )(*PdfAction ,error ){if _faff ,_dacc :=_fe .GetIndirect (_agg );_dacc {_adebg ,_aed :=_dadc .newPdfActionFromIndirectObject (_faff );if _aed !=nil {return nil ,_aed ;
};return _adebg ,nil ;}else if !_fe .IsNullObject (_agg ){return nil ,_cg .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func (_eee *PdfReader )newPdfActionGoTo3DViewFromDict (_add *_fe .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_add .Get ("\u0054\u0041"),V :_add .Get ("\u0056")},nil ;};func _egfeg (_afgaea _fe .PdfObject )[]*_fe .PdfObjectStream {if _afgaea ==nil {return nil ;
};_edcaa ,_gdgb :=_fe .GetArray (_afgaea );if !_gdgb ||_edcaa .Len ()==0{return nil ;};_bcbfg :=make ([]*_fe .PdfObjectStream ,0,_edcaa .Len ());for _ ,_baffcd :=range _edcaa .Elements (){if _eeceeb ,_bcbfgf :=_fe .GetStream (_baffcd );_bcbfgf {_bcbfg =append (_bcbfg ,_eeceeb );
};};return _bcbfg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbeb *PdfShadingType7 )ToPdfObject ()_fe .PdfObject {_fbeb .PdfShading .ToPdfObject ();_aaadgf ,_ecbb :=_fbeb .getShadingDict ();if _ecbb !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbeb .BitsPerCoordinate !=nil {_aaadgf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbeb .BitsPerCoordinate );};if _fbeb .BitsPerComponent !=nil {_aaadgf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbeb .BitsPerComponent );
};if _fbeb .BitsPerFlag !=nil {_aaadgf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fbeb .BitsPerFlag );};if _fbeb .Decode !=nil {_aaadgf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbeb .Decode );};if _fbeb .Function !=nil {if len (_fbeb .Function )==1{_aaadgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbeb .Function [0].ToPdfObject ());
}else {_gffdf :=_fe .MakeArray ();for _ ,_dagf :=range _fbeb .Function {_gffdf .Append (_dagf .ToPdfObject ());};_aaadgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gffdf );};};return _fbeb ._ebfb ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_aebb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fe .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_ddabb []_fe .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_fbad []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ebae :=NewPdfAnnotation ();_faa :=&PdfAnnotationInk {};_faa .PdfAnnotation =_ebae ;_faa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebae .SetContext (_faa );return _faa ;};func (_bdgga *pdfFontSimple )getFontEncoding ()(_ddgf string ,_fgffg map[_aee .CharCode ]_aee .GlyphName ,_ddada error ){_ddgf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _ffdad ,_dccg :=_gfeca [_bdgga ._agee ];_dccg {_ddgf =_ffdad ;}else if _bdgga .fontFlags ()&_daaa !=0{for _dgac ,_gagdd :=range _gfeca {if _ca .Contains (_bdgga ._agee ,_dgac ){_ddgf =_gagdd ;break ;};};};if _bdgga .Encoding ==nil {return _ddgf ,nil ,nil ;
};switch _aefd :=_bdgga .Encoding .(type ){case *_fe .PdfObjectName :return string (*_aefd ),nil ,nil ;case *_fe .PdfObjectDictionary :_eccf ,_gcfda :=_fe .GetName (_aefd .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gcfda {_ddgf =_eccf .String ();
};if _afceb :=_aefd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_afceb !=nil {_gceed ,_gfgd :=_fe .GetArray (_afceb );if !_gfgd {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_aefd ,_aefd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_fe .ErrTypeError ;};_fgffg ,_ddada =_aee .FromFontDifferences (_gceed );};return _ddgf ,_fgffg ,_ddada ;default:_beag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bdgga .Encoding ,_bdgga .Encoding );
return "",nil ,_fe .ErrTypeError ;};};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_dc :=NewPdfAction ();_ada :=&PdfActionHide {};_ada .PdfAction =_dc ;_dc .SetContext (_ada );return _ada ;};

// AddFont adds a font dictionary to the Font resources.
func (_eefedg *PdfPage )AddFont (name _fe .PdfObjectName ,font _fe .PdfObject )error {if _eefedg .Resources ==nil {_eefedg .Resources =NewPdfPageResources ();};if _eefedg .Resources .Font ==nil {_eefedg .Resources .Font =_fe .MakeDict ();};_agged ,_addg :=_fe .TraceToDirectObject (_eefedg .Resources .Font ).(*_fe .PdfObjectDictionary );
if !_addg {_beag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fe .TraceToDirectObject (_eefedg .Resources .Font ));
return _cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_agged .Set (name ,font );return nil ;};

// GetNumPages returns the number of pages in the document.
func (_daed *PdfReader )GetNumPages ()(int ,error ){if _daed ._fbega .GetCrypter ()!=nil &&!_daed ._fbega .IsAuthenticated (){return 0,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_daed ._dgdea ),nil ;};func (_bedc *PdfReader )newPdfAnnotationRedactFromDict (_cbbg *_fe .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fee :=PdfAnnotationRedact {};_fbef ,_fbcbd :=_bedc .newPdfAnnotationMarkupFromDict (_cbbg );if _fbcbd !=nil {return nil ,_fbcbd ;
};_fee .PdfAnnotationMarkup =_fbef ;_fee .QuadPoints =_cbbg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fee .IC =_cbbg .Get ("\u0049\u0043");_fee .RO =_cbbg .Get ("\u0052\u004f");_fee .OverlayText =_cbbg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fee .Repeat =_cbbg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fee .DA =_cbbg .Get ("\u0044\u0041");_fee .Q =_cbbg .Get ("\u0051");return &_fee ,nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_dbbd :=NewPdfAnnotation ();_beg :=&PdfAnnotationStrikeOut {};_beg .PdfAnnotation =_dbbd ;_beg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbbd .SetContext (_beg );return _beg ;};

// ToPdfObject implements interface PdfModel.
func (_baf *PdfAnnotationText )ToPdfObject ()_fe .PdfObject {_baf .PdfAnnotation .ToPdfObject ();_ggba :=_baf ._egb ;_dcef :=_ggba .PdfObject .(*_fe .PdfObjectDictionary );if _baf .PdfAnnotationMarkup !=nil {_baf .PdfAnnotationMarkup .appendToPdfDictionary (_dcef );
};_dcef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0054\u0065\u0078\u0074"));_dcef .SetIfNotNil ("\u004f\u0070\u0065\u006e",_baf .Open );_dcef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_baf .Name );_dcef .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_baf .State );
_dcef .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_baf .StateModel );return _ggba ;};func (_ffa *PdfReader )newPdfAnnotationRichMediaFromDict (_ffgc *_fe .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_fceb :=&PdfAnnotationRichMedia {};
_fceb .RichMediaSettings =_ffgc .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_fceb .RichMediaContent =_ffgc .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _fceb ,nil ;};func (_fdac *DSS )addCerts (_gbecf [][]byte )([]*_fe .PdfObjectStream ,error ){return _fdac .add (&_fdac .Certs ,_fdac ._cgedb ,_gbecf );};

// ToPdfObject returns the PDF representation of the function.
func (_fccg *PdfFunctionType0 )ToPdfObject ()_fe .PdfObject {if _fccg ._gbfa ==nil {_fccg ._gbfa =&_fe .PdfObjectStream {};};_adcdg :=_fe .MakeDict ();_adcdg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (0));
_eefec :=&_fe .PdfObjectArray {};for _ ,_fecdd :=range _fccg .Domain {_eefec .Append (_fe .MakeFloat (_fecdd ));};_adcdg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eefec );_gdedfc :=&_fe .PdfObjectArray {};for _ ,_dccgf :=range _fccg .Range {_gdedfc .Append (_fe .MakeFloat (_dccgf ));
};_adcdg .Set ("\u0052\u0061\u006eg\u0065",_gdedfc );_gece :=&_fe .PdfObjectArray {};for _ ,_bdaea :=range _fccg .Size {_gece .Append (_fe .MakeInteger (int64 (_bdaea )));};_adcdg .Set ("\u0053\u0069\u007a\u0065",_gece );_adcdg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fe .MakeInteger (int64 (_fccg .BitsPerSample )));
if _fccg .Order !=1{_adcdg .Set ("\u004f\u0072\u0064e\u0072",_fe .MakeInteger (int64 (_fccg .Order )));};_adcdg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_fccg ._ecgdd ))));_fccg ._gbfa .Stream =_fccg ._ecgdd ;_fccg ._gbfa .PdfObjectDictionary =_adcdg ;
return _fccg ._gbfa ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_facda *PdfOutlineItem )ToPdfObject ()_fe .PdfObject {_edfb :=_facda ._agcb ;_acbdd :=_edfb .PdfObject .(*_fe .PdfObjectDictionary );_acbdd .Set ("\u0054\u0069\u0074l\u0065",_facda .Title );if _facda .A !=nil {_acbdd .Set ("\u0041",_facda .A );};
if _ebagc :=_acbdd .Get ("\u0053\u0045");_ebagc !=nil {_acbdd .Remove ("\u0053\u0045");};if _facda .C !=nil {_acbdd .Set ("\u0043",_facda .C );};if _facda .Dest !=nil {_acbdd .Set ("\u0044\u0065\u0073\u0074",_facda .Dest );};if _facda .F !=nil {_acbdd .Set ("\u0046",_facda .F );
};if _facda .Count !=nil {_acbdd .Set ("\u0043\u006f\u0075n\u0074",_fe .MakeInteger (*_facda .Count ));};if _facda .Next !=nil {_acbdd .Set ("\u004e\u0065\u0078\u0074",_facda .Next .ToPdfObject ());};if _facda .First !=nil {_acbdd .Set ("\u0046\u0069\u0072s\u0074",_facda .First .ToPdfObject ());
};if _facda .Prev !=nil {_acbdd .Set ("\u0050\u0072\u0065\u0076",_facda .Prev .GetContext ().GetContainingPdfObject ());};if _facda .Last !=nil {_acbdd .Set ("\u004c\u0061\u0073\u0074",_facda .Last .GetContext ().GetContainingPdfObject ());};if _facda .Parent !=nil {_acbdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_facda .Parent .GetContext ().GetContainingPdfObject ());
};return _edfb ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cgad *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_gcdab *PdfWriter )setHashIDs (_bcff _be .Hash )error {_bebab :=_bcff .Sum (nil );if _gcdab ._ggfeag ==""{_gcdab ._ggfeag =_e .EncodeToString (_bebab [:8]);};
_gcdab .setDocumentIDs (_gcdab ._ggfeag ,_e .EncodeToString (_bebab [8:]));return nil ;};func _deaeg (_faeg _fe .PdfObject )(*PdfColorspaceDeviceN ,error ){_ffbac :=NewPdfColorspaceDeviceN ();if _cbfff ,_feca :=_faeg .(*_fe .PdfIndirectObject );_feca {_ffbac ._efefb =_cbfff ;
};_faeg =_fe .TraceToDirectObject (_faeg );_gcd ,_ggbfb :=_faeg .(*_fe .PdfObjectArray );if !_ggbfb {return nil ,_a .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _gcd .Len ()!=4&&_gcd .Len ()!=5{return nil ,_a .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_faeg =_gcd .Get (0);
_eada ,_ggbfb :=_faeg .(*_fe .PdfObjectName );if !_ggbfb {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_eada !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_a .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_faeg =_gcd .Get (1);
_faeg =_fe .TraceToDirectObject (_faeg );_ddgda ,_ggbfb :=_faeg .(*_fe .PdfObjectArray );if !_ggbfb {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_ffbac .ColorantNames =_ddgda ;_faeg =_gcd .Get (2);_adeag ,_cfdfd :=NewPdfColorspaceFromPdfObject (_faeg );if _cfdfd !=nil {return nil ,_cfdfd ;};_ffbac .AlternateSpace =_adeag ;_eggdb ,_cfdfd :=_aacg (_gcd .Get (3));if _cfdfd !=nil {return nil ,_cfdfd ;
};_ffbac .TintTransform =_eggdb ;if _gcd .Len ()==5{_ddfb ,_eaff :=_deda (_gcd .Get (4));if _eaff !=nil {return nil ,_eaff ;};_ffbac .Attributes =_ddfb ;};return _ffbac ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cfbde *PdfPageResources )GetXObjectImageByName (keyName _fe .PdfObjectName )(*XObjectImage ,error ){_beggg ,_gdabe :=_cfbde .GetXObjectByName (keyName );if _beggg ==nil {return nil ,nil ;};if _gdabe !=XObjectTypeImage {return nil ,_cg .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_aaebc ,_edcbg :=NewXObjectImageFromStream (_beggg );if _edcbg !=nil {return nil ,_edcbg ;};return _aaebc ,nil ;};

// GetBorderWidth returns the border style's width.
func (_eedg *PdfBorderStyle )GetBorderWidth ()float64 {if _eedg .W ==nil {return 1;};return *_eedg .W ;};func (_daf *PdfReader )newPdfAnnotationMarkupFromDict (_dgbd *_fe .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cbc :=&PdfAnnotationMarkup {};
if _bag :=_dgbd .Get ("\u0054");_bag !=nil {_cbc .T =_bag ;};if _aad :=_dgbd .Get ("\u0050\u006f\u0070u\u0070");_aad !=nil {_aca ,_abbf :=_aad .(*_fe .PdfIndirectObject );if !_abbf {if _ ,_fbe :=_aad .(*_fe .PdfObjectNull );!_fbe {return nil ,_cg .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_efbd ,_ddba :=_daf .newPdfAnnotationFromIndirectObject (_aca );if _ddba !=nil {return nil ,_ddba ;};if _efbd !=nil {_fbg ,_egga :=_efbd ._acg .(*PdfAnnotationPopup );if !_egga {return nil ,_cg .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_cbc .Popup =_fbg ;};};};if _dea :=_dgbd .Get ("\u0043\u0041");_dea !=nil {_cbc .CA =_dea ;};if _bca :=_dgbd .Get ("\u0052\u0043");_bca !=nil {_cbc .RC =_bca ;};if _ddd :=_dgbd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_ddd !=nil {_cbc .CreationDate =_ddd ;};if _fbgg :=_dgbd .Get ("\u0049\u0052\u0054");_fbgg !=nil {_cbc .IRT =_fbgg ;};if _gbcd :=_dgbd .Get ("\u0053\u0075\u0062\u006a");_gbcd !=nil {_cbc .Subj =_gbcd ;};if _dcab :=_dgbd .Get ("\u0052\u0054");_dcab !=nil {_cbc .RT =_dcab ;
};if _befa :=_dgbd .Get ("\u0049\u0054");_befa !=nil {_cbc .IT =_befa ;};if _bgag :=_dgbd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bgag !=nil {_cbc .ExData =_bgag ;};return _cbc ,nil ;};func (_aea *PdfReader )newPdfActionImportDataFromDict (_edc *_fe .PdfObjectDictionary )(*PdfActionImportData ,error ){_cac ,_cee :=_feba (_edc .Get ("\u0046"));
if _cee !=nil {return nil ,_cee ;};return &PdfActionImportData {F :_cac },nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_cge *PdfAnnotation )GetContext ()PdfModel {if _cge ==nil {return nil ;};return _cge ._acg ;};func _eeac (_dabg *_fe .PdfObjectDictionary ,_adff *fontCommon )(*pdfCIDFontType2 ,error ){if _adff ._eegd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_beag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_adff );
return nil ,_fe .ErrRangeError ;};_accc :=_aadf (_adff );_cafde ,_dfgg :=_fe .GetDict (_dabg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dfgg {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_adff );
return nil ,ErrRequiredAttributeMissing ;};_accc .CIDSystemInfo =_cafde ;_accc .DW =_dabg .Get ("\u0044\u0057");_accc .W =_dabg .Get ("\u0057");_accc .DW2 =_dabg .Get ("\u0044\u0057\u0032");_accc .W2 =_dabg .Get ("\u0057\u0032");_accc .CIDToGIDMap =_dabg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_accc ._beea =1000.0;if _dddbf ,_dcgbe :=_fe .GetNumberAsFloat (_accc .DW );_dcgbe ==nil {_accc ._beea =_dddbf ;};_cccba ,_bcda :=_ccggg (_accc .W );if _bcda !=nil {return nil ,_bcda ;};if _cccba ==nil {_cccba =map[_aee .CharCode ]float64 {};};_accc ._cabf =_cccba ;
return _accc ,nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fgea *PdfAcroForm ,_deg *PdfField ,_agdg *PdfAnnotationWidget )(*_fe .PdfObjectDictionary ,error );};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cfg :=NewPdfAction ();_dba :=&PdfActionSubmitForm {};_dba .PdfAction =_cfg ;_cfg .SetContext (_dba );return _dba ;};

// Encoder returns the font's text encoder.
func (_dgbc pdfFontType3 )Encoder ()_aee .TextEncoder {return _dgbc ._gbaede };

// ToPdfObject implements interface PdfModel.
func (_adbb *PdfAnnotationStamp )ToPdfObject ()_fe .PdfObject {_adbb .PdfAnnotation .ToPdfObject ();_cca :=_adbb ._egb ;_feag :=_cca .PdfObject .(*_fe .PdfObjectDictionary );_adbb .PdfAnnotationMarkup .appendToPdfDictionary (_feag );_feag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0074\u0061m\u0070"));
_feag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_adbb .Name );return _cca ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_ggaca :=&PdfSignature {Type :_fe .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bgcbg :=&pdfSignDictionary {PdfObjectDictionary :_fe .MakeDict (),_fbgdc :&handler ,_badba :_ggaca };_ggaca ._fafad =_fe .MakeIndirectObject (_bgcbg );
return _ggaca ;};func (_ecfc fontCommon )fontFlags ()int {if _ecfc ._eaaeg ==nil {return 0;};return _ecfc ._eaaeg ._edbfa ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_aedgf *PdfPageResources )SetFontByName (keyName _fe .PdfObjectName ,obj _fe .PdfObject )error {if _aedgf .Font ==nil {_aedgf .Font =_fe .MakeDict ();};_cgac ,_cgeb :=_fe .TraceToDirectObject (_aedgf .Font ).(*_fe .PdfObjectDictionary );if !_cgeb {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fe .TraceToDirectObject (_aedgf .Font ));
return _fe .ErrTypeError ;};_cgac .Set (keyName ,obj );return nil ;};func _dgcg (_bffbb string )(map[_aee .CharCode ]_aee .GlyphName ,error ){_dcff :=_ca .Split (_bffbb ,"\u000a");_bfbc :=make (map[_aee .CharCode ]_aee .GlyphName );for _ ,_gbb :=range _dcff {_cccbd :=_eebcf .FindStringSubmatch (_gbb );
if _cccbd ==nil {continue ;};_aafea ,_febgb :=_cccbd [1],_cccbd [2];_egfe ,_ecfcf :=_ge .Atoi (_aafea );if _ecfcf !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gbb );
return nil ,_fe .ErrTypeError ;};_bfbc [_aee .CharCode (_egfe )]=_aee .GlyphName (_febgb );};_beag .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bfbc );
return _bfbc ,nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gagd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bccc ,_cdfgc :=color .(*PdfColorDeviceRGB );if !_cdfgc {_beag .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bccc ,nil ;};

// Width returns the width of `rect`.
func (_dfdgd *PdfRectangle )Width ()float64 {return _fa .Abs (_dfdgd .Urx -_dfdgd .Llx )};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bfge pdfCIDFontType2 )GetCharMetrics (code _aee .CharCode )(_fg .CharMetrics ,bool ){if _aeeg ,_efebe :=_bfge ._cabf [code ];_efebe {return _fg .CharMetrics {Wx :_aeeg },true ;};_cfcc :=rune (code );_gedc ,_bdcc :=_bfge ._agcfb [_cfcc ];if !_bdcc {_gedc =int (_bfge ._beea );
};return _fg .CharMetrics {Wx :float64 (_gedc )},true ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gbcbe *XObjectImage )ToImage ()(*Image ,error ){_fbee :=&Image {};if _gbcbe .Height ==nil {return nil ,_cg .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fbee .Height =*_gbcbe .Height ;if _gbcbe .Width ==nil {return nil ,_cg .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fbee .Width =*_gbcbe .Width ;if _gbcbe .BitsPerComponent ==nil {switch _gbcbe .Filter .(type ){case *_fe .CCITTFaxEncoder ,*_fe .JBIG2Encoder :_fbee .BitsPerComponent =1;
case *_fe .LZWEncoder ,*_fe .RunLengthEncoder :_fbee .BitsPerComponent =8;default:return nil ,_cg .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fbee .BitsPerComponent =*_gbcbe .BitsPerComponent ;};_fbee .ColorComponents =_gbcbe .ColorSpace .GetNumComponents ();_gbcbe ._egeea .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fe .MakeInteger (int64 (_fbee .ColorComponents )));
_fcbec ,_cded :=_fe .DecodeStream (_gbcbe ._egeea );if _cded !=nil {return nil ,_cded ;};_fbee .Data =_fcbec ;if _gbcbe .Decode !=nil {_cfga ,_fgdee :=_gbcbe .Decode .(*_fe .PdfObjectArray );if !_fgdee {_beag .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_gaegd ,_cgaa :=_cfga .ToFloat64Array ();if _cgaa !=nil {return nil ,_cgaa ;};_fbee ._abeag =_gaegd ;};return _fbee ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_bbcc *PdfWriter )SetForms (form *PdfAcroForm )error {_bbcc ._dddac =form ;return nil };func (_gegcb fontCommon )asPdfObjectDictionary (_fgbb string )*_fe .PdfObjectDictionary {if _fgbb !=""&&_gegcb ._eegd !=""&&_fgbb !=_gegcb ._eegd {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fgbb ,_gegcb );
}else if _fgbb ==""&&_gegcb ._eegd ==""{_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gegcb );
}else if _gegcb ._eegd ==""{_gegcb ._eegd =_fgbb ;};_cgaf :=_fe .MakeDict ();_cgaf .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0046\u006f\u006e\u0074"));_cgaf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fe .MakeName (_gegcb ._agee ));
_cgaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName (_gegcb ._eegd ));if _gegcb ._eaaeg !=nil {_cgaf .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_gegcb ._eaaeg .ToPdfObject ());};if _gegcb ._gcgbd !=nil {_cgaf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gegcb ._gcgbd );
}else if _gegcb ._ggee !=nil {_cgea ,_fccc :=_gegcb ._ggee .Stream ();if _fccc !=nil {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_fccc );
}else {_cgaf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cgea );};};return _cgaf ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fe .PdfObject ;T3DV _fe .PdfObject ;T3DA _fe .PdfObject ;T3DI _fe .PdfObject ;T3DB _fe .PdfObject ;};func _aagfd (_bdgg *_fe .PdfObjectDictionary ,_ebbcd *fontCommon )(*pdfCIDFontType0 ,error ){if _ebbcd ._eegd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_beag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ebbcd );
return nil ,_fe .ErrRangeError ;};_gcfab :=_dfgf (_ebbcd );_fecfc ,_aedbd :=_fe .GetDict (_bdgg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aedbd {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ebbcd );
return nil ,ErrRequiredAttributeMissing ;};_gcfab .CIDSystemInfo =_fecfc ;_gcfab .DW =_bdgg .Get ("\u0044\u0057");_gcfab .W =_bdgg .Get ("\u0057");_gcfab .DW2 =_bdgg .Get ("\u0044\u0057\u0032");_gcfab .W2 =_bdgg .Get ("\u0057\u0032");_gcfab ._eccd =1000.0;
if _bdbg ,_abddb :=_fe .GetNumberAsFloat (_gcfab .DW );_abddb ==nil {_gcfab ._eccd =_bdbg ;};_dafdg ,_eebg :=_ccggg (_gcfab .W );if _eebg !=nil {return nil ,_eebg ;};if _dafdg ==nil {_dafdg =map[_aee .CharCode ]float64 {};};_gcfab ._feebb =_dafdg ;return _gcfab ,nil ;
};

// SetLocation sets the `Location` field of the signature.
func (_bdacd *PdfSignature )SetLocation (location string ){_bdacd .Location =_fe .MakeString (location )};

// ToPdfObject implements interface PdfModel.
func (_gec *PdfAnnotationCaret )ToPdfObject ()_fe .PdfObject {_gec .PdfAnnotation .ToPdfObject ();_efc :=_gec ._egb ;_ccbgd :=_efc .PdfObject .(*_fe .PdfObjectDictionary );_gec .PdfAnnotationMarkup .appendToPdfDictionary (_ccbgd );_ccbgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0043\u0061\u0072e\u0074"));
_ccbgd .SetIfNotNil ("\u0052\u0044",_gec .RD );_ccbgd .SetIfNotNil ("\u0053\u0079",_gec .Sy );return _efc ;};func (_afe *PdfReader )newPdfAnnotationLinkFromDict (_dcf *_fe .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_fcbb :=PdfAnnotationLink {};
_fcbb .A =_dcf .Get ("\u0041");_fcbb .Dest =_dcf .Get ("\u0044\u0065\u0073\u0074");_fcbb .H =_dcf .Get ("\u0048");_fcbb .PA =_dcf .Get ("\u0050\u0041");_fcbb .QuadPoints =_dcf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fcbb .BS =_dcf .Get ("\u0042\u0053");
return &_fcbb ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_gafac *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_gafac ._ebdcb =colorspace ;};

// ToInteger convert to an integer format.
func (_ffad *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_egfa :=_fa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_egfa *_ffad .R ()),uint32 (_egfa *_ffad .G ()),uint32 (_egfa *_ffad .B ())};};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gceeb OutlineDest )ToPdfObject ()_fe .PdfObject {if (_gceeb .PageObj ==nil &&_gceeb .Page < 0)||_gceeb .Mode ==""{return _fe .MakeNull ();};_cdgdca :=_fe .MakeArray ();if _gceeb .PageObj !=nil {_cdgdca .Append (_gceeb .PageObj );}else {_cdgdca .Append (_fe .MakeInteger (_gceeb .Page ));
};_cdgdca .Append (_fe .MakeName (_gceeb .Mode ));switch _gceeb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cdgdca .Append (_fe .MakeFloat (_gceeb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cdgdca .Append (_fe .MakeFloat (_gceeb .X ));
case "\u0058\u0059\u005a":_cdgdca .Append (_fe .MakeFloat (_gceeb .X ));_cdgdca .Append (_fe .MakeFloat (_gceeb .Y ));_cdgdca .Append (_fe .MakeFloat (_gceeb .Zoom ));default:_cdgdca .Set (1,_fe .MakeName ("\u0046\u0069\u0074"));};return _cdgdca ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_abae :=NewPdfAnnotation ();_bee :=&PdfAnnotationStamp {};_bee .PdfAnnotation =_abae ;_bee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abae .SetContext (_bee );return _bee ;};

// GetFillImage get attached model.Image in push button.
func (_gaadd *PdfFieldButton )GetFillImage ()*Image {if _gaadd .IsPush (){return _gaadd ._febba ;};return nil ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_cedcg :_fe .MakeIndirectObject (_fe .MakeDict ()),VRI :map[string ]*VRI {}};};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_abaea *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_cgbfd :=_fad .NewReader (img .getBase ());_abeb :=_gege .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._fdcdb ,img ._abeag );
_fgg :=_fad .NewWriter (_abeb );_fca :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_fbccf :=_abaea .GetNumComponents ();_geba :=make ([]uint32 ,_fbccf );_gcgc :=make ([]float64 ,_fbccf );for {_fbbf :=_cgbfd .ReadSamples (_geba );if _fbbf ==_ecf .EOF {break ;
}else if _fbbf !=nil {return img ,_fbbf ;};for _efcc :=0;_efcc < _fbccf ;_efcc ++{_bdca :=float64 (_geba [_efcc ])/_fca ;_gcgc [_efcc ]=_bdca ;};_edgf ,_fbbf :=_abaea .TintTransform .Evaluate (_gcgc );if _fbbf !=nil {return img ,_fbbf ;};for _ ,_eage :=range _edgf {_eage =_fa .Min (_fa .Max (0,_eage ),1.0);
if _fbbf =_fgg .WriteSample (uint32 (_eage *_fca ));_fbbf !=nil {return img ,_fbbf ;};};};return _abaea .AlternateSpace .ImageToRGB (_bfcga (&_abeb ));};func _ccegd ()string {_aagdg .Lock ();defer _aagdg .Unlock ();return _efcea };

// ParsePdfObject parses input pdf object into given output intent.
func (_dbaf *PdfOutputIntent )ParsePdfObject (object _fe .PdfObject )error {_cddgf ,_efgb :=object .(*_fe .PdfObjectDictionary );if !_efgb {_gaabf ,_agdd :=_fe .GetIndirect (object );if !_agdd {_beag .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cg .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_cddgf ,_agdd =_gaabf .PdfObject .(*_fe .PdfObjectDictionary );if !_agdd {_beag .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cg .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};};_dbaf ._afgf =_cddgf ;_dbaf .Type ,_ =_cddgf .GetString ("\u0054\u0079\u0070\u0065");_edcb ,_efgb :=_cddgf .GetString ("\u0053");if _efgb {switch _edcb {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_dbaf .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_dbaf .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_dbaf .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_dbaf .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_dbaf .S =PdfOutputIntentTypeX ;
};};_dbaf .OutputCondition ,_ =_cddgf .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_dbaf .OutputConditionIdentifier ,_ =_cddgf .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_dbaf .RegistryName ,_ =_cddgf .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_dbaf .Info ,_ =_cddgf .GetString ("\u0049\u006e\u0066\u006f");if _ffacb ,_fcdf :=_fe .GetStream (_cddgf .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_fcdf {_dbaf .ColorComponents ,_ =_fe .GetIntVal (_ffacb .Get ("\u004e"));_fdcfcd ,_edfce :=_fe .DecodeStream (_ffacb );if _edfce !=nil {return _edfce ;};_dbaf .DestOutputProfile =_fdcfcd ;};return nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_bdbbag *PdfOutputIntent )GetContainingPdfObject ()_fe .PdfObject {return _bdbbag ._afgf };

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ae .Time ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_eccc :=PdfColorLab {l ,a ,b };return &_eccc };

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fe .PdfObject ;PreserveRB _fe .PdfObject ;};func (_facf *pdfCIDFontType0 )baseFields ()*fontCommon {return &_facf .fontCommon };const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// Subtype returns the font's "Subtype" field.
func (_dbgc *PdfFont )Subtype ()string {_aaea :=_dbgc .baseFields ()._eegd ;if _cagf ,_eafad :=_dbgc ._cdgee .(*pdfFontType0 );_eafad {_aaea =_aaea +"\u003a"+_cagf .DescendantFont .Subtype ();};return _aaea ;};func (_bbcd *PdfReader )newPdfAnnotationSquigglyFromDict (_agae *_fe .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_eab :=PdfAnnotationSquiggly {};
_fbcg ,_cea :=_bbcd .newPdfAnnotationMarkupFromDict (_agae );if _cea !=nil {return nil ,_cea ;};_eab .PdfAnnotationMarkup =_fbcg ;_eab .QuadPoints =_agae .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eab ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dcbdc *PdfShading )GetContext ()PdfModel {return _dcbdc ._ddfbb };func (_dcbd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// Register registers (caches) a model to primitive object relationship.
func (_aagfg *modelManager )Register (primitive _fe .PdfObject ,model PdfModel ){_aagfg ._afecf [model ]=primitive ;_aagfg ._eedag [primitive ]=model ;};func _bdbe (_afddc _fg .StdFont )pdfFontSimple {_bffc :=_afddc .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_eegd :"\u0054\u0079\u0070e\u0031",_agee :_afddc .Name ()},_gcecc :_afddc .GetMetricsTable (),_cdged :&PdfFontDescriptor {FontName :_fe .MakeName (string (_bffc .Name )),FontFamily :_fe .MakeName (_bffc .Family ),FontWeight :_fe .MakeFloat (float64 (_bffc .Weight )),Flags :_fe .MakeInteger (int64 (_bffc .Flags )),FontBBox :_fe .MakeArrayFromFloats (_bffc .BBox [:]),ItalicAngle :_fe .MakeFloat (_bffc .ItalicAngle ),Ascent :_fe .MakeFloat (_bffc .Ascent ),Descent :_fe .MakeFloat (_bffc .Descent ),CapHeight :_fe .MakeFloat (_bffc .CapHeight ),XHeight :_fe .MakeFloat (_bffc .XHeight ),StemV :_fe .MakeFloat (_bffc .StemV ),StemH :_fe .MakeFloat (_bffc .StemH )},_geadc :_afddc .Encoder ()};
};func (_afcba *PdfReader )newPdfOutlineItemFromIndirectObject (_aaeae *_fe .PdfIndirectObject )(*PdfOutlineItem ,error ){_ggcd ,_egbcb :=_aaeae .PdfObject .(*_fe .PdfObjectDictionary );if !_egbcb {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dfaff :=NewPdfOutlineItem ();_cbbca :=_ggcd .Get ("\u0054\u0069\u0074l\u0065");if _cbbca ==nil {return nil ,_a .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_gedfa ,_ggfea :=_fe .GetString (_cbbca );if !_ggfea {return nil ,_a .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cbbca );};_dfaff .Title =_gedfa ;if _bacb :=_ggcd .Get ("\u0043\u006f\u0075n\u0074");
_bacb !=nil {_bffce ,_efcca :=_bacb .(*_fe .PdfObjectInteger );if !_efcca {return nil ,_a .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_bacb );};_afaa :=int64 (*_bffce );
_dfaff .Count =&_afaa ;};if _fggcd :=_ggcd .Get ("\u0044\u0065\u0073\u0074");_fggcd !=nil {_dfaff .Dest =_fe .ResolveReference (_fggcd );if !_afcba ._edeea {_efdde :=_afcba .traverseObjectData (_dfaff .Dest );if _efdde !=nil {return nil ,_efdde ;};};};
if _efgcc :=_ggcd .Get ("\u0041");_efgcc !=nil {_dfaff .A =_fe .ResolveReference (_efgcc );if !_afcba ._edeea {_decbb :=_afcba .traverseObjectData (_dfaff .A );if _decbb !=nil {return nil ,_decbb ;};};};if _cbdcb :=_ggcd .Get ("\u0053\u0045");_cbdcb !=nil {_dfaff .SE =nil ;
};if _cfbgb :=_ggcd .Get ("\u0043");_cfbgb !=nil {_dfaff .C =_fe .ResolveReference (_cfbgb );};if _bgegb :=_ggcd .Get ("\u0046");_bgegb !=nil {_dfaff .F =_fe .ResolveReference (_bgegb );};return _dfaff ,nil ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_fcbe *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_feaag :=_fcbe .actualFont ();if _feaag ==nil {_beag .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_fcbe ._cdgee );
return _fg .CharMetrics {},false ;};if _gcbf ,_bfdgf :=_feaag .GetRuneMetrics (r );_bfdgf {return _gcbf ,true ;};if _eegb ,_bfgba :=_fcbe .GetFontDescriptor ();_bfgba ==nil &&_eegb !=nil {return _fg .CharMetrics {Wx :_eegb ._cbde },true ;};_beag .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcbe );
return _fg .CharMetrics {},false ;};func _acfc (_defb _fe .PdfObject )(*PdfColorspaceCalRGB ,error ){_bgbd :=NewPdfColorspaceCalRGB ();if _fdfd ,_aaed :=_defb .(*_fe .PdfIndirectObject );_aaed {_bgbd ._dbbe =_fdfd ;};_defb =_fe .TraceToDirectObject (_defb );
_agfbc ,_cgeff :=_defb .(*_fe .PdfObjectArray );if !_cgeff {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _agfbc .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_defb =_fe .TraceToDirectObject (_agfbc .Get (0));_dbdd ,_cgeff :=_defb .(*_fe .PdfObjectName );if !_cgeff {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_dbdd !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_a .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_defb =_fe .TraceToDirectObject (_agfbc .Get (1));
_fbff ,_cgeff :=_defb .(*_fe .PdfObjectDictionary );if !_cgeff {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_defb =_fbff .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_defb =_fe .TraceToDirectObject (_defb );_bfaa ,_cgeff :=_defb .(*_fe .PdfObjectArray );if !_cgeff {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _bfaa .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cbcg ,_cfgbf :=_bfaa .GetAsFloat64Slice ();
if _cfgbf !=nil {return nil ,_cfgbf ;};_bgbd .WhitePoint =_cbcg ;_defb =_fbff .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _defb !=nil {_defb =_fe .TraceToDirectObject (_defb );_debff ,_cggb :=_defb .(*_fe .PdfObjectArray );
if !_cggb {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _debff .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_edbc ,_bagb :=_debff .GetAsFloat64Slice ();if _bagb !=nil {return nil ,_bagb ;};_bgbd .BlackPoint =_edbc ;};_defb =_fbff .Get ("\u0047\u0061\u006dm\u0061");if _defb !=nil {_defb =_fe .TraceToDirectObject (_defb );_gdcf ,_ggdb :=_defb .(*_fe .PdfObjectArray );
if !_ggdb {return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _gdcf .Len ()!=3{return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_bbdc ,_dae :=_gdcf .GetAsFloat64Slice ();if _dae !=nil {return nil ,_dae ;};_bgbd .Gamma =_bbdc ;};_defb =_fbff .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _defb !=nil {_defb =_fe .TraceToDirectObject (_defb );_deae ,_fbbg :=_defb .(*_fe .PdfObjectArray );
if !_fbbg {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _deae .Len ()!=9{_beag .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_deae .String ());
return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_cdaad ,_baea :=_deae .GetAsFloat64Slice ();if _baea !=nil {return nil ,_baea ;
};_bgbd .Matrix =_cdaad ;};return _bgbd ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_ggadg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _ggadg .UnderlyingCS .GetNumComponents ();};func _gfdg (_bbfea *_fe .PdfObjectDictionary ,_ddeda *fontCommon )(*pdfFontType0 ,error ){_cedee ,_begb :=_fe .GetArray (_bbfea .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_begb {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ddeda );
return nil ,_fe .ErrRangeError ;};if _cedee .Len ()!=1{_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_cedee .Len ());
return nil ,_fe .ErrRangeError ;};_fdca ,_fgff :=_cbcdc (_cedee .Get (0),false );if _fgff !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_fgff ,_ddeda );
return nil ,_fgff ;};_fbbfd :=_gadc (_ddeda );_fbbfd .DescendantFont =_fdca ;_gedb ,_begb :=_fe .GetNameVal (_bbfea .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _begb {if _gedb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gedb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_fbbfd ._gbdda =_aee .NewIdentityTextEncoder (_gedb );
}else if _bf .IsPredefinedCMap (_gedb ){_fbbfd ._feaad ,_fgff =_bf .LoadPredefinedCMap (_gedb );if _fgff !=nil {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gedb ,_fgff );
};}else {_beag .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gedb );};};if _agaf :=_fdca .baseFields ()._ggee ;_agaf !=nil {if _aeaga :=_agaf .Name ();_aeaga =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_aeaga =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_aeaga =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_aeaga =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_fbbfd ._gbdda =_aee .NewCMapEncoder (_gedb ,_fbbfd ._feaad ,_agaf );
};};return _fbbfd ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fe .PdfObject ;Name _fe .PdfObject ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_aaa :=NewPdfAction ();_ce :=&PdfActionGoToE {};_ce .PdfAction =_aaa ;_aaa .SetContext (_ce );return _ce ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_acee *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _acee .MediaBox !=nil {return _acee .MediaBox ,nil ;};_abfec :=_acee .Parent ;for _abfec !=nil {_eebgd ,_bbbb :=_fe .GetDict (_abfec );if !_bbbb {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _eaef :=_eebgd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_eaef !=nil {_eafc ,_fecga :=_fe .GetArray (_eaef );if !_fecga {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_deaa ,_acdf :=NewPdfRectangle (*_eafc );if _acdf !=nil {return nil ,_acdf ;};return _deaa ,nil ;};_abfec =_eebgd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cg .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eadec pdfCIDFontType0 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){return _fg .CharMetrics {Wx :_eadec ._eccd },true ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_fbfag *PdfPageResources )GetContainingPdfObject ()_fe .PdfObject {return _fbfag ._dafc };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_bfc :=&PdfAnnotation {};_bfc ._egb =_fe .MakeIndirectObject (_fe .MakeDict ());return _bfc ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_aga :=NewPdfAction ();_feb :=&PdfActionSound {};_feb .PdfAction =_aga ;_aga .SetContext (_feb );return _feb ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fe .PdfObjectArray ;TI *_fe .PdfObjectInteger ;I *_fe .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_beee *PdfAnnotationLink )ToPdfObject ()_fe .PdfObject {_beee .PdfAnnotation .ToPdfObject ();_ggdd :=_beee ._egb ;_gdb :=_ggdd .PdfObject .(*_fe .PdfObjectDictionary );_gdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u004c\u0069\u006e\u006b"));
if _beee ._bdd !=nil &&_beee ._bdd ._gf !=nil {_gdb .Set ("\u0041",_beee ._bdd ._gf .ToPdfObject ());}else if _beee .A !=nil {_gdb .Set ("\u0041",_beee .A );};_gdb .SetIfNotNil ("\u0044\u0065\u0073\u0074",_beee .Dest );_gdb .SetIfNotNil ("\u0048",_beee .H );
_gdb .SetIfNotNil ("\u0050\u0041",_beee .PA );_gdb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_beee .QuadPoints );_gdb .SetIfNotNil ("\u0042\u0053",_beee .BS );return _ggdd ;};const (BorderStyleSolid BorderStyle =iota ;
BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_eced *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_aeage :=0.3*_eced .R ()+0.59*_eced .G ()+0.11*_eced .B ();_aeage =_fa .Min (_fa .Max (_aeage ,0.0),1.0);return NewPdfColorDeviceGray (_aeage );};func (_bfcb *pdfFontType0 )baseFields ()*fontCommon {return &_bfcb .fontCommon };


// ToPdfObject implements interface PdfModel.
func (_accbe *PdfActionResetForm )ToPdfObject ()_fe .PdfObject {_accbe .PdfAction .ToPdfObject ();_bef :=_accbe ._bgfg ;_beda :=_bef .PdfObject .(*_fe .PdfObjectDictionary );_beda .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeResetForm )));_beda .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_accbe .Fields );
_beda .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_accbe .Flags );return _bef ;};func _fbfdg ()string {_aagdg .Lock ();defer _aagdg .Unlock ();if len (_afged )> 0{return _afged ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// HasExtGState checks if ExtGState name is available.
func (_fagdc *PdfPage )HasExtGState (name _fe .PdfObjectName )bool {if _fagdc .Resources ==nil {return false ;};if _fagdc .Resources .ExtGState ==nil {return false ;};_agfgf ,_bfabb :=_fe .TraceToDirectObject (_fagdc .Resources .ExtGState ).(*_fe .PdfObjectDictionary );
if !_bfabb {_beag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fe .TraceToDirectObject (_fagdc .Resources .ExtGState ));
return false ;};_cafbd :=_agfgf .Get (name );_cgcg :=_cafbd !=nil ;return _cgcg ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_aagdg .Lock ();defer _aagdg .Unlock ();_efcea =author };

// ToPdfObject implements interface PdfModel.
func (_fgf *PdfActionTrans )ToPdfObject ()_fe .PdfObject {_fgf .PdfAction .ToPdfObject ();_efe :=_fgf ._bgfg ;_cff :=_efe .PdfObject .(*_fe .PdfObjectDictionary );_cff .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeTrans )));_cff .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fgf .Trans );
return _efe ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_adb .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_adb .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_adb .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ebeg *PdfAppender ;_fabg *DSS ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_ecgb :=NewPdfAnnotation ();_dbff :=&PdfAnnotationPolygon {};_dbff .PdfAnnotation =_ecgb ;_dbff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecgb .SetContext (_dbff );return _dbff ;};func (_fbbcff *PdfAcroForm )fillImageWithAppearance (_fdef FieldImageProvider ,_eabbc FieldAppearanceGenerator )error {if _fbbcff ==nil {return nil ;
};_fbcbg ,_ffbe :=_fdef .FieldImageValues ();if _ffbe !=nil {return _ffbe ;};for _ ,_egee :=range _fbbcff .AllFields (){_dgec :=_egee .PartialName ();_geea ,_egbg :=_fbcbg [_dgec ];if !_egbg {if _afab ,_dggg :=_egee .FullName ();_dggg ==nil {_geea ,_egbg =_fbcbg [_afab ];
};};if !_egbg {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_dgec );
continue ;};switch _gfad :=_egee .GetContext ().(type ){case *PdfFieldButton :if _gfad .IsPush (){_gfad .SetFillImage (_geea );};};if _eabbc ==nil {continue ;};for _ ,_eaace :=range _egee .Annotations {_cbaded ,_geaeb :=_eabbc .GenerateAppearanceDict (_fbbcff ,_egee ,_eaace );
if _geaeb !=nil {return _geaeb ;};_eaace .AP =_cbaded ;_eaace .ToPdfObject ();};};return nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_feda :=NewPdfAnnotation ();_fdb :=&PdfAnnotationLine {};_fdb .PdfAnnotation =_feda ;_fdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_feda .SetContext (_fdb );return _fdb ;};

// SetContext sets the sub annotation (context).
func (_bdg *PdfAnnotation )SetContext (ctx PdfModel ){_bdg ._acg =ctx };

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_bcgd *PdfColorspaceSpecialIndexed )ToPdfObject ()_fe .PdfObject {_gdcd :=_fe .MakeArray (_fe .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_gdcd .Append (_bcgd .Base .ToPdfObject ());_gdcd .Append (_fe .MakeInteger (int64 (_bcgd .HiVal )));
_gdcd .Append (_bcgd .Lookup );if _bcgd ._bdded !=nil {_bcgd ._bdded .PdfObject =_gdcd ;return _bcgd ._bdded ;};return _gdcd ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_aeag :=NewPdfAnnotation ();_bdgf :=&PdfAnnotationMovie {};_bdgf .PdfAnnotation =_aeag ;_aeag .SetContext (_bdgf );return _bdgf ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_deef *PdfColorspaceDeviceN )GetNumComponents ()int {return _deef .ColorantNames .Len ()};func _bbfgc (_accga _fe .PdfObject ){_beag .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_accga ,_accga .String ());if _agbad ,_egcc :=_accga .(*_fe .PdfObjectStream );
_egcc {_aggbe ,_dgcab :=_fe .DecodeStream (_agbad );if _dgcab !=nil {_beag .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dgcab );return ;};_beag .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_aggbe );}else if _afaab ,_aagge :=_accga .(*_fe .PdfIndirectObject );
_aagge {_beag .Log .Debug ("\u0025\u0054\u0020%\u0076",_afaab .PdfObject ,_afaab .PdfObject );_beag .Log .Debug ("\u0025\u0073",_afaab .PdfObject .String ());};};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_afacb *PdfPage )GetPageAsIndirectObject ()*_fe .PdfIndirectObject {return _afacb ._eacfe };

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bbcb *_fe .PdfIndirectObject ;};func _aacg (_dfcdg _fe .PdfObject )(PdfFunction ,error ){_dfcdg =_fe .ResolveReference (_dfcdg );if _efdfd ,_cgdc :=_dfcdg .(*_fe .PdfObjectStream );
_cgdc {_afbgc :=_efdfd .PdfObjectDictionary ;_dfbea ,_efag :=_afbgc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fe .PdfObjectInteger );if !_efag {_beag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dfbea ==0{return _gdefeb (_efdfd );}else if *_dfbea ==4{return _fdaca (_efdfd );
}else {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cgfg ,_aeegf :=_dfcdg .(*_fe .PdfIndirectObject );_aeegf {_bdbd ,_dbgf :=_cgfg .PdfObject .(*_fe .PdfObjectDictionary );
if !_dbgf {_beag .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bgdd ,_dbgf :=_bdbd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fe .PdfObjectInteger );
if !_dbgf {_beag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_bgdd ==2{return _fdgg (_cgfg );}else if *_bgdd ==3{return _dcgfa (_cgfg );}else {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bfffc ,_aebac :=_dfcdg .(*_fe .PdfObjectDictionary );
_aebac {_aagbd ,_edbca :=_bfffc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fe .PdfObjectInteger );if !_edbca {_beag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_aagbd ==2{return _fdgg (_bfffc );}else if *_aagbd ==3{return _dcgfa (_bfffc );
}else {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_beag .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dfcdg );
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_ebbcg *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_aeef :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_gccaf ,_bfcge :=_ebbcg .GetNumPages ();if _bfcge !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcge );
return nil ,_bfcge ;};for _cdac :=1;_cdac <=_gccaf ;_cdac ++{_egeda ,_dbbg :=_ebbcg .GetPage (_cdac );if _dbbg !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbbg );return nil ,_dbbg ;};if opts .PageProcessCallback !=nil {_dbbg =opts .PageProcessCallback (_cdac ,_egeda );
if _dbbg !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbbg );return nil ,_dbbg ;};}else if opts .PageCallback !=nil {opts .PageCallback (_cdac ,_egeda );};_dbbg =_aeef .AddPage (_egeda );if _dbbg !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbbg );
return nil ,_dbbg ;};};_aeef ._gbge =_ebbcg .PdfVersion ();if !opts .SkipInfo {_aegdf ,_edaf :=_ebbcg .GetPdfInfo ();if _edaf !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edaf );}else {_aeef ._fcdfd .PdfObject =_aegdf .ToPdfObject ();
};};if !opts .SkipAcroForm {_dacfg :=_aeef .SetForms (_ebbcg .AcroForm );if _dacfg !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dacfg );return nil ,_dacfg ;};};if !opts .SkipOutlines {_aeef .AddOutlineTree (_ebbcg .GetOutlineTree ());
};if !opts .SkipOCProperties {_ddbg ,_edfdg :=_ebbcg .GetOCProperties ();if _edfdg !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edfdg );}else {_edfdg =_aeef .SetOCProperties (_ddbg );if _edfdg !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edfdg );
};};};if !opts .SkipPageLabels {_fcbge ,_dcdcd :=_ebbcg .GetPageLabels ();if _dcdcd !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcdcd );}else {_dcdcd =_aeef .SetPageLabels (_fcbge );if _dcdcd !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcdcd );
};};};if !opts .SkipNamedDests {_faffg ,_ebfca :=_ebbcg .GetNamedDestinations ();if _ebfca !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebfca );}else {_ebfca =_aeef .SetNamedDestinations (_faffg );if _ebfca !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebfca );
};};};if !opts .SkipNameDictionary {_fdagd ,_decf :=_ebbcg .GetNameDictionary ();if _decf !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_decf );}else {_decf =_aeef .SetNameDictionary (_fdagd );if _decf !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_decf );
};};};if !opts .SkipRotation &&_ebbcg .Rotate !=nil {if _cgdgd :=_aeef .SetRotation (*_ebbcg .Rotate );_cgdgd !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgdgd );};};return &_aeef ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_fdegf *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _fdegf ._gbaf ==nil {_fdegf ._gbaf =_ebf .NewPSExecutor (_fdegf .Program );};var _bbcf []_ebf .PSObject ;for _ ,_gbbc :=range xVec {_bbcf =append (_bbcf ,_ebf .MakeReal (_gbbc ));
};_fgffd ,_dccec :=_fdegf ._gbaf .Execute (_bbcf );if _dccec !=nil {return nil ,_dccec ;};_cafbb ,_dccec :=_ebf .PSObjectArrayToFloat64Array (_fgffd );if _dccec !=nil {return nil ,_dccec ;};return _cafbb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acca *PdfActionRendition )ToPdfObject ()_fe .PdfObject {_acca .PdfAction .ToPdfObject ();_deb :=_acca ._bgfg ;_bcc :=_deb .PdfObject .(*_fe .PdfObjectDictionary );_bcc .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeRendition )));_bcc .SetIfNotNil ("\u0052",_acca .R );
_bcc .SetIfNotNil ("\u0041\u004e",_acca .AN );_bcc .SetIfNotNil ("\u004f\u0050",_acca .OP );_bcc .SetIfNotNil ("\u004a\u0053",_acca .JS );return _deb ;};

// SetContext set the sub annotation (context).
func (_agbae *PdfShading )SetContext (ctx PdfModel ){_agbae ._ddfbb =ctx };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cccea pdfCIDFontType2 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){_edfde ,_efdff :=_cccea ._agcfb [r ];if !_efdff {_aagfc ,_aebg :=_fe .GetInt (_cccea .DW );if !_aebg {return _fg .CharMetrics {},false ;};_edfde =int (*_aagfc );};return _fg .CharMetrics {Wx :float64 (_edfde )},true ;
};const (_ceea =0x00001;_cadd =0x00002;_daaa =0x00004;_dgfa =0x00008;_fffge =0x00020;_gbgg =0x00040;_gccd =0x10000;_gecde =0x20000;_cbece =0x40000;);

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_ggeac *PdfPage )Size ()(float64 ,float64 ,error ){_dfcg ,_aeaea :=_ggeac .GetMediaBox ();if _aeaea !=nil {return 0,0,_aeaea ;};_bdaed ,_efca :=_dfcg .Width (),_dfcg .Height ();if _bccab :=_ggeac .Rotate ;_bccab !=nil &&*_bccab %360!=0&&*_bccab %90==0{if _dfcdc :=(360+*_bccab %360)%360;
_dfcdc ==90||_dfcdc ==270{_bdaed ,_efca =_efca ,_bdaed ;};};return _bdaed ,_efca ,nil ;};func (_ceed *PdfFont )baseFields ()*fontCommon {if _ceed ._cdgee ==nil {_beag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _ceed ._cdgee .baseFields ();};

// GetNumComponents returns the number of color components (3 for RGB).
func (_bebda *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func _fecda (_cgdg _fe .PdfObject )(*_fe .PdfObjectDictionary ,*fontCommon ,error ){_eeddb :=&fontCommon {};if _ffgee ,_dgffg :=_cgdg .(*_fe .PdfIndirectObject );_dgffg {_eeddb ._gafg =_ffgee .ObjectNumber ;
};_eaag ,_dcadc :=_fe .GetDict (_cgdg );if !_dcadc {_beag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cgdg );
return nil ,nil ,ErrFontNotSupported ;};_cecb ,_dcadc :=_fe .GetNameVal (_eaag .Get ("\u0054\u0079\u0070\u0065"));if !_dcadc {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _cecb !="\u0046\u006f\u006e\u0074"{_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_cecb ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_fe .ErrTypeError ;};_bgbe ,_dcadc :=_fe .GetNameVal (_eaag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dcadc {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_eeddb ._eegd =_bgbe ;_cdbb ,_dcadc :=_fe .GetNameVal (_eaag .Get ("\u004e\u0061\u006d\u0065"));if _dcadc {_eeddb ._bggg =_cdbb ;};_eadee :=_eaag .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _eadee !=nil {_eeddb ._gcgbd =_fe .TraceToDirectObject (_eadee );
_acaab ,_acea :=_bgee (_eeddb ._gcgbd ,_eeddb );if _acea !=nil {return _eaag ,_eeddb ,_acea ;};_eeddb ._ggee =_acaab ;}else if _bgbe =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_bgbe =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cfbga ,_ecddg :=_bf .NewCIDSystemInfo (_eaag .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _ecddg !=nil {return _eaag ,_eeddb ,_ecddg ;};_aabda :=_a .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cfbga .Registry ,_cfbga .Ordering );if _bf .IsPredefinedCMap (_aabda ){_eeddb ._ggee ,_ecddg =_bf .LoadPredefinedCMap (_aabda );
if _ecddg !=nil {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_aabda ,_ecddg );
};};};_bggf :=_eaag .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _bggf !=nil {_acgcd ,_dbcfg :=_bfac (_bggf );if _dbcfg !=nil {_beag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbcfg );
return _eaag ,_eeddb ,_dbcfg ;};_eeddb ._eaaeg =_acgcd ;};if _bgbe !="\u0054\u0079\u0070e\u0033"{_ebfe ,_ebbb :=_fe .GetNameVal (_eaag .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_ebbb {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _eaag ,_eeddb ,ErrRequiredAttributeMissing ;};_eeddb ._agee =_ebfe ;};return _eaag ,_eeddb ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fcagg *XObjectForm )SetContentStream (content []byte ,encoder _fe .StreamEncoder )error {_febdd :=content ;if encoder ==nil {if _fcagg .Filter !=nil {encoder =_fcagg .Filter ;}else {encoder =_fe .NewRawEncoder ();};};_dbaa ,_gfafdd :=encoder .EncodeBytes (_febdd );
if _gfafdd !=nil {return _gfafdd ;};_febdd =_dbaa ;_fcagg .Stream =_febdd ;_fcagg .Filter =encoder ;return nil ;};func _cfbcf ()*modelManager {_deffc :=modelManager {};_deffc ._afecf =map[PdfModel ]_fe .PdfObject {};_deffc ._eedag =map[_fe .PdfObject ]PdfModel {};
return &_deffc ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gbdd *PdfFont )BytesToCharcodes (data []byte )[]_aee .CharCode {_beag .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ddacf ,_fffbf :=_gbdd ._cdgee .(*pdfFontType0 );_fffbf &&_ddacf ._feaad !=nil {if _gdec ,_afdd :=_ddacf .bytesToCharcodes (data );_afdd {return _gdec ;};};_bagd :=make ([]_aee .CharCode ,0,len (data )+len (data )%2);if _gbdd .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _gaaag :=0;_gaaag < len (data );_gaaag +=2{_ddfe :=uint16 (data [_gaaag ])<<8|uint16 (data [_gaaag +1]);_bagd =append (_bagd ,_aee .CharCode (_ddfe ));};}else {for _ ,_geac :=range data {_bagd =append (_bagd ,_aee .CharCode (_geac ));
};};return _bagd ;};func (_befcd *PdfReader )newPdfActionTransFromDict (_gba *_fe .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gba .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_bbgbg ,_bgfbb :=_fg .NewStdFontByName (HelveticaName );if !_bgfbb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_abef :=_bdbe (_bbgbg );return &PdfFont {_cdgee :&_abef };};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_bgcag *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcec :=vals [0];if _bcec < 0.0||_bcec > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_agga :=vals [1];if _agga < 0.0||_agga > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffgd :=vals [2];if _ffgd < 0.0||_ffgd > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bbbab :=NewPdfColorDeviceRGB (_bcec ,_agga ,_ffgd );return _bbbab ,nil ;};func (_fgaea *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_eecae *LTV )EnableAll (extraCerts []*_ee .Certificate )error {_aadg :=_eecae ._ebeg ._agfb .AcroForm ;for _ ,_fgde :=range _aadg .AllFields (){_cddab ,_ :=_fgde .GetContext ().(*PdfFieldSignature );if _cddab ==nil {continue ;};_cggad :=_cddab .V ;
if _adec :=_eecae .validateSig (_cggad );_adec !=nil {_beag .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_adec );
};if _dfbcc :=_eecae .Enable (_cggad ,extraCerts );_dfbcc !=nil {return _dfbcc ;};};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afee *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbeg :=vals [0];if _dbeg < 0.0||_dbeg > 1.0{_beag .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _dbeg < 0.0{_dbeg =0.0;}else if _dbeg > 1.0{_dbeg =1.0;};return NewPdfColorDeviceGray (_dbeg ),nil ;};func (_dfeg *PdfReader )buildOutlineTree (_ceedc _fe .PdfObject ,_gaafc *PdfOutlineTreeNode ,_feecd *PdfOutlineTreeNode ,_egddc map[_fe .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _egddc ==nil {_egddc =map[_fe .PdfObject ]struct{}{};
};_egddc [_ceedc ]=struct{}{};_gcbbf ,_dcddd :=_ceedc .(*_fe .PdfIndirectObject );if !_dcddd {return nil ,nil ,_a .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ceedc );
};_cgbeec ,_dagd :=_gcbbf .PdfObject .(*_fe .PdfObjectDictionary );if !_dagd {return nil ,nil ,_cg .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_beag .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_cgbeec ,_gcbbf ,_gcbbf );
if _gbgf :=_cgbeec .Get ("\u0054\u0069\u0074l\u0065");_gbgf !=nil {_efdbdd ,_cabea :=_dfeg .newPdfOutlineItemFromIndirectObject (_gcbbf );if _cabea !=nil {return nil ,nil ,_cabea ;};_efdbdd .Parent =_gaafc ;_efdbdd .Prev =_feecd ;_fefdf :=_fe .ResolveReference (_cgbeec .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_dafa :=_egddc [_fefdf ];_fefdf !=nil &&_fefdf !=_gcbbf &&!_dafa {if !_fe .IsNullObject (_fefdf ){_ecacda ,_bcbf ,_bddf :=_dfeg .buildOutlineTree (_fefdf ,&_efdbdd .PdfOutlineTreeNode ,nil ,_egddc );if _bddf !=nil {_beag .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_bddf );
}else {_efdbdd .First =_ecacda ;_efdbdd .Last =_bcbf ;};};};_bbcbg :=_fe .ResolveReference (_cgbeec .Get ("\u004e\u0065\u0078\u0074"));if _ ,_agege :=_egddc [_bbcbg ];_bbcbg !=nil &&_bbcbg !=_gcbbf &&!_agege {if !_fe .IsNullObject (_bbcbg ){_acccb ,_egbbc ,_aaggc :=_dfeg .buildOutlineTree (_bbcbg ,_gaafc ,&_efdbdd .PdfOutlineTreeNode ,_egddc );
if _aaggc !=nil {_beag .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_aaggc );
}else {_efdbdd .Next =_acccb ;return &_efdbdd .PdfOutlineTreeNode ,_egbbc ,nil ;};};};return &_efdbdd .PdfOutlineTreeNode ,&_efdbdd .PdfOutlineTreeNode ,nil ;};_fccaf ,_bfaga :=_cdbf (_gcbbf );if _bfaga !=nil {return nil ,nil ,_bfaga ;};_fccaf .Parent =_gaafc ;
if _cbdce :=_cgbeec .Get ("\u0046\u0069\u0072s\u0074");_cbdce !=nil {_cbdce =_fe .ResolveReference (_cbdce );if _ ,_cdaec :=_egddc [_cbdce ];_cbdce !=nil &&_cbdce !=_gcbbf &&!_cdaec {_gccbb :=_fe .TraceToDirectObject (_cbdce );if _ ,_fccce :=_gccbb .(*_fe .PdfObjectNull );
!_fccce &&_gccbb !=nil {_bgea ,_abcde ,_bfagb :=_dfeg .buildOutlineTree (_cbdce ,&_fccaf .PdfOutlineTreeNode ,nil ,_egddc );if _bfagb !=nil {_beag .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bfagb );
}else {_fccaf .First =_bgea ;_fccaf .Last =_abcde ;};};};};return &_fccaf .PdfOutlineTreeNode ,&_fccaf .PdfOutlineTreeNode ,nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_edbd FieldFlag )Has (fl FieldFlag )bool {return (_edbd .Mask ()&fl .Mask ())> 0};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gacd *PdfShadingPattern )ToPdfObject ()_fe .PdfObject {_gacd .PdfPattern .ToPdfObject ();_gcca :=_gacd .getDict ();if _gacd .Shading !=nil {_gcca .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gacd .Shading .ToPdfObject ());};if _gacd .Matrix !=nil {_gcca .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gacd .Matrix );
};if _gacd .ExtGState !=nil {_gcca .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gacd .ExtGState );};return _gacd ._deebb ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_beebc :_fe .MakeIndirectObject (_fe .MakeDict ())}};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dccbc *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_egcg :=_fad .NewReader (img .getBase ());_gefa :=_gege .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dccbc .AlternateSpace .GetNumComponents (),nil ,img ._fdcdb ,nil );
_affce :=_fad .NewWriter (_gefa );_ddafd :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_beag .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_beag .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dccbc .TintTransform );_dedef :=_dccbc .AlternateSpace .DecodeArray ();var (_dfcef uint32 ;_bdcg error ;);for {_dfcef ,_bdcg =_egcg .ReadSample ();
if _bdcg ==_ecf .EOF {break ;};if _bdcg !=nil {return img ,_bdcg ;};_cbgce :=float64 (_dfcef )/_ddafd ;_fadge ,_fcec :=_dccbc .TintTransform .Evaluate ([]float64 {_cbgce });if _fcec !=nil {return img ,_fcec ;};for _cggba ,_dccf :=range _fadge {_cbcf :=_gege .LinearInterpolate (_dccf ,_dedef [_cggba *2],_dedef [_cggba *2+1],0,1);
if _fcec =_affce .WriteSample (uint32 (_cbcf *_ddafd ));_fcec !=nil {return img ,_fcec ;};};};return _dccbc .AlternateSpace .ImageToRGB (_bfcga (&_gefa ));};func (_adce *PdfWriter )optimize ()error {if _adce ._dbbab ==nil {return nil ;};var _ggdgae error ;
_adce ._cfabe ,_ggdgae =_adce ._dbbab .Optimize (_adce ._cfabe );if _ggdgae !=nil {return _ggdgae ;};_agfdb :=make (map[_fe .PdfObject ]struct{},len (_adce ._cfabe ));for _ ,_efgab :=range _adce ._cfabe {_agfdb [_efgab ]=struct{}{};};_adce ._ebfbf =_agfdb ;
return nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cedcgb *PdfWriter )SetPageLabels (pageLabels _fe .PdfObject )error {if pageLabels ==nil {return nil ;};_beag .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_cedcgb ._gagg .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _cedcgb .addObjects (pageLabels );};

// Mask returns the uin32 bitmask for the specific flag.
func (_gdag FieldFlag )Mask ()uint32 {return uint32 (_gdag )};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_dbbdb *PdfOutline )GetContainingPdfObject ()_fe .PdfObject {return _dbbdb ._bbcb };func (_feagdb *fontFile )parseASCIIPart (_fgbda []byte )error {if len (_fgbda )< 2||string (_fgbda [:2])!="\u0025\u0021"{return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fceac ,_bfagd ,_feebd :=_cdfce (_fgbda );if _feebd !=nil {return _feebd ;};_fdafb :=_bddcc (_fceac );_feagdb ._fcfce =_fdafb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _feagdb ._fcfce ==""{_beag .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _bfagd !=""{_bbbga ,_defdg :=_dgcg (_bfagd );if _defdg !=nil {return _defdg ;};_fdbb ,_defdg :=_aee .NewCustomSimpleTextEncoder (_bbbga ,nil );if _defdg !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_defdg );
return nil ;};_feagdb ._fffee =_fdbb ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgab *PdfAnnotationPopup )ToPdfObject ()_fe .PdfObject {_cgab .PdfAnnotation .ToPdfObject ();_bbbc :=_cgab ._egb ;_cdd :=_bbbc .PdfObject .(*_fe .PdfObjectDictionary );_cdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0050\u006f\u0070u\u0070"));
_cdd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgab .Parent );_cdd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cgab .Open );return _bbbc ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_cgc *PdfAnnotation )ToPdfObject ()_fe .PdfObject {_aabe :=_cgc ._egb ;_gegce :=_aabe .PdfObject .(*_fe .PdfObjectDictionary );_gegce .Clear ();_gegce .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0041\u006e\u006eo\u0074"));_gegce .SetIfNotNil ("\u0052\u0065\u0063\u0074",_cgc .Rect );
_gegce .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cgc .Contents );_gegce .SetIfNotNil ("\u0050",_cgc .P );_gegce .SetIfNotNil ("\u004e\u004d",_cgc .NM );_gegce .SetIfNotNil ("\u004d",_cgc .M );_gegce .SetIfNotNil ("\u0046",_cgc .F );
_gegce .SetIfNotNil ("\u0041\u0050",_cgc .AP );_gegce .SetIfNotNil ("\u0041\u0053",_cgc .AS );_gegce .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_cgc .Border );_gegce .SetIfNotNil ("\u0043",_cgc .C );_gegce .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cgc .StructParent );
_gegce .SetIfNotNil ("\u004f\u0043",_cgc .OC );return _aabe ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gaee *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdca ,_caedc :=color .(*PdfColorPattern );if !_caedc {_beag .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _cdca .Color ==nil {return color ,nil ;};if _gaee .UnderlyingCS ==nil {return nil ,_cg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gaee .UnderlyingCS .ColorToRGB (_cdca .Color );
};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_bddbc :=&PdfOutlineItem {_agcb :_fe .MakeIndirectObject (_fe .MakeDict ())};_bddbc ._affe =_bddbc ;return _bddbc ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_aagac :=PdfWriter {};_aagac ._ebfbf =map[_fe .PdfObject ]struct{}{};_aagac ._cfabe =[]_fe .PdfObject {};_aagac ._acbab =map[_fe .PdfObject ][]*_fe .PdfObjectDictionary {};_aagac ._eafce =map[_fe .PdfObject ]struct{}{};_aagac ._gbge .Major =1;
_aagac ._gbge .Minor =3;_dbcgf :=_fe .MakeDict ();_beeda :=[]struct{_ddbfb _fe .PdfObjectName ;_begfb string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bggca ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_fbfdg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_ccegd ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_dcbec ()},{"\u0054\u0069\u0074l\u0065",_bdccd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cdgea ()}};
for _ ,_edda :=range _beeda {if _edda ._begfb !=""{_dbcgf .Set (_edda ._ddbfb ,_fe .MakeString (_edda ._begfb ));};};if _ebdfa :=_bfage ();!_ebdfa .IsZero (){if _dddcb ,_bbefa :=NewPdfDateFromTime (_ebdfa );_bbefa ==nil {_dbcgf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dddcb .ToPdfObject ());
};};if _egdad :=_dgecf ();!_egdad .IsZero (){if _dabf ,_effcc :=NewPdfDateFromTime (_egdad );_effcc ==nil {_dbcgf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_dabf .ToPdfObject ());};};_fdadf :=_fe .PdfIndirectObject {};_fdadf .PdfObject =_dbcgf ;_aagac ._fcdfd =&_fdadf ;
_aagac .addObject (&_fdadf );_fgcec :=_fe .PdfIndirectObject {};_egge :=_fe .MakeDict ();_egge .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fgcec .PdfObject =_egge ;_aagac ._edadg =&_fgcec ;_aagac .addObject (_aagac ._edadg );
_gbeef ,_cfdfg :=_beegdb ("\u0077");if _cfdfg !=nil {_beag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfdfg );};_aagac ._dcda =_gbeef ;_edaea :=_fe .PdfIndirectObject {};_bgfae :=_fe .MakeDict ();_bgfae .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050\u0061\u0067e\u0073"));
_gcabd :=_fe .PdfObjectArray {};_bgfae .Set ("\u004b\u0069\u0064\u0073",&_gcabd );_bgfae .Set ("\u0043\u006f\u0075n\u0074",_fe .MakeInteger (0));_edaea .PdfObject =_bgfae ;_aagac ._dgdfc =&_edaea ;_aagac ._fbgee =map[_fe .PdfObject ]struct{}{};_aagac .addObject (_aagac ._dgdfc );
_egge .Set ("\u0050\u0061\u0067e\u0073",&_edaea );_aagac ._gagg =_egge ;_beag .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fgcec );return _aagac ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_bgaa *PdfPageResources )SetColorspaceByName (keyName _fe .PdfObjectName ,cs PdfColorspace )error {_ggbea ,_fedbd :=_bgaa .GetColorspaces ();if _fedbd !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fedbd );
return _fedbd ;};if _ggbea ==nil {_ggbea =NewPdfPageResourcesColorspaces ();_bgaa .SetColorSpace (_ggbea );};_ggbea .Set (keyName ,cs );return nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_bfea PdfModel ;_deebb _fe .PdfObject ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gfcgb *Image )ToGoImage ()(_bgf .Image ,error ){_beag .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_adgbc ,_gddg :=_gege .NewImage (int (_gfcgb .Width ),int (_gfcgb .Height ),int (_gfcgb .BitsPerComponent ),_gfcgb .ColorComponents ,_gfcgb .Data ,_gfcgb ._fdcdb ,_gfcgb ._abeag );
if _gddg !=nil {return nil ,_gddg ;};return _adgbc ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;BitsPerFlag *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_gbeea :=&PdfOutline {_bbcb :_fe .MakeIndirectObject (_fe .MakeDict ())};_gbeea ._affe =_gbeea ;return _gbeea ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ggca *_fe .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_adgb *PdfFunctionType2 )ToPdfObject ()_fe .PdfObject {_gcfg :=_fe .MakeDict ();_gcfg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (2));_ffdab :=&_fe .PdfObjectArray {};for _ ,_affaf :=range _adgb .Domain {_ffdab .Append (_fe .MakeFloat (_affaf ));
};_gcfg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffdab );if _adgb .Range !=nil {_ggadd :=&_fe .PdfObjectArray {};for _ ,_agfga :=range _adgb .Range {_ggadd .Append (_fe .MakeFloat (_agfga ));};_gcfg .Set ("\u0052\u0061\u006eg\u0065",_ggadd );};if _adgb .C0 !=nil {_fcbce :=&_fe .PdfObjectArray {};
for _ ,_febbd :=range _adgb .C0 {_fcbce .Append (_fe .MakeFloat (_febbd ));};_gcfg .Set ("\u0043\u0030",_fcbce );};if _adgb .C1 !=nil {_gbaba :=&_fe .PdfObjectArray {};for _ ,_efccg :=range _adgb .C1 {_gbaba .Append (_fe .MakeFloat (_efccg ));};_gcfg .Set ("\u0043\u0031",_gbaba );
};_gcfg .Set ("\u004e",_fe .MakeFloat (_adgb .N ));if _adgb ._agfd !=nil {_adgb ._agfd .PdfObject =_gcfg ;return _adgb ._agfd ;};return _gcfg ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cgaga *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cgaga .HiVal )};};func _dgdg (_adcdc []byte )[]byte {const _dgeg =52845;const _bffag =22719;_begf :=55665;for _ ,_aeea :=range _adcdc [:4]{_begf =(int (_aeea )+_begf )*_dgeg +_bffag ;
};_affa :=make ([]byte ,len (_adcdc )-4);for _fgbaf ,_gbaca :=range _adcdc [4:]{_affa [_fgbaf ]=byte (int (_gbaca )^_begf >>8);_begf =(int (_gbaca )+_begf )*_dgeg +_bffag ;};return _affa ;};func (_dbdc *PdfWriter )getPdfVersion ()string {return _a .Sprintf ("\u0025\u0064\u002e%\u0064",_dbdc ._gbge .Major ,_dbdc ._gbge .Minor );
};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_feeg *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _feeg .UnderlyingCS ==nil {return nil ,_cg .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _feeg .UnderlyingCS .ColorFromFloats (vals );};func (_bccd *PdfSignature )extractChainFromPKCS7 ()([]*_ee .Certificate ,error ){_fecgeg ,_ccec :=_eb .Parse (_bccd .Contents .Bytes ());if _ccec !=nil {return nil ,_ccec ;};return _fecgeg .Certificates ,nil ;
};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fe .PdfObject ;RichMediaContent _fe .PdfObject ;};

// C returns the value of the C component of the color.
func (_feab *PdfColorCalRGB )C ()float64 {return _feab [2]};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fe .PdfObjectStream ;Data []byte ;_gccg *_fe .PdfIndirectObject ;_bdfce *_fe .PdfObjectStream ;};func (_bgfd *PdfWriter )checkPendingObjects (){for _eedc ,_bdada :=range _bgfd ._acbab {if !_bgfd .hasObject (_eedc ){_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_eedc ,_eedc ,_eedc );
for _ ,_cefga :=range _bdada {for _ ,_gcegg :=range _cefga .Keys (){_dgge :=_cefga .Get (_gcegg );if _dgge ==_eedc {_beag .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_cefga .Set (_gcegg ,_fe .MakeNull ());break ;};};};};};};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// Evaluate runs the function on the passed in slice and returns the results.
func (_bbbf *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_beag .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dggbc :=[]float64 {0.0};if _bbbf .C0 !=nil {_dggbc =_bbbf .C0 ;};_affbf :=[]float64 {1.0};if _bbbf .C1 !=nil {_affbf =_bbbf .C1 ;};var _babgb []float64 ;for _eadecc :=0;_eadecc < len (_dggbc );_eadecc ++{_cdgdf :=_dggbc [_eadecc ]+_fa .Pow (x [0],_bbbf .N )*(_affbf [_eadecc ]-_dggbc [_eadecc ]);
_babgb =append (_babgb ,_cdgdf );};return _babgb ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_faagg :_fe .MakeIndirectObject (_fe .MakeDict ())};};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_egegd *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gffbg ,_gadf :=_fe .GetNumbersAsFloat (objects );
if _gadf !=nil {return nil ,_gadf ;};return _egegd .ColorFromFloats (_gffbg );};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_cafg *PdfOutlineTreeNode )GetContainingPdfObject ()_fe .PdfObject {return _cafg .GetContext ().GetContainingPdfObject ();};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_dfeca int ,_eddbd *PdfPage )error ;

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bgefe *PdfAppender )Write (w _ecf .Writer )error {if _bgefe ._fgbc {return _cg .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_fagd :=NewPdfWriter ();_fabe ,_aebe :=_fe .GetDict (_fagd ._dgdfc );if !_aebe {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cag ,_aebe :=_fabe .Get ("\u004b\u0069\u0064\u0073").(*_fe .PdfObjectArray );if !_aebe {return _cg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_aace ,_aebe :=_fabe .Get ("\u0043\u006f\u0075n\u0074").(*_fe .PdfObjectInteger );if !_aebe {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fcga :=_bgefe ._agfb ._fbega ;_ffgce :=_fcga .GetTrailer ();if _ffgce ==nil {return _cg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ebaeda ,_aebe :=_fe .GetIndirect (_ffgce .Get ("\u0052\u006f\u006f\u0074"));
if !_aebe {return _cg .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_acgd ,_aebe :=_fe .GetDict (_ebaeda );if !_aebe {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ebaeda ,*_ffgce );
return _cg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_cead :=range _acgd .Keys (){if _fagd ._gagg .Get (_cead )==nil {_dgcc :=_acgd .Get (_cead );_fagd ._gagg .Set (_cead ,_dgcc );};};if _bgefe ._bdge !=nil {_fagd ._gagg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bgefe ._bdge .ToPdfObject ());
_bgefe .updateObjectsDeep (_bgefe ._bdge .ToPdfObject (),nil );};if _bgefe ._eaeg !=nil {_bgefe .updateObjectsDeep (_bgefe ._eaeg .ToPdfObject (),nil );_fagd ._gagg .Set ("\u0044\u0053\u0053",_bgefe ._eaeg .GetContainingPdfObject ());};if _fagd ._gbge .Major < 2{_fagd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_fagd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_bgefe .addNewObject (_fagd ._fcdfd );_bgefe .addNewObject (_fagd ._edadg );_beef :=false ;if len (_bgefe ._agfb .PageList )!=len (_bgefe ._ffbc ){_beef =true ;}else {for _gaada :=range _bgefe ._agfb .PageList {switch {case _bgefe ._ffbc [_gaada ]==_bgefe ._agfb .PageList [_gaada ]:case _bgefe ._ffbc [_gaada ]==_bgefe .Reader .PageList [_gaada ]:default:_beef =true ;
};if _beef {break ;};};};if _beef {_bgefe .updateObjectsDeep (_fagd ._dgdfc ,nil );}else {_bgefe ._gaaa [_fagd ._dgdfc ]=struct{}{};};_fagd ._dgdfc .ObjectNumber =_bgefe .Reader ._ddff .ObjectNumber ;_bgefe ._fced [_fagd ._dgdfc ]=_bgefe .Reader ._ddff .ObjectNumber ;
_cgag :=[]_fe .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_dcec :=range _bgefe ._ffbc {_gbcg :=_dcec .ToPdfObject ();
*_aace =*_aace +1;if _gda ,_dfad :=_gbcg .(*_fe .PdfIndirectObject );_dfad &&_gda .GetParser ()==_bgefe ._agfb ._fbega {_cag .Append (&_gda .PdfObjectReference );continue ;};if _cbcd ,_acac :=_fe .GetDict (_gbcg );_acac {_gggf ,_abgce :=_cbcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fe .PdfIndirectObject );
for _abgce {_beag .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gggf );_gdfg ,_gecad :=_gggf .PdfObject .(*_fe .PdfObjectDictionary );if !_gecad {return _cg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_egbb :=range _cgag {_beag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egbb );if _cbcd .Get (_egbb )!=nil {_beag .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _acbd :=_gdfg .Get (_egbb );_acbd !=nil {_beag .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egbb );_cbcd .Set (_egbb ,_acbd );};};_gggf ,_abgce =_gdfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fe .PdfIndirectObject );
_beag .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gdfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_cbcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fagd ._dgdfc );};_bgefe .updateObjectsDeep (_gbcg ,nil );
_cag .Append (_gbcg );};if _ ,_gcaa :=_bgefe ._dec .Seek (0,_ecf .SeekStart );_gcaa !=nil {return _gcaa ;};_adgd :=make (map[SignatureHandler ]_ecf .Writer );_fff :=_fe .MakeArray ();for _ ,_acbfg :=range _bgefe ._ebdd {if _cedc ,_agbd :=_fe .GetIndirect (_acbfg );
_agbd {if _dade ,_bgaca :=_cedc .PdfObject .(*pdfSignDictionary );_bgaca {_ggec :=*_dade ._fbgdc ;var _bgff error ;_adgd [_ggec ],_bgff =_ggec .NewDigest (_dade ._badba );if _bgff !=nil {return _bgff ;};_fff .Append (_fe .MakeInteger (0xfffff),_fe .MakeInteger (0xfffff));
};};};if _fff .Len ()> 0{_fff .Append (_fe .MakeInteger (0xfffff),_fe .MakeInteger (0xfffff));};for _ ,_dded :=range _bgefe ._ebdd {if _ceae ,_cegc :=_fe .GetIndirect (_dded );_cegc {if _fcgf ,_bfag :=_ceae .PdfObject .(*pdfSignDictionary );_bfag {_fcgf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fff );
};};};_agde :=len (_adgd )> 0;var _efcf _ecf .Reader =_bgefe ._dec ;if _agde {_dfee :=make ([]_ecf .Writer ,0,len (_adgd ));for _ ,_dfce :=range _adgd {_dfee =append (_dfee ,_dfce );};_efcf =_ecf .TeeReader (_bgefe ._dec ,_ecf .MultiWriter (_dfee ...));
};_ecag ,_aade :=_ecf .Copy (w ,_efcf );if _aade !=nil {return _aade ;};if len (_bgefe ._ebdd )==0{return nil ;};_fagd ._eebed =_ecag ;_fagd .ObjNumOffset =_bgefe ._afga ;_fagd ._ccbff =true ;_fagd ._bggbg =_bgefe ._beebe ;_fagd ._gfafe =_bgefe ._dedg ;
_fagd ._agdca =_bgefe ._dgcb ;_fagd ._gbge =_bgefe ._agfb .PdfVersion ();_fagd ._bbgfff =_bgefe ._fced ;_eeccg :=_bgefe ._dabd .GetXrefType ();if _eeccg !=nil {_cfbd :=*_eeccg ==_fe .XrefTypeObjectStream ;_fagd ._ccba =&_cfbd ;};_fagd ._ebfbf =map[_fe .PdfObject ]struct{}{};
_fagd ._cfabe =[]_fe .PdfObject {};for _ ,_cbbe :=range _bgefe ._ebdd {if _ ,_bggc :=_bgefe ._gaaa [_cbbe ];_bggc {continue ;};_fagd .addObject (_cbbe );};_abbg :=w ;if _agde {_abbg =_bea .NewBuffer (nil );};if _bfff :=_fagd .Write (_abbg );_bfff !=nil {return _bfff ;
};if _agde {_cfaf :=_abbg .(*_bea .Buffer ).Bytes ();_dcca :=_fe .MakeArray ();var _cbfg []*pdfSignDictionary ;var _acaae int64 ;for _ ,_gfda :=range _fagd ._cfabe {if _dccag ,_bgad :=_fe .GetIndirect (_gfda );_bgad {if _cccg ,_cdda :=_dccag .PdfObject .(*pdfSignDictionary );
_cdda {_cbfg =append (_cbfg ,_cccg );_gbaa :=_cccg ._cedbf +int64 (_cccg ._dcdbg );_dcca .Append (_fe .MakeInteger (_acaae ),_fe .MakeInteger (_gbaa -_acaae ));_acaae =_cccg ._cedbf +int64 (_cccg ._aaedf );};};};_dcca .Append (_fe .MakeInteger (_acaae ),_fe .MakeInteger (_ecag +int64 (len (_cfaf ))-_acaae ));
_gfc :=[]byte (_dcca .WriteString ());for _ ,_fef :=range _cbfg {_fafa :=int (_fef ._cedbf -_ecag );for _cdge :=_fef ._cfge ;_cdge < _fef ._feagbc ;_cdge ++{_cfaf [_fafa +_cdge ]=' ';};_fafaa :=_cfaf [_fafa +_fef ._cfge :_fafa +_fef ._feagbc ];copy (_fafaa ,_gfc );
};var _agc int ;for _ ,_gae :=range _cbfg {_decgf :=int (_gae ._cedbf -_ecag );_acgff :=_cfaf [_agc :_decgf +_gae ._dcdbg ];_bafa :=*_gae ._fbgdc ;_adgd [_bafa ].Write (_acgff );_agc =_decgf +_gae ._aaedf ;};for _ ,_dacd :=range _cbfg {_dbfff :=_cfaf [_agc :];
_dcee :=*_dacd ._fbgdc ;_adgd [_dcee ].Write (_dbfff );};for _ ,_ebag :=range _cbfg {_gcae :=int (_ebag ._cedbf -_ecag );_dafe :=*_ebag ._fbgdc ;_cede :=_adgd [_dafe ];if _bcfe :=_dafe .Sign (_ebag ._badba ,_cede );_bcfe !=nil {return _bcfe ;};_ebag ._badba .ByteRange =_dcca ;
_gaaf :=[]byte (_ebag ._badba .Contents .WriteString ());for _ebgf :=_ebag ._cfge ;_ebgf < _ebag ._feagbc ;_ebgf ++{_cfaf [_gcae +_ebgf ]=' ';};for _geef :=_ebag ._dcdbg ;_geef < _ebag ._aaedf ;_geef ++{_cfaf [_gcae +_geef ]=' ';};_gdad :=_cfaf [_gcae +_ebag ._cfge :_gcae +_ebag ._feagbc ];
copy (_gdad ,_gfc );_gdad =_cfaf [_gcae +_ebag ._dcdbg :_gcae +_ebag ._aaedf ];copy (_gdad ,_gaaf );};_fbeg :=_bea .NewBuffer (_cfaf );_ ,_aade =_ecf .Copy (w ,_fbeg );if _aade !=nil {return _aade ;};};_bgefe ._fgbc =true ;return nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_dggf *PdfFieldButton )GetType ()ButtonType {_eceef :=ButtonTypeCheckbox ;if _dggf .Ff !=nil {if (uint32 (*_dggf .Ff )&FieldFlagPushbutton .Mask ())> 0{_eceef =ButtonTypePush ;}else if (uint32 (*_dggf .Ff )&FieldFlagRadio .Mask ())> 0{_eceef =ButtonTypeRadio ;
};};return _eceef ;};

// SetOCProperties sets the optional content properties.
func (_fbgf *PdfWriter )SetOCProperties (ocProperties _fe .PdfObject )error {_fbdde :=_fbgf ._gagg ;if ocProperties !=nil {_beag .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_fbdde .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _fbgf .addObjects (ocProperties );};return nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ffeb *Image )ColorAt (x ,y int )(_bd .Color ,error ){_edeee :=_gege .BytesPerLine (int (_ffeb .Width ),int (_ffeb .BitsPerComponent ),_ffeb .ColorComponents );switch _ffeb .ColorComponents {case 1:return _gege .ColorAtGrayscale (x ,y ,int (_ffeb .BitsPerComponent ),_edeee ,_ffeb .Data ,_ffeb ._abeag );
case 3:return _gege .ColorAtNRGBA (x ,y ,int (_ffeb .Width ),_edeee ,int (_ffeb .BitsPerComponent ),_ffeb .Data ,_ffeb ._fdcdb ,_ffeb ._abeag );case 4:return _gege .ColorAtCMYK (x ,y ,int (_ffeb .Width ),_ffeb .Data ,_ffeb ._abeag );};_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffeb .ColorComponents ,_ffeb .BitsPerComponent );
return nil ,_cg .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ToInteger convert to an integer format.
func (_cfff *PdfColorLab )ToInteger (bits int )[3]uint32 {_cggab :=_fa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cggab *_cfff .L ()),uint32 (_cggab *_cfff .A ()),uint32 (_cggab *_cfff .B ())};};func _gdefeb (_abbbg *_fe .PdfObjectStream )(*PdfFunctionType0 ,error ){_dcded :=&PdfFunctionType0 {};
_dcded ._gbfa =_abbbg ;_aggb :=_abbbg .PdfObjectDictionary ;_cbafb ,_dgbg :=_fe .TraceToDirectObject (_aggb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );if !_dgbg {_beag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cbafb .Len ()< 0||_cbafb .Len ()%2!=0{_beag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dcded .NumInputs =_cbafb .Len ()/2;_acga ,_abbe :=_cbafb .ToFloat64Array ();if _abbe !=nil {return nil ,_abbe ;};_dcded .Domain =_acga ;
_cbafb ,_dgbg =_fe .TraceToDirectObject (_aggb .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );if !_dgbg {_beag .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cbafb .Len ()< 0||_cbafb .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dcded .NumOutputs =_cbafb .Len ()/2;_acfaf ,_abbe :=_cbafb .ToFloat64Array ();if _abbe !=nil {return nil ,_abbe ;
};_dcded .Range =_acfaf ;_cbafb ,_dgbg =_fe .TraceToDirectObject (_aggb .Get ("\u0053\u0069\u007a\u0065")).(*_fe .PdfObjectArray );if !_dgbg {_beag .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ggbab ,_abbe :=_cbafb .ToIntegerArray ();
if _abbe !=nil {return nil ,_abbe ;};if len (_ggbab )!=_dcded .NumInputs {_beag .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcded .Size =_ggbab ;_dafb ,_dgbg :=_fe .TraceToDirectObject (_aggb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fe .PdfObjectInteger );
if !_dgbg {_beag .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_dafb !=1&&*_dafb !=2&&*_dafb !=4&&*_dafb !=8&&*_dafb !=12&&*_dafb !=16&&*_dafb !=24&&*_dafb !=32{_beag .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_dafb );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcded .BitsPerSample =int (*_dafb );_dcded .Order =1;_dbda ,_dgbg :=_fe .TraceToDirectObject (_aggb .Get ("\u004f\u0072\u0064e\u0072")).(*_fe .PdfObjectInteger );
if _dgbg {if *_dbda !=1&&*_dbda !=3{_beag .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dbda );return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcded .Order =int (*_dbda );
};_cbafb ,_dgbg =_fe .TraceToDirectObject (_aggb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fe .PdfObjectArray );if _dgbg {_abagf ,_dcbbg :=_cbafb .ToFloat64Array ();if _dcbbg !=nil {return nil ,_dcbbg ;};_dcded .Encode =_abagf ;};_cbafb ,_dgbg =_fe .TraceToDirectObject (_aggb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fe .PdfObjectArray );
if _dgbg {_fegdc ,_fffgb :=_cbafb .ToFloat64Array ();if _fffgb !=nil {return nil ,_fffgb ;};_dcded .Decode =_fegdc ;};_gbef ,_abbe :=_fe .DecodeStream (_abbbg );if _abbe !=nil {return nil ,_abbe ;};_dcded ._ecgdd =_gbef ;return _dcded ,nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_eeaae *PdfReader )CheckAccessRights (password []byte )(bool ,_aff .Permissions ,error ){return _eeaae ._fbega .CheckAccessRights (password );};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bdb :=NewPdfAction ();_accb :=&PdfActionResetForm {};_accb .PdfAction =_bdb ;_bdb .SetContext (_accb );return _accb ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_gaffb *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_beag .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cg .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func _dfbce (_eaeb _fe .PdfObject )(string ,error ){_eaeb =_fe .TraceToDirectObject (_eaeb );switch _fbafg :=_eaeb .(type ){case *_fe .PdfObjectString :return _fbafg .Str (),nil ;
case *_fe .PdfObjectStream :_dggad ,_gdcg :=_fe .DecodeStream (_fbafg );if _gdcg !=nil {return "",_gdcg ;};return string (_dggad ),nil ;};return "",_a .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_eaeb );
};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_gbfae byte )byte ;func _cdfce (_bcgc []byte )(_aaced ,_gbcc string ,_ggeg error ){_beag .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bcgc ));_efded :=_bccag .FindIndex (_bcgc );
if _efded ==nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_fe .ErrTypeError ;
};_agecd :=_efded [1];_adacb :=_ca .Index (string (_bcgc [_agecd :]),_edag );if _adacb < 0{_aaced =string (_bcgc [_agecd :]);return _aaced ,"",nil ;};_ebbdc :=_agecd +_adacb ;_aaced =string (_bcgc [_agecd :_ebbdc ]);_bfab :=_ebbdc ;_adacb =_ca .Index (string (_bcgc [_bfab :]),_cdbe );
if _adacb < 0{_beag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggeg );return "","",_fe .ErrTypeError ;};_fcdd :=_bfab +_adacb ;
_gbcc =string (_bcgc [_bfab :_fcdd ]);return _aaced ,_gbcc ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_caffb *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_dagbf :=func (_abbba float64 )float64 {if _abbba >=6.0/29{return _abbba *_abbba *_abbba ;};return 108.0/841*(_abbba -4/29);};_edad ,_bedaf :=color .(*PdfColorLab );if !_bedaf {_beag .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_edad .L ();AStar :=_edad .A ();BStar :=_edad .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_caffb .WhitePoint [0]*_dagbf (L );Y :=_caffb .WhitePoint [1]*_dagbf (M );Z :=_caffb .WhitePoint [2]*_dagbf (N );_facd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gdef :=-0.969256*X +1.875992*Y +0.041556*Z ;_defg :=0.055648*X +-0.204043*Y +1.057311*Z ;
_facd =_fa .Min (_fa .Max (_facd ,0),1.0);_gdef =_fa .Min (_fa .Max (_gdef ,0),1.0);_defg =_fa .Min (_fa .Max (_defg ,0),1.0);return NewPdfColorDeviceRGB (_facd ,_gdef ,_defg ),nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdaebc *PdfShadingType4 )ToPdfObject ()_fe .PdfObject {_bdaebc .PdfShading .ToPdfObject ();_cggcb ,_fffdb :=_bdaebc .getShadingDict ();if _fffdb !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bdaebc .BitsPerCoordinate !=nil {_cggcb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bdaebc .BitsPerCoordinate );};if _bdaebc .BitsPerComponent !=nil {_cggcb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdaebc .BitsPerComponent );
};if _bdaebc .BitsPerFlag !=nil {_cggcb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bdaebc .BitsPerFlag );};if _bdaebc .Decode !=nil {_cggcb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bdaebc .Decode );};if _bdaebc .Function !=nil {if len (_bdaebc .Function )==1{_cggcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdaebc .Function [0].ToPdfObject ());
}else {_dbcfe :=_fe .MakeArray ();for _ ,_fdgeb :=range _bdaebc .Function {_dbcfe .Append (_fdgeb .ToPdfObject ());};_cggcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbcfe );};};return _bdaebc ._ebfb ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dcadf *PdfFieldButton )IsPush ()bool {return _dcadf .GetType ()==ButtonTypePush };func (_bccae *PdfWriter )checkCrossReferenceStream ()bool {_cebad :=_bccae ._gbge .Major > 1||(_bccae ._gbge .Major ==1&&_bccae ._gbge .Minor > 4);if _bccae ._ccba !=nil {_cebad =*_bccae ._ccba ;
};return _cebad ;};

// String implements interface PdfObject.
func (_ff *PdfAction )String ()string {_dg ,_cab :=_ff .ToPdfObject ().(*_fe .PdfIndirectObject );if _cab {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ff ._gf ,_dg .PdfObject .String ());};return "";};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdgf pdfFontType3 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){_abba :=_fdgf .Encoder ();if _abba ==nil {_beag .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdgf );
return _fg .CharMetrics {},false ;};_adeef ,_afbb :=_abba .RuneToCharcode (r );if !_afbb {if r !=' '{_beag .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdgf );
};return _fg .CharMetrics {},false ;};_bfeb ,_adbae :=_fdgf .GetCharMetrics (_adeef );return _bfeb ,_adbae ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_afgf *_fe .PdfObjectDictionary ;};

// ToPdfObject implements interface PdfModel.
func (_afg *PdfAnnotationScreen )ToPdfObject ()_fe .PdfObject {_afg .PdfAnnotation .ToPdfObject ();_aced :=_afg ._egb ;_gagb :=_aced .PdfObject .(*_fe .PdfObjectDictionary );_gagb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_gagb .SetIfNotNil ("\u0054",_afg .T );_gagb .SetIfNotNil ("\u004d\u004b",_afg .MK );_gagb .SetIfNotNil ("\u0041",_afg .A );_gagb .SetIfNotNil ("\u0041\u0041",_afg .AA );return _aced ;};func (_dcccb *PdfWriter )adjustXRefAffectedVersion (_ggdf bool ){if _ggdf &&_dcccb ._gbge .Major ==1&&_dcccb ._gbge .Minor < 5{_dcccb ._gbge .Minor =5;
};};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_acgg :=PdfColorCalGray (grayVal );return &_acgg ;};func (_bgaga *LTV )getCerts (_abcd []*_ee .Certificate )([][]byte ,error ){_cbgdg :=make ([][]byte ,0,len (_abcd ));for _ ,_gecfb :=range _abcd {_cbgdg =append (_cbgdg ,_gecfb .Raw );
};return _cbgdg ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_aaf :=NewPdfAnnotation ();_eaf :=&PdfAnnotationProjection {};_eaf .PdfAnnotation =_aaf ;_eaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aaf .SetContext (_eaf );return _eaf ;};

// AddWatermarkImage adds a watermark to the page.
func (_agfa *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_deced ,_fcce :=_agfa .GetMediaBox ();if _fcce !=nil {return _fcce ;};_aegd :=_deced .Urx -_deced .Llx ;_bfgee :=_deced .Ury -_deced .Lly ;_fdggd :=float64 (*ximg .Width );
_dbeeb :=(_aegd -_fdggd )/2;if opt .FitToWidth {_fdggd =_aegd ;_dbeeb =0;};_bddbe :=_bfgee ;_eaead :=float64 (0);if opt .PreserveAspectRatio {_bddbe =_fdggd *float64 (*ximg .Height )/float64 (*ximg .Width );_eaead =(_bfgee -_bddbe )/2;};if _agfa .Resources ==nil {_agfa .Resources =NewPdfPageResources ();
};_bcdgb :=0;_bggccg :=_fe .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_bcdgb ));for _agfa .Resources .HasXObjectByName (_bggccg ){_bcdgb ++;_bggccg =_fe .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_bcdgb ));};_fcce =_agfa .AddImageResource (_bggccg ,ximg );
if _fcce !=nil {return _fcce ;};_bcdgb =0;_gddcg :=_fe .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_bcdgb ));for _agfa .HasExtGState (_gddcg ){_bcdgb ++;_gddcg =_fe .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_bcdgb ));};_daag :=_fe .MakeDict ();
_daag .Set ("\u0042\u004d",_fe .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_daag .Set ("\u0043\u0041",_fe .MakeFloat (opt .Alpha ));_daag .Set ("\u0063\u0061",_fe .MakeFloat (opt .Alpha ));_fcce =_agfa .AddExtGState (_gddcg ,_daag );if _fcce !=nil {return _fcce ;
};_efecf :=_a .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gddcg ,_fdggd ,_bddbe ,_dbeeb ,_eaead ,_bggccg );
_agfa .AddContentStreamByString (_efecf );return nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fe .PdfObject ,error );};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bdaeb *PdfField )GetContext ()PdfModel {return _bdaeb ._bbdf };

// GetContainingPdfObject implements interface PdfModel.
func (_aa *PdfAction )GetContainingPdfObject ()_fe .PdfObject {return _aa ._bgfg };

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eafade :=&PdfPageResources {};_eafade ._dafc =_fe .MakeDict ();return _eafade ;};func (_aaac *PdfReader )loadStructure ()error {if _aaac ._fbega .GetCrypter ()!=nil &&!_aaac ._fbega .IsAuthenticated (){return _a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bgbg :=_aaac ._fbega .GetTrailer ();if _bgbg ==nil {return _a .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ggfg ,_aacfb :=_bgbg .Get ("\u0052\u006f\u006f\u0074").(*_fe .PdfObjectReference );if !_aacfb {return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bgbg );
};_dcceb ,_dgbe :=_aaac ._fbega .LookupByReference (*_ggfg );if _dgbe !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dgbe );
return _dgbe ;};_bbfgd ,_aacfb :=_dcceb .(*_fe .PdfIndirectObject );if !_aacfb {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dcceb ,*_bgbg );
return _cg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eceb ,_aacfb :=(*_bbfgd ).PdfObject .(*_fe .PdfObjectDictionary );if !_aacfb {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_bbfgd .PdfObject );
return _cg .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_beag .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eceb );_feada ,_aacfb :=_eceb .Get ("\u0050\u0061\u0067e\u0073").(*_fe .PdfObjectReference );
if !_aacfb {return _cg .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cagcb ,_dgbe :=_aaac ._fbega .LookupByReference (*_feada );
if _dgbe !=nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dgbe ;};_gggge ,_aacfb :=_cagcb .(*_fe .PdfIndirectObject );if !_aacfb {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_beag .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_gggge );return _cg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dafbb ,_aacfb :=_gggge .PdfObject .(*_fe .PdfObjectDictionary );if !_aacfb {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_gggge );
return _cg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gcaeg ,_aacfb :=_fe .GetInt (_dafbb .Get ("\u0043\u006f\u0075n\u0074"));if !_aacfb {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cg .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_aacfb =_fe .GetName (_dafbb .Get ("\u0054\u0079\u0070\u0065"));!_aacfb {_beag .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_dafbb .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050\u0061\u0067e\u0073"));};if _cadgc ,_bgdb :=_fe .GetInt (_dafbb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_bgdb {_gadeb :=int64 (*_cadgc );_aaac .Rotate =&_gadeb ;};_aaac ._ebda =_ggfg ;
_aaac ._gbbce =_eceb ;_aaac ._dega =_dafbb ;_aaac ._ddff =_gggge ;_aaac ._facag =int (*_gcaeg );_aaac ._dgdea =[]*_fe .PdfIndirectObject {};_ddgfb :=map[_fe .PdfObject ]struct{}{};_dgbe =_aaac .buildPageList (_gggge ,nil ,_ddgfb );if _dgbe !=nil {return _dgbe ;
};_beag .Log .Trace ("\u002d\u002d\u002d");_beag .Log .Trace ("\u0054\u004f\u0043");_beag .Log .Trace ("\u0050\u0061\u0067e\u0073");_beag .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_aaac ._dgdea ),_aaac ._dgdea );_aaac ._agaga ,_dgbe =_aaac .loadOutlines ();
if _dgbe !=nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dgbe );
return _dgbe ;};_aaac .AcroForm ,_dgbe =_aaac .loadForms ();if _dgbe !=nil {return _dgbe ;};_aaac .DSS ,_dgbe =_aaac .loadDSS ();if _dgbe !=nil {return _dgbe ;};return nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_cbfb :=NewPdfAnnotation ();_eea :=&PdfAnnotationFreeText {};_eea .PdfAnnotation =_cbfb ;_eea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbfb .SetContext (_eea );return _eea ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// CustomKeys returns all custom info keys as list.
func (_bdffc *PdfInfo )CustomKeys ()[]string {if _bdffc ._fefc ==nil {return nil ;};_gdefb :=make ([]string ,len (_bdffc ._fefc .Keys ()));for _ ,_gefef :=range _bdffc ._fefc .Keys (){_gdefb =append (_gdefb ,_gefef .String ());};return _gdefb ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_ggab _fe .PdfObject ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fcef *PdfReader )GetNamedDestinations ()(_fe .PdfObject ,error ){_fegdcg :=_fe .ResolveReference (_fcef ._gbbce .Get ("\u0044\u0065\u0073t\u0073"));if _fegdcg ==nil {return nil ,nil ;};if !_fcef ._edeea {_eaage :=_fcef .traverseObjectData (_fegdcg );
if _eaage !=nil {return nil ,_eaage ;};};return _fegdcg ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_fdacf []byte )(_cdecb int ,_addadf error );};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_abfde *XObjectForm )GetContainingPdfObject ()_fe .PdfObject {return _abfde ._edaef };var (ErrRequiredAttributeMissing =_cg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_deea =_cg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_cg .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cg .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_geg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fe .ErrNotSupported );ErrType1CFontNotSupported =_geg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fe .ErrNotSupported );
ErrType3FontNotSupported =_geg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fe .ErrNotSupported );
ErrTTCmapNotSupported =_geg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fe .ErrNotSupported );
ErrSignNotEnoughSpace =_geg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_geg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// GetOCProperties returns the optional content properties PdfObject.
func (_dadcc *PdfReader )GetOCProperties ()(_fe .PdfObject ,error ){_ffbee :=_dadcc ._gbbce ;_dccbg :=_ffbee .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dccbg =_fe .ResolveReference (_dccbg );if !_dadcc ._edeea {_aeccg :=_dadcc .traverseObjectData (_dccbg );
if _aeccg !=nil {return nil ,_aeccg ;};};return _dccbg ,nil ;};func (_dcc *PdfReader )newPdfActionThreadFromDict (_dbc *_fe .PdfObjectDictionary )(*PdfActionThread ,error ){_agd ,_ecdd :=_feba (_dbc .Get ("\u0046"));if _ecdd !=nil {return nil ,_ecdd ;};
return &PdfActionThread {D :_dbc .Get ("\u0044"),B :_dbc .Get ("\u0042"),F :_agd },nil ;};

// ToPdfObject implements interface PdfModel.
func (_agf *PdfAnnotationRedact )ToPdfObject ()_fe .PdfObject {_agf .PdfAnnotation .ToPdfObject ();_dace :=_agf ._egb ;_beac :=_dace .PdfObject .(*_fe .PdfObjectDictionary );_agf .PdfAnnotationMarkup .appendToPdfDictionary (_beac );_beac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_beac .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agf .QuadPoints );_beac .SetIfNotNil ("\u0049\u0043",_agf .IC );_beac .SetIfNotNil ("\u0052\u004f",_agf .RO );_beac .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_agf .OverlayText );
_beac .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_agf .Repeat );_beac .SetIfNotNil ("\u0044\u0041",_agf .DA );_beac .SetIfNotNil ("\u0051",_agf .Q );return _dace ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_cgeag *PdfAcroForm )ToPdfObject ()_fe .PdfObject {_dbcfa :=_cgeag ._faagg ;_bggeb :=_dbcfa .PdfObject .(*_fe .PdfObjectDictionary );if _cgeag .Fields !=nil {_dfcd :=_fe .PdfObjectArray {};for _ ,_abdgc :=range *_cgeag .Fields {_eefg :=_abdgc .GetContext ();
if _eefg !=nil {_dfcd .Append (_eefg .ToPdfObject ());}else {_dfcd .Append (_abdgc .ToPdfObject ());};};_bggeb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dfcd );};if _cgeag .NeedAppearances !=nil {_bggeb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_cgeag .NeedAppearances );
};if _cgeag .SigFlags !=nil {_bggeb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_cgeag .SigFlags );};if _cgeag .CO !=nil {_bggeb .Set ("\u0043\u004f",_cgeag .CO );};if _cgeag .DR !=nil {_bggeb .Set ("\u0044\u0052",_cgeag .DR .ToPdfObject ());
};if _cgeag .DA !=nil {_bggeb .Set ("\u0044\u0041",_cgeag .DA );};if _cgeag .Q !=nil {_bggeb .Set ("\u0051",_cgeag .Q );};if _cgeag .XFA !=nil {_bggeb .Set ("\u0058\u0046\u0041",_cgeag .XFA );};return _dbcfa ;};

// Encoder returns the font's text encoder.
func (_fcea pdfFontType0 )Encoder ()_aee .TextEncoder {return _fcea ._gbdda };

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_ggdbg *PdfPageResources )GetXObjectFormByName (keyName _fe .PdfObjectName )(*XObjectForm ,error ){_cafef ,_fabc :=_ggdbg .GetXObjectByName (keyName );if _cafef ==nil {return nil ,nil ;};if _fabc !=XObjectTypeForm {return nil ,_cg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_bbced ,_gacgg :=NewXObjectFormFromStream (_cafef );if _gacgg !=nil {return nil ,_gacgg ;};return _bbced ,nil ;};var (_bccag =_f .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_ebdf =_f .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_eebcf =_f .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_edag ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_cdbe ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_fgad ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// GetPdfInfo returns the PDF info dictionary.
func (_adfg *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_afdfb ,_aegde :=_adfg .GetTrailer ();if _aegde !=nil {return nil ,_aegde ;};var _ddgdabg *_fe .PdfObjectDictionary ;_ddbgb :=_afdfb .Get ("\u0049\u006e\u0066\u006f");switch _dgbfb :=_ddbgb .(type ){case *_fe .PdfObjectReference :_bdab :=_dgbfb ;
_ddbgb ,_aegde =_adfg .GetIndirectObjectByNumber (int (_bdab .ObjectNumber ));_ddbgb =_fe .TraceToDirectObject (_ddbgb );if _aegde !=nil {return nil ,_aegde ;};_ddgdabg ,_ =_ddbgb .(*_fe .PdfObjectDictionary );case *_fe .PdfObjectDictionary :_ddgdabg =_dgbfb ;
};if _ddgdabg ==nil {return nil ,_cg .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_gcabc ,_aegde :=NewPdfInfoFromObject (_ddgdabg );if _aegde !=nil {return nil ,_aegde ;
};return _gcabc ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_dadfc :=&XObjectImage {};_bbdgd :=&_fe .PdfObjectStream {};_bbdgd .PdfObjectDictionary =_fe .MakeDict ();_dadfc ._egeea =_bbdgd ;return _dadfc ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_eceed *PdfPattern )GetContainingPdfObject ()_fe .PdfObject {return _eceed ._deebb };

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fe .StreamEncoder ;Intent _fe .PdfObject ;ImageMask _fe .PdfObject ;Mask _fe .PdfObject ;Matte _fe .PdfObject ;Decode _fe .PdfObject ;Interpolate _fe .PdfObject ;Alternatives _fe .PdfObject ;
SMask _fe .PdfObject ;SMaskInData _fe .PdfObject ;Name _fe .PdfObject ;StructParent _fe .PdfObject ;ID _fe .PdfObject ;OPI _fe .PdfObject ;Metadata _fe .PdfObject ;OC _fe .PdfObject ;Stream []byte ;_egeea *_fe .PdfObjectStream ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_aceg *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};type modelManager struct{_afecf map[PdfModel ]_fe .PdfObject ;_eedag map[_fe .PdfObject ]PdfModel ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dfgd *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bbdg *PdfPage )Duplicate ()*PdfPage {_edaeb :=*_bbdg ;_edaeb ._dcfdb =_fe .MakeDict ();_edaeb ._eacfe =_fe .MakeIndirectObject (_edaeb ._dcfdb );return &_edaeb ;};func (_bffaf *pdfFontSimple )addEncoding ()error {var (_fecdf string ;_fcee map[_aee .CharCode ]_aee .GlyphName ;
_afad _aee .SimpleEncoder ;);if _bffaf .Encoder ()!=nil {_afdf ,_baebg :=_bffaf .Encoder ().(_aee .SimpleEncoder );if _baebg &&_afdf !=nil {_fecdf =_afdf .BaseName ();};};if _bffaf .Encoding !=nil {_eddbb ,_eaea ,_gdggb :=_bffaf .getFontEncoding ();if _gdggb !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bffaf ._agee ,_bffaf ._eegd ,_bffaf .Encoding ,_bffaf .Encoding ,_gdggb );
return _gdggb ;};if _eddbb !=""{_fecdf =_eddbb ;};_fcee =_eaea ;_afad ,_gdggb =_aee .NewSimpleTextEncoder (_fecdf ,_fcee );if _gdggb !=nil {return _gdggb ;};};if _afad ==nil {_ffda :=_bffaf ._eaaeg ;if _ffda !=nil {switch _bffaf ._eegd {case "\u0054\u0079\u0070e\u0031":if _ffda .fontFile !=nil &&_ffda .fontFile ._fffee !=nil {_beag .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_afad =_ffda .fontFile ._fffee ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ffda ._faecg !=nil {_beag .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_addce ,_acdd :=_ffda ._faecg .MakeEncoder ();
if _acdd ==nil {_afad =_addce ;};};};};};if _afad !=nil {if _fcee !=nil {_beag .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcee ,_bffaf .baseFields ());
_afad =_aee .ApplyDifferences (_afad ,_fcee );};_bffaf .SetEncoder (_afad );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddbef *PdfAnnotationInk )ToPdfObject ()_fe .PdfObject {_ddbef .PdfAnnotation .ToPdfObject ();_cgfc :=_ddbef ._egb ;_caa :=_cgfc .PdfObject .(*_fe .PdfObjectDictionary );_ddbef .PdfAnnotationMarkup .appendToPdfDictionary (_caa );_caa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0049\u006e\u006b"));
_caa .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ddbef .InkList );_caa .SetIfNotNil ("\u0042\u0053",_ddbef .BS );return _cgfc ;};func (_bafc fontCommon )isCIDFont ()bool {if _bafc ._eegd ==""{_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bafc );
};_dbddb :=false ;switch _bafc ._eegd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dbddb =true ;};_beag .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_dbddb ,_bafc );
return _dbddb ;};var _ pdfFont =(*pdfFontSimple )(nil );

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_db *PdfAction )GetContext ()PdfModel {if _db ==nil {return nil ;};return _db ._gf ;};

// GetContentStream returns the XObject Form's content stream.
func (_edbcc *XObjectForm )GetContentStream ()([]byte ,error ){_cebda ,_dgcbf :=_fe .DecodeStream (_edbcc ._edaef );if _dgcbf !=nil {return nil ,_dgcbf ;};return _cebda ,nil ;};func _bdbef (_eabega _fe .PdfObject )(*PdfPageResourcesColorspaces ,error ){_decba :=&PdfPageResourcesColorspaces {};
if _bgccb ,_fbdaf :=_eabega .(*_fe .PdfIndirectObject );_fbdaf {_decba ._ggca =_bgccb ;_eabega =_bgccb .PdfObject ;};_dgfge ,_dgce :=_fe .GetDict (_eabega );if !_dgce {return nil ,_cg .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_decba .Names =[]string {};_decba .Colorspaces =map[string ]PdfColorspace {};for _ ,_cgfbb :=range _dgfge .Keys (){_aabec :=_dgfge .Get (_cgfbb );_decba .Names =append (_decba .Names ,string (_cgfbb ));_abdac ,_feggb :=NewPdfColorspaceFromPdfObject (_aabec );
if _feggb !=nil {return nil ,_feggb ;};_decba .Colorspaces [string (_cgfbb )]=_abdac ;};return _decba ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_dac :=NewPdfAction ();_aag :=&PdfActionGoToR {};_aag .PdfAction =_dac ;_dac .SetContext (_aag );return _aag ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fe .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_fe .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_fgeaa ,_accbgb :=encoder .EncodeBytes (img .Data );
if _accbgb !=nil {_beag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_accbgb );return nil ,_accbgb ;};_dbbfd :=NewXObjectImage ();_ddgca :=img .Width ;_aedcd :=img .Height ;
_dbbfd .Width =&_ddgca ;_dbbfd .Height =&_aedcd ;_bbfc :=img .BitsPerComponent ;_dbbfd .BitsPerComponent =&_bbfc ;_dbbfd .Filter =encoder ;_dbbfd .Stream =_fgeaa ;if cs ==nil {if img .ColorComponents ==1{_dbbfd .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_dbbfd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dbbfd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_cg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_dbbfd .ColorSpace =cs ;};if len (img ._fdcdb )!=0{_eeaaf :=NewXObjectImage ();_eeaaf .Filter =encoder ;_cgafg ,_bbff :=encoder .EncodeBytes (img ._fdcdb );if _bbff !=nil {_beag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bbff );
return nil ,_bbff ;};_eeaaf .Stream =_cgafg ;_eeaaf .BitsPerComponent =_dbbfd .BitsPerComponent ;_eeaaf .Width =&img .Width ;_eeaaf .Height =&img .Height ;_eeaaf .ColorSpace =NewPdfColorspaceDeviceGray ();_dbbfd .SMask =_eeaaf .ToPdfObject ();}else {_dbbfd .SMask =xobjIn .SMask ;
_dbbfd .ImageMask =xobjIn .ImageMask ;if _dbbfd .ColorSpace .GetNumComponents ()==1{_bggda (_dbbfd );};};return _dbbfd ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_adef *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gaage :=vals [0];if _gaage < 0.0||_gaage > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bcbd :=NewPdfColorCalGray (_gaage );return _bcbd ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_aeab *PdfBorderStyle )ToPdfObject ()_fe .PdfObject {_baffb :=_fe .MakeDict ();if _aeab ._ggab !=nil {if _fada ,_dcbg :=_aeab ._ggab .(*_fe .PdfIndirectObject );_dcbg {_fada .PdfObject =_baffb ;};};_baffb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _aeab .W !=nil {_baffb .Set ("\u0057",_fe .MakeFloat (*_aeab .W ));};if _aeab .S !=nil {_baffb .Set ("\u0053",_fe .MakeName (_aeab .S .GetPdfName ()));};if _aeab .D !=nil {_baffb .Set ("\u0044",_fe .MakeArrayFromIntegers (*_aeab .D ));};if _aeab ._ggab !=nil {return _aeab ._ggab ;
};return _baffb ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_cgd :=&PdfColorspaceLab {};_cgd .BlackPoint =[]float64 {0.0,0.0,0.0};_cgd .Range =[]float64 {-100,100,-100,100};return _cgd ;};

// SetBorderWidth sets the style's border width.
func (_egeg *PdfBorderStyle )SetBorderWidth (width float64 ){_egeg .W =&width };func _fdeg (_bece *_fe .PdfObjectDictionary ,_fdgeg *fontCommon ,_agaa _aee .TextEncoder )(*pdfFontSimple ,error ){_aabg :=_cdae (_fdgeg );_aabg ._geadc =_agaa ;if _agaa ==nil {_cadg :=_bece .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _cadg ==nil {_cadg =_fe .MakeInteger (0);};_aabg .FirstChar =_cadg ;_bbfab ,_fffe :=_fe .GetIntVal (_cadg );if !_fffe {_beag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cadg );
return nil ,_fe .ErrTypeError ;};_egda :=_aee .CharCode (_bbfab );_cadg =_bece .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cadg ==nil {_cadg =_fe .MakeInteger (255);};_aabg .LastChar =_cadg ;_bbfab ,_fffe =_fe .GetIntVal (_cadg );if !_fffe {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cadg );
return nil ,_fe .ErrTypeError ;};_bdgfc :=_aee .CharCode (_bbfab );_aabg ._eecac =make (map[_aee .CharCode ]float64 );_cadg =_bece .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cadg !=nil {_aabg .Widths =_cadg ;_edfdff ,_befcc :=_fe .GetArray (_cadg );
if !_befcc {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cadg );return nil ,_fe .ErrTypeError ;
};_geafd ,_cdee :=_edfdff .ToFloat64Array ();if _cdee !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cdee ;};if len (_geafd )!=int (_bdgfc -_egda +1){_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bdgfc -_egda +1,len (_geafd ));
return nil ,_fe .ErrRangeError ;};for _bbbed ,_geadd :=range _geafd {_aabg ._eecac [_egda +_aee .CharCode (_bbbed )]=_geadd ;};};};_aabg .Encoding =_fe .TraceToDirectObject (_bece .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _aabg ,nil ;
};func (_bcbcc *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bcbcc ._eaaeg ==nil &&_bcbcc .DescendantFont !=nil {return _bcbcc .DescendantFont .FontDescriptor ();};return _bcbcc ._eaaeg ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_cfeb *pdfFontSimple )ToPdfObject ()_fe .PdfObject {if _cfeb ._fcbg ==nil {_cfeb ._fcbg =&_fe .PdfIndirectObject {};};_faed :=_cfeb .baseFields ().asPdfObjectDictionary ("");_cfeb ._fcbg .PdfObject =_faed ;if _cfeb .FirstChar !=nil {_faed .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cfeb .FirstChar );
};if _cfeb .LastChar !=nil {_faed .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cfeb .LastChar );};if _cfeb .Widths !=nil {_faed .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cfeb .Widths );};if _cfeb .Encoding !=nil {_faed .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cfeb .Encoding );
}else if _cfeb ._cgefeb !=nil {_ddgbc :=_cfeb ._cgefeb .ToPdfObject ();if _ddgbc !=nil {_faed .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ddgbc );};};return _cfeb ._fcbg ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_eged :=NewPdfAnnotation ();_cfe :=&PdfAnnotationTrapNet {};_cfe .PdfAnnotation =_eged ;_eged .SetContext (_cfe );return _cfe ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fe .PdfObject ;B _fe .PdfObject ;};func _caagc (_gfbe *_fe .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bbbcf :=&PdfShadingPattern {};_gaeea :=_gfbe .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _gaeea ==nil {_beag .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aeac ,_eadf :=_ddfff (_gaeea );if _eadf !=nil {_beag .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_eadf );
return nil ,_eadf ;};_bbbcf .Shading =_aeac ;if _agaec :=_gfbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_agaec !=nil {_bdfgb ,_bbce :=_agaec .(*_fe .PdfObjectArray );if !_bbce {_beag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agaec );
return nil ,_fe .ErrTypeError ;};_bbbcf .Matrix =_bdfgb ;};if _bcfac :=_gfbe .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bcfac !=nil {_bbbcf .ExtGState =_bcfac ;};return _bbbcf ,nil ;};

// M returns the value of the magenta component of the color.
func (_cdgc *PdfColorDeviceCMYK )M ()float64 {return _cdgc [1]};var _ pdfFont =(*pdfFontType3 )(nil );func (_ddecb *PdfWriter )optimizeDocument ()error {if _ddecb ._aadcab ==nil {return nil ;};_gdecf ,_bffda :=_fe .GetDict (_ddecb ._fcdfd );if !_bffda {return _cg .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ccfabd :=_ed .Document {ID :[2]string {_ddecb ._ggfeag ,_ddecb ._fbegc },Version :_ddecb ._gbge ,Objects :_ddecb ._cfabe ,Info :_gdecf ,Crypt :_ddecb ._fddf ,UseHashBasedID :_ddecb ._babfe };if _gddad :=_ddecb ._aadcab .ApplyStandard (&_ccfabd );_gddad !=nil {return _gddad ;
};_ddecb ._ggfeag ,_ddecb ._fbegc =_ccfabd .ID [0],_ccfabd .ID [1];_ddecb ._gbge =_ccfabd .Version ;_ddecb ._cfabe =_ccfabd .Objects ;_ddecb ._fcdfd .PdfObject =_ccfabd .Info ;_ddecb ._babfe =_ccfabd .UseHashBasedID ;_ddecb ._fddf =_ccfabd .Crypt ;_fdeaf :=make (map[_fe .PdfObject ]struct{},len (_ddecb ._cfabe ));
for _ ,_baaa :=range _ddecb ._cfabe {_fdeaf [_baaa ]=struct{}{};};_ddecb ._ebfbf =_fdeaf ;return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_agdc *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// B returns the value of the B component of the color.
func (_cegg *PdfColorCalRGB )B ()float64 {return _cegg [1]};

// PdfVersion returns version of the PDF file.
func (_accd *PdfReader )PdfVersion ()_fe .Version {return _accd ._fbega .PdfVersion ()};func (_afeeg *LTV )buildCertChain (_egae ,_ccef []*_ee .Certificate )([]*_ee .Certificate ,map[string ]*_ee .Certificate ,error ){_ffcce :=map[string ]*_ee .Certificate {};
for _ ,_dcaa :=range _egae {_ffcce [_dcaa .Subject .CommonName ]=_dcaa ;};_fgcf :=_egae ;for _ ,_bfacg :=range _ccef {_effgg :=_bfacg .Subject .CommonName ;if _ ,_aegfb :=_ffcce [_effgg ];_aegfb {continue ;};_ffcce [_effgg ]=_bfacg ;_fgcf =append (_fgcf ,_bfacg );
};if len (_fgcf )==0{return nil ,nil ,ErrSignNoCertificates ;};var _bgec error ;for _dcfc :=_fgcf [0];_dcfc !=nil &&!_afeeg .CertClient .IsCA (_dcfc );{_adga ,_bcgea :=_ffcce [_dcfc .Issuer .CommonName ];if !_bcgea {if _adga ,_bgec =_afeeg .CertClient .GetIssuer (_dcfc );
_bgec !=nil {_beag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_bgec );
break ;};_ffcce [_dcfc .Issuer .CommonName ]=_adga ;_fgcf =append (_fgcf ,_adga );};_dcfc =_adga ;};return _fgcf ,_ffcce ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_fcagc *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_fgee ,_ ,_cgedf :=_fcagc .CharcodesToUnicodeWithStats (_fcagc .BytesToCharcodes (data ));_eacce :=_aee .ExpandLigatures (_fgee );return _eacce ,_g .RuneCountInString (_eacce ),_cgedf ;
};var _fecg =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func _bfac (_bced _fe .PdfObject )(*PdfFontDescriptor ,error ){_fddee :=&PdfFontDescriptor {};_bced =_fe .ResolveReference (_bced );if _agcfd ,_cdgdc :=_bced .(*_fe .PdfIndirectObject );_cdgdc {_fddee ._ceeg =_agcfd ;_bced =_agcfd .PdfObject ;};_aaeba ,_ggdga :=_fe .GetDict (_bced );
if !_ggdga {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bced );
return nil ,_fe .ErrTypeError ;};if _deabg :=_aaeba .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_deabg !=nil {_fddee .FontName =_deabg ;}else {_beag .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_effgfe ,_ :=_fe .GetName (_fddee .FontName );if _gcebd :=_aaeba .Get ("\u0054\u0079\u0070\u0065");_gcebd !=nil {_efgc ,_bdcgc :=_gcebd .(*_fe .PdfObjectName );if !_bdcgc ||string (*_efgc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_beag .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gcebd ,_effgfe ,_fddee .FontName );
};}else {_beag .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_effgfe ,_fddee .FontName );
};_fddee .FontFamily =_aaeba .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fddee .FontStretch =_aaeba .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fddee .FontWeight =_aaeba .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_fddee .Flags =_aaeba .Get ("\u0046\u006c\u0061g\u0073");_fddee .FontBBox =_aaeba .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fddee .ItalicAngle =_aaeba .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fddee .Ascent =_aaeba .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_fddee .Descent =_aaeba .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fddee .Leading =_aaeba .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fddee .CapHeight =_aaeba .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fddee .XHeight =_aaeba .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_fddee .StemV =_aaeba .Get ("\u0053\u0074\u0065m\u0056");_fddee .StemH =_aaeba .Get ("\u0053\u0074\u0065m\u0048");_fddee .AvgWidth =_aaeba .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fddee .MaxWidth =_aaeba .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_fddee .MissingWidth =_aaeba .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fddee .FontFile =_aaeba .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fddee .FontFile2 =_aaeba .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_fddee .FontFile3 =_aaeba .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fddee .CharSet =_aaeba .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fddee .Style =_aaeba .Get ("\u0053\u0074\u0079l\u0065");_fddee .Lang =_aaeba .Get ("\u004c\u0061\u006e\u0067");
_fddee .FD =_aaeba .Get ("\u0046\u0044");_fddee .CIDSet =_aaeba .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fddee .Flags !=nil {if _afbg ,_cdcag :=_fe .GetIntVal (_fddee .Flags );_cdcag {_fddee ._edbfa =_afbg ;};};if _fddee .MissingWidth !=nil {if _dfedc ,_cafeef :=_fe .GetNumberAsFloat (_fddee .MissingWidth );
_cafeef ==nil {_fddee ._cbde =_dfedc ;};};if _fddee .FontFile !=nil {_edee ,_beeeae :=_bbaff (_fddee .FontFile );if _beeeae !=nil {return _fddee ,_beeeae ;};_beag .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_edee );_fddee .fontFile =_edee ;
};if _fddee .FontFile2 !=nil {_ebff ,_ceef :=_fg .NewFontFile2FromPdfObject (_fddee .FontFile2 );if _ceef !=nil {return _fddee ,_ceef ;};_beag .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ebff .String ());_fddee ._faecg =&_ebff ;
};return _fddee ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_gfbaef *PdfWriter )GetOptimizer ()Optimizer {return _gfbaef ._dbbab };

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fdga *PdfFieldButton )IsRadio ()bool {return _fdga .GetType ()==ButtonTypeRadio };

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_cbdc *pdfCIDFontType0 )ToPdfObject ()_fe .PdfObject {return _fe .MakeNull ()};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fceeg *PdfPageResourcesColorspaces )ToPdfObject ()_fe .PdfObject {_cege :=_fe .MakeDict ();for _ ,_fbbfc :=range _fceeg .Names {_cege .Set (_fe .PdfObjectName (_fbbfc ),_fceeg .Colorspaces [_fbbfc ].ToPdfObject ());};if _fceeg ._ggca !=nil {_fceeg ._ggca .PdfObject =_cege ;
return _fceeg ._ggca ;};return _cege ;};

// Add appends an outline item as a child of the current outline item.
func (_egdd *OutlineItem )Add (item *OutlineItem ){_egdd .Entries =append (_egdd .Entries ,item )};func (_cggd *PdfReader )loadDSS ()(*DSS ,error ){if _cggd ._fbega .GetCrypter ()!=nil &&!_cggd ._fbega .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_adaa :=_cggd ._gbbce .Get ("\u0044\u0053\u0053");if _adaa ==nil {return nil ,nil ;};_ddfef ,_ :=_fe .GetIndirect (_adaa );_adaa =_fe .TraceToDirectObject (_adaa );switch _cagaa :=_adaa .(type ){case *_fe .PdfObjectNull :return nil ,nil ;case *_fe .PdfObjectDictionary :return _eacc (_ddfef ,_cagaa );
};return nil ,_a .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_adaa );};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_eagba *PdfAcroForm )GetContainingPdfObject ()_fe .PdfObject {return _eagba ._faagg };

// ToPdfObject implements interface PdfModel.
func (_bfgd *PdfActionSetOCGState )ToPdfObject ()_fe .PdfObject {_bfgd .PdfAction .ToPdfObject ();_aba :=_bfgd ._bgfg ;_eed :=_aba .PdfObject .(*_fe .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeSetOCGState )));_eed .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bfgd .State );
_eed .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bfgd .PreserveRB );return _aba ;};func (_ecgg *PdfReader )newPdfAnnotationSoundFromDict (_bgfb *_fe .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dfe :=PdfAnnotationSound {};
_dbg ,_ddab :=_ecgg .newPdfAnnotationMarkupFromDict (_bgfb );if _ddab !=nil {return nil ,_ddab ;};_dfe .PdfAnnotationMarkup =_dbg ;_dfe .Name =_bgfb .Get ("\u004e\u0061\u006d\u0065");_dfe .Sound =_bgfb .Get ("\u0053\u006f\u0075n\u0064");return &_dfe ,nil ;
};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func (_dgfe *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_ffcc *LTV )Enable (sig *PdfSignature ,extraCerts []*_ee .Certificate )error {if _gegg :=_ffcc .validateSig (sig );_gegg !=nil {return _gegg ;};_facde ,_bcaf :=_ffcc .generateVRIKey (sig );if _bcaf !=nil {return _bcaf ;};if _ ,_cegcc :=_ffcc ._fabg .VRI [_facde ];
_cegcc &&_ffcc .SkipExisting {return nil ;};_dddca ,_bcaf :=sig .GetCerts ();if _bcaf !=nil {return _bcaf ;};return _ffcc .enable (_dddca ,extraCerts ,_facde );};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fe .PdfObject ;Open _fe .PdfObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_egaec *OutlineItem )Insert (index uint ,item *OutlineItem ){_dbcgc :=uint (len (_egaec .Entries ));if index > _dbcgc {index =_dbcgc ;};_egaec .Entries =append (_egaec .Entries [:index ],append ([]*OutlineItem {item },_egaec .Entries [index :]...)...);
};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_aedf *PdfFont )CharcodesToUnicode (charcodes []_aee .CharCode )[]rune {_bgbaa ,_ ,_ :=_aedf .CharcodesToUnicodeWithStats (charcodes );return _bgbaa ;};

// AddImageResource adds an image to the XObject resources.
func (_fcdae *PdfPage )AddImageResource (name _fe .PdfObjectName ,ximg *XObjectImage )error {var _fdffaa *_fe .PdfObjectDictionary ;if _fcdae .Resources .XObject ==nil {_fdffaa =_fe .MakeDict ();_fcdae .Resources .XObject =_fdffaa ;}else {var _aedd bool ;
_fdffaa ,_aedd =(_fcdae .Resources .XObject ).(*_fe .PdfObjectDictionary );if !_aedd {return _cg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_fdffaa .Set (name ,ximg .ToPdfObject ());
return nil ;};func _ggffc (_abefc *_fe .PdfObjectDictionary )(*PdfShadingType3 ,error ){_gfffc :=PdfShadingType3 {};_gcbc :=_abefc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gcbc ==nil {_beag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ggbdf ,_ccgbd :=_gcbc .(*_fe .PdfObjectArray );if !_ccgbd {_beag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcbc );
return nil ,_fe .ErrTypeError ;};if _ggbdf .Len ()!=6{_beag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ggbdf .Len ());return nil ,ErrInvalidAttribute ;
};_gfffc .Coords =_ggbdf ;if _bbcee :=_abefc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bbcee !=nil {_bbcee =_fe .TraceToDirectObject (_bbcee );_ebaa ,_faac :=_bbcee .(*_fe .PdfObjectArray );if !_faac {_beag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbcee );
return nil ,_fe .ErrTypeError ;};_gfffc .Domain =_ebaa ;};_gcbc =_abefc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gcbc ==nil {_beag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gfffc .Function =[]PdfFunction {};if _fgbaa ,_dgfb :=_gcbc .(*_fe .PdfObjectArray );_dgfb {for _ ,_geab :=range _fgbaa .Elements (){_edbef ,_gdbg :=_aacg (_geab );if _gdbg !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdbg );
return nil ,_gdbg ;};_gfffc .Function =append (_gfffc .Function ,_edbef );};}else {_abbbf ,_bdfea :=_aacg (_gcbc );if _bdfea !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdfea );
return nil ,_bdfea ;};_gfffc .Function =append (_gfffc .Function ,_abbbf );};if _gccab :=_abefc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gccab !=nil {_gccab =_fe .TraceToDirectObject (_gccab );_bdebe ,_ffag :=_gccab .(*_fe .PdfObjectArray );if !_ffag {_beag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gccab );
return nil ,_fe .ErrTypeError ;};if _bdebe .Len ()!=2{_beag .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdebe .Len ());return nil ,ErrInvalidAttribute ;
};_gfffc .Extend =_bdebe ;};return &_gfffc ,nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_ebbga *PdfPage )ToPdfObject ()_fe .PdfObject {_ecffb :=_ebbga ._eacfe ;_ebbga .GetPageDict ();return _ecffb ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dcfg *PdfFieldText )ToPdfObject ()_fe .PdfObject {_dcfg .PdfField .ToPdfObject ();_fbfa :=_dcfg ._beebc ;_adegb :=_fbfa .PdfObject .(*_fe .PdfObjectDictionary );_adegb .Set ("\u0046\u0054",_fe .MakeName ("\u0054\u0078"));if _dcfg .DA !=nil {_adegb .Set ("\u0044\u0041",_dcfg .DA );
};if _dcfg .Q !=nil {_adegb .Set ("\u0051",_dcfg .Q );};if _dcfg .DS !=nil {_adegb .Set ("\u0044\u0053",_dcfg .DS );};if _dcfg .RV !=nil {_adegb .Set ("\u0052\u0056",_dcfg .RV );};if _dcfg .MaxLen !=nil {_adegb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dcfg .MaxLen );
};return _fbfa ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_aee .SimpleEncoder ,error ){_aafec ,_bbeb :=_cgbda (basefont );if _bbeb !=nil {return nil ,nil ,_bbeb ;};_acbdb ,_cfbcc :=_aafec .Encoder ().(_aee .SimpleEncoder );
if !_cfbcc {return nil ,nil ,_a .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_aafec .Encoder ());
};_ccce :=make (map[rune ]_aee .GlyphName );for _eege :=range alphabet {if _ ,_fedcg :=_acbdb .RuneToCharcode (_eege );!_fedcg {_ ,_caca :=_aafec ._gcecc .Read (_eege );if !_caca {_beag .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_eege ,_eege );
continue ;};_bcbdc ,_caca :=_aee .RuneToGlyph (_eege );if !_caca {_beag .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_eege ,_eege );continue ;};if len (_ccce )>=255{return nil ,nil ,_cg .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_ccce [_eege ]=_bcbdc ;};};var (_dggbe []_aee .CharCode ;_gceac []_aee .CharCode ;);for _adgf :=_aee .CharCode (1);_adgf <=0xff;_adgf ++{_dgffc ,_adeac :=_acbdb .CharcodeToRune (_adgf );if !_adeac {_dggbe =append (_dggbe ,_adgf );continue ;};if _ ,_adeac =alphabet [_dgffc ];
!_adeac {_gceac =append (_gceac ,_adgf );};};_ddbd :=append (_dggbe ,_gceac ...);if len (_ddbd )< len (_ccce ){return nil ,nil ,_a .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_ccce ),len (_ddbd ));
};_bcegf :=make ([]rune ,0,len (_ccce ));for _fcffg :=range _ccce {_bcegf =append (_bcegf ,_fcffg );};_af .Slice (_bcegf ,func (_cddg ,_ccfd int )bool {return _bcegf [_cddg ]< _bcegf [_ccfd ]});_ccgg :=make (map[_aee .CharCode ]_aee .GlyphName ,len (_bcegf ));
for _ ,_dcgd :=range _bcegf {_gbaeg :=_ddbd [0];_ddbd =_ddbd [1:];_ccgg [_gbaeg ]=_ccce [_dcgd ];};_acbdb =_aee .ApplyDifferences (_acbdb ,_ccgg );_aafec .SetEncoder (_acbdb );return &PdfFont {_cdgee :&_aafec },_acbdb ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_fcg *PdfAnnotationLink )SetAction (action *PdfAction ){_fcg ._bdd =action ;if action ==nil {_fcg .A =nil ;};};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_egf :=NewPdfAction ();_ba :=&PdfActionNamed {};_ba .PdfAction =_egf ;_egf .SetContext (_ba );return _ba ;};func (_edcc *Image )resampleLowBits (_ggda []uint32 ){_fgfb :=_gege .BytesPerLine (int (_edcc .Width ),int (_edcc .BitsPerComponent ),_edcc .ColorComponents );
_gcbdc :=make ([]byte ,_edcc .ColorComponents *_fgfb *int (_edcc .Height ));_gefbd :=int (_edcc .BitsPerComponent )*_edcc .ColorComponents *int (_edcc .Width );_bdgded :=uint8 (8);var (_abdab ,_edadb int ;_gfeed uint32 ;);for _aeff :=0;_aeff < int (_edcc .Height );
_aeff ++{_edadb =_aeff *_fgfb ;for _adeefe :=0;_adeefe < _gefbd ;_adeefe ++{_gfeed =_ggda [_abdab ];_bdgded -=uint8 (_edcc .BitsPerComponent );_gcbdc [_edadb ]|=byte (_gfeed )<<_bdgded ;if _bdgded ==0{_bdgded =8;_edadb ++;};_abdab ++;};};_edcc .Data =_gcbdc ;
};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fe .PdfObjectBool ;SigFlags *_fe .PdfObjectInteger ;CO *_fe .PdfObjectArray ;DR *PdfPageResources ;DA *_fe .PdfObjectString ;Q *_fe .PdfObjectInteger ;XFA _fe .PdfObject ;_faagg *_fe .PdfIndirectObject ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_gafaf *PdfColorspaceLab )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_begc ,_aaad :=_fe .GetNumbersAsFloat (objects );
if _aaad !=nil {return nil ,_aaad ;};return _gafaf .ColorFromFloats (_begc );};

// AddPages adds pages to be appended to the end of the source PDF.
func (_ead *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_efa :=range pages {_efa =_efa .Duplicate ();_bcbca (_efa );_ead ._ffbc =append (_ead ._ffbc ,_efa );};};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;IC _fe .PdfObject ;RO _fe .PdfObject ;OverlayText _fe .PdfObject ;Repeat _fe .PdfObject ;DA _fe .PdfObject ;Q _fe .PdfObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_beeg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _beeg .flattenFieldsWithOpts (false ,appgen ,opts );};func _dcbec ()string {_aagdg .Lock ();defer _aagdg .Unlock ();return _cfcf };func _eacc (_bbbd *_fe .PdfIndirectObject ,_gbga *_fe .PdfObjectDictionary )(*DSS ,error ){if _bbbd ==nil {_bbbd =_fe .MakeIndirectObject (nil );
};_bbbd .PdfObject =_fe .MakeDict ();_faec :=map[string ]*VRI {};if _gfba ,_edge :=_fe .GetDict (_gbga .Get ("\u0056\u0052\u0049"));_edge {for _ ,_adfd :=range _gfba .Keys (){if _gdea ,_gcgbg :=_fe .GetDict (_gfba .Get (_adfd ));_gcgbg {_faec [_ca .ToUpper (_adfd .String ())]=_gdcdf (_gdea );
};};};return &DSS {Certs :_egfeg (_gbga .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_egfeg (_gbga .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_egfeg (_gbga .Get ("\u0043\u0052\u004c\u0073")),VRI :_faec ,_cedcg :_bbbd },nil ;};

// ReplacePage replaces the original page to a new page.
func (_geca *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_cgbe :=pageNum -1;for _dgbb :=range _geca ._ffbc {if _dgbb ==_cgbe {_bfcfg :=page .Duplicate ();_bcbca (_bfcfg );_geca ._ffbc [_dgbb ]=_bfcfg ;};};};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_dcacg *PdfTilingPattern )ToPdfObject ()_fe .PdfObject {_dcacg .PdfPattern .ToPdfObject ();_aebga :=_dcacg .getDict ();if _dcacg .PaintType !=nil {_aebga .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_dcacg .PaintType );};if _dcacg .TilingType !=nil {_aebga .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dcacg .TilingType );
};if _dcacg .BBox !=nil {_aebga .Set ("\u0042\u0042\u006f\u0078",_dcacg .BBox .ToPdfObject ());};if _dcacg .XStep !=nil {_aebga .Set ("\u0058\u0053\u0074e\u0070",_dcacg .XStep );};if _dcacg .YStep !=nil {_aebga .Set ("\u0059\u0053\u0074e\u0070",_dcacg .YStep );
};if _dcacg .Resources !=nil {_aebga .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dcacg .Resources .ToPdfObject ());};if _dcacg .Matrix !=nil {_aebga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dcacg .Matrix );};return _dcacg ._deebb ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fe .PdfObject )(_fe .PdfObjectName ,error ){var _afce *_fe .PdfObjectName ;var _aaeg *_fe .PdfObjectArray ;if _gfg ,_cdfa :=obj .(*_fe .PdfIndirectObject );_cdfa {if _deag ,_gegcg :=_gfg .PdfObject .(*_fe .PdfObjectArray );
_gegcg {_aaeg =_deag ;}else if _dgae ,_eade :=_gfg .PdfObject .(*_fe .PdfObjectName );_eade {_afce =_dgae ;};}else if _badd ,_ecga :=obj .(*_fe .PdfObjectArray );_ecga {_aaeg =_badd ;}else if _cbfa ,_afag :=obj .(*_fe .PdfObjectName );_afag {_afce =_cbfa ;
};if _afce !=nil {switch *_afce {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_afce ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_afce ,nil ;
};};if _aaeg !=nil &&_aaeg .Len ()> 0{if _faaga ,_fgda :=_aaeg .Get (0).(*_fe .PdfObjectName );_fgda {switch *_faaga {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _aaeg .Len ()==1{return *_faaga ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_faaga ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_faaga ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_faaga ,nil ;};};};return "",nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fe .PdfObject ;MK _fe .PdfObject ;A _fe .PdfObject ;AA _fe .PdfObject ;BS _fe .PdfObject ;Parent _fe .PdfObject ;_fgdb *PdfField ;_ceb bool ;};func (_agacde *PdfReader )buildPageList (_ffbgd *_fe .PdfIndirectObject ,_gcff *_fe .PdfIndirectObject ,_cccgb map[_fe .PdfObject ]struct{})error {if _ffbgd ==nil {return nil ;
};if _ ,_aedgc :=_cccgb [_ffbgd ];_aedgc {_beag .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ffbgd .ObjectNumber );
return nil ;};_cccgb [_ffbgd ]=struct{}{};_dffgc ,_fccec :=_ffbgd .PdfObject .(*_fe .PdfObjectDictionary );if !_fccec {return _cg .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gfcc ,_fccec :=(*_dffgc ).Get ("\u0054\u0079\u0070\u0065").(*_fe .PdfObjectName );
if !_fccec {if _dffgc .Get ("\u004b\u0069\u0064\u0073")==nil {return _cg .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_beag .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_gfcc =_fe .MakeName ("\u0050\u0061\u0067e\u0073");_dffgc .Set ("\u0054\u0079\u0070\u0065",_gfcc );};_beag .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gfcc ,_ffbgd );
if *_gfcc =="\u0050\u0061\u0067\u0065"{_ebef ,_agafd :=_agacde .newPdfPageFromDict (_dffgc );if _agafd !=nil {return _agafd ;};_ebef .setContainer (_ffbgd );if _gcff !=nil {_dffgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcff );};_agacde ._dgdea =append (_agacde ._dgdea ,_ffbgd );
_agacde .PageList =append (_agacde .PageList ,_ebef );return nil ;};if *_gfcc !="\u0050\u0061\u0067e\u0073"{_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gfcc );
return _cg .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gcff !=nil {_dffgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcff );};if !_agacde ._edeea {_dacfcf :=_agacde .traverseObjectData (_ffbgd );if _dacfcf !=nil {return _dacfcf ;};};_cdaadd ,_fcege :=_agacde ._fbega .Resolve (_dffgc .Get ("\u004b\u0069\u0064\u0073"));
if _fcege !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _fcege ;};var _gfggd *_fe .PdfObjectArray ;
_gfggd ,_fccec =_cdaadd .(*_fe .PdfObjectArray );if !_fccec {_dggae ,_efdffg :=_cdaadd .(*_fe .PdfIndirectObject );if !_efdffg {return _cg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_gfggd ,_fccec =_dggae .PdfObject .(*_fe .PdfObjectArray );if !_fccec {return _cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_beag .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gfggd );
for _dgefg ,_edbb :=range _gfggd .Elements (){_cgfbg ,_bfded :=_fe .GetIndirect (_edbb );if !_bfded {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cgfbg );
return _cg .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gfggd .Set (_dgefg ,_cgfbg );_fcege =_agacde .buildPageList (_cgfbg ,_ffbgd ,_cccgb );if _fcege !=nil {return _fcege ;
};};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ggbdce *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ecddd :=_fad .NewReader (img .getBase ());_babg :=_gege .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ebac :=_fad .NewWriter (_babg );
_ebbca :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_eafa :=make ([]uint32 ,3);var (_fagf error ;_baec ,_beaf ,_aege ,_adag ,_fbfd ,_ddgd float64 ;);for {_fagf =_ecddd .ReadSamples (_eafa );if _fagf ==_ecf .EOF {break ;}else if _fagf !=nil {return img ,_fagf ;
};_baec =float64 (_eafa [0])/_ebbca ;_beaf =float64 (_eafa [1])/_ebbca ;_aege =float64 (_eafa [2])/_ebbca ;_adag =_ggbdce .Matrix [0]*_fa .Pow (_baec ,_ggbdce .Gamma [0])+_ggbdce .Matrix [3]*_fa .Pow (_beaf ,_ggbdce .Gamma [1])+_ggbdce .Matrix [6]*_fa .Pow (_aege ,_ggbdce .Gamma [2]);
_fbfd =_ggbdce .Matrix [1]*_fa .Pow (_baec ,_ggbdce .Gamma [0])+_ggbdce .Matrix [4]*_fa .Pow (_beaf ,_ggbdce .Gamma [1])+_ggbdce .Matrix [7]*_fa .Pow (_aege ,_ggbdce .Gamma [2]);_ddgd =_ggbdce .Matrix [2]*_fa .Pow (_baec ,_ggbdce .Gamma [0])+_ggbdce .Matrix [5]*_fa .Pow (_beaf ,_ggbdce .Gamma [1])+_ggbdce .Matrix [8]*_fa .Pow (_aege ,_ggbdce .Gamma [2]);
_baec =3.240479*_adag +-1.537150*_fbfd +-0.498535*_ddgd ;_beaf =-0.969256*_adag +1.875992*_fbfd +0.041556*_ddgd ;_aege =0.055648*_adag +-0.204043*_fbfd +1.057311*_ddgd ;_baec =_fa .Min (_fa .Max (_baec ,0),1.0);_beaf =_fa .Min (_fa .Max (_beaf ,0),1.0);
_aege =_fa .Min (_fa .Max (_aege ,0),1.0);_eafa [0]=uint32 (_baec *_ebbca );_eafa [1]=uint32 (_beaf *_ebbca );_eafa [2]=uint32 (_aege *_ebbca );if _fagf =_ebac .WriteSamples (_eafa );_fagf !=nil {return img ,_fagf ;};};return _bfcga (&_babg ),nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_eefeb :=map[rune ]int {};for _ ,_eefd :=range text {_eefeb [_eefd ]++;};return _eefeb ;};func (_dgaec *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_aacge *PdfPattern )GetContext ()PdfModel {return _aacge ._bfea };

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_affb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _bgbda []_aee .TextEncoder ;var _gegca _aee .CMapEncoder ;if _gdaa :=_affb .baseFields ()._ggee ;_gdaa !=nil {_gegca =_aee .NewCMapEncoder ("",nil ,_gdaa );};_ddec :=_affb .Encoder ();
if _ddec !=nil {switch _abgcb :=_ddec .(type ){case _aee .SimpleEncoder :_agba :=_abgcb .BaseName ();if _ ,_dacbed :=_fabbf [_agba ];_dacbed {_bgbda =append (_bgbda ,_ddec );};};};if len (_bgbda )==0{if _affb .baseFields ()._ggee !=nil {_bgbda =append (_bgbda ,_gegca );
};if _ddec !=nil {_bgbda =append (_bgbda ,_ddec );};};var _eeef _bea .Buffer ;var _cafee int ;for _ ,_efdf :=range data {var _febgg bool ;for _ ,_affcbd :=range _bgbda {if _baeac :=_affcbd .Encode (string (_efdf ));len (_baeac )> 0{_eeef .Write (_baeac );
_febgg =true ;break ;};};if !_febgg {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_efdf );
_cafee ++;};};if _cafee !=0{_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cafee ,_affb ,_bgbda );
};return _eeef .Bytes (),_cafee ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_gcegc *XObjectImage )GetContainingPdfObject ()_fe .PdfObject {return _gcegc ._egeea };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gdd :=NewPdfAnnotation ();_acf :=&PdfAnnotationRedact {};_acf .PdfAnnotation =_gdd ;_acf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdd .SetContext (_acf );return _acf ;};

// ToPdfObject implements interface PdfModel.
func (_bbc *PdfActionImportData )ToPdfObject ()_fe .PdfObject {_bbc .PdfAction .ToPdfObject ();_cce :=_bbc ._bgfg ;_fc :=_cce .PdfObject .(*_fe .PdfObjectDictionary );_fc .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeImportData )));if _bbc .F !=nil {_fc .Set ("\u0046",_bbc .F .ToPdfObject ());
};return _cce ;};func _caag (_cbbed _fe .PdfObject ,_dacfc *PdfReader )(*OutlineDest ,error ){_eegf ,_gecade :=_fe .GetArray (_cbbed );if !_gecade {return nil ,_cg .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_ecfcbf :=_eegf .Len ();if _ecfcbf < 2{return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ecfcbf );
};_afaf :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_adgda :=_eegf .Get (0);if _ecfbd ,_facca :=_fe .GetIndirect (_adgda );_facca {if _ ,_gdfed ,_bgdge :=_dacfc .PageFromIndirectObject (_ecfbd );_bgdge ==nil {_afaf .Page =int64 (_gdfed -1);}else {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ecfbd );
};_afaf .PageObj =_ecfbd ;}else if _acgca ,_deeb :=_fe .GetIntVal (_adgda );_deeb {if _acgca >=0&&_acgca < len (_dacfc .PageList ){_afaf .PageObj =_dacfc .PageList [_acgca ].GetPageAsIndirectObject ();}else {_beag .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_acgca );
};_afaf .Page =int64 (_acgca );}else {return nil ,_a .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_adgda );};_acfe ,_gecade :=_fe .GetNameVal (_eegf .Get (1));
if !_gecade {_beag .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_eegf .Get (1));
return _afaf ,nil ;};switch _acfe {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ecfcbf > 2{_afaf .Y ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_eegf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ecfcbf > 2{_afaf .X ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_eegf .Get (2)));
};case "\u0058\u0059\u005a":if _ecfcbf > 4{_afaf .X ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_eegf .Get (2)));_afaf .Y ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_eegf .Get (3)));_afaf .Zoom ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_eegf .Get (4)));
};default:_acfe ="\u0046\u0069\u0074";};_afaf .Mode =_acfe ;return _afaf ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_cdga *PdfWriter )SetOptimizer (optimizer Optimizer ){_cdga ._dbbab =optimizer };

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bbgaa *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_fcbcg :=NewPdfOutlineItem ();_fcbcg .Title =_fe .MakeEncodedString (_bbgaa .Title ,true );_fcbcg .Dest =_bbgaa .Dest .ToPdfObject ();var _dedefd []*PdfOutlineItem ;var _gdfa int64 ;
var _bdaca *PdfOutlineItem ;for _ ,_bcae :=range _bbgaa .Entries {_afcgc ,_egde :=_bcae .ToPdfOutlineItem ();_afcgc .Parent =&_fcbcg .PdfOutlineTreeNode ;if _bdaca !=nil {_bdaca .Next =&_afcgc .PdfOutlineTreeNode ;_afcgc .Prev =&_bdaca .PdfOutlineTreeNode ;
};_dedefd =append (_dedefd ,_afcgc );_gdfa +=_egde ;_bdaca =_afcgc ;};_babe :=len (_dedefd );_gdfa +=int64 (_babe );if _babe > 0{_fcbcg .First =&_dedefd [0].PdfOutlineTreeNode ;_fcbcg .Last =&_dedefd [_babe -1].PdfOutlineTreeNode ;_fcbcg .Count =&_gdfa ;
};return _fcbcg ,_gdfa ;};func _bfage ()_ae .Time {_aagdg .Lock ();defer _aagdg .Unlock ();return _daea };

// ToPdfObject implements interface PdfModel.
func (_fbcbf *PdfAnnotationFileAttachment )ToPdfObject ()_fe .PdfObject {_fbcbf .PdfAnnotation .ToPdfObject ();_gced :=_fbcbf ._egb ;_geeb :=_gced .PdfObject .(*_fe .PdfObjectDictionary );_fbcbf .PdfAnnotationMarkup .appendToPdfDictionary (_geeb );_geeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_geeb .SetIfNotNil ("\u0046\u0053",_fbcbf .FS );_geeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbcbf .Name );return _gced ;};func _ddfff (_cfafa _fe .PdfObject )(*PdfShading ,error ){_baaec :=&PdfShading {};var _facb *_fe .PdfObjectDictionary ;if _gdabg ,_dbfbe :=_fe .GetIndirect (_cfafa );
_dbfbe {_baaec ._ebfb =_gdabg ;_ebfcg ,_ceaeg :=_gdabg .PdfObject .(*_fe .PdfObjectDictionary );if !_ceaeg {_beag .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_fe .ErrTypeError ;};_facb =_ebfcg ;}else if _feggbe ,_dcabf :=_fe .GetStream (_cfafa );_dcabf {_baaec ._ebfb =_feggbe ;_facb =_feggbe .PdfObjectDictionary ;}else if _fdgbc ,_bagbb :=_fe .GetDict (_cfafa );_bagbb {_baaec ._ebfb =_fdgbc ;_facb =_fdgbc ;
}else {_beag .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_cfafa );return nil ,_fe .ErrTypeError ;};if _facb ==nil {_beag .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cfafa =_facb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cfafa ==nil {_beag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfafa =_fe .TraceToDirectObject (_cfafa );_bfcd ,_edgec :=_cfafa .(*_fe .PdfObjectInteger );if !_edgec {_beag .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cfafa );
return nil ,_fe .ErrTypeError ;};if *_bfcd < 1||*_bfcd > 7{_beag .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bfcd );
return nil ,_fe .ErrTypeError ;};_baaec .ShadingType =_bfcd ;_cfafa =_facb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _cfafa ==nil {_beag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gggb ,_adgcg :=NewPdfColorspaceFromPdfObject (_cfafa );if _adgcg !=nil {_beag .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_adgcg );
return nil ,_adgcg ;};_baaec .ColorSpace =_gggb ;_cfafa =_facb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _cfafa !=nil {_cfafa =_fe .TraceToDirectObject (_cfafa );_gaeef ,_afeb :=_cfafa .(*_fe .PdfObjectArray );if !_afeb {_beag .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cfafa );
return nil ,_fe .ErrTypeError ;};_baaec .Background =_gaeef ;};_cfafa =_facb .Get ("\u0042\u0042\u006f\u0078");if _cfafa !=nil {_cfafa =_fe .TraceToDirectObject (_cfafa );_gabbb ,_adcg :=_cfafa .(*_fe .PdfObjectArray );if !_adcg {_beag .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cfafa );
return nil ,_fe .ErrTypeError ;};_agfee ,_bfgg :=NewPdfRectangle (*_gabbb );if _bfgg !=nil {_beag .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bfgg );return nil ,_bfgg ;};_baaec .BBox =_agfee ;};_cfafa =_facb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _cfafa !=nil {_cfafa =_fe .TraceToDirectObject (_cfafa );_ceeec ,_gacdb :=_cfafa .(*_fe .PdfObjectBool );if !_gacdb {_beag .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfafa );
return nil ,_fe .ErrTypeError ;};_baaec .AntiAlias =_ceeec ;};switch *_bfcd {case 1:_cgfdc ,_affde :=_dcgad (_facb );if _affde !=nil {return nil ,_affde ;};_cgfdc .PdfShading =_baaec ;_baaec ._ddfbb =_cgfdc ;return _baaec ,nil ;case 2:_dfedd ,_gdga :=_gddab (_facb );
if _gdga !=nil {return nil ,_gdga ;};_dfedd .PdfShading =_baaec ;_baaec ._ddfbb =_dfedd ;return _baaec ,nil ;case 3:_ccdeg ,_ecbd :=_ggffc (_facb );if _ecbd !=nil {return nil ,_ecbd ;};_ccdeg .PdfShading =_baaec ;_baaec ._ddfbb =_ccdeg ;return _baaec ,nil ;
case 4:_ecgbd ,_fdbdf :=_agdcc (_facb );if _fdbdf !=nil {return nil ,_fdbdf ;};_ecgbd .PdfShading =_baaec ;_baaec ._ddfbb =_ecgbd ;return _baaec ,nil ;case 5:_adfa ,_efaeg :=_dcbdd (_facb );if _efaeg !=nil {return nil ,_efaeg ;};_adfa .PdfShading =_baaec ;
_baaec ._ddfbb =_adfa ;return _baaec ,nil ;case 6:_dccfe ,_ddcdg :=_abaf (_facb );if _ddcdg !=nil {return nil ,_ddcdg ;};_dccfe .PdfShading =_baaec ;_baaec ._ddfbb =_dccfe ;return _baaec ,nil ;case 7:_bgcf ,_dccee :=_faaab (_facb );if _dccee !=nil {return nil ,_dccee ;
};_bgcf .PdfShading =_baaec ;_baaec ._ddfbb =_bgcf ;return _baaec ,nil ;};return nil ,_cg .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ecf .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gcedf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _eggbd (rs ,opts ,true ,_gcedf );
};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fbcgf *PdfWriter )SetNamedDestinations (dests _fe .PdfObject )error {if dests ==nil {return nil ;};_beag .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_fbcgf ._gagg .Set ("\u0044\u0065\u0073t\u0073",dests );return _fbcgf .addObjects (dests );};func (_fccd fontCommon )coreString ()string {_abece :="";if _fccd ._eaaeg !=nil {_abece =_fccd ._eaaeg .String ();};return _a .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_fccd ._eegd ,_fccd ._agee ,_fccd ._bggg ,_fccd ._gafg ,_fccd ._gcgbd !=nil ,_fccd .fontFlags (),_abece );
};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_efgaf *PdfPageResources )GetFontByName (keyName _fe .PdfObjectName )(_fe .PdfObject ,bool ){if _efgaf .Font ==nil {return nil ,false ;};_agdee ,_cggcd :=_fe .TraceToDirectObject (_efgaf .Font ).(*_fe .PdfObjectDictionary );if !_cggcd {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fe .TraceToDirectObject (_efgaf .Font ));
return nil ,false ;};if _agbfg :=_agdee .Get (keyName );_agbfg !=nil {return _agbfg ,true ;};return nil ,false ;};func _bbaff (_gggdd _fe .PdfObject )(*fontFile ,error ){_beag .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_gggdd );
_ggbg :=&fontFile {};_gggdd =_fe .TraceToDirectObject (_gggdd );_eeaee ,_beagdd :=_gggdd .(*_fe .PdfObjectStream );if !_beagdd {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_gggdd );
return nil ,_fe .ErrTypeError ;};_gccde :=_eeaee .PdfObjectDictionary ;_aedbdd ,_ecdfa :=_fe .DecodeStream (_eeaee );if _ecdfa !=nil {return nil ,_ecdfa ;};_bfbb ,_beagdd :=_fe .GetNameVal (_gccde .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_beagdd {_ggbg ._dacf =_bfbb ;
if _bfbb =="\u0054\u0079\u0070\u0065\u0031\u0043"{_beag .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_edgbf ,_ :=_fe .GetIntVal (_gccde .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_acdg ,_ :=_fe .GetIntVal (_gccde .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _edgbf > len (_aedbdd ){_edgbf =len (_aedbdd );
};if _edgbf +_acdg > len (_aedbdd ){_acdg =len (_aedbdd )-_edgbf ;};_fddg :=_aedbdd [:_edgbf ];var _eefed []byte ;if _acdg > 0{_eefed =_aedbdd [_edgbf :_edgbf +_acdg ];};if _edgbf > 0&&_acdg > 0{_dcfbd :=_ggbg .loadFromSegments (_fddg ,_eefed );if _dcfbd !=nil {return nil ,_dcfbd ;
};};return _ggbg ,nil ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fcdde *PdfWriter )SetNameDictionary (names _fe .PdfObject )error {if names ==nil {return nil ;};_beag .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_fcdde ._gagg .Set ("\u004e\u0061\u006de\u0073",names );return _fcdde .addObjects (names );};func _deda (_ggea _fe .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_fgbg :=&PdfColorspaceDeviceNAttributes {};var _cedf *_fe .PdfObjectDictionary ;switch _gaac :=_ggea .(type ){case *_fe .PdfIndirectObject :_fgbg ._gbad =_gaac ;
var _bdgc bool ;_cedf ,_bdgc =_gaac .PdfObject .(*_fe .PdfObjectDictionary );if !_bdgc {_beag .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_fe .PdfObjectDictionary :_cedf =_gaac ;case *_fe .PdfObjectReference :_cfgc :=_gaac .Resolve ();return _deda (_cfgc );default:_beag .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gade :=_cedf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gade !=nil {_afcbf ,_dfed :=_fe .TraceToDirectObject (_gade ).(*_fe .PdfObjectName );if !_dfed {_beag .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fgbg .Subtype =_afcbf ;};if _fcfge :=_cedf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fcfge !=nil {_fgbg .Colorants =_fcfge ;};if _cgbd :=_cedf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_cgbd !=nil {_fgbg .Process =_cgbd ;};if _dcabb :=_cedf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dcabb !=nil {_fgbg .MixingHints =_dcabb ;};return _fgbg ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ga :=NewPdfAction ();_caf :=&PdfActionGoTo {};_caf .PdfAction =_ga ;_ga .SetContext (_caf );return _caf ;};func _bddcc (_agdfd string )map[string ]string {_cbgg :=_bgdga .Split (_agdfd ,-1);_fagdd :=map[string ]string {};
for _ ,_effa :=range _cbgg {_bfbgb :=_ebdf .FindStringSubmatch (_effa );if _bfbgb ==nil {continue ;};_gcga ,_ebddc :=_bfbgb [1],_bfbgb [2];_fagdd [_gcga ]=_ebddc ;};return _fagdd ;};

// GetVersion gets the document version.
func (_dgfgd *PdfWriter )GetVersion ()_fe .Version {return _dgfgd ._gbge };

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_ebba *PdfFieldChoice )ToPdfObject ()_fe .PdfObject {_ebba .PdfField .ToPdfObject ();_bdcd :=_ebba ._beebc ;_deeag :=_bdcd .PdfObject .(*_fe .PdfObjectDictionary );_deeag .Set ("\u0046\u0054",_fe .MakeName ("\u0043\u0068"));if _ebba .Opt !=nil {_deeag .Set ("\u004f\u0070\u0074",_ebba .Opt );
};if _ebba .TI !=nil {_deeag .Set ("\u0054\u0049",_ebba .TI );};if _ebba .I !=nil {_deeag .Set ("\u0049",_ebba .I );};return _bdcd ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_ggegfb ,_dgecb :=_eba .ParsePdfTime (dateStr );if _dgecb !=nil {return PdfDate {},_dgecb ;};return NewPdfDateFromTime (_ggegfb );};

// SetReason sets the `Reason` field of the signature.
func (_afcbaa *PdfSignature )SetReason (reason string ){_afcbaa .Reason =_fe .MakeString (reason )};func _beegdb (_cgaee string )(string ,error ){var _afgea _bea .Buffer ;_afgea .WriteString (_cgaee );_abga :=make ([]byte ,8+16);_cdgg :=_ae .Now ().UTC ().UnixNano ();
_bg .BigEndian .PutUint64 (_abga ,uint64 (_cdgg ));_ ,_abgaf :=_eec .Read (_abga [8:]);if _abgaf !=nil {return "",_abgaf ;};_afgea .WriteString (_e .EncodeToString (_abga ));return _afgea .String (),nil ;};

// IsColored specifies if the pattern is colored.
func (_bggb *PdfTilingPattern )IsColored ()bool {if _bggb .PaintType !=nil &&*_bggb .PaintType ==1{return true ;};return false ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_ffdc DefaultImageHandler )Read (reader _ecf .Reader )(*Image ,error ){_gfdge ,_ ,_gcbd :=_bgf .Decode (reader );if _gcbd !=nil {_beag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gcbd );
return nil ,_gcbd ;};return _ffdc .NewImageFromGoImage (_gfdge );};func (_aaegf *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _gcgaf []*PdfFieldSignature ;for _ ,_fega :=range _aaegf .AllFields (){switch _bdfaf :=_fega .GetContext ().(type ){case *PdfFieldSignature :_gdfgg :=_bdfaf ;
_gcgaf =append (_gcgaf ,_gdfgg );};};return _gcgaf ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_agdfb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _agdfb ._cdgee .getFontDescriptor (),nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_gdggd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _gdggd ._fbega .GetCrypter ()!=nil &&!_gdggd ._fbega .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_gdggd ._dgdea )< pageNumber {return nil ,_cg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_eceefa :=pageNumber -1;if _eceefa < 0{return nil ,_a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fafceb :=_gdggd .PageList [_eceefa ];
return _fafceb ,nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ceg :=NewPdfAction ();_edbe :=&PdfActionThread {};_edbe .PdfAction =_ceg ;_ceg .SetContext (_edbe );return _edbe ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_abgge *PdfWriter )addObject (_ccdgae _fe .PdfObject )bool {_adcb :=_abgge .hasObject (_ccdgae );
if !_adcb {_fcbaf :=_fe .ResolveReferencesDeep (_ccdgae ,_abgge ._eafce );if _fcbaf !=nil {_beag .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_fcbaf );};_abgge ._cfabe =append (_abgge ._cfabe ,_ccdgae );
_abgge ._ebfbf [_ccdgae ]=struct{}{};return true ;};return false ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_aagdg .Lock ();defer _aagdg .Unlock ();_beggge =keywords };func _ccfaca (_decaea *_fe .PdfObjectArray )(float64 ,error ){_bbcbgb ,_cagaad :=_decaea .ToFloat64Array ();if _cagaad !=nil {_beag .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_decaea ,_cagaad );
};switch len (_bbcbgb ){case 1:return _bbcbgb [0],nil ;case 3:_gdaeg :=PdfColorspaceDeviceRGB {};_gaeeae ,_ceeb :=_gdaeg .ColorFromFloats (_bbcbgb );if _ceeb !=nil {return 0.0,_ceeb ;};return _gaeeae .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fafbg :=PdfColorspaceDeviceCMYK {};
_eadfa ,_dbgfa :=_fafbg .ColorFromFloats (_bbcbgb );if _dbgfa !=nil {return 0.0,_dbgfa ;};_faefcg ,_dbgfa :=_fafbg .ColorToRGB (_eadfa .(*PdfColorDeviceCMYK ));if _dbgfa !=nil {return 0.0,_dbgfa ;};return _faefcg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_cagaad =_cg .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_beag .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_decaea ,_cagaad );
return 0.0,_cagaad ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_eeba *PdfReader )Inspect ()(map[string ]int ,error ){return _eeba ._fbega .Inspect ()};

// GetStandardApplier gets currently used StandardApplier..
func (_bbgab *PdfWriter )GetStandardApplier ()StandardApplier {return _bbgab ._aadcab };

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_fdab *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _fdab .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ecf .ReadSeeker )(*PdfFont ,error ){const _dgef =_aee .CharCode (32);const _ddedg =_aee .CharCode (255);_aaded ,_gbaabb :=_ec .ReadAll (r );if _gbaabb !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gbaabb );
return nil ,_gbaabb ;};_fcccg ,_gbaabb :=_fg .TtfParse (_bea .NewReader (_aaded ));if _gbaabb !=nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_gbaabb );
return nil ,_gbaabb ;};_gfgg :=&pdfFontSimple {_eecac :make (map[_aee .CharCode ]float64 ),fontCommon :fontCommon {_eegd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gfgg ._cgefeb =_aee .NewWinAnsiEncoder ();_gfgg ._agee =_fcccg .PostScriptName ;
_gfgg .FirstChar =_fe .MakeInteger (int64 (_dgef ));_gfgg .LastChar =_fe .MakeInteger (int64 (_ddedg ));_feeac :=1000.0/float64 (_fcccg .UnitsPerEm );if len (_fcccg .Widths )<=0{return nil ,_cg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bacg :=_feeac *float64 (_fcccg .Widths [0]);_cbbgd :=make ([]float64 ,0,_ddedg -_dgef +1);for _cccf :=_dgef ;_cccf <=_ddedg ;_cccf ++{_fafc ,_fbbcf :=_gfgg .Encoder ().CharcodeToRune (_cccf );if !_fbbcf {_beag .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_cccf );
_cbbgd =append (_cbbgd ,_bacg );continue ;};_gcef ,_beafg :=_fcccg .Chars [_fafc ];if !_beafg {_beag .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cbbgd =append (_cbbgd ,_bacg );continue ;
};_cagd :=_feeac *float64 (_fcccg .Widths [_gcef ]);_cbbgd =append (_cbbgd ,_cagd );};_gfgg .Widths =_fe .MakeIndirectObject (_fe .MakeArrayFromFloats (_cbbgd ));if len (_cbbgd )< int (_ddedg -_dgef +1){_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cbbgd ),255-32+1);
return nil ,_fe .ErrRangeError ;};for _fbfb :=_dgef ;_fbfb <=_ddedg ;_fbfb ++{_gfgg ._eecac [_fbfb ]=_cbbgd [_fbfb -_dgef ];};_gfgg .Encoding =_fe .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_afge :=&PdfFontDescriptor {};
_afge .FontName =_fe .MakeName (_fcccg .PostScriptName );_afge .Ascent =_fe .MakeFloat (_feeac *float64 (_fcccg .TypoAscender ));_afge .Descent =_fe .MakeFloat (_feeac *float64 (_fcccg .TypoDescender ));_afge .CapHeight =_fe .MakeFloat (_feeac *float64 (_fcccg .CapHeight ));
_afge .FontBBox =_fe .MakeArrayFromFloats ([]float64 {_feeac *float64 (_fcccg .Xmin ),_feeac *float64 (_fcccg .Ymin ),_feeac *float64 (_fcccg .Xmax ),_feeac *float64 (_fcccg .Ymax )});_afge .ItalicAngle =_fe .MakeFloat (_fcccg .ItalicAngle );_afge .MissingWidth =_fe .MakeFloat (_feeac *float64 (_fcccg .Widths [0]));
_acabf ,_gbaabb :=_fe .MakeStream (_aaded ,_fe .NewFlateEncoder ());if _gbaabb !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gbaabb );
return nil ,_gbaabb ;};_acabf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fe .MakeInteger (int64 (len (_aaded ))));_afge .FontFile2 =_acabf ;if _fcccg .Bold {_afge .StemV =_fe .MakeInteger (120);}else {_afge .StemV =_fe .MakeInteger (70);
};_gccc :=_fffge ;if _fcccg .IsFixedPitch {_gccc |=_ceea ;};if _fcccg .ItalicAngle !=0{_gccc |=_gbgg ;};_afge .Flags =_fe .MakeInteger (int64 (_gccc ));_gfgg ._eaaeg =_afge ;_aafeg :=&PdfFont {_cdgee :_gfgg };return _aafeg ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fe .PdfObjectArray ;_febba *Image ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_daafa *_fe .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_febg *PdfActionLaunch )ToPdfObject ()_fe .PdfObject {_febg .PdfAction .ToPdfObject ();_dca :=_febg ._bgfg ;_abf :=_dca .PdfObject .(*_fe .PdfObjectDictionary );_abf .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeLaunch )));if _febg .F !=nil {_abf .Set ("\u0046",_febg .F .ToPdfObject ());
};_abf .SetIfNotNil ("\u0057\u0069\u006e",_febg .Win );_abf .SetIfNotNil ("\u004d\u0061\u0063",_febg .Mac );_abf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_febg .Unix );_abf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_febg .NewWindow );
return _dca ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func _bggca ()string {_aagdg .Lock ();defer _aagdg .Unlock ();_gabfa :=_cbb .GetLicenseKey ();if len (_deaf )> 0&&(_gabfa .IsLicensed ()||_aadca ){return _deaf ;};return _a .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_bcefe (),_gabfa .TypeToString ());
};func (_cdf *PdfReader )newPdfActionGotoEFromDict (_bda *_fe .PdfObjectDictionary )(*PdfActionGoToE ,error ){_cbgd ,_babb :=_feba (_bda .Get ("\u0046"));if _babb !=nil {return nil ,_babb ;};return &PdfActionGoToE {D :_bda .Get ("\u0044"),NewWindow :_bda .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bda .Get ("\u0054"),F :_cbgd },nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_ddbac *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acec ,_effg :=_fe .GetNumbersAsFloat (objects );
if _effg !=nil {return nil ,_effg ;};return _ddbac .ColorFromFloats (_acec );};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_dddg :=&PdfFieldSignature {};_dddg .PdfField =NewPdfField ();_dddg .PdfField .SetContext (_dddg );_dddg .PdfAnnotationWidget =NewPdfAnnotationWidget ();_dddg .PdfAnnotationWidget .SetContext (_dddg );
_dddg .PdfAnnotationWidget ._egb =_dddg .PdfField ._beebc ;_dddg .T =_fe .MakeString ("");_dddg .F =_fe .MakeInteger (132);_dddg .V =signature ;return _dddg ;};func _gddab (_ceacab *_fe .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ecaf :=PdfShadingType2 {};
_fafgd :=_ceacab .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fafgd ==nil {_beag .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_fgeda ,_gbdec :=_fafgd .(*_fe .PdfObjectArray );if !_gbdec {_beag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fafgd );
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _fgeda .Len ()!=4{_beag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fgeda .Len ());
return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ecaf .Coords =_fgeda ;if _eegdf :=_ceacab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eegdf !=nil {_eegdf =_fe .TraceToDirectObject (_eegdf );
_gbccb ,_gabdcg :=_eegdf .(*_fe .PdfObjectArray );if !_gabdcg {_beag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eegdf );return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ecaf .Domain =_gbccb ;};_fafgd =_ceacab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fafgd ==nil {_beag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ecaf .Function =[]PdfFunction {};if _ggbgd ,_gdfec :=_fafgd .(*_fe .PdfObjectArray );_gdfec {for _ ,_dgcad :=range _ggbgd .Elements (){_fafbfb ,_ecaac :=_aacg (_dgcad );if _ecaac !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecaac );
return nil ,_ecaac ;};_ecaf .Function =append (_ecaf .Function ,_fafbfb );};}else {_gbdef ,_gbaad :=_aacg (_fafgd );if _gbaad !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbaad );
return nil ,_gbaad ;};_ecaf .Function =append (_ecaf .Function ,_gbdef );};if _adgge :=_ceacab .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_adgge !=nil {_adgge =_fe .TraceToDirectObject (_adgge );_agbdc ,_dbegg :=_adgge .(*_fe .PdfObjectArray );if !_dbegg {_beag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adgge );
return nil ,_fe .ErrTypeError ;};if _agbdc .Len ()!=2{_beag .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_agbdc .Len ());return nil ,ErrInvalidAttribute ;
};_ecaf .Extend =_agbdc ;};return &_ecaf ,nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_cbac *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _cbac .baseFields ()._eaaeg !=nil {return _cbac .baseFields ()._eaaeg ;};if _fdcfa :=_cbac ._cdgee .getFontDescriptor ();_fdcfa !=nil {return _fdcfa ;};_beag .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_cbac );
return nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fe .PdfObject ;Volume _fe .PdfObject ;Synchronous _fe .PdfObject ;Repeat _fe .PdfObject ;Mix _fe .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gff *PdfActionGoToR )ToPdfObject ()_fe .PdfObject {_gff .PdfAction .ToPdfObject ();_eae :=_gff ._bgfg ;_cdc :=_eae .PdfObject .(*_fe .PdfObjectDictionary );_cdc .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoToR )));if _gff .F !=nil {_cdc .Set ("\u0046",_gff .F .ToPdfObject ());
};_cdc .SetIfNotNil ("\u0044",_gff .D );_cdc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gff .NewWindow );return _eae ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fe .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_aecgd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_aeba *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_aeba .updateObjectsDeep (dss .ToPdfObject (),nil );};_aeba ._eaeg =dss ;};

// ToPdfObject returns a stream object.
func (_aecgc *XObjectForm )ToPdfObject ()_fe .PdfObject {_edbgf :=_aecgc ._edaef ;_bgdab :=_edbgf .PdfObjectDictionary ;if _aecgc .Filter !=nil {_bgdab =_aecgc .Filter .MakeStreamDict ();_edbgf .PdfObjectDictionary =_bgdab ;};_bgdab .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bgdab .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0046\u006f\u0072\u006d"));_bgdab .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_aecgc .FormType );_bgdab .SetIfNotNil ("\u0042\u0042\u006f\u0078",_aecgc .BBox );_bgdab .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_aecgc .Matrix );
if _aecgc .Resources !=nil {_bgdab .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aecgc .Resources .ToPdfObject ());};_bgdab .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_aecgc .Group );_bgdab .SetIfNotNil ("\u0052\u0065\u0066",_aecgc .Ref );
_bgdab .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_aecgc .MetaData );_bgdab .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_aecgc .PieceInfo );_bgdab .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_aecgc .LastModified );
_bgdab .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aecgc .StructParent );_bgdab .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_aecgc .StructParents );_bgdab .SetIfNotNil ("\u004f\u0050\u0049",_aecgc .OPI );
_bgdab .SetIfNotNil ("\u004f\u0043",_aecgc .OC );_bgdab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aecgc .Name );_bgdab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_aecgc .Stream ))));_edbgf .Stream =_aecgc .Stream ;return _edbgf ;
};func (_gcaf *PdfReader )flattenFieldsWithOpts (_gdgg bool ,_fgab FieldAppearanceGenerator ,_bdfg *FieldFlattenOpts )error {if _bdfg ==nil {_bdfg =&FieldFlattenOpts {};};var _ebfa bool ;_aacd :=map[*PdfAnnotation ]bool {};{var _fgga []*PdfField ;_eggfd :=_gcaf .AcroForm ;
if _eggfd !=nil {if _bdfg .FilterFunc !=nil {_fgga =_eggfd .filteredFields (_bdfg .FilterFunc ,true );_ebfa =_eggfd .Fields !=nil &&len (*_eggfd .Fields )> 0;}else {_fgga =_eggfd .AllFields ();};};for _ ,_cecc :=range _fgga {for _ ,_gecf :=range _cecc .Annotations {_aacd [_gecf .PdfAnnotation ]=_cecc .V !=nil ;
if _fgab !=nil {_ecefg ,_bgbf :=_fgab .GenerateAppearanceDict (_eggfd ,_cecc ,_gecf );if _bgbf !=nil {return _bgbf ;};_gecf .AP =_ecefg ;};};};};if _gdgg {for _ ,_gccga :=range _gcaf .PageList {_abaed ,_babf :=_gccga .GetAnnotations ();if _babf !=nil {return _babf ;
};for _ ,_dageg :=range _abaed {_aacd [_dageg ]=true ;};};};for _ ,_beae :=range _gcaf .PageList {var _ccda []*PdfAnnotation ;if _fgab !=nil {if _faadf :=_fgab .WrapContentStream (_beae );_faadf !=nil {return _faadf ;};};_dceb ,_dcefe :=_beae .GetAnnotations ();
if _dcefe !=nil {return _dcefe ;};for _ ,_baabd :=range _dceb {_becfb ,_gcagc :=_aacd [_baabd ];if !_gcagc &&_bdfg .AnnotFilterFunc !=nil {if _ ,_ffge :=_baabd .GetContext ().(*PdfAnnotationWidget );!_ffge {_gcagc =_bdfg .AnnotFilterFunc (_baabd );};};
if !_gcagc {_ccda =append (_ccda ,_baabd );continue ;};switch _baabd .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_fggad ,_abdg ,_eacd :=_fbbd (_baabd );if _eacd !=nil {if !_becfb {_beag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_eacd );
continue ;};if _fggad ==nil {continue ;};_deagd :=_beae .Resources .GenerateXObjectName ();_beae .Resources .SetXObjectFormByName (_deagd ,_fggad );_dbegf :=_fa .Min (_abdg .Llx ,_abdg .Urx );_dbed :=_fa .Min (_abdg .Lly ,_abdg .Ury );var _beec []string ;
_beec =append (_beec ,"\u0071");_beec =append (_beec ,_a .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_dbegf ,_dbed ));
_beec =append (_beec ,_a .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_deagd .String ()));_beec =append (_beec ,"\u0051");_cgefa :=_ca .Join (_beec ,"\u000a");_eacd =_beae .AppendContentStream (_cgefa );if _eacd !=nil {return _eacd ;};if _fggad .Resources !=nil {_aebc ,_eedd :=_fe .GetDict (_fggad .Resources .Font );
if _eedd {for _ ,_dccac :=range _aebc .Keys (){if !_beae .Resources .HasFontByName (_dccac ){_beae .Resources .SetFontByName (_dccac ,_aebc .Get (_dccac ));};};};};};if len (_ccda )> 0{_beae ._dcbbc =_ccda ;}else {_beae ._dcbbc =[]*PdfAnnotation {};};};
if !_ebfa {_gcaf .AcroForm =nil ;};return nil ;};type fontCommon struct{_agee string ;_eegd string ;_bggg string ;_gcgbd _fe .PdfObject ;_ggee *_bf .CMap ;_eaaeg *PdfFontDescriptor ;_gafg int64 ;};

// GetAction returns the PDF action for the annotation link.
func (_ebe *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _ebe ._bdd !=nil {return _ebe ._bdd ,nil ;};if _ebe .A ==nil {return nil ,nil ;};if _ebe ._gac ==nil {return nil ,nil ;};_cdfe ,_ebb :=_ebe ._gac .loadAction (_ebe .A );if _ebb !=nil {return nil ,_ebb ;
};_ebe ._bdd =_cdfe ;return _ebe ._bdd ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_bfg :=NewPdfAction ();_fac :=&PdfActionLaunch {};_fac .PdfAction =_bfg ;_bfg .SetContext (_fac );return _fac ;};

// ToPdfObject implements interface PdfModel.
func (_gg *PdfActionURI )ToPdfObject ()_fe .PdfObject {_gg .PdfAction .ToPdfObject ();_cad :=_gg ._bgfg ;_aeg :=_cad .PdfObject .(*_fe .PdfObjectDictionary );_aeg .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeURI )));_aeg .SetIfNotNil ("\u0055\u0052\u0049",_gg .URI );
_aeg .SetIfNotNil ("\u0049\u0073\u004da\u0070",_gg .IsMap );return _cad ;};func _fecd (_ddbee *_fe .PdfObjectDictionary )(*PdfFieldText ,error ){_bdgcc :=&PdfFieldText {};_bdgcc .DA ,_ =_fe .GetString (_ddbee .Get ("\u0044\u0041"));_bdgcc .Q ,_ =_fe .GetInt (_ddbee .Get ("\u0051"));
_bdgcc .DS ,_ =_fe .GetString (_ddbee .Get ("\u0044\u0053"));_bdgcc .RV =_ddbee .Get ("\u0052\u0056");_bdgcc .MaxLen ,_ =_fe .GetInt (_ddbee .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _bdgcc ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_fdeae *PdfDate )ToPdfObject ()_fe .PdfObject {_fbedd :=_a .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fdeae ._dedag ,_fdeae ._ffcef ,_fdeae ._ecega ,_fdeae ._dffba ,_fdeae ._ddcdgg ,_fdeae ._edbgd ,_fdeae ._eggcc ,_fdeae ._fabgc ,_fdeae ._ebcbe );
return _fe .MakeString (_fbedd );};func (_gdfag *PdfWriter )writeObjects (){_beag .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gdfag ._cfabe ));_gdfag ._cabdb =make (map[int ]crossReference );_gdfag ._cabdb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _gdfag ._bggbg .ObjectMap !=nil {for _gdgbg ,_dbdeg :=range _gdfag ._bggbg .ObjectMap {if _gdgbg ==0{continue ;};if _dbdeg .XType ==_fe .XrefTypeObjectStream {_bgbga :=crossReference {Type :2,ObjectNumber :_dbdeg .OsObjNumber ,Index :_dbdeg .OsObjIndex };
_gdfag ._cabdb [_gdgbg ]=_bgbga ;};if _dbdeg .XType ==_fe .XrefTypeTableEntry {_bbebc :=crossReference {Type :1,ObjectNumber :_dbdeg .ObjectNumber ,Offset :_dbdeg .Offset };_gdfag ._cabdb [_gdgbg ]=_bbebc ;};};};};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_afgf :_fe .MakeDict ()};
};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;RD _fe .PdfObject ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_ceec *PdfPageResources )GetXObjectByName (keyName _fe .PdfObjectName )(*_fe .PdfObjectStream ,XObjectType ){if _ceec .XObject ==nil {return nil ,XObjectTypeUndefined ;};_dagcf ,_gdggf :=_fe .TraceToDirectObject (_ceec .XObject ).(*_fe .PdfObjectDictionary );
if !_gdggf {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fe .TraceToDirectObject (_ceec .XObject ));
return nil ,XObjectTypeUndefined ;};if _cceg :=_dagcf .Get (keyName );_cceg !=nil {_efgf ,_fcdgf :=_fe .GetStream (_cceg );if !_fcdgf {_beag .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_cceg );
return nil ,XObjectTypeUndefined ;};_dfdg :=_efgf .PdfObjectDictionary ;_ccde ,_fcdgf :=_fe .TraceToDirectObject (_dfdg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fe .PdfObjectName );if !_fcdgf {_beag .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_dfdg .String ());
return nil ,XObjectTypeUndefined ;};if *_ccde =="\u0049\u006d\u0061g\u0065"{return _efgf ,XObjectTypeImage ;}else if *_ccde =="\u0046\u006f\u0072\u006d"{return _efgf ,XObjectTypeForm ;}else if *_ccde =="\u0050\u0053"{return _efgf ,XObjectTypePS ;}else {_beag .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_ccde );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// ToPdfObject implements interface PdfModel.
func (_dd *PdfAction )ToPdfObject ()_fe .PdfObject {_ab :=_dd ._bgfg ;_da :=_ab .PdfObject .(*_fe .PdfObjectDictionary );_da .Clear ();_da .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_da .SetIfNotNil ("\u0053",_dd .S );
_da .SetIfNotNil ("\u004e\u0065\u0078\u0074",_dd .Next );return _ab ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ebbc *PdfAnnotation )GetContainingPdfObject ()_fe .PdfObject {return _ebbc ._egb };

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ae .Time ){_aagdg .Lock ();defer _aagdg .Unlock ();_daea =creationDate ;};

// ToPdfObject implements interface PdfModel.
func (_bebd *PdfAnnotationTrapNet )ToPdfObject ()_fe .PdfObject {_bebd .PdfAnnotation .ToPdfObject ();_ede :=_bebd ._egb ;_ffdf :=_ede .PdfObject .(*_fe .PdfObjectDictionary );_ffdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ede ;};

// String returns a human readable description of `fontfile`.
func (_daad *fontFile )String ()string {_egec :="\u005b\u004e\u006f\u006e\u0065\u005d";if _daad ._fffee !=nil {_egec =_daad ._fffee .String ();};return _a .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_daad ._fcfce ,_egec );
};func (_bdc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_deff *_fe .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dgeb :=PdfAnnotationPrinterMark {};_dgeb .MN =_deff .Get ("\u004d\u004e");return &_dgeb ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_cedcg *_fe .PdfIndirectObject ;Certs []*_fe .PdfObjectStream ;OCSPs []*_fe .PdfObjectStream ;CRLs []*_fe .PdfObjectStream ;VRI map[string ]*VRI ;_cgedb map[string ]*_fe .PdfObjectStream ;_bffde map[string ]*_fe .PdfObjectStream ;_gedde map[string ]*_fe .PdfObjectStream ;
};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_aeagg *PdfField )IsTerminal ()bool {return len (_aeagg .Kids )==0};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_aaab *_fe .PdfIndirectObject ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fbegb *PdfPageResources )SetXObjectByName (keyName _fe .PdfObjectName ,stream *_fe .PdfObjectStream )error {if _fbegb .XObject ==nil {_fbegb .XObject =_fe .MakeDict ();};_fefdfc :=_fe .TraceToDirectObject (_fbegb .XObject );_fcgaf ,_daaed :=_fefdfc .(*_fe .PdfObjectDictionary );
if !_daaed {_beag .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fbegb .XObject ,_fefdfc );return _cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fcgaf .Set (keyName ,stream );return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aabcc *PdfShadingType3 )ToPdfObject ()_fe .PdfObject {_aabcc .PdfShading .ToPdfObject ();_gdegg ,_adad :=_aabcc .getShadingDict ();if _adad !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aabcc .Coords !=nil {_gdegg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_aabcc .Coords );};if _aabcc .Domain !=nil {_gdegg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aabcc .Domain );};if _aabcc .Function !=nil {if len (_aabcc .Function )==1{_gdegg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aabcc .Function [0].ToPdfObject ());
}else {_bcacd :=_fe .MakeArray ();for _ ,_debfg :=range _aabcc .Function {_bcacd .Append (_debfg .ToPdfObject ());};_gdegg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcacd );};};if _aabcc .Extend !=nil {_gdegg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_aabcc .Extend );
};return _aabcc ._ebfb ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_geafa *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fe .GetNumberAsFloat (_geafa .Descent );};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fe .PdfObjectInteger ;TilingType *_fe .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fe .PdfObjectFloat ;YStep *_fe .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fe .PdfObjectArray ;};func _agdcc (_abfd *_fe .PdfObjectDictionary )(*PdfShadingType4 ,error ){_edbed :=PdfShadingType4 {};
_edbec :=_abfd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _edbec ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_faddf ,_dcabe :=_edbec .(*_fe .PdfObjectInteger );if !_dcabe {_beag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edbec );
return nil ,_fe .ErrTypeError ;};_edbed .BitsPerCoordinate =_faddf ;_edbec =_abfd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _edbec ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_faddf ,_dcabe =_edbec .(*_fe .PdfObjectInteger );if !_dcabe {_beag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_edbec );
return nil ,_fe .ErrTypeError ;};_edbed .BitsPerComponent =_faddf ;_edbec =_abfd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _edbec ==nil {_beag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_faddf ,_dcabe =_edbec .(*_fe .PdfObjectInteger );if !_dcabe {_beag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_edbec );
return nil ,_fe .ErrTypeError ;};_edbed .BitsPerComponent =_faddf ;_edbec =_abfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _edbec ==nil {_beag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgef ,_dcabe :=_edbec .(*_fe .PdfObjectArray );if !_dcabe {_beag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edbec );
return nil ,_fe .ErrTypeError ;};_edbed .Decode =_fgef ;_edbec =_abfd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _edbec ==nil {_beag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_edbed .Function =[]PdfFunction {};if _gfag ,_acfgf :=_edbec .(*_fe .PdfObjectArray );_acfgf {for _ ,_cgbdb :=range _gfag .Elements (){_abcbg ,_ddecde :=_aacg (_cgbdb );if _ddecde !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddecde );
return nil ,_ddecde ;};_edbed .Function =append (_edbed .Function ,_abcbg );};}else {_cbcde ,_faged :=_aacg (_edbec );if _faged !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_faged );
return nil ,_faged ;};_edbed .Function =append (_edbed .Function ,_cbcde );};return &_edbed ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_dacef :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_dacef ;};

// Add appends a top level outline item to the outline.
func (_fdcg *Outline )Add (item *OutlineItem ){_fdcg .Entries =append (_fdcg .Entries ,item )};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gef :=NewPdfAction ();_fd :=&PdfActionSetOCGState {};_fd .PdfAction =_gef ;_gef .SetContext (_fd );return _fd ;};

// SetImage updates XObject Image with new image data.
func (_cdbfc *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_cdbfc .Filter .UpdateParams (img .GetParamsDict ());_ceca ,_agfggb :=_cdbfc .Filter .EncodeBytes (img .Data );if _agfggb !=nil {return _agfggb ;};_cdbfc .Stream =_ceca ;_cecae :=img .Width ;
_cdbfc .Width =&_cecae ;_dcgba :=img .Height ;_cdbfc .Height =&_dcgba ;_dbdde :=img .BitsPerComponent ;_cdbfc .BitsPerComponent =&_dbdde ;if cs ==nil {if img .ColorComponents ==1{_cdbfc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_cdbfc .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_cdbfc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cdbfc .ColorSpace =cs ;};return nil ;
};func _bcbca (_gacgge *PdfPage ){_agfed :=_cbb .GetLicenseKey ();if _agfed !=nil &&_agfed .IsLicensed (){return ;};_ebdba :=_fe .PdfObjectName ("\u0055\u0046\u0031");if !_gacgge .Resources .HasFontByName (_ebdba ){_gacgge .Resources .SetFontByName (_ebdba ,DefaultFont ().ToPdfObject ());
};var _cfgd []string ;_cfgd =append (_cfgd ,"\u0071");_cfgd =append (_cfgd ,"\u0042\u0054");_cfgd =append (_cfgd ,_a .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_ebdba .String ()));_cfgd =append (_cfgd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_cfgd =append (_cfgd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_ddade :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_cfgd =append (_cfgd ,_a .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_ddade ));_cfgd =append (_cfgd ,"\u0045\u0054");_cfgd =append (_cfgd ,"\u0051");_ggaba :=_ca .Join (_cfgd ,"\u000a");_gacgge .AddContentStreamByString (_ggaba );_gacgge .ToPdfObject ();
};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_eeed *PdfPageResources )HasFontByName (keyName _fe .PdfObjectName )bool {_ ,_dbde :=_eeed .GetFontByName (keyName );return _dbde ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_ebebc *PdfWriter )writeXRefStreams (_bdad int ,_dbcae int64 )error {_fggf :=_bdad +1;_ebebc ._cabdb [_fggf ]=crossReference {Type :1,ObjectNumber :_fggf ,Offset :_dbcae };_eagfe :=_bea .NewBuffer (nil );_eafdg :=_fe .MakeArray ();
for _cfgcg :=0;_cfgcg <=_bdad ;{for ;_cfgcg <=_bdad ;_cfgcg ++{_baeeg ,_abdaca :=_ebebc ._cabdb [_cfgcg ];if _abdaca &&(!_ebebc ._ccbff ||_ebebc ._ccbff &&(_baeeg .Type ==1&&_baeeg .Offset >=_ebebc ._agdca ||_baeeg .Type ==0)){break ;};};var _ffae int ;
for _ffae =_cfgcg +1;_ffae <=_bdad ;_ffae ++{_ggfec ,_geagb :=_ebebc ._cabdb [_ffae ];if _geagb &&(!_ebebc ._ccbff ||_ebebc ._ccbff &&(_ggfec .Type ==1&&_ggfec .Offset > _ebebc ._agdca )){continue ;};break ;};_eafdg .Append (_fe .MakeInteger (int64 (_cfgcg )),_fe .MakeInteger (int64 (_ffae -_cfgcg )));
for _fdacc :=_cfgcg ;_fdacc < _ffae ;_fdacc ++{_aeece :=_ebebc ._cabdb [_fdacc ];switch _aeece .Type {case 0:_bg .Write (_eagfe ,_bg .BigEndian ,byte (0));_bg .Write (_eagfe ,_bg .BigEndian ,uint32 (0));_bg .Write (_eagfe ,_bg .BigEndian ,uint16 (0xFFFF));
case 1:_bg .Write (_eagfe ,_bg .BigEndian ,byte (1));_bg .Write (_eagfe ,_bg .BigEndian ,uint32 (_aeece .Offset ));_bg .Write (_eagfe ,_bg .BigEndian ,uint16 (_aeece .Generation ));case 2:_bg .Write (_eagfe ,_bg .BigEndian ,byte (2));_bg .Write (_eagfe ,_bg .BigEndian ,uint32 (_aeece .ObjectNumber ));
_bg .Write (_eagfe ,_bg .BigEndian ,uint16 (_aeece .Index ));};};_cfgcg =_ffae +1;};_gcgda ,_fdbfd :=_fe .MakeStream (_eagfe .Bytes (),_fe .NewFlateEncoder ());if _fdbfd !=nil {return _fdbfd ;};_gcgda .ObjectNumber =int64 (_fggf );_gcgda .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0058\u0052\u0065\u0066"));
_gcgda .PdfObjectDictionary .Set ("\u0057",_fe .MakeArray (_fe .MakeInteger (1),_fe .MakeInteger (4),_fe .MakeInteger (2)));_gcgda .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_eafdg );_gcgda .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fe .MakeInteger (int64 (_fggf +1)));
_gcgda .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_ebebc ._fcdfd );_gcgda .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_ebebc ._edadg );if _ebebc ._ccbff &&_ebebc ._gfafe > 0{_gcgda .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fe .MakeInteger (_ebebc ._gfafe ));
};if _ebebc ._fddf !=nil {_gcgda .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ebebc ._eeebf );};if _ebebc ._eecbce !=nil {_beag .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ebebc ._eecbce );_gcgda .Set ("\u0049\u0044",_ebebc ._eecbce );};_ebebc .writeObject (int (_gcgda .ObjectNumber ),_gcgda );
return nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fe .PdfObject ;Sy _fe .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bga *PdfActionThread )ToPdfObject ()_fe .PdfObject {_bga .PdfAction .ToPdfObject ();_dbb :=_bga ._bgfg ;_dfc :=_dbb .PdfObject .(*_fe .PdfObjectDictionary );_dfc .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeThread )));if _bga .F !=nil {_dfc .Set ("\u0046",_bga .F .ToPdfObject ());
};_dfc .SetIfNotNil ("\u0044",_bga .D );_dfc .SetIfNotNil ("\u0042",_bga .B );return _dbb ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_bfd *PdfReader )newPdfActionRenditionFromDict (_abb *_fe .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_abb .Get ("\u0052"),AN :_abb .Get ("\u0041\u004e"),OP :_abb .Get ("\u004f\u0050"),JS :_abb .Get ("\u004a\u0053")},nil ;
};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_gdbf :=PdfColorDeviceRGB {r ,g ,b };return &_gdbf ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_dfabg :=&XObjectForm {};_ddegf :=&_fe .PdfObjectStream {};_ddegf .PdfObjectDictionary =_fe .MakeDict ();_dfabg ._edaef =_ddegf ;return _dfabg ;};

// String returns a string that describes `font`.
func (_gbgae *PdfFont )String ()string {_fdffa :="";if _gbgae ._cdgee .Encoder ()!=nil {_fdffa =_gbgae ._cdgee .Encoder ().String ();};return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gbgae ._cdgee ,_gbgae .baseFields ().coreString (),_fdffa );
};func (_cdad *PdfWriter )makeOffSetReference (_dgade int64 ){_fceec :=_a .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_dgade );_cdad .writeString (_fceec );_cdad .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};

// L returns the value of the L component of the color.
func (_faca *PdfColorLab )L ()float64 {return _faca [0]};func (_cfb *PdfReader )newPdfActionLaunchFromDict (_accbg *_fe .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fdff ,_dbf :=_feba (_accbg .Get ("\u0046"));if _dbf !=nil {return nil ,_dbf ;};return &PdfActionLaunch {Win :_accbg .Get ("\u0057\u0069\u006e"),Mac :_accbg .Get ("\u004d\u0061\u0063"),Unix :_accbg .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_accbg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fdff },nil ;
};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fe .PdfObject ;BS _fe .PdfObject ;LE _fe .PdfObject ;IC _fe .PdfObject ;LL _fe .PdfObject ;LLE _fe .PdfObject ;Cap _fe .PdfObject ;IT _fe .PdfObject ;LLO _fe .PdfObject ;CP _fe .PdfObject ;
Measure _fe .PdfObject ;CO _fe .PdfObject ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_gbcbc *PdfWriter )SetDocInfo (info *PdfInfo ){_gbcbc .setDocInfo (info .ToPdfObject ())};func _faaab (_fdee *_fe .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bebf :=PdfShadingType7 {};_afeaa :=_fdee .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _afeaa ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_adefdc ,_cgcdcg :=_afeaa .(*_fe .PdfObjectInteger );if !_cgcdcg {_beag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afeaa );
return nil ,_fe .ErrTypeError ;};_bebf .BitsPerCoordinate =_adefdc ;_afeaa =_fdee .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _afeaa ==nil {_beag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_adefdc ,_cgcdcg =_afeaa .(*_fe .PdfObjectInteger );if !_cgcdcg {_beag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_afeaa );
return nil ,_fe .ErrTypeError ;};_bebf .BitsPerComponent =_adefdc ;_afeaa =_fdee .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _afeaa ==nil {_beag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_adefdc ,_cgcdcg =_afeaa .(*_fe .PdfObjectInteger );if !_cgcdcg {_beag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_afeaa );
return nil ,_fe .ErrTypeError ;};_bebf .BitsPerComponent =_adefdc ;_afeaa =_fdee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _afeaa ==nil {_beag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_geag ,_cgcdcg :=_afeaa .(*_fe .PdfObjectArray );if !_cgcdcg {_beag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afeaa );
return nil ,_fe .ErrTypeError ;};_bebf .Decode =_geag ;if _gbfga :=_fdee .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gbfga !=nil {_bebf .Function =[]PdfFunction {};if _eacdg ,_daaedc :=_gbfga .(*_fe .PdfObjectArray );_daaedc {for _ ,_aaafc :=range _eacdg .Elements (){_aafa ,_cfbdg :=_aacg (_aaafc );
if _cfbdg !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfbdg );return nil ,_cfbdg ;};_bebf .Function =append (_bebf .Function ,_aafa );
};}else {_ffgbf ,_ddcgg :=_aacg (_gbfga );if _ddcgg !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddcgg );return nil ,_ddcgg ;
};_bebf .Function =append (_bebf .Function ,_ffgbf );};};return &_bebf ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_edba *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fe .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_fdeb *_fe .PdfIndirectObject ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gcdgg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fe .StreamEncoder ,error ){_beed ,_eebe :=_gcdgg ._deebb .(*_fe .PdfObjectStream );if !_eebe {_beag .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcdgg ._deebb );
return nil ,nil ,_fe .ErrTypeError ;};_edgbfd ,_aceff :=_fe .DecodeStream (_beed );if _aceff !=nil {_beag .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_aceff );
return nil ,nil ,_aceff ;};_eaccd ,_aceff :=_fe .NewEncoderFromStream (_beed );if _aceff !=nil {_beag .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_aceff );
return nil ,nil ,_aceff ;};return _edgbfd ,_eaccd ,nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_dcabc *PdfPageResources )GetExtGState (keyName _fe .PdfObjectName )(_fe .PdfObject ,bool ){if _dcabc .ExtGState ==nil {return nil ,false ;};_faade ,_ccfb :=_fe .TraceToDirectObject (_dcabc .ExtGState ).(*_fe .PdfObjectDictionary );if !_ccfb {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcabc .ExtGState );
return nil ,false ;};if _dbdge :=_faade .Get (keyName );_dbdge !=nil {return _dbdge ,true ;};return nil ,false ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dacff *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dacff ._bfea .(*PdfTilingPattern );};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bbbae *XObjectImage )SetFilter (encoder _fe .StreamEncoder )error {_agdge :=_bbbae .Stream ;_dafbba ,_egdc :=_bbbae .Filter .DecodeBytes (_agdge );if _egdc !=nil {return _egdc ;};_bbbae .Filter =encoder ;encoder .UpdateParams (_bbbae .getParamsDict ());
_agdge ,_egdc =encoder .EncodeBytes (_dafbba );if _egdc !=nil {return _egdc ;};_bbbae .Stream =_agdge ;return nil ;};

// SetContext sets the sub action (context).
func (_edb *PdfAction )SetContext (ctx PdfModel ){_edb ._gf =ctx };func (_aaaggd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _aaaggd ._fbega .GetCrypter ()!=nil &&!_aaaggd ._fbega .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_egedae :=_aaaggd ._gbbce ;_ccca :=_egedae .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _ccca ==nil {return nil ,nil ;};_affbb ,_ :=_fe .GetIndirect (_ccca );_ccca =_fe .TraceToDirectObject (_ccca );if _fe .IsNullObject (_ccca ){_beag .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_gafcd ,_cgfga :=_fe .GetDict (_ccca );if !_cgfga {_beag .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ccca );_beag .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ccca );};_beag .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_beag .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_aaaggd ._edeea {_bace :=_aaaggd .traverseObjectData (_gafcd );
if _bace !=nil {_beag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_bace );
return nil ,_bace ;};};_dcaad ,_edfef :=_aaaggd .newPdfAcroFormFromDict (_affbb ,_gafcd );if _edfef !=nil {return nil ,_edfef ;};return _dcaad ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fe .PdfObject ;Q _fe .PdfObject ;RC _fe .PdfObject ;DS _fe .PdfObject ;CL _fe .PdfObject ;IT _fe .PdfObject ;BE _fe .PdfObject ;RD _fe .PdfObject ;BS _fe .PdfObject ;LE _fe .PdfObject ;
};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_aeee *PdfField )ToPdfObject ()_fe .PdfObject {_bffa :=_aeee ._beebc ;_acbee :=_bffa .PdfObject .(*_fe .PdfObjectDictionary );_bdfa :=_fe .MakeArray ();for _ ,_gdca :=range _aeee .Kids {_bdfa .Append (_gdca .ToPdfObject ());};for _ ,_caac :=range _aeee .Annotations {if _caac ._egb !=_aeee ._beebc {_bdfa .Append (_caac .GetContext ().ToPdfObject ());
};};if _aeee .Parent !=nil {_acbee .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_aeee .Parent .GetContainingPdfObject ());};if _bdfa .Len ()> 0{_acbee .Set ("\u004b\u0069\u0064\u0073",_bdfa );};_acbee .SetIfNotNil ("\u0046\u0054",_aeee .FT );_acbee .SetIfNotNil ("\u0054",_aeee .T );
_acbee .SetIfNotNil ("\u0054\u0055",_aeee .TU );_acbee .SetIfNotNil ("\u0054\u004d",_aeee .TM );_acbee .SetIfNotNil ("\u0046\u0066",_aeee .Ff );_acbee .SetIfNotNil ("\u0056",_aeee .V );_acbee .SetIfNotNil ("\u0044\u0056",_aeee .DV );_acbee .SetIfNotNil ("\u0041\u0041",_aeee .AA );
return _bffa ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_fcba *PdfReader )GetTrailer ()(*_fe .PdfObjectDictionary ,error ){_aabaf :=_fcba ._fbega .GetTrailer ();if _aabaf ==nil {return nil ,_cg .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _aabaf ,nil ;
};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_beagd *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func _bcefe ()string {return _beag .Version };var _aadca =false ;

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ffdb :=&PdfPageResourcesColorspaces {};_ffdb .Names =[]string {};_ffdb .Colorspaces =map[string ]PdfColorspace {};_ffdb ._ggca =&_fe .PdfIndirectObject {};return _ffdb ;};func (_agec *PdfReader )newPdfAnnotationStrikeOut (_eafb *_fe .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_aec :=PdfAnnotationStrikeOut {};
_gcgd ,_acaa :=_agec .newPdfAnnotationMarkupFromDict (_eafb );if _acaa !=nil {return nil ,_acaa ;};_aec .PdfAnnotationMarkup =_gcgd ;_aec .QuadPoints =_eafb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aec ,nil ;};func (_gdaac *pdfFontType0 )bytesToCharcodes (_ddadg []byte )([]_aee .CharCode ,bool ){if _gdaac ._feaad ==nil {return nil ,false ;
};_cfcd ,_deffg :=_gdaac ._feaad .BytesToCharcodes (_ddadg );if !_deffg {return nil ,false ;};_ddcad :=make ([]_aee .CharCode ,len (_cfcd ));for _acece ,_fecbf :=range _cfcd {_ddcad [_acece ]=_aee .CharCode (_fecbf );};return _ddcad ,true ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_afabg :map[_fe .PdfObject ]struct{}{},_befdc :_cfbcf (),_fbega :_fe .NewParserFromString (txt )};};type pdfCIDFontType2 struct{fontCommon ;_gaaba *_fe .PdfIndirectObject ;_abccb _aee .TextEncoder ;


// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fe .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fe .PdfObject ;W _fe .PdfObject ;DW2 _fe .PdfObject ;W2 _fe .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fe .PdfObject ;_cabf map[_aee .CharCode ]float64 ;_beea float64 ;_agcfb map[rune ]int ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_dfd *PdfInfo )GetCustomInfo (name string )*_fe .PdfObjectString {var _bgdc *_fe .PdfObjectString ;if _dfd ._fefc ==nil {return _bgdc ;};if _ccaf ,_ecgae :=_dfd ._fefc .Get (*_fe .MakeName (name )).(*_fe .PdfObjectString );_ecgae {_bgdc =_ccaf ;};
return _bgdc ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aagdg .Lock ();defer _aagdg .Unlock ();_afged =creator };

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fe .StreamEncoder )(*XObjectImage ,error ){_abad :=NewXObjectImage ();return UpdateXObjectImageFromImage (_abad ,img ,cs ,encoder );};

// ToPdfObject implements interface PdfModel.
func (_gaa *PdfActionGoToE )ToPdfObject ()_fe .PdfObject {_gaa .PdfAction .ToPdfObject ();_ecd :=_gaa ._bgfg ;_ffb :=_ecd .PdfObject .(*_fe .PdfObjectDictionary );_ffb .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoToE )));if _gaa .F !=nil {_ffb .Set ("\u0046",_gaa .F .ToPdfObject ());
};_ffb .SetIfNotNil ("\u0044",_gaa .D );_ffb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gaa .NewWindow );_ffb .SetIfNotNil ("\u0054",_gaa .T );return _ecd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abgf *PdfShadingType5 )ToPdfObject ()_fe .PdfObject {_abgf .PdfShading .ToPdfObject ();_bagea ,_aedge :=_abgf .getShadingDict ();if _aedge !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _abgf .BitsPerCoordinate !=nil {_bagea .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_abgf .BitsPerCoordinate );};if _abgf .BitsPerComponent !=nil {_bagea .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_abgf .BitsPerComponent );
};if _abgf .VerticesPerRow !=nil {_bagea .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_abgf .VerticesPerRow );};if _abgf .Decode !=nil {_bagea .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_abgf .Decode );};if _abgf .Function !=nil {if len (_abgf .Function )==1{_bagea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abgf .Function [0].ToPdfObject ());
}else {_cagg :=_fe .MakeArray ();for _ ,_abgg :=range _abgf .Function {_cagg .Append (_abgg .ToPdfObject ());};_bagea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cagg );};};return _abgf ._ebfb ;};func _dcgad (_daced *_fe .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gefda :=PdfShadingType1 {};
if _bdffd :=_daced .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bdffd !=nil {_bdffd =_fe .TraceToDirectObject (_bdffd );_dabc ,_fagef :=_bdffd .(*_fe .PdfObjectArray );if !_fagef {_beag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdffd );
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gefda .Domain =_dabc ;};if _cgcfg :=_daced .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cgcfg !=nil {_cgcfg =_fe .TraceToDirectObject (_cgcfg );
_aagdc ,_dbad :=_cgcfg .(*_fe .PdfObjectArray );if !_dbad {_beag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgcfg );return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gefda .Matrix =_aagdc ;};_cega :=_daced .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cega ==nil {_beag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gefda .Function =[]PdfFunction {};if _gdbe ,_fdcgdb :=_cega .(*_fe .PdfObjectArray );_fdcgdb {for _ ,_gbagf :=range _gdbe .Elements (){_ddcdga ,_dafad :=_aacg (_gbagf );if _dafad !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dafad );
return nil ,_dafad ;};_gefda .Function =append (_gefda .Function ,_ddcdga );};}else {_fafbf ,_dfgec :=_aacg (_cega );if _dfgec !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfgec );
return nil ,_dfgec ;};_gefda .Function =append (_gefda .Function ,_fafbf );};return &_gefda ,nil ;};

// GetXObjectByName gets XObject by name.
func (_daabc *PdfPage )GetXObjectByName (name _fe .PdfObjectName )(_fe .PdfObject ,bool ){_gbba ,_ggeb :=_daabc .Resources .XObject .(*_fe .PdfObjectDictionary );if !_ggeb {return nil ,false ;};if _fgge :=_gbba .Get (name );_fgge !=nil {return _fgge ,true ;
};return nil ,false ;};func (_gfdf *PdfReader )newPdfAnnotationWidgetFromDict (_afcag *_fe .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dabe :=PdfAnnotationWidget {};_dabe .H =_afcag .Get ("\u0048");_dabe .MK =_afcag .Get ("\u004d\u004b");_dabe .A =_afcag .Get ("\u0041");
_dabe .AA =_afcag .Get ("\u0041\u0041");_dabe .BS =_afcag .Get ("\u0042\u0053");_dabe .Parent =_afcag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dabe ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ae .Time )(PdfDate ,error ){_feeef :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_beadg ,_ :=_ge .ParseInt (_feeef [1:3],10,32);_cgae ,_ :=_ge .ParseInt (_feeef [4:6],10,32);return PdfDate {_dedag :int64 (timeObj .Year ()),_ffcef :int64 (timeObj .Month ()),_ecega :int64 (timeObj .Day ()),_dffba :int64 (timeObj .Hour ()),_ddcdgg :int64 (timeObj .Minute ()),_edbgd :int64 (timeObj .Second ()),_eggcc :_feeef [0],_fabgc :_beadg ,_ebcbe :_cgae },nil ;
};func (_dagb *PdfAppender )replaceObject (_dgff ,_gdce _fe .PdfObject ){switch _gede :=_dgff .(type ){case *_fe .PdfIndirectObject :_dagb ._fced [_gdce ]=_gede .ObjectNumber ;case *_fe .PdfObjectStream :_dagb ._fced [_gdce ]=_gede .ObjectNumber ;};};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_eccg *PdfReader )GetEncryptionMethod ()string {_ccgee :=_eccg ._fbega .GetCrypter ();return _ccgee .String ();};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_df :=NewPdfAction ();_baa :=&PdfActionImportData {};_baa .PdfAction =_df ;_df .SetContext (_baa );return _baa ;};

// ToPdfObject returns the PDF representation of the function.
func (_bcge *PdfFunctionType3 )ToPdfObject ()_fe .PdfObject {_fbfcc :=_fe .MakeDict ();_fbfcc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (3));_eebf :=&_fe .PdfObjectArray {};for _ ,_dcbfb :=range _bcge .Domain {_eebf .Append (_fe .MakeFloat (_dcbfb ));
};_fbfcc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eebf );if _bcge .Range !=nil {_ccdaf :=&_fe .PdfObjectArray {};for _ ,_faaa :=range _bcge .Range {_ccdaf .Append (_fe .MakeFloat (_faaa ));};_fbfcc .Set ("\u0052\u0061\u006eg\u0065",_ccdaf );};if _bcge .Functions !=nil {_bddcd :=&_fe .PdfObjectArray {};
for _ ,_cedg :=range _bcge .Functions {_bddcd .Append (_cedg .ToPdfObject ());};_fbfcc .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bddcd );};if _bcge .Bounds !=nil {_dabdf :=&_fe .PdfObjectArray {};for _ ,_edbeg :=range _bcge .Bounds {_dabdf .Append (_fe .MakeFloat (_edbeg ));
};_fbfcc .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_dabdf );};if _bcge .Encode !=nil {_aggga :=&_fe .PdfObjectArray {};for _ ,_bbebg :=range _bcge .Encode {_aggga .Append (_fe .MakeFloat (_bbebg ));};_fbfcc .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_aggga );
};if _bcge ._fdbff !=nil {_bcge ._fdbff .PdfObject =_fbfcc ;return _bcge ._fdbff ;};return _fbfcc ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetPdfVersion gets the version of the PDF used within this document.
func (_fgffa *PdfWriter )GetPdfVersion ()string {return _fgffa .getPdfVersion ()};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_fe .PdfObjectString ;Author *_fe .PdfObjectString ;Subject *_fe .PdfObjectString ;Keywords *_fe .PdfObjectString ;Creator *_fe .PdfObjectString ;Producer *_fe .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_fe .PdfObjectName ;
_fefc *_fe .PdfObjectDictionary ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ade :=NewPdfAnnotation ();_ddaf :=&PdfAnnotationLink {};_ddaf .PdfAnnotation =_ade ;_ade .SetContext (_ddaf );return _ddaf ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;BitsPerFlag *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};func _cfec (_gagcf *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_gagcf }};


// GetContainingPdfObject implements interface PdfModel.
func (_caaa *PdfFilespec )GetContainingPdfObject ()_fe .PdfObject {return _caaa ._gcbg };

// ToPdfObject implements interface PdfModel.
func (_cbeb *PdfAnnotationSquare )ToPdfObject ()_fe .PdfObject {_cbeb .PdfAnnotation .ToPdfObject ();_febe :=_cbeb ._egb ;_eagg :=_febe .PdfObject .(*_fe .PdfObjectDictionary );if _cbeb .PdfAnnotationMarkup !=nil {_cbeb .PdfAnnotationMarkup .appendToPdfDictionary (_eagg );
};_eagg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_eagg .SetIfNotNil ("\u0042\u0053",_cbeb .BS );_eagg .SetIfNotNil ("\u0049\u0043",_cbeb .IC );_eagg .SetIfNotNil ("\u0042\u0045",_cbeb .BE );
_eagg .SetIfNotNil ("\u0052\u0044",_cbeb .RD );return _febe ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cgfcd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bcdc *modelManager )GetModelFromPrimitive (primitive _fe .PdfObject )PdfModel {model ,_afbeea :=_bcdc ._eedag [primitive ];if !_afbeea {return nil ;};return model ;};

// AllFields returns a flattened list of all fields in the form.
func (_fegg *PdfAcroForm )AllFields ()[]*PdfField {if _fegg ==nil {return nil ;};var _cdgcac []*PdfField ;if _fegg .Fields !=nil {for _ ,_abfg :=range *_fegg .Fields {_cdgcac =append (_cdgcac ,_dcbge (_abfg )...);};};return _cdgcac ;};func (_cedbb *PdfAcroForm )fill (_cdaf FieldValueProvider ,_fcfa FieldAppearanceGenerator )error {if _cedbb ==nil {return nil ;
};_addad ,_debd :=_cdaf .FieldValues ();if _debd !=nil {return _debd ;};for _ ,_ccdd :=range _cedbb .AllFields (){_bgdf :=_ccdd .PartialName ();_fbdb ,_dcbf :=_addad [_bgdf ];if !_dcbf {if _adcc ,_dfgcd :=_ccdd .FullName ();_dfgcd ==nil {_fbdb ,_dcbf =_addad [_adcc ];
};};if !_dcbf {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_bgdf );
continue ;};if _dcddb :=_gebaf (_ccdd ,_fbdb );_dcddb !=nil {return _dcddb ;};if _fcfa ==nil {continue ;};for _ ,_bcfd :=range _ccdd .Annotations {_abage ,_dfgeb :=_fcfa .GenerateAppearanceDict (_cedbb ,_ccdd ,_bcfd );if _dfgeb !=nil {return _dfgeb ;};
_bcfd .AP =_abage ;_bcfd .ToPdfObject ();};};return nil ;};

// Items returns all children outline items.
func (_gedg *OutlineItem )Items ()[]*OutlineItem {return _gedg .Entries };

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_edadg *_fe .PdfIndirectObject ;_dgdfc *_fe .PdfIndirectObject ;_fbgee map[_fe .PdfObject ]struct{};_cfabe []_fe .PdfObject ;_ebfbf map[_fe .PdfObject ]struct{};_acdc []*_fe .PdfIndirectObject ;_ddegc *PdfOutlineTreeNode ;_gagg *_fe .PdfObjectDictionary ;
_cgcdg []_fe .PdfObject ;_fcdfd *_fe .PdfIndirectObject ;_babfg *_c .Writer ;_bgefgf int64 ;_adage error ;_fddf *_fe .PdfCrypt ;_ggbbe *_fe .PdfObjectDictionary ;_eeebf *_fe .PdfIndirectObject ;_eecbce *_fe .PdfObjectArray ;_gbge _fe .Version ;_ccba *bool ;
_acbab map[_fe .PdfObject ][]*_fe .PdfObjectDictionary ;_dddac *PdfAcroForm ;_dbbab Optimizer ;_aadcab StandardApplier ;_cabdb map[int ]crossReference ;_eebed int64 ;ObjNumOffset int ;_ccbff bool ;_bggbg _fe .XrefTable ;_gfafe int64 ;_agdca int64 ;_bbgfff map[_fe .PdfObject ]int64 ;
_eafce map[_fe .PdfObject ]struct{};_dcda string ;_cddaa []*PdfOutputIntent ;_babfe bool ;_ggfeag ,_fbegc string ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_decdaa *PdfPageResources )HasColorspaceByName (keyName _fe .PdfObjectName )bool {_gggcb ,_ccee :=_decdaa .GetColorspaces ();if _ccee !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ccee );
return false ;};if _gggcb ==nil {return false ;};_ ,_gbfgb :=_gggcb .Colorspaces [string (keyName )];return _gbfgb ;};func (_eebef *XObjectImage )getParamsDict ()*_fe .PdfObjectDictionary {_afadg :=_fe .MakeDict ();_afadg .Set ("\u0057\u0069\u0064t\u0068",_fe .MakeInteger (*_eebef .Width ));
_afadg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fe .MakeInteger (*_eebef .Height ));_afadg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fe .MakeInteger (int64 (_eebef .ColorSpace .GetNumComponents ())));
_afadg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fe .MakeInteger (*_eebef .BitsPerComponent ));return _afadg ;};func (_ddf *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};func _cbfag (_gcaee *_fe .PdfObjectDictionary ,_dfac *fontCommon )(*pdfFontType3 ,error ){_gdefe :=_cfec (_dfac );_aeeeb :=_gcaee .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aeeeb ==nil {_aeeeb =_fe .MakeInteger (0);};_gdefe .FirstChar =_aeeeb ;
_aecd ,_gacf :=_fe .GetIntVal (_aeeeb );if !_gacf {_beag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aeeeb );
return nil ,_fe .ErrTypeError ;};_eedeb :=_aee .CharCode (_aecd );_aeeeb =_gcaee .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aeeeb ==nil {_aeeeb =_fe .MakeInteger (255);};_gdefe .LastChar =_aeeeb ;_aecd ,_gacf =_fe .GetIntVal (_aeeeb );
if !_gacf {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aeeeb );return nil ,_fe .ErrTypeError ;
};_edga :=_aee .CharCode (_aecd );_aeeeb =_gcaee .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _aeeeb !=nil {_gdefe .Resources =_aeeeb ;};_aeeeb =_gcaee .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _aeeeb ==nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_aeeeb );
return nil ,_fe .ErrNotSupported ;};_gdefe .CharProcs =_aeeeb ;_aeeeb =_gcaee .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _aeeeb ==nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_aeeeb );
return nil ,_fe .ErrNotSupported ;};_gdefe .FontMatrix =_aeeeb ;_gdefe ._efac =make (map[_aee .CharCode ]float64 );_aeeeb =_gcaee .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aeeeb !=nil {_gdefe .Widths =_aeeeb ;_gbacd ,_bgdg :=_fe .GetArray (_aeeeb );
if !_bgdg {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aeeeb );return nil ,_fe .ErrTypeError ;
};_adagb ,_gcad :=_gbacd .ToFloat64Array ();if _gcad !=nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gcad ;};if len (_adagb )!=int (_edga -_eedeb +1){_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_edga -_eedeb +1,len (_adagb ));
return nil ,_fe .ErrRangeError ;};_dcbb ,_bgdg :=_fe .GetArray (_gdefe .FontMatrix );if !_bgdg {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dcbb );
return nil ,_gcad ;};_fgcc ,_gcad :=_dcbb .ToFloat64Array ();if _gcad !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gcad ;};_ddeeg :=_cd .NewMatrix (_fgcc [0],_fgcc [1],_fgcc [2],_fgcc [3],_fgcc [4],_fgcc [5]);for _egffc ,_ggfeg :=range _adagb {_acbb ,_ :=_ddeeg .Transform (_ggfeg ,_ggfeg );_gdefe ._efac [_eedeb +_aee .CharCode (_egffc )]=_acbb ;};};_gdefe .Encoding =_fe .TraceToDirectObject (_gcaee .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_abdgd :=_gcaee .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _abdgd !=nil {_gdefe ._gcgbd =_fe .TraceToDirectObject (_abdgd );_daab ,_fgacd :=_bgee (_gdefe ._gcgbd ,&_gdefe .fontCommon );if _fgacd !=nil {return nil ,_fgacd ;};_gdefe ._ggee =_daab ;
};if _gfcab :=_gdefe ._ggee ;_gfcab !=nil {_gdefe ._gbaede =_aee .NewCMapEncoder ("",nil ,_gfcab );}else {_gdefe ._gbaede =_aee .NewPdfDocEncoder ();};return _gdefe ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_agcc *PdfWriter )SetRotation (rotate int64 )error {_ccgc ,_cccee :=_fe .GetDict (_agcc ._dgdfc );if !_cccee {return ErrTypeCheck ;};_ccgc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fe .MakeInteger (rotate ));return nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_decae *LTV )generateVRIKey (_ccedd *PdfSignature )(string ,error ){_acda ,_gaafe :=_cccgcf (_ccedd .Contents .Bytes ());if _gaafe !=nil {return "",_gaafe ;};return _ca .ToUpper (_e .EncodeToString (_acda )),nil ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_fcdc *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_eecg *PdfReader )newPdfAnnotationWatermarkFromDict (_gfb *_fe .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cgf :=PdfAnnotationWatermark {};_cgf .FixedPrint =_gfb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_cgf ,nil ;};func (_gaaffe *PdfWriter )writeDocumentVersion (){if _gaaffe ._ccbff {_gaaffe .writeString ("\u000a");}else {_gaaffe .writeString (_a .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gaaffe ._gbge .Major ,_gaaffe ._gbge .Minor ));
_gaaffe .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fe .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fe .PdfObject ;A _fe .PdfObject ;SE _fe .PdfObject ;C _fe .PdfObject ;F _fe .PdfObject ;
_agcb *_fe .PdfIndirectObject ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_befce *PdfPage )GetContainingPdfObject ()_fe .PdfObject {return _befce ._eacfe };func _aaef (_gcac _fe .PdfObject )(*PdfColorspaceCalGray ,error ){_bcbgf :=NewPdfColorspaceCalGray ();if _aafb ,_ddad :=_gcac .(*_fe .PdfIndirectObject );_ddad {_bcbgf ._aaab =_aafb ;
};_gcac =_fe .TraceToDirectObject (_gcac );_dbfg ,_dgda :=_gcac .(*_fe .PdfObjectArray );if !_dgda {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbfg .Len ()!=2{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_gcac =_fe .TraceToDirectObject (_dbfg .Get (0));_daba ,_dgda :=_gcac .(*_fe .PdfObjectName );if !_dgda {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_daba !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_a .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gcac =_fe .TraceToDirectObject (_dbfg .Get (1));
_dcbgd ,_dgda :=_gcac .(*_fe .PdfObjectDictionary );if !_dgda {return nil ,_a .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_gcac =_dcbgd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gcac =_fe .TraceToDirectObject (_gcac );_gddf ,_dgda :=_gcac .(*_fe .PdfObjectArray );if !_dgda {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _gddf .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_acad ,_bdfc :=_gddf .GetAsFloat64Slice ();
if _bdfc !=nil {return nil ,_bdfc ;};_bcbgf .WhitePoint =_acad ;_gcac =_dcbgd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gcac !=nil {_gcac =_fe .TraceToDirectObject (_gcac );_fcff ,_daff :=_gcac .(*_fe .PdfObjectArray );if !_daff {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _fcff .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_babd ,_dfag :=_fcff .GetAsFloat64Slice ();
if _dfag !=nil {return nil ,_dfag ;};_bcbgf .BlackPoint =_babd ;};_gcac =_dcbgd .Get ("\u0047\u0061\u006dm\u0061");if _gcac !=nil {_gcac =_fe .TraceToDirectObject (_gcac );_aece ,_cegcd :=_fe .GetNumberAsFloat (_gcac );if _cegcd !=nil {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_bcbgf .Gamma =_aece ;};return _bcbgf ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ecafd *PdfRectangle )Normalize (){if _ecafd .Llx > _ecafd .Urx {_ecafd .Llx ,_ecafd .Urx =_ecafd .Urx ,_ecafd .Llx ;};if _ecafd .Lly > _ecafd .Ury {_ecafd .Lly ,_ecafd .Ury =_ecafd .Ury ,_ecafd .Lly ;};};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_bageb *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_cgbc *PdfWriter )seekByName (_bdbaf _fe .PdfObject ,_abbddf []string ,_cegcbe string )([]_fe .PdfObject ,error ){_beag .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bdbaf );
var _ggfga []_fe .PdfObject ;if _bbbcab ,_bbafg :=_bdbaf .(*_fe .PdfIndirectObject );_bbafg {return _cgbc .seekByName (_bbbcab .PdfObject ,_abbddf ,_cegcbe );};if _ceacae ,_bddef :=_bdbaf .(*_fe .PdfObjectStream );_bddef {return _cgbc .seekByName (_ceacae .PdfObjectDictionary ,_abbddf ,_cegcbe );
};if _eeggb ,_cbdf :=_bdbaf .(*_fe .PdfObjectDictionary );_cbdf {_beag .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bbafgg :=range _eeggb .Keys (){_dcfce :=_eeggb .Get (_bbafgg );if string (_bbafgg )==_cegcbe {_ggfga =append (_ggfga ,_dcfce );};for _ ,_ggfdgc :=range _abbddf {if string (_bbafgg )==_ggfdgc {_beag .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_ggfdgc );
_bccdc ,_dedgg :=_cgbc .seekByName (_dcfce ,_abbddf ,_cegcbe );if _dedgg !=nil {return _ggfga ,_dedgg ;};_ggfga =append (_ggfga ,_bccdc ...);break ;};};};return _ggfga ,nil ;};return _ggfga ,nil ;};func (_bcabe *PdfReader )loadAnnotations (_eefa _fe .PdfObject )([]*PdfAnnotation ,error ){_faccg ,_dbafe :=_fe .GetArray (_eefa );
if !_dbafe {return nil ,_a .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _cbcc []*PdfAnnotation ;for _ ,_bcbgb :=range _faccg .Elements (){_bcbgb =_fe .ResolveReference (_bcbgb );
if _ ,_fccf :=_bcbgb .(*_fe .PdfObjectNull );_fccf {continue ;};_ccceb ,_begcg :=_bcbgb .(*_fe .PdfObjectDictionary );_bceb ,_afbbg :=_bcbgb .(*_fe .PdfIndirectObject );if _begcg {_bceb =&_fe .PdfIndirectObject {};_bceb .PdfObject =_ccceb ;}else {if !_afbbg {return nil ,_a .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_gcace ,_cccgc :=_bcabe .newPdfAnnotationFromIndirectObject (_bceb );if _cccgc !=nil {return nil ,_cccgc ;};switch _ebfg :=_gcace .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gdff :=range _bcabe .AcroForm .AllFields (){if _gdff ._beebc ==_ebfg .Parent {_ebfg ._fgdb =_gdff ;
break ;};};};if _gcace !=nil {_cbcc =append (_cbcc ,_gcace );};};return _cbcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cde *PdfAnnotationHighlight )ToPdfObject ()_fe .PdfObject {_cde .PdfAnnotation .ToPdfObject ();_eefe :=_cde ._egb ;_aagd :=_eefe .PdfObject .(*_fe .PdfObjectDictionary );_cde .PdfAnnotationMarkup .appendToPdfDictionary (_aagd );_aagd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_aagd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cde .QuadPoints );return _eefe ;};func (_fdbab *PdfWriter )writeOutputIntents ()error {if len (_fdbab ._cddaa )==0{return nil ;};_ecaacb :=make ([]_fe .PdfObject ,len (_fdbab ._cddaa ));
for _aebaef ,_gcgce :=range _fdbab ._cddaa {_ffed :=_gcgce .ToPdfObject ();_ecaacb [_aebaef ]=_fe .MakeIndirectObject (_ffed );};_gegaa :=_fe .MakeIndirectObject (_fe .MakeArray (_ecaacb ...));_fdbab ._gagg .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_gegaa );
if _dgecg :=_fdbab .addObjects (_gegaa );_dgecg !=nil {return _dgecg ;};return nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_aecb *LTV )EnableChain (chain []*_ee .Certificate )error {return _aecb .enable (nil ,chain ,"")};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_dddad *PdfReader )GetOutlines ()(*Outline ,error ){if _dddad ==nil {return nil ,_cg .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fbae :=_dddad .GetOutlineTree ();if _fbae ==nil {return nil ,_cg .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _adabg func (_ecdgf *PdfOutlineTreeNode ,_ffcg *[]*OutlineItem );_adabg =func (_eecb *PdfOutlineTreeNode ,_aebab *[]*OutlineItem ){if _eecb ==nil {return ;};if _eecb ._affe ==nil {_beag .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _gdedc *OutlineItem ;if _bdecd ,_cccgf :=_eecb ._affe .(*PdfOutlineItem );_cccgf {_dceba :=_bdecd .Dest ;if (_dceba ==nil ||_fe .IsNullObject (_dceba ))&&_bdecd .A !=nil {if _dfacg ,_agffe :=_fe .GetDict (_bdecd .A );_agffe {_dceba ,_ =_fe .GetArray (_dfacg .Get ("\u0044"));
};};var _ecbea OutlineDest ;if _dceba !=nil &&!_fe .IsNullObject (_dceba ){if _ecfdg ,_gbbf :=_caag (_dceba ,_dddad );_gbbf ==nil {_ecbea =*_ecfdg ;}else {_beag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_dceba ,_gbbf );
};};_gdedc =NewOutlineItem (_bdecd .Title .Decoded (),_ecbea );*_aebab =append (*_aebab ,_gdedc );if _bdecd .Next !=nil {_adabg (_bdecd .Next ,_aebab );};};if _eecb .First !=nil {if _gdedc !=nil {_aebab =&_gdedc .Entries ;};_adabg (_eecb .First ,_aebab );
};};_eeaab :=NewOutline ();_adabg (_fbae ,&_eeaab .Entries );return _eeaab ,nil ;};func _cdgea ()string {_aagdg .Lock ();defer _aagdg .Unlock ();return _beggge };

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fe .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fe .PdfObject ;Contents _fe .PdfObject ;
Rotate *int64 ;Group _fe .PdfObject ;Thumb _fe .PdfObject ;B _fe .PdfObject ;Dur _fe .PdfObject ;Trans _fe .PdfObject ;AA _fe .PdfObject ;Metadata _fe .PdfObject ;PieceInfo _fe .PdfObject ;StructParents _fe .PdfObject ;ID _fe .PdfObject ;PZ _fe .PdfObject ;
SeparationInfo _fe .PdfObject ;Tabs _fe .PdfObject ;TemplateInstantiated _fe .PdfObject ;PresSteps _fe .PdfObject ;UserUnit _fe .PdfObject ;VP _fe .PdfObject ;Annots _fe .PdfObject ;_dcbbc []*PdfAnnotation ;_dcfdb *_fe .PdfObjectDictionary ;_eacfe *_fe .PdfIndirectObject ;
_bcfb *PdfReader ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cdcd *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_cdcd .Base .GetNumComponents ();_cbfba :=int (vals [0])*N ;
if _cbfba < 0||(_cbfba +N -1)>=len (_cdcd ._cfbf ){return nil ,_cg .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_cgfe :=_cdcd ._cfbf [_cbfba :_cbfba +N ];var _agag []float64 ;for _ ,_fdbg :=range _cgfe {_agag =append (_agag ,float64 (_fdbg )/255.0);
};_daac ,_fafb :=_cdcd .Base .ColorFromFloats (_agag );if _fafb !=nil {return nil ,_fafb ;};return _daac ,nil ;};func (_ggfa *PdfReader )newPdfAnnotationCaretFromDict (_dcdb *_fe .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ggfd :=PdfAnnotationCaret {};
_ageaa ,_gdcc :=_ggfa .newPdfAnnotationMarkupFromDict (_dcdb );if _gdcc !=nil {return nil ,_gdcc ;};_ggfd .PdfAnnotationMarkup =_ageaa ;_ggfd .RD =_dcdb .Get ("\u0052\u0044");_ggfd .Sy =_dcdb .Get ("\u0053\u0079");return &_ggfd ,nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fe .PdfObject ;AN _fe .PdfObject ;OP _fe .PdfObject ;JS _fe .PdfObject ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_fg .CharMetrics ;

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_fdbe :=NewPdfAnnotation ();_ebbd :=&PdfAnnotationSquare {};_ebbd .PdfAnnotation =_fdbe ;_ebbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdbe .SetContext (_ebbd );return _ebbd ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_aebba ,_abgdef :=_cgbda (basefont );if _abgdef !=nil {return nil ,_abgdef ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_aebba ._cgefeb =_aee .NewWinAnsiEncoder ();};return &PdfFont {_cdgee :&_aebba },nil ;
};func _bgee (_faggg _fe .PdfObject ,_fegdg *fontCommon )(*_bf .CMap ,error ){_degg ,_gcda :=_fe .GetStream (_faggg );if !_gcda {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_faggg );
return nil ,_fe .ErrTypeError ;};_dbgbg ,_dbgg :=_fe .DecodeStream (_degg );if _dbgg !=nil {return nil ,_dbgg ;};_dgdad ,_dbgg :=_bf .LoadCmapFromData (_dbgbg ,!_fegdg .isCIDFont ());if _dbgg !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_degg .ObjectNumber ,_dbgg );
};return _dgdad ,_dbgg ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _fe .PdfObject )(*PdfInfo ,error ){var _adda PdfInfo ;_eggf ,_ffce :=obj .(*_fe .PdfObjectDictionary );if !_ffce {return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_dgadf :=range _eggf .Keys (){switch _dgadf {case "\u0054\u0069\u0074l\u0065":_adda .Title ,_ =_fe .GetString (_eggf .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_adda .Author ,_ =_fe .GetString (_eggf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_adda .Subject ,_ =_fe .GetString (_eggf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_adda .Keywords ,_ =_fe .GetString (_eggf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_adda .Creator ,_ =_fe .GetString (_eggf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_adda .Producer ,_ =_fe .GetString (_eggf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_adda .Trapped ,_ =_fe .GetName (_eggf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _eeca ,_dbdg :=_fe .GetString (_eggf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_dbdg &&_eeca .String ()!=""{_aadd ,_dfaa :=NewPdfDate (_eeca .String ());if _dfaa !=nil {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_dfaa );
};_adda .CreationDate =&_aadd ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _geaf ,_gefd :=_fe .GetString (_eggf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_gefd &&_geaf .String ()!=""{_bbfa ,_dbffc :=NewPdfDate (_geaf .String ());if _dbffc !=nil {return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_dbffc );
};_adda .ModifiedDate =&_bbfa ;};default:_ebad ,_ :=_fe .GetString (_eggf .Get (_dgadf ));if _adda ._fefc ==nil {_adda ._fefc =_fe .MakeDict ();};_adda ._fefc .Set (_dgadf ,_ebad );};};return &_adda ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_acaff *PdfFont )CharcodesToStrings (charcodes []_aee .CharCode )([]string ,int ,int ){_afbee :=_acaff .baseFields ();_fefca :=make ([]string ,0,len (charcodes ));_eedf :=0;_bdeg :=_acaff .Encoder ();if _bdeg !=nil {switch _bbge :=_bdeg .(type ){case _aee .SimpleEncoder :_abcg :=_bbge .BaseName ();
if _ ,_dcgab :=_fabbf [_abcg ];_dcgab {for _ ,_dacbe :=range charcodes {if _ceddf ,_egea :=_bdeg .CharcodeToRune (_dacbe );_egea {_fefca =append (_fefca ,string (_ceddf ));}else {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dacbe ,charcodes ,_afbee .isCIDFont (),_acaff ,_bdeg );
_eedf ++;_fefca =append (_fefca ,_bf .MissingCodeString );};};return _fefca ,len (_fefca ),_eedf ;};};};for _ ,_cgbgbg :=range charcodes {if _afbee ._ggee !=nil {if _gbaed ,_fgfgg :=_afbee ._ggee .CharcodeToUnicode (_bf .CharCode (_cgbgbg ));_fgfgg {_fefca =append (_fefca ,_gbaed );
continue ;};};if _bdeg !=nil {if _bcca ,_edef :=_bdeg .CharcodeToRune (_cgbgbg );_edef {_fefca =append (_fefca ,string (_bcca ));continue ;};};_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cgbgbg ,charcodes ,_afbee .isCIDFont (),_acaff ,_bdeg );
_eedf ++;_fefca =append (_fefca ,_bf .MissingCodeString );};if _eedf !=0{_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_eedf ,_acaff );
};return _fefca ,len (_fefca ),_eedf ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_dfab *pdfCIDFontType2 )ToPdfObject ()_fe .PdfObject {if _dfab ._gaaba ==nil {_dfab ._gaaba =&_fe .PdfIndirectObject {};};_cdgca :=_dfab .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_dfab ._gaaba .PdfObject =_cdgca ;if _dfab .CIDSystemInfo !=nil {_cdgca .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_dfab .CIDSystemInfo );};if _dfab .DW !=nil {_cdgca .Set ("\u0044\u0057",_dfab .DW );};if _dfab .DW2 !=nil {_cdgca .Set ("\u0044\u0057\u0032",_dfab .DW2 );
};if _dfab .W !=nil {_cdgca .Set ("\u0057",_dfab .W );};if _dfab .W2 !=nil {_cdgca .Set ("\u0057\u0032",_dfab .W2 );};if _dfab .CIDToGIDMap !=nil {_cdgca .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_dfab .CIDToGIDMap );};return _dfab ._gaaba ;
};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_eegda *Outline )Insert (index uint ,item *OutlineItem ){_faagae :=uint (len (_eegda .Entries ));if index > _faagae {index =_faagae ;};_eegda .Entries =append (_eegda .Entries [:index ],append ([]*OutlineItem {item },_eegda .Entries [index :]...)...);
};func (_dcfe *PdfReader )newPdfAnnotationPolyLineFromDict (_eeae *_fe .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_abbb :=PdfAnnotationPolyLine {};_beeb ,_egedg :=_dcfe .newPdfAnnotationMarkupFromDict (_eeae );if _egedg !=nil {return nil ,_egedg ;
};_abbb .PdfAnnotationMarkup =_beeb ;_abbb .Vertices =_eeae .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_abbb .LE =_eeae .Get ("\u004c\u0045");_abbb .BS =_eeae .Get ("\u0042\u0053");_abbb .IC =_eeae .Get ("\u0049\u0043");_abbb .BE =_eeae .Get ("\u0042\u0045");
_abbb .IT =_eeae .Get ("\u0049\u0054");_abbb .Measure =_eeae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_abbb ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_bedcg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_bbga :=&PdfColorPattern {};_acbgc ,_bbfe :=objects [len (objects )-1].(*_fe .PdfObjectName );if !_bbfe {_beag .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_bbga .PatternName =*_acbgc ;if len (objects )> 1{_cecef :=objects [0:len (objects )-1];if _bedcg .UnderlyingCS ==nil {_beag .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_aedc ,_ebcd :=_bedcg .UnderlyingCS .ColorFromPdfObjects (_cecef );if _ebcd !=nil {_beag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_ebcd );
return nil ,_ebcd ;};_bbga .Color =_aedc ;};return _bbga ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fe .PdfObject ;FS _fe .PdfObject ;F _fe .PdfObject ;UF _fe .PdfObject ;DOS _fe .PdfObject ;Mac _fe .PdfObject ;Unix _fe .PdfObject ;ID _fe .PdfObject ;V _fe .PdfObject ;EF _fe .PdfObject ;RF _fe .PdfObject ;Desc _fe .PdfObject ;
CI _fe .PdfObject ;_gcbg _fe .PdfObject ;};func _fabd (_befbg []*_fe .PdfObjectStream )*_fe .PdfObjectArray {if len (_befbg )==0{return nil ;};_gfeb :=make ([]_fe .PdfObject ,0,len (_befbg ));for _ ,_ffggd :=range _befbg {_gfeb =append (_gfeb ,_ffggd );
};return _fe .MakeArray (_gfeb ...);};func (_bdgdc *PdfWriter )writeObject (_beff int ,_ddfgf _fe .PdfObject ){_beag .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_beff );if _gabc ,_ggcbb :=_ddfgf .(*_fe .PdfIndirectObject );
_ggcbb {_bdgdc ._cabdb [_beff ]=crossReference {Type :1,Offset :_bdgdc ._bgefgf ,Generation :_gabc .GenerationNumber };_fgfbe :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_beff );if _faebf ,_aebag :=_gabc .PdfObject .(*pdfSignDictionary );
_aebag {_faebf ._cedbf =_bdgdc ._bgefgf +int64 (len (_fgfbe ));};if _gabc .PdfObject ==nil {_beag .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_gabc .PdfObject =_fe .MakeNull ();};_fgfbe +=_gabc .PdfObject .WriteString ();_fgfbe +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bdgdc .writeString (_fgfbe );return ;};if _fcfee ,_aecbb :=_ddfgf .(*_fe .PdfObjectStream );_aecbb {_bdgdc ._cabdb [_beff ]=crossReference {Type :1,Offset :_bdgdc ._bgefgf ,Generation :_fcfee .GenerationNumber };
_eabef :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_beff );_eabef +=_fcfee .PdfObjectDictionary .WriteString ();_eabef +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdgdc .writeString (_eabef );_bdgdc .writeBytes (_fcfee .Stream );
_bdgdc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _edcfad ,_fbgad :=_ddfgf .(*_fe .PdfObjectStreams );_fbgad {_bdgdc ._cabdb [_beff ]=crossReference {Type :1,Offset :_bdgdc ._bgefgf ,Generation :_edcfad .GenerationNumber };
_dcgac :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_beff );var _gbcbd []string ;var _eefae string ;var _eggbdf int64 ;for _baeef ,_defad :=range _edcfad .Elements (){_ceadg ,_baed :=_defad .(*_fe .PdfIndirectObject );if !_baed {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_beff ,_defad );
continue ;};_dgdab :=_ceadg .PdfObject .WriteString ()+"\u0020";_eefae =_eefae +_dgdab ;_gbcbd =append (_gbcbd ,_a .Sprintf ("\u0025\u0064\u0020%\u0064",_ceadg .ObjectNumber ,_eggbdf ));_bdgdc ._cabdb [int (_ceadg .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_beff ,Index :_baeef };
_eggbdf =_eggbdf +int64 (len ([]byte (_dgdab )));};_aageg :=_ca .Join (_gbcbd ,"\u0020")+"\u0020";_gffcc :=_fe .NewFlateEncoder ();_aacdg :=_gffcc .MakeStreamDict ();_aacdg .Set (_fe .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fe .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_eadefg :=int64 (_edcfad .Len ());_aacdg .Set (_fe .PdfObjectName ("\u004e"),_fe .MakeInteger (_eadefg ));_eagdb :=int64 (len (_aageg ));_aacdg .Set (_fe .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fe .MakeInteger (_eagdb ));_bbaggc ,_ :=_gffcc .EncodeBytes ([]byte (_aageg +_eefae ));
_bgdcf :=int64 (len (_bbaggc ));_aacdg .Set (_fe .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fe .MakeInteger (_bgdcf ));_dcgac +=_aacdg .WriteString ();_dcgac +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdgdc .writeString (_dcgac );
_bdgdc .writeBytes (_bbaggc );_bdgdc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bdgdc .writeString (_ddfgf .WriteString ());};

// StdFontName represents name of a standard font.
type StdFontName =_fg .StdFontName ;

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_bfbd *PdfField )GetContainingPdfObject ()_fe .PdfObject {return _bfbd ._beebc };

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dagc *PdfOutlineTreeNode )GetContext ()PdfModel {if _dccff ,_gdeef :=_dagc ._affe .(*PdfOutline );_gdeef {return _dccff ;};if _degc ,_bdeea :=_dagc ._affe .(*PdfOutlineItem );_bdeea {return _degc ;};_beag .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_dfa :=NewPdfAnnotation ();_faab :=&PdfAnnotationWidget {};_faab .PdfAnnotation =_dfa ;_dfa .SetContext (_faab );return _faab ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fe .PdfObject ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fe .PdfObjectDictionary )(*PdfPageResources ,error ){_gdefd :=NewPdfPageResources ();if _cfdb :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cfdb !=nil {_gdefd .ExtGState =_cfdb ;};if _faefc :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_faefc !=nil &&!_fe .IsNullObject (_faefc ){_gdefd .ColorSpace =_faefc ;};if _gecac :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gecac !=nil {_gdefd .Pattern =_gecac ;};if _acgdf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_acgdf !=nil {_gdefd .Shading =_acgdf ;
};if _abab :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_abab !=nil {_gdefd .XObject =_abab ;};if _aeabf :=_fe .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_aeabf !=nil {_gdefd .Font =_aeabf ;};if _aeedg :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_aeedg !=nil {_gdefd .ProcSet =_aeedg ;};if _fbaeg :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fbaeg !=nil {_gdefd .Properties =_fbaeg ;};return _gdefd ,nil ;};

// Encoder returns the font's text encoder.
func (_cbba pdfCIDFontType2 )Encoder ()_aee .TextEncoder {return _cbba ._abccb };

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fe .PdfObjectString ;Q *_fe .PdfObjectInteger ;DS *_fe .PdfObjectString ;RV _fe .PdfObject ;MaxLen *_fe .PdfObjectInteger ;};

// GetOutlineTree returns the outline tree.
func (_ddgdab *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _ddgdab ._agaga };

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbdb *PdfColorspaceSpecialSeparation )ToPdfObject ()_fe .PdfObject {_bcdg :=_fe .MakeArray (_fe .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_bcdg .Append (_cbdb .ColorantName );_bcdg .Append (_cbdb .AlternateSpace .ToPdfObject ());
_bcdg .Append (_cbdb .TintTransform .ToPdfObject ());if _cbdb ._fdeb !=nil {_cbdb ._fdeb .PdfObject =_bcdg ;return _cbdb ._fdeb ;};return _bcdg ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_bebac *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bebac .AlternateSpace ==nil {return nil ,_cg .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bebac .AlternateSpace .ColorToRGB (color );};func (_bedee *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_cc :=NewPdfAction ();_fec :=&PdfActionRendition {};_fec .PdfAction =_cc ;_cc .SetContext (_fec );return _fec ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fe .PdfObjectArray ;Domain *_fe .PdfObjectArray ;Function []PdfFunction ;Extend *_fe .PdfObjectArray ;};

// HasXObjectByName checks if has XObject resource by name.
func (_bbcbe *PdfPage )HasXObjectByName (name _fe .PdfObjectName )bool {_gaec ,_eggde :=_bbcbe .Resources .XObject .(*_fe .PdfObjectDictionary );if !_eggde {return false ;};if _gacgf :=_gaec .Get (name );_gacgf !=nil {return true ;};return false ;};func (_eabeg *Image )samplesTrimPadding (_baef []uint32 )[]uint32 {_dbfc :=_eabeg .ColorComponents *int (_eabeg .Width )*int (_eabeg .Height );
if len (_baef )==_dbfc {return _baef ;};_aadc :=make ([]uint32 ,_dbfc );_abbdc :=int (_eabeg .Width )*_eabeg .ColorComponents ;var _gage ,_eagfa ,_afea ,_gfbae int ;_gcbgb :=_gege .BytesPerLine (int (_eabeg .Width ),int (_eabeg .BitsPerComponent ),_eabeg .ColorComponents );
for _gage =0;_gage < int (_eabeg .Height );_gage ++{_eagfa =_gage *int (_eabeg .Width );_afea =_gage *_gcbgb ;for _gfbae =0;_gfbae < _abbdc ;_gfbae ++{_aadc [_eagfa +_gfbae ]=_baef [_afea +_gfbae ];};};return _aadc ;};func (_eabd *PdfReader )newPdfAnnotationInkFromDict (_dab *_fe .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_aef :=PdfAnnotationInk {};
_aage ,_fage :=_eabd .newPdfAnnotationMarkupFromDict (_dab );if _fage !=nil {return nil ,_fage ;};_aef .PdfAnnotationMarkup =_aage ;_aef .InkList =_dab .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_aef .BS =_dab .Get ("\u0042\u0053");return &_aef ,nil ;
};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bac :=NewPdfAnnotation ();_eede :=&PdfAnnotationUnderline {};_eede .PdfAnnotation =_bac ;_eede .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bac .SetContext (_eede );return _eede ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ggbac *PdfColorspaceDeviceGray )ToPdfObject ()_fe .PdfObject {return _fe .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cgbgb *PdfField )SetContext (ctx PdfModel ){_cgbgb ._bbdf =ctx };

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_befedg *PdfWriter )ApplyStandard (optimizer StandardApplier ){_befedg ._aadcab =optimizer };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_acbe :=NewPdfAnnotation ();_ffc :=&PdfAnnotationRichMedia {};_ffc .PdfAnnotation =_acbe ;_acbe .SetContext (_ffc );return _ffc ;};func _feba (_abg _fe .PdfObject )(*PdfFilespec ,error ){if _abg ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_abg );};

// GetNumComponents returns the number of color components (1 for Separation).
func (_bddg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the pattern.
func (_cbdeg *PdfPattern )ToPdfObject ()_fe .PdfObject {_dfbfc :=_cbdeg .getDict ();_dfbfc .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dfbfc .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (_cbdeg .PatternType ));
return _cbdeg ._deebb ;};func _feage (_fdgd _fe .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_beag .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_fdgd .String (),_fdgd );
_egbe :=NewPdfColorspaceSpecialPattern ();if _aeggc ,_aeaa :=_fdgd .(*_fe .PdfIndirectObject );_aeaa {_egbe ._caga =_aeggc ;};_fdgd =_fe .TraceToDirectObject (_fdgd );if _fcca ,_bceg :=_fdgd .(*_fe .PdfObjectName );_bceg {if *_fcca !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _egbe ,nil ;};_acfg ,_aeeb :=_fdgd .(*_fe .PdfObjectArray );if !_aeeb {_beag .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_fdgd );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _acfg .Len ()!=1&&_acfg .Len ()!=2{_beag .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_acfg );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_fdgd =_acfg .Get (0);if _bgadd ,_eddgf :=_fdgd .(*_fe .PdfObjectName );_eddgf {if *_bgadd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_beag .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bgadd );
return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _acfg .Len ()> 1{_fdgd =_acfg .Get (1);_fdgd =_fe .TraceToDirectObject (_fdgd );_feedb ,_fffd :=NewPdfColorspaceFromPdfObject (_fdgd );if _fffd !=nil {return nil ,_fffd ;
};_egbe .UnderlyingCS =_feedb ;};_beag .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_egbe .UnderlyingCS );
return _egbe ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fe .PdfObject ;Flags _fe .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_facdd *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddca :=vals [0];_bgacd :=[]float64 {_ddca };_ebgc ,_ceggg :=_facdd .TintTransform .Evaluate (_bgacd );
if _ceggg !=nil {_beag .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_ceggg );_beag .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_facdd .TintTransform );
return nil ,_ceggg ;};_beag .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_ebgc ,_facdd .AlternateSpace );
_bbcdb ,_ceggg :=_facdd .AlternateSpace .ColorFromFloats (_ebgc );if _ceggg !=nil {_beag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_ceggg );
return nil ,_ceggg ;};return _bbcdb ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_baeb :=&PdfColorspaceCalGray {};_baeb .BlackPoint =[]float64 {0.0,0.0,0.0};_baeb .Gamma =1;return _baeb ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_gbgad *Image )SetSamples (samples []uint32 ){if _gbgad .BitsPerComponent < 8{samples =_gbgad .samplesAddPadding (samples );};_bgfa :=_fad .ResampleUint32 (samples ,int (_gbgad .BitsPerComponent ),8);_afegc :=make ([]byte ,len (_bgfa ));for _fcda ,_ceac :=range _bgfa {_afegc [_fcda ]=byte (_ceac );
};_gbgad .Data =_afegc ;};func (_dfgdf *PdfPage )getParentResources ()(*PdfPageResources ,error ){_gabdc :=_dfgdf .Parent ;for _gabdc !=nil {_fbaf ,_abbca :=_fe .GetDict (_gabdc );if !_abbca {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _aabce :=_fbaf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_aabce !=nil {_edcff ,_bgcga :=_fe .GetDict (_aabce );
if !_bgcga {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bgccg ,_eegc :=NewPdfPageResourcesFromDict (_edcff );if _eegc !=nil {return nil ,_eegc ;};return _bgccg ,nil ;
};_gabdc =_fbaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_degdb *Image )SetAlpha (alpha []byte ){_degdb ._fdcdb =alpha };func (_gde *PdfReader )newPdfActionResetFormFromDict (_gfea *_fe .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gfea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gfea .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ecf .ReadSeeker )(*PdfReader ,error ){const _accaa ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _eggbd (rs ,&ReaderOpts {LazyLoad :true },false ,_accaa );
};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dbbfe *DSS )ToPdfObject ()_fe .PdfObject {_bgba :=_dbbfe ._cedcg .PdfObject .(*_fe .PdfObjectDictionary );_bgba .Clear ();_edeg :=_fe .MakeDict ();for _dfbe ,_aeed :=range _dbbfe .VRI {_edeg .Set (*_fe .MakeName (_dfbe ),_aeed .ToPdfObject ());};
_bgba .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_fabd (_dbbfe .Certs ));_bgba .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_fabd (_dbbfe .OCSPs ));_bgba .SetIfNotNil ("\u0043\u0052\u004c\u0073",_fabd (_dbbfe .CRLs ));_bgba .Set ("\u0056\u0052\u0049",_edeg );
return _dbbfe ._cedcg ;};func (_ccc *PdfReader )newPdfActionGotoFromDict (_cdb *_fe .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_cdb .Get ("\u0044")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebaed *PdfAnnotationSound )ToPdfObject ()_fe .PdfObject {_ebaed .PdfAnnotation .ToPdfObject ();_eddg :=_ebaed ._egb ;_cfgb :=_eddg .PdfObject .(*_fe .PdfObjectDictionary );_ebaed .PdfAnnotationMarkup .appendToPdfDictionary (_cfgb );_cfgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u006f\u0075n\u0064"));
_cfgb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ebaed .Sound );_cfgb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebaed .Name );return _eddg ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cgcdc :=PdfPage {};_cgcdc ._dcfdb =_fe .MakeDict ();_cgcdc .Resources =NewPdfPageResources ();_dbgce :=_fe .PdfIndirectObject {};_dbgce .PdfObject =_cgcdc ._dcfdb ;_cgcdc ._eacfe =&_dbgce ;return &_cgcdc ;};type pdfFont interface{_fg .Font ;


// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fe .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func (_adgae *PdfWriter )writeAcroFormFields ()error {if _adgae ._dddac ==nil {return nil ;};_beag .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_afgda :=_adgae ._dddac .ToPdfObject ();_beag .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_afgda );_adgae ._gagg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_afgda );_gecdd :=_adgae .addObjects (_afgda );
if _gecdd !=nil {return _gecdd ;};return nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _aff .Permissions ;Algorithm EncryptionAlgorithm ;};

// Height returns the height of `rect`.
func (_bcabeb *PdfRectangle )Height ()float64 {return _fa .Abs (_bcabeb .Ury -_bcabeb .Lly )};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_acbce *PdfOutline )ToPdfObject ()_fe .PdfObject {_geaca :=_acbce ._bbcb ;_cgfdb :=_geaca .PdfObject .(*_fe .PdfObjectDictionary );_cgfdb .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _acbce .First !=nil {_cgfdb .Set ("\u0046\u0069\u0072s\u0074",_acbce .First .ToPdfObject ());
};if _acbce .Last !=nil {_cgfdb .Set ("\u004c\u0061\u0073\u0074",_acbce .Last .GetContext ().GetContainingPdfObject ());};if _acbce .Parent !=nil {_cgfdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_acbce .Parent .GetContext ().GetContainingPdfObject ());
};if _acbce .Count !=nil {_cgfdb .Set ("\u0043\u006f\u0075n\u0074",_fe .MakeInteger (*_acbce .Count ));};return _geaca ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bdgdg *PdfPageResources )GenerateXObjectName ()_fe .PdfObjectName {_caae :=1;for {_eaeaf :=_fe .MakeName (_a .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_caae ));if !_bdgdg .HasXObjectByName (*_eaeaf ){return *_eaeaf ;};_caae ++;};};var (_aagdg _ac .Mutex ;
_efcea ="";_daea _ae .Time ;_afged ="";_beggge ="";_daee _ae .Time ;_deaf ="";_cfcf ="";_fgccgg ="";);

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fe .PdfObject ;T _fe .PdfObject ;Operation _fe .PdfObject ;};

// GetContentStream returns the pattern cell's content stream
func (_cdcc *PdfTilingPattern )GetContentStream ()([]byte ,error ){_eccbb ,_ ,_aegda :=_cdcc .GetContentStreamWithEncoder ();return _eccbb ,_aegda ;};func (_efebf *DSS )addCRLs (_dfeee [][]byte )([]*_fe .PdfObjectStream ,error ){return _efebf .add (&_efebf .CRLs ,_efebf ._gedde ,_dfeee );
};

// B returns the value of the B component of the color.
func (_bcab *PdfColorLab )B ()float64 {return _bcab [2]};func (_gffcg *PdfWriter )writeString (_afgg string ){if _gffcg ._adage !=nil {return ;};_aeagec ,_dcgdb :=_gffcg ._babfg .WriteString (_afgg );_gffcg ._bgefgf +=int64 (_aeagec );_gffcg ._adage =_dcgdb ;
};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ecf .ReadSeeker )(*PdfReader ,error ){const _fdcgd ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _eggbd (rs ,&ReaderOpts {},false ,_fdcgd );};func (_gebbf SignatureValidationResult )String ()string {var _fgedb _bea .Buffer ;
_fgedb .WriteString (_a .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gebbf .Name ));if _gebbf .Date ._dedag > 0{_fgedb .WriteString (_a .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gebbf .Date .ToGoTime ().String ()));}else {_fgedb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gebbf .Reason )> 0{_fgedb .WriteString (_a .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gebbf .Reason ));}else {_fgedb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_gebbf .Location )> 0{_fgedb .WriteString (_a .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gebbf .Location ));}else {_fgedb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gebbf .ContactInfo )> 0{_fgedb .WriteString (_a .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gebbf .ContactInfo ));}else {_fgedb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_fgedb .WriteString (_a .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gebbf .Fields )));if _gebbf .IsSigned {_fgedb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_fgedb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _gebbf .IsVerified {_fgedb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_fgedb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _gebbf .IsTrusted {_fgedb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_fgedb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_gebbf .GeneralizedTime .IsZero (){_fgedb .WriteString (_a .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gebbf .GeneralizedTime .String ()));
};return _fgedb .String ();};

// ColorToRGB converts gray -> rgb for a single color component.
func (_fffb *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_acaf ,_gada :=color .(*PdfColorDeviceGray );if !_gada {_beag .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_acaf ),float64 (*_acaf ),float64 (*_acaf )),nil ;};

// Encoder returns the font's text encoder.
func (_dffg *pdfFontSimple )Encoder ()_aee .TextEncoder {if _dffg ._cgefeb !=nil {return _dffg ._cgefeb ;};if _dffg ._geadc !=nil {return _dffg ._geadc ;};_bcee ,_ :=_aee .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bcee ;};func _bdbc (_aaaa *_fe .PdfObjectDictionary )(*PdfFieldChoice ,error ){_bbeeb :=&PdfFieldChoice {};_bbeeb .Opt ,_ =_fe .GetArray (_aaaa .Get ("\u004f\u0070\u0074"));_bbeeb .TI ,_ =_fe .GetInt (_aaaa .Get ("\u0054\u0049"));_bbeeb .I ,_ =_fe .GetArray (_aaaa .Get ("\u0049"));
return _bbeeb ,nil ;};func (_adf *PdfReader )newPdfAnnotationPolygonFromDict (_fbdd *_fe .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fded :=PdfAnnotationPolygon {};_cbab ,_egd :=_adf .newPdfAnnotationMarkupFromDict (_fbdd );if _egd !=nil {return nil ,_egd ;
};_fded .PdfAnnotationMarkup =_cbab ;_fded .Vertices =_fbdd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fded .LE =_fbdd .Get ("\u004c\u0045");_fded .BS =_fbdd .Get ("\u0042\u0053");_fded .IC =_fbdd .Get ("\u0049\u0043");_fded .BE =_fbdd .Get ("\u0042\u0045");
_fded .IT =_fbdd .Get ("\u0049\u0054");_fded .Measure =_fbdd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fded ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_aagdg .Lock ();defer _aagdg .Unlock ();_fgccgg =title };

// ToPdfObject returns a stream object.
func (_bbdfb *XObjectImage )ToPdfObject ()_fe .PdfObject {_bddgb :=_bbdfb ._egeea ;_ecdb :=_bddgb .PdfObjectDictionary ;if _bbdfb .Filter !=nil {_ecdb =_bbdfb .Filter .MakeStreamDict ();_bddgb .PdfObjectDictionary =_ecdb ;};_ecdb .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ecdb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0049\u006d\u0061g\u0065"));_ecdb .Set ("\u0057\u0069\u0064t\u0068",_fe .MakeInteger (*(_bbdfb .Width )));_ecdb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fe .MakeInteger (*(_bbdfb .Height )));
if _bbdfb .BitsPerComponent !=nil {_ecdb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fe .MakeInteger (*(_bbdfb .BitsPerComponent )));};if _bbdfb .ColorSpace !=nil {_ecdb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bbdfb .ColorSpace .ToPdfObject ());
};_ecdb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_bbdfb .Intent );_ecdb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_bbdfb .ImageMask );_ecdb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_bbdfb .Mask );_bdfac :=_ecdb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _bbdfb .Decode ==nil &&_bdfac {_ecdb .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _bbdfb .Decode !=nil {_ecdb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bbdfb .Decode );};_ecdb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_bbdfb .Interpolate );
_ecdb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_bbdfb .Alternatives );_ecdb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_bbdfb .SMask );_ecdb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_bbdfb .SMaskInData );
_ecdb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bbdfb .Matte );_ecdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bbdfb .Name );_ecdb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bbdfb .StructParent );_ecdb .SetIfNotNil ("\u0049\u0044",_bbdfb .ID );
_ecdb .SetIfNotNil ("\u004f\u0050\u0049",_bbdfb .OPI );_ecdb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbdfb .Metadata );_ecdb .SetIfNotNil ("\u004f\u0043",_bbdfb .OC );_ecdb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_bbdfb .Stream ))));
_bddgb .Stream =_bbdfb .Stream ;return _bddgb ;};func _fbbd (_dbee *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_dddb ,_bbbg :=_fe .GetDict (_dbee .AP );if !_bbbg {return nil ,nil ,_cg .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _dddb ==nil {return nil ,nil ,nil ;};_fdaf ,_bbbg :=_fe .GetArray (_dbee .Rect );if !_bbbg ||_fdaf .Len ()!=4{return nil ,nil ,_cg .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ecfd ,_fadgd :=NewPdfRectangle (*_fdaf );
if _fadgd !=nil {return nil ,nil ,_fadgd ;};_faebd :=_fe .TraceToDirectObject (_dddb .Get ("\u004e"));switch _dcce :=_faebd .(type ){case *_fe .PdfObjectStream :_aebf :=_dcce ;_fgba ,_cbbc :=NewXObjectFormFromStream (_aebf );return _fgba ,_ecfd ,_cbbc ;
case *_fe .PdfObjectDictionary :_gebg :=_dcce ;_gaba ,_ffac :=_fe .GetName (_dbee .AS );if !_ffac {return nil ,nil ,nil ;};if _gebg .Get (*_gaba )==nil {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_adee ,_ffac :=_fe .GetStream (_gebg .Get (*_gaba ));if !_ffac {_beag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gaba );
return nil ,nil ,_cg .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fcfcf ,_cebe :=NewXObjectFormFromStream (_adee );return _fcfcf ,_ecfd ,_cebe ;};_beag .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_faebd );
return nil ,nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_efga *Image )ConvertToBinary ()error {if _efga .ColorComponents ==1&&_efga .BitsPerComponent ==1{return nil ;};_dece ,_dfcdgd :=_efga .ToGoImage ();if _dfcdgd !=nil {return _dfcdgd ;};_bgcc ,_dfcdgd :=_gege .MonochromeConverter .Convert (_dece );
if _dfcdgd !=nil {return _dfcdgd ;};_efga .Data =_bgcc .Base ().Data ;_efga ._fdcdb ,_dfcdgd =_gege .ScaleAlphaToMonochrome (_efga ._fdcdb ,int (_efga .Width ),int (_efga .Height ));if _dfcdgd !=nil {return _dfcdgd ;};_efga .BitsPerComponent =1;_efga .ColorComponents =1;
_efga ._abeag =nil ;return nil ;};var _bgdga =_f .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bed :=NewPdfAction ();_afc :=&PdfActionGoTo3DView {};_afc .PdfAction =_bed ;_bed .SetContext (_afc );return _afc ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fe .PdfObject ;};func _fdaca (_efddc *_fe .PdfObjectStream )(*PdfFunctionType4 ,error ){_cefg :=&PdfFunctionType4 {};_cefg ._dbffec =_efddc ;_bggee :=_efddc .PdfObjectDictionary ;_cfebg ,_gagfg :=_fe .TraceToDirectObject (_bggee .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );
if !_gagfg {_beag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cfebg .Len ()%2!=0{_beag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bggde ,_gbdg :=_cfebg .ToFloat64Array ();
if _gbdg !=nil {return nil ,_gbdg ;};_cefg .Domain =_bggde ;_cfebg ,_gagfg =_fe .TraceToDirectObject (_bggee .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );if _gagfg {if _cfebg .Len ()< 0||_cfebg .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bfgeg ,_ccfdf :=_cfebg .ToFloat64Array ();if _ccfdf !=nil {return nil ,_ccfdf ;};_cefg .Range =_bfgeg ;};_dgdec ,_gbdg :=_fe .DecodeStream (_efddc );if _gbdg !=nil {return nil ,_gbdg ;};_cefg ._efddb =_dgdec ;_adgc :=_ebf .NewPSParser (_dgdec );_efae ,_gbdg :=_adgc .Parse ();
if _gbdg !=nil {return nil ,_gbdg ;};_cefg .Program =_efae ;return _cefg ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_cbefe *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_dfdf *PdfSignature ,_bcebe Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_efcag *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fdebb *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_fgaad *PdfSignature ,_eefedgd Hasher )error ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gaff *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gaff .Base ==nil {return nil ,_cg .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gaff .Base .ColorToRGB (color );};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_fe .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_efefb *_fe .PdfIndirectObject ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_gafd *PdfWriter )SetOpenAction (dest _fe .PdfObject )error {if dest ==nil ||_fe .IsNullObject (dest ){return nil ;};_gafd ._gagg .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _gafd .addObjects (dest );};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_geb :=NewPdfAnnotation ();_gaab :=&PdfAnnotationWatermark {};_gaab .PdfAnnotation =_geb ;_geb .SetContext (_gaab );return _gaab ;};func _ebdb (_dfea []byte )bool {if len (_dfea )< 4{return true ;
};for _gadag :=range _dfea [:4]{_gacg :=rune (_gadag );if !_acc .Is (_acc .ASCII_Hex_Digit ,_gacg )&&!_acc .IsSpace (_gacg ){return true ;};};return false ;};

// ToPdfObject implements model.PdfModel interface.
func (_cbaee *PdfOutputIntent )ToPdfObject ()_fe .PdfObject {if _cbaee ._afgf ==nil {_cbaee ._afgf =_fe .MakeDict ();};_gccb :=_cbaee ._afgf ;if _cbaee .Type !=""{_gccb .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName (_cbaee .Type ));};_gccb .Set ("\u0053",_fe .MakeName (_cbaee .S .String ()));
if _cbaee .OutputCondition !=""{_gccb .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_fe .MakeString (_cbaee .OutputCondition ));};_gccb .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_fe .MakeString (_cbaee .OutputConditionIdentifier ));
_gccb .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_fe .MakeString (_cbaee .RegistryName ));if _cbaee .Info !=""{_gccb .Set ("\u0049\u006e\u0066\u006f",_fe .MakeString (_cbaee .Info ));};if len (_cbaee .DestOutputProfile )!=0{_ecad ,_gdgdb :=_fe .MakeStream (_cbaee .DestOutputProfile ,_fe .NewFlateEncoder ());
if _gdgdb !=nil {_beag .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gdgdb );
};_ecad .PdfObjectDictionary .Set ("\u004e",_fe .MakeInteger (int64 (_cbaee .ColorComponents )));_daca :=make ([]float64 ,_cbaee .ColorComponents *2);for _ebagf :=0;_ebagf < _cbaee .ColorComponents *2;_ebagf ++{_bbfb :=0.0;if _ebagf %2!=0{_bbfb =1.0;};
_daca [_ebagf ]=_bbfb ;};_ecad .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_fe .MakeArrayFromFloats (_daca ));_gccb .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_ecad );};return _gccb ;
};type pdfSignDictionary struct{*_fe .PdfObjectDictionary ;_fbgdc *SignatureHandler ;_badba *PdfSignature ;_cedbf int64 ;_dcdbg int ;_aaedf int ;_cfge int ;_feagbc int ;};

// SetVersion sets the PDF version of the output file.
func (_bbeaf *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bbeaf ._gbge .Major =majorVersion ;_bbeaf ._gbge .Minor =minorVersion ;};func (_eeg *DSS )generateHashMaps ()error {_acge ,_bgbc :=_eeg .generateHashMap (_eeg .Certs );if _bgbc !=nil {return _bgbc ;
};_agda ,_bgbc :=_eeg .generateHashMap (_eeg .OCSPs );if _bgbc !=nil {return _bgbc ;};_ecbaf ,_bgbc :=_eeg .generateHashMap (_eeg .CRLs );if _bgbc !=nil {return _bgbc ;};_eeg ._cgedb =_acge ;_eeg ._bffde =_agda ;_eeg ._gedde =_ecbaf ;return nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fdcf *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_fadd *PdfPageResources )SetXObjectFormByName (keyName _fe .PdfObjectName ,xform *XObjectForm )error {_ccac :=xform .ToPdfObject ().(*_fe .PdfObjectStream );_cefb :=_fadd .SetXObjectByName (keyName ,_ccac );return _cefb ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fe .PdfObject ;};

// WriteString outputs the object as it is to be written to file.
func (_bcgcb *pdfSignDictionary )WriteString ()string {_bcgcb ._dcdbg =0;_bcgcb ._aaedf =0;_bcgcb ._cfge =0;_bcgcb ._feagbc =0;_gaece :=_bea .NewBuffer (nil );_gaece .WriteString ("\u003c\u003c");for _ ,_bbfbf :=range _bcgcb .Keys (){_cgdda :=_bcgcb .Get (_bbfbf );
switch _bbfbf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gaece .WriteString (_bbfbf .WriteString ());_gaece .WriteString ("\u0020");_bcgcb ._cfge =_gaece .Len ();_gaece .WriteString (_cgdda .WriteString ());_gaece .WriteString ("\u0020");_bcgcb ._feagbc =_gaece .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gaece .WriteString (_bbfbf .WriteString ());_gaece .WriteString ("\u0020");_bcgcb ._dcdbg =_gaece .Len ();_gaece .WriteString (_cgdda .WriteString ());_gaece .WriteString ("\u0020");_bcgcb ._aaedf =_gaece .Len ()-1;
default:_gaece .WriteString (_bbfbf .WriteString ());_gaece .WriteString ("\u0020");_gaece .WriteString (_cgdda .WriteString ());};};_gaece .WriteString ("\u003e\u003e");return _gaece .String ();};type fontFile struct{_fcfce string ;_dacf string ;_fffee _aee .SimpleEncoder ;
};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_cbfc *pdfFontSimple )SetEncoder (encoder _aee .TextEncoder ){_cbfc ._cgefeb =encoder };type pdfFontType3 struct{fontCommon ;_bgefa *_fe .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _fe .PdfObject ;Encoding _fe .PdfObject ;FontBBox _fe .PdfObject ;FontMatrix _fe .PdfObject ;FirstChar _fe .PdfObject ;LastChar _fe .PdfObject ;Widths _fe .PdfObject ;Resources _fe .PdfObject ;_efac map[_aee .CharCode ]float64 ;_gbaede _aee .TextEncoder ;
};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_aegfd *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gdgd ,_degd :=range _aegfd ._fdcdb {_aegfd ._fdcdb [_gdgd ]=mapFunc (_degd );};};

// GetCerts returns the signature certificate chain.
func (_fdegg *PdfSignature )GetCerts ()([]*_ee .Certificate ,error ){var _caef []func ()([]*_ee .Certificate ,error );switch _cdcdf ,_ :=_fe .GetNameVal (_fdegg .SubFilter );_cdcdf {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_caef =append (_caef ,_fdegg .extractChainFromPKCS7 ,_fdegg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_caef =append (_caef ,_fdegg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_caef =append (_caef ,_fdegg .extractChainFromPKCS7 );
default:return nil ,_a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_cdcdf );};for _ ,_gfga :=range _caef {_cfaa ,_gacab :=_gfga ();if _gacab !=nil {return nil ,_gacab ;
};if len (_cfaa )> 0{return _cfaa ,nil ;};};return nil ,ErrSignNoCertificates ;};func _eaae (_ggff _fe .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fcgcd :=NewPdfColorspaceSpecialSeparation ();if _ggbeg ,_cacc :=_ggff .(*_fe .PdfIndirectObject );
_cacc {_fcgcd ._fdeb =_ggbeg ;};_ggff =_fe .TraceToDirectObject (_ggff );_bedfc ,_fefa :=_ggff .(*_fe .PdfObjectArray );if !_fefa {return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _bedfc .Len ()!=4{return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_ggff =_bedfc .Get (0);
_eadea ,_fefa :=_ggff .(*_fe .PdfObjectName );if !_fefa {return nil ,_a .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_eadea !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_a .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_ggff =_bedfc .Get (1);_eadea ,_fefa =_ggff .(*_fe .PdfObjectName );if !_fefa {return nil ,_a .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fcgcd .ColorantName =_eadea ;_ggff =_bedfc .Get (2);_bdeb ,_edae :=NewPdfColorspaceFromPdfObject (_ggff );if _edae !=nil {return nil ,_edae ;};_fcgcd .AlternateSpace =_bdeb ;_daeg ,_edae :=_aacg (_bedfc .Get (3));if _edae !=nil {return nil ,_edae ;};
_fcgcd .TintTransform =_daeg ;return _fcgcd ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cgefed *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cgefed .GetNumComponents (){return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebgg ,_ffddc :=_cgefed .TintTransform .Evaluate (vals );
if _ffddc !=nil {return nil ,_ffddc ;};_eadag ,_ffddc :=_cgefed .AlternateSpace .ColorFromFloats (_ebgg );if _ffddc !=nil {return nil ,_ffddc ;};return _eadag ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fadg *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afbd :=vals [0];if _afbd < 0.0||_afbd > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gfaf :=vals [1];if _gfaf < 0.0||_gfaf > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaca :=vals [2];if _aaca < 0.0||_aaca > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_daafd :=NewPdfColorCalRGB (_afbd ,_gfaf ,_aaca );return _daafd ,nil ;};

// RemovePage removes a page by number.
func (_eggd *PdfAppender )RemovePage (pageNum int ){_beba :=pageNum -1;_eggd ._ffbc =append (_eggd ._ffbc [0:_beba ],_eggd ._ffbc [pageNum :]...);};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_dedd *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _dedd .Range };func _dcbge (_ebfc *PdfField )[]*PdfField {_dddcc :=[]*PdfField {_ebfc };for _ ,_egeb :=range _ebfc .Kids {_dddcc =append (_dddcc ,_dcbge (_egeb )...);};return _dddcc ;};


// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_fdbff *_fe .PdfIndirectObject ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject converts the font to a PDF representation.
func (_caffbc *pdfFontType0 )ToPdfObject ()_fe .PdfObject {if _caffbc ._aabc ==nil {_caffbc ._aabc =&_fe .PdfIndirectObject {};};_ggcb :=_caffbc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_caffbc ._aabc .PdfObject =_ggcb ;if _caffbc .Encoding !=nil {_ggcb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_caffbc .Encoding );
}else if _caffbc ._gbdda !=nil {_ggcb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_caffbc ._gbdda .ToPdfObject ());};if _caffbc .DescendantFont !=nil {_ggcb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fe .MakeArray (_caffbc .DescendantFont .ToPdfObject ()));
};return _caffbc ._aabc ;};func _dacdbf (_dee _fe .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_gdada :=NewPdfColorspaceSpecialIndexed ();if _agcf ,_eeebb :=_dee .(*_fe .PdfIndirectObject );_eeebb {_gdada ._bdded =_agcf ;};_dee =_fe .TraceToDirectObject (_dee );
_gedef ,_baffe :=_dee .(*_fe .PdfObjectArray );if !_baffe {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gedef .Len ()!=4{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_dee =_gedef .Get (0);_aaadg ,_baffe :=_dee .(*_fe .PdfObjectName );if !_baffe {return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_aaadg !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_dee =_gedef .Get (1);_bgffe ,_ecca :=DetermineColorspaceNameFromPdfObject (_dee );if _ecca !=nil {return nil ,_ecca ;};if _bgffe =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_bgffe =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_beag .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_bgffe );
return nil ,_deea ;};_agdf ,_ecca :=NewPdfColorspaceFromPdfObject (_dee );if _ecca !=nil {return nil ,_ecca ;};_gdada .Base =_agdf ;_dee =_gedef .Get (2);_deddf ,_ecca :=_fe .GetNumberAsInt64 (_dee );if _ecca !=nil {return nil ,_ecca ;};if _deddf > 255{return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_gdada .HiVal =int (_deddf );_dee =_gedef .Get (3);_gdada .Lookup =_dee ;_dee =_fe .TraceToDirectObject (_dee );var _eace []byte ;if _edead ,_beded :=_dee .(*_fe .PdfObjectString );_beded {_eace =_edead .Bytes ();_beag .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_eace );
}else if _bdec ,_deed :=_dee .(*_fe .PdfObjectStream );_deed {_beag .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_dee .String ());_beag .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_bdec .Stream ),_bdec .Stream );
_gagcd ,_abcc :=_fe .DecodeStream (_bdec );if _abcc !=nil {return nil ,_abcc ;};_beag .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_gagcd ),_gagcd );_eace =_gagcd ;}else {_beag .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dee );
return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_eace )< _gdada .Base .GetNumComponents ()*(_gdada .HiVal +1){_beag .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_beag .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_eace ),_gdada .Base .GetNumComponents (),_gdada .HiVal );
}else {_eace =_eace [:_gdada .Base .GetNumComponents ()*(_gdada .HiVal +1)];};_gdada ._cfbf =_eace ;return _gdada ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bbdfe *PdfPage )error ;};

// B returns the value of the blue component of the color.
func (_gcgg *PdfColorDeviceRGB )B ()float64 {return _gcgg [2]};

// ToPdfObject implements interface PdfModel.
func (_dcfd *PdfAnnotationPolyLine )ToPdfObject ()_fe .PdfObject {_dcfd .PdfAnnotation .ToPdfObject ();_dbfb :=_dcfd ._egb ;_fade :=_dbfb .PdfObject .(*_fe .PdfObjectDictionary );_dcfd .PdfAnnotationMarkup .appendToPdfDictionary (_fade );_fade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_fade .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dcfd .Vertices );_fade .SetIfNotNil ("\u004c\u0045",_dcfd .LE );_fade .SetIfNotNil ("\u0042\u0053",_dcfd .BS );_fade .SetIfNotNil ("\u0049\u0043",_dcfd .IC );_fade .SetIfNotNil ("\u0042\u0045",_dcfd .BE );
_fade .SetIfNotNil ("\u0049\u0054",_dcfd .IT );_fade .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dcfd .Measure );return _dbfb ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_gacfe DefaultImageHandler )NewImageFromGoImage (goimg _bgf .Image )(*Image ,error ){_ebge ,_fggc :=_gege .FromGoImage (goimg );if _fggc !=nil {return nil ,_fggc ;};_daadc :=_bfcga (_ebge .Base ());return &_daadc ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;RD _fe .PdfObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_ddac *PdfFont )SubsetRegistered ()error {switch _fbdg :=_ddac ._cdgee .(type ){case *pdfFontType0 :_aafg :=_fbdg .subsetRegistered ();if _aafg !=nil {_beag .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_aafg );
return _aafg ;};if _fbdg ._aabc !=nil {if _fbdg ._gbdda !=nil {_fbdg ._gbdda .ToPdfObject ();};_fbdg .ToPdfObject ();};default:_beag .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_fbdg );
};return nil ;};func (_gcge *PdfWriter )writeOutlines ()error {if _gcge ._ddegc ==nil {return nil ;};_beag .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gcge ._ddegc );_fdggc :=_gcge ._ddegc .ToPdfObject ();
_beag .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fdggc ,_fdggc ,_fdggc );_gcge ._gagg .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fdggc );
_edbfe :=_gcge .addObjects (_fdggc );if _edbfe !=nil {return _edbfe ;};return nil ;};

// String returns a string describing the font descriptor.
func (_fead *PdfFontDescriptor )String ()string {var _gfcf []string ;if _fead .FontName !=nil {_gfcf =append (_gfcf ,_fead .FontName .String ());};if _fead .FontFamily !=nil {_gfcf =append (_gfcf ,_fead .FontFamily .String ());};if _fead .fontFile !=nil {_gfcf =append (_gfcf ,_fead .fontFile .String ());
};if _fead ._faecg !=nil {_gfcf =append (_gfcf ,_fead ._faecg .String ());};_gfcf =append (_gfcf ,_a .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_fead .FontFile3 !=nil ));return _a .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ca .Join (_gfcf ,"\u002c\u0020"));
};func (_adaf *PdfReader )newPdfAnnotationTrapNetFromDict (_gca *_fe .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_aacf :=PdfAnnotationTrapNet {};return &_aacf ,nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fe .PdfObject ;Popup *PdfAnnotationPopup ;CA _fe .PdfObject ;RC _fe .PdfObject ;CreationDate _fe .PdfObject ;IRT _fe .PdfObject ;Subj _fe .PdfObject ;RT _fe .PdfObject ;IT _fe .PdfObject ;ExData _fe .PdfObject ;};var _gfeca =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_adcfc *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _egfb []*PdfField ;_beegd :=map[*_fe .PdfIndirectObject ]struct{}{};for _ ,_fafdg :=range _adcfc .PageList {_abbdd ,_cddd :=_fafdg .GetAnnotations ();if _cddd !=nil {return _cddd ;
};for _ ,_fdgfc :=range _abbdd {var _gcecd *PdfField ;switch _adffc :=_fdgfc .GetContext ().(type ){case *PdfAnnotationWidget :if _adffc ._fgdb !=nil {_gcecd =_adffc ._fgdb ;break ;};if _dgbdg ,_edbfg :=_fe .GetIndirect (_adffc .Parent );_edbfg {_gcecd ,_cddd =_adcfc .newPdfFieldFromIndirectObject (_dgbdg ,nil );
if _cddd ==nil {break ;};_beag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dgbdg ,_cddd );
};if _adffc ._egb !=nil {_gcecd ,_cddd =_adcfc .newPdfFieldFromIndirectObject (_adffc ._egb ,nil );if _cddd ==nil {break ;};_beag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_adffc ._egb ,_cddd );
};};if _gcecd ==nil {continue ;};if _ ,_afed :=_beegd [_gcecd ._beebc ];_afed {continue ;};_beegd [_gcecd ._beebc ]=struct{}{};_egfb =append (_egfb ,_gcecd );};};if len (_egfb )==0{return nil ;};if _adcfc .AcroForm ==nil {_adcfc .AcroForm =NewPdfAcroForm ();
};_adcfc .AcroForm .Fields =&_egfb ;return nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_fbaa *PdfOutlineTreeNode )ToPdfObject ()_fe .PdfObject {return _fbaa .GetContext ().ToPdfObject ()};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fe .PdfObject ;Flags _fe .PdfObject ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_bbceb *PdfPageResources )SetShadingByName (keyName _fe .PdfObjectName ,shadingObj _fe .PdfObject )error {if _bbceb .Shading ==nil {_bbceb .Shading =_fe .MakeDict ();};_decda ,_gacfa :=_bbceb .Shading .(*_fe .PdfObjectDictionary );if !_gacfa {return _fe .ErrTypeError ;
};_decda .Set (keyName ,shadingObj );return nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_dagcb *PdfPageResources )AddExtGState (gsName _fe .PdfObjectName ,gsDict _fe .PdfObject )error {if _dagcb .ExtGState ==nil {_dagcb .ExtGState =_fe .MakeDict ();};_fgdf :=_dagcb .ExtGState ;_ebdea ,_beeeg :=_fe .TraceToDirectObject (_fgdf ).(*_fe .PdfObjectDictionary );
if !_beeeg {_beag .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_fgdf ,_fe .TraceToDirectObject (_fgdf ));
return _fe .ErrTypeError ;};_ebdea .Set (gsName ,gsDict );return nil ;};

// A returns the value of the A component of the color.
func (_dabb *PdfColorLab )A ()float64 {return _dabb [1]};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func _bfcga (_acegc *_gege .ImageBase )(_cecbf Image ){_cecbf .Width =int64 (_acegc .Width );_cecbf .Height =int64 (_acegc .Height );_cecbf .BitsPerComponent =int64 (_acegc .BitsPerComponent );_cecbf .ColorComponents =_acegc .ColorComponents ;
_cecbf .Data =_acegc .Data ;_cecbf ._abeag =_acegc .Decode ;_cecbf ._fdcdb =_acegc .Alpha ;return _cecbf ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_fabea :=&PdfColorspaceDeviceN {};return _fabea ;};

// IsCID returns true if the underlying font is CID.
func (_gdeg *PdfFont )IsCID ()bool {return _gdeg .baseFields ().isCIDFont ()};

// ToPdfObject returns a PDF object representation of the outline item.
func (_deabd *OutlineItem )ToPdfObject ()_fe .PdfObject {_fecad ,_ :=_deabd .ToPdfOutlineItem ();return _fecad .ToPdfObject ();};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GetNumComponents returns the number of color components.
func (_bcac *PdfColorspaceICCBased )GetNumComponents ()int {return _bcac .N };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_cdgee pdfFont };

// GetContainingPdfObject implements interface PdfModel.
func (_decgg *PdfSignature )GetContainingPdfObject ()_fe .PdfObject {return _decgg ._fafad };

// ToPdfObject implements interface PdfModel.
func (_dbcg *PdfAnnotationProjection )ToPdfObject ()_fe .PdfObject {_dbcg .PdfAnnotation .ToPdfObject ();_fda :=_dbcg ._egb ;_eebd :=_fda .PdfObject .(*_fe .PdfObjectDictionary );_dbcg .PdfAnnotationMarkup .appendToPdfDictionary (_eebd );return _fda ;};


// ToPdfObject returns the PDF representation of the colorspace.
func (_effe *PdfColorspaceDeviceCMYK )ToPdfObject ()_fe .PdfObject {return _fe .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_ccfcd *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetDecode sets the decode image float slice.
func (_ddbf *Image )SetDecode (decode []float64 ){_ddbf ._abeag =decode };

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_cdbde *PdfFont )ToUnicode ()string {if _cdbde .baseFields ()._ggee ==nil {return "";};return _cdbde .baseFields ()._ggee .Name ();};func _cccgcf (_abbddc []byte )([]byte ,error ){_gfcff :=_cb .New ();if _ ,_dfae :=_ecf .Copy (_gfcff ,_bea .NewReader (_abbddc ));
_dfae !=nil {return nil ,_dfae ;};return _gfcff .Sum (nil ),nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bebdd pdfFontSimple )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){if _bebdd ._gcecc !=nil {_eabba ,_adcf :=_bebdd ._gcecc .Read (r );if _adcf {return _eabba ,true ;};};_degga :=_bebdd .Encoder ();if _degga ==nil {_beag .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bebdd );
return _fg .CharMetrics {},false ;};_ecgd ,_gagbb :=_degga .RuneToCharcode (r );if !_gagbb {if r !=' '{_beag .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bebdd );
};return _fg .CharMetrics {},false ;};_baffc ,_bbbcb :=_bebdd .GetCharMetrics (_ecgd );return _baffc ,_bbbcb ;};func (_ffbdb *LTV )getOCSPs (_edaa []*_ee .Certificate ,_dbcc map[string ]*_ee .Certificate )([][]byte ,error ){_cagdd :=make ([][]byte ,0,len (_edaa ));
for _ ,_fadgf :=range _edaa {for _ ,_efce :=range _fadgf .OCSPServer {if _ffbdb .CertClient .IsCA (_fadgf ){continue ;};_geeg ,_cadf :=_dbcc [_fadgf .Issuer .CommonName ];if !_cadf {_beag .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_ceegg ,_ebfd :=_ffbdb .OCSPClient .MakeRequest (_efce ,_fadgf ,_geeg );if _ebfd !=nil {_beag .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_ebfd );
continue ;};_cagdd =append (_cagdd ,_ceegg );};};return _cagdd ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcdgb *PdfShading )ToPdfObject ()_fe .PdfObject {_deddd :=_fcdgb ._ebfb ;_fgfa ,_fadba :=_fcdgb .getShadingDict ();if _fadba !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fcdgb .ShadingType !=nil {_fgfa .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fcdgb .ShadingType );};if _fcdgb .ColorSpace !=nil {_fgfa .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fcdgb .ColorSpace .ToPdfObject ());
};if _fcdgb .Background !=nil {_fgfa .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_fcdgb .Background );};if _fcdgb .BBox !=nil {_fgfa .Set ("\u0042\u0042\u006f\u0078",_fcdgb .BBox .ToPdfObject ());};if _fcdgb .AntiAlias !=nil {_fgfa .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_fcdgb .AntiAlias );
};return _deddd ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_edcfa *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_edcfa .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_edcfa ._bdge =acroForm ;};func (_cadad *PdfWriter )flushWriter ()error {if _cadad ._adage ==nil {_cadad ._adage =_cadad ._babfg .Flush ();
};return _cadad ._adage ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_gccbd *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gfadc []*PdfField ;if _gccbd .AcroForm !=nil {_gfadc =_gccbd .AcroForm .AllFields ();};_bcecb :=make (map[*PdfField ]struct{},len (_gfadc ));for _ ,_aaefb :=range _gfadc {_bcecb [_aaefb ]=struct{}{};
};for _ ,_defge :=range _gccbd .PageList {_cedfc ,_cgfbc :=_defge .GetAnnotations ();if _cgfbc !=nil {return false ,_cgfbc ;};for _ ,_beaged :=range _cedfc {_eceg ,_gafga :=_beaged .GetContext ().(*PdfAnnotationWidget );if !_gafga {continue ;};_gddgb :=_eceg .Field ();
if _gddgb ==nil {return true ,nil ;};if _ ,_caea :=_bcecb [_gddgb ];!_caea {return true ,nil ;};};};return false ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_eefee *PdfPage )GetPageDict ()*_fe .PdfObjectDictionary {_ddfea :=_eefee ._dcfdb ;_ddfea .Clear ();_ddfea .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050\u0061\u0067\u0065"));_ddfea .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eefee .Parent );
if _eefee .LastModified !=nil {_ddfea .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_eefee .LastModified .ToPdfObject ());};if _eefee .Resources !=nil {_ddfea .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eefee .Resources .ToPdfObject ());
};if _eefee .CropBox !=nil {_ddfea .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_eefee .CropBox .ToPdfObject ());};if _eefee .MediaBox !=nil {_ddfea .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_eefee .MediaBox .ToPdfObject ());};if _eefee .BleedBox !=nil {_ddfea .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_eefee .BleedBox .ToPdfObject ());
};if _eefee .TrimBox !=nil {_ddfea .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_eefee .TrimBox .ToPdfObject ());};if _eefee .ArtBox !=nil {_ddfea .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_eefee .ArtBox .ToPdfObject ());};_ddfea .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_eefee .BoxColorInfo );
_ddfea .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eefee .Contents );if _eefee .Rotate !=nil {_ddfea .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fe .MakeInteger (*_eefee .Rotate ));};_ddfea .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_eefee .Group );
_ddfea .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_eefee .Thumb );_ddfea .SetIfNotNil ("\u0042",_eefee .B );_ddfea .SetIfNotNil ("\u0044\u0075\u0072",_eefee .Dur );_ddfea .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_eefee .Trans );_ddfea .SetIfNotNil ("\u0041\u0041",_eefee .AA );
_ddfea .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eefee .Metadata );_ddfea .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_eefee .PieceInfo );_ddfea .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eefee .StructParents );
_ddfea .SetIfNotNil ("\u0049\u0044",_eefee .ID );_ddfea .SetIfNotNil ("\u0050\u005a",_eefee .PZ );_ddfea .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_eefee .SeparationInfo );_ddfea .SetIfNotNil ("\u0054\u0061\u0062\u0073",_eefee .Tabs );
_ddfea .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_eefee .TemplateInstantiated );_ddfea .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_eefee .PresSteps );_ddfea .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_eefee .UserUnit );
_ddfea .SetIfNotNil ("\u0056\u0050",_eefee .VP );if _eefee ._dcbbc !=nil {_eadef :=_fe .MakeArray ();for _ ,_dbcfbg :=range _eefee ._dcbbc {if _eecee :=_dbcfbg .GetContext ();_eecee !=nil {_eadef .Append (_eecee .ToPdfObject ());}else {_eadef .Append (_dbcfbg .ToPdfObject ());
};};if _eadef .Len ()> 0{_ddfea .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_eadef );};}else if _eefee .Annots !=nil {_ddfea .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_eefee .Annots );};return _ddfea ;};

// A returns the value of the A component of the color.
func (_adbc *PdfColorCalRGB )A ()float64 {return _adbc [0]};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fdacb *PdfFieldButton )SetType (btype ButtonType ){_bfda :=uint32 (0);if _fdacb .Ff !=nil {_bfda =uint32 (*_fdacb .Ff );};switch btype {case ButtonTypePush :_bfda |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_bfda |=FieldFlagRadio .Mask ();
};_fdacb .Ff =_fe .MakeInteger (int64 (_bfda ));};func (_eefgd *PdfWriter )setCatalogVersion (){_eefgd ._gagg .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fe .MakeName (_a .Sprintf ("\u0025\u0064\u002e%\u0064",_eefgd ._gbge .Major ,_eefgd ._gbge .Minor )));
};func (_cfdfb *PdfReader )newPdfAnnotation3DFromDict (_fbb *_fe .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_edab :=PdfAnnotation3D {};_edab .T3DD =_fbb .Get ("\u0033\u0044\u0044");_edab .T3DV =_fbb .Get ("\u0033\u0044\u0056");_edab .T3DA =_fbb .Get ("\u0033\u0044\u0041");
_edab .T3DI =_fbb .Get ("\u0033\u0044\u0049");_edab .T3DB =_fbb .Get ("\u0033\u0044\u0042");return &_edab ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_aagfdf *PdfRectangle )ToPdfObject ()_fe .PdfObject {return _fe .MakeArray (_fe .MakeFloat (_aagfdf .Llx ),_fe .MakeFloat (_aagfdf .Lly ),_fe .MakeFloat (_aagfdf .Urx ),_fe .MakeFloat (_aagfdf .Ury ));};

// SetName sets the `Name` field of the signature.
func (_abbbgc *PdfSignature )SetName (name string ){_abbbgc .Name =_fe .MakeString (name )};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bedce *PdfShadingType1 )ToPdfObject ()_fe .PdfObject {_bedce .PdfShading .ToPdfObject ();_cgcgb ,_dacbc :=_bedce .getShadingDict ();if _dacbc !=nil {_beag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bedce .Domain !=nil {_cgcgb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bedce .Domain );};if _bedce .Matrix !=nil {_cgcgb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bedce .Matrix );};if _bedce .Function !=nil {if len (_bedce .Function )==1{_cgcgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bedce .Function [0].ToPdfObject ());
}else {_eagd :=_fe .MakeArray ();for _ ,_fdfde :=range _bedce .Function {_eagd .Append (_fdfde .ToPdfObject ());};_cgcgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eagd );};};return _bedce ._ebfb ;};

// ToPdfObject implements interface PdfModel.
func (_dde *PdfActionHide )ToPdfObject ()_fe .PdfObject {_dde .PdfAction .ToPdfObject ();_dda :=_dde ._bgfg ;_eef :=_dda .PdfObject .(*_fe .PdfObjectDictionary );_eef .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeHide )));_eef .SetIfNotNil ("\u0054",_dde .T );
_eef .SetIfNotNil ("\u0048",_dde .H );return _dda ;};

// C returns the value of the cyan component of the color.
func (_aegf *PdfColorDeviceCMYK )C ()float64 {return _aegf [0]};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fe .PdfObjectName ;Colorants _fe .PdfObject ;Process _fe .PdfObject ;MixingHints _fe .PdfObject ;_gbad *_fe .PdfIndirectObject ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_aagdg .Lock ();defer _aagdg .Unlock ();_deaf =producer };

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fe .PdfObject ;Movie _fe .PdfObject ;A _fe .PdfObject ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_afdb *PdfPageResources )SetPatternByName (keyName _fe .PdfObjectName ,pattern _fe .PdfObject )error {if _afdb .Pattern ==nil {_afdb .Pattern =_fe .MakeDict ();};_gdccg ,_edeed :=_afdb .Pattern .(*_fe .PdfObjectDictionary );if !_edeed {return _fe .ErrTypeError ;
};_gdccg .Set (keyName ,pattern );return nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_ccbd *DSS )GetContainingPdfObject ()_fe .PdfObject {return _ccbd ._cedcg };

// R returns the value of the red component of the color.
func (_bgca *PdfColorDeviceRGB )R ()float64 {return _bgca [0]};