//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_cfg "bytes";_cgc "crypto/rand";_ge "crypto/sha1";_b "crypto/x509";_cg "encoding/binary";_gf "encoding/hex";_f "errors";_g "fmt";_cea "github.com/unidoc/pkcs7";_gd "github.com/unidoc/unipdf/v3/common";_db "github.com/unidoc/unipdf/v3/core";
_gda "github.com/unidoc/unipdf/v3/core/security";_dfa "github.com/unidoc/unipdf/v3/core/security/crypt";_dc "github.com/unidoc/unipdf/v3/internal/cmap";_fg "github.com/unidoc/unipdf/v3/internal/imageutil";_def "github.com/unidoc/unipdf/v3/internal/license";
_cga "github.com/unidoc/unipdf/v3/internal/sampling";_fa "github.com/unidoc/unipdf/v3/internal/textencoding";_ebg "github.com/unidoc/unipdf/v3/internal/transform";_acg "github.com/unidoc/unipdf/v3/model/internal/fonts";_ga "github.com/unidoc/unipdf/v3/model/sigutil";
_fd "github.com/unidoc/unipdf/v3/ps";_dd "github.com/unidoc/unitype";_de "golang.org/x/xerrors";_ad "image";_bb "image/color";_ "image/gif";_ "image/png";_dg "io";_ee "io/ioutil";_ae "math";_ed "math/rand";_ca "os";_bc "regexp";_ea "sort";_ac "strconv";
_cf "strings";_a "sync";_cb "time";_d "unicode";_df "unicode/utf8";);

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_dgcfd :=&PdfPageResources {};_dgcfd ._bffbb =_db .MakeDict ();return _dgcfd ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_faec *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_f .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_agdcd *PdfReader )lookupPageByObject (_ebeec _db .PdfObject )(*PdfPage ,error ){return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bcdbc *PdfColorspaceLab )ToPdfObject ()_db .PdfObject {_cffce :=_db .MakeArray ();_cffce .Append (_db .MakeName ("\u004c\u0061\u0062"));_gdd :=_db .MakeDict ();if _bcdbc .WhitePoint !=nil {_ffce :=_db .MakeArray (_db .MakeFloat (_bcdbc .WhitePoint [0]),_db .MakeFloat (_bcdbc .WhitePoint [1]),_db .MakeFloat (_bcdbc .WhitePoint [2]));
_gdd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ffce );}else {_gd .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _bcdbc .BlackPoint !=nil {_dbfc :=_db .MakeArray (_db .MakeFloat (_bcdbc .BlackPoint [0]),_db .MakeFloat (_bcdbc .BlackPoint [1]),_db .MakeFloat (_bcdbc .BlackPoint [2]));_gdd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dbfc );
};if _bcdbc .Range !=nil {_efcd :=_db .MakeArray (_db .MakeFloat (_bcdbc .Range [0]),_db .MakeFloat (_bcdbc .Range [1]),_db .MakeFloat (_bcdbc .Range [2]),_db .MakeFloat (_bcdbc .Range [3]));_gdd .Set ("\u0052\u0061\u006eg\u0065",_efcd );};_cffce .Append (_gdd );
if _bcdbc ._eadc !=nil {_bcdbc ._eadc .PdfObject =_cffce ;return _bcdbc ._eadc ;};return _cffce ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_eabc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbfc ,_ggac :=_db .GetNumbersAsFloat (objects );
if _ggac !=nil {return nil ,_ggac ;};return _eabc .ColorFromFloats (_gbfc );};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_cffcb *PdfRectangle )Normalize (){if _cffcb .Llx > _cffcb .Urx {_cffcb .Llx ,_cffcb .Urx =_cffcb .Urx ,_cffcb .Llx ;};if _cffcb .Lly > _cffcb .Ury {_cffcb .Lly ,_cffcb .Ury =_cffcb .Ury ,_cffcb .Lly ;};};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fcd *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_dace :=0.3*_fcd .R ()+0.59*_fcd .G ()+0.11*_fcd .B ();_dace =_ae .Min (_ae .Max (_dace ,0.0),1.0);return NewPdfColorDeviceGray (_dace );};func (_dgcdg fontCommon )asPdfObjectDictionary (_eddac string )*_db .PdfObjectDictionary {if _eddac !=""&&_dgcdg ._cdbfb !=""&&_eddac !=_dgcdg ._cdbfb {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_eddac ,_dgcdg );
}else if _eddac ==""&&_dgcdg ._cdbfb ==""{_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dgcdg );
}else if _dgcdg ._cdbfb ==""{_dgcdg ._cdbfb =_eddac ;};_aebac :=_db .MakeDict ();_aebac .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0046\u006f\u006e\u0074"));_aebac .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_db .MakeName (_dgcdg ._abeff ));
_aebac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName (_dgcdg ._cdbfb ));if _dgcdg ._dfff !=nil {_aebac .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dgcdg ._dfff .ToPdfObject ());};if _dgcdg ._bffc !=nil {_aebac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dgcdg ._bffc );
}else if _dgcdg ._begaf !=nil {_ebag ,_eccdg :=_dgcdg ._begaf .Stream ();if _eccdg !=nil {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_eccdg );
}else {_aebac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ebag );};};return _aebac ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _db .PdfObject ;IC _db .PdfObject ;BE _db .PdfObject ;RD _db .PdfObject ;};func (_bcad *PdfReader )newPdfAnnotationSoundFromDict (_ggbd *_db .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_gfda :=PdfAnnotationSound {};
_gdfc ,_gcea :=_bcad .newPdfAnnotationMarkupFromDict (_ggbd );if _gcea !=nil {return nil ,_gcea ;};_gfda .PdfAnnotationMarkup =_gdfc ;_gfda .Name =_ggbd .Get ("\u004e\u0061\u006d\u0065");_gfda .Sound =_ggbd .Get ("\u0053\u006f\u0075n\u0064");return &_gfda ,nil ;
};var _eaegg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gabg :=&PdfAppender {_cfec :reader ._dbfcgb ,Reader :reader ,_bebf :reader ._ceaabg ,_ggcbe :reader ._aebfd };_dfcbd ,_baeb :=_gabg ._cfec .Seek (0,_dg .SeekEnd );if _baeb !=nil {return nil ,_baeb ;
};_gabg ._ggdg =_dfcbd ;if _ ,_baeb =_gabg ._cfec .Seek (0,_dg .SeekStart );_baeb !=nil {return nil ,_baeb ;};_gabg ._effb ,_baeb =NewPdfReader (_gabg ._cfec );if _baeb !=nil {return nil ,_baeb ;};for _ ,_ecbe :=range _gabg .Reader .GetObjectNums (){if _gabg ._bge < _ecbe {_gabg ._bge =_ecbe ;
};};_gabg ._ddeae =_gabg ._bebf .GetXrefTable ();_gabg ._bbfdf =_gabg ._bebf .GetXrefOffset ();_gabg ._afb =append (_gabg ._afb ,_gabg ._effb .PageList ...);_gabg ._bbfdg =make (map[_db .PdfObject ]struct{});_gabg ._dage =make (map[_db .PdfObject ]int64 );
_gabg ._gbgd =make (map[_db .PdfObject ]struct{});_gabg ._edce =_gabg ._effb .AcroForm ;_gabg ._dgaab =_gabg ._effb .DSS ;return _gabg ,nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_bcbb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bcff :=range pages {_bcff =_bcff .Duplicate ();_ccbeg (_bcff );_bcbb ._afb =append (_bcbb ._afb ,_bcff );};};type pdfSignDictionary struct{*_db .PdfObjectDictionary ;_gcdd *SignatureHandler ;
_eebcd *PdfSignature ;_acebg int64 ;_aafed int ;_febbf int ;_aebfde int ;_fefa int ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ebd *PdfColorspaceCalGray )GetNumComponents ()int {return 1};type fontFile struct{_gbabd string ;_cafbg string ;_dfegf _fa .SimpleEncoder ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_ffceb *PdfColorspaceDeviceN )ToPdfObject ()_db .PdfObject {_gada :=_db .MakeArray (_db .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gada .Append (_ffceb .ColorantNames );_gada .Append (_ffceb .AlternateSpace .ToPdfObject ());_gada .Append (_ffceb .TintTransform .ToPdfObject ());
if _ffceb .Attributes !=nil {_gada .Append (_ffceb .Attributes .ToPdfObject ());};if _ffceb ._gegg !=nil {_ffceb ._gegg .PdfObject =_gada ;return _ffceb ._gegg ;};return _gada ;};

// M returns the value of the magenta component of the color.
func (_cgced *PdfColorDeviceCMYK )M ()float64 {return _cgced [1]};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _cb .Time ){_edbg .Lock ();defer _edbg .Unlock ();_ceff =modifiedDate ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_db .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _db .PdfObject ;A _db .PdfObject ;SE _db .PdfObject ;C _db .PdfObject ;F _db .PdfObject ;
_afecf *_db .PdfIndirectObject ;};func _egaeg ()string {_edbg .Lock ();defer _edbg .Unlock ();return _egbbf };func (_ggfd *PdfReader )newPdfAnnotationPolygonFromDict (_ddd *_db .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_eea :=PdfAnnotationPolygon {};
_ebe ,_fgb :=_ggfd .newPdfAnnotationMarkupFromDict (_ddd );if _fgb !=nil {return nil ,_fgb ;};_eea .PdfAnnotationMarkup =_ebe ;_eea .Vertices =_ddd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_eea .LE =_ddd .Get ("\u004c\u0045");_eea .BS =_ddd .Get ("\u0042\u0053");
_eea .IC =_ddd .Get ("\u0049\u0043");_eea .BE =_ddd .Get ("\u0042\u0045");_eea .IT =_ddd .Get ("\u0049\u0054");_eea .Measure =_ddd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_eea ,nil ;};

// Height returns the height of `rect`.
func (_fedb *PdfRectangle )Height ()float64 {return _ae .Abs (_fedb .Ury -_fedb .Lly )};

// ToPdfObject implements interface PdfModel.
func (_gdga *PdfAnnotationCircle )ToPdfObject ()_db .PdfObject {_gdga .PdfAnnotation .ToPdfObject ();_ccfb :=_gdga ._addd ;_fec :=_ccfb .PdfObject .(*_db .PdfObjectDictionary );_gdga .PdfAnnotationMarkup .appendToPdfDictionary (_fec );_fec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_fec .SetIfNotNil ("\u0042\u0053",_gdga .BS );_fec .SetIfNotNil ("\u0049\u0043",_gdga .IC );_fec .SetIfNotNil ("\u0042\u0045",_gdga .BE );_fec .SetIfNotNil ("\u0052\u0044",_gdga .RD );return _ccfb ;};

// ToPdfObject implements interface PdfModel.
func (_bacg *PdfAnnotationSound )ToPdfObject ()_db .PdfObject {_bacg .PdfAnnotation .ToPdfObject ();_bdeb :=_bacg ._addd ;_bcgb :=_bdeb .PdfObject .(*_db .PdfObjectDictionary );_bacg .PdfAnnotationMarkup .appendToPdfDictionary (_bcgb );_bcgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0053\u006f\u0075n\u0064"));
_bcgb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bacg .Sound );_bcgb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bacg .Name );return _bdeb ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_bfgbf *PdfInfo )ToPdfObject ()_db .PdfObject {_bfgf :=_db .MakeDict ();_bfgf .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_bfgbf .Title );_bfgf .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_bfgbf .Author );_bfgf .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_bfgbf .Subject );
_bfgf .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bfgbf .Keywords );_bfgf .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_bfgbf .Creator );_bfgf .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bfgbf .Producer );
_bfgf .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_bfgbf .Trapped );if _bfgbf .CreationDate !=nil {_bfgf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bfgbf .CreationDate .ToPdfObject ());};if _bfgbf .ModifiedDate !=nil {_bfgf .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_bfgbf .ModifiedDate .ToPdfObject ());
};for _ ,_gcge :=range _bfgbf ._eccbf .Keys (){_bfgf .SetIfNotNil (_gcge ,_bfgbf ._eccbf .Get (_gcge ));};return _bfgf ;};func _eegfc (_cdgda *PdfField ,_ebgg _db .PdfObject ){for _ ,_gaeaa :=range _cdgda .Annotations {_gaeaa .AS =_ebgg ;_gaeaa .ToPdfObject ();
};};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _db .PdfObject ;};func (_dgda *PdfReader )newPdfActionThreadFromDict (_aed *_db .PdfObjectDictionary )(*PdfActionThread ,error ){_fca ,_bee :=_ebae (_aed .Get ("\u0046"));if _bee !=nil {return nil ,_bee ;};
return &PdfActionThread {D :_aed .Get ("\u0044"),B :_aed .Get ("\u0042"),F :_fca },nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _dg .ReadSeeker )(*PdfReader ,error ){const _caeca ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _cgeb (rs ,&ReaderOpts {LazyLoad :true },false ,_caeca );
};func (_bagdb *LTV )buildCertChain (_dagad ,_gfgac []*_b .Certificate )([]*_b .Certificate ,map[string ]*_b .Certificate ,error ){_gafef :=map[string ]*_b .Certificate {};for _ ,_ffaab :=range _dagad {_gafef [_ffaab .Subject .CommonName ]=_ffaab ;};_cefbb :=_dagad ;
for _ ,_gbbfa :=range _gfgac {_bbaeg :=_gbbfa .Subject .CommonName ;if _ ,_gbbbd :=_gafef [_bbaeg ];_gbbbd {continue ;};_gafef [_bbaeg ]=_gbbfa ;_cefbb =append (_cefbb ,_gbbfa );};if len (_cefbb )==0{return nil ,nil ,ErrSignNoCertificates ;};var _cadge error ;
for _dgafb :=_cefbb [0];_dgafb !=nil &&!_bagdb .CertClient .IsCA (_dgafb );{_gccc ,_eeecg :=_gafef [_dgafb .Issuer .CommonName ];if !_eeecg {if _gccc ,_cadge =_bagdb .CertClient .GetIssuer (_dgafb );_cadge !=nil {_gd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_cadge );
break ;};_gafef [_dgafb .Issuer .CommonName ]=_gccc ;_cefbb =append (_cefbb ,_gccc );};_dgafb =_gccc ;};return _cefbb ,_gafef ,nil ;};func _acbd ()string {_edbg .Lock ();defer _edbg .Unlock ();return _bbdae };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func _agae (_dbcf _db .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dcbd :=NewPdfColorspaceSpecialSeparation ();
if _gfca ,_eabb :=_dbcf .(*_db .PdfIndirectObject );_eabb {_dcbd ._ggafc =_gfca ;};_dbcf =_db .TraceToDirectObject (_dbcf );_caca ,_adgf :=_dbcf .(*_db .PdfObjectArray );if !_adgf {return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _caca .Len ()!=4{return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_dbcf =_caca .Get (0);
_bddb ,_adgf :=_dbcf .(*_db .PdfObjectName );if !_adgf {return nil ,_g .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bddb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_g .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_dbcf =_caca .Get (1);_bddb ,_adgf =_dbcf .(*_db .PdfObjectName );if !_adgf {return nil ,_g .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dcbd .ColorantName =_bddb ;_dbcf =_caca .Get (2);_fbbfg ,_agccf :=NewPdfColorspaceFromPdfObject (_dbcf );if _agccf !=nil {return nil ,_agccf ;};_dcbd .AlternateSpace =_fbbfg ;_ddfe ,_agccf :=_ccee (_caca .Get (3));if _agccf !=nil {return nil ,_agccf ;
};_dcbd .TintTransform =_ddfe ;return _dcbd ,nil ;};

// SetName sets the `Name` field of the signature.
func (_gbgb *PdfSignature )SetName (name string ){_gbgb .Name =_db .MakeString (name )};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_fbbge *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ebaad ,_fcaaec :=_db .GetDict (_fbbge ._egdad .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_fcaaec {_ebaad =_db .MakeDict ();_fbbge ._egdad .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ebaad );
};_ggbf ,_fcaaec :=_db .GetDict (_ebaad .Get (_db .PdfObjectName (extName )));if !_fcaaec {_ggbf =_db .MakeDict ();_ebaad .Set (_db .PdfObjectName (extName ),_ggbf );};if _fefeb ,_ :=_db .GetNameVal (_ggbf .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_fefeb !=baseVersion {_ggbf .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_db .MakeName (baseVersion ));};if _agfbc ,_ :=_db .GetIntVal (_ggbf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_agfbc !=extLevel {_ggbf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_db .MakeInteger (int64 (extLevel )));};};func (_fcga *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _db .PdfObject ;Mac _db .PdfObject ;Unix _db .PdfObject ;NewWindow _db .PdfObject ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_dfgc *PdfColorspaceDeviceN )GetNumComponents ()int {return _dfgc .ColorantNames .Len ()};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _db .PdfObject ;H _db .PdfObject ;};

// Encoder returns the font's text encoder.
func (_caaa pdfCIDFontType2 )Encoder ()_fa .TextEncoder {return _caaa ._egcad };

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_db .PdfObjectStream )(*XObjectForm ,error ){_fadba :=&XObjectForm {};_fadba ._abddd =stream ;_dcgea :=*(stream .PdfObjectDictionary );_decfb ,_eabfc :=_db .NewEncoderFromStream (stream );if _eabfc !=nil {return nil ,_eabfc ;
};_fadba .Filter =_decfb ;if _cfbgf :=_dcgea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cfbgf !=nil {_fbcdd ,_dbecc :=_cfbgf .(*_db .PdfObjectName );if !_dbecc {return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_fbcdd !="\u0046\u006f\u0072\u006d"{_gd .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _eaabg :=_dcgea .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_eaabg !=nil {_fadba .FormType =_eaabg ;};if _afdcc :=_dcgea .Get ("\u0042\u0042\u006f\u0078");_afdcc !=nil {_fadba .BBox =_afdcc ;};if _bcgacb :=_dcgea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bcgacb !=nil {_fadba .Matrix =_bcgacb ;};if _dfgda :=_dcgea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dfgda !=nil {_dfgda =_db .TraceToDirectObject (_dfgda );_dbaee ,_bcfb :=_dfgda .(*_db .PdfObjectDictionary );if !_bcfb {_gd .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_db .ErrTypeError ;};_cbebe ,_dddgd :=NewPdfPageResourcesFromDict (_dbaee );if _dddgd !=nil {_gd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_dddgd ;};_fadba .Resources =_cbebe ;_gd .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_fadba .Resources );};_fadba .Group =_dcgea .Get ("\u0047\u0072\u006fu\u0070");
_fadba .Ref =_dcgea .Get ("\u0052\u0065\u0066");_fadba .MetaData =_dcgea .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_fadba .PieceInfo =_dcgea .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fadba .LastModified =_dcgea .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_fadba .StructParent =_dcgea .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fadba .StructParents =_dcgea .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fadba .OPI =_dcgea .Get ("\u004f\u0050\u0049");
_fadba .OC =_dcgea .Get ("\u004f\u0043");_fadba .Name =_dcgea .Get ("\u004e\u0061\u006d\u0065");_fadba .Stream =stream .Stream ;return _fadba ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _db .PdfObject ;Movie _db .PdfObject ;A _db .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efadg *PdfShadingType2 )ToPdfObject ()_db .PdfObject {_efadg .PdfShading .ToPdfObject ();_gdeff ,_bgffa :=_efadg .getShadingDict ();if _bgffa !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdeff ==nil {_gd .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _efadg .Coords !=nil {_gdeff .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_efadg .Coords );
};if _efadg .Domain !=nil {_gdeff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efadg .Domain );};if _efadg .Function !=nil {if len (_efadg .Function )==1{_gdeff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efadg .Function [0].ToPdfObject ());
}else {_dbee :=_db .MakeArray ();for _ ,_gdgea :=range _efadg .Function {_dbee .Append (_gdgea .ToPdfObject ());};_gdeff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbee );};};if _efadg .Extend !=nil {_gdeff .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_efadg .Extend );
};return _efadg ._eccbgb ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_edeg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _db .GetNumberAsFloat (_edeg .CapHeight );};func _fafag (_defaa *_db .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ccbg :=PdfShadingType5 {};_gdbbc :=_defaa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gdbbc ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gdbd ,_dbae :=_gdbbc .(*_db .PdfObjectInteger );if !_dbae {_gd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdbbc );
return nil ,_db .ErrTypeError ;};_ccbg .BitsPerCoordinate =_gdbd ;_gdbbc =_defaa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gdbbc ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gdbd ,_dbae =_gdbbc .(*_db .PdfObjectInteger );if !_dbae {_gd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gdbbc );
return nil ,_db .ErrTypeError ;};_ccbg .BitsPerComponent =_gdbd ;_gdbbc =_defaa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gdbbc ==nil {_gd .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_gdbd ,_dbae =_gdbbc .(*_db .PdfObjectInteger );if !_dbae {_gd .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gdbbc );
return nil ,_db .ErrTypeError ;};_ccbg .VerticesPerRow =_gdbd ;_gdbbc =_defaa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gdbbc ==nil {_gd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ccgff ,_dbae :=_gdbbc .(*_db .PdfObjectArray );if !_dbae {_gd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdbbc );
return nil ,_db .ErrTypeError ;};_ccbg .Decode =_ccgff ;if _gffga :=_defaa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gffga !=nil {_ccbg .Function =[]PdfFunction {};if _dbdf ,_bdfc :=_gffga .(*_db .PdfObjectArray );_bdfc {for _ ,_efdgg :=range _dbdf .Elements (){_cecg ,_ddgcf :=_ccee (_efdgg );
if _ddgcf !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddgcf );return nil ,_ddgcf ;};_ccbg .Function =append (_ccbg .Function ,_cecg );
};}else {_eaea ,_bfeee :=_ccee (_gffga );if _bfeee !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfeee );return nil ,_bfeee ;
};_ccbg .Function =append (_ccbg .Function ,_eaea );};};return &_ccbg ,nil ;};func (_bccb *PdfReader )newPdfActionGotoRFromDict (_cfca *_db .PdfObjectDictionary )(*PdfActionGoToR ,error ){_egeg ,_cggc :=_ebae (_cfca .Get ("\u0046"));if _cggc !=nil {return nil ,_cggc ;
};return &PdfActionGoToR {D :_cfca .Get ("\u0044"),NewWindow :_cfca .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_egeg },nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bgfdf *PdfShadingType1 )ToPdfObject ()_db .PdfObject {_bgfdf .PdfShading .ToPdfObject ();_cdebg ,_acddb :=_bgfdf .getShadingDict ();if _acddb !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bgfdf .Domain !=nil {_cdebg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgfdf .Domain );};if _bgfdf .Matrix !=nil {_cdebg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgfdf .Matrix );};if _bgfdf .Function !=nil {if len (_bgfdf .Function )==1{_cdebg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgfdf .Function [0].ToPdfObject ());
}else {_agfc :=_db .MakeArray ();for _ ,_eedbad :=range _bgfdf .Function {_agfc .Append (_eedbad .ToPdfObject ());};_cdebg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agfc );};};return _bgfdf ._eccbgb ;};func _ccbeg (_ddace *PdfPage ){_adfgcd :=_def .GetLicenseKey ();
if _adfgcd !=nil &&_adfgcd .IsLicensed (){return ;};_efdgaa :=_db .PdfObjectName ("\u0055\u0046\u0031");if !_ddace .Resources .HasFontByName (_efdgaa ){_ddace .Resources .SetFontByName (_efdgaa ,DefaultFont ().ToPdfObject ());};var _afbbc []string ;_afbbc =append (_afbbc ,"\u0071");
_afbbc =append (_afbbc ,"\u0042\u0054");_afbbc =append (_afbbc ,_g .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_efdgaa .String ()));_afbbc =append (_afbbc ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_afbbc =append (_afbbc ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_cdfag :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_afbbc =append (_afbbc ,_g .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cdfag ));_afbbc =append (_afbbc ,"\u0045\u0054");_afbbc =append (_afbbc ,"\u0051");_aegfgb :=_cf .Join (_afbbc ,"\u000a");_ddace .AddContentStreamByString (_aegfgb );_ddace .ToPdfObject ();
};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_aeba *_db .PdfIndirectObject ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_fafab :=&PdfPageResourcesColorspaces {};_fafab .Names =[]string {};_fafab .Colorspaces =map[string ]PdfColorspace {};_fafab ._dgdgd =&_db .PdfIndirectObject {};return _fafab ;};func _abecc (_dgace []rune ,_bbcaf map[rune ]int ,_ecfcf map[rune ]_acg .GID )*_db .PdfObjectArray {_degdd :=&_db .PdfObjectArray {};
for _cdge :=0;_cdge < len (_dgace );{_debc :=_bbcaf [_dgace [_cdge ]];_ccbfa :=_cdge ;for _cacaa :=_cdge +1;_cacaa < len (_dgace );_cacaa ++{_bacb :=_bbcaf [_dgace [_cacaa ]];if _debc ==_bacb {_ccbfa =_cacaa ;}else {break ;};};_agdbf :=_ecfcf [_dgace [_cdge ]];
_bbddb :=_ecfcf [_dgace [_ccbfa ]];_degdd .Append (_db .MakeInteger (int64 (_agdbf )));_degdd .Append (_db .MakeInteger (int64 (_bbddb )));_degdd .Append (_db .MakeInteger (int64 (_debc )));_cdge =_ccbfa +1;};return _degdd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_eabdd *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_adc :=NewPdfAnnotation ();_gea :=&PdfAnnotationMovie {};_gea .PdfAnnotation =_adc ;_adc .SetContext (_gea );return _gea ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_cgce :=&PdfAnnotation {};_cgce ._addd =_db .MakeIndirectObject (_db .MakeDict ());return _cgce ;};type pdfFontSimple struct{fontCommon ;_bgefb *_db .PdfIndirectObject ;_gfabb map[_fa .CharCode ]float64 ;_gffaf _fa .TextEncoder ;
_bagb _fa .TextEncoder ;_gdcce *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _db .PdfObject ;LastChar _db .PdfObject ;Widths _db .PdfObject ;Encoding _db .PdfObject ;_dccec *_acg .RuneCharSafeMap ;};func _eeab (_cddc _db .PdfObject )(*PdfColorspaceLab ,error ){_ggafb :=NewPdfColorspaceLab ();if _gbbfb ,_efda :=_cddc .(*_db .PdfIndirectObject );
_efda {_ggafb ._eadc =_gbbfb ;};_cddc =_db .TraceToDirectObject (_cddc );_aeef ,_fada :=_cddc .(*_db .PdfObjectArray );if !_fada {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aeef .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cddc =_db .TraceToDirectObject (_aeef .Get (0));_fdbde ,_fada :=_cddc .(*_db .PdfObjectName );if !_fada {return nil ,_g .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_fdbde !="\u004c\u0061\u0062"{return nil ,_g .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cddc =_db .TraceToDirectObject (_aeef .Get (1));_fbdb ,_fada :=_cddc .(*_db .PdfObjectDictionary );
if !_fada {return nil ,_g .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_cddc =_fbdb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_cddc =_db .TraceToDirectObject (_cddc );_gbbe ,_fada :=_cddc .(*_db .PdfObjectArray );if !_fada {return nil ,_g .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _gbbe .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gcfg ,_dggf :=_gbbe .GetAsFloat64Slice ();if _dggf !=nil {return nil ,_dggf ;};_ggafb .WhitePoint =_gcfg ;_cddc =_fbdb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cddc !=nil {_cddc =_db .TraceToDirectObject (_cddc );_cddg ,_ebac :=_cddc .(*_db .PdfObjectArray );
if !_ebac {return nil ,_g .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _cddg .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_ddb ,_ecef :=_cddg .GetAsFloat64Slice ();if _ecef !=nil {return nil ,_ecef ;};_ggafb .BlackPoint =_ddb ;};_cddc =_fbdb .Get ("\u0052\u0061\u006eg\u0065");if _cddc !=nil {_cddc =_db .TraceToDirectObject (_cddc );_babd ,_egedf :=_cddc .(*_db .PdfObjectArray );
if !_egedf {_gd .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_g .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _babd .Len ()!=4{_gd .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bbcf ,_dgcc :=_babd .GetAsFloat64Slice ();if _dgcc !=nil {return nil ,_dgcc ;};_ggafb .Range =_bbcf ;};return _ggafb ,nil ;};func (_eab *PdfReader )newPdfActionFromIndirectObject (_edc *_db .PdfIndirectObject )(*PdfAction ,error ){_cgg ,_edea :=_edc .PdfObject .(*_db .PdfObjectDictionary );
if !_edea {return nil ,_g .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_eab ._afdb .GetModelFromPrimitive (_cgg );model !=nil {_gfc ,_aa :=model .(*PdfAction );if !_aa {return nil ,_g .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _gfc ,nil ;};_cff :=&PdfAction {};_cff ._bcc =_edc ;_eab ._afdb .Register (_cgg ,_cff );if _gfg :=_cgg .Get ("\u0054\u0079\u0070\u0065");_gfg !=nil {_gedb ,_gec :=_gfg .(*_db .PdfObjectName );if !_gec {_gd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfg );
}else {if *_gedb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_gd .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gedb );
};_cff .Type =_gedb ;};};if _efg :=_cgg .Get ("\u004e\u0065\u0078\u0074");_efg !=nil {_cff .Next =_efg ;};if _edcd :=_cgg .Get ("\u0053");_edcd !=nil {_cff .S =_edcd ;};_bcdf ,_dgf :=_cff .S .(*_db .PdfObjectName );if !_dgf {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cff .S );
return nil ,_g .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cff .S );};_fbgd :=PdfActionType (_bcdf .String ());
switch _fbgd {case ActionTypeGoTo :_gdc ,_abc :=_eab .newPdfActionGotoFromDict (_cgg );if _abc !=nil {return nil ,_abc ;};_gdc .PdfAction =_cff ;_cff ._dbc =_gdc ;return _cff ,nil ;case ActionTypeGoToR :_cdb ,_bac :=_eab .newPdfActionGotoRFromDict (_cgg );
if _bac !=nil {return nil ,_bac ;};_cdb .PdfAction =_cff ;_cff ._dbc =_cdb ;return _cff ,nil ;case ActionTypeGoToE :_fga ,_bde :=_eab .newPdfActionGotoEFromDict (_cgg );if _bde !=nil {return nil ,_bde ;};_fga .PdfAction =_cff ;_cff ._dbc =_fga ;return _cff ,nil ;
case ActionTypeLaunch :_afc ,_fgf :=_eab .newPdfActionLaunchFromDict (_cgg );if _fgf !=nil {return nil ,_fgf ;};_afc .PdfAction =_cff ;_cff ._dbc =_afc ;return _cff ,nil ;case ActionTypeThread :_add ,_fbb :=_eab .newPdfActionThreadFromDict (_cgg );if _fbb !=nil {return nil ,_fbb ;
};_add .PdfAction =_cff ;_cff ._dbc =_add ;return _cff ,nil ;case ActionTypeURI :_fdda ,_eded :=_eab .newPdfActionURIFromDict (_cgg );if _eded !=nil {return nil ,_eded ;};_fdda .PdfAction =_cff ;_cff ._dbc =_fdda ;return _cff ,nil ;case ActionTypeSound :_ceaa ,_bab :=_eab .newPdfActionSoundFromDict (_cgg );
if _bab !=nil {return nil ,_bab ;};_ceaa .PdfAction =_cff ;_cff ._dbc =_ceaa ;return _cff ,nil ;case ActionTypeMovie :_cfed ,_fba :=_eab .newPdfActionMovieFromDict (_cgg );if _fba !=nil {return nil ,_fba ;};_cfed .PdfAction =_cff ;_cff ._dbc =_cfed ;return _cff ,nil ;
case ActionTypeHide :_abd ,_bca :=_eab .newPdfActionHideFromDict (_cgg );if _bca !=nil {return nil ,_bca ;};_abd .PdfAction =_cff ;_cff ._dbc =_abd ;return _cff ,nil ;case ActionTypeNamed :_fbf ,_cac :=_eab .newPdfActionNamedFromDict (_cgg );if _cac !=nil {return nil ,_cac ;
};_fbf .PdfAction =_cff ;_cff ._dbc =_fbf ;return _cff ,nil ;case ActionTypeSubmitForm :_afcd ,_afe :=_eab .newPdfActionSubmitFormFromDict (_cgg );if _afe !=nil {return nil ,_afe ;};_afcd .PdfAction =_cff ;_cff ._dbc =_afcd ;return _cff ,nil ;case ActionTypeResetForm :_eba ,_ffa :=_eab .newPdfActionResetFormFromDict (_cgg );
if _ffa !=nil {return nil ,_ffa ;};_eba .PdfAction =_cff ;_cff ._dbc =_eba ;return _cff ,nil ;case ActionTypeImportData :_eag ,_dec :=_eab .newPdfActionImportDataFromDict (_cgg );if _dec !=nil {return nil ,_dec ;};_eag .PdfAction =_cff ;_cff ._dbc =_eag ;
return _cff ,nil ;case ActionTypeSetOCGState :_abe ,_eae :=_eab .newPdfActionSetOCGStateFromDict (_cgg );if _eae !=nil {return nil ,_eae ;};_abe .PdfAction =_cff ;_cff ._dbc =_abe ;return _cff ,nil ;case ActionTypeRendition :_ffaa ,_acf :=_eab .newPdfActionRenditionFromDict (_cgg );
if _acf !=nil {return nil ,_acf ;};_ffaa .PdfAction =_cff ;_cff ._dbc =_ffaa ;return _cff ,nil ;case ActionTypeTrans :_fdca ,_aag :=_eab .newPdfActionTransFromDict (_cgg );if _aag !=nil {return nil ,_aag ;};_fdca .PdfAction =_cff ;_cff ._dbc =_fdca ;return _cff ,nil ;
case ActionTypeGoTo3DView :_bdc ,_fbe :=_eab .newPdfActionGoTo3DViewFromDict (_cgg );if _fbe !=nil {return nil ,_fbe ;};_bdc .PdfAction =_cff ;_cff ._dbc =_bdc ;return _cff ,nil ;case ActionTypeJavaScript :_dad ,_afef :=_eab .newPdfActionJavaScriptFromDict (_cgg );
if _afef !=nil {return nil ,_afef ;};_dad .PdfAction =_cff ;_cff ._dbc =_dad ;return _cff ,nil ;};_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fbgd );
return nil ,nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_ffef *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ffef .Base .GetNumComponents ();if N < 1{return Image {},_g .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_bcda :=_fg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._ededa ,img ._ffga );_ebfe :=_cga .NewReader (img .getBase ());_fbfg :=_cga .NewWriter (_bcda );var (_decd uint32 ;_dgaf int ;_dbdec error ;);for {_decd ,_dbdec =_ebfe .ReadSample ();
if _dbdec ==_dg .EOF {break ;}else if _dbdec !=nil {return img ,_dbdec ;};_dgaf =int (_decd );_gd .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_dgaf ,N ,len (_ffef ._afbe ));
if (_dgaf +1)*N > len (_ffef ._afbe ){_dgaf =len (_ffef ._afbe )/N -1;_gd .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_dgaf );if _dgaf < 0{_gd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _aeed :=_dgaf *N ;_aeed < (_dgaf +1)*N ;_aeed ++{if _dbdec =_fbfg .WriteSample (uint32 (_ffef ._afbe [_aeed ]));_dbdec !=nil {return img ,_dbdec ;};};};return _ffef .Base .ImageToRGB (_efdbf (&_bcda ));};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_db .PdfIndirectObject )*PdfOutlineItem {_gceag :=PdfOutlineItem {};_gceag ._fcbe =&_gceag ;_gceag .Title =_db .MakeString (title );_dbcd :=_db .MakeArray ();_dbcd .Append (page );_dbcd .Append (_db .MakeName ("\u0046\u0069\u0074"));
_gceag .Dest =_dbcd ;return &_gceag ;};

// B returns the value of the blue component of the color.
func (_effee *PdfColorDeviceRGB )B ()float64 {return _effee [2]};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fdfcb :=NewPdfAnnotation ();_fag :=&PdfAnnotationHighlight {};_fag .PdfAnnotation =_fdfcb ;_fag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdfcb .SetContext (_fag );return _fag ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_gfcbb :=NewPdfAnnotation ();_fegc :=&PdfAnnotationProjection {};_fegc .PdfAnnotation =_gfcbb ;_fegc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfcbb .SetContext (_fegc );return _fegc ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_dfafgb *PdfWriter )SetDocInfo (info *PdfInfo ){if _dfafgb .hasObject (_dfafgb ._dggb ){delete (_dfafgb ._fdef ,_dfafgb ._dggb );delete (_dfafgb ._ggacaa ,_dfafgb ._dggb );for _bfae ,_gebac :=range _dfafgb ._fadge {if _gebac ==_dfafgb ._dggb {copy (_dfafgb ._fadge [_bfae :],_dfafgb ._fadge [_bfae +1:]);
_dfafgb ._fadge [len (_dfafgb ._fadge )-1]=nil ;_dfafgb ._fadge =_dfafgb ._fadge [:len (_dfafgb ._fadge )-1];break ;};};};_gcae :=_db .PdfIndirectObject {};_gcae .PdfObject =info .ToPdfObject ();_dfafgb ._dggb =&_gcae ;_dfafgb .addObject (&_gcae );};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_db .PdfObjectStream )(*XObjectImage ,error ){_dgggg :=&XObjectImage {};_dgggg ._aebae =stream ;_ecdce :=*(stream .PdfObjectDictionary );_cfdaa ,_cffa :=_db .NewEncoderFromStream (stream );if _cffa !=nil {return nil ,_cffa ;
};_dgggg .Filter =_cfdaa ;if _bdcab :=_db .TraceToDirectObject (_ecdce .Get ("\u0057\u0069\u0064t\u0068"));_bdcab !=nil {_fcbbg ,_cbfag :=_bdcab .(*_db .PdfObjectInteger );if !_cbfag {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_abdeg :=int64 (*_fcbbg );_dgggg .Width =&_abdeg ;}else {return nil ,_f .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fgdf :=_db .TraceToDirectObject (_ecdce .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_fgdf !=nil {_dedcd ,_fgcgb :=_fgdf .(*_db .PdfObjectInteger );if !_fgcgb {return nil ,_f .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bgdb :=int64 (*_dedcd );
_dgggg .Height =&_bgdb ;}else {return nil ,_f .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _bgabb :=_db .TraceToDirectObject (_ecdce .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_bgabb !=nil {_aeagd ,_bcgdc :=NewPdfColorspaceFromPdfObject (_bgabb );if _bcgdc !=nil {return nil ,_bcgdc ;};_dgggg .ColorSpace =_aeagd ;}else {_gd .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_dgggg .ColorSpace =NewPdfColorspaceDeviceGray ();};if _cagdfc :=_db .TraceToDirectObject (_ecdce .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cagdfc !=nil {_dcfef ,_acfgd :=_cagdfc .(*_db .PdfObjectInteger );
if !_acfgd {return nil ,_f .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_caage :=int64 (*_dcfef );_dgggg .BitsPerComponent =&_caage ;};_dgggg .Intent =_ecdce .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_dgggg .ImageMask =_ecdce .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dgggg .Mask =_ecdce .Get ("\u004d\u0061\u0073\u006b");_dgggg .Decode =_ecdce .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dgggg .Interpolate =_ecdce .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_dgggg .Alternatives =_ecdce .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dgggg .SMask =_ecdce .Get ("\u0053\u004d\u0061s\u006b");_dgggg .SMaskInData =_ecdce .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_dgggg .Matte =_ecdce .Get ("\u004d\u0061\u0074t\u0065");_dgggg .Name =_ecdce .Get ("\u004e\u0061\u006d\u0065");_dgggg .StructParent =_ecdce .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dgggg .ID =_ecdce .Get ("\u0049\u0044");
_dgggg .OPI =_ecdce .Get ("\u004f\u0050\u0049");_dgggg .Metadata =_ecdce .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dgggg .OC =_ecdce .Get ("\u004f\u0043");_dgggg .Stream =stream .Stream ;return _dgggg ,nil ;};

// PdfVersion returns version of the PDF file.
func (_cgggbe *PdfReader )PdfVersion ()_db .Version {return _cgggbe ._ceaabg .PdfVersion ()};

// ToPdfObject returns the PDF representation of the pattern.
func (_abee *PdfPattern )ToPdfObject ()_db .PdfObject {_gdacb :=_abee .getDict ();_gdacb .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gdacb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_db .MakeInteger (_abee .PatternType ));
return _abee ._afae ;};

// ToPdfObject returns the PDF representation of the function.
func (_ecgdd *PdfFunctionType0 )ToPdfObject ()_db .PdfObject {if _ecgdd ._afbcg ==nil {_ecgdd ._afbcg =&_db .PdfObjectStream {};};_ddec :=_db .MakeDict ();_ddec .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_db .MakeInteger (0));
_gbfca :=&_db .PdfObjectArray {};for _ ,_defe :=range _ecgdd .Domain {_gbfca .Append (_db .MakeFloat (_defe ));};_ddec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbfca );_gegece :=&_db .PdfObjectArray {};for _ ,_fbcb :=range _ecgdd .Range {_gegece .Append (_db .MakeFloat (_fbcb ));
};_ddec .Set ("\u0052\u0061\u006eg\u0065",_gegece );_fdbg :=&_db .PdfObjectArray {};for _ ,_edfb :=range _ecgdd .Size {_fdbg .Append (_db .MakeInteger (int64 (_edfb )));};_ddec .Set ("\u0053\u0069\u007a\u0065",_fdbg );_ddec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_db .MakeInteger (int64 (_ecgdd .BitsPerSample )));
if _ecgdd .Order !=1{_ddec .Set ("\u004f\u0072\u0064e\u0072",_db .MakeInteger (int64 (_ecgdd .Order )));};_ddec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_db .MakeInteger (int64 (len (_ecgdd ._decda ))));_ecgdd ._afbcg .Stream =_ecgdd ._decda ;_ecgdd ._afbcg .PdfObjectDictionary =_ddec ;
return _ecgdd ._afbcg ;};

// ToPdfObject implements interface PdfModel.
func (_daf *PdfBorderStyle )ToPdfObject ()_db .PdfObject {_dcbc :=_db .MakeDict ();if _daf ._bfe !=nil {if _dfab ,_ega :=_daf ._bfe .(*_db .PdfIndirectObject );_ega {_dfab .PdfObject =_dcbc ;};};_dcbc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _daf .W !=nil {_dcbc .Set ("\u0057",_db .MakeFloat (*_daf .W ));};if _daf .S !=nil {_dcbc .Set ("\u0053",_db .MakeName (_daf .S .GetPdfName ()));};if _daf .D !=nil {_dcbc .Set ("\u0044",_db .MakeArrayFromIntegers (*_daf .D ));};if _daf ._bfe !=nil {return _daf ._bfe ;
};return _dcbc ;};func (_bdddg *LTV )enable (_defba ,_bdgga []*_b .Certificate ,_cagdf string )error {_gbfg ,_gdfca ,_daec :=_bdddg .buildCertChain (_defba ,_bdgga );if _daec !=nil {return _daec ;};_fgddab ,_daec :=_bdddg .getCerts (_gbfg );if _daec !=nil {return _daec ;
};_bbeed ,_daec :=_bdddg .getOCSPs (_gbfg ,_gdfca );if _daec !=nil {return _daec ;};_dbbgf ,_daec :=_bdddg .getCRLs (_gbfg );if _daec !=nil {return _daec ;};_adafe :=_bdddg ._ebaef ;_beaa ,_daec :=_adafe .addCerts (_fgddab );if _daec !=nil {return _daec ;
};_aaadd ,_daec :=_adafe .addOCSPs (_bbeed );if _daec !=nil {return _daec ;};_dcgge ,_daec :=_adafe .addCRLs (_dbbgf );if _daec !=nil {return _daec ;};if _cagdf !=""{_adafe .VRI [_cagdf ]=&VRI {Cert :_beaa ,OCSP :_aaadd ,CRL :_dcgge };};_bdddg ._ceeda .SetDSS (_adafe );
return nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_ccdb *PdfWriter )writeString (_gbfgd string ){if _ccdb ._aedbc !=nil {return ;};_acea ,_ecedb :=_ccdb ._decf .WriteString (_gbfgd );_ccdb ._eacdc +=int64 (_acea );_ccdb ._aedbc =_ecedb ;};

// ToInteger convert to an integer format.
func (_gdeb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_ecdg :=_ae .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_ecdg *_gdeb .C ()),uint32 (_ecdg *_gdeb .M ()),uint32 (_ecdg *_gdeb .Y ()),uint32 (_ecdg *_gdeb .K ())};};

// String returns a string that describes `font`.
func (_ddfd *PdfFont )String ()string {_bggd :="";if _ddfd ._fdcca .Encoder ()!=nil {_bggd =_ddfd ._fdcca .Encoder ().String ();};return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ddfd ._fdcca ,_ddfd .baseFields ().coreString (),_bggd );
};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gcfe *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cddcg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_baca :=&PdfColorPattern {};_gfgfg ,_acefb :=objects [len (objects )-1].(*_db .PdfObjectName );if !_acefb {_gd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_baca .PatternName =*_gfgfg ;if len (objects )> 1{_fgab :=objects [0:len (objects )-1];if _cddcg .UnderlyingCS ==nil {_gd .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_f .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_gafc ,_eddd :=_cddcg .UnderlyingCS .ColorFromPdfObjects (_fgab );if _eddd !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_eddd );
return nil ,_eddd ;};_baca .Color =_gafc ;};return _baca ,nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_gbaec *PdfReader )GetOCProperties ()(_db .PdfObject ,error ){_eeffg :=_gbaec ._ebfee ;_cecee :=_eeffg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cecee =_db .ResolveReference (_cecee );if !_gbaec ._cbfe {_ecaee :=_gbaec .traverseObjectData (_cecee );
if _ecaee !=nil {return nil ,_ecaee ;};};return _cecee ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_fgae *PdfField )SetContext (ctx PdfModel ){_fgae ._effcdf =ctx };

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _db .PdfObject ;Q _db .PdfObject ;RC _db .PdfObject ;DS _db .PdfObject ;CL _db .PdfObject ;IT _db .PdfObject ;BE _db .PdfObject ;RD _db .PdfObject ;BS _db .PdfObject ;LE _db .PdfObject ;
};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_efgf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_efgf .N =N ;return _efgf ,nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _db .PdfObject ;};

// C returns the value of the C component of the color.
func (_egdda *PdfColorCalRGB )C ()float64 {return _egdda [2]};

// GetNumComponents returns the number of color components (1 for Separation).
func (_befdd *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ccdf *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_ebdg :=_cga .NewReader (img .getBase ());_abfa :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dfge :=_cga .NewWriter (_abfa );
_cgdc :=_ae .Pow (2,float64 (img .BitsPerComponent ))-1;_dddf :=make ([]uint32 ,3);var (_ffaac uint32 ;ANorm ,X ,Y ,Z ,_edgf ,_eacd ,_eaag float64 ;_ggga error ;);for {_ffaac ,_ggga =_ebdg .ReadSample ();if _ggga ==_dg .EOF {break ;}else if _ggga !=nil {return img ,_ggga ;
};ANorm =float64 (_ffaac )/_cgdc ;X =_ccdf .WhitePoint [0]*_ae .Pow (ANorm ,_ccdf .Gamma );Y =_ccdf .WhitePoint [1]*_ae .Pow (ANorm ,_ccdf .Gamma );Z =_ccdf .WhitePoint [2]*_ae .Pow (ANorm ,_ccdf .Gamma );_edgf =3.240479*X +-1.537150*Y +-0.498535*Z ;_eacd =-0.969256*X +1.875992*Y +0.041556*Z ;
_eaag =0.055648*X +-0.204043*Y +1.057311*Z ;_edgf =_ae .Min (_ae .Max (_edgf ,0),1.0);_eacd =_ae .Min (_ae .Max (_eacd ,0),1.0);_eaag =_ae .Min (_ae .Max (_eaag ,0),1.0);_dddf [0]=uint32 (_edgf *_cgdc );_dddf [1]=uint32 (_eacd *_cgdc );_dddf [2]=uint32 (_eaag *_cgdc );
if _ggga =_dfge .WriteSamples (_dddf );_ggga !=nil {return img ,_ggga ;};};return _efdbf (&_abfa ),nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_fadc OutlineDest )ToPdfObject ()_db .PdfObject {if (_fadc .PageObj ==nil &&_fadc .Page < 0)||_fadc .Mode ==""{return _db .MakeNull ();};_gcef :=_db .MakeArray ();if _fadc .PageObj !=nil {_gcef .Append (_fadc .PageObj );}else {_gcef .Append (_db .MakeInteger (_fadc .Page ));
};_gcef .Append (_db .MakeName (_fadc .Mode ));switch _fadc .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gcef .Append (_db .MakeFloat (_fadc .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gcef .Append (_db .MakeFloat (_fadc .X ));
case "\u0058\u0059\u005a":_gcef .Append (_db .MakeFloat (_fadc .X ));_gcef .Append (_db .MakeFloat (_fadc .Y ));_gcef .Append (_db .MakeFloat (_fadc .Zoom ));default:_gcef .Set (1,_db .MakeName ("\u0046\u0069\u0074"));};return _gcef ;};func (_gfcad *Image )resampleLowBits (_bbfag []uint32 ){_fcbg :=_fg .BytesPerLine (int (_gfcad .Width ),int (_gfcad .BitsPerComponent ),_gfcad .ColorComponents );
_dedae :=make ([]byte ,_gfcad .ColorComponents *_fcbg *int (_gfcad .Height ));_fdagg :=int (_gfcad .BitsPerComponent )*_gfcad .ColorComponents *int (_gfcad .Width );_egdbb :=uint8 (8);var (_afcc ,_daed int ;_caga uint32 ;);for _fceg :=0;_fceg < int (_gfcad .Height );
_fceg ++{_daed =_fceg *_fcbg ;for _aggc :=0;_aggc < _fdagg ;_aggc ++{_caga =_bbfag [_afcc ];_egdbb -=uint8 (_gfcad .BitsPerComponent );_dedae [_daed ]|=byte (_caga )<<_egdbb ;if _egdbb ==0{_egdbb =8;_daed ++;};_afcc ++;};};_gfcad .Data =_dedae ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dfdce *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dfdce .Alternate ==nil {_gd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dfdce .N ==1{_gd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fggd :=NewPdfColorspaceDeviceGray ();return _fggd .ImageToRGB (img );}else if _dfdce .N ==3{_gd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _dfdce .N ==4{_gd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fadaf :=NewPdfColorspaceDeviceCMYK ();return _fadaf .ImageToRGB (img );}else {return img ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dfdce );
_dcaf ,_gbadb :=_dfdce .Alternate .ImageToRGB (img );_gd .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_gd .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_dcaf );
return _dcaf ,_gbadb ;};

// GetCerts returns the signature certificate chain.
func (_gfafd *PdfSignature )GetCerts ()([]*_b .Certificate ,error ){var _ddaad []func ()([]*_b .Certificate ,error );switch _bcedca ,_ :=_db .GetNameVal (_gfafd .SubFilter );_bcedca {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_ddaad =append (_ddaad ,_gfafd .extractChainFromPKCS7 ,_gfafd .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_ddaad =append (_ddaad ,_gfafd .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_ddaad =append (_ddaad ,_gfafd .extractChainFromPKCS7 );
default:return nil ,_g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_bcedca );};for _ ,_eebbg :=range _ddaad {_caedc ,_agaac :=_eebbg ();if _agaac !=nil {return nil ,_agaac ;
};if len (_caedc )> 0{return _caedc ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_ccba *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_gcbf ,_badd :=color .(*PdfColorDeviceCMYK );if !_badd {_gd .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfag :=_gcbf .C ();_dcgad :=_gcbf .M ();_dacd :=_gcbf .Y ();_bdeg :=_gcbf .K ();_cfag =_cfag *(1-_bdeg )+_bdeg ;_dcgad =_dcgad *(1-_bdeg )+_bdeg ;
_dacd =_dacd *(1-_bdeg )+_bdeg ;_deac :=1-_cfag ;_feba :=1-_dcgad ;_gabgb :=1-_dacd ;return NewPdfColorDeviceRGB (_deac ,_feba ,_gabgb ),nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_fadae *pdfFontSimple )ToPdfObject ()_db .PdfObject {if _fadae ._bgefb ==nil {_fadae ._bgefb =&_db .PdfIndirectObject {};};_fadeg :=_fadae .baseFields ().asPdfObjectDictionary ("");_fadae ._bgefb .PdfObject =_fadeg ;if _fadae .FirstChar !=nil {_fadeg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fadae .FirstChar );
};if _fadae .LastChar !=nil {_fadeg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fadae .LastChar );};if _fadae .Widths !=nil {_fadeg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fadae .Widths );};if _fadae .Encoding !=nil {_fadeg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fadae .Encoding );
}else if _fadae ._gffaf !=nil {_gbffg :=_fadae ._gffaf .ToPdfObject ();if _gbffg !=nil {_fadeg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbffg );};};return _fadae ._bgefb ;};func _eaga (_fbbd _db .PdfObject ,_bbcd *fontCommon )(*_dc .CMap ,error ){_fgce ,_ffefc :=_db .GetStream (_fbbd );
if !_ffefc {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_fbbd );
return nil ,_db .ErrTypeError ;};_aefcb ,_bgfba :=_db .DecodeStream (_fgce );if _bgfba !=nil {return nil ,_bgfba ;};_faba ,_bgfba :=_dc .LoadCmapFromData (_aefcb ,!_bbcd .isCIDFont ());if _bgfba !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fgce .ObjectNumber ,_bgfba );
};return _faba ,_bgfba ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ecb :=NewPdfAnnotation ();_cefe :=&PdfAnnotationCaret {};_cefe .PdfAnnotation =_ecb ;_cefe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecb .SetContext (_cefe );return _cefe ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_cffe *PdfWriter )SetOpenAction (dest _db .PdfObject )error {if dest ==nil ||_db .IsNullObject (dest ){return nil ;};_cffe ._egdad .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _cffe .addObjects (dest );};

// ToPdfObject implements interface PdfModel.
func (_fda *PdfActionSetOCGState )ToPdfObject ()_db .PdfObject {_fda .PdfAction .ToPdfObject ();_fbg :=_fda ._bcc ;_dag :=_fbg .PdfObject .(*_db .PdfObjectDictionary );_dag .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeSetOCGState )));_dag .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fda .State );
_dag .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_fda .PreserveRB );return _fbg ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _db .PdfObject ;IC _db .PdfObject ;RO _db .PdfObject ;OverlayText _db .PdfObject ;Repeat _db .PdfObject ;DA _db .PdfObject ;Q _db .PdfObject ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fefcc :=&PdfColorspaceCalRGB {};_fefcc .BlackPoint =[]float64 {0.0,0.0,0.0};_fefcc .Gamma =[]float64 {1.0,1.0,1.0};_fefcc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fefcc ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_bbede *PdfPage )AddExtGState (name _db .PdfObjectName ,egs *_db .PdfObjectDictionary )error {if _bbede .Resources ==nil {_bbede .Resources =NewPdfPageResources ();};if _bbede .Resources .ExtGState ==nil {_bbede .Resources .ExtGState =_db .MakeDict ();
};_debgeb ,_acge :=_db .TraceToDirectObject (_bbede .Resources .ExtGState ).(*_db .PdfObjectDictionary );if !_acge {_gd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_db .TraceToDirectObject (_bbede .Resources .ExtGState ));
return _f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_debgeb .Set (name ,egs );return nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gdge *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gdge .Base ==nil {return nil ,_f .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gdge .Base .ColorToRGB (color );};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_cafcg *PdfFieldSignature )ToPdfObject ()_db .PdfObject {if _cafcg .PdfAnnotationWidget !=nil {_cafcg .PdfAnnotationWidget .ToPdfObject ();};_cafcg .PdfField .ToPdfObject ();_eecc :=_cafcg ._fbeg ;_fcge :=_eecc .PdfObject .(*_db .PdfObjectDictionary );
_fcge .SetIfNotNil ("\u0046\u0054",_db .MakeName ("\u0053\u0069\u0067"));_fcge .SetIfNotNil ("\u004c\u006f\u0063\u006b",_cafcg .Lock );_fcge .SetIfNotNil ("\u0053\u0056",_cafcg .SV );if _cafcg .V !=nil {_fcge .SetIfNotNil ("\u0056",_cafcg .V .ToPdfObject ());
};return _eecc ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_db .PdfObjectInteger ;TilingType *_db .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_db .PdfObjectFloat ;YStep *_db .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_db .PdfObjectArray ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_db .PdfObject ,error );};

// GetContainingPdfObject implements interface PdfModel.
func (_ddddd *PdfSignature )GetContainingPdfObject ()_db .PdfObject {return _ddddd ._adaged };func (_cfeg *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dbdc *DSS )ToPdfObject ()_db .PdfObject {_eaggd :=_dbdc ._fdcg .PdfObject .(*_db .PdfObjectDictionary );_eaggd .Clear ();_cdac :=_db .MakeDict ();for _decbd ,_ddeg :=range _dbdc .VRI {_cdac .Set (*_db .MakeName (_decbd ),_ddeg .ToPdfObject ());};
_eaggd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_gdce (_dbdc .Certs ));_eaggd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_gdce (_dbdc .OCSPs ));_eaggd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_gdce (_dbdc .CRLs ));_eaggd .Set ("\u0056\u0052\u0049",_cdac );
return _dbdc ._fdcg ;};func _adcaa (_caged _db .PdfObject ,_fbfd bool )(*PdfFont ,error ){_ccaf ,_bdfb ,_bcec :=_bddbf (_caged );if _bcec !=nil {if _bcec ==ErrType1CFontNotSupported {_ecbeb ,_cecb :=_bfda (_ccaf ,_bdfb ,nil );if _cecb !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bdfb ,_cecb );
return nil ,_bcec ;};return &PdfFont {_fdcca :_ecbeb },_bcec ;};return nil ,_bcec ;};_dgeg :=&PdfFont {};switch _bdfb ._cdbfb {case "\u0054\u0079\u0070e\u0030":if !_fbfd {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bdfb );
return nil ,_f .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_acdee ,_bcdg :=_gdcfb (_ccaf ,_bdfb );if _bcdg !=nil {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bdfb ,_bcdg );
return nil ,_bcdg ;};_dgeg ._fdcca =_acdee ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gddg *pdfFontSimple ;_feed ,_bgdcb :=_acg .NewStdFontByName (_acg .StdFontName (_bdfb ._abeff ));
if _bgdcb {_afad :=_fbcgc (_feed );_dgeg ._fdcca =&_afad ;_fead :=_db .TraceToDirectObject (_afad .ToPdfObject ());_dgge ,_gecec ,_dcca :=_bddbf (_fead );if _dcca !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bdfb ,_afad );
return nil ,_dcca ;};for _ ,_dacb :=range _ccaf .Keys (){_dgge .Set (_dacb ,_ccaf .Get (_dacb ));};_gddg ,_dcca =_bfda (_dgge ,_gecec ,_afad ._bagb );if _dcca !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bdfb ,_afad );
return nil ,_dcca ;};_gddg ._gfabb =_afad ._gfabb ;_gddg ._dccec =_afad ._dccec ;}else {_gddg ,_bcec =_bfda (_ccaf ,_bdfb ,nil );if _bcec !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bdfb ,_bcec );
return nil ,_bcec ;};};_bcec =_gddg .addEncoding ();if _bcec !=nil {return nil ,_bcec ;};if _bgdcb {_gddg .updateStandard14Font ();};if _bgdcb &&_gddg ._gffaf ==nil &&_gddg ._bagb ==nil {_gd .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gddg );
_gd .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_feed );};if len (_gddg ._gfabb )==0{_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gddg );};_dgeg ._fdcca =_gddg ;
case "\u0054\u0079\u0070e\u0033":_gfbgf ,_fdga :=_ggbea (_ccaf ,_bdfb );if _fdga !=nil {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fdga );
return nil ,_fdga ;};_dgeg ._fdcca =_gfbgf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_baaf ,_ccbbd :=_dgbc (_ccaf ,_bdfb );if _ccbbd !=nil {_gd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ccbbd );
return nil ,_ccbbd ;};_dgeg ._fdcca =_baaf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_efac ,_cdee :=_debgf (_ccaf ,_bdfb );if _cdee !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bdfb ,_cdee );
return nil ,_cdee ;};_dgeg ._fdcca =_efac ;default:_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bdfb );
return nil ,_g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bdfb );};return _dgeg ,nil ;};const (FieldFlagClear FieldFlag =0;
FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);
FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);
FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););func _fbbb (_aegf *_db .PdfObjectDictionary )bool {for _ ,_ccfbb :=range _aegf .Keys (){if _ ,_bdab :=_cafe [_ccfbb .String ()];
_bdab {return true ;};};return false ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bcgg *PdfPage )SetContentStreams (cStreams []string ,encoder _db .StreamEncoder )error {if len (cStreams )==0{_bcgg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_db .NewRawEncoder ();};var _bdaa []*_db .PdfObjectStream ;for _ ,_adfe :=range cStreams {_bdcaf :=&_db .PdfObjectStream {};
_ggeca :=encoder .MakeStreamDict ();_ggcbb ,_gdafg :=encoder .EncodeBytes ([]byte (_adfe ));if _gdafg !=nil {return _gdafg ;};_ggeca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_db .MakeInteger (int64 (len (_ggcbb ))));_bdcaf .PdfObjectDictionary =_ggeca ;
_bdcaf .Stream =_ggcbb ;_bdaa =append (_bdaa ,_bdcaf );};if len (_bdaa )==1{_bcgg .Contents =_bdaa [0];}else {_dabdd :=_db .MakeArray ();for _ ,_becfd :=range _bdaa {_dabdd .Append (_becfd );};_bcgg .Contents =_dabdd ;};return nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _db .PdfObject ;Flags _db .PdfObject ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_efgb *PdfPageResources )HasColorspaceByName (keyName _db .PdfObjectName )bool {_ecabba ,_defeg :=_efgb .GetColorspaces ();if _defeg !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_defeg );
return false ;};if _ecabba ==nil {return false ;};_ ,_cffdf :=_ecabba .Colorspaces [string (keyName )];return _cffdf ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_adbdd *PdfColorspaceLab )DecodeArray ()[]float64 {_egca :=[]float64 {0,100};if _adbdd .Range !=nil &&len (_adbdd .Range )==4{_egca =append (_egca ,_adbdd .Range ...);}else {_egca =append (_egca ,-100,100,-100,100);};return _egca ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_cabge *PdfColorspaceICCBased )ToPdfObject ()_db .PdfObject {_bbbc :=&_db .PdfObjectArray {};_bbbc .Append (_db .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ceca *_db .PdfObjectStream ;if _cabge ._ccfbc !=nil {_ceca =_cabge ._ccfbc ;
}else {_ceca =&_db .PdfObjectStream {};};_afca :=_db .MakeDict ();_afca .Set ("\u004e",_db .MakeInteger (int64 (_cabge .N )));if _cabge .Alternate !=nil {_afca .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_cabge .Alternate .ToPdfObject ());};if _cabge .Metadata !=nil {_afca .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cabge .Metadata );
};if _cabge .Range !=nil {var _dafc []_db .PdfObject ;for _ ,_bdfab :=range _cabge .Range {_dafc =append (_dafc ,_db .MakeFloat (_bdfab ));};_afca .Set ("\u0052\u0061\u006eg\u0065",_db .MakeArray (_dafc ...));};_afca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_db .MakeInteger (int64 (len (_cabge .Data ))));
_ceca .Stream =_cabge .Data ;_ceca .PdfObjectDictionary =_afca ;_bbbc .Append (_ceca );if _cabge ._gdab !=nil {_cabge ._gdab .PdfObject =_bbbc ;return _cabge ._gdab ;};return _bbbc ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _db .PdfObject ;NewWindow _db .PdfObject ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_ffgfd *LTV )Enable (sig *PdfSignature ,extraCerts []*_b .Certificate )error {if _cbfgcb :=_ffgfd .validateSig (sig );_cbfgcb !=nil {return _cbfgcb ;};_fdacd ,_cfgfg :=_ffgfd .generateVRIKey (sig );if _cfgfg !=nil {return _cfgfg ;};if _ ,_gafe :=_ffgfd ._ebaef .VRI [_fdacd ];
_gafe &&_ffgfd .SkipExisting {return nil ;};_gfbfc ,_cfgfg :=sig .GetCerts ();if _cfgfg !=nil {return _cfgfg ;};return _ffgfd .enable (_gfbfc ,extraCerts ,_fdacd );};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _db .StreamEncoder ;Intent _db .PdfObject ;ImageMask _db .PdfObject ;Mask _db .PdfObject ;Matte _db .PdfObject ;Decode _db .PdfObject ;Interpolate _db .PdfObject ;Alternatives _db .PdfObject ;
SMask _db .PdfObject ;SMaskInData _db .PdfObject ;Name _db .PdfObject ;StructParent _db .PdfObject ;ID _db .PdfObject ;OPI _db .PdfObject ;Metadata _db .PdfObject ;OC _db .PdfObject ;Stream []byte ;_aebae *_db .PdfObjectStream ;};func (_dfae *PdfAppender )replaceObject (_gcba ,_adae _db .PdfObject ){switch _eeda :=_gcba .(type ){case *_db .PdfIndirectObject :_dfae ._dage [_adae ]=_eeda .ObjectNumber ;
case *_db .PdfObjectStream :_dfae ._dage [_adae ]=_eeda .ObjectNumber ;};};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gda .Permissions ;Algorithm EncryptionAlgorithm ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_gdfcd ,_cbede :=_acg .NewStdFontByName (HelveticaName );if !_cbede {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_ebgf :=_fbcgc (_gdfcd );return &PdfFont {_fdcca :&_ebgf };};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ffc :=NewPdfAction ();_bbb :=&PdfActionURI {};_bbb .PdfAction =_ffc ;_ffc .SetContext (_bbb );return _bbb ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dagbb *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_gfcc byte )byte ;

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_db .PdfObjectString ;Q *_db .PdfObjectInteger ;DS *_db .PdfObjectString ;RV _db .PdfObject ;MaxLen *_db .PdfObjectInteger ;};func _cgeb (_aegfg _dg .ReadSeeker ,_bafed *ReaderOpts ,_bbeea bool ,_dfggg string )(*PdfReader ,error ){if _bafed ==nil {_bafed =NewReaderOpts ();
};_cfedc :=&PdfReader {_dbfcgb :_aegfg ,_aebfd :map[_db .PdfObject ]struct{}{},_afdb :_bebc (),_cbfe :_bafed .LazyLoad };_cedc ,_efged :=_gfff ("\u0072");if _efged !=nil {return nil ,_efged ;};_efged =_def .Track (_cedc ,_dfggg );if _efged !=nil {return nil ,_efged ;
};_cfedc ._fecge =_cedc ;_gaae ,_efged :=_db .NewParser (_aegfg );if _efged !=nil {return nil ,_efged ;};_cfedc ._ceaabg =_gaae ;_egff ,_efged :=_cfedc .IsEncrypted ();if _efged !=nil {return nil ,_efged ;};if !_egff {_efged =_cfedc .loadStructure ();if _efged !=nil {return nil ,_efged ;
};}else if _bbeea {_aggg ,_bede :=_cfedc .Decrypt ([]byte (_bafed .Password ));if _bede !=nil {return nil ,_bede ;};if !_aggg {return nil ,_f .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _cfedc ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_baga *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_f .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_ecdb ,_efc :=_fg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ededa ,img ._ffga );if _efc !=nil {return img ,_efc ;};_cdfe ,_efc :=_fg .NRGBAConverter .Convert (_ecdb );if _efc !=nil {return img ,_efc ;
};_ffadg :=_efdbf (_cdfe .Base ());_gd .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_gd .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_gd .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ffadg .Data );
_gd .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ffadg );return _ffadg ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func _fade (_fdaed _db .PdfObject )(*PdfBorderStyle ,error ){_cdaa :=&PdfBorderStyle {};_cdaa ._bfe =_fdaed ;var _defb *_db .PdfObjectDictionary ;
_fdaed =_db .TraceToDirectObject (_fdaed );_defb ,_edad :=_fdaed .(*_db .PdfObjectDictionary );if !_edad {return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _geec :=_defb .Get ("\u0054\u0079\u0070\u0065");_geec !=nil {_acec ,_eeae :=_geec .(*_db .PdfObjectName );
if !_eeae {_gd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_geec );
}else {if *_acec !="\u0042\u006f\u0072\u0064\u0065\u0072"{_gd .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_acec );};};};if _eecaf :=_defb .Get ("\u0057");
_eecaf !=nil {_bbbg ,_agcc :=_db .GetNumberAsFloat (_eecaf );if _agcc !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_agcc );return nil ,_agcc ;};_cdaa .W =&_bbbg ;
};if _bgbd :=_defb .Get ("\u0053");_bgbd !=nil {_ccbc ,_dfgf :=_bgbd .(*_db .PdfObjectName );if !_dfgf {return nil ,_f .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _bfcb BorderStyle ;switch *_ccbc {case "\u0053":_bfcb =BorderStyleSolid ;case "\u0044":_bfcb =BorderStyleDashed ;case "\u0042":_bfcb =BorderStyleBeveled ;case "\u0049":_bfcb =BorderStyleInset ;case "\u0055":_bfcb =BorderStyleUnderline ;default:_gd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ccbc );
return nil ,_f .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cdaa .S =&_bfcb ;};if _eefe :=_defb .Get ("\u0044");_eefe !=nil {_ggcb ,_bfcg :=_eefe .(*_db .PdfObjectArray );
if !_bfcg {_gd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_eefe );return nil ,_f .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_cgef ,_dab :=_ggcb .ToIntegerArray ();if _dab !=nil {_gd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dab );
return nil ,_dab ;};_cdaa .D =&_cgef ;};return _cdaa ,nil ;};func _gdcfa (_ggdf *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ceeeg ,_ffbg :=_db .GetDict (_ggdf .AP );if !_ffbg {return nil ,nil ,_f .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _ceeeg ==nil {return nil ,nil ,nil ;};_gdag ,_ffbg :=_db .GetArray (_ggdf .Rect );if !_ffbg ||_gdag .Len ()!=4{return nil ,nil ,_f .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_adgad ,_bfba :=NewPdfRectangle (*_gdag );
if _bfba !=nil {return nil ,nil ,_bfba ;};_fdade :=_db .TraceToDirectObject (_ceeeg .Get ("\u004e"));switch _ccddd :=_fdade .(type ){case *_db .PdfObjectStream :_gceaa :=_ccddd ;_bfce ,_fcgaa :=NewXObjectFormFromStream (_gceaa );return _bfce ,_adgad ,_fcgaa ;
case *_db .PdfObjectDictionary :_bbca :=_ccddd ;_efebf ,_dgfa :=_db .GetName (_ggdf .AS );if !_dgfa {return nil ,nil ,nil ;};if _bbca .Get (*_efebf )==nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_ffgc ,_dgfa :=_db .GetStream (_bbca .Get (*_efebf ));if !_dgfa {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_efebf );
return nil ,nil ,_f .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dbgfc ,_fffe :=NewXObjectFormFromStream (_ffgc );return _dbgfc ,_adgad ,_fffe ;};_gd .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fdade );
return nil ,nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_agdg *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_fbcf fontCommon )fontFlags ()int {if _fbcf ._dfff ==nil {return 0;};return _fbcf ._dfff ._dcddb ;};func (_dcgf *PdfReader )newPdfAnnotationTrapNetFromDict (_cbga *_db .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bacf :=PdfAnnotationTrapNet {};
return &_bacf ,nil ;};func (_cde *PdfReader )newPdfAnnotationWidgetFromDict (_bbad *_db .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_aaa :=PdfAnnotationWidget {};_aaa .H =_bbad .Get ("\u0048");_aaa .MK =_bbad .Get ("\u004d\u004b");_aaa .A =_bbad .Get ("\u0041");
_aaa .AA =_bbad .Get ("\u0041\u0041");_aaa .BS =_bbad .Get ("\u0042\u0053");_aaa .Parent =_bbad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_aaa ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_dgbgc *XObjectForm )SetContentStream (content []byte ,encoder _db .StreamEncoder )error {_abaae :=content ;if encoder ==nil {if _dgbgc .Filter !=nil {encoder =_dgbgc .Filter ;}else {encoder =_db .NewRawEncoder ();};};_deged ,_feefe :=encoder .EncodeBytes (_abaae );
if _feefe !=nil {return _feefe ;};_abaae =_deged ;_dgbgc .Stream =_abaae ;_dgbgc .Filter =encoder ;return nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_gceea *PdfAcroForm )AllFields ()[]*PdfField {if _gceea ==nil {return nil ;};var _gfbf []*PdfField ;if _gceea .Fields !=nil {for _ ,_fbafe :=range *_gceea .Fields {_gfbf =append (_gfbf ,_bagbf (_fbafe )...);};};return _gfbf ;};

// GetXObjectByName gets XObject by name.
func (_dcdfe *PdfPage )GetXObjectByName (name _db .PdfObjectName )(_db .PdfObject ,bool ){_dabceb ,_cefeb :=_dcdfe .Resources .XObject .(*_db .PdfObjectDictionary );if !_cefeb {return nil ,false ;};if _dfcgb :=_dabceb .Get (name );_dfcgb !=nil {return _dfcgb ,true ;
};return nil ,false ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _db .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _db .PdfObject ;Contents _db .PdfObject ;
Rotate *int64 ;Group _db .PdfObject ;Thumb _db .PdfObject ;B _db .PdfObject ;Dur _db .PdfObject ;Trans _db .PdfObject ;AA _db .PdfObject ;Metadata _db .PdfObject ;PieceInfo _db .PdfObject ;StructParents _db .PdfObject ;ID _db .PdfObject ;PZ _db .PdfObject ;
SeparationInfo _db .PdfObject ;Tabs _db .PdfObject ;TemplateInstantiated _db .PdfObject ;PresSteps _db .PdfObject ;UserUnit _db .PdfObject ;VP _db .PdfObject ;Annots _db .PdfObject ;_gfeg []*PdfAnnotation ;_bgbaf *_db .PdfObjectDictionary ;_gdcfd *_db .PdfIndirectObject ;
_eedb *PdfReader ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// GetContainingPdfObject implements interface PdfModel.
func (_eecaa *PdfFilespec )GetContainingPdfObject ()_db .PdfObject {return _eecaa ._cebda };func _gceef (_cddad _db .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_fdcac :=&PdfColorspaceDeviceNAttributes {};var _cfbe *_db .PdfObjectDictionary ;switch _adcgc :=_cddad .(type ){case *_db .PdfIndirectObject :_fdcac ._bbeec =_adcgc ;
var _bbcg bool ;_cfbe ,_bbcg =_adcgc .PdfObject .(*_db .PdfObjectDictionary );if !_bbcg {_gd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_db .PdfObjectDictionary :_cfbe =_adcgc ;case *_db .PdfObjectReference :_gfga :=_adcgc .Resolve ();return _gceef (_gfga );default:_gd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfcbd :=_cfbe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bfcbd !=nil {_bfebf ,_afbc :=_db .TraceToDirectObject (_bfcbd ).(*_db .PdfObjectName );if !_afbc {_gd .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fdcac .Subtype =_bfebf ;};if _gadg :=_cfbe .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gadg !=nil {_fdcac .Colorants =_gadg ;};if _bbdca :=_cfbe .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_bbdca !=nil {_fdcac .Process =_bbdca ;};if _agef :=_cfbe .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_agef !=nil {_fdcac .MixingHints =_agef ;};return _fdcac ,nil ;};

// A returns the value of the A component of the color.
func (_fece *PdfColorLab )A ()float64 {return _fece [1]};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_ceef *LTV )EnableAll (extraCerts []*_b .Certificate )error {_abcec :=_ceef ._ceeda ._effb .AcroForm ;for _ ,_aaeac :=range _abcec .AllFields (){_gedgc ,_ :=_aaeac .GetContext ().(*PdfFieldSignature );if _gedgc ==nil {continue ;};_cfeeg :=_gedgc .V ;
if _afeag :=_ceef .validateSig (_cfeeg );_afeag !=nil {_gd .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_afeag );
};if _ebfed :=_ceef .Enable (_cfeeg ,extraCerts );_ebfed !=nil {return _ebfed ;};};return nil ;};func (_bafac *pdfFontSimple )getFontEncoding ()(_edfdf string ,_dgfab map[_fa .CharCode ]_fa .GlyphName ,_cffg error ){_edfdf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _gcafb ,_adefg :=_eaegg [_bafac ._abeff ];_adefg {_edfdf =_gcafb ;}else if _bafac .fontFlags ()&_egacb !=0{for _edagg ,_fgadb :=range _eaegg {if _cf .Contains (_bafac ._abeff ,_edagg ){_edfdf =_fgadb ;break ;};};};if _bafac .Encoding ==nil {return _edfdf ,nil ,nil ;
};switch _ffgeb :=_bafac .Encoding .(type ){case *_db .PdfObjectName :return string (*_ffgeb ),nil ,nil ;case *_db .PdfObjectDictionary :_ecg ,_cfgf :=_db .GetName (_ffgeb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cfgf {_edfdf =_ecg .String ();
};if _fbba :=_ffgeb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fbba !=nil {_geca ,_bbagc :=_db .GetArray (_fbba );if !_bbagc {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_ffgeb ,_ffgeb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_db .ErrTypeError ;};_dgfab ,_cffg =_fa .FromFontDifferences (_geca );};return _edfdf ,_dgfab ,_cffg ;default:_gd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bafac .Encoding ,_bafac .Encoding );
return "",nil ,_db .ErrTypeError ;};};func _gbbbe (_agbgd *_db .PdfObjectDictionary )(*PdfShadingType3 ,error ){_aabbb :=PdfShadingType3 {};_bcfed :=_agbgd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bcfed ==nil {_gd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ccfed ,_dbcafd :=_bcfed .(*_db .PdfObjectArray );if !_dbcafd {_gd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcfed );
return nil ,_db .ErrTypeError ;};if _ccfed .Len ()!=6{_gd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ccfed .Len ());return nil ,ErrInvalidAttribute ;
};_aabbb .Coords =_ccfed ;if _cdace :=_agbgd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cdace !=nil {_cdace =_db .TraceToDirectObject (_cdace );_fcfea ,_eecde :=_cdace .(*_db .PdfObjectArray );if !_eecde {_gd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdace );
return nil ,_db .ErrTypeError ;};_aabbb .Domain =_fcfea ;};_bcfed =_agbgd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bcfed ==nil {_gd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_aabbb .Function =[]PdfFunction {};if _facd ,_agac :=_bcfed .(*_db .PdfObjectArray );_agac {for _ ,_adbga :=range _facd .Elements (){_beggg ,_eadba :=_ccee (_adbga );if _eadba !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eadba );
return nil ,_eadba ;};_aabbb .Function =append (_aabbb .Function ,_beggg );};}else {_gcgfg ,_efgd :=_ccee (_bcfed );if _efgd !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efgd );
return nil ,_efgd ;};_aabbb .Function =append (_aabbb .Function ,_gcgfg );};if _gace :=_agbgd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gace !=nil {_gace =_db .TraceToDirectObject (_gace );_gaceb ,_cddab :=_gace .(*_db .PdfObjectArray );if !_cddab {_gd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gace );
return nil ,_db .ErrTypeError ;};if _gaceb .Len ()!=2{_gd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gaceb .Len ());return nil ,ErrInvalidAttribute ;
};_aabbb .Extend =_gaceb ;};return &_aabbb ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_db .PdfObjectString ;Author *_db .PdfObjectString ;Subject *_db .PdfObjectString ;Keywords *_db .PdfObjectString ;Creator *_db .PdfObjectString ;Producer *_db .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_db .PdfObjectName ;
_eccbf *_db .PdfObjectDictionary ;};func _dafcb (_bcbcg *_db .PdfObjectDictionary )(*PdfShadingType7 ,error ){_adfgc :=PdfShadingType7 {};_fadcd :=_bcbcg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fadcd ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_caag ,_cdbe :=_fadcd .(*_db .PdfObjectInteger );if !_cdbe {_gd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fadcd );
return nil ,_db .ErrTypeError ;};_adfgc .BitsPerCoordinate =_caag ;_fadcd =_bcbcg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fadcd ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_caag ,_cdbe =_fadcd .(*_db .PdfObjectInteger );if !_cdbe {_gd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fadcd );
return nil ,_db .ErrTypeError ;};_adfgc .BitsPerComponent =_caag ;_fadcd =_bcbcg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fadcd ==nil {_gd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_caag ,_cdbe =_fadcd .(*_db .PdfObjectInteger );if !_cdbe {_gd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fadcd );
return nil ,_db .ErrTypeError ;};_adfgc .BitsPerComponent =_caag ;_fadcd =_bcbcg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fadcd ==nil {_gd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbbge ,_cdbe :=_fadcd .(*_db .PdfObjectArray );if !_cdbe {_gd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fadcd );
return nil ,_db .ErrTypeError ;};_adfgc .Decode =_dbbge ;if _fedgab :=_bcbcg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fedgab !=nil {_adfgc .Function =[]PdfFunction {};if _bdfgd ,_abdc :=_fedgab .(*_db .PdfObjectArray );_abdc {for _ ,_bggeb :=range _bdfgd .Elements (){_agfd ,_gcgdd :=_ccee (_bggeb );
if _gcgdd !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcgdd );return nil ,_gcgdd ;};_adfgc .Function =append (_adfgc .Function ,_agfd );
};}else {_eafga ,_dbaf :=_ccee (_fedgab );if _dbaf !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbaf );return nil ,_dbaf ;};
_adfgc .Function =append (_adfgc .Function ,_eafga );};};return &_adfgc ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ddab :=NewPdfAnnotation ();_cade :=&PdfAnnotationCircle {};_cade .PdfAnnotation =_ddab ;_cade .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddab .SetContext (_cade );return _cade ;};func _bedg (_agabe _db .PdfObject )(*PdfFunctionType2 ,error ){_fgggg :=&PdfFunctionType2 {};
var _gcdff *_db .PdfObjectDictionary ;if _egdff ,_afed :=_agabe .(*_db .PdfIndirectObject );_afed {_bcga ,_cgdd :=_egdff .PdfObject .(*_db .PdfObjectDictionary );if !_cgdd {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgggg ._gafac =_egdff ;_gcdff =_bcga ;}else if _fgaf ,_fbbfga :=_agabe .(*_db .PdfObjectDictionary );_fbbfga {_gcdff =_fgaf ;}else {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gd .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gcdff .String ());
_efeee ,_bfgfc :=_db .TraceToDirectObject (_gcdff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_db .PdfObjectArray );if !_bfgfc {_gd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efeee .Len ()< 0||_efeee .Len ()%2!=0{_gd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cefef ,_fegecd :=_efeee .ToFloat64Array ();if _fegecd !=nil {return nil ,_fegecd ;};_fgggg .Domain =_cefef ;_efeee ,_bfgfc =_db .TraceToDirectObject (_gcdff .Get ("\u0052\u0061\u006eg\u0065")).(*_db .PdfObjectArray );if _bfgfc {if _efeee .Len ()< 0||_efeee .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_daad ,_dgcddg :=_efeee .ToFloat64Array ();if _dgcddg !=nil {return nil ,_dgcddg ;};_fgggg .Range =_daad ;};_efeee ,_bfgfc =_db .TraceToDirectObject (_gcdff .Get ("\u0043\u0030")).(*_db .PdfObjectArray );if _bfgfc {_bbdcd ,_daace :=_efeee .ToFloat64Array ();
if _daace !=nil {return nil ,_daace ;};_fgggg .C0 =_bbdcd ;};_efeee ,_bfgfc =_db .TraceToDirectObject (_gcdff .Get ("\u0043\u0031")).(*_db .PdfObjectArray );if _bfgfc {_bfeef ,_ggdad :=_efeee .ToFloat64Array ();if _ggdad !=nil {return nil ,_ggdad ;};_fgggg .C1 =_bfeef ;
};if len (_fgggg .C0 )!=len (_fgggg .C1 ){_gd .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_db .ErrRangeError ;};N ,_fegecd :=_db .GetNumberAsFloat (_db .TraceToDirectObject (_gcdff .Get ("\u004e")));
if _fegecd !=nil {_gd .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gcdff .String ());return nil ,_fegecd ;};_fgggg .N =N ;
return _fgggg ,nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_aagcg *PdfColorDeviceRGB )GetNumComponents ()int {return 3};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_ddgea :=&PdfColorspaceSpecialSeparation {};return _ddgea ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_babbf *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _babbf .UnderlyingCS .GetNumComponents ();};

// ToPdfObject implements interface PdfModel.
func (_abef *PdfAnnotationHighlight )ToPdfObject ()_db .PdfObject {_abef .PdfAnnotation .ToPdfObject ();_ebeg :=_abef ._addd ;_fbgda :=_ebeg .PdfObject .(*_db .PdfObjectDictionary );_abef .PdfAnnotationMarkup .appendToPdfDictionary (_fbgda );_fbgda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_fbgda .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_abef .QuadPoints );return _ebeg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bcg *PdfAction )GetContainingPdfObject ()_db .PdfObject {return _bcg ._bcc };

// CustomKeys returns all custom info keys as list.
func (_dgbg *PdfInfo )CustomKeys ()[]string {if _dgbg ._eccbf ==nil {return nil ;};_degae :=make ([]string ,len (_dgbg ._eccbf .Keys ()));for _ ,_ecee :=range _dgbg ._eccbf .Keys (){_degae =append (_degae ,_ecee .String ());};return _degae ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_fgdb :=&PdfFilespec {};_fgdb ._cebda =_db .MakeIndirectObject (_db .MakeDict ());return _fgdb ;};func (_dbfa *PdfWriter )seekByName (_gefea _db .PdfObject ,_cagfba []string ,_dacfg string )([]_db .PdfObject ,error ){_gd .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gefea );
var _dbaea []_db .PdfObject ;if _fced ,_dafcbf :=_gefea .(*_db .PdfIndirectObject );_dafcbf {return _dbfa .seekByName (_fced .PdfObject ,_cagfba ,_dacfg );};if _dgcfc ,_eccbc :=_gefea .(*_db .PdfObjectStream );_eccbc {return _dbfa .seekByName (_dgcfc .PdfObjectDictionary ,_cagfba ,_dacfg );
};if _fabee ,_ceefa :=_gefea .(*_db .PdfObjectDictionary );_ceefa {_gd .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fbbgd :=range _fabee .Keys (){_fgegc :=_fabee .Get (_fbbgd );if string (_fbbgd )==_dacfg {_dbaea =append (_dbaea ,_fgegc );};for _ ,_ddeaec :=range _cagfba {if string (_fbbgd )==_ddeaec {_gd .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_ddeaec );
_egag ,_gddbf :=_dbfa .seekByName (_fgegc ,_cagfba ,_dacfg );if _gddbf !=nil {return _dbaea ,_gddbf ;};_dbaea =append (_dbaea ,_egag ...);break ;};};};return _dbaea ,nil ;};return _dbaea ,nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_abgcb *PdfPageResources )HasFontByName (keyName _db .PdfObjectName )bool {_ ,_eaff :=_abgcb .GetFontByName (keyName );return _eaff ;};

// GetNumPages returns the number of pages in the document.
func (_adfbb *PdfReader )GetNumPages ()(int ,error ){if _adfbb ._ceaabg .GetCrypter ()!=nil &&!_adfbb ._ceaabg .IsAuthenticated (){return 0,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_adfbb ._aedae ),nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cebfc *BorderStyle )GetPdfName ()string {switch *_cebfc {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ggacb *Outline )Insert (index uint ,item *OutlineItem ){_cbdacf :=uint (len (_ggacb .Entries ));if index > _cbdacf {index =_cbdacf ;};_ggacb .Entries =append (_ggacb .Entries [:index ],append ([]*OutlineItem {item },_ggacb .Entries [index :]...)...);
};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_cbcfb *PdfPage )AppendContentStream (contentStr string )error {_bcgacc ,_fdgbb :=_cbcfb .GetContentStreams ();if _fdgbb !=nil {return _fdgbb ;};if len (_bcgacc )==0{_bcgacc =[]string {contentStr };return _cbcfb .SetContentStreams (_bcgacc ,_db .NewFlateEncoder ());
};var _fbbeg _cfg .Buffer ;_fbbeg .WriteString (_bcgacc [len (_bcgacc )-1]);_fbbeg .WriteString ("\u000a");_fbbeg .WriteString (contentStr );_bcgacc [len (_bcgacc )-1]=_fbbeg .String ();return _cbcfb .SetContentStreams (_bcgacc ,_db .NewFlateEncoder ());
};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_beggb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _eedae []float64 ;for _fdeb :=0;_fdeb < _beggb .GetNumComponents ();_fdeb ++{_eedae =append (_eedae ,0.0,1.0);};return _eedae ;};func _aaffc (_gbea _db .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_cefac :=NewPdfColorspaceSpecialIndexed ();
if _dgcd ,_dagbbg :=_gbea .(*_db .PdfIndirectObject );_dagbbg {_cefac ._afag =_dgcd ;};_gbea =_db .TraceToDirectObject (_gbea );_adcc ,_cafd :=_gbea .(*_db .PdfObjectArray );if !_cafd {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _adcc .Len ()!=4{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gbea =_adcc .Get (0);
_adge ,_cafd :=_gbea .(*_db .PdfObjectName );if !_cafd {return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_adge !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_gbea =_adcc .Get (1);_cgedb ,_cggcg :=DetermineColorspaceNameFromPdfObject (_gbea );if _cggcg !=nil {return nil ,_cggcg ;};if _cgedb =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_cgedb =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gd .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_cgedb );
return nil ,_gefe ;};_efbg ,_cggcg :=NewPdfColorspaceFromPdfObject (_gbea );if _cggcg !=nil {return nil ,_cggcg ;};_cefac .Base =_efbg ;_gbea =_adcc .Get (2);_dcda ,_cggcg :=_db .GetNumberAsInt64 (_gbea );if _cggcg !=nil {return nil ,_cggcg ;};if _dcda > 255{return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_cefac .HiVal =int (_dcda );_gbea =_adcc .Get (3);_cefac .Lookup =_gbea ;_gbea =_db .TraceToDirectObject (_gbea );var _dfda []byte ;if _eagg ,_efcdd :=_gbea .(*_db .PdfObjectString );_efcdd {_dfda =_eagg .Bytes ();_gd .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_dfda );
}else if _fgdg ,_afgd :=_gbea .(*_db .PdfObjectStream );_afgd {_gd .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gbea .String ());_gd .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_fgdg .Stream ),_fgdg .Stream );
_dega ,_bceg :=_db .DecodeStream (_fgdg );if _bceg !=nil {return nil ,_bceg ;};_gd .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dega ),_dega );_dfda =_dega ;}else {_gd .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gbea );
return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_dfda )< _cefac .Base .GetNumComponents ()*(_cefac .HiVal +1){_gd .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_gd .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_dfda ),_cefac .Base .GetNumComponents (),_cefac .HiVal );
}else {_dfda =_dfda [:_cefac .Base .GetNumComponents ()*(_cefac .HiVal +1)];};_cefac ._afbe =_dfda ;return _cefac ,nil ;};func (_fbgb *pdfFontType0 )baseFields ()*fontCommon {return &_fbgb .fontCommon };

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _db .PdfObject ;Popup *PdfAnnotationPopup ;CA _db .PdfObject ;RC _db .PdfObject ;CreationDate _db .PdfObject ;IRT _db .PdfObject ;Subj _db .PdfObject ;RT _db .PdfObject ;IT _db .PdfObject ;ExData _db .PdfObject ;};

// SetContentStream sets the pattern cell's content stream.
func (_cfgff *PdfTilingPattern )SetContentStream (content []byte ,encoder _db .StreamEncoder )error {_cfbd ,_eadb :=_cfgff ._afae .(*_db .PdfObjectStream );if !_eadb {_gd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfgff ._afae );
return _db .ErrTypeError ;};if encoder ==nil {encoder =_db .NewRawEncoder ();};_dbdcg :=_cfbd .PdfObjectDictionary ;_fefd :=encoder .MakeStreamDict ();_dbdcg .Merge (_fefd );_dffbf ,_fefcd :=encoder .EncodeBytes (content );if _fefcd !=nil {return _fefcd ;
};_dbdcg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_db .MakeInteger (int64 (len (_dffbf ))));_cfbd .Stream =_dffbf ;return nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_effad *modelManager )GetPrimitiveFromModel (model PdfModel )_db .PdfObject {_efba ,_abgfb :=_effad ._fgggc [model ];if !_abgfb {return nil ;};return _efba ;};

// IsCID returns true if the underlying font is CID.
func (_edfd *PdfFont )IsCID ()bool {return _edfd .baseFields ().isCIDFont ()};func (_fgeb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fgeb ._dfff ==nil &&_fgeb .DescendantFont !=nil {return _fgeb .DescendantFont .FontDescriptor ();};return _fgeb ._dfff ;
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_gfcf *PdfColorDeviceGray )GetNumComponents ()int {return 1};func _eeea (_edbdae _db .PdfObject )(*PdfShading ,error ){_bcac :=&PdfShading {};var _egbb *_db .PdfObjectDictionary ;if _acgbe ,_ebaba :=_db .GetIndirect (_edbdae );_ebaba {_bcac ._eccbgb =_acgbe ;
_afced ,_ebccf :=_acgbe .PdfObject .(*_db .PdfObjectDictionary );if !_ebccf {_gd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_db .ErrTypeError ;
};_egbb =_afced ;}else if _aefe ,_gbdff :=_db .GetStream (_edbdae );_gbdff {_bcac ._eccbgb =_aefe ;_egbb =_aefe .PdfObjectDictionary ;}else if _adbda ,_ccaca :=_db .GetDict (_edbdae );_ccaca {_bcac ._eccbgb =_adbda ;_egbb =_adbda ;}else {_gd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_edbdae );
return nil ,_db .ErrTypeError ;};if _egbb ==nil {_gd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_f .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};
_edbdae =_egbb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _edbdae ==nil {_gd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_edbdae =_db .TraceToDirectObject (_edbdae );_fbae ,_degad :=_edbdae .(*_db .PdfObjectInteger );if !_degad {_gd .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_edbdae );
return nil ,_db .ErrTypeError ;};if *_fbae < 1||*_fbae > 7{_gd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fbae );
return nil ,_db .ErrTypeError ;};_bcac .ShadingType =_fbae ;_edbdae =_egbb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _edbdae ==nil {_gd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdbec ,_cedcf :=NewPdfColorspaceFromPdfObject (_edbdae );if _cedcf !=nil {_gd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cedcf );
return nil ,_cedcf ;};_bcac .ColorSpace =_gdbec ;_edbdae =_egbb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _edbdae !=nil {_edbdae =_db .TraceToDirectObject (_edbdae );_bdddda ,_bgaf :=_edbdae .(*_db .PdfObjectArray );if !_bgaf {_gd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_edbdae );
return nil ,_db .ErrTypeError ;};_bcac .Background =_bdddda ;};_edbdae =_egbb .Get ("\u0042\u0042\u006f\u0078");if _edbdae !=nil {_edbdae =_db .TraceToDirectObject (_edbdae );_fffb ,_gcfec :=_edbdae .(*_db .PdfObjectArray );if !_gcfec {_gd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_edbdae );
return nil ,_db .ErrTypeError ;};_ceafa ,_gcbdd :=NewPdfRectangle (*_fffb );if _gcbdd !=nil {_gd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gcbdd );return nil ,_gcbdd ;};_bcac .BBox =_ceafa ;};_edbdae =_egbb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _edbdae !=nil {_edbdae =_db .TraceToDirectObject (_edbdae );_babdf ,_beadc :=_edbdae .(*_db .PdfObjectBool );if !_beadc {_gd .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edbdae );
return nil ,_db .ErrTypeError ;};_bcac .AntiAlias =_babdf ;};switch *_fbae {case 1:_eeece ,_gcafd :=_bgadg (_egbb );if _gcafd !=nil {return nil ,_gcafd ;};_eeece .PdfShading =_bcac ;_bcac ._facee =_eeece ;return _bcac ,nil ;case 2:_bdgab ,_gdcfde :=_ecdgc (_egbb );
if _gdcfde !=nil {return nil ,_gdcfde ;};_bdgab .PdfShading =_bcac ;_bcac ._facee =_bdgab ;return _bcac ,nil ;case 3:_ffacc ,_dgacb :=_gbbbe (_egbb );if _dgacb !=nil {return nil ,_dgacb ;};_ffacc .PdfShading =_bcac ;_bcac ._facee =_ffacc ;return _bcac ,nil ;
case 4:_acbfbg ,_fgcfc :=_dedbe (_egbb );if _fgcfc !=nil {return nil ,_fgcfc ;};_acbfbg .PdfShading =_bcac ;_bcac ._facee =_acbfbg ;return _bcac ,nil ;case 5:_caafc ,_ceafg :=_fafag (_egbb );if _ceafg !=nil {return nil ,_ceafg ;};_caafc .PdfShading =_bcac ;
_bcac ._facee =_caafc ;return _bcac ,nil ;case 6:_efeeg ,_eafec :=_dcbaa (_egbb );if _eafec !=nil {return nil ,_eafec ;};_efeeg .PdfShading =_bcac ;_bcac ._facee =_efeeg ;return _bcac ,nil ;case 7:_daeba ,_ffeab :=_dafcb (_egbb );if _ffeab !=nil {return nil ,_ffeab ;
};_daeba .PdfShading =_bcac ;_bcac ._facee =_daeba ;return _bcac ,nil ;};return nil ,_f .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func (_adag *pdfFontType0 )bytesToCharcodes (_dfcd []byte )([]_fa .CharCode ,bool ){if _adag ._cabbf ==nil {return nil ,false ;
};_aagf ,_ffcee :=_adag ._cabbf .BytesToCharcodes (_dfcd );if !_ffcee {return nil ,false ;};_edfda :=make ([]_fa .CharCode ,len (_aagf ));for _ggda ,_bdbfe :=range _aagf {_edfda [_ggda ]=_fa .CharCode (_bdbfe );};return _edfda ,true ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_fcab *Image )ToJBIG2Image ()(*_db .JBIG2Image ,error ){_cagg ,_cgdfd :=_fcab .ToGoImage ();if _cgdfd !=nil {return nil ,_cgdfd ;};return _db .GoImageToJBIG2 (_cagg ,_db .JB2ImageAutoThreshold );};

// ToInteger convert to an integer format.
func (_cfdac *PdfColorCalGray )ToInteger (bits int )uint32 {_gbbfe :=_ae .Pow (2,float64 (bits ))-1;return uint32 (_gbbfe *_cfdac .Val ());};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_faee FieldFlag )Has (fl FieldFlag )bool {return (_faee .Mask ()&fl .Mask ())> 0};

// ToPdfObject returns a stream object.
func (_febeb *XObjectImage )ToPdfObject ()_db .PdfObject {_badga :=_febeb ._aebae ;_dgfgg :=_badga .PdfObjectDictionary ;if _febeb .Filter !=nil {_dgfgg =_febeb .Filter .MakeStreamDict ();_badga .PdfObjectDictionary =_dgfgg ;};_dgfgg .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dgfgg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0049\u006d\u0061g\u0065"));_dgfgg .Set ("\u0057\u0069\u0064t\u0068",_db .MakeInteger (*(_febeb .Width )));_dgfgg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_db .MakeInteger (*(_febeb .Height )));
if _febeb .BitsPerComponent !=nil {_dgfgg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_db .MakeInteger (*(_febeb .BitsPerComponent )));};if _febeb .ColorSpace !=nil {_dgfgg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_febeb .ColorSpace .ToPdfObject ());
};_dgfgg .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_febeb .Intent );_dgfgg .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_febeb .ImageMask );_dgfgg .SetIfNotNil ("\u004d\u0061\u0073\u006b",_febeb .Mask );_bcefb :=_dgfgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _febeb .Decode ==nil &&_bcefb {_dgfgg .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _febeb .Decode !=nil {_dgfgg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_febeb .Decode );};_dgfgg .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_febeb .Interpolate );
_dgfgg .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_febeb .Alternatives );_dgfgg .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_febeb .SMask );_dgfgg .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_febeb .SMaskInData );
_dgfgg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_febeb .Matte );_dgfgg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_febeb .Name );_dgfgg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_febeb .StructParent );_dgfgg .SetIfNotNil ("\u0049\u0044",_febeb .ID );
_dgfgg .SetIfNotNil ("\u004f\u0050\u0049",_febeb .OPI );_dgfgg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_febeb .Metadata );_dgfgg .SetIfNotNil ("\u004f\u0043",_febeb .OC );_dgfgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_db .MakeInteger (int64 (len (_febeb .Stream ))));
_badga .Stream =_febeb .Stream ;return _badga ;};

// ToPdfObject returns the PDF representation of the function.
func (_eceba *PdfFunctionType4 )ToPdfObject ()_db .PdfObject {_cfcbbg :=_eceba ._fbgca ;if _cfcbbg ==nil {_eceba ._fbgca =&_db .PdfObjectStream {};_cfcbbg =_eceba ._fbgca ;};_efgea :=_db .MakeDict ();_efgea .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_db .MakeInteger (4));
_gbcf :=&_db .PdfObjectArray {};for _ ,_ebgff :=range _eceba .Domain {_gbcf .Append (_db .MakeFloat (_ebgff ));};_efgea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbcf );_edee :=&_db .PdfObjectArray {};for _ ,_egab :=range _eceba .Range {_edee .Append (_db .MakeFloat (_egab ));
};_efgea .Set ("\u0052\u0061\u006eg\u0065",_edee );if _eceba ._cbfgc ==nil &&_eceba .Program !=nil {_eceba ._cbfgc =[]byte (_eceba .Program .String ());};_efgea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_db .MakeInteger (int64 (len (_eceba ._cbfgc ))));
_cfcbbg .Stream =_eceba ._cbfgc ;_cfcbbg .PdfObjectDictionary =_efgea ;return _cfcbbg ;};

// BaseFont returns the font's "BaseFont" field.
func (_cbccd *PdfFont )BaseFont ()string {return _cbccd .baseFields ()._abeff };func (_aedd *PdfReader )newPdfActionSetOCGStateFromDict (_dga *_db .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_dga .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_dga .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// RemovePage removes a page by number.
func (_ccdc *PdfAppender )RemovePage (pageNum int ){_dfad :=pageNum -1;_ccdc ._afb =append (_ccdc ._afb [0:_dfad ],_ccdc ._afb [pageNum :]...);};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// IsTiling specifies if the pattern is a tiling pattern.
func (_bdaad *PdfPattern )IsTiling ()bool {return _bdaad .PatternType ==1};

// MergePageWith appends page content to source Pdf file page content.
func (_baec *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ddfb :=pageNum -1;var _cgeff *PdfPage ;for _eaec ,_fcbb :=range _baec ._afb {if _eaec ==_ddfb {_cgeff =_fcbb ;};};if _cgeff ==nil {return _g .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _cgeff ._gdcfd !=nil &&_cgeff ._gdcfd .GetParser ()==_baec ._effb ._ceaabg {_cgeff =_cgeff .Duplicate ();_baec ._afb [_ddfb ]=_cgeff ;};page =page .Duplicate ();_ccbeg (page );_dcee :=_ccbf (_cgeff );_dded :=_ccbf (page );_fbfc :=make (map[_db .PdfObjectName ]_db .PdfObjectName );
for _bgga :=range _dded {if _ ,_dfcbe :=_dcee [_bgga ];_dfcbe {for _eefg :=1;true ;_eefg ++{_deb :=_db .PdfObjectName (string (_bgga )+_ac .Itoa (_eefg ));if _ ,_bbfb :=_dcee [_deb ];!_bbfb {_fbfc [_bgga ]=_deb ;break ;};};};};_ebbf ,_gacb :=page .GetContentStreams ();
if _gacb !=nil {return _gacb ;};_abce ,_gacb :=_cgeff .GetContentStreams ();if _gacb !=nil {return _gacb ;};for _fafc ,_ccea :=range _ebbf {for _efd ,_abgf :=range _fbfc {_ccea =_cf .Replace (_ccea ,"\u002f"+string (_efd ),"\u002f"+string (_abgf ),-1);
};_ebbf [_fafc ]=_ccea ;};_abce =append (_abce ,_ebbf ...);if _bbfbe :=_cgeff .SetContentStreams (_abce ,_db .NewFlateEncoder ());_bbfbe !=nil {return _bbfbe ;};_cgeff ._gfeg =append (_cgeff ._gfeg ,page ._gfeg ...);if _cgeff .Resources ==nil {_cgeff .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_cgeff .Resources .Font =_baec .mergeResources (_cgeff .Resources .Font ,page .Resources .Font ,_fbfc );_cgeff .Resources .XObject =_baec .mergeResources (_cgeff .Resources .XObject ,page .Resources .XObject ,_fbfc );_cgeff .Resources .Properties =_baec .mergeResources (_cgeff .Resources .Properties ,page .Resources .Properties ,_fbfc );
if _cgeff .Resources .ProcSet ==nil {_cgeff .Resources .ProcSet =page .Resources .ProcSet ;};_cgeff .Resources .Shading =_baec .mergeResources (_cgeff .Resources .Shading ,page .Resources .Shading ,_fbfc );_cgeff .Resources .ExtGState =_baec .mergeResources (_cgeff .Resources .ExtGState ,page .Resources .ExtGState ,_fbfc );
};_cace ,_gacb :=_cgeff .GetMediaBox ();if _gacb !=nil {return _gacb ;};_cecf ,_gacb :=page .GetMediaBox ();if _gacb !=nil {return _gacb ;};var _geade bool ;if _cace .Llx > _cecf .Llx {_cace .Llx =_cecf .Llx ;_geade =true ;};if _cace .Lly > _cecf .Lly {_cace .Lly =_cecf .Lly ;
_geade =true ;};if _cace .Urx < _cecf .Urx {_cace .Urx =_cecf .Urx ;_geade =true ;};if _cace .Ury < _cecf .Ury {_cace .Ury =_cecf .Ury ;_geade =true ;};if _geade {_cgeff .MediaBox =_cace ;};return nil ;};func (_bdag *pdfFontSimple )baseFields ()*fontCommon {return &_bdag .fontCommon };


// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_gbbb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cced :=vals [0];if _cced < 0.0||_cced > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_becfb :=vals [1];if _becfb < 0.0||_becfb > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edaf :=vals [2];if _edaf < 0.0||_edaf > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bgddf :=NewPdfColorDeviceRGB (_cced ,_becfb ,_edaf );return _bgddf ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ddddg *OutlineItem )Insert (index uint ,item *OutlineItem ){_dfgca :=uint (len (_ddddg .Entries ));if index > _dfgca {index =_dfgca ;};_ddddg .Entries =append (_ddddg .Entries [:index ],append ([]*OutlineItem {item },_ddddg .Entries [index :]...)...);
};func (_aef *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func _bfda (_face *_db .PdfObjectDictionary ,_fgadf *fontCommon ,_efbcc _fa .TextEncoder )(*pdfFontSimple ,error ){_cafde :=_afaf (_fgadf );_cafde ._bagb =_efbcc ;
if _efbcc ==nil {_ffddc :=_face .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _ffddc ==nil {_ffddc =_db .MakeInteger (0);};_cafde .FirstChar =_ffddc ;_bfgbd ,_dcded :=_db .GetIntVal (_ffddc );if !_dcded {_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ffddc );
return nil ,_db .ErrTypeError ;};_gfec :=_fa .CharCode (_bfgbd );_ffddc =_face .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ffddc ==nil {_ffddc =_db .MakeInteger (255);};_cafde .LastChar =_ffddc ;_bfgbd ,_dcded =_db .GetIntVal (_ffddc );
if !_dcded {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ffddc );return nil ,_db .ErrTypeError ;
};_bffcb :=_fa .CharCode (_bfgbd );_cafde ._gfabb =make (map[_fa .CharCode ]float64 );_ffddc =_face .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ffddc !=nil {_cafde .Widths =_ffddc ;_egddc ,_dbfcg :=_db .GetArray (_ffddc );if !_dbfcg {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ffddc );
return nil ,_db .ErrTypeError ;};_feeg ,_cdbd :=_egddc .ToFloat64Array ();if _cdbd !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cdbd ;};if len (_feeg )!=int (_bffcb -_gfec +1){_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bffcb -_gfec +1,len (_feeg ));
return nil ,_db .ErrRangeError ;};for _fadgb ,_gdgb :=range _feeg {_cafde ._gfabb [_gfec +_fa .CharCode (_fadgb )]=_gdgb ;};};};_cafde .Encoding =_db .TraceToDirectObject (_face .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cafde ,nil ;
};func (_fffc *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_db .PdfObjectArray ;Domain *_db .PdfObjectArray ;Function []PdfFunction ;Extend *_db .PdfObjectArray ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _db .PdfObject ;ColorSpace _db .PdfObject ;Pattern _db .PdfObject ;Shading _db .PdfObject ;XObject _db .PdfObject ;Font _db .PdfObject ;ProcSet _db .PdfObject ;Properties _db .PdfObject ;_bffbb *_db .PdfObjectDictionary ;
_gcggg *PdfPageResourcesColorspaces ;};func (_dacdd *PdfReader )newPdfFieldFromIndirectObject (_cdef *_db .PdfIndirectObject ,_cccc *PdfField )(*PdfField ,error ){if _bcgfe ,_gfed :=_dacdd ._afdb .GetModelFromPrimitive (_cdef ).(*PdfField );_gfed {return _bcgfe ,nil ;
};_ccbaf ,_abege :=_db .GetDict (_cdef );if !_abege {return nil ,_g .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aefb :=NewPdfField ();_aefb ._fbeg =_cdef ;_aefb ._fbeg .PdfObject =_ccbaf ;if _aaebe ,_gcff :=_db .GetName (_ccbaf .Get ("\u0046\u0054"));_gcff {_aefb .FT =_aaebe ;};if _cccc !=nil {_aefb .Parent =_cccc ;};_aefb .T ,_ =_ccbaf .Get ("\u0054").(*_db .PdfObjectString );
_aefb .TU ,_ =_ccbaf .Get ("\u0054\u0055").(*_db .PdfObjectString );_aefb .TM ,_ =_ccbaf .Get ("\u0054\u004d").(*_db .PdfObjectString );_aefb .Ff ,_ =_ccbaf .Get ("\u0046\u0066").(*_db .PdfObjectInteger );_aefb .V =_ccbaf .Get ("\u0056");_aefb .DV =_ccbaf .Get ("\u0044\u0056");
_aefb .AA =_ccbaf .Get ("\u0041\u0041");_edda :=_aefb .FT ;if _edda ==nil &&_cccc !=nil {_edda =_cccc .FT ;};if _edda !=nil {switch *_edda {case "\u0054\u0078":_fdfcd ,_bdgg :=_bafee (_ccbaf );if _bdgg !=nil {return nil ,_bdgg ;};_fdfcd .PdfField =_aefb ;
_aefb ._effcdf =_fdfcd ;case "\u0043\u0068":_dadc ,_bead :=_gceb (_ccbaf );if _bead !=nil {return nil ,_bead ;};_dadc .PdfField =_aefb ;_aefb ._effcdf =_dadc ;case "\u0042\u0074\u006e":_bffa ,_dfdcd :=_dgcgb (_ccbaf );if _dfdcd !=nil {return nil ,_dfdcd ;
};_bffa .PdfField =_aefb ;_aefb ._effcdf =_bffa ;case "\u0053\u0069\u0067":_bggc ,_dfgac :=_dacdd .newPdfFieldSignatureFromDict (_ccbaf );if _dfgac !=nil {return nil ,_dfgac ;};_bggc .PdfField =_aefb ;_aefb ._effcdf =_bggc ;default:_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_aefb .FT );
return nil ,_f .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _bcbd ,_adafg :=_db .GetName (_ccbaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_adafg {if *_bcbd =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bdcbe ,_edgd :=_dacdd .newPdfAnnotationFromIndirectObject (_cdef );
if _edgd !=nil {return nil ,_edgd ;};_bcab ,_gfbb :=_bdcbe .GetContext ().(*PdfAnnotationWidget );if !_gfbb {return nil ,_f .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_bcab ._cba =_aefb ;_bcab .Parent =_aefb ._fbeg ;_aefb .Annotations =append (_aefb .Annotations ,_bcab );return _aefb ,nil ;};};_gbcd :=true ;if _cfecd ,_fagad :=_db .GetArray (_ccbaf .Get ("\u004b\u0069\u0064\u0073"));_fagad {_dadea :=make ([]*_db .PdfIndirectObject ,0,_cfecd .Len ());
for _ ,_fdcbc :=range _cfecd .Elements (){_ecafa ,_bcbbde :=_db .GetIndirect (_fdcbc );if !_bcbbde {_fcdfg ,_gfdce :=_db .GetStream (_fdcbc );if _gfdce &&_fcdfg .PdfObjectDictionary !=nil {_dfef ,_abba :=_db .GetNameVal (_fcdfg .Get ("\u0054\u0079\u0070\u0065"));
if _abba &&_dfef =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_gd .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_f .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bebab ,_dfbd :=_db .GetDict (_ecafa );
if !_dfbd {return nil ,ErrTypeCheck ;};if _gbcd {_gbcd =!_fbbb (_bebab );};_dadea =append (_dadea ,_ecafa );};for _ ,_ebcc :=range _dadea {if _gbcd {_bdbg ,_cebd :=_dacdd .newPdfAnnotationFromIndirectObject (_ebcc );if _cebd !=nil {_gd .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cebd );
return nil ,_cebd ;};_fegb ,_adbg :=_bdbg ._aeb .(*PdfAnnotationWidget );if !_adbg {return nil ,ErrTypeCheck ;};_fegb ._cba =_aefb ;_aefb .Annotations =append (_aefb .Annotations ,_fegb );}else {_cacg ,_cadba :=_dacdd .newPdfFieldFromIndirectObject (_ebcc ,_aefb );
if _cadba !=nil {_gd .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cadba );return nil ,_cadba ;};_aefb .Kids =append (_aefb .Kids ,_cacg );
};};};return _aefb ,nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_db .PdfObjectName ;Colorants _db .PdfObject ;Process _db .PdfObject ;MixingHints _db .PdfObject ;_bbeec *_db .PdfIndirectObject ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_db .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};var _cafe =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func _efdbf (_bbfec *_fg .ImageBase )(_faabf Image ){_faabf .Width =int64 (_bbfec .Width );_faabf .Height =int64 (_bbfec .Height );_faabf .BitsPerComponent =int64 (_bbfec .BitsPerComponent );_faabf .ColorComponents =_bbfec .ColorComponents ;_faabf .Data =_bbfec .Data ;
_faabf ._ffga =_bbfec .Decode ;_faabf ._ededa =_bbfec .Alpha ;return _faabf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dgcae *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deee ,_baebd :=_db .GetNumbersAsFloat (objects );
if _baebd !=nil {return nil ,_baebd ;};return _dgcae .ColorFromFloats (_deee );};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_aaeg *LTV )EnableByName (name string ,extraCerts []*_b .Certificate )error {_dbbff :=_aaeg ._ceeda ._effb .AcroForm ;for _ ,_gbdfb :=range _dbbff .AllFields (){_baefc ,_ :=_gbdfb .GetContext ().(*PdfFieldSignature );if _baefc ==nil {continue ;};
if _deega :=_baefc .PartialName ();_deega !=name {continue ;};return _aaeg .Enable (_baefc .V ,extraCerts );};return nil ;};var _aaged =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bad :=NewPdfAction ();_ggc :=&PdfActionTrans {};_ggc .PdfAction =_bad ;_bad .SetContext (_ggc );return _ggc ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_afee *PdfShading )GetContainingPdfObject ()_db .PdfObject {return _afee ._eccbgb };

// GetFontDescriptor returns the font descriptor for `font`.
func (_dbgc PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _dbgc ._fdcca .getFontDescriptor (),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_decae *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcga ,_afaa :=_db .GetNumbersAsFloat (objects );
if _afaa !=nil {return nil ,_afaa ;};return _decae .ColorFromFloats (_gcga );};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_edbg .Lock ();defer _edbg .Unlock ();_egbbf =title };

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_fdcg *_db .PdfIndirectObject ;Certs []*_db .PdfObjectStream ;OCSPs []*_db .PdfObjectStream ;CRLs []*_db .PdfObjectStream ;VRI map[string ]*VRI ;_gcgac map[string ]*_db .PdfObjectStream ;_fadeb map[string ]*_db .PdfObjectStream ;_fcdf map[string ]*_db .PdfObjectStream ;
};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _db .PdfObject ;Flags _db .PdfObject ;};func _gceb (_gagf *_db .PdfObjectDictionary )(*PdfFieldChoice ,error ){_bbadg :=&PdfFieldChoice {};_bbadg .Opt ,_ =_db .GetArray (_gagf .Get ("\u004f\u0070\u0074"));
_bbadg .TI ,_ =_db .GetInt (_gagf .Get ("\u0054\u0049"));_bbadg .I ,_ =_db .GetArray (_gagf .Get ("\u0049"));return _bbadg ,nil ;};func _ecdgc (_eggae *_db .PdfObjectDictionary )(*PdfShadingType2 ,error ){_abfab :=PdfShadingType2 {};_gaecd :=_eggae .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _gaecd ==nil {_gd .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_fcffe ,_defbf :=_gaecd .(*_db .PdfObjectArray );if !_defbf {_gd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaecd );return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _fcffe .Len ()!=4{_gd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fcffe .Len ());return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_abfab .Coords =_fcffe ;if _badeda :=_eggae .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_badeda !=nil {_badeda =_db .TraceToDirectObject (_badeda );_aeeag ,_dceef :=_badeda .(*_db .PdfObjectArray );if !_dceef {_gd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_badeda );
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abfab .Domain =_aeeag ;};_gaecd =_eggae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gaecd ==nil {_gd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_abfab .Function =[]PdfFunction {};if _fefb ,_edcc :=_gaecd .(*_db .PdfObjectArray );_edcc {for _ ,_gdff :=range _fefb .Elements (){_gafg ,_egdaa :=_ccee (_gdff );if _egdaa !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egdaa );
return nil ,_egdaa ;};_abfab .Function =append (_abfab .Function ,_gafg );};}else {_fafgd ,_fcaf :=_ccee (_gaecd );if _fcaf !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcaf );
return nil ,_fcaf ;};_abfab .Function =append (_abfab .Function ,_fafgd );};if _gfbed :=_eggae .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gfbed !=nil {_gfbed =_db .TraceToDirectObject (_gfbed );_deab ,_dedfg :=_gfbed .(*_db .PdfObjectArray );if !_dedfg {_gd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfbed );
return nil ,_db .ErrTypeError ;};if _deab .Len ()!=2{_gd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_deab .Len ());return nil ,ErrInvalidAttribute ;
};_abfab .Extend =_deab ;};return &_abfab ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_addf *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_afcb ,_ ,_fdgde :=_addf .CharcodesToUnicodeWithStats (_addf .BytesToCharcodes (data ));_fcbf :=_fa .ExpandLigatures (_afcb );return _fcbf ,_df .RuneCountInString (_fcbf ),_fdgde ;
};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fgba :=PdfColorCalGray (grayVal );return &_fgba ;};func (_afd *PdfReader )newPdfAnnotationSquigglyFromDict (_cdc *_db .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_dde :=PdfAnnotationSquiggly {};
_ecabc ,_cbff :=_afd .newPdfAnnotationMarkupFromDict (_cdc );if _cbff !=nil {return nil ,_cbff ;};_dde .PdfAnnotationMarkup =_ecabc ;_dde .QuadPoints =_cdc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dde ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );
func (_ffcec fontCommon )isCIDFont ()bool {if _ffcec ._cdbfb ==""{_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ffcec );
};_efdb :=false ;switch _ffcec ._cdbfb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_efdb =true ;};_gd .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_efdb ,_ffcec );
return _efdb ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_edbg .Lock ();defer _edbg .Unlock ();_bddbc =author };

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_caaf *pdfFontSimple )SetEncoder (encoder _fa .TextEncoder ){_caaf ._gffaf =encoder };

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cbbee *XObjectImage )GetContainingPdfObject ()_db .PdfObject {return _cbbee ._aebae };

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fea *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_begb *PdfPage )ToPdfObject ()_db .PdfObject {_cdfdf :=_begb ._gdcfd ;_begb .GetPageDict ();return _cdfdf ;};

// ToPdfObject implements interface PdfModel.
func (_fc *PdfActionImportData )ToPdfObject ()_db .PdfObject {_fc .PdfAction .ToPdfObject ();_ceeb :=_fc ._bcc ;_bafc :=_ceeb .PdfObject .(*_db .PdfObjectDictionary );_bafc .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeImportData )));if _fc .F !=nil {_bafc .Set ("\u0046",_fc .F .ToPdfObject ());
};return _ceeb ;};var _acbg =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_db .PdfObjectArray ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_gadc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_bged :=func (_degd float64 )float64 {if _degd >=6.0/29{return _degd *_degd *_degd ;};return 108.0/841*(_degd -4/29);};_gcfc ,_eedd :=color .(*PdfColorLab );if !_eedd {_gd .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gcfc .L ();AStar :=_gcfc .A ();BStar :=_gcfc .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_gadc .WhitePoint [0]*_bged (L );Y :=_gadc .WhitePoint [1]*_bged (M );Z :=_gadc .WhitePoint [2]*_bged (N );_egcc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dfga :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbee :=0.055648*X +-0.204043*Y +1.057311*Z ;_egcc =_ae .Min (_ae .Max (_egcc ,0),1.0);
_dfga =_ae .Min (_ae .Max (_dfga ,0),1.0);_cbee =_ae .Min (_ae .Max (_cbee ,0),1.0);return NewPdfColorDeviceRGB (_egcc ,_dfga ,_cbee ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_deea *PdfAnnotationStamp )ToPdfObject ()_db .PdfObject {_deea .PdfAnnotation .ToPdfObject ();_cagb :=_deea ._addd ;_aaeb :=_cagb .PdfObject .(*_db .PdfObjectDictionary );_deea .PdfAnnotationMarkup .appendToPdfDictionary (_aaeb );_aaeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0053\u0074\u0061m\u0070"));
_aaeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_deea .Name );return _cagb ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _db .StreamEncoder ;FormType _db .PdfObject ;BBox _db .PdfObject ;Matrix _db .PdfObject ;Resources *PdfPageResources ;Group _db .PdfObject ;Ref _db .PdfObject ;MetaData _db .PdfObject ;PieceInfo _db .PdfObject ;LastModified _db .PdfObject ;
StructParent _db .PdfObject ;StructParents _db .PdfObject ;OPI _db .PdfObject ;OC _db .PdfObject ;Name _db .PdfObject ;

// Stream data.
Stream []byte ;_abddd *_db .PdfObjectStream ;};func (_fgeg *PdfReader )newPdfAnnotationCircleFromDict (_cfga *_db .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_dcab :=PdfAnnotationCircle {};_afg ,_feb :=_fgeg .newPdfAnnotationMarkupFromDict (_cfga );
if _feb !=nil {return nil ,_feb ;};_dcab .PdfAnnotationMarkup =_afg ;_dcab .BS =_cfga .Get ("\u0042\u0053");_dcab .IC =_cfga .Get ("\u0049\u0043");_dcab .BE =_cfga .Get ("\u0042\u0045");_dcab .RD =_cfga .Get ("\u0052\u0044");return &_dcab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cabc *PdfAnnotationPolygon )ToPdfObject ()_db .PdfObject {_cabc .PdfAnnotation .ToPdfObject ();_dgaag :=_cabc ._addd ;_fcg :=_dgaag .PdfObject .(*_db .PdfObjectDictionary );_cabc .PdfAnnotationMarkup .appendToPdfDictionary (_fcg );_fcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fcg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cabc .Vertices );_fcg .SetIfNotNil ("\u004c\u0045",_cabc .LE );_fcg .SetIfNotNil ("\u0042\u0053",_cabc .BS );_fcg .SetIfNotNil ("\u0049\u0043",_cabc .IC );_fcg .SetIfNotNil ("\u0042\u0045",_cabc .BE );
_fcg .SetIfNotNil ("\u0049\u0054",_cabc .IT );_fcg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cabc .Measure );return _dgaag ;};func (_cgdg *PdfWriter )writeObject (_afba int ,_cgggdf _db .PdfObject ){_gd .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_afba );
if _gaac ,_dgcb :=_cgggdf .(*_db .PdfIndirectObject );_dgcb {_cgdg ._bccag [_afba ]=crossReference {Type :1,Offset :_cgdg ._eacdc ,Generation :_gaac .GenerationNumber };_gagcag :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_afba );if _eagff ,_gcecb :=_gaac .PdfObject .(*pdfSignDictionary );
_gcecb {_eagff ._acebg =_cgdg ._eacdc +int64 (len (_gagcag ));};if _gaac .PdfObject ==nil {_gd .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_gaac .PdfObject =_db .MakeNull ();};_gagcag +=_gaac .PdfObject .WriteString ();_gagcag +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cgdg .writeString (_gagcag );return ;};if _ccfef ,_eeecb :=_cgggdf .(*_db .PdfObjectStream );_eeecb {_cgdg ._bccag [_afba ]=crossReference {Type :1,Offset :_cgdg ._eacdc ,Generation :_ccfef .GenerationNumber };
_edafb :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_afba );_edafb +=_ccfef .PdfObjectDictionary .WriteString ();_edafb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cgdg .writeString (_edafb );_cgdg .writeBytes (_ccfef .Stream );
_cgdg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _eedee ,_aagge :=_cgggdf .(*_db .PdfObjectStreams );_aagge {_cgdg ._bccag [_afba ]=crossReference {Type :1,Offset :_cgdg ._eacdc ,Generation :_eedee .GenerationNumber };
_bcdaf :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_afba );var _agadd []string ;var _bdbecb string ;var _gdefe int64 ;for _gfdba ,_dbda :=range _eedee .Elements (){_eegca ,_dgaac :=_dbda .(*_db .PdfIndirectObject );if !_dgaac {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_afba ,_dbda );
continue ;};_aefcf :=_eegca .PdfObject .WriteString ()+"\u0020";_bdbecb =_bdbecb +_aefcf ;_agadd =append (_agadd ,_g .Sprintf ("\u0025\u0064\u0020%\u0064",_eegca .ObjectNumber ,_gdefe ));_cgdg ._bccag [int (_eegca .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_afba ,Index :_gfdba };
_gdefe =_gdefe +int64 (len ([]byte (_aefcf )));};_cbaef :=_cf .Join (_agadd ,"\u0020")+"\u0020";_fcbcf :=_db .NewFlateEncoder ();_gdefef :=_fcbcf .MakeStreamDict ();_gdefef .Set (_db .PdfObjectName ("\u0054\u0079\u0070\u0065"),_db .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_dcfdf :=int64 (_eedee .Len ());_gdefef .Set (_db .PdfObjectName ("\u004e"),_db .MakeInteger (_dcfdf ));_agee :=int64 (len (_cbaef ));_gdefef .Set (_db .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_db .MakeInteger (_agee ));_egfag ,_ :=_fcbcf .EncodeBytes ([]byte (_cbaef +_bdbecb ));
_gffgbf :=int64 (len (_egfag ));_gdefef .Set (_db .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_db .MakeInteger (_gffgbf ));_bcdaf +=_gdefef .WriteString ();_bcdaf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cgdg .writeString (_bcdaf );
_cgdg .writeBytes (_egfag );_cgdg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cgdg .writeString (_cgggdf .WriteString ());};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_eafg *PdfFont )CharcodesToUnicodeWithStats (charcodes []_fa .CharCode )(_egdf []rune ,_ccccd ,_egae int ){_cegf ,_ccccd ,_egae :=_eafg .CharcodesToStrings (charcodes );return []rune (_cf .Join (_cegf ,"")),_ccccd ,_egae ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_dfcg *_db .PdfIndirectObject ;};func (_bbfaa *Image )samplesAddPadding (_badgeb []uint32 )[]uint32 {_fgagc :=_fg .BytesPerLine (int (_bbfaa .Width ),int (_bbfaa .BitsPerComponent ),_bbfaa .ColorComponents )*(8/int (_bbfaa .BitsPerComponent ));
_efdc :=_fgagc *int (_bbfaa .Height );if len (_badgeb )==_efdc {return _badgeb ;};_fbdcc :=make ([]uint32 ,_efdc );_eceac :=int (_bbfaa .Width )*_bbfaa .ColorComponents ;for _afec :=0;_afec < int (_bbfaa .Height );_afec ++{_dgfc :=_afec *int (_bbfaa .Width );
_dfgee :=_afec *_fgagc ;for _fdgc :=0;_fdgc < _eceac ;_fdgc ++{_fbdcc [_dfgee +_fdgc ]=_badgeb [_dgfc +_fdgc ];};};return _fbdcc ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ddegae *PdfOutlineItem )ToPdfObject ()_db .PdfObject {_ecdbg :=_ddegae ._afecf ;_fgbbb :=_ecdbg .PdfObject .(*_db .PdfObjectDictionary );_fgbbb .Set ("\u0054\u0069\u0074l\u0065",_ddegae .Title );if _ddegae .A !=nil {_fgbbb .Set ("\u0041",_ddegae .A );
};if _gdafc :=_fgbbb .Get ("\u0053\u0045");_gdafc !=nil {_fgbbb .Remove ("\u0053\u0045");};if _ddegae .C !=nil {_fgbbb .Set ("\u0043",_ddegae .C );};if _ddegae .Dest !=nil {_fgbbb .Set ("\u0044\u0065\u0073\u0074",_ddegae .Dest );};if _ddegae .F !=nil {_fgbbb .Set ("\u0046",_ddegae .F );
};if _ddegae .Count !=nil {_fgbbb .Set ("\u0043\u006f\u0075n\u0074",_db .MakeInteger (*_ddegae .Count ));};if _ddegae .Next !=nil {_fgbbb .Set ("\u004e\u0065\u0078\u0074",_ddegae .Next .ToPdfObject ());};if _ddegae .First !=nil {_fgbbb .Set ("\u0046\u0069\u0072s\u0074",_ddegae .First .ToPdfObject ());
};if _ddegae .Prev !=nil {_fgbbb .Set ("\u0050\u0072\u0065\u0076",_ddegae .Prev .GetContext ().GetContainingPdfObject ());};if _ddegae .Last !=nil {_fgbbb .Set ("\u004c\u0061\u0073\u0074",_ddegae .Last .GetContext ().GetContainingPdfObject ());};if _ddegae .Parent !=nil {_fgbbb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddegae .Parent .GetContext ().GetContainingPdfObject ());
};return _ecdbg ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _db .PdfObject ;MK _db .PdfObject ;A _db .PdfObject ;AA _db .PdfObject ;BS _db .PdfObject ;Parent _db .PdfObject ;_cba *PdfField ;_bdee bool ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _db .PdfObjectArray )(*PdfRectangle ,error ){_effd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _fbad error ;_effd .Llx ,_fbad =_db .GetNumberAsFloat (arr .Get (0));if _fbad !=nil {return nil ,_fbad ;};_effd .Lly ,_fbad =_db .GetNumberAsFloat (arr .Get (1));if _fbad !=nil {return nil ,_fbad ;};_effd .Urx ,_fbad =_db .GetNumberAsFloat (arr .Get (2));
if _fbad !=nil {return nil ,_fbad ;};_effd .Ury ,_fbad =_db .GetNumberAsFloat (arr .Get (3));if _fbad !=nil {return nil ,_fbad ;};return &_effd ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_fbbe :_db .MakeIndirectObject (_db .MakeDict ())};};

// GetPdfInfo returns the PDF info dictionary.
func (_fgbd *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_dcfaf :=PdfInfo {};_aade ,_aefg :=_fgbd .GetTrailer ();if _aefg !=nil {return nil ,_aefg ;};var _ccebf *_db .PdfObjectDictionary ;_babag :=_aade .Get ("\u0049\u006e\u0066\u006f");switch _ccbbf :=_babag .(type ){case *_db .PdfObjectReference :_eggcf :=_ccbbf ;
_babag ,_aefg =_fgbd .GetIndirectObjectByNumber (int (_eggcf .ObjectNumber ));_babag =_db .TraceToDirectObject (_babag );if _aefg !=nil {return nil ,_aefg ;};_ccebf ,_ =_babag .(*_db .PdfObjectDictionary );case *_db .PdfObjectDictionary :_ccebf =_ccbbf ;
};if _ccebf ==nil {return nil ,_f .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_gfgfd :=range _ccebf .Keys (){switch _gfgfd {case "\u0054\u0069\u0074l\u0065":_dcfaf .Title ,_ =_db .GetString (_ccebf .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_dcfaf .Author ,_ =_db .GetString (_ccebf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_dcfaf .Subject ,_ =_db .GetString (_ccebf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_dcfaf .Keywords ,_ =_db .GetString (_ccebf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_dcfaf .Creator ,_ =_db .GetString (_ccebf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_dcfaf .Producer ,_ =_db .GetString (_ccebf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_dcfaf .Trapped ,_ =_db .GetName (_ccebf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _beafa ,_dgdcc :=_db .GetString (_ccebf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_dgdcc &&_beafa .String ()!=""{_eebbd ,_bacea :=NewPdfDate (_beafa .String ());
if _bacea !=nil {return nil ,_bacea ;};_dcfaf .CreationDate =&_eebbd ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _agbcc ,_daeefg :=_db .GetString (_ccebf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_daeefg &&_agbcc .String ()!=""{_cabbd ,_addbc :=NewPdfDate (_agbcc .String ());
if _addbc !=nil {return nil ,_addbc ;};_dcfaf .ModifiedDate =&_cabbd ;};default:_baae ,_ :=_db .GetString (_ccebf .Get (_gfgfd ));if _dcfaf ._eccbf ==nil {_dcfaf ._eccbf =_db .MakeDict ();};_dcfaf ._eccbf .Set (_gfgfd ,_baae );};};return &_dcfaf ,nil ;
};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dbfgd *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_acbf :=_cga .NewReader (img .getBase ());_becb :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._ededa ,img ._ffga );
_eefd :=_cga .NewWriter (_becb );_dfaf :=_ae .Pow (2,float64 (img .BitsPerComponent ))-1;_dcef :=_dbfgd .GetNumComponents ();_gdfd :=make ([]uint32 ,_dcef );_effcd :=make ([]float64 ,_dcef );for {_fdeae :=_acbf .ReadSamples (_gdfd );if _fdeae ==_dg .EOF {break ;
}else if _fdeae !=nil {return img ,_fdeae ;};for _befg :=0;_befg < _dcef ;_befg ++{_gadaf :=float64 (_gdfd [_befg ])/_dfaf ;_effcd [_befg ]=_gadaf ;};_cbbd ,_fdeae :=_dbfgd .TintTransform .Evaluate (_effcd );if _fdeae !=nil {return img ,_fdeae ;};for _ ,_fed :=range _cbbd {_fed =_ae .Min (_ae .Max (0,_fed ),1.0);
if _fdeae =_eefd .WriteSample (uint32 (_fed *_dfaf ));_fdeae !=nil {return img ,_fdeae ;};};};return _dbfgd .AlternateSpace .ImageToRGB (_efdbf (&_becb ));};func _fbcgc (_caccee _acg .StdFont )pdfFontSimple {_dbbg :=_caccee .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_cdbfb :"\u0054\u0079\u0070e\u0031",_abeff :_caccee .Name ()},_dccec :_caccee .GetMetricsTable (),_gdcce :&PdfFontDescriptor {FontName :_db .MakeName (string (_dbbg .Name )),FontFamily :_db .MakeName (_dbbg .Family ),FontWeight :_db .MakeFloat (float64 (_dbbg .Weight )),Flags :_db .MakeInteger (int64 (_dbbg .Flags )),FontBBox :_db .MakeArrayFromFloats (_dbbg .BBox [:]),ItalicAngle :_db .MakeFloat (_dbbg .ItalicAngle ),Ascent :_db .MakeFloat (_dbbg .Ascent ),Descent :_db .MakeFloat (_dbbg .Descent ),CapHeight :_db .MakeFloat (_dbbg .CapHeight ),XHeight :_db .MakeFloat (_dbbg .XHeight ),StemV :_db .MakeFloat (_dbbg .StemV ),StemH :_db .MakeFloat (_dbbg .StemH )},_bagb :_caccee .Encoder ()};
};func _addg (_gffb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_gffb }};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_eaef *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbb ,_adab :=_db .GetNumbersAsFloat (objects );
if _adab !=nil {return nil ,_adab ;};return _eaef .ColorFromFloats (_cgbb );};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToPdfObject implements interface PdfModel.
func (_bdb *PdfActionGoToR )ToPdfObject ()_db .PdfObject {_bdb .PdfAction .ToPdfObject ();_cbd :=_bdb ._bcc ;_gca :=_cbd .PdfObject .(*_db .PdfObjectDictionary );_gca .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeGoToR )));if _bdb .F !=nil {_gca .Set ("\u0046",_bdb .F .ToPdfObject ());
};_gca .SetIfNotNil ("\u0044",_bdb .D );_gca .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bdb .NewWindow );return _cbd ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bedc *PdfFieldButton )ToPdfObject ()_db .PdfObject {_bedc .PdfField .ToPdfObject ();_eacb :=_bedc ._fbeg ;_ggbe :=_eacb .PdfObject .(*_db .PdfObjectDictionary );_ggbe .Set ("\u0046\u0054",_db .MakeName ("\u0042\u0074\u006e"));if _bedc .Opt !=nil {_ggbe .Set ("\u004f\u0070\u0074",_bedc .Opt );
};return _eacb ;};

// ToPdfObject implements interface PdfModel.
func (_bgbb *PdfAnnotationSquiggly )ToPdfObject ()_db .PdfObject {_bgbb .PdfAnnotation .ToPdfObject ();_ade :=_bgbb ._addd ;_fdaa :=_ade .PdfObject .(*_db .PdfObjectDictionary );_bgbb .PdfAnnotationMarkup .appendToPdfDictionary (_fdaa );_fdaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_fdaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bgbb .QuadPoints );return _ade ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eedad *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfdf :=vals [0];_aedde :=[]float64 {_cfdf };_adgca ,_gege :=_eedad .TintTransform .Evaluate (_aedde );
if _gege !=nil {_gd .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_gege );_gd .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eedad .TintTransform );
return nil ,_gege ;};_gd .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_adgca ,_eedad .AlternateSpace );
_ebbea ,_gege :=_eedad .AlternateSpace .ColorFromFloats (_adgca );if _gege !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_gege );
return nil ,_gege ;};return _ebbea ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_edfdg *PdfPageResources )SetXObjectImageByName (keyName _db .PdfObjectName ,ximg *XObjectImage )error {_gcbeg :=ximg .ToPdfObject ().(*_db .PdfObjectStream );_bdcbg :=_edfdg .SetXObjectByName (keyName ,_gcbeg );return _bdcbg ;};

// ToInteger convert to an integer format.
func (_eceb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_cafb :=_ae .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cafb *_eceb .A ()),uint32 (_cafb *_eceb .B ()),uint32 (_cafb *_eceb .C ())};};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dedd pdfFontType3 )GetRuneMetrics (r rune )(_acg .CharMetrics ,bool ){_gdegc :=_dedd .Encoder ();if _gdegc ==nil {_gd .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dedd );
return _acg .CharMetrics {},false ;};_adaee ,_cddgd :=_gdegc .RuneToCharcode (r );if !_cddgd {if r !=' '{_gd .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dedd );
};return _acg .CharMetrics {},false ;};_agbbd ,_gdgf :=_dedd .GetCharMetrics (_adaee );return _agbbd ,_gdgf ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_affc *PdfColorLab )GetNumComponents ()int {return 3};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _db .PdfObject ;LE _db .PdfObject ;BS _db .PdfObject ;IC _db .PdfObject ;BE _db .PdfObject ;IT _db .PdfObject ;Measure _db .PdfObject ;};func _ageff (_fgff *_db .PdfObjectDictionary )*VRI {_fgcf ,_ :=_db .GetString (_fgff .Get ("\u0054\u0055"));
_fcac ,_ :=_db .GetString (_fgff .Get ("\u0054\u0053"));return &VRI {Cert :_gfdad (_fgff .Get ("\u0043\u0065\u0072\u0074")),OCSP :_gfdad (_fgff .Get ("\u004f\u0043\u0053\u0050")),CRL :_gfdad (_fgff .Get ("\u0043\u0052\u004c")),TU :_fgcf ,TS :_fcac };};


// SetFlag sets the flag for the field.
func (_feac *PdfField )SetFlag (flag FieldFlag ){_feac .Ff =_db .MakeInteger (int64 (flag ))};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_fcb :=NewPdfAnnotation ();_edb :=&PdfAnnotationStrikeOut {};_edb .PdfAnnotation =_fcb ;_edb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcb .SetContext (_edb );return _edb ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_db .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_gegg *_db .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_gbb *PdfActionURI )ToPdfObject ()_db .PdfObject {_gbb .PdfAction .ToPdfObject ();_gef :=_gbb ._bcc ;_fe :=_gef .PdfObject .(*_db .PdfObjectDictionary );_fe .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeURI )));_fe .SetIfNotNil ("\u0055\u0052\u0049",_gbb .URI );
_fe .SetIfNotNil ("\u0049\u0073\u004da\u0070",_gbb .IsMap );return _gef ;};func (_dced PdfFont )actualFont ()pdfFont {if _dced ._fdcca ==nil {_gd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dced );
};return _dced ._fdcca ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_agefd *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _db .GetNumberAsFloat (_agefd .Ascent );};

// ToPdfObject implements interface PdfModel.
func (_cfe *PdfActionLaunch )ToPdfObject ()_db .PdfObject {_cfe .PdfAction .ToPdfObject ();_fbc :=_cfe ._bcc ;_dgd :=_fbc .PdfObject .(*_db .PdfObjectDictionary );_dgd .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeLaunch )));if _cfe .F !=nil {_dgd .Set ("\u0046",_cfe .F .ToPdfObject ());
};_dgd .SetIfNotNil ("\u0057\u0069\u006e",_cfe .Win );_dgd .SetIfNotNil ("\u004d\u0061\u0063",_cfe .Mac );_dgd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cfe .Unix );_dgd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cfe .NewWindow );return _fbc ;
};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _db .PdfObject ;BS _db .PdfObject ;LE _db .PdfObject ;IC _db .PdfObject ;LL _db .PdfObject ;LLE _db .PdfObject ;Cap _db .PdfObject ;IT _db .PdfObject ;LLO _db .PdfObject ;CP _db .PdfObject ;
Measure _db .PdfObject ;CO _db .PdfObject ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_fccgg *PdfReader )GetIndirectObjectByNumber (number int )(_db .PdfObject ,error ){_eegfb ,_gegdf :=_fccgg ._ceaabg .LookupByNumber (number );return _eegfb ,_gegdf ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_effcdf PdfModel ;_fbeg *_db .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_db .PdfObjectName ;T *_db .PdfObjectString ;TU *_db .PdfObjectString ;TM *_db .PdfObjectString ;Ff *_db .PdfObjectInteger ;
V _db .PdfObject ;DV _db .PdfObject ;AA _db .PdfObject ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _db .PdfObject ;};type pdfFontType0 struct{fontCommon ;_cbabg *_db .PdfIndirectObject ;_ecbc _fa .TextEncoder ;Encoding _db .PdfObject ;DescendantFont *PdfFont ;_cabbf *_dc .CMap ;
};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bef :=NewPdfAnnotation ();_edgb :=&PdfAnnotationPolyLine {};_edgb .PdfAnnotation =_bef ;_edgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bef .SetContext (_edgb );return _edgb ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _db .PdfObject ;Name _db .PdfObject ;State _db .PdfObject ;StateModel _db .PdfObject ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_ddgde *modelManager )GetModelFromPrimitive (primitive _db .PdfObject )PdfModel {model ,_agdge :=_ddgde ._gffaa [primitive ];if !_agdge {return nil ;};return model ;};

// Initialize initializes the PdfSignature.
func (_gbdd *PdfSignature )Initialize ()error {if _gbdd .Handler ==nil {return _f .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gbdd .Handler .InitSignature (_gbdd );};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _db .PdfObject ;};func (_gdfcg *PdfFilespec )getDict ()*_db .PdfObjectDictionary {if _ffefb ,_addc :=_gdfcg ._cebda .(*_db .PdfIndirectObject );_addc {_gfbd ,_bdbec :=_ffefb .PdfObject .(*_db .PdfObjectDictionary );
if !_bdbec {return nil ;};return _gfbd ;}else if _bdbgc ,_dabc :=_gdfcg ._cebda .(*_db .PdfObjectDictionary );_dabc {return _bdbgc ;}else {_gd .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_gdfcg ._cebda );
return nil ;};};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_cedb *PdfField )GetContext ()PdfModel {return _cedb ._effcdf };

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_edcac *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fbdag *PdfFontDescriptor )ToPdfObject ()_db .PdfObject {_acfd :=_db .MakeDict ();if _fbdag ._fffge ==nil {_fbdag ._fffge =&_db .PdfIndirectObject {};};_fbdag ._fffge .PdfObject =_acfd ;_acfd .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _fbdag .FontName !=nil {_acfd .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fbdag .FontName );};if _fbdag .FontFamily !=nil {_acfd .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fbdag .FontFamily );};if _fbdag .FontStretch !=nil {_acfd .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fbdag .FontStretch );
};if _fbdag .FontWeight !=nil {_acfd .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fbdag .FontWeight );};if _fbdag .Flags !=nil {_acfd .Set ("\u0046\u006c\u0061g\u0073",_fbdag .Flags );};if _fbdag .FontBBox !=nil {_acfd .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fbdag .FontBBox );
};if _fbdag .ItalicAngle !=nil {_acfd .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fbdag .ItalicAngle );};if _fbdag .Ascent !=nil {_acfd .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fbdag .Ascent );};if _fbdag .Descent !=nil {_acfd .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fbdag .Descent );
};if _fbdag .Leading !=nil {_acfd .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fbdag .Leading );};if _fbdag .CapHeight !=nil {_acfd .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fbdag .CapHeight );};if _fbdag .XHeight !=nil {_acfd .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fbdag .XHeight );
};if _fbdag .StemV !=nil {_acfd .Set ("\u0053\u0074\u0065m\u0056",_fbdag .StemV );};if _fbdag .StemH !=nil {_acfd .Set ("\u0053\u0074\u0065m\u0048",_fbdag .StemH );};if _fbdag .AvgWidth !=nil {_acfd .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fbdag .AvgWidth );
};if _fbdag .MaxWidth !=nil {_acfd .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fbdag .MaxWidth );};if _fbdag .MissingWidth !=nil {_acfd .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fbdag .MissingWidth );};if _fbdag .FontFile !=nil {_acfd .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fbdag .FontFile );
};if _fbdag .FontFile2 !=nil {_acfd .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fbdag .FontFile2 );};if _fbdag .FontFile3 !=nil {_acfd .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fbdag .FontFile3 );};if _fbdag .CharSet !=nil {_acfd .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fbdag .CharSet );
};if _fbdag .Style !=nil {_acfd .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fbdag .FontName );};if _fbdag .Lang !=nil {_acfd .Set ("\u004c\u0061\u006e\u0067",_fbdag .Lang );};if _fbdag .FD !=nil {_acfd .Set ("\u0046\u0044",_fbdag .FD );};
if _fbdag .CIDSet !=nil {_acfd .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fbdag .CIDSet );};return _fbdag ._fffge ;};func _gdce (_aeccd []*_db .PdfObjectStream )*_db .PdfObjectArray {if len (_aeccd )==0{return nil ;};_fbgcf :=make ([]_db .PdfObject ,0,len (_aeccd ));
for _ ,_ecgeb :=range _aeccd {_fbgcf =append (_fbgcf ,_ecgeb );};return _db .MakeArray (_fbgcf ...);};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_accc *PdfPage )GetContainingPdfObject ()_db .PdfObject {return _accc ._gdcfd };

// String returns a string representation of the field.
func (_dfcaa *PdfField )String ()string {if _afceg ,_ecdc :=_dfcaa .ToPdfObject ().(*_db .PdfIndirectObject );_ecdc {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dfcaa ._effcdf ,_afceg .PdfObject .String ());};return "";};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gafac *_db .PdfIndirectObject ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _db .PdfObjectName ;};func (_dfac *pdfFontSimple )addEncoding ()error {var (_fdba string ;_agad map[_fa .CharCode ]_fa .GlyphName ;_eggge _fa .SimpleEncoder ;);if _dfac .Encoder ()!=nil {_cabec ,_edcgfe :=_dfac .Encoder ().(_fa .SimpleEncoder );
if _edcgfe &&_cabec !=nil {_fdba =_cabec .BaseName ();};};if _dfac .Encoding !=nil {_aaee ,_eaade ,_fagb :=_dfac .getFontEncoding ();if _fagb !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfac ._abeff ,_dfac ._cdbfb ,_dfac .Encoding ,_dfac .Encoding ,_fagb );
return _fagb ;};if _aaee !=""{_fdba =_aaee ;};_agad =_eaade ;_eggge ,_fagb =_fa .NewSimpleTextEncoder (_fdba ,_agad );if _fagb !=nil {return _fagb ;};};if _eggge ==nil {_ebbaa :=_dfac ._dfff ;if _ebbaa !=nil {switch _dfac ._cdbfb {case "\u0054\u0079\u0070e\u0031":if _ebbaa .fontFile !=nil &&_ebbaa .fontFile ._dfegf !=nil {_gd .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_eggge =_ebbaa .fontFile ._dfegf ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ebbaa ._febba !=nil {_gd .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dgfec ,_ccgf :=_ebbaa ._febba .MakeEncoder ();
if _ccgf ==nil {_eggge =_dgfec ;};};};};};if _eggge !=nil {if _agad !=nil {_gd .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agad ,_dfac .baseFields ());
_eggge =_fa .ApplyDifferences (_eggge ,_agad );};_dfac .SetEncoder (_eggge );};return nil ;};func (_ebad *PdfReader )newPdfAnnotationPolyLineFromDict (_cgb *_db .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_fdbb :=PdfAnnotationPolyLine {};_agd ,_bae :=_ebad .newPdfAnnotationMarkupFromDict (_cgb );
if _bae !=nil {return nil ,_bae ;};_fdbb .PdfAnnotationMarkup =_agd ;_fdbb .Vertices =_cgb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fdbb .LE =_cgb .Get ("\u004c\u0045");_fdbb .BS =_cgb .Get ("\u0042\u0053");_fdbb .IC =_cgb .Get ("\u0049\u0043");
_fdbb .BE =_cgb .Get ("\u0042\u0045");_fdbb .IT =_cgb .Get ("\u0049\u0054");_fdbb .Measure =_cgb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fdbb ,nil ;};func _bdfdb (_fgfdc _db .PdfObject )(*PdfPattern ,error ){_ggedb :=&PdfPattern {};var _bcdga *_db .PdfObjectDictionary ;
if _cbgedc ,_acab :=_db .GetIndirect (_fgfdc );_acab {_ggedb ._afae =_cbgedc ;_dcbea ,_eegbe :=_cbgedc .PdfObject .(*_db .PdfObjectDictionary );if !_eegbe {_gd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cbgedc .PdfObject );
return nil ,_db .ErrTypeError ;};_bcdga =_dcbea ;}else if _ffdgd ,_ebcae :=_db .GetStream (_fgfdc );_ebcae {_ggedb ._afae =_ffdgd ;_bcdga =_ffdgd .PdfObjectDictionary ;}else {_gd .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fgfdc );
return nil ,_db .ErrTypeError ;};_adfaec :=_bcdga .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _adfaec ==nil {_gd .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_geba ,_dfcbc :=_adfaec .(*_db .PdfObjectInteger );if !_dfcbc {_gd .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_adfaec );
return nil ,_db .ErrTypeError ;};if *_geba !=1&&*_geba !=2{_gd .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_geba );return nil ,_db .ErrRangeError ;
};_ggedb .PatternType =int64 (*_geba );switch *_geba {case 1:_bffaea ,_dffbe :=_ccfde (_bcdga );if _dffbe !=nil {return nil ,_dffbe ;};_bffaea .PdfPattern =_ggedb ;_ggedb ._bffbe =_bffaea ;return _ggedb ,nil ;case 2:_eadge ,_dcebg :=_ccedg (_bcdga );if _dcebg !=nil {return nil ,_dcebg ;
};_eadge .PdfPattern =_ggedb ;_ggedb ._bffbe =_eadge ;return _ggedb ,nil ;};return nil ,_f .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _eggd (_eefeg _db .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_gd .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_eefeg .String (),_eefeg );
_bdca :=NewPdfColorspaceSpecialPattern ();if _cega ,_dgb :=_eefeg .(*_db .PdfIndirectObject );_dgb {_bdca ._aeba =_cega ;};_eefeg =_db .TraceToDirectObject (_eefeg );if _fbafa ,_dfec :=_eefeg .(*_db .PdfObjectName );_dfec {if *_fbafa !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _bdca ,nil ;};_gecb ,_eefb :=_eefeg .(*_db .PdfObjectArray );if !_eefb {_gd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_eefeg );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gecb .Len ()!=1&&_gecb .Len ()!=2{_gd .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gecb );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_eefeg =_gecb .Get (0);if _dfbef ,_agbc :=_eefeg .(*_db .PdfObjectName );_agbc {if *_dfbef !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gd .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_dfbef );
return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gecb .Len ()> 1{_eefeg =_gecb .Get (1);_eefeg =_db .TraceToDirectObject (_eefeg );_eddc ,_gabc :=NewPdfColorspaceFromPdfObject (_eefeg );if _gabc !=nil {return nil ,_gabc ;
};_bdca .UnderlyingCS =_eddc ;};_gd .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_bdca .UnderlyingCS );
return _bdca ,nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_eega *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggff ,_aedc :=color .(*PdfColorCalRGB );if !_aedc {_gd .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bebdg :=_ggff .A ();_bbff :=_ggff .B ();_febg :=_ggff .C ();X :=_eega .Matrix [0]*_ae .Pow (_bebdg ,_eega .Gamma [0])+_eega .Matrix [3]*_ae .Pow (_bbff ,_eega .Gamma [1])+_eega .Matrix [6]*_ae .Pow (_febg ,_eega .Gamma [2]);
Y :=_eega .Matrix [1]*_ae .Pow (_bebdg ,_eega .Gamma [0])+_eega .Matrix [4]*_ae .Pow (_bbff ,_eega .Gamma [1])+_eega .Matrix [7]*_ae .Pow (_febg ,_eega .Gamma [2]);Z :=_eega .Matrix [2]*_ae .Pow (_bebdg ,_eega .Gamma [0])+_eega .Matrix [5]*_ae .Pow (_bbff ,_eega .Gamma [1])+_eega .Matrix [8]*_ae .Pow (_febg ,_eega .Gamma [2]);
_fddb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gdac :=-0.969256*X +1.875992*Y +0.041556*Z ;_dbce :=0.055648*X +-0.204043*Y +1.057311*Z ;_fddb =_ae .Min (_ae .Max (_fddb ,0),1.0);_gdac =_ae .Min (_ae .Max (_gdac ,0),1.0);_dbce =_ae .Min (_ae .Max (_dbce ,0),1.0);
return NewPdfColorDeviceRGB (_fddb ,_gdac ,_dbce ),nil ;};

// SetAction sets the PDF action for the annotation link.
func (_ddad *PdfAnnotationLink )SetAction (action *PdfAction ){_ddad ._gcb =action ;if action ==nil {_ddad .A =nil ;};};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gcfb *PdfColorspaceCalRGB )ToPdfObject ()_db .PdfObject {_efec :=&_db .PdfObjectArray {};_efec .Append (_db .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_eece :=_db .MakeDict ();if _gcfb .WhitePoint !=nil {_aafd :=_db .MakeArray (_db .MakeFloat (_gcfb .WhitePoint [0]),_db .MakeFloat (_gcfb .WhitePoint [1]),_db .MakeFloat (_gcfb .WhitePoint [2]));
_eece .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_aafd );}else {_gd .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gcfb .BlackPoint !=nil {_fgggf :=_db .MakeArray (_db .MakeFloat (_gcfb .BlackPoint [0]),_db .MakeFloat (_gcfb .BlackPoint [1]),_db .MakeFloat (_gcfb .BlackPoint [2]));_eece .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fgggf );
};if _gcfb .Gamma !=nil {_ebcf :=_db .MakeArray (_db .MakeFloat (_gcfb .Gamma [0]),_db .MakeFloat (_gcfb .Gamma [1]),_db .MakeFloat (_gcfb .Gamma [2]));_eece .Set ("\u0047\u0061\u006dm\u0061",_ebcf );};if _gcfb .Matrix !=nil {_cafc :=_db .MakeArray (_db .MakeFloat (_gcfb .Matrix [0]),_db .MakeFloat (_gcfb .Matrix [1]),_db .MakeFloat (_gcfb .Matrix [2]),_db .MakeFloat (_gcfb .Matrix [3]),_db .MakeFloat (_gcfb .Matrix [4]),_db .MakeFloat (_gcfb .Matrix [5]),_db .MakeFloat (_gcfb .Matrix [6]),_db .MakeFloat (_gcfb .Matrix [7]),_db .MakeFloat (_gcfb .Matrix [8]));
_eece .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cafc );};_efec .Append (_eece );if _gcfb ._fcgc !=nil {_gcfb ._fcgc .PdfObject =_efec ;return _gcfb ._fcgc ;};return _efec ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gaaf :=map[rune ]int {};for _ ,_cbdab :=range text {_gaaf [_cbdab ]++;};return _gaaf ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_dggfa *Outline )ToPdfObject ()_db .PdfObject {return _dggfa .ToPdfOutline ().ToPdfObject ()};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bcde *PdfAcroForm )ToPdfObject ()_db .PdfObject {_gbef :=_bcde ._fbbe ;_cecfb :=_gbef .PdfObject .(*_db .PdfObjectDictionary );if _bcde .Fields !=nil {_cdfefd :=_db .PdfObjectArray {};for _ ,_edfg :=range *_bcde .Fields {_gdefb :=_edfg .GetContext ();
if _gdefb !=nil {_cdfefd .Append (_gdefb .ToPdfObject ());}else {_cdfefd .Append (_edfg .ToPdfObject ());};};_cecfb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cdfefd );};if _bcde .NeedAppearances !=nil {_cecfb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bcde .NeedAppearances );
};if _bcde .SigFlags !=nil {_cecfb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bcde .SigFlags );};if _bcde .CO !=nil {_cecfb .Set ("\u0043\u004f",_bcde .CO );};if _bcde .DR !=nil {_cecfb .Set ("\u0044\u0052",_bcde .DR .ToPdfObject ());};if _bcde .DA !=nil {_cecfb .Set ("\u0044\u0041",_bcde .DA );
};if _bcde .Q !=nil {_cecfb .Set ("\u0051",_bcde .Q );};if _bcde .XFA !=nil {_cecfb .Set ("\u0058\u0046\u0041",_bcde .XFA );};return _gbef ;};func _edgfa (_gggc string )(map[_fa .CharCode ]_fa .GlyphName ,error ){_cbfg :=_cf .Split (_gggc ,"\u000a");_feab :=make (map[_fa .CharCode ]_fa .GlyphName );
for _ ,_aagedd :=range _cbfg {_deef :=_gfabc .FindStringSubmatch (_aagedd );if _deef ==nil {continue ;};_dabce ,_dgfd :=_deef [1],_deef [2];_aaad ,_cebdg :=_ac .Atoi (_dabce );if _cebdg !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_aagedd );
return nil ,_db .ErrTypeError ;};_feab [_fa .CharCode (_aaad )]=_fa .GlyphName (_dgfd );};_gd .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_feab );
return _feab ,nil ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_gcgd *PdfPage )Size ()(float64 ,float64 ,error ){_ffbef ,_gfdga :=_gcgd .GetMediaBox ();if _gfdga !=nil {return 0,0,_gfdga ;};_ecfd ,_feaaf :=_ffbef .Width (),_ffbef .Height ();if _ecaef :=_gcgd .Rotate ;_ecaef !=nil &&*_ecaef %360!=0&&*_ecaef %90==0{if _cafef :=(360+*_ecaef %360)%360;
_cafef ==90||_cafef ==270{_ecfd ,_feaaf =_feaaf ,_ecfd ;};};return _ecfd ,_feaaf ,nil ;};type pdfFontType3 struct{fontCommon ;_adgg *_db .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _db .PdfObject ;Encoding _db .PdfObject ;FontBBox _db .PdfObject ;FontMatrix _db .PdfObject ;FirstChar _db .PdfObject ;LastChar _db .PdfObject ;Widths _db .PdfObject ;Resources _db .PdfObject ;_dafce map[_fa .CharCode ]float64 ;_dedg _fa .TextEncoder ;
};func _ffde (_gdaf _db .PdfObject )(*fontFile ,error ){_gd .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_gdaf );
_aecg :=&fontFile {};_gdaf =_db .TraceToDirectObject (_gdaf );_bfbga ,_eeec :=_gdaf .(*_db .PdfObjectStream );if !_eeec {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_gdaf );
return nil ,_db .ErrTypeError ;};_ceece :=_bfbga .PdfObjectDictionary ;_fgcba ,_bebea :=_db .DecodeStream (_bfbga );if _bebea !=nil {return nil ,_bebea ;};_dcff ,_eeec :=_db .GetNameVal (_ceece .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_eeec {_aecg ._cafbg =_dcff ;
if _dcff =="\u0054\u0079\u0070\u0065\u0031\u0043"{_gd .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_gedg ,_ :=_db .GetIntVal (_ceece .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bbce ,_ :=_db .GetIntVal (_ceece .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _gedg > len (_fgcba ){_gedg =len (_fgcba );
};if _gedg +_bbce > len (_fgcba ){_bbce =len (_fgcba )-_gedg ;};_ggddd :=_fgcba [:_gedg ];var _degf []byte ;if _bbce > 0{_degf =_fgcba [_gedg :_gedg +_bbce ];};if _gedg > 0&&_bbce > 0{_cbad :=_aecg .loadFromSegments (_ggddd ,_degf );if _cbad !=nil {return nil ,_cbad ;
};};return _aecg ,nil ;};func (_deeg *DSS )addCerts (_adbe [][]byte )([]*_db .PdfObjectStream ,error ){return _deeg .add (&_deeg .Certs ,_deeg ._gcgac ,_adbe );};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_cgadb *VRI )ToPdfObject ()*_db .PdfObjectDictionary {_bgad :=_db .MakeDict ();_bgad .SetIfNotNil (_db .PdfObjectName ("\u0043\u0065\u0072\u0074"),_gdce (_cgadb .Cert ));_bgad .SetIfNotNil (_db .PdfObjectName ("\u004f\u0043\u0053\u0050"),_gdce (_cgadb .OCSP ));
_bgad .SetIfNotNil (_db .PdfObjectName ("\u0043\u0052\u004c"),_gdce (_cgadb .CRL ));_bgad .SetIfNotNil ("\u0054\u0055",_cgadb .TU );_bgad .SetIfNotNil ("\u0054\u0053",_cgadb .TS );return _bgad ;};func (_cfd *PdfReader )newPdfActionSoundFromDict (_gece *_db .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_gece .Get ("\u0053\u006f\u0075n\u0064"),Volume :_gece .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_gece .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_gece .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_gece .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_fcff *_db .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gacbc *PdfColorspaceDeviceGray )ToPdfObject ()_db .PdfObject {return _db .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _cefae (_ggcc _db .PdfObject )(map[_fa .CharCode ]float64 ,error ){if _ggcc ==nil {return nil ,nil ;
};_cafcb ,_gdebg :=_db .GetArray (_ggcc );if !_gdebg {return nil ,nil ;};_ebacb :=map[_fa .CharCode ]float64 {};_adgfd :=_cafcb .Len ();for _dcdf :=0;_dcdf < _adgfd -1;_dcdf ++{_cabgeb :=_db .TraceToDirectObject (_cafcb .Get (_dcdf ));_adeec ,_adbde :=_db .GetIntVal (_cabgeb );
if !_adbde {return nil ,_g .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dcdf ,_cabgeb );};_dcdf ++;if _dcdf > _adgfd -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cafcb );
};_ebfb :=_db .TraceToDirectObject (_cafcb .Get (_dcdf ));switch _ebfb .(type ){case *_db .PdfObjectArray :_eagge ,_ :=_db .GetArray (_ebfb );if _fbce ,_caec :=_eagge .ToFloat64Array ();_caec ==nil {for _cgbga :=0;_cgbga < len (_fbce );_cgbga ++{_ebacb [_fa .CharCode (_adeec +_cgbga )]=_fbce [_cgbga ];
};}else {return nil ,_g .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dcdf ,_ebfb );};case *_db .PdfObjectInteger :_egbe ,_edcgd :=_db .GetIntVal (_ebfb );
if !_edcgd {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dcdf ,_ebfb );};_dcdf ++;if _dcdf > _adgfd -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cafcb );
};_daced :=_cafcb .Get (_dcdf );_eaede ,_ecfb :=_db .GetNumberAsFloat (_daced );if _ecfb !=nil {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dcdf ,_daced );
};for _gdaab :=_adeec ;_gdaab <=_egbe ;_gdaab ++{_ebacb [_fa .CharCode (_gdaab )]=_eaede ;};default:return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dcdf ,_ebfb );
};};return _ebacb ,nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// GetAction returns the PDF action for the annotation link.
func (_fgfa *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _fgfa ._gcb !=nil {return _fgfa ._gcb ,nil ;};if _fgfa .A ==nil {return nil ,nil ;};if _fgfa ._gbaf ==nil {return nil ,nil ;};_gbbf ,_feg :=_fgfa ._gbaf .loadAction (_fgfa .A );if _feg !=nil {return nil ,_feg ;
};_fgfa ._gcb =_gbbf ;return _fgfa ._gcb ,nil ;};var (_edbg _a .Mutex ;_bddbc ="";_bcaae _cb .Time ;_adfga ="";_bbdae ="";_ceff _cb .Time ;_fdfbf ="";_aaead ="";_egbbf ="";);func (_gcecg *PdfReader )buildOutlineTree (_dgec _db .PdfObject ,_becc *PdfOutlineTreeNode ,_baba *PdfOutlineTreeNode ,_gacc map[_db .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gacc ==nil {_gacc =map[_db .PdfObject ]struct{}{};
};_gacc [_dgec ]=struct{}{};_bcgdb ,_cacd :=_dgec .(*_db .PdfIndirectObject );if !_cacd {return nil ,nil ,_g .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dgec );
};_edfc ,_gfabcb :=_bcgdb .PdfObject .(*_db .PdfObjectDictionary );if !_gfabcb {return nil ,nil ,_f .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_edfc ,_bcgdb ,_bcgdb );
if _dggg :=_edfc .Get ("\u0054\u0069\u0074l\u0065");_dggg !=nil {_gfgff ,_cbdgd :=_gcecg .newPdfOutlineItemFromIndirectObject (_bcgdb );if _cbdgd !=nil {return nil ,nil ,_cbdgd ;};_gfgff .Parent =_becc ;_gfgff .Prev =_baba ;_eafbe :=_db .ResolveReference (_edfc .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_egec :=_gacc [_eafbe ];_eafbe !=nil &&_eafbe !=_bcgdb &&!_egec {if !_db .IsNullObject (_eafbe ){_agbafe ,_bbefc ,_becbc :=_gcecg .buildOutlineTree (_eafbe ,&_gfgff .PdfOutlineTreeNode ,nil ,_gacc );if _becbc !=nil {_gd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_becbc );
}else {_gfgff .First =_agbafe ;_gfgff .Last =_bbefc ;};};};_ebcag :=_db .ResolveReference (_edfc .Get ("\u004e\u0065\u0078\u0074"));if _ ,_ceedc :=_gacc [_ebcag ];_ebcag !=nil &&_ebcag !=_bcgdb &&!_ceedc {if !_db .IsNullObject (_ebcag ){_efcg ,_beebf ,_ddag :=_gcecg .buildOutlineTree (_ebcag ,_becc ,&_gfgff .PdfOutlineTreeNode ,_gacc );
if _ddag !=nil {_gd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ddag );
}else {_gfgff .Next =_efcg ;return &_gfgff .PdfOutlineTreeNode ,_beebf ,nil ;};};};return &_gfgff .PdfOutlineTreeNode ,&_gfgff .PdfOutlineTreeNode ,nil ;};_fdeg ,_egffe :=_eadg (_bcgdb );if _egffe !=nil {return nil ,nil ,_egffe ;};_fdeg .Parent =_becc ;
if _bgce :=_edfc .Get ("\u0046\u0069\u0072s\u0074");_bgce !=nil {_bgce =_db .ResolveReference (_bgce );if _ ,_dgag :=_gacc [_bgce ];_bgce !=nil &&_bgce !=_bcgdb &&!_dgag {_dfgdf :=_db .TraceToDirectObject (_bgce );if _ ,_fgcag :=_dfgdf .(*_db .PdfObjectNull );
!_fgcag &&_dfgdf !=nil {_edef ,_defbed ,_gfaga :=_gcecg .buildOutlineTree (_bgce ,&_fdeg .PdfOutlineTreeNode ,nil ,_gacc );if _gfaga !=nil {_gd .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gfaga );
}else {_fdeg .First =_edef ;_fdeg .Last =_defbed ;};};};};return &_fdeg .PdfOutlineTreeNode ,&_fdeg .PdfOutlineTreeNode ,nil ;};func (_cdg *PdfReader )newPdfActionTransFromDict (_bgb *_db .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_bgb .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func _aggba ()_cb .Time {_edbg .Lock ();defer _edbg .Unlock ();return _ceff };

// SetBorderWidth sets the style's border width.
func (_dbfg *PdfBorderStyle )SetBorderWidth (width float64 ){_dbfg .W =&width };

// SetReason sets the `Reason` field of the signature.
func (_fgebb *PdfSignature )SetReason (reason string ){_fgebb .Reason =_db .MakeString (reason )};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_eecf :=NewPdfAnnotation ();_bafa :=&PdfAnnotationUnderline {};_bafa .PdfAnnotation =_eecf ;_bafa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eecf .SetContext (_bafa );return _bafa ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_fcbe interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_ddaf *PdfAnnotationStrikeOut )ToPdfObject ()_db .PdfObject {_ddaf .PdfAnnotation .ToPdfObject ();_cbed :=_ddaf ._addd ;_effe :=_cbed .PdfObject .(*_db .PdfObjectDictionary );_ddaf .PdfAnnotationMarkup .appendToPdfDictionary (_effe );_effe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_effe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddaf .QuadPoints );return _cbed ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_edfcf *PdfReader )GetOutlines ()(*Outline ,error ){if _edfcf ==nil {return nil ,_f .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_dcdgc :=_edfcf .GetOutlineTree ();if _dcdgc ==nil {return nil ,_f .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _gefac func (_deebe *PdfOutlineTreeNode ,_fedga *[]*OutlineItem );_gefac =func (_baegb *PdfOutlineTreeNode ,_aded *[]*OutlineItem ){if _baegb ==nil {return ;};if _baegb ._fcbe ==nil {_gd .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _fbag *OutlineItem ;if _daeef ,_aedfa :=_baegb ._fcbe .(*PdfOutlineItem );_aedfa {_dbcdg :=_daeef .Dest ;if (_dbcdg ==nil ||_db .IsNullObject (_dbcdg ))&&_daeef .A !=nil {if _cdece ,_eacbc :=_db .GetDict (_daeef .A );_eacbc {_dbcdg ,_ =_db .GetArray (_cdece .Get ("\u0044"));
};};var _aecdb OutlineDest ;if _dbcdg !=nil &&!_db .IsNullObject (_dbcdg ){if _fcaae ,_cgefa :=_dfcbaf (_dbcdg ,_edfcf );_cgefa ==nil {_aecdb =*_fcaae ;}else {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_dbcdg ,_cgefa );
};};_fbag =NewOutlineItem (_daeef .Title .Decoded (),_aecdb );*_aded =append (*_aded ,_fbag );if _daeef .Next !=nil {_gefac (_daeef .Next ,_aded );};};if _baegb .First !=nil {if _fbag !=nil {_aded =&_fbag .Entries ;};_gefac (_baegb .First ,_aded );};};
_fgfbg :=NewOutline ();_gefac (_dcdgc ,&_fgfbg .Entries );return _fgfbg ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_aagbf *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aagbf .AlternateSpace ==nil {return nil ,_f .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _aagbf .AlternateSpace .ColorToRGB (color );};func (_efeb *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_adaged *_db .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_db .PdfObjectName ;Filter *_db .PdfObjectName ;SubFilter *_db .PdfObjectName ;Contents *_db .PdfObjectString ;Cert _db .PdfObject ;ByteRange *_db .PdfObjectArray ;Reference *_db .PdfObjectArray ;Changes *_db .PdfObjectArray ;Name *_db .PdfObjectString ;
M *_db .PdfObjectString ;Location *_db .PdfObjectString ;Reason *_db .PdfObjectString ;ContactInfo *_db .PdfObjectString ;R *_db .PdfObjectInteger ;V *_db .PdfObjectInteger ;PropBuild *_db .PdfObjectDictionary ;PropAuthTime *_db .PdfObjectInteger ;PropAuthType *_db .PdfObjectName ;
};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_dfe :=NewPdfAction ();_eg :=&PdfActionNamed {};_eg .PdfAction =_dfe ;_dfe .SetContext (_eg );return _eg ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_db .PdfObjectArray ;Matrix *_db .PdfObjectArray ;Function []PdfFunction ;};func (_edac *PdfReader )newPdfAnnotationTextFromDict (_bbfd *_db .PdfObjectDictionary )(*PdfAnnotationText ,error ){_deed :=PdfAnnotationText {};
_cgf ,_edaca :=_edac .newPdfAnnotationMarkupFromDict (_bbfd );if _edaca !=nil {return nil ,_edaca ;};_deed .PdfAnnotationMarkup =_cgf ;_deed .Open =_bbfd .Get ("\u004f\u0070\u0065\u006e");_deed .Name =_bbfd .Get ("\u004e\u0061\u006d\u0065");_deed .State =_bbfd .Get ("\u0053\u0074\u0061t\u0065");
_deed .StateModel =_bbfd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_deed ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_ededa []byte ;_ffga []float64 ;};var _bdfe =_bc .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
type modelManager struct{_fgggc map[PdfModel ]_db .PdfObject ;_gffaa map[_db .PdfObject ]PdfModel ;};func _dfcbaf (_bfbcf _db .PdfObject ,_adage *PdfReader )(*OutlineDest ,error ){_fegcb ,_bgcgg :=_db .GetArray (_bfbcf );if !_bgcgg {return nil ,_f .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_fedg :=_fegcb .Len ();if _fedg < 2{return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fedg );
};_egfcg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_bcdbb :=_fegcb .Get (0);if _daba ,_fagg :=_db .GetIndirect (_bcdbb );_fagg {if _ ,_fecc ,_eggcd :=_adage .PageFromIndirectObject (_daba );_eggcd ==nil {_egfcg .Page =int64 (_fecc -1);}else {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_daba );
};_egfcg .PageObj =_daba ;}else if _dedda ,_acecg :=_db .GetIntVal (_bcdbb );_acecg {if _dedda >=0&&_dedda < len (_adage .PageList ){_egfcg .PageObj =_adage .PageList [_dedda ].GetPageAsIndirectObject ();}else {_gd .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_dedda );
};_egfcg .Page =int64 (_dedda );}else {return nil ,_g .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_bcdbb );};_ggccc ,_bgcgg :=_db .GetNameVal (_fegcb .Get (1));
if !_bgcgg {_gd .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fegcb .Get (1));
return _egfcg ,nil ;};switch _ggccc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fedg > 2{_egfcg .Y ,_ =_db .GetNumberAsFloat (_db .TraceToDirectObject (_fegcb .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fedg > 2{_egfcg .X ,_ =_db .GetNumberAsFloat (_db .TraceToDirectObject (_fegcb .Get (2)));
};case "\u0058\u0059\u005a":if _fedg > 4{_egfcg .X ,_ =_db .GetNumberAsFloat (_db .TraceToDirectObject (_fegcb .Get (2)));_egfcg .Y ,_ =_db .GetNumberAsFloat (_db .TraceToDirectObject (_fegcb .Get (3)));_egfcg .Zoom ,_ =_db .GetNumberAsFloat (_db .TraceToDirectObject (_fegcb .Get (4)));
};default:_ggccc ="\u0046\u0069\u0074";};_egfcg .Mode =_ggccc ;return _egfcg ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_cegeg *PdfField )GetContainingPdfObject ()_db .PdfObject {return _cegeg ._fbeg };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_efbbc *XObjectImage )ToImage ()(*Image ,error ){_afedb :=&Image {};if _efbbc .Height ==nil {return nil ,_f .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_afedb .Height =*_efbbc .Height ;if _efbbc .Width ==nil {return nil ,_f .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_afedb .Width =*_efbbc .Width ;if _efbbc .BitsPerComponent ==nil {switch _efbbc .Filter .(type ){case *_db .CCITTFaxEncoder ,*_db .JBIG2Encoder :_afedb .BitsPerComponent =1;
case *_db .LZWEncoder ,*_db .RunLengthEncoder :_afedb .BitsPerComponent =8;default:return nil ,_f .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_afedb .BitsPerComponent =*_efbbc .BitsPerComponent ;};_afedb .ColorComponents =_efbbc .ColorSpace .GetNumComponents ();_efbbc ._aebae .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_db .MakeInteger (int64 (_afedb .ColorComponents )));
_bgcc ,_dcgec :=_db .DecodeStream (_efbbc ._aebae );if _dcgec !=nil {return nil ,_dcgec ;};_afedb .Data =_bgcc ;if _efbbc .Decode !=nil {_cbgf ,_bcfea :=_efbbc .Decode .(*_db .PdfObjectArray );if !_bcfea {_gd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_f .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_cecfe ,_fafbd :=_cbgf .ToFloat64Array ();if _fafbd !=nil {return nil ,_fafbd ;};_afedb ._ffga =_cecfe ;};return _afedb ,nil ;};func _bddbf (_gcfaf _db .PdfObject )(*_db .PdfObjectDictionary ,*fontCommon ,error ){_abad :=&fontCommon {};
if _cfff ,_cdeaf :=_gcfaf .(*_db .PdfIndirectObject );_cdeaf {_abad ._gegf =_cfff .ObjectNumber ;};_decee ,_bbeg :=_db .GetDict (_gcfaf );if !_bbeg {_gd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gcfaf );
return nil ,nil ,ErrFontNotSupported ;};_eafgg ,_bbeg :=_db .GetNameVal (_decee .Get ("\u0054\u0079\u0070\u0065"));if !_bbeg {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _eafgg !="\u0046\u006f\u006e\u0074"{_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_eafgg ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_db .ErrTypeError ;};_cgaga ,_bbeg :=_db .GetNameVal (_decee .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bbeg {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_abad ._cdbfb =_cgaga ;_ffabb ,_bbeg :=_db .GetNameVal (_decee .Get ("\u004e\u0061\u006d\u0065"));if _bbeg {_abad ._dfegd =_ffabb ;};_adfb :=_decee .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _adfb !=nil {_abad ._bffc =_db .TraceToDirectObject (_adfb );
_cdeee ,_fcccf :=_eaga (_abad ._bffc ,_abad );if _fcccf !=nil {return _decee ,_abad ,_fcccf ;};_abad ._begaf =_cdeee ;}else if _cgaga =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_cgaga =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cbag ,_bgff :=_dc .NewCIDSystemInfo (_decee .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _bgff !=nil {return _decee ,_abad ,_bgff ;};_begga :=_g .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cbag .Registry ,_cbag .Ordering );if _dc .IsPredefinedCMap (_begga ){_abad ._begaf ,_bgff =_dc .LoadPredefinedCMap (_begga );
if _bgff !=nil {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_begga ,_bgff );
};};};_egcac :=_decee .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _egcac !=nil {_abbb ,_eecd :=_fabg (_egcac );if _eecd !=nil {_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eecd );
return _decee ,_abad ,_eecd ;};_abad ._dfff =_abbb ;};if _cgaga !="\u0054\u0079\u0070e\u0033"{_aaba ,_gdaaa :=_db .GetNameVal (_decee .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_gdaaa {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _decee ,_abad ,ErrRequiredAttributeMissing ;};_abad ._abeff =_aaba ;};return _decee ,_abad ,nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_fcfe *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fdgb ,_agfb :=color .(*PdfColorPattern );if !_agfb {_gd .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _fdgb .Color ==nil {return color ,nil ;};if _fcfe .UnderlyingCS ==nil {return nil ,_f .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _fcfe .UnderlyingCS .ColorToRGB (_fdgb .Color );
};

// WriteToFile writes the Appender output to file specified by path.
func (_bacda *PdfAppender )WriteToFile (outputPath string )error {_aedb ,_gdcf :=_ca .Create (outputPath );if _gdcf !=nil {return _gdcf ;};defer _aedb .Close ();return _bacda .Write (_aedb );};func _gabf (_cacgd *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_cacgd }};


// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ggddf :=&PdfFieldSignature {};_ggddf .PdfField =NewPdfField ();_ggddf .PdfField .SetContext (_ggddf );_ggddf .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ggddf .PdfAnnotationWidget .SetContext (_ggddf );
_ggddf .PdfAnnotationWidget ._addd =_ggddf .PdfField ._fbeg ;_ggddf .T =_db .MakeString ("");_ggddf .F =_db .MakeInteger (132);_ggddf .V =signature ;return _ggddf ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dbcec *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dbcec .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_dgegd :=&PdfOutlineItem {_afecf :_db .MakeIndirectObject (_db .MakeDict ())};_dgegd ._fcbe =_dgegd ;return _dgegd ;};

// ToPdfObject implements interface PdfModel.
func (_aeea *PdfAnnotationUnderline )ToPdfObject ()_db .PdfObject {_aeea .PdfAnnotation .ToPdfObject ();_ebge :=_aeea ._addd ;_dbbf :=_ebge .PdfObject .(*_db .PdfObjectDictionary );_aeea .PdfAnnotationMarkup .appendToPdfDictionary (_dbbf );_dbbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_dbbf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aeea .QuadPoints );return _ebge ;};func _ebeff (_fbcg StdFontName )(pdfFontSimple ,error ){_cfcd ,_fdce :=_acg .NewStdFontByName (_fbcg );if !_fdce {return pdfFontSimple {},ErrFontNotSupported ;
};_eafb :=_fbcgc (_cfcd );return _eafb ,nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_gacfd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_bcgcc *PdfFunctionType0 )processSamples ()error {_eggdf :=_cga .ResampleBytes (_bcgcc ._decda ,_bcgcc .BitsPerSample );_bcgcc ._dbgdd =_eggdf ;
return nil ;};func (_bfegc *DSS )generateHashMap (_agbgf []*_db .PdfObjectStream )(map[string ]*_db .PdfObjectStream ,error ){_ecfe :=map[string ]*_db .PdfObjectStream {};for _ ,_bbgf :=range _agbgf {_cgde ,_gdbf :=_db .DecodeStream (_bbgf );if _gdbf !=nil {return nil ,_gdbf ;
};_acdb ,_gdbf :=_fcdg (_cgde );if _gdbf !=nil {return nil ,_gdbf ;};_ecfe [string (_acdb )]=_bbgf ;};return _ecfe ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_gae :=&PdfAction {};_gae ._bcc =_db .MakeIndirectObject (_db .MakeDict ());return _gae ;};func (_baea fontCommon )coreString ()string {_bggce :="";if _baea ._dfff !=nil {_bggce =_baea ._dfff .String ();};return _g .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_baea ._cdbfb ,_baea ._abeff ,_baea ._dfegd ,_baea ._gegf ,_baea ._bffc !=nil ,_baea .fontFlags (),_bggce );
};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_eead *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _eead .RunesToCharcodeBytes ([]rune (str ));};

// Items returns all children outline items.
func (_fcgb *OutlineItem )Items ()[]*OutlineItem {return _fcgb .Entries };

// ToPdfObject returns the PDF representation of the colorspace.
func (_aeaf *PdfColorspaceSpecialSeparation )ToPdfObject ()_db .PdfObject {_ggge :=_db .MakeArray (_db .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_ggge .Append (_aeaf .ColorantName );_ggge .Append (_aeaf .AlternateSpace .ToPdfObject ());
_ggge .Append (_aeaf .TintTransform .ToPdfObject ());if _aeaf ._ggafc !=nil {_aeaf ._ggafc .PdfObject =_ggge ;return _aeaf ._ggafc ;};return _ggge ;};func _ggdfgg ()string {_edbg .Lock ();defer _edbg .Unlock ();return _aaead };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_addca *PdfFont )BytesToCharcodes (data []byte )[]_fa .CharCode {_gd .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _adaeg ,_bagc :=_addca ._fdcca .(*pdfFontType0 );_bagc &&_adaeg ._cabbf !=nil {if _baacb ,_bfece :=_adaeg .bytesToCharcodes (data );_bfece {return _baacb ;};};_baecc :=make ([]_fa .CharCode ,0,len (data )+len (data )%2);if _addca .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bedfc :=0;_bedfc < len (data );_bedfc +=2{_dfggb :=uint16 (data [_bedfc ])<<8|uint16 (data [_bedfc +1]);_baecc =append (_baecc ,_fa .CharCode (_dfggb ));};}else {for _ ,_aebe :=range data {_baecc =append (_baecc ,_fa .CharCode (_aebe ));
};};return _baecc ;};

// L returns the value of the L component of the color.
func (_cfgaa *PdfColorLab )L ()float64 {return _cfgaa [0]};func (_fdabfa *PdfWriter )hasObject (_cbadf _db .PdfObject )bool {_ ,_ecfda :=_fdabfa ._fdef [_cbadf ];return _ecfda ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func _faaa (_gdaag *_db .PdfObjectStream )(*PdfFunctionType4 ,error ){_ccgg :=&PdfFunctionType4 {};_ccgg ._fbgca =_gdaag ;_dege :=_gdaag .PdfObjectDictionary ;_bdbed ,_dbgdg :=_db .TraceToDirectObject (_dege .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_db .PdfObjectArray );
if !_dbgdg {_gd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bdbed .Len ()%2!=0{_gd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fgeeg ,_gcab :=_bdbed .ToFloat64Array ();
if _gcab !=nil {return nil ,_gcab ;};_ccgg .Domain =_fgeeg ;_bdbed ,_dbgdg =_db .TraceToDirectObject (_dege .Get ("\u0052\u0061\u006eg\u0065")).(*_db .PdfObjectArray );if _dbgdg {if _bdbed .Len ()< 0||_bdbed .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_deebb ,_acfe :=_bdbed .ToFloat64Array ();if _acfe !=nil {return nil ,_acfe ;};_ccgg .Range =_deebb ;};_bcfgc ,_gcab :=_db .DecodeStream (_gdaag );if _gcab !=nil {return nil ,_gcab ;};_ccgg ._cbfgc =_bcfgc ;_gdedg :=_fd .NewPSParser (_bcfgc );_dgdeb ,_gcab :=_gdedg .Parse ();
if _gcab !=nil {return nil ,_gcab ;};_ccgg .Program =_dgdeb ;return _ccgg ,nil ;};func (_dggd *DSS )addOCSPs (_ecdd [][]byte )([]*_db .PdfObjectStream ,error ){return _dggd .add (&_dggd .OCSPs ,_dggd ._fadeb ,_ecdd );};func (_cgfeg *pdfFontType0 )subsetRegistered ()error {_eeee ,_ecfa :=_cgfeg .DescendantFont ._fdcca .(*pdfCIDFontType2 );
if !_ecfa {_gd .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_cgfeg .DescendantFont );return nil ;};if _eeee ==nil {return nil ;
};if _eeee ._dfff ==nil {_gd .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _cgfeg ._ecbc ==nil {_gd .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_geged ,_ecfa :=_db .GetStream (_eeee ._dfff .FontFile2 );if !_ecfa {_gd .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _f .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fded ,_agab :=_db .DecodeStream (_geged );if _agab !=nil {_gd .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_agab );
return _agab ;};_dcde ,_agab :=_dd .Parse (_cfg .NewReader (_fded ));if _agab !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_geged .Stream ));
return _agab ;};var _gacg []rune ;var _gfdca *_dd .Font ;switch _agfa :=_cgfeg ._ecbc .(type ){case *_fa .TrueTypeFontEncoder :_gacg =_agfa .RegisteredRunes ();_gfdca ,_agab =_dcde .SubsetKeepRunes (_gacg );if _agab !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agab );
return _agab ;};_agfa .SubsetRegistered ();case *_fa .IdentityEncoder :_gacg =_agfa .RegisteredRunes ();_deeaa :=make ([]_dd .GlyphIndex ,len (_gacg ));for _fgad ,_cccb :=range _gacg {_deeaa [_fgad ]=_dd .GlyphIndex (_cccb );};_gfdca ,_agab =_dcde .SubsetKeepIndices (_deeaa );
if _agab !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agab );return _agab ;};case _fa .SimpleEncoder :_fafb :=_agfa .Charcodes ();for _ ,_fcda :=range _fafb {_gcgb ,_caeb :=_agfa .CharcodeToRune (_fcda );if !_caeb {_gd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fcda );
continue ;};_gacg =append (_gacg ,_gcgb );};default:return _g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_cgfeg ._ecbc );
};var _caebc _cfg .Buffer ;_agab =_gfdca .Write (&_caebc );if _agab !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agab );return _agab ;};if _cgfeg ._begaf !=nil {_eaadf :=make (map[_dc .CharCode ]rune ,len (_gacg ));for _ ,_fgabc :=range _gacg {_eadcc ,_eefdf :=_cgfeg ._ecbc .RuneToCharcode (_fgabc );
if !_eefdf {continue ;};_eaadf [_dc .CharCode (_eadcc )]=_fgabc ;};_cgfeg ._begaf =_dc .NewToUnicodeCMap (_eaadf );};_geged ,_agab =_db .MakeStream (_caebc .Bytes (),_db .NewFlateEncoder ());if _agab !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agab );
return _agab ;};_geged .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_db .MakeInteger (int64 (_caebc .Len ())));if _geda ,_ecbg :=_db .GetStream (_eeee ._dfff .FontFile2 );_ecbg {*_geda =*_geged ;}else {_eeee ._dfff .FontFile2 =_geged ;};_eedac :=_bdcg ();
if len (_cgfeg ._abeff )> 0{_cgfeg ._abeff =_cada (_cgfeg ._abeff ,_eedac );};if len (_eeee ._abeff )> 0{_eeee ._abeff =_cada (_eeee ._abeff ,_eedac );};if len (_cgfeg ._dfegd )> 0{_cgfeg ._dfegd =_cada (_cgfeg ._dfegd ,_eedac );};if _eeee ._dfff !=nil {_beaf ,_agbaf :=_db .GetName (_eeee ._dfff .FontName );
if _agbaf &&len (_beaf .String ())> 0{_aafb :=_cada (_beaf .String (),_eedac );_eeee ._dfff .FontName =_db .MakeName (_aafb );};};return nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_eadc *_db .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_affe *PdfAnnotationCaret )ToPdfObject ()_db .PdfObject {_affe .PdfAnnotation .ToPdfObject ();_efgg :=_affe ._addd ;_bebe :=_efgg .PdfObject .(*_db .PdfObjectDictionary );_affe .PdfAnnotationMarkup .appendToPdfDictionary (_bebe );_bebe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0043\u0061\u0072e\u0074"));
_bebe .SetIfNotNil ("\u0052\u0044",_affe .RD );_bebe .SetIfNotNil ("\u0053\u0079",_affe .Sy );return _efgg ;};

// ToPdfObject implements interface PdfModel.
func (_ab *PdfActionTrans )ToPdfObject ()_db .PdfObject {_ab .PdfAction .ToPdfObject ();_ada :=_ab ._bcc ;_afa :=_ada .PdfObject .(*_db .PdfObjectDictionary );_afa .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeTrans )));_afa .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ab .Trans );
return _ada ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_bfefa *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _fgea []*PdfOutlineTreeNode ;var _fggad []string ;var _fcbc func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_fcbc =func (_gfcae *PdfOutlineTreeNode ,_gegad *[]*PdfOutlineTreeNode ,_ecda *[]string ,_egfa int ){if _gfcae ==nil {return ;
};if _gfcae ._fcbe ==nil {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bcdaa ,_eedba :=_gfcae ._fcbe .(*PdfOutlineItem );if _eedba {*_gegad =append (*_gegad ,&_bcdaa .PdfOutlineTreeNode );
_deafg :=_cf .Repeat ("\u0020",_egfa *2)+_bcdaa .Title .Decoded ();*_ecda =append (*_ecda ,_deafg );};if _gfcae .First !=nil {_edba :=_cf .Repeat ("\u0020",_egfa *2)+"\u002b";*_ecda =append (*_ecda ,_edba );_fcbc (_gfcae .First ,_gegad ,_ecda ,_egfa +1);
};if _eedba &&_bcdaa .Next !=nil {_fcbc (_bcdaa .Next ,_gegad ,_ecda ,_egfa );};};_fcbc (_bfefa ._aafde ,&_fgea ,&_fggad ,0);return _fgea ,_fggad ,nil ;};func (_ccb *PdfReader )newPdfActionMovieFromDict (_dfeg *_db .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dfeg .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dfeg .Get ("\u0054"),Operation :_dfeg .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_gfgf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_edg :=NewPdfAction ();_cbgb :=&PdfActionHide {};_cbgb .PdfAction =_edg ;_edg .SetContext (_cbgb );return _cbgb ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_gceeb *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_ccbdb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_fbgbe ,_dedc :=_gceeb .GetNumPages ();if _dedc !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dedc );
return nil ,_dedc ;};for _cgedba :=1;_cgedba <=_fbgbe ;_cgedba ++{_afdcae ,_efcb :=_gceeb .GetPage (_cgedba );if _efcb !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efcb );return nil ,_efcb ;};if opts .PageProcessCallback !=nil {_efcb =opts .PageProcessCallback (_cgedba ,_afdcae );
if _efcb !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efcb );return nil ,_efcb ;};}else if opts .PageCallback !=nil {opts .PageCallback (_cgedba ,_afdcae );};_efcb =_ccbdb .AddPage (_afdcae );if _efcb !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efcb );
return nil ,_efcb ;};};_ccbdb ._gaggf =_gceeb .PdfVersion ().Major ;_ccbdb ._egfcf =_gceeb .PdfVersion ().Minor ;if !opts .SkipInfo {_becdd ,_ggdbe :=_gceeb .GetPdfInfo ();if _ggdbe !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggdbe );
}else {_ccbdb ._dggb .PdfObject =_becdd .ToPdfObject ();};};if !opts .SkipAcroForm {_egda :=_ccbdb .SetForms (_gceeb .AcroForm );if _egda !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egda );return nil ,_egda ;};};if !opts .SkipOutlines {_ccbdb .AddOutlineTree (_gceeb .GetOutlineTree ());
};if !opts .SkipOCProperties {_agaeb ,_ecbcg :=_gceeb .GetOCProperties ();if _ecbcg !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecbcg );}else {_ecbcg =_ccbdb .SetOCProperties (_agaeb );if _ecbcg !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecbcg );
};};};if !opts .SkipPageLabels {_fdacb ,_fffca :=_gceeb .GetPageLabels ();if _fffca !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fffca );}else {_fffca =_ccbdb .SetPageLabels (_fdacb );if _fffca !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fffca );
};};};if !opts .SkipNamedDests {_ebce ,_gfafb :=_gceeb .GetNamedDestinations ();if _gfafb !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfafb );}else {_gfafb =_ccbdb .SetNamedDestinations (_ebce );if _gfafb !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfafb );
};};};if !opts .SkipRotation &&_gceeb .Rotate !=nil {if _eeffe :=_ccbdb .SetRotation (*_gceeb .Rotate );_eeffe !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeffe );};};return &_ccbdb ,nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_abaed *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _abaed ._gcggg !=nil {return _abaed ._gcggg ,nil ;};if _abaed .ColorSpace ==nil {return nil ,nil ;};_ddbee ,_gffbb :=_gdfee (_abaed .ColorSpace );if _gffbb !=nil {return nil ,_gffbb ;
};_abaed ._gcggg =_ddbee ;return _abaed ._gcggg ,nil ;};func (_afadd *fontFile )loadFromSegments (_ccbfc ,_dfcba []byte )error {_gd .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_ccbfc ),len (_dfcba ));
_fbdaa :=_afadd .parseASCIIPart (_ccbfc );if _fbdaa !=nil {return _fbdaa ;};_gd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_afadd );if len (_dfcba )==0{return nil ;};_gd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_afadd );
return nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gagg *pdfCIDFontType0 )ToPdfObject ()_db .PdfObject {return _db .MakeNull ()};func (_dagd *PdfReader )newPdfSignatureFromIndirect (_fbcea *_db .PdfIndirectObject )(*PdfSignature ,error ){_abgd ,_ddfef :=_fbcea .PdfObject .(*_db .PdfObjectDictionary );
if !_ddfef {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _fgadgb ,_bfgfb :=_dagd ._afdb .GetModelFromPrimitive (_fbcea ).(*PdfSignature );_bfgfb {return _fgadgb ,nil ;};_gcgce :=&PdfSignature {};_gcgce ._adaged =_fbcea ;_gcgce .Type ,_ =_db .GetName (_abgd .Get ("\u0054\u0079\u0070\u0065"));
_gcgce .Filter ,_ddfef =_db .GetName (_abgd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_ddfef {_gd .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gcgce .SubFilter ,_ =_db .GetName (_abgd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_gcgce .Contents ,_ddfef =_db .GetString (_abgd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_ddfef {_gd .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gcgce .Cert =_abgd .Get ("\u0043\u0065\u0072\u0074");_gcgce .ByteRange ,_ =_db .GetArray (_abgd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_gcgce .Reference ,_ =_db .GetArray (_abgd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_gcgce .Changes ,_ =_db .GetArray (_abgd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_gcgce .Name ,_ =_db .GetString (_abgd .Get ("\u004e\u0061\u006d\u0065"));_gcgce .M ,_ =_db .GetString (_abgd .Get ("\u004d"));_gcgce .Location ,_ =_db .GetString (_abgd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_gcgce .Reason ,_ =_db .GetString (_abgd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_gcgce .ContactInfo ,_ =_db .GetString (_abgd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_gcgce .R ,_ =_db .GetInt (_abgd .Get ("\u0052"));
_gcgce .V ,_ =_db .GetInt (_abgd .Get ("\u0056"));_gcgce .PropBuild ,_ =_db .GetDict (_abgd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_gcgce .PropAuthTime ,_ =_db .GetInt (_abgd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_gcgce .PropAuthType ,_ =_db .GetName (_abgd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _gcgce ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_afdde *_db .PdfObjectDictionary ;_fcgc *_db .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_fef *PdfActionSubmitForm )ToPdfObject ()_db .PdfObject {_fef .PdfAction .ToPdfObject ();_bcd :=_fef ._bcc ;_ged :=_bcd .PdfObject .(*_db .PdfObjectDictionary );_ged .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeSubmitForm )));if _fef .F !=nil {_ged .Set ("\u0046",_fef .F .ToPdfObject ());
};_ged .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fef .Fields );_ged .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fef .Flags );return _bcd ;};

// String returns the name of the colorspace (DeviceN).
func (_dfgd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_gcfbd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_gcfbd ._gcggg =colorspace ;};

// B returns the value of the B component of the color.
func (_bdcc *PdfColorLab )B ()float64 {return _bdcc [2]};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _db .PdfObject ;V _db .PdfObject ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_db .PdfObjectStream ;OCSP []*_db .PdfObjectStream ;CRL []*_db .PdfObjectStream ;TU *_db .PdfObjectString ;TS *_db .PdfObjectString ;};func (_fgbga *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _fgbga ._dfff };


// SetContext sets the sub annotation (context).
func (_fde *PdfAnnotation )SetContext (ctx PdfModel ){_fde ._aeb =ctx };

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_db .PdfObjectInteger ;BitsPerComponent *_db .PdfObjectInteger ;BitsPerFlag *_db .PdfObjectInteger ;Decode *_db .PdfObjectArray ;Function []PdfFunction ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_babfe *DSS )GetContainingPdfObject ()_db .PdfObject {return _babfe ._fdcg };

// A returns the value of the A component of the color.
func (_dfba *PdfColorCalRGB )A ()float64 {return _dfba [0]};func (_bag *PdfReader )newPdfActionSubmitFormFromDict (_dbg *_db .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_acc ,_eca :=_ebae (_dbg .Get ("\u0046"));if _eca !=nil {return nil ,_eca ;
};return &PdfActionSubmitForm {F :_acc ,Fields :_dbg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dbg .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_dcdgff *PdfPageResources )HasExtGState (keyName _db .PdfObjectName )bool {_ ,_ebbaff :=_dcdgff .GetFontByName (keyName );return _ebbaff ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _db .PdfObject ;};func (_aad *PdfReader )newPdfAnnotationUnderlineFromDict (_cce *_db .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bfd :=PdfAnnotationUnderline {};_ggd ,_efea :=_aad .newPdfAnnotationMarkupFromDict (_cce );
if _efea !=nil {return nil ,_efea ;};_bfd .PdfAnnotationMarkup =_ggd ;_bfd .QuadPoints =_cce .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bfd ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_db .PdfObjectArray ;TI *_db .PdfObjectInteger ;I *_db .PdfObjectArray ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_db .PdfObjectArray ;ExtGState _db .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cabga *PdfShadingType7 )ToPdfObject ()_db .PdfObject {_cabga .PdfShading .ToPdfObject ();_agdfg ,_cceade :=_cabga .getShadingDict ();if _cceade !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cabga .BitsPerCoordinate !=nil {_agdfg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cabga .BitsPerCoordinate );};if _cabga .BitsPerComponent !=nil {_agdfg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cabga .BitsPerComponent );
};if _cabga .BitsPerFlag !=nil {_agdfg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cabga .BitsPerFlag );};if _cabga .Decode !=nil {_agdfg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cabga .Decode );};if _cabga .Function !=nil {if len (_cabga .Function )==1{_agdfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cabga .Function [0].ToPdfObject ());
}else {_gddc :=_db .MakeArray ();for _ ,_gfabd :=range _cabga .Function {_gddc .Append (_gfabd .ToPdfObject ());};_agdfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gddc );};};return _cabga ._eccbgb ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gbe :=NewPdfAction ();_bcb :=&PdfActionJavaScript {};_bcb .PdfAction =_gbe ;_gbe .SetContext (_bcb );return _bcb ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_egccb pdfFontSimple )GetCharMetrics (code _fa .CharCode )(_acg .CharMetrics ,bool ){if _ecffa ,_eagd :=_egccb ._gfabb [code ];_eagd {return _acg .CharMetrics {Wx :_ecffa },true ;};if _acg .IsStdFont (_acg .StdFontName (_egccb ._abeff )){return _acg .CharMetrics {Wx :250},true ;
};return _acg .CharMetrics {},false ;};var _egad =_bc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _db .PdfObject ;BS _db .PdfObject ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// String returns a human readable description of `fontfile`.
func (_fbfgc *fontFile )String ()string {_dbcea :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fbfgc ._dfegf !=nil {_dbcea =_fbfgc ._dfegf .String ();};return _g .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fbfgc ._gbabd ,_dbcea );
};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gdef *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gdef .flattenFieldsWithOpts (false ,appgen ,opts );};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_eeeb _dg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_dggfb _ad .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_aada _ad .Image )(*Image ,error );

// Compress an image.
Compress (_cegg *Image ,_gcaaa int64 )(*Image ,error );};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_db .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_db .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_db .PdfObjectBool ;_facee PdfModel ;_eccbgb _db .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eeadf *PdfPageResourcesColorspaces )ToPdfObject ()_db .PdfObject {_dgafe :=_db .MakeDict ();for _ ,_bafcf :=range _eeadf .Names {_dgafe .Set (_db .PdfObjectName (_bafcf ),_eeadf .Colorspaces [_bafcf ].ToPdfObject ());};if _eeadf ._dgdgd !=nil {_eeadf ._dgdgd .PdfObject =_dgafe ;
return _eeadf ._dgdgd ;};return _dgafe ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_dageb *PdfAppender )Write (w _dg .Writer )error {if _dageb ._acga {return _f .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_dfgg :=NewPdfWriter ();_fdcb ,_dffc :=_db .GetDict (_dfgg ._fbffe );if !_dffc {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_defgg ,_dffc :=_fdcb .Get ("\u004b\u0069\u0064\u0073").(*_db .PdfObjectArray );if !_dffc {return _f .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bbc ,_dffc :=_fdcb .Get ("\u0043\u006f\u0075n\u0074").(*_db .PdfObjectInteger );if !_dffc {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_cagc :=_dageb ._effb ._ceaabg ;_edgg :=_cagc .GetTrailer ();if _edgg ==nil {return _f .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gcd ,_dffc :=_db .GetIndirect (_edgg .Get ("\u0052\u006f\u006f\u0074"));
if !_dffc {return _f .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_efee ,_dffc :=_db .GetDict (_gcd );if !_dffc {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gcd ,*_edgg );
return _f .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_dceb :=range _efee .Keys (){if _dfgg ._egdad .Get (_dceb )==nil {_dea :=_efee .Get (_dceb );_dfgg ._egdad .Set (_dceb ,_dea );};};if _dageb ._edce !=nil {_dfgg ._egdad .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dageb ._edce .ToPdfObject ());
_dageb .updateObjectsDeep (_dageb ._edce .ToPdfObject (),nil );};if _dageb ._dgaab !=nil {_dageb .updateObjectsDeep (_dageb ._dgaab .ToPdfObject (),nil );_dfgg ._egdad .Set ("\u0044\u0053\u0053",_dageb ._dgaab .GetContainingPdfObject ());};if _dfgg ._gaggf < 2{_dfgg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_dfgg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_dageb .addNewObject (_dfgg ._dggb );_dageb .addNewObject (_dfgg ._efeda );_addb :=false ;if len (_dageb ._effb .PageList )!=len (_dageb ._afb ){_addb =true ;}else {for _fffgb :=range _dageb ._effb .PageList {switch {case _dageb ._afb [_fffgb ]==_dageb ._effb .PageList [_fffgb ]:case _dageb ._afb [_fffgb ]==_dageb .Reader .PageList [_fffgb ]:default:_addb =true ;
};if _addb {break ;};};};if _addb {_dageb .updateObjectsDeep (_dfgg ._fbffe ,nil );}else {_dageb ._gbgd [_dfgg ._fbffe ]=struct{}{};};_dfgg ._fbffe .ObjectNumber =_dageb .Reader ._cgfc .ObjectNumber ;_dageb ._dage [_dfgg ._fbffe ]=_dageb .Reader ._cgfc .ObjectNumber ;
_fecb :=[]_db .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ffcgf :=range _dageb ._afb {_effef :=_ffcgf .ToPdfObject ();
*_bbc =*_bbc +1;if _dfdd ,_cdcf :=_effef .(*_db .PdfIndirectObject );_cdcf &&_dfdd .GetParser ()==_dageb ._effb ._ceaabg {_defgg .Append (&_dfdd .PdfObjectReference );continue ;};if _adcd ,_bfed :=_db .GetDict (_effef );_bfed {_edff ,_dbgd :=_adcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_db .PdfIndirectObject );
for _dbgd {_gd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edff );_fegca ,_egd :=_edff .PdfObject .(*_db .PdfObjectDictionary );if !_egd {return _f .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bacd :=range _fecb {_gd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bacd );if _adcd .Get (_bacd )!=nil {_gd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _adga :=_fegca .Get (_bacd );_adga !=nil {_gd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bacd );_adcd .Set (_bacd ,_adga );};};_edff ,_dbgd =_fegca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_db .PdfIndirectObject );
_gd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fegca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_adcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dfgg ._fbffe );};_dageb .updateObjectsDeep (_effef ,nil );
_defgg .Append (_effef );};if _ ,_fccc :=_dageb ._cfec .Seek (0,_dg .SeekStart );_fccc !=nil {return _fccc ;};_cca :=make (map[SignatureHandler ]_dg .Writer );_cbeba :=_db .MakeArray ();for _ ,_ceag :=range _dageb ._bbg {if _fbbc ,_gafa :=_db .GetIndirect (_ceag );
_gafa {if _dbde ,_gcg :=_fbbc .PdfObject .(*pdfSignDictionary );_gcg {_defd :=*_dbde ._gcdd ;var _egdd error ;_cca [_defd ],_egdd =_defd .NewDigest (_dbde ._eebcd );if _egdd !=nil {return _egdd ;};_cbeba .Append (_db .MakeInteger (0xfffff),_db .MakeInteger (0xfffff));
};};};if _cbeba .Len ()> 0{_cbeba .Append (_db .MakeInteger (0xfffff),_db .MakeInteger (0xfffff));};for _ ,_afgb :=range _dageb ._bbg {if _ebef ,_agce :=_db .GetIndirect (_afgb );_agce {if _bfeg ,_afgf :=_ebef .PdfObject .(*pdfSignDictionary );_afgf {_bfeg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cbeba );
};};};_acegf :=len (_cca )> 0;var _dfdde _dg .Reader =_dageb ._cfec ;if _acegf {_ceee :=make ([]_dg .Writer ,0,len (_cca ));for _ ,_ebca :=range _cca {_ceee =append (_ceee ,_ebca );};_dfdde =_dg .TeeReader (_dageb ._cfec ,_dg .MultiWriter (_ceee ...));
};_bcbbe ,_ebbe :=_dg .Copy (w ,_dfdde );if _ebbe !=nil {return _ebbe ;};if len (_dageb ._bbg )==0{return nil ;};_dfgg ._adeef =_bcbbe ;_dfgg .ObjNumOffset =_dageb ._bge ;_dfgg ._gcabf =true ;_dfgg ._cbedb =_dageb ._ddeae ;_dfgg ._ggef =_dageb ._bbfdf ;
_dfgg ._aebd =_dageb ._ggdg ;_dfgg ._egfcf =_dageb ._effb .PdfVersion ().Minor ;_dfgg ._caee =_dageb ._dage ;_cggb :=_dageb ._bebf .GetXrefType ();if _cggb !=nil {_gedd :=*_cggb ==_db .XrefTypeObjectStream ;_dfgg ._edcdg =&_gedd ;};_dfgg ._fdef =map[_db .PdfObject ]struct{}{};
_dfgg ._fadge =[]_db .PdfObject {};for _ ,_gbde :=range _dageb ._bbg {if _ ,_dfdb :=_dageb ._gbgd [_gbde ];_dfdb {continue ;};_dfgg .addObject (_gbde );};_abgc :=w ;if _acegf {_abgc =_cfg .NewBuffer (nil );};if _ebbd :=_dfgg .Write (_abgc );_ebbd !=nil {return _ebbd ;
};if _acegf {_abcee :=_abgc .(*_cfg .Buffer ).Bytes ();_ebcac :=_db .MakeArray ();var _ddca []*pdfSignDictionary ;var _ddgf int64 ;for _ ,_cbcc :=range _dfgg ._fadge {if _aebc ,_caea :=_db .GetIndirect (_cbcc );_caea {if _fecg ,_caa :=_aebc .PdfObject .(*pdfSignDictionary );
_caa {_ddca =append (_ddca ,_fecg );_eadd :=_fecg ._acebg +int64 (_fecg ._aafed );_ebcac .Append (_db .MakeInteger (_ddgf ),_db .MakeInteger (_eadd -_ddgf ));_ddgf =_fecg ._acebg +int64 (_fecg ._febbf );};};};_ebcac .Append (_db .MakeInteger (_ddgf ),_db .MakeInteger (_bcbbe +int64 (len (_abcee ))-_ddgf ));
_cadff :=[]byte (_ebcac .WriteString ());for _ ,_edeaa :=range _ddca {_dcba :=int (_edeaa ._acebg -_bcbbe );for _geac :=_edeaa ._aebfde ;_geac < _edeaa ._fefa ;_geac ++{_abcee [_dcba +_geac ]=' ';};_cgdac :=_abcee [_dcba +_edeaa ._aebfde :_dcba +_edeaa ._fefa ];
copy (_cgdac ,_cadff );};var _dbfe int ;for _ ,_egg :=range _ddca {_deeb :=int (_egg ._acebg -_bcbbe );_caff :=_abcee [_dbfe :_deeb +_egg ._aafed ];_gdbb :=*_egg ._gcdd ;_cca [_gdbb ].Write (_caff );_dbfe =_deeb +_egg ._febbf ;};for _ ,_fdg :=range _ddca {_cbaec :=_abcee [_dbfe :];
_babb :=*_fdg ._gcdd ;_cca [_babb ].Write (_cbaec );};for _ ,_becd :=range _ddca {_aabb :=int (_becd ._acebg -_bcbbe );_efbb :=*_becd ._gcdd ;_cccd :=_cca [_efbb ];if _gfddf :=_efbb .Sign (_becd ._eebcd ,_cccd );_gfddf !=nil {return _gfddf ;};_becd ._eebcd .ByteRange =_ebcac ;
_eaad :=[]byte (_becd ._eebcd .Contents .WriteString ());for _fadg :=_becd ._aebfde ;_fadg < _becd ._fefa ;_fadg ++{_abcee [_aabb +_fadg ]=' ';};for _dgfb :=_becd ._aafed ;_dgfb < _becd ._febbf ;_dgfb ++{_abcee [_aabb +_dgfb ]=' ';};_cebc :=_abcee [_aabb +_becd ._aebfde :_aabb +_becd ._fefa ];
copy (_cebc ,_cadff );_cebc =_abcee [_aabb +_becd ._aafed :_aabb +_becd ._febbf ];copy (_cebc ,_eaad );};_edca :=_cfg .NewBuffer (_abcee );_ ,_ebbe =_dg .Copy (w ,_edca );if _ebbe !=nil {return _ebbe ;};};_dageb ._acga =true ;return nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_egf :=PdfColorDeviceRGB {r ,g ,b };return &_egf ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _db .PdfObject ;_afbe []byte ;_afag *_db .PdfIndirectObject ;};func _debgf (_dgee *_db .PdfObjectDictionary ,_fdec *fontCommon )(*pdfCIDFontType2 ,error ){if _fdec ._cdbfb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fdec );
return nil ,_db .ErrRangeError ;};_fagadf :=_gabf (_fdec );_bddf ,_cgada :=_db .GetDict (_dgee .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cgada {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fdec );
return nil ,ErrRequiredAttributeMissing ;};_fagadf .CIDSystemInfo =_bddf ;_fagadf .DW =_dgee .Get ("\u0044\u0057");_fagadf .W =_dgee .Get ("\u0057");_fagadf .DW2 =_dgee .Get ("\u0044\u0057\u0032");_fagadf .W2 =_dgee .Get ("\u0057\u0032");_fagadf .CIDToGIDMap =_dgee .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_fagadf ._dcdgg =1000.0;if _dadb ,_egeaa :=_db .GetNumberAsFloat (_fagadf .DW );_egeaa ==nil {_fagadf ._dcdgg =_dadb ;};_fegde ,_fdfac :=_cefae (_fagadf .W );if _fdfac !=nil {return nil ,_fdfac ;};if _fegde ==nil {_fegde =map[_fa .CharCode ]float64 {};
};_fagadf ._abgcd =_fegde ;return _fagadf ,nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_db .PdfObjectDictionary )(*PdfPageResources ,error ){_cfgag :=NewPdfPageResources ();if _gfaaf :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gfaaf !=nil {_cfgag .ExtGState =_gfaaf ;};if _cabbc :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_cabbc !=nil &&!_db .IsNullObject (_cabbc ){_cfgag .ColorSpace =_cabbc ;};if _gdcaf :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gdcaf !=nil {_cfgag .Pattern =_gdcaf ;};if _gcfff :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_gcfff !=nil {_cfgag .Shading =_gcfff ;
};if _cdcb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cdcb !=nil {_cfgag .XObject =_cdcb ;};if _dcec :=_db .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_dcec !=nil {_cfgag .Font =_dcec ;};if _agebc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_agebc !=nil {_cfgag .ProcSet =_agebc ;};if _ccgfd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ccgfd !=nil {_cfgag .Properties =_ccgfd ;};return _cfgag ,nil ;};func _ccbf (_gbad *PdfPage )map[_db .PdfObjectName ]_db .PdfObject {_abf :=make (map[_db .PdfObjectName ]_db .PdfObject );
if _gbad .Resources ==nil {return _abf ;};if _gbad .Resources .Font !=nil {if _bebb ,_ffge :=_db .GetDict (_gbad .Resources .Font );_ffge {for _ ,_bdaf :=range _bebb .Keys (){_abf [_bdaf ]=_bebb .Get (_bdaf );};};};if _gbad .Resources .ExtGState !=nil {if _gccgb ,_afgc :=_db .GetDict (_gbad .Resources .ExtGState );
_afgc {for _ ,_ecaf :=range _gccgb .Keys (){_abf [_ecaf ]=_gccgb .Get (_ecaf );};};};if _gbad .Resources .XObject !=nil {if _dfed ,_gage :=_db .GetDict (_gbad .Resources .XObject );_gage {for _ ,_cfcg :=range _dfed .Keys (){_abf [_cfcg ]=_dfed .Get (_cfcg );
};};};if _gbad .Resources .Pattern !=nil {if _dfcb ,_gaea :=_db .GetDict (_gbad .Resources .Pattern );_gaea {for _ ,_cefa :=range _dfcb .Keys (){_abf [_cefa ]=_dfcb .Get (_cefa );};};};if _gbad .Resources .Shading !=nil {if _cadgc ,_bbbd :=_db .GetDict (_gbad .Resources .Shading );
_bbbd {for _ ,_bfeb :=range _cadgc .Keys (){_abf [_bfeb ]=_cadgc .Get (_bfeb );};};};if _gbad .Resources .ProcSet !=nil {if _egc ,_gbgg :=_db .GetDict (_gbad .Resources .ProcSet );_gbgg {for _ ,_abbe :=range _egc .Keys (){_abf [_abbe ]=_egc .Get (_abbe );
};};};if _gbad .Resources .Properties !=nil {if _aage ,_agdc :=_db .GetDict (_gbad .Resources .Properties );_agdc {for _ ,_cbeb :=range _aage .Keys (){_abf [_cbeb ]=_aage .Get (_cbeb );};};};return _abf ;};

// ToPdfObject implements interface PdfModel.
func (_cbcb *PdfAnnotationLink )ToPdfObject ()_db .PdfObject {_cbcb .PdfAnnotation .ToPdfObject ();_fbdcg :=_cbcb ._addd ;_cdfd :=_fbdcg .PdfObject .(*_db .PdfObjectDictionary );_cdfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u004c\u0069\u006e\u006b"));
if _cbcb ._gcb !=nil &&_cbcb ._gcb ._dbc !=nil {_cdfd .Set ("\u0041",_cbcb ._gcb ._dbc .ToPdfObject ());}else if _cbcb .A !=nil {_cdfd .Set ("\u0041",_cbcb .A );};_cdfd .SetIfNotNil ("\u0044\u0065\u0073\u0074",_cbcb .Dest );_cdfd .SetIfNotNil ("\u0048",_cbcb .H );
_cdfd .SetIfNotNil ("\u0050\u0041",_cbcb .PA );_cdfd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cbcb .QuadPoints );_cdfd .SetIfNotNil ("\u0042\u0053",_cbcb .BS );return _fbdcg ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gbbbc *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gbbbc ._acdad =outlineTree };

// ToPdfObject implements interface PdfModel.
func (_gbff *PdfAnnotationFileAttachment )ToPdfObject ()_db .PdfObject {_gbff .PdfAnnotation .ToPdfObject ();_gcaf :=_gbff ._addd ;_gff :=_gcaf .PdfObject .(*_db .PdfObjectDictionary );_gbff .PdfAnnotationMarkup .appendToPdfDictionary (_gff );_gff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_gff .SetIfNotNil ("\u0046\u0053",_gbff .FS );_gff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gbff .Name );return _gcaf ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ead :=NewPdfAction ();_ace :=&PdfActionResetForm {};_ace .PdfAction =_ead ;_ead .SetContext (_ace );return _ace ;};func _cada (_afadg ,_dbcc string )string {if _cf .Contains (_afadg ,"\u002b"){_cbdc :=_cf .Split (_afadg ,"\u002b");
if len (_cbdc )==2{_afadg =_cbdc [1];};};return _dbcc +"\u002b"+_afadg ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_gfbcg :=&PdfSignature {Type :_db .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fgdbdd :=&pdfSignDictionary {PdfObjectDictionary :_db .MakeDict (),_gcdd :&handler ,_eebcd :_gfbcg };_gfbcg ._adaged =_db .MakeIndirectObject (_fgdbdd );
return _gfbcg ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_fgbea :=appender .Reader .DSS ;if _fgbea ==nil {_fgbea =NewDSS ();};if _afgcb :=_fgbea .generateHashMaps ();_afgcb !=nil {return nil ,_afgcb ;};return &LTV {CertClient :_ga .NewCertClient (),OCSPClient :_ga .NewOCSPClient (),CRLClient :_ga .NewCRLClient (),SkipExisting :true ,_ceeda :appender ,_ebaef :_fgbea },nil ;
};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_efaa :=&PdfOutline {_dfcg :_db .MakeIndirectObject (_db .MakeDict ())};_efaa ._fcbe =_efaa ;return _efaa ;};

// ToPdfObject returns the PDF representation of the function.
func (_accgbf *PdfFunctionType3 )ToPdfObject ()_db .PdfObject {_bddgba :=_db .MakeDict ();_bddgba .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_db .MakeInteger (3));_edege :=&_db .PdfObjectArray {};for _ ,_fgabf :=range _accgbf .Domain {_edege .Append (_db .MakeFloat (_fgabf ));
};_bddgba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edege );if _accgbf .Range !=nil {_cfabc :=&_db .PdfObjectArray {};for _ ,_afea :=range _accgbf .Range {_cfabc .Append (_db .MakeFloat (_afea ));};_bddgba .Set ("\u0052\u0061\u006eg\u0065",_cfabc );
};if _accgbf .Functions !=nil {_gecf :=&_db .PdfObjectArray {};for _ ,_cdca :=range _accgbf .Functions {_gecf .Append (_cdca .ToPdfObject ());};_bddgba .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_gecf );};if _accgbf .Bounds !=nil {_cgab :=&_db .PdfObjectArray {};
for _ ,_ebefg :=range _accgbf .Bounds {_cgab .Append (_db .MakeFloat (_ebefg ));};_bddgba .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_cgab );};if _accgbf .Encode !=nil {_cdebe :=&_db .PdfObjectArray {};for _ ,_ffabc :=range _accgbf .Encode {_cdebe .Append (_db .MakeFloat (_ffabc ));
};_bddgba .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_cdebe );};if _accgbf ._abfac !=nil {_accgbf ._abfac .PdfObject =_bddgba ;return _accgbf ._abfac ;};return _bddgba ;};func (_fgbe *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _abgbb :=_fgbe ._dfff ;
_abgbb !=nil {return _abgbb ;};return _fgbe ._gdcce ;};type pdfCIDFontType0 struct{fontCommon ;_dgae *_db .PdfIndirectObject ;_edgc _fa .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_db .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _db .PdfObject ;W _db .PdfObject ;DW2 _db .PdfObject ;W2 _db .PdfObject ;_facb map[_fa .CharCode ]float64 ;_bgbde float64 ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ddcdd *PdfPageResources )GetXObjectImageByName (keyName _db .PdfObjectName )(*XObjectImage ,error ){_eeageca ,_fbffa :=_ddcdd .GetXObjectByName (keyName );if _eeageca ==nil {return nil ,nil ;};if _fbffa !=XObjectTypeImage {return nil ,_f .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_dcbac ,_fage :=NewXObjectImageFromStream (_eeageca );if _fage !=nil {return nil ,_fage ;};return _dcbac ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_bffbe PdfModel ;_afae _db .PdfObject ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_db .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ggafc *_db .PdfIndirectObject ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_abbc *PdfFieldButton )IsRadio ()bool {return _abbc .GetType ()==ButtonTypeRadio };

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_dgeaa *PdfTilingPattern )ToPdfObject ()_db .PdfObject {_dgeaa .PdfPattern .ToPdfObject ();_fffgd :=_dgeaa .getDict ();if _dgeaa .PaintType !=nil {_fffgd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_dgeaa .PaintType );};if _dgeaa .TilingType !=nil {_fffgd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dgeaa .TilingType );
};if _dgeaa .BBox !=nil {_fffgd .Set ("\u0042\u0042\u006f\u0078",_dgeaa .BBox .ToPdfObject ());};if _dgeaa .XStep !=nil {_fffgd .Set ("\u0058\u0053\u0074e\u0070",_dgeaa .XStep );};if _dgeaa .YStep !=nil {_fffgd .Set ("\u0059\u0053\u0074e\u0070",_dgeaa .YStep );
};if _dgeaa .Resources !=nil {_fffgd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dgeaa .Resources .ToPdfObject ());};if _dgeaa .Matrix !=nil {_fffgd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dgeaa .Matrix );};return _dgeaa ._afae ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _db .PdfObject ;MK _db .PdfObject ;A _db .PdfObject ;AA _db .PdfObject ;};

// String returns a string representation of what flags are set.
func (_bgea FieldFlag )String ()string {_eccd :="";if _bgea ==FieldFlagClear {_eccd ="\u0043\u006c\u0065a\u0072";return _eccd ;};if _bgea &FieldFlagReadOnly > 0{_eccd +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bgea &FieldFlagRequired > 0{_eccd +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _bgea &FieldFlagNoExport > 0{_eccd +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bgea &FieldFlagNoToggleToOff > 0{_eccd +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bgea &FieldFlagRadio > 0{_eccd +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _bgea &FieldFlagPushbutton > 0{_eccd +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bgea &FieldFlagRadiosInUnision > 0{_eccd +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _bgea &FieldFlagMultiline > 0{_eccd +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _bgea &FieldFlagPassword > 0{_eccd +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bgea &FieldFlagFileSelect > 0{_eccd +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _bgea &FieldFlagDoNotScroll > 0{_eccd +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _bgea &FieldFlagComb > 0{_eccd +="\u007c\u0043\u006fm\u0062";};if _bgea &FieldFlagRichText > 0{_eccd +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _bgea &FieldFlagDoNotSpellCheck > 0{_eccd +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _bgea &FieldFlagCombo > 0{_eccd +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bgea &FieldFlagEdit > 0{_eccd +="\u007c\u0045\u0064i\u0074";};if _bgea &FieldFlagSort > 0{_eccd +="\u007c\u0053\u006fr\u0074";};if _bgea &FieldFlagMultiSelect > 0{_eccd +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _bgea &FieldFlagCommitOnSelChange > 0{_eccd +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _cf .Trim (_eccd ,"\u007c");};func (_faa *PdfReader )newPdfAnnotationCaretFromDict (_cgbe *_db .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ded :=PdfAnnotationCaret {};
_bfb ,_eacg :=_faa .newPdfAnnotationMarkupFromDict (_cgbe );if _eacg !=nil {return nil ,_eacg ;};_ded .PdfAnnotationMarkup =_bfb ;_ded .RD =_cgbe .Get ("\u0052\u0044");_ded .Sy =_cgbe .Get ("\u0053\u0079");return &_ded ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_aaff *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bdcb ,_ffbe :=color .(*PdfColorDeviceGray );if !_ffbe {_gd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bdcb ),float64 (*_bdcb ),float64 (*_bdcb )),nil ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gfggf *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_db .StreamEncoder ,error ){_ebbfg ,_cgcb :=_gfggf ._afae .(*_db .PdfObjectStream );if !_cgcb {_gd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfggf ._afae );
return nil ,nil ,_db .ErrTypeError ;};_gcdc ,_ggcd :=_db .DecodeStream (_ebbfg );if _ggcd !=nil {_gd .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_ggcd );
return nil ,nil ,_ggcd ;};_dggdf ,_ggcd :=_db .NewEncoderFromStream (_ebbfg );if _ggcd !=nil {_gd .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ggcd );
return nil ,nil ,_ggcd ;};return _gcdc ,_dggdf ,nil ;};func (_egead *PdfPage )getParentResources ()(*PdfPageResources ,error ){_debgg :=_egead .Parent ;for _debgg !=nil {_edbb ,_bcbad :=_db .GetDict (_debgg );if !_bcbad {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _ebcfg :=_edbb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ebcfg !=nil {_ggde ,_bcaee :=_db .GetDict (_ebcfg );
if !_bcaee {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bagfb ,_dbfgg :=NewPdfPageResourcesFromDict (_ggde );if _dbfgg !=nil {return nil ,_dbfgg ;};return _bagfb ,nil ;
};_debgg =_edbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_gbbff *PdfSignature )SetLocation (location string ){_gbbff .Location =_db .MakeString (location )};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _dg .ReadSeeker )(*PdfFont ,error ){const _gdae =_fa .CharCode (32);const _eaba =_fa .CharCode (255);_fgga ,_daega :=_ee .ReadAll (r );if _daega !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_daega );
return nil ,_daega ;};_dddb ,_daega :=_acg .TtfParse (_cfg .NewReader (_fgga ));if _daega !=nil {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_daega );
return nil ,_daega ;};_dfgfg :=&pdfFontSimple {_gfabb :make (map[_fa .CharCode ]float64 ),fontCommon :fontCommon {_cdbfb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_dfgfg ._gffaf =_fa .NewWinAnsiEncoder ();_dfgfg ._abeff =_dddb .PostScriptName ;
_dfgfg .FirstChar =_db .MakeInteger (int64 (_gdae ));_dfgfg .LastChar =_db .MakeInteger (int64 (_eaba ));_bgae :=1000.0/float64 (_dddb .UnitsPerEm );if len (_dddb .Widths )<=0{return nil ,_f .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bffe :=_bgae *float64 (_dddb .Widths [0]);_ebfd :=make ([]float64 ,0,_eaba -_gdae +1);for _ebdgb :=_gdae ;_ebdgb <=_eaba ;_ebdgb ++{_gbfcf ,_gcffc :=_dfgfg .Encoder ().CharcodeToRune (_ebdgb );if !_gcffc {_gd .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ebdgb );
_ebfd =append (_ebfd ,_bffe );continue ;};_eecff ,_eege :=_dddb .Chars [_gbfcf ];if !_eege {_gd .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_ebfd =append (_ebfd ,_bffe );continue ;
};_adefc :=_bgae *float64 (_dddb .Widths [_eecff ]);_ebfd =append (_ebfd ,_adefc );};_dfgfg .Widths =_db .MakeIndirectObject (_db .MakeArrayFromFloats (_ebfd ));if len (_ebfd )< int (_eaba -_gdae +1){_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_ebfd ),255-32+1);
return nil ,_db .ErrRangeError ;};for _dbgb :=_gdae ;_dbgb <=_eaba ;_dbgb ++{_dfgfg ._gfabb [_dbgb ]=_ebfd [_dbgb -_gdae ];};_dfgfg .Encoding =_db .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_eaefa :=&PdfFontDescriptor {};
_eaefa .FontName =_db .MakeName (_dddb .PostScriptName );_eaefa .Ascent =_db .MakeFloat (_bgae *float64 (_dddb .TypoAscender ));_eaefa .Descent =_db .MakeFloat (_bgae *float64 (_dddb .TypoDescender ));_eaefa .CapHeight =_db .MakeFloat (_bgae *float64 (_dddb .CapHeight ));
_eaefa .FontBBox =_db .MakeArrayFromFloats ([]float64 {_bgae *float64 (_dddb .Xmin ),_bgae *float64 (_dddb .Ymin ),_bgae *float64 (_dddb .Xmax ),_bgae *float64 (_dddb .Ymax )});_eaefa .ItalicAngle =_db .MakeFloat (_dddb .ItalicAngle );_eaefa .MissingWidth =_db .MakeFloat (_bgae *float64 (_dddb .Widths [0]));
_fgfb ,_daega :=_db .MakeStream (_fgga ,_db .NewFlateEncoder ());if _daega !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_daega );
return nil ,_daega ;};_fgfb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_db .MakeInteger (int64 (len (_fgga ))));_eaefa .FontFile2 =_fgfb ;if _dddb .Bold {_eaefa .StemV =_db .MakeInteger (120);}else {_eaefa .StemV =_db .MakeInteger (70);
};_cbfb :=_bfbb ;if _dddb .IsFixedPitch {_cbfb |=_egbgf ;};if _dddb .ItalicAngle !=0{_cbfb |=_dbge ;};_eaefa .Flags =_db .MakeInteger (int64 (_cbfb ));_dfgfg ._dfff =_eaefa ;_gddf :=&PdfFont {_fdcca :_dfgfg };return _gddf ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _db .PdfObject ;};func _fabg (_dgfg _db .PdfObject )(*PdfFontDescriptor ,error ){_degaf :=&PdfFontDescriptor {};_dgfg =_db .ResolveReference (_dgfg );if _adegc ,_ddbe :=_dgfg .(*_db .PdfIndirectObject );
_ddbe {_degaf ._fffge =_adegc ;_dgfg =_adegc .PdfObject ;};_dbfb ,_ecfec :=_db .GetDict (_dgfg );if !_ecfec {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dgfg );
return nil ,_db .ErrTypeError ;};if _gcdb :=_dbfb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gcdb !=nil {_degaf .FontName =_gcdb ;}else {_gd .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_gfag ,_ :=_db .GetName (_degaf .FontName );if _badg :=_dbfb .Get ("\u0054\u0079\u0070\u0065");_badg !=nil {_eefbc ,_caed :=_badg .(*_db .PdfObjectName );if !_caed ||string (*_eefbc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_gd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_badg ,_gfag ,_degaf .FontName );
};}else {_gd .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gfag ,_degaf .FontName );
};_degaf .FontFamily =_dbfb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_degaf .FontStretch =_dbfb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_degaf .FontWeight =_dbfb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_degaf .Flags =_dbfb .Get ("\u0046\u006c\u0061g\u0073");_degaf .FontBBox =_dbfb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_degaf .ItalicAngle =_dbfb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_degaf .Ascent =_dbfb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_degaf .Descent =_dbfb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_degaf .Leading =_dbfb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_degaf .CapHeight =_dbfb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_degaf .XHeight =_dbfb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_degaf .StemV =_dbfb .Get ("\u0053\u0074\u0065m\u0056");_degaf .StemH =_dbfb .Get ("\u0053\u0074\u0065m\u0048");_degaf .AvgWidth =_dbfb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_degaf .MaxWidth =_dbfb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_degaf .MissingWidth =_dbfb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_degaf .FontFile =_dbfb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_degaf .FontFile2 =_dbfb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_degaf .FontFile3 =_dbfb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_degaf .CharSet =_dbfb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_degaf .Style =_dbfb .Get ("\u0053\u0074\u0079l\u0065");_degaf .Lang =_dbfb .Get ("\u004c\u0061\u006e\u0067");
_degaf .FD =_dbfb .Get ("\u0046\u0044");_degaf .CIDSet =_dbfb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _degaf .Flags !=nil {if _efbd ,_ecde :=_db .GetIntVal (_degaf .Flags );_ecde {_degaf ._dcddb =_efbd ;};};if _degaf .MissingWidth !=nil {if _bdbd ,_bagcd :=_db .GetNumberAsFloat (_degaf .MissingWidth );
_bagcd ==nil {_degaf ._cedf =_bdbd ;};};if _degaf .FontFile !=nil {_gebdc ,_dcae :=_ffde (_degaf .FontFile );if _dcae !=nil {return _degaf ,_dcae ;};_gd .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gebdc );_degaf .fontFile =_gebdc ;
};if _degaf .FontFile2 !=nil {_agdff ,_bfedd :=_acg .NewFontFile2FromPdfObject (_degaf .FontFile2 );if _bfedd !=nil {return _degaf ,_bfedd ;};_gd .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_agdff .String ());_degaf ._febba =&_agdff ;
};return _degaf ,nil ;};func _bafee (_egga *_db .PdfObjectDictionary )(*PdfFieldText ,error ){_efge :=&PdfFieldText {};_efge .DA ,_ =_db .GetString (_egga .Get ("\u0044\u0041"));_efge .Q ,_ =_db .GetInt (_egga .Get ("\u0051"));_efge .DS ,_ =_db .GetString (_egga .Get ("\u0044\u0053"));
_efge .RV =_egga .Get ("\u0052\u0056");_efge .MaxLen ,_ =_db .GetInt (_egga .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _efge ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_af :=NewPdfAction ();_ggf :=&PdfActionGoTo3DView {};_ggf .PdfAction =_af ;_af .SetContext (_ggf );return _ggf ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_eeage :=NewPdfOutline ();_eeage ._fcbe =&_eeage ;return _eeage ;};var _ _db .PdfObject =&pdfSignDictionary {};

// SetDecode sets the decode image float slice.
func (_bdfd *Image )SetDecode (decode []float64 ){_bdfd ._ffga =decode };var _ pdfFont =(*pdfFontSimple )(nil );

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_fbaf :=PdfColorCalRGB {a ,b ,c };return &_fbaf ;};func _ccee (_fdcef _db .PdfObject )(PdfFunction ,error ){_fdcef =_db .ResolveReference (_fdcef );if _bacad ,_gbdbc :=_fdcef .(*_db .PdfObjectStream );
_gbdbc {_gcdf :=_bacad .PdfObjectDictionary ;_gffcb ,_eaedef :=_gcdf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_db .PdfObjectInteger );if !_eaedef {_gd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gffcb ==0{return _acca (_bacad );}else if *_gffcb ==4{return _faaa (_bacad );
}else {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bfceg ,_bffce :=_fdcef .(*_db .PdfIndirectObject );_bffce {_bddgb ,_ddae :=_bfceg .PdfObject .(*_db .PdfObjectDictionary );
if !_ddae {_gd .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_fabc ,_ddae :=_bddgb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_db .PdfObjectInteger );
if !_ddae {_gd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_fabc ==2{return _bedg (_bfceg );}else if *_fabc ==3{return _bbbe (_bfceg );}else {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dacbf ,_cegfc :=_fdcef .(*_db .PdfObjectDictionary );
_cegfc {_dabb ,_aede :=_dacbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_db .PdfObjectInteger );if !_aede {_gd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dabb ==2{return _bedg (_dacbf );}else if *_dabb ==3{return _bbbe (_dacbf );
}else {return nil ,_f .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_gd .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fdcef );
return nil ,_f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};var _ pdfFont =(*pdfFontType3 )(nil );

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_fcbfc *pdfCIDFontType2 )ToPdfObject ()_db .PdfObject {if _fcbfc ._bfeba ==nil {_fcbfc ._bfeba =&_db .PdfIndirectObject {};};_cfee :=_fcbfc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_fcbfc ._bfeba .PdfObject =_cfee ;if _fcbfc .CIDSystemInfo !=nil {_cfee .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_fcbfc .CIDSystemInfo );};if _fcbfc .DW !=nil {_cfee .Set ("\u0044\u0057",_fcbfc .DW );};if _fcbfc .DW2 !=nil {_cfee .Set ("\u0044\u0057\u0032",_fcbfc .DW2 );
};if _fcbfc .W !=nil {_cfee .Set ("\u0057",_fcbfc .W );};if _fcbfc .W2 !=nil {_cfee .Set ("\u0057\u0032",_fcbfc .W2 );};if _fcbfc .CIDToGIDMap !=nil {_cfee .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_fcbfc .CIDToGIDMap );};return _fcbfc ._bfeba ;
};func (_bbfg *PdfReader )loadAction (_efe _db .PdfObject )(*PdfAction ,error ){if _acfg ,_agg :=_db .GetIndirect (_efe );_agg {_ddc ,_bdgf :=_bbfg .newPdfActionFromIndirectObject (_acfg );if _bdgf !=nil {return nil ,_bdgf ;};return _ddc ,nil ;}else if !_db .IsNullObject (_efe ){return nil ,_f .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// GetNumComponents returns the number of color components.
func (_gbeca *PdfColorspaceICCBased )GetNumComponents ()int {return _gbeca .N };

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_dgdgd *_db .PdfIndirectObject ;};func _fcdg (_cdeeaa []byte )([]byte ,error ){_bdgad :=_ge .New ();if _ ,_efggc :=_dg .Copy (_bdgad ,_cfg .NewReader (_cdeeaa ));
_efggc !=nil {return nil ,_efggc ;};return _bdgad .Sum (nil ),nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_fd .PSProgram ;_bdgea *_fd .PSExecutor ;_cbfgc []byte ;_fbgca *_db .PdfObjectStream ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_db .PdfObjectStream ;Data []byte ;_gdab *_db .PdfIndirectObject ;_ccfbc *_db .PdfObjectStream ;};func (_dda *PdfReader )newPdfActionHideFromDict (_deca *_db .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_deca .Get ("\u0054"),H :_deca .Get ("\u0048")},nil ;
};func (_cdege *PdfAcroForm )filteredFields (_ecge FieldFilterFunc ,_adeb bool )[]*PdfField {if _cdege ==nil {return nil ;};return _gdcdf (_cdege .Fields ,_ecge ,_adeb );};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_gfabe *PdfPage )AddContentStreamByString (contentStr string )error {_aabf ,_dddg :=_db .MakeStream ([]byte (contentStr ),_db .NewFlateEncoder ());if _dddg !=nil {return _dddg ;};if _gfabe .Contents ==nil {_gfabe .Contents =_aabf ;}else {_dbcff :=_db .TraceToDirectObject (_gfabe .Contents );
_eeed ,_gaaaf :=_dbcff .(*_db .PdfObjectArray );if !_gaaaf {_eeed =_db .MakeArray (_dbcff );};_eeed .Append (_aabf );_gfabe .Contents =_eeed ;};return nil ;};var (_ffbfe =_bc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_bbfaf =_bc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_gfabc =_bc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_acfc ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_dcgb ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_aeaad ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _dg .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gbaedc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _cgeb (rs ,opts ,true ,_gbaedc );
};func (_cage *PdfReader )newPdfAnnotationSquareFromDict (_bdfa *_db .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_eeca :=PdfAnnotationSquare {};_fge ,_bbdc :=_cage .newPdfAnnotationMarkupFromDict (_bdfa );if _bbdc !=nil {return nil ,_bbdc ;};_eeca .PdfAnnotationMarkup =_fge ;
_eeca .BS =_bdfa .Get ("\u0042\u0053");_eeca .IC =_bdfa .Get ("\u0049\u0043");_eeca .BE =_bdfa .Get ("\u0042\u0045");_eeca .RD =_bdfa .Get ("\u0052\u0044");return &_eeca ,nil ;};func _bdcg ()string {_gbbgg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _egce _cfg .Buffer ;for _bgfg :=0;_bgfg < 6;_bgfg ++{_egce .WriteRune (rune (_gbbgg [_ed .Intn (len (_gbbgg ))]));};return _egce .String ();};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ca .File ,error ){const _fcef ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_bacbc ,_efbgg :=_ca .Open (pdfFile );if _efbgg !=nil {return nil ,nil ,_efbgg ;};_efde ,_efbgg :=_cgeb (_bacbc ,opts ,true ,_fcef );if _efbgg !=nil {_bacbc .Close ();return nil ,nil ,_efbgg ;};return _efde ,_bacbc ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_daee *PdfAnnotation )GetContainingPdfObject ()_db .PdfObject {return _daee ._addd };

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _cb .Time ){_edbg .Lock ();defer _edbg .Unlock ();_bcaae =creationDate ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bbfeg :=PdfWriter {};_bbfeg ._fdef =map[_db .PdfObject ]struct{}{};_bbfeg ._fadge =[]_db .PdfObject {};_bbfeg ._ccda =map[_db .PdfObject ][]*_db .PdfObjectDictionary {};_bbfeg ._ggacaa =map[_db .PdfObject ]struct{}{};_bbfeg ._gaggf =1;
_bbfeg ._egfcf =3;_dcgd :=_db .MakeDict ();_fgagca :=[]struct{_fgega _db .PdfObjectName ;_aaag string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_acgbd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bdaaa ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_fbca ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_ggdfgg ()},{"\u0054\u0069\u0074l\u0065",_egaeg ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_acbd ()}};
for _ ,_gbedf :=range _fgagca {if _gbedf ._aaag !=""{_dcgd .Set (_gbedf ._fgega ,_db .MakeString (_gbedf ._aaag ));};};if _dddac :=_dcceb ();!_dddac .IsZero (){if _cdbac ,_gdafcc :=NewPdfDateFromTime (_dddac );_gdafcc ==nil {_dcgd .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cdbac .ToPdfObject ());
};};if _fdabf :=_aggba ();!_fdabf .IsZero (){if _ggagc ,_fgcdg :=NewPdfDateFromTime (_fdabf );_fgcdg ==nil {_dcgd .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ggagc .ToPdfObject ());};};_affce :=_db .PdfIndirectObject {};_affce .PdfObject =_dcgd ;_bbfeg ._dggb =&_affce ;
_bbfeg .addObject (&_affce );_cddfa :=_db .PdfIndirectObject {};_gacbg :=_db .MakeDict ();_gacbg .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_cddfa .PdfObject =_gacbg ;_bbfeg ._efeda =&_cddfa ;_bbfeg .addObject (_bbfeg ._efeda );
_ecdbc ,_gdgc :=_gfff ("\u0077");if _gdgc !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdgc );};_bbfeg ._afede =_ecdbc ;_acgbb :=_db .PdfIndirectObject {};_bffcag :=_db .MakeDict ();_bffcag .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0050\u0061\u0067e\u0073"));
_fbfa :=_db .PdfObjectArray {};_bffcag .Set ("\u004b\u0069\u0064\u0073",&_fbfa );_bffcag .Set ("\u0043\u006f\u0075n\u0074",_db .MakeInteger (0));_acgbb .PdfObject =_bffcag ;_bbfeg ._fbffe =&_acgbb ;_bbfeg ._bdbcb =map[_db .PdfObject ]struct{}{};_bbfeg .addObject (_bbfeg ._fbffe );
_gacbg .Set ("\u0050\u0061\u0067e\u0073",&_acgbb );_bbfeg ._egdad =_gacbg ;_gd .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_cddfa );return _bbfeg ;};var (CourierName =_acg .CourierName ;CourierBoldName =_acg .CourierBoldName ;
CourierObliqueName =_acg .CourierObliqueName ;CourierBoldObliqueName =_acg .CourierBoldObliqueName ;HelveticaName =_acg .HelveticaName ;HelveticaBoldName =_acg .HelveticaBoldName ;HelveticaObliqueName =_acg .HelveticaObliqueName ;HelveticaBoldObliqueName =_acg .HelveticaBoldObliqueName ;
SymbolName =_acg .SymbolName ;ZapfDingbatsName =_acg .ZapfDingbatsName ;TimesRomanName =_acg .TimesRomanName ;TimesBoldName =_acg .TimesBoldName ;TimesItalicName =_acg .TimesItalicName ;TimesBoldItalicName =_acg .TimesBoldItalicName ;);

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_aabeg *PdfFieldText )ToPdfObject ()_db .PdfObject {_aabeg .PdfField .ToPdfObject ();_eeddd :=_aabeg ._fbeg ;_deae :=_eeddd .PdfObject .(*_db .PdfObjectDictionary );_deae .Set ("\u0046\u0054",_db .MakeName ("\u0054\u0078"));if _aabeg .DA !=nil {_deae .Set ("\u0044\u0041",_aabeg .DA );
};if _aabeg .Q !=nil {_deae .Set ("\u0051",_aabeg .Q );};if _aabeg .DS !=nil {_deae .Set ("\u0044\u0053",_aabeg .DS );};if _aabeg .RV !=nil {_deae .Set ("\u0052\u0056",_aabeg .RV );};if _aabeg .MaxLen !=nil {_deae .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_aabeg .MaxLen );
};return _eeddd ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gcde PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_db .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_babf []_db .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_dbfd []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_db .PdfIndirectObject ;SV *_db .PdfIndirectObject ;};func _fgee (_debg *_db .PdfIndirectObject ,_gfbg *_db .PdfObjectDictionary )(*DSS ,error ){if _debg ==nil {_debg =_db .MakeIndirectObject (nil );
};_debg .PdfObject =_db .MakeDict ();_gegb :=map[string ]*VRI {};if _ffab ,_efced :=_db .GetDict (_gfbg .Get ("\u0056\u0052\u0049"));_efced {for _ ,_dcdd :=range _ffab .Keys (){if _cacfd ,_abae :=_db .GetDict (_ffab .Get (_dcdd ));_abae {_gegb [_cf .ToUpper (_dcdd .String ())]=_ageff (_cacfd );
};};};return &DSS {Certs :_gfdad (_gfbg .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_gfdad (_gfbg .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_gfdad (_gfbg .Get ("\u0043\u0052\u004c\u0073")),VRI :_gegb ,_fdcg :_debg },nil ;};

// SetDate sets the `M` field of the signature.
func (_efef *PdfSignature )SetDate (date _cb .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_efef .M =_db .MakeString (date .Format (format ));
};

// SetOCProperties sets the optional content properties.
func (_gcad *PdfWriter )SetOCProperties (ocProperties _db .PdfObject )error {_dcdac :=_gcad ._egdad ;if ocProperties !=nil {_gd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_dcdac .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gcad .addObjects (ocProperties );};return nil ;};func (_ebcg *PdfWriter )writeBytes (_fcaaed []byte ){if _ebcg ._aedbc !=nil {return ;};_effaaa ,_gfegc :=_ebcg ._decf .Write (_fcaaed );
_ebcg ._eacdc +=int64 (_effaaa );_ebcg ._aedbc =_gfegc ;};func (_eecb *PdfAppender )updateObjectsDeep (_gbd _db .PdfObject ,_adceb map[_db .PdfObject ]struct{}){if _adceb ==nil {_adceb =map[_db .PdfObject ]struct{}{};};if _ ,_adgc :=_adceb [_gbd ];_adgc ||_gbd ==nil {return ;
};_adceb [_gbd ]=struct{}{};_fggg :=_db .ResolveReferencesDeep (_gbd ,_eecb ._ggcbe );if _fggg !=nil {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fggg );};switch _efega :=_gbd .(type ){case *_db .PdfIndirectObject :switch {case _efega .GetParser ()==_eecb ._effb ._ceaabg :return ;
case _efega .GetParser ()==_eecb .Reader ._ceaabg :_bbdg ,_ :=_eecb ._effb .GetIndirectObjectByNumber (int (_efega .ObjectNumber ));_ebab ,_cbaeb :=_bbdg .(*_db .PdfIndirectObject );if _cbaeb &&_ebab !=nil {if _ebab .PdfObject !=_efega .PdfObject &&_ebab .PdfObject .WriteString ()!=_efega .PdfObject .WriteString (){_eecb .addNewObject (_gbd );
_eecb ._dage [_gbd ]=_efega .ObjectNumber ;};};default:_eecb .addNewObject (_gbd );};_eecb .updateObjectsDeep (_efega .PdfObject ,_adceb );case *_db .PdfObjectArray :for _ ,_acgd :=range _efega .Elements (){_eecb .updateObjectsDeep (_acgd ,_adceb );};case *_db .PdfObjectDictionary :for _ ,_fgegf :=range _efega .Keys (){_eecb .updateObjectsDeep (_efega .Get (_fgegf ),_adceb );
};case *_db .PdfObjectStreams :if _efega .GetParser ()!=_eecb ._effb ._ceaabg {for _ ,_cabg :=range _efega .Elements (){_eecb .updateObjectsDeep (_cabg ,_adceb );};};case *_db .PdfObjectStream :switch {case _efega .GetParser ()==_eecb ._effb ._ceaabg :return ;
case _efega .GetParser ()==_eecb .Reader ._ceaabg :if _egcb ,_faag :=_eecb ._effb ._ceaabg .LookupByReference (_efega .PdfObjectReference );_faag ==nil {var _gcbg bool ;if _cgggd ,_afabd :=_db .GetStream (_egcb );_afabd &&_cfg .Equal (_cgggd .Stream ,_efega .Stream ){_gcbg =true ;
};if _gfbc ,_dafe :=_db .GetDict (_egcb );_gcbg &&_dafe {_gcbg =_gfbc .WriteString ()==_efega .PdfObjectDictionary .WriteString ();};if _gcbg {return ;};};if _efega .ObjectNumber !=0{_eecb ._dage [_gbd ]=_efega .ObjectNumber ;};default:if _ ,_gade :=_eecb ._bbfdg [_gbd ];
!_gade {_eecb .addNewObject (_gbd );};};_eecb .updateObjectsDeep (_efega .PdfObjectDictionary ,_adceb );};};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_efbaa *PdfReader )PageFromIndirectObject (ind *_db .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_efbaa .PageList )!=len (_efbaa ._aedae ){return nil ,0,_f .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _dcdfc ,_aac :=range _efbaa ._aedae {if _aac ==ind {return _efbaa .PageList [_dcdfc ],_dcdfc +1,nil ;};};return nil ,0,_f .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_aebb :=NewPdfAnnotation ();_efb :=&PdfAnnotationTrapNet {};_efb .PdfAnnotation =_aebb ;_aebb .SetContext (_efb );return _efb ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_befdda *PdfPageResources )GenerateXObjectName ()_db .PdfObjectName {_adbbg :=1;for {_gecc :=_db .MakeName (_g .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_adbbg ));if !_befdda .HasXObjectByName (*_gecc ){return *_gecc ;};_adbbg ++;};};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_bbagb *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_bbagb .updateObjectsDeep (dss .ToPdfObject (),nil );};_bbagb ._dgaab =dss ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_febee *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcf ,_abac :=_db .GetNumbersAsFloat (objects );
if _abac !=nil {return nil ,_abac ;};return _febee .ColorFromFloats (_fcf );};func _dedbe (_dagff *_db .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gffee :=PdfShadingType4 {};_bedga :=_dagff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bedga ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gcbgc ,_bgcf :=_bedga .(*_db .PdfObjectInteger );if !_bgcf {_gd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bedga );
return nil ,_db .ErrTypeError ;};_gffee .BitsPerCoordinate =_gcbgc ;_bedga =_dagff .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bedga ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gcbgc ,_bgcf =_bedga .(*_db .PdfObjectInteger );if !_bgcf {_gd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bedga );
return nil ,_db .ErrTypeError ;};_gffee .BitsPerComponent =_gcbgc ;_bedga =_dagff .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bedga ==nil {_gd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gcbgc ,_bgcf =_bedga .(*_db .PdfObjectInteger );if !_bgcf {_gd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bedga );
return nil ,_db .ErrTypeError ;};_gffee .BitsPerComponent =_gcbgc ;_bedga =_dagff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bedga ==nil {_gd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_degb ,_bgcf :=_bedga .(*_db .PdfObjectArray );if !_bgcf {_gd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bedga );
return nil ,_db .ErrTypeError ;};_gffee .Decode =_degb ;_bedga =_dagff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bedga ==nil {_gd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gffee .Function =[]PdfFunction {};if _aeddc ,_gecfg :=_bedga .(*_db .PdfObjectArray );_gecfg {for _ ,_dgeac :=range _aeddc .Elements (){_bgdeb ,_bgec :=_ccee (_dgeac );if _bgec !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgec );
return nil ,_bgec ;};_gffee .Function =append (_gffee .Function ,_bgdeb );};}else {_dacf ,_fbec :=_ccee (_bedga );if _fbec !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbec );
return nil ,_fbec ;};_gffee .Function =append (_gffee .Function ,_dacf );};return &_gffee ,nil ;};func (_cebfe *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cebfe ._dfff };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_db .PdfObjectInteger ;BitsPerComponent *_db .PdfObjectInteger ;VerticesPerRow *_db .PdfObjectInteger ;Decode *_db .PdfObjectArray ;Function []PdfFunction ;};func (_dece *DSS )addCRLs (_cedd [][]byte )([]*_db .PdfObjectStream ,error ){return _dece .add (&_dece .CRLs ,_dece ._fcdf ,_cedd );
};

// Subtype returns the font's "Subtype" field.
func (_affcb *PdfFont )Subtype ()string {_gddd :=_affcb .baseFields ()._cdbfb ;if _cbcd ,_bbfc :=_affcb ._fdcca .(*pdfFontType0 );_bbfc {_gddd =_gddd +"\u003a"+_cbcd .DescendantFont .Subtype ();};return _gddd ;};func (_bgagc *LTV )getCerts (_baafg []*_b .Certificate )([][]byte ,error ){_gged :=make ([][]byte ,0,len (_baafg ));
for _ ,_bbed :=range _baafg {_gged =append (_gged ,_bbed .Raw );};return _gged ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_abcgd *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _abcgd .AlternateSpace ==nil {return nil ,_f .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _abcgd .AlternateSpace .ColorToRGB (color );};

// Width returns the width of `rect`.
func (_afgg *PdfRectangle )Width ()float64 {return _ae .Abs (_afgg .Urx -_afgg .Llx )};func _agga (_cedbb []byte )(_aabee ,_bdgce string ,_dbdcc error ){_gd .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cedbb ));
_efga :=_ffbfe .FindIndex (_cedbb );if _efga ==nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_db .ErrTypeError ;};_efdf :=_efga [1];_afdfg :=_cf .Index (string (_cedbb [_efdf :]),_acfc );if _afdfg < 0{_aabee =string (_cedbb [_efdf :]);return _aabee ,"",nil ;};_dcdab :=_efdf +_afdfg ;_aabee =string (_cedbb [_efdf :_dcdab ]);_gddb :=_dcdab ;
_afdfg =_cf .Index (string (_cedbb [_gddb :]),_dcgb );if _afdfg < 0{_gd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbdcc );
return "","",_db .ErrTypeError ;};_egfcd :=_gddb +_afdfg ;_bdgce =string (_cedbb [_gddb :_egfcd ]);return _aabee ,_bdgce ,nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fccf *PdfField )FullName ()(string ,error ){var _cadea _cfg .Buffer ;_cggbf :=[]string {};if _fccf .T !=nil {_cggbf =append (_cggbf ,_fccf .T .Decoded ());};_ggbcb :=map[*PdfField ]bool {};_ggbcb [_fccf ]=true ;_gffc :=_fccf .Parent ;for _gffc !=nil {if _ ,_ffbc :=_ggbcb [_gffc ];
_ffbc {return _cadea .String (),_f .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _gffc .T ==nil {return _cadea .String (),_f .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_cggbf =append (_cggbf ,_gffc .T .Decoded ());_ggbcb [_gffc ]=true ;_gffc =_gffc .Parent ;};for _eafc :=len (_cggbf )-1;_eafc >=0;_eafc --{_cadea .WriteString (_cggbf [_eafc ]);if _eafc > 0{_cadea .WriteString ("\u002e");};};return _cadea .String (),nil ;
};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_bbf :=NewPdfAnnotation ();_gab :=&PdfAnnotationInk {};_gab .PdfAnnotation =_bbf ;_gab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbf .SetContext (_gab );return _gab ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _db .PdfObject )(PdfColorspace ,error ){var _bdcf *_db .PdfIndirectObject ;var _ccdd *_db .PdfObjectName ;var _gaee *_db .PdfObjectArray ;if _bea ,_adfa :=obj .(*_db .PdfIndirectObject );_adfa {_bdcf =_bea ;};obj =_db .TraceToDirectObject (obj );
switch _effa :=obj .(type ){case *_db .PdfObjectArray :_gaee =_effa ;case *_db .PdfObjectName :_ccdd =_effa ;};if _ccdd !=nil {switch *_ccdd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_gd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_ccdd );return nil ,_gefe ;};};if _gaee !=nil &&_gaee .Len ()> 0{var _gafb _db .PdfObject =_bdcf ;
if _bdcf ==nil {_gafb =_gaee ;};if _dcfg ,_gffa :=_db .GetName (_gaee .Get (0));_gffa {switch _dcfg .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gaee .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gaee .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gaee .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _abcg (_gafb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ebcd (_gafb );
case "\u004c\u0061\u0062":return _eeab (_gafb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _ageb (_gafb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _eggd (_gafb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _aaffc (_gafb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _agae (_gafb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _bega (_gafb );default:_gd .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_dcfg );
};};};_gd .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_ebbgd *PdfPage )GetContentStreamObjs ()[]_db .PdfObject {if _ebbgd .Contents ==nil {return nil ;};_cebce :=_db .TraceToDirectObject (_ebbgd .Contents );if _aadg ,_dgbb :=_cebce .(*_db .PdfObjectArray );_dgbb {return _aadg .Elements ();};return []_db .PdfObject {_cebce };
};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gg :=NewPdfAction ();_fae :=&PdfActionSound {};_fae .PdfAction =_gg ;_gg .SetContext (_fae );return _fae ;};

// ToPdfObject implements interface PdfModel.
func (_gecd *PdfAnnotationRedact )ToPdfObject ()_db .PdfObject {_gecd .PdfAnnotation .ToPdfObject ();_ddabd :=_gecd ._addd ;_cgda :=_ddabd .PdfObject .(*_db .PdfObjectDictionary );_gecd .PdfAnnotationMarkup .appendToPdfDictionary (_cgda );_cgda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_cgda .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gecd .QuadPoints );_cgda .SetIfNotNil ("\u0049\u0043",_gecd .IC );_cgda .SetIfNotNil ("\u0052\u004f",_gecd .RO );_cgda .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gecd .OverlayText );
_cgda .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gecd .Repeat );_cgda .SetIfNotNil ("\u0044\u0041",_gecd .DA );_cgda .SetIfNotNil ("\u0051",_gecd .Q );return _ddabd ;};func (_adccb *PdfReader )flattenFieldsWithOpts (_gdfe bool ,_dbgf FieldAppearanceGenerator ,_gbed *FieldFlattenOpts )error {if _gbed ==nil {_gbed =&FieldFlattenOpts {};
};var _deaf bool ;_aagbg :=map[*PdfAnnotation ]bool {};{var _dccee []*PdfField ;_ccgc :=_adccb .AcroForm ;if _ccgc !=nil {if _gbed .FilterFunc !=nil {_dccee =_ccgc .filteredFields (_gbed .FilterFunc ,true );_deaf =_ccgc .Fields !=nil &&len (*_ccgc .Fields )> 0;
}else {_dccee =_ccgc .AllFields ();};};for _ ,_gbffb :=range _dccee {for _ ,_eeaf :=range _gbffb .Annotations {_aagbg [_eeaf .PdfAnnotation ]=_gbffb .V !=nil ;if _dbgf !=nil {_ffae ,_bfab :=_dbgf .GenerateAppearanceDict (_ccgc ,_gbffb ,_eeaf );if _bfab !=nil {return _bfab ;
};_eeaf .AP =_ffae ;};};};};if _gdfe {for _ ,_fdaee :=range _adccb .PageList {_fbdef ,_fcdb :=_fdaee .GetAnnotations ();if _fcdb !=nil {return _fcdb ;};for _ ,_adced :=range _fbdef {_aagbg [_adced ]=true ;};};};for _ ,_ceed :=range _adccb .PageList {var _bbgeb []*PdfAnnotation ;
if _dbgf !=nil {if _ddega :=_dbgf .WrapContentStream (_ceed );_ddega !=nil {return _ddega ;};};_ddde ,_bgedc :=_ceed .GetAnnotations ();if _bgedc !=nil {return _bgedc ;};for _ ,_eced :=range _ddde {_fgdcf ,_fafa :=_aagbg [_eced ];if !_fafa &&_gbed .AnnotFilterFunc !=nil {if _ ,_fbedb :=_eced .GetContext ().(*PdfAnnotationWidget );
!_fbedb {_fafa =_gbed .AnnotFilterFunc (_eced );};};if !_fafa {_bbgeb =append (_bbgeb ,_eced );continue ;};switch _eced .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_cacbg ,_fgdgb ,_bcbe :=_gdcfa (_eced );if _bcbe !=nil {if !_fgdcf {_gd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bcbe );
continue ;};if _cacbg ==nil {continue ;};_babc :=_ceed .Resources .GenerateXObjectName ();_ceed .Resources .SetXObjectFormByName (_babc ,_cacbg );_gcac :=_ae .Min (_fgdgb .Llx ,_fgdgb .Urx );_feee :=_ae .Min (_fgdgb .Lly ,_fgdgb .Ury );var _gcaa []string ;
_gcaa =append (_gcaa ,"\u0071");_gcaa =append (_gcaa ,_g .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gcac ,_feee ));
_gcaa =append (_gcaa ,_g .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_babc .String ()));_gcaa =append (_gcaa ,"\u0051");_faab :=_cf .Join (_gcaa ,"\u000a");_bcbe =_ceed .AppendContentStream (_faab );if _bcbe !=nil {return _bcbe ;};if _cacbg .Resources !=nil {_gbag ,_gbbgb :=_db .GetDict (_cacbg .Resources .Font );
if _gbbgb {for _ ,_cggce :=range _gbag .Keys (){if !_ceed .Resources .HasFontByName (_cggce ){_ceed .Resources .SetFontByName (_cggce ,_gbag .Get (_cggce ));};};};};};if len (_bbgeb )> 0{_ceed ._gfeg =_bbgeb ;}else {_ceed ._gfeg =[]*PdfAnnotation {};};
};if !_deaf {_adccb .AcroForm =nil ;};return nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_da :=NewPdfAction ();_ege :=&PdfActionSubmitForm {};_ege .PdfAction =_da ;_da .SetContext (_ege );return _ege ;};func _bgadg (_ddedg *_db .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cgbf :=PdfShadingType1 {};
if _gffae :=_ddedg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gffae !=nil {_gffae =_db .TraceToDirectObject (_gffae );_bcbc ,_eddbg :=_gffae .(*_db .PdfObjectArray );if !_eddbg {_gd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gffae );
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgbf .Domain =_bcbc ;};if _ceaac :=_ddedg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ceaac !=nil {_ceaac =_db .TraceToDirectObject (_ceaac );
_accf ,_bcedc :=_ceaac .(*_db .PdfObjectArray );if !_bcedc {_gd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceaac );return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cgbf .Matrix =_accf ;};_cfegc :=_ddedg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cfegc ==nil {_gd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cgbf .Function =[]PdfFunction {};if _dgga ,_cfbc :=_cfegc .(*_db .PdfObjectArray );_cfbc {for _ ,_adggf :=range _dgga .Elements (){_cfcc ,_aadfb :=_ccee (_adggf );if _aadfb !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aadfb );
return nil ,_aadfb ;};_cgbf .Function =append (_cgbf .Function ,_cfcc );};}else {_gedea ,_bdfdbc :=_ccee (_cfegc );if _bdfdbc !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdfdbc );
return nil ,_bdfdbc ;};_cgbf .Function =append (_cgbf .Function ,_gedea );};return &_cgbf ,nil ;};func _eadg (_cfad *_db .PdfIndirectObject )(*PdfOutline ,error ){_cadbag ,_agcd :=_cfad .PdfObject .(*_db .PdfObjectDictionary );if !_agcd {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_abcc :=NewPdfOutline ();if _ceaab :=_cadbag .Get ("\u0054\u0079\u0070\u0065");_ceaab !=nil {_fgefe ,_bdccd :=_ceaab .(*_db .PdfObjectName );if _bdccd {if *_fgefe !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fgefe );
};};};if _fbbbb :=_cadbag .Get ("\u0043\u006f\u0075n\u0074");_fbbbb !=nil {_gdda ,_eaddd :=_db .GetNumberAsInt64 (_fbbbb );if _eaddd !=nil {return nil ,_eaddd ;};_abcc .Count =&_gdda ;};return _abcc ,nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ggad *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_f .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_aafg ,_dabg :=_fg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ededa ,img ._ffga );if _dabg !=nil {return img ,_dabg ;};_egbc ,_dabg :=_fg .GrayConverter .Convert (_aafg );if _dabg !=nil {return img ,_dabg ;
};return _efdbf (_egbc .Base ()),nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_dgca :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_dgca ;};func _gfff (_gdbfc string )(string ,error ){var _cbbf _cfg .Buffer ;_cbbf .WriteString (_gdbfc );_gbfde :=make ([]byte ,8+16);
_ffgcg :=_cb .Now ().UTC ().UnixNano ();_cg .BigEndian .PutUint64 (_gbfde ,uint64 (_ffgcg ));_ ,_gbdffd :=_cgc .Read (_gbfde [8:]);if _gbdffd !=nil {return "",_gbdffd ;};_cbbf .WriteString (_gf .EncodeToString (_gbfde ));return _cbbf .String (),nil ;};
func (_bbgcg *PdfPage )setContainer (_fbfgg *_db .PdfIndirectObject ){_fbfgg .PdfObject =_bbgcg ._bgbaf ;_bbgcg ._gdcfd =_fbfgg ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bfbcb *Image )GetParamsDict ()*_db .PdfObjectDictionary {_decde :=_db .MakeDict ();_decde .Set ("\u0057\u0069\u0064t\u0068",_db .MakeInteger (_bfbcb .Width ));_decde .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_db .MakeInteger (_bfbcb .Height ));
_decde .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_db .MakeInteger (int64 (_bfbcb .ColorComponents )));_decde .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_db .MakeInteger (_bfbcb .BitsPerComponent ));
return _decde ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_cccca *Image )Resample (targetBitsPerComponent int64 ){if _cccca .BitsPerComponent ==targetBitsPerComponent {return ;};_febec :=_cccca .GetSamples ();if targetBitsPerComponent < _cccca .BitsPerComponent {_eafca :=_cccca .BitsPerComponent -targetBitsPerComponent ;
for _cagcc :=range _febec {_febec [_cagcc ]>>=uint (_eafca );};}else if targetBitsPerComponent > _cccca .BitsPerComponent {_fafdf :=targetBitsPerComponent -_cccca .BitsPerComponent ;for _gfdgb :=range _febec {_febec [_gfdgb ]<<=uint (_fafdf );};};_cccca .BitsPerComponent =targetBitsPerComponent ;
if _cccca .BitsPerComponent < 8{_cccca .resampleLowBits (_febec );return ;};_cdeea :=_fg .BytesPerLine (int (_cccca .Width ),int (_cccca .BitsPerComponent ),_cccca .ColorComponents );_gcbeed :=make ([]byte ,_cdeea *int (_cccca .Height ));var (_dfgcb ,_efcc ,_bcgfea ,_acgda int ;
_dfbf uint32 ;);for _bcgfea =0;_bcgfea < int (_cccca .Height );_bcgfea ++{_dfgcb =_bcgfea *_cdeea ;_efcc =(_bcgfea +1)*_cdeea -1;_afcea :=_cga .ResampleUint32 (_febec [_dfgcb :_efcc ],int (targetBitsPerComponent ),8);for _acgda ,_dfbf =range _afcea {_gcbeed [_acgda +_dfgcb ]=byte (_dfbf );
};};_cccca .Data =_gcbeed ;};func _bbbe (_bdbc _db .PdfObject )(*PdfFunctionType3 ,error ){_dggdb :=&PdfFunctionType3 {};var _acba *_db .PdfObjectDictionary ;if _dfffe ,_eeff :=_bdbc .(*_db .PdfIndirectObject );_eeff {_egggef ,_ggfb :=_dfffe .PdfObject .(*_db .PdfObjectDictionary );
if !_ggfb {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dggdb ._abfac =_dfffe ;_acba =_egggef ;}else if _fcfa ,_baabg :=_bdbc .(*_db .PdfObjectDictionary );_baabg {_acba =_fcfa ;}else {return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dfaed ,_eaggf :=_db .TraceToDirectObject (_acba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_db .PdfObjectArray );if !_eaggf {_gd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dfaed .Len ()!=2{_gd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gfaf ,_decg :=_dfaed .ToFloat64Array ();
if _decg !=nil {return nil ,_decg ;};_dggdb .Domain =_gfaf ;_dfaed ,_eaggf =_db .TraceToDirectObject (_acba .Get ("\u0052\u0061\u006eg\u0065")).(*_db .PdfObjectArray );if _eaggf {if _dfaed .Len ()< 0||_dfaed .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dgdgg ,_dfcdf :=_dfaed .ToFloat64Array ();if _dfcdf !=nil {return nil ,_dfcdf ;};_dggdb .Range =_dgdgg ;};_dfaed ,_eaggf =_db .TraceToDirectObject (_acba .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_db .PdfObjectArray );if !_eaggf {_gd .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dggdb .Functions =[]PdfFunction {};
for _ ,_acfgb :=range _dfaed .Elements (){_fbfcb ,_gded :=_ccee (_acfgb );if _gded !=nil {return nil ,_gded ;};_dggdb .Functions =append (_dggdb .Functions ,_fbfcb );};_dfaed ,_eaggf =_db .TraceToDirectObject (_acba .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_db .PdfObjectArray );
if !_eaggf {_gd .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_agbf ,_decg :=_dfaed .ToFloat64Array ();if _decg !=nil {return nil ,_decg ;};_dggdb .Bounds =_agbf ;if len (_dggdb .Bounds )!=len (_dggdb .Functions )-1{_gd .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dggdb .Bounds ),len (_dggdb .Functions ));
return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfaed ,_eaggf =_db .TraceToDirectObject (_acba .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_db .PdfObjectArray );if !_eaggf {_gd .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bccbd ,_decg :=_dfaed .ToFloat64Array ();
if _decg !=nil {return nil ,_decg ;};_dggdb .Encode =_bccbd ;if len (_dggdb .Encode )!=2*len (_dggdb .Functions ){_gd .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dggdb .Encode ),len (_dggdb .Functions ));
return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dggdb ,nil ;};func _fgdbe (_bacc string )map[string ]string {_cagd :=_egad .Split (_bacc ,-1);_cdad :=map[string ]string {};for _ ,_dfafg :=range _cagd {_gcbag :=_bbfaf .FindStringSubmatch (_dfafg );
if _gcbag ==nil {continue ;};_beeag ,_baddf :=_gcbag [1],_gcbag [2];_cdad [_beeag ]=_baddf ;};return _cdad ;};func (_eegee *pdfFontSimple )updateStandard14Font (){_efcee ,_afefd :=_eegee .Encoder ().(_fa .SimpleEncoder );if !_afefd {_gd .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eegee .Encoder (),_eegee );
return ;};_efbdd :=_efcee .Charcodes ();_eegee ._gfabb =make (map[_fa .CharCode ]float64 ,len (_efbdd ));for _ ,_gadcf :=range _efbdd {_adcebc ,_ :=_efcee .CharcodeToRune (_gadcf );_abcd ,_ :=_eegee ._dccec .Read (_adcebc );_eegee ._gfabb [_gadcf ]=_abcd .Wx ;
};};func (_dcce *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ToPdfObject implements interface PdfModel.
func (_gbg *PdfAnnotationText )ToPdfObject ()_db .PdfObject {_gbg .PdfAnnotation .ToPdfObject ();_bbfe :=_gbg ._addd ;_eabf :=_bbfe .PdfObject .(*_db .PdfObjectDictionary );if _gbg .PdfAnnotationMarkup !=nil {_gbg .PdfAnnotationMarkup .appendToPdfDictionary (_eabf );
};_eabf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0054\u0065\u0078\u0074"));_eabf .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gbg .Open );_eabf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gbg .Name );_eabf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gbg .State );
_eabf .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gbg .StateModel );return _bbfe ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gfd :=NewPdfAction ();_gdg :=&PdfActionSetOCGState {};_gdg .PdfAction =_gfd ;_gfd .SetContext (_gdg );return _gdg ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_eef :=NewPdfAnnotation ();_gce :=&PdfAnnotationPrinterMark {};_gce .PdfAnnotation =_eef ;_eef .SetContext (_gce );return _gce ;};

// ToPdfObject implements interface PdfModel.
func (_dcgbc *PdfSignature )ToPdfObject ()_db .PdfObject {_agddd :=_dcgbc ._adaged ;var _fdff *_db .PdfObjectDictionary ;if _ebaf ,_eeabb :=_agddd .PdfObject .(*pdfSignDictionary );_eeabb {_fdff =_ebaf .PdfObjectDictionary ;}else {_fdff =_agddd .PdfObject .(*_db .PdfObjectDictionary );
};_fdff .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dcgbc .Type );_fdff .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_dcgbc .Filter );_fdff .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_dcgbc .SubFilter );_fdff .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dcgbc .ByteRange );
_fdff .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dcgbc .Contents );_fdff .SetIfNotNil ("\u0043\u0065\u0072\u0074",_dcgbc .Cert );_fdff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dcgbc .Name );_fdff .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_dcgbc .Reason );
_fdff .SetIfNotNil ("\u004d",_dcgbc .M );_fdff .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_dcgbc .Reference );_fdff .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_dcgbc .Changes );_fdff .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_dcgbc .ContactInfo );
return _agddd ;};func _bagbf (_baab *PdfField )[]*PdfField {_cfge :=[]*PdfField {_baab };for _ ,_bfdd :=range _baab .Kids {_cfge =append (_cfge ,_bagbf (_bfdd )...);};return _cfge ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_abfac *_db .PdfIndirectObject ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ddcae *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_acg .CharMetrics ;var (ErrRequiredAttributeMissing =_f .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_f .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gefe =_f .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_f .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_f .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_de .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_db .ErrNotSupported );
ErrType1CFontNotSupported =_de .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_db .ErrNotSupported );
ErrType3FontNotSupported =_de .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_db .ErrNotSupported );
ErrTTCmapNotSupported =_de .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_db .ErrNotSupported );
ErrSignNotEnoughSpace =_de .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_de .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_adeba *PdfPage )GetPageAsIndirectObject ()*_db .PdfIndirectObject {return _adeba ._gdcfd };

// ToPdfObject implements interface PdfModel.
func (_cbgd *PdfActionMovie )ToPdfObject ()_db .PdfObject {_cbgd .PdfAction .ToPdfObject ();_gba :=_cbgd ._bcc ;_fbd :=_gba .PdfObject .(*_db .PdfObjectDictionary );_fbd .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeMovie )));_fbd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_cbgd .Annotation );
_fbd .SetIfNotNil ("\u0054",_cbgd .T );_fbd .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_cbgd .Operation );return _gba ;};

// ToPdfObject implements interface PdfModel.
func (_bcgf *PdfActionHide )ToPdfObject ()_db .PdfObject {_bcgf .PdfAction .ToPdfObject ();_ceg :=_bcgf ._bcc ;_ffcd :=_ceg .PdfObject .(*_db .PdfObjectDictionary );_ffcd .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeHide )));_ffcd .SetIfNotNil ("\u0054",_bcgf .T );
_ffcd .SetIfNotNil ("\u0048",_bcgf .H );return _ceg ;};func _bebc ()*modelManager {_bdfaf :=modelManager {};_bdfaf ._fgggc =map[PdfModel ]_db .PdfObject {};_bdfaf ._gffaa =map[_db .PdfObject ]PdfModel {};return &_bdfaf ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fffa *PdfColorCalGray )GetNumComponents ()int {return 1};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_deedd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfdg :=vals [0];if _bfdg < 0.0||_bfdg > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_abaa :=vals [1];if _abaa < 0.0||_abaa > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bff :=vals [2];if _bff < 0.0||_bff > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_beba :=NewPdfColorCalRGB (_bfdg ,_abaa ,_bff );return _beba ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// SetAlpha sets the alpha layer for the image.
func (_fecf *Image )SetAlpha (alpha []byte ){_fecf ._ededa =alpha };

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_cfa :=NewPdfAnnotation ();_gee :=&PdfAnnotationText {};_gee .PdfAnnotation =_cfa ;_gee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfa .SetContext (_gee );return _gee ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_acgb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_egeb *XObjectImage )SetFilter (encoder _db .StreamEncoder )error {_bddfd :=_egeb .Stream ;_ceeea ,_bbfcf :=_egeb .Filter .DecodeBytes (_bddfd );if _bbfcf !=nil {return _bbfcf ;};_egeb .Filter =encoder ;encoder .UpdateParams (_egeb .getParamsDict ());
_bddfd ,_bbfcf =encoder .EncodeBytes (_ceeea );if _bbfcf !=nil {return _bbfcf ;};_egeb .Stream =_bddfd ;return nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ccfbcc *PdfColorspaceSpecialIndexed )ToPdfObject ()_db .PdfObject {_eeac :=_db .MakeArray (_db .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_eeac .Append (_ccfbcc .Base .ToPdfObject ());_eeac .Append (_db .MakeInteger (int64 (_ccfbcc .HiVal )));
_eeac .Append (_ccfbcc .Lookup );if _ccfbcc ._afag !=nil {_ccfbcc ._afag .PdfObject =_eeac ;return _ccfbcc ._afag ;};return _eeac ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gfecd pdfFontType3 )GetCharMetrics (code _fa .CharCode )(_acg .CharMetrics ,bool ){if _gcfab ,_dgded :=_gfecd ._dafce [code ];_dgded {return _acg .CharMetrics {Wx :_gcfab },true ;};if _acg .IsStdFont (_acg .StdFontName (_gfecd ._abeff )){return _acg .CharMetrics {Wx :250},true ;
};return _acg .CharMetrics {},false ;};func _gfdad (_eefff _db .PdfObject )[]*_db .PdfObjectStream {if _eefff ==nil {return nil ;};_bffdd ,_gabfc :=_db .GetArray (_eefff );if !_gabfc ||_bffdd .Len ()==0{return nil ;};_dcacg :=make ([]*_db .PdfObjectStream ,0,_bffdd .Len ());
for _ ,_eagag :=range _bffdd .Elements (){if _dbcfb ,_cgaab :=_db .GetStream (_eagag );_cgaab {_dcacg =append (_dcacg ,_dbcfb );};};return _dcacg ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_bfdda *PdfPage )GetPageDict ()*_db .PdfObjectDictionary {_efceee :=_bfdda ._bgbaf ;_efceee .Clear ();_efceee .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0050\u0061\u0067\u0065"));_efceee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfdda .Parent );
if _bfdda .LastModified !=nil {_efceee .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bfdda .LastModified .ToPdfObject ());};if _bfdda .Resources !=nil {_efceee .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bfdda .Resources .ToPdfObject ());
};if _bfdda .CropBox !=nil {_efceee .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_bfdda .CropBox .ToPdfObject ());};if _bfdda .MediaBox !=nil {_efceee .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_bfdda .MediaBox .ToPdfObject ());};if _bfdda .BleedBox !=nil {_efceee .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_bfdda .BleedBox .ToPdfObject ());
};if _bfdda .TrimBox !=nil {_efceee .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_bfdda .TrimBox .ToPdfObject ());};if _bfdda .ArtBox !=nil {_efceee .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_bfdda .ArtBox .ToPdfObject ());};_efceee .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_bfdda .BoxColorInfo );
_efceee .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bfdda .Contents );if _bfdda .Rotate !=nil {_efceee .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_db .MakeInteger (*_bfdda .Rotate ));};_efceee .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bfdda .Group );
_efceee .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_bfdda .Thumb );_efceee .SetIfNotNil ("\u0042",_bfdda .B );_efceee .SetIfNotNil ("\u0044\u0075\u0072",_bfdda .Dur );_efceee .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bfdda .Trans );_efceee .SetIfNotNil ("\u0041\u0041",_bfdda .AA );
_efceee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bfdda .Metadata );_efceee .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bfdda .PieceInfo );_efceee .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bfdda .StructParents );
_efceee .SetIfNotNil ("\u0049\u0044",_bfdda .ID );_efceee .SetIfNotNil ("\u0050\u005a",_bfdda .PZ );_efceee .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_bfdda .SeparationInfo );_efceee .SetIfNotNil ("\u0054\u0061\u0062\u0073",_bfdda .Tabs );
_efceee .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_bfdda .TemplateInstantiated );_efceee .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_bfdda .PresSteps );_efceee .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_bfdda .UserUnit );
_efceee .SetIfNotNil ("\u0056\u0050",_bfdda .VP );if _bfdda ._gfeg !=nil {_fcbbe :=_db .MakeArray ();for _ ,_abegef :=range _bfdda ._gfeg {if _fccg :=_abegef .GetContext ();_fccg !=nil {_fcbbe .Append (_fccg .ToPdfObject ());}else {_fcbbe .Append (_abegef .ToPdfObject ());
};};if _fcbbe .Len ()> 0{_efceee .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_fcbbe );};}else if _bfdda .Annots !=nil {_efceee .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_bfdda .Annots );};return _efceee ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _db .PdfObject ;FS _db .PdfObject ;F _db .PdfObject ;UF _db .PdfObject ;DOS _db .PdfObject ;Mac _db .PdfObject ;Unix _db .PdfObject ;ID _db .PdfObject ;V _db .PdfObject ;EF _db .PdfObject ;RF _db .PdfObject ;Desc _db .PdfObject ;
CI _db .PdfObject ;_cebda _db .PdfObject ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_dddfd *PdfFieldChoice )ToPdfObject ()_db .PdfObject {_dddfd .PdfField .ToPdfObject ();_abec :=_dddfd ._fbeg ;_dffg :=_abec .PdfObject .(*_db .PdfObjectDictionary );_dffg .Set ("\u0046\u0054",_db .MakeName ("\u0043\u0068"));if _dddfd .Opt !=nil {_dffg .Set ("\u004f\u0070\u0074",_dddfd .Opt );
};if _dddfd .TI !=nil {_dffg .Set ("\u0054\u0049",_dddfd .TI );};if _dddfd .I !=nil {_dffg .Set ("\u0049",_dddfd .I );};return _abec ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bgg *PdfAnnotationWidget )Field ()*PdfField {return _bgg ._cba };

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _dg .ReadSeeker )(*PdfReader ,error ){const _cedbe ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _cgeb (rs ,&ReaderOpts {},false ,_cedbe );};func (_dfg *PdfAnnotationMarkup )appendToPdfDictionary (_cacc *_db .PdfObjectDictionary ){_cacc .SetIfNotNil ("\u0054",_dfg .T );
if _dfg .Popup !=nil {_cacc .Set ("\u0050\u006f\u0070u\u0070",_dfg .Popup .ToPdfObject ());};_cacc .SetIfNotNil ("\u0043\u0041",_dfg .CA );_cacc .SetIfNotNil ("\u0052\u0043",_dfg .RC );_cacc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dfg .CreationDate );
_cacc .SetIfNotNil ("\u0049\u0052\u0054",_dfg .IRT );_cacc .SetIfNotNil ("\u0053\u0075\u0062\u006a",_dfg .Subj );_cacc .SetIfNotNil ("\u0052\u0054",_dfg .RT );_cacc .SetIfNotNil ("\u0049\u0054",_dfg .IT );_cacc .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_dfg .ExData );
};func (_fege *PdfReader )newPdfAnnotationHighlightFromDict (_cacf *_db .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_aec :=PdfAnnotationHighlight {};_fagd ,_cgbg :=_fege .newPdfAnnotationMarkupFromDict (_cacf );if _cgbg !=nil {return nil ,_cgbg ;
};_aec .PdfAnnotationMarkup =_fagd ;_aec .QuadPoints =_cacf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aec ,nil ;};func _acca (_ggdac *_db .PdfObjectStream )(*PdfFunctionType0 ,error ){_aege :=&PdfFunctionType0 {};_aege ._afbcg =_ggdac ;
_gdgbf :=_ggdac .PdfObjectDictionary ;_fbdfb ,_ggafbd :=_db .TraceToDirectObject (_gdgbf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_db .PdfObjectArray );if !_ggafbd {_gd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fbdfb .Len ()< 0||_fbdfb .Len ()%2!=0{_gd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_f .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_aege .NumInputs =_fbdfb .Len ()/2;_gdcb ,_cafcc :=_fbdfb .ToFloat64Array ();if _cafcc !=nil {return nil ,_cafcc ;};_aege .Domain =_gdcb ;
_fbdfb ,_ggafbd =_db .TraceToDirectObject (_gdgbf .Get ("\u0052\u0061\u006eg\u0065")).(*_db .PdfObjectArray );if !_ggafbd {_gd .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fbdfb .Len ()< 0||_fbdfb .Len ()%2!=0{return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aege .NumOutputs =_fbdfb .Len ()/2;_cbde ,_cafcc :=_fbdfb .ToFloat64Array ();if _cafcc !=nil {return nil ,_cafcc ;
};_aege .Range =_cbde ;_fbdfb ,_ggafbd =_db .TraceToDirectObject (_gdgbf .Get ("\u0053\u0069\u007a\u0065")).(*_db .PdfObjectArray );if !_ggafbd {_gd .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cdba ,_cafcc :=_fbdfb .ToIntegerArray ();
if _cafcc !=nil {return nil ,_cafcc ;};if len (_cdba )!=_aege .NumInputs {_gd .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aege .Size =_cdba ;_fdedd ,_ggafbd :=_db .TraceToDirectObject (_gdgbf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_db .PdfObjectInteger );
if !_ggafbd {_gd .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_f .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fdedd !=1&&*_fdedd !=2&&*_fdedd !=4&&*_fdedd !=8&&*_fdedd !=12&&*_fdedd !=16&&*_fdedd !=24&&*_fdedd !=32{_gd .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fdedd );
return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aege .BitsPerSample =int (*_fdedd );_aege .Order =1;_ffac ,_ggafbd :=_db .TraceToDirectObject (_gdgbf .Get ("\u004f\u0072\u0064e\u0072")).(*_db .PdfObjectInteger );
if _ggafbd {if *_ffac !=1&&*_ffac !=3{_gd .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_ffac );return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aege .Order =int (*_ffac );
};_fbdfb ,_ggafbd =_db .TraceToDirectObject (_gdgbf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_db .PdfObjectArray );if _ggafbd {_ceaff ,_bgbbg :=_fbdfb .ToFloat64Array ();if _bgbbg !=nil {return nil ,_bgbbg ;};_aege .Encode =_ceaff ;};_fbdfb ,_ggafbd =_db .TraceToDirectObject (_gdgbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_db .PdfObjectArray );
if _ggafbd {_cgceg ,_ecea :=_fbdfb .ToFloat64Array ();if _ecea !=nil {return nil ,_ecea ;};_aege .Decode =_cgceg ;};_fbfgd ,_cafcc :=_db .DecodeStream (_ggdac );if _cafcc !=nil {return nil ,_cafcc ;};_aege ._decda =_fbfgd ;return _aege ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_dbc PdfModel ;Type _db .PdfObject ;S _db .PdfObject ;Next _db .PdfObject ;_bcc *_db .PdfIndirectObject ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_db .PdfObject ;};

// AddWatermarkImage adds a watermark to the page.
func (_ddgc *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_efegf ,_gfcbc :=_ddgc .GetMediaBox ();if _gfcbc !=nil {return _gfcbc ;};_cceg :=_efegf .Urx -_efegf .Llx ;_bdea :=_efegf .Ury -_efegf .Lly ;_bdedb :=float64 (*ximg .Width );
_edcf :=(_cceg -_bdedb )/2;if opt .FitToWidth {_bdedb =_cceg ;_edcf =0;};_ebdd :=_bdea ;_gcabe :=float64 (0);if opt .PreserveAspectRatio {_ebdd =_bdedb *float64 (*ximg .Height )/float64 (*ximg .Width );_gcabe =(_bdea -_ebdd )/2;};if _ddgc .Resources ==nil {_ddgc .Resources =NewPdfPageResources ();
};_abab :=0;_afga :=_db .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_abab ));for _ddgc .Resources .HasXObjectByName (_afga ){_abab ++;_afga =_db .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_abab ));};_gfcbc =_ddgc .AddImageResource (_afga ,ximg );
if _gfcbc !=nil {return _gfcbc ;};_abab =0;_ffee :=_db .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_abab ));for _ddgc .HasExtGState (_ffee ){_abab ++;_ffee =_db .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_abab ));};_egcce :=_db .MakeDict ();
_egcce .Set ("\u0042\u004d",_db .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_egcce .Set ("\u0043\u0041",_db .MakeFloat (opt .Alpha ));_egcce .Set ("\u0063\u0061",_db .MakeFloat (opt .Alpha ));_gfcbc =_ddgc .AddExtGState (_ffee ,_egcce );if _gfcbc !=nil {return _gfcbc ;
};_ebbed :=_g .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ffee ,_bdedb ,_ebdd ,_edcf ,_gcabe ,_afga );
_ddgc .AddContentStreamByString (_ebbed );return nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_gdbfd int ,_fbga *PdfPage );

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_aefc *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_aefc .Base .GetNumComponents ();_afddb :=int (vals [0])*N ;
if _afddb < 0||(_afddb +N -1)>=len (_aefc ._afbe ){return nil ,_f .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_daef :=_aefc ._afbe [_afddb :_afddb +N ];var _beed []float64 ;for _ ,_eeag :=range _daef {_beed =append (_beed ,float64 (_eeag )/255.0);
};_bdba ,_gcfbb :=_aefc .Base .ColorFromFloats (_beed );if _gcfbb !=nil {return nil ,_gcfbb ;};return _bdba ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eaegf *PdfOutline )ToPdfObject ()_db .PdfObject {_adde :=_eaegf ._dfcg ;_gcdea :=_adde .PdfObject .(*_db .PdfObjectDictionary );_gcdea .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _eaegf .First !=nil {_gcdea .Set ("\u0046\u0069\u0072s\u0074",_eaegf .First .ToPdfObject ());
};if _eaegf .Last !=nil {_gcdea .Set ("\u004c\u0061\u0073\u0074",_eaegf .Last .GetContext ().GetContainingPdfObject ());};if _eaegf .Parent !=nil {_gcdea .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaegf .Parent .GetContext ().GetContainingPdfObject ());
};if _eaegf .Count !=nil {_gcdea .Set ("\u0043\u006f\u0075n\u0074",_db .MakeInteger (*_eaegf .Count ));};return _adde ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bfgd :=PdfColorDeviceGray (grayVal );return &_bfgd ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _db .PdfObject ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_efbc *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_efbc .HiVal )};};

// ToPdfObject implements interface PdfModel.
func (_ebga *PdfActionResetForm )ToPdfObject ()_db .PdfObject {_ebga .PdfAction .ToPdfObject ();_baf :=_ebga ._bcc ;_cbb :=_baf .PdfObject .(*_db .PdfObjectDictionary );_cbb .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeResetForm )));_cbb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ebga .Fields );
_cbb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ebga .Flags );return _baf ;};

// ToPdfObject implements interface PdfModel.
func (_bcadf *PdfAnnotationWatermark )ToPdfObject ()_db .PdfObject {_bcadf .PdfAnnotation .ToPdfObject ();_cae :=_bcadf ._addd ;_febe :=_cae .PdfObject .(*_db .PdfObjectDictionary );_febe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_febe .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_bcadf .FixedPrint );return _cae ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_cfcf *PdfPageResources )SetXObjectByName (keyName _db .PdfObjectName ,stream *_db .PdfObjectStream )error {if _cfcf .XObject ==nil {_cfcf .XObject =_db .MakeDict ();};_debf :=_db .TraceToDirectObject (_cfcf .XObject );_edged ,_dcgcg :=_debf .(*_db .PdfObjectDictionary );
if !_dcgcg {_gd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_cfcf .XObject ,_debf );return _f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_edged .Set (keyName ,stream );return nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _db .PdfObject ;Name _db .PdfObject ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gbae :=NewPdfAnnotation ();_aee :=&PdfAnnotationStamp {};_aee .PdfAnnotation =_gbae ;_aee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbae .SetContext (_aee );return _aee ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gaf :=NewPdfAction ();_cee :=&PdfActionLaunch {};_cee .PdfAction =_gaf ;_gaf .SetContext (_cee );return _cee ;};

// Encoder returns the font's text encoder.
func (_gbfd pdfFontType0 )Encoder ()_fa .TextEncoder {return _gbfd ._ecbc };

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_fdcg :_db .MakeIndirectObject (_db .MakeDict ()),VRI :map[string ]*VRI {}};};type pdfFont interface{_acg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_db .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// HasFontByName checks if has font resource by name.
func (_gffgbe *PdfPage )HasFontByName (name _db .PdfObjectName )bool {_fagac ,_ffda :=_gffgbe .Resources .Font .(*_db .PdfObjectDictionary );if !_ffda {return false ;};if _adfg :=_fagac .Get (name );_adfg !=nil {return true ;};return false ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_aeb PdfModel ;Rect _db .PdfObject ;Contents _db .PdfObject ;P _db .PdfObject ;NM _db .PdfObject ;M _db .PdfObject ;F _db .PdfObject ;AP _db .PdfObject ;AS _db .PdfObject ;Border _db .PdfObject ;C _db .PdfObject ;StructParent _db .PdfObject ;
OC _db .PdfObject ;_addd *_db .PdfIndirectObject ;};

// Encoder returns the font's text encoder.
func (_ccfbf *pdfFontSimple )Encoder ()_fa .TextEncoder {if _ccfbf ._gffaf !=nil {return _ccfbf ._gffaf ;};if _ccfbf ._bagb !=nil {return _ccfbf ._bagb ;};_baded ,_ :=_fa .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _baded ;};func (_aaf *PdfReader )newPdfAnnotationFreeTextFromDict (_faef *_db .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_aae :=PdfAnnotationFreeText {};_aga ,_fdcaa :=_aaf .newPdfAnnotationMarkupFromDict (_faef );if _fdcaa !=nil {return nil ,_fdcaa ;
};_aae .PdfAnnotationMarkup =_aga ;_aae .DA =_faef .Get ("\u0044\u0041");_aae .Q =_faef .Get ("\u0051");_aae .RC =_faef .Get ("\u0052\u0043");_aae .DS =_faef .Get ("\u0044\u0053");_aae .CL =_faef .Get ("\u0043\u004c");_aae .IT =_faef .Get ("\u0049\u0054");
_aae .BE =_faef .Get ("\u0042\u0045");_aae .RD =_faef .Get ("\u0052\u0044");_aae .BS =_faef .Get ("\u0042\u0053");_aae .LE =_faef .Get ("\u004c\u0045");return &_aae ,nil ;};func (_ccccb *PdfShading )getShadingDict ()(*_db .PdfObjectDictionary ,error ){_fbdd :=_ccccb ._eccbgb ;
if _cdebd ,_affbe :=_fbdd .(*_db .PdfIndirectObject );_affbe {_fgfg ,_ffggg :=_cdebd .PdfObject .(*_db .PdfObjectDictionary );if !_ffggg {return nil ,_db .ErrTypeError ;};return _fgfg ,nil ;}else if _eeaad ,_cggge :=_fbdd .(*_db .PdfObjectStream );_cggge {return _eeaad .PdfObjectDictionary ,nil ;
}else if _eeaga ,_cegfa :=_fbdd .(*_db .PdfObjectDictionary );_cegfa {return _eeaga ,nil ;}else {_gd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_db .ErrTypeError ;};};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gacf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_gecgg :=func (_bcfg float64 )float64 {if _bcfg >=6.0/29{return _bcfg *_bcfg *_bcfg ;};return 108.0/841*(_bcfg -4/29);};_fbbfd :=img ._ffga ;if len (_fbbfd )!=6{_gd .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_fbbfd =_gacf .DecodeArray ();};_cdeb :=_cga .NewReader (img .getBase ());_fgac :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._ededa ,img ._ffga );_abff :=_cga .NewWriter (_fgac );_gcagb :=_ae .Pow (2,float64 (img .BitsPerComponent ))-1;
_fdea :=make ([]uint32 ,3);var (_bceb error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_cgaa ,_aagea ,_fcag float64 ;);for {_bceb =_cdeb .ReadSamples (_fdea );if _bceb ==_dg .EOF {break ;}else if _bceb !=nil {return img ,_bceb ;};Ls =float64 (_fdea [0])/_gcagb ;As =float64 (_fdea [1])/_gcagb ;
Bs =float64 (_fdea [2])/_gcagb ;Ls =_fg .LinearInterpolate (Ls ,0.0,1.0,_fbbfd [0],_fbbfd [1]);As =_fg .LinearInterpolate (As ,0.0,1.0,_fbbfd [2],_fbbfd [3]);Bs =_fg .LinearInterpolate (Bs ,0.0,1.0,_fbbfd [4],_fbbfd [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_gacf .WhitePoint [0]*_gecgg (L );Y =_gacf .WhitePoint [1]*_gecgg (M );Z =_gacf .WhitePoint [2]*_gecgg (N );_cgaa =3.240479*X +-1.537150*Y +-0.498535*Z ;_aagea =-0.969256*X +1.875992*Y +0.041556*Z ;_fcag =0.055648*X +-0.204043*Y +1.057311*Z ;
_cgaa =_ae .Min (_ae .Max (_cgaa ,0),1.0);_aagea =_ae .Min (_ae .Max (_aagea ,0),1.0);_fcag =_ae .Min (_ae .Max (_fcag ,0),1.0);_fdea [0]=uint32 (_cgaa *_gcagb );_fdea [1]=uint32 (_aagea *_gcagb );_fdea [2]=uint32 (_fcag *_gcagb );if _bceb =_abff .WriteSamples (_fdea );
_bceb !=nil {return img ,_bceb ;};};return _efdbf (&_fgac ),nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_db .PdfObjectInteger ;BitsPerComponent *_db .PdfObjectInteger ;BitsPerFlag *_db .PdfObjectInteger ;Decode *_db .PdfObjectArray ;Function []PdfFunction ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_agcgb []_db .PdfObject )([]_db .PdfObject ,error );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _db .PdfObject )(_db .PdfObjectName ,error ){var _faga *_db .PdfObjectName ;var _cabgc *_db .PdfObjectArray ;if _cabgce ,_egea :=obj .(*_db .PdfIndirectObject );_egea {if _efed ,_effff :=_cabgce .PdfObject .(*_db .PdfObjectArray );
_effff {_cabgc =_efed ;}else if _ddgg ,_gcfa :=_cabgce .PdfObject .(*_db .PdfObjectName );_gcfa {_faga =_ddgg ;};}else if _egaf ,_bded :=obj .(*_db .PdfObjectArray );_bded {_cabgc =_egaf ;}else if _cadb ,_afdca :=obj .(*_db .PdfObjectName );_afdca {_faga =_cadb ;
};if _faga !=nil {switch *_faga {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_faga ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_faga ,nil ;
};};if _cabgc !=nil &&_cabgc .Len ()> 0{if _bfbc ,_eadf :=_cabgc .Get (0).(*_db .PdfObjectName );_eadf {switch *_bfbc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cabgc .Len ()==1{return *_bfbc ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bfbc ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bfbc ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bfbc ,nil ;};};};return "",nil ;};

// Encoder returns the font's text encoder.
func (_dead pdfFontType3 )Encoder ()_fa .TextEncoder {return _dead ._dedg };func (_adbc *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_fbcd :=NewPdfAnnotation ();_adb :=&PdfAnnotationScreen {};_adb .PdfAnnotation =_fbcd ;_fbcd .SetContext (_adb );return _adb ;};

// WriteToFile writes the output PDF to file.
func (_aeefc *PdfWriter )WriteToFile (outputFilePath string )error {_edfed ,_daeefc :=_ca .Create (outputFilePath );if _daeefc !=nil {return _daeefc ;};defer _edfed .Close ();return _aeefc .Write (_edfed );};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_efcga *PdfPageResources )GetXObjectFormByName (keyName _db .PdfObjectName )(*XObjectForm ,error ){_geffb ,_ggddc :=_efcga .GetXObjectByName (keyName );if _geffb ==nil {return nil ,nil ;};if _ggddc !=XObjectTypeForm {return nil ,_f .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_bfacd ,_acgdd :=NewXObjectFormFromStream (_geffb );if _acgdd !=nil {return nil ,_acgdd ;};return _bfacd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdgd *PdfAnnotationWidget )ToPdfObject ()_db .PdfObject {_gdgd .PdfAnnotation .ToPdfObject ();_fdcc :=_gdgd ._addd ;_agba :=_fdcc .PdfObject .(*_db .PdfObjectDictionary );if _gdgd ._bdee {return _fdcc ;};_gdgd ._bdee =true ;_agba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_agba .SetIfNotNil ("\u0048",_gdgd .H );_agba .SetIfNotNil ("\u004d\u004b",_gdgd .MK );_agba .SetIfNotNil ("\u0041",_gdgd .A );_agba .SetIfNotNil ("\u0041\u0041",_gdgd .AA );_agba .SetIfNotNil ("\u0042\u0053",_gdgd .BS );_acgg :=_gdgd .Parent ;if _gdgd ._cba !=nil {if _gdgd ._cba ._fbeg ==_gdgd ._addd {_gdgd ._cba .ToPdfObject ();
};_acgg =_gdgd ._cba .GetContainingPdfObject ();};if _acgg !=_fdcc {_agba .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_acgg );};_gdgd ._bdee =false ;return _fdcc ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_gfe :=NewPdfAnnotation ();_gbc :=&PdfAnnotationSquiggly {};_gbc .PdfAnnotation =_gfe ;_gbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfe .SetContext (_gbc );return _gbc ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_fce :=NewPdfAnnotation ();_agb :=&PdfAnnotationLine {};_agb .PdfAnnotation =_fce ;_agb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fce .SetContext (_agb );return _agb ;};func (_faf *PdfReader )newPdfActionURIFromDict (_baff *_db .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_baff .Get ("\u0055\u0052\u0049"),IsMap :_baff .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_bgagf *PdfAcroForm )GetContainingPdfObject ()_db .PdfObject {return _bgagf ._fbbe };

// Val returns the color value.
func (_fddag *PdfColorDeviceGray )Val ()float64 {return float64 (*_fddag )};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_bafb :=PdfDate {};_ccbgb :=_bdfe .FindAllStringSubmatch (dateStr ,1);if len (_ccbgb )< 1{return _bafb ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_ccbgb [0])!=10{return _bafb ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_bafb ._fcae ,_ =_ac .ParseInt (_ccbgb [0][1],10,32);_bafb ._dcecg ,_ =_ac .ParseInt (_ccbgb [0][2],10,32);_bafb ._eggb ,_ =_ac .ParseInt (_ccbgb [0][3],10,32);_bafb ._accca ,_ =_ac .ParseInt (_ccbgb [0][4],10,32);_bafb ._aeac ,_ =_ac .ParseInt (_ccbgb [0][5],10,32);
_bafb ._cabaa ,_ =_ac .ParseInt (_ccbgb [0][6],10,32);if len (_ccbgb [0][7])> 0{_bafb ._gdcdc =_ccbgb [0][7][0];}else {_bafb ._gdcdc ='+';};if len (_ccbgb [0][8])> 0{_bafb ._gdgee ,_ =_ac .ParseInt (_ccbgb [0][8],10,32);}else {_bafb ._gdgee =0;};if len (_ccbgb [0][9])> 0{_bafb ._bfdgb ,_ =_ac .ParseInt (_ccbgb [0][9],10,32);
}else {_bafb ._bfdgb =0;};return _bafb ,nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_edbg .Lock ();defer _edbg .Unlock ();_fdfbf =producer };

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_acb :=NewPdfAnnotation ();_ddge :=&PdfAnnotationSound {};_ddge .PdfAnnotation =_acb ;_ddge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acb .SetContext (_ddge );return _ddge ;};

// HasXObjectByName checks if has XObject resource by name.
func (_ccgec *PdfPage )HasXObjectByName (name _db .PdfObjectName )bool {_afcf ,_ebbg :=_ccgec .Resources .XObject .(*_db .PdfObjectDictionary );if !_ebbg {return false ;};if _bdae :=_afcf .Get (name );_bdae !=nil {return true ;};return false ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _db .PdfObject ;Name _db .PdfObject ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dabed *PdfPageResources )SetXObjectFormByName (keyName _db .PdfObjectName ,xform *XObjectForm )error {_abge :=xform .ToPdfObject ().(*_db .PdfObjectStream );_abbg :=_dabed .SetXObjectByName (keyName ,_abge );return _abbg ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_cfab *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_edge :=_cga .NewReader (img .getBase ());_ceaf :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_cfab .AlternateSpace .GetNumComponents (),nil ,img ._ededa ,nil );
_gagc :=_cga .NewWriter (_ceaf );_bdbee :=_ae .Pow (2,float64 (img .BitsPerComponent ))-1;_gd .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_gd .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_cfab .TintTransform );_cgac :=_cfab .AlternateSpace .DecodeArray ();var (_begg uint32 ;_geecf error ;);for {_begg ,_geecf =_edge .ReadSample ();
if _geecf ==_dg .EOF {break ;};if _geecf !=nil {return img ,_geecf ;};_adadg :=float64 (_begg )/_bdbee ;_aaga ,_afbg :=_cfab .TintTransform .Evaluate ([]float64 {_adadg });if _afbg !=nil {return img ,_afbg ;};for _aecf ,_edfe :=range _aaga {_eccab :=_fg .LinearInterpolate (_edfe ,_cgac [_aecf *2],_cgac [_aecf *2+1],0,1);
if _afbg =_gagc .WriteSample (uint32 (_eccab *_bdbee ));_afbg !=nil {return img ,_afbg ;};};};return _cfab .AlternateSpace .ImageToRGB (_efdbf (&_ceaf ));};func (_efdga *PdfPattern )getDict ()*_db .PdfObjectDictionary {if _bdga ,_efdda :=_efdga ._afae .(*_db .PdfIndirectObject );
_efdda {_gcdac ,_fgagd :=_bdga .PdfObject .(*_db .PdfObjectDictionary );if !_fgagd {return nil ;};return _gcdac ;}else if _gcbbe ,_begae :=_efdga ._afae .(*_db .PdfObjectStream );_begae {return _gcbbe .PdfObjectDictionary ;}else {_gd .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_efdga ._afae );
return nil ;};};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_acged *PdfSignature )bool ;Validate (_ecfaca *PdfSignature ,_aefde Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_bddbg *PdfSignature )(Hasher ,error );Sign (_gadgc *PdfSignature ,_ggcf Hasher )error ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_eff :=NewPdfAction ();_ec :=&PdfActionGoToE {};_ec .PdfAction =_eff ;_eff .SetContext (_ec );return _ec ;};func _gffg (_bbadd []byte )[]byte {const _cbgdg =52845;const _edcgg =22719;_abdbc :=55665;for _ ,_babeb :=range _bbadd [:4]{_abdbc =(int (_babeb )+_abdbc )*_cbgdg +_edcgg ;
};_gfgb :=make ([]byte ,len (_bbadd )-4);for _dffd ,_cefb :=range _bbadd [4:]{_gfgb [_dffd ]=byte (int (_cefb )^_abdbc >>8);_abdbc =(int (_cefb )+_abdbc )*_cbgdg +_edcgg ;};return _gfgb ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_acef *PdfColorspaceCalGray )ToPdfObject ()_db .PdfObject {_aeaa :=&_db .PdfObjectArray {};_aeaa .Append (_db .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fgdc :=_db .MakeDict ();if _acef .WhitePoint !=nil {_fgdc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_db .MakeArray (_db .MakeFloat (_acef .WhitePoint [0]),_db .MakeFloat (_acef .WhitePoint [1]),_db .MakeFloat (_acef .WhitePoint [2])));
}else {_gd .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _acef .BlackPoint !=nil {_fgdc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_db .MakeArray (_db .MakeFloat (_acef .BlackPoint [0]),_db .MakeFloat (_acef .BlackPoint [1]),_db .MakeFloat (_acef .BlackPoint [2])));
};_fgdc .Set ("\u0047\u0061\u006dm\u0061",_db .MakeFloat (_acef .Gamma ));_aeaa .Append (_fgdc );if _acef ._fcff !=nil {_acef ._fcff .PdfObject =_aeaa ;return _acef ._fcff ;};return _aeaa ;};var _afceae =false ;

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ffgge *PdfAcroForm ,_ecbeec *PdfField ,_bfbeb *PdfAnnotationWidget )(*_db .PdfObjectDictionary ,error );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bedcb ,_aeae :=NewStandard14Font (basefont );if _aeae !=nil {panic (_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bedcb ;};

// SetForms sets the Acroform for a PDF file.
func (_cfbfa *PdfWriter )SetForms (form *PdfAcroForm )error {_cfbfa ._dcfce =form ;return nil };func (_bfgb *PdfReader )newPdfAnnotationScreenFromDict (_ffcf *_db .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_gcf :=PdfAnnotationScreen {};_gcf .T =_ffcf .Get ("\u0054");
_gcf .MK =_ffcf .Get ("\u004d\u004b");_gcf .A =_ffcf .Get ("\u0041");_gcf .AA =_ffcf .Get ("\u0041\u0041");return &_gcf ,nil ;};func (_cag *PdfReader )newPdfActionLaunchFromDict (_deg *_db .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bgd ,_gdeg :=_ebae (_deg .Get ("\u0046"));
if _gdeg !=nil {return nil ,_gdeg ;};return &PdfActionLaunch {Win :_deg .Get ("\u0057\u0069\u006e"),Mac :_deg .Get ("\u004d\u0061\u0063"),Unix :_deg .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_deg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bgd },nil ;
};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _db .PdfObject ;Sy _db .PdfObject ;};

// Fill populates `form` with values provided by `provider`.
func (_afcag *PdfAcroForm )Fill (provider FieldValueProvider )error {return _afcag .fill (provider ,nil )};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_agdfc *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _agdfc .Alternate ==nil {if _agdfc .N ==1{_cabea :=NewPdfColorspaceDeviceGray ();return _cabea .ColorFromFloats (vals );}else if _agdfc .N ==3{_fegec :=NewPdfColorspaceDeviceRGB ();
return _fegec .ColorFromFloats (vals );}else if _agdfc .N ==4{_abeba :=NewPdfColorspaceDeviceCMYK ();return _abeba .ColorFromFloats (vals );}else {return nil ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _agdfc .Alternate .ColorFromFloats (vals );};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ece :=NewPdfAnnotation ();_dae :=&PdfAnnotationWidget {};_dae .PdfAnnotation =_ece ;_ece .SetContext (_dae );return _dae ;};func (_dbdff *PdfSignature )extractChainFromPKCS7 ()([]*_b .Certificate ,error ){_egbbd ,_fgadg :=_cea .Parse (_dbdff .Contents .Bytes ());
if _fgadg !=nil {return nil ,_fgadg ;};return _egbbd .Certificates ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_daa *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// String returns a string that describes `base`.
func (_gebbc fontCommon )String ()string {return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gebbc .coreString ());};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_bgdc :=NewPdfAnnotation ();_bgfb :=&PdfAnnotationWatermark {};_bgfb .PdfAnnotation =_bgdc ;_bgdc .SetContext (_bgfb );return _bgfb ;};

// String returns a string describing the font descriptor.
func (_cgdf *PdfFontDescriptor )String ()string {var _bcca []string ;if _cgdf .FontName !=nil {_bcca =append (_bcca ,_cgdf .FontName .String ());};if _cgdf .FontFamily !=nil {_bcca =append (_bcca ,_cgdf .FontFamily .String ());};if _cgdf .fontFile !=nil {_bcca =append (_bcca ,_cgdf .fontFile .String ());
};if _cgdf ._febba !=nil {_bcca =append (_bcca ,_cgdf ._febba .String ());};_bcca =append (_bcca ,_g .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cgdf .FontFile3 !=nil ));return _g .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_cf .Join (_bcca ,"\u002c\u0020"));
};

// ToPdfObject converts the font to a PDF representation.
func (_eebb *pdfFontType3 )ToPdfObject ()_db .PdfObject {if _eebb ._adgg ==nil {_eebb ._adgg =&_db .PdfIndirectObject {};};_cgaff :=_eebb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_eebb ._adgg .PdfObject =_cgaff ;if _eebb .FirstChar !=nil {_cgaff .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_eebb .FirstChar );
};if _eebb .LastChar !=nil {_cgaff .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_eebb .LastChar );};if _eebb .Widths !=nil {_cgaff .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_eebb .Widths );};if _eebb .Encoding !=nil {_cgaff .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eebb .Encoding );
}else if _eebb ._dedg !=nil {_dbgdc :=_eebb ._dedg .ToPdfObject ();if _dbgdc !=nil {_cgaff .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbgdc );};};if _eebb .FontBBox !=nil {_cgaff .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_eebb .FontBBox );
};if _eebb .FontMatrix !=nil {_cgaff .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_eebb .FontMatrix );};if _eebb .CharProcs !=nil {_cgaff .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_eebb .CharProcs );};if _eebb .Resources !=nil {_cgaff .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eebb .Resources );
};return _eebb ._adgg ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _db .PdfObject ;FontFamily _db .PdfObject ;FontStretch _db .PdfObject ;FontWeight _db .PdfObject ;Flags _db .PdfObject ;FontBBox _db .PdfObject ;ItalicAngle _db .PdfObject ;Ascent _db .PdfObject ;Descent _db .PdfObject ;
Leading _db .PdfObject ;CapHeight _db .PdfObject ;XHeight _db .PdfObject ;StemV _db .PdfObject ;StemH _db .PdfObject ;AvgWidth _db .PdfObject ;MaxWidth _db .PdfObject ;MissingWidth _db .PdfObject ;FontFile _db .PdfObject ;FontFile2 _db .PdfObject ;FontFile3 _db .PdfObject ;
CharSet _db .PdfObject ;_dcddb int ;_cedf float64 ;*fontFile ;_febba *_acg .TtfType ;

// Additional entries for CIDFonts
Style _db .PdfObject ;Lang _db .PdfObject ;FD _db .PdfObject ;CIDSet _db .PdfObject ;_fffge *_db .PdfIndirectObject ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_fa .SimpleEncoder ,error ){_eegb ,_cfaf :=_ebeff (basefont );if _cfaf !=nil {return nil ,nil ,_cfaf ;};_aeaec ,_cadef :=_eegb .Encoder ().(_fa .SimpleEncoder );
if !_cadef {return nil ,nil ,_g .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_eegb .Encoder ());
};_bebeg :=make (map[rune ]_fa .GlyphName );for _eceec :=range alphabet {if _ ,_bgbdg :=_aeaec .RuneToCharcode (_eceec );!_bgbdg {_ ,_dbdcd :=_eegb ._dccec .Read (_eceec );if !_dbdcd {_gd .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_eceec ,_eceec );
continue ;};_gfdcc ,_dbdcd :=_fa .RuneToGlyph (_eceec );if !_dbdcd {_gd .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_eceec ,_eceec );continue ;};if len (_bebeg )>=255{return nil ,nil ,_f .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bebeg [_eceec ]=_gfdcc ;};};var (_adbb []_fa .CharCode ;_cbca []_fa .CharCode ;);for _dffcd :=_fa .CharCode (1);_dffcd <=0xff;_dffcd ++{_geeg ,_dccb :=_aeaec .CharcodeToRune (_dffcd );if !_dccb {_adbb =append (_adbb ,_dffcd );continue ;};if _ ,_dccb =alphabet [_geeg ];
!_dccb {_cbca =append (_cbca ,_dffcd );};};_fgaeb :=append (_adbb ,_cbca ...);if len (_fgaeb )< len (_bebeg ){return nil ,nil ,_g .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bebeg ),len (_fgaeb ));
};_eggde :=make ([]rune ,0,len (_bebeg ));for _eaedb :=range _bebeg {_eggde =append (_eggde ,_eaedb );};_ea .Slice (_eggde ,func (_aecbd ,_gafbb int )bool {return _eggde [_aecbd ]< _eggde [_gafbb ]});_bggdg :=make (map[_fa .CharCode ]_fa .GlyphName ,len (_eggde ));
for _ ,_bdbfd :=range _eggde {_egbf :=_fgaeb [0];_fgaeb =_fgaeb [1:];_bggdg [_egbf ]=_bebeg [_bdbfd ];};_aeaec =_fa .ApplyDifferences (_aeaec ,_bggdg );_eegb .SetEncoder (_aeaec );return &PdfFont {_fdcca :&_eegb },_aeaec ,nil ;};

// Val returns the value of the color.
func (_ebabef *PdfColorCalGray )Val ()float64 {return float64 (*_ebabef )};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_dfdf *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dagg []_fa .TextEncoder ;var _gcfbf _fa .CMapEncoder ;if _ebbdg :=_dfdf .baseFields ()._begaf ;_ebbdg !=nil {_gcfbf =_fa .NewCMapEncoder ("",nil ,_ebbdg );};_cfae :=_dfdf .Encoder ();
if _cfae !=nil {switch _ddadg :=_cfae .(type ){case _fa .SimpleEncoder :_efbcb :=_ddadg .BaseName ();if _ ,_egcbg :=_acbg [_efbcb ];_egcbg {_dagg =append (_dagg ,_cfae );};};};if len (_dagg )==0{if _dfdf .baseFields ()._begaf !=nil {_dagg =append (_dagg ,_gcfbf );
};if _cfae !=nil {_dagg =append (_dagg ,_cfae );};};var _bgedb _cfg .Buffer ;var _effed int ;for _ ,_baecb :=range data {var _egafd bool ;for _ ,_dgcdd :=range _dagg {if _afbge :=_dgcdd .Encode (string (_baecb ));len (_afbge )> 0{_bgedb .Write (_afbge );
_egafd =true ;break ;};};if !_egafd {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_baecb );
_effed ++;};};if _effed !=0{_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_effed ,_dfdf ,_dagg );
};return _bgedb .Bytes (),_effed ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _db .PdfObject )(*PdfFont ,error ){return _adcaa (fontObj ,true )};func (_cged *PdfReader )newPdfAnnotationLineFromDict (_fdbd *_db .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_gdb :=PdfAnnotationLine {};_caf ,_bcdc :=_cged .newPdfAnnotationMarkupFromDict (_fdbd );
if _bcdc !=nil {return nil ,_bcdc ;};_gdb .PdfAnnotationMarkup =_caf ;_gdb .L =_fdbd .Get ("\u004c");_gdb .BS =_fdbd .Get ("\u0042\u0053");_gdb .LE =_fdbd .Get ("\u004c\u0045");_gdb .IC =_fdbd .Get ("\u0049\u0043");_gdb .LL =_fdbd .Get ("\u004c\u004c");
_gdb .LLE =_fdbd .Get ("\u004c\u004c\u0045");_gdb .Cap =_fdbd .Get ("\u0043\u0061\u0070");_gdb .IT =_fdbd .Get ("\u0049\u0054");_gdb .LLO =_fdbd .Get ("\u004c\u004c\u004f");_gdb .CP =_fdbd .Get ("\u0043\u0050");_gdb .Measure =_fdbd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_gdb .CO =_fdbd .Get ("\u0043\u004f");return &_gdb ,nil ;};func (_cffcc *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bbdcf *_db .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_faea :=PdfAnnotationFileAttachment {};_dgdf ,_accb :=_cffcc .newPdfAnnotationMarkupFromDict (_bbdcf );
if _accb !=nil {return nil ,_accb ;};_faea .PdfAnnotationMarkup =_dgdf ;_faea .FS =_bbdcf .Get ("\u0046\u0053");_faea .Name =_bbdcf .Get ("\u004e\u0061\u006d\u0065");return &_faea ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_bbaa *PdfWriter )GetOptimizer ()Optimizer {return _bbaa ._ebaec };

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_cedg *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// IsColored specifies if the pattern is colored.
func (_adfae *PdfTilingPattern )IsColored ()bool {if _adfae .PaintType !=nil &&*_adfae .PaintType ==1{return true ;};return false ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_ffbfb *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cfdcf []*PdfField ;_gdbg :=map[*_db .PdfIndirectObject ]struct{}{};for _ ,_begbb :=range _ffbfb .PageList {_dcbf ,_acce :=_begbb .GetAnnotations ();if _acce !=nil {return _acce ;
};for _ ,_cagfa :=range _dcbf {var _gggdd *PdfField ;switch _agccfe :=_cagfa .GetContext ().(type ){case *PdfAnnotationWidget :if _agccfe ._cba !=nil {_gggdd =_agccfe ._cba ;break ;};if _eefa ,_aecge :=_db .GetIndirect (_agccfe .Parent );_aecge {_gggdd ,_acce =_ffbfb .newPdfFieldFromIndirectObject (_eefa ,nil );
if _acce ==nil {break ;};_gd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eefa ,_acce );
};if _agccfe ._addd !=nil {_gggdd ,_acce =_ffbfb .newPdfFieldFromIndirectObject (_agccfe ._addd ,nil );if _acce ==nil {break ;};_gd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_agccfe ._addd ,_acce );
};};if _gggdd ==nil {continue ;};if _ ,_acgab :=_gdbg [_gggdd ._fbeg ];_acgab {continue ;};_gdbg [_gggdd ._fbeg ]=struct{}{};_cfdcf =append (_cfdcf ,_gggdd );};};if len (_cfdcf )==0{return nil ;};if _ffbfb .AcroForm ==nil {_ffbfb .AcroForm =NewPdfAcroForm ();
};_ffbfb .AcroForm .Fields =&_cfdcf ;return nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_fdad :=&PdfColorspaceCalGray {};_fdad .BlackPoint =[]float64 {0.0,0.0,0.0};_fdad .Gamma =1;return _fdad ;};

// ToPdfObject implements interface PdfModel.
func (_beb *PdfAnnotationPolyLine )ToPdfObject ()_db .PdfObject {_beb .PdfAnnotation .ToPdfObject ();_ecf :=_beb ._addd ;_cadg :=_ecf .PdfObject .(*_db .PdfObjectDictionary );_beb .PdfAnnotationMarkup .appendToPdfDictionary (_cadg );_cadg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_cadg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_beb .Vertices );_cadg .SetIfNotNil ("\u004c\u0045",_beb .LE );_cadg .SetIfNotNil ("\u0042\u0053",_beb .BS );_cadg .SetIfNotNil ("\u0049\u0043",_beb .IC );_cadg .SetIfNotNil ("\u0042\u0045",_beb .BE );
_cadg .SetIfNotNil ("\u0049\u0054",_beb .IT );_cadg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_beb .Measure );return _ecf ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_fbfed *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cddggg :=NewPdfOutlineItem ();_cddggg .Title =_db .MakeEncodedString (_fbfed .Title ,true );_cddggg .Dest =_fbfed .Dest .ToPdfObject ();var _gcda []*PdfOutlineItem ;var _bcaef int64 ;
var _ecba *PdfOutlineItem ;for _ ,_caacc :=range _fbfed .Entries {_ggacg ,_beae :=_caacc .ToPdfOutlineItem ();_ggacg .Parent =&_cddggg .PdfOutlineTreeNode ;if _ecba !=nil {_ecba .Next =&_ggacg .PdfOutlineTreeNode ;_ggacg .Prev =&_ecba .PdfOutlineTreeNode ;
};_gcda =append (_gcda ,_ggacg );_bcaef +=_beae ;_ecba =_ggacg ;};_eedc :=len (_gcda );_bcaef +=int64 (_eedc );if _eedc > 0{_cddggg .First =&_gcda [0].PdfOutlineTreeNode ;_cddggg .Last =&_gcda [_eedc -1].PdfOutlineTreeNode ;_cddggg .Count =&_bcaef ;};return _cddggg ,_bcaef ;
};func _afaf (_bgbbd *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bgbbd }};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cddfe *PdfReader )GetEncryptionMethod ()string {_feabc :=_cddfe ._ceaabg .GetCrypter ();return _feabc .String ();};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// Write writes out the PDF.
func (_ddgdee *PdfWriter )Write (writer _dg .Writer )error {_gd .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_cbefd :=_def .GetLicenseKey ();if (_cbefd ==nil ||!_cbefd .IsLicensed ())&&!_afceae {_g .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_g .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _f .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _ddgdee ._acdad !=nil {_gd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_ddgdee ._acdad );
_fcafg :=_ddgdee ._acdad .ToPdfObject ();_gd .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fcafg ,_fcafg ,_fcafg );_ddgdee ._egdad .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fcafg );
_ccdgb :=_ddgdee .addObjects (_fcafg );if _ccdgb !=nil {return _ccdgb ;};};if _ddgdee ._dcfce !=nil {_gd .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_abbaf :=_ddgdee ._dcfce .ToPdfObject ();_gd .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_abbaf );
_ddgdee ._egdad .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_abbaf );_gdddf :=_ddgdee .addObjects (_abbaf );if _gdddf !=nil {return _gdddf ;};};for _eaae ,_abddf :=range _ddgdee ._ccda {if !_ddgdee .hasObject (_eaae ){_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_eaae ,_eaae ,_eaae );
for _ ,_ggbcd :=range _abddf {for _ ,_ggacag :=range _ggbcd .Keys (){_egdbc :=_ggbcd .Get (_ggacag );if _egdbc ==_eaae {_gd .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_ggbcd .Set (_ggacag ,_db .MakeNull ());break ;};};};};};_ddgdee ._egdad .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_db .MakeName (_g .Sprintf ("\u0025\u0064\u002e%\u0064",_ddgdee ._gaggf ,_ddgdee ._egfcf )));_ddgdee .copyObjects ();if _ddgdee ._ebaec !=nil {var _dgdfa error ;
_ddgdee ._fadge ,_dgdfa =_ddgdee ._ebaec .Optimize (_ddgdee ._fadge );if _dgdfa !=nil {return _dgdfa ;};_bfbgd :=make (map[_db .PdfObject ]struct{},len (_ddgdee ._fadge ));for _ ,_gbcc :=range _ddgdee ._fadge {_bfbgd [_gbcc ]=struct{}{};};_ddgdee ._fdef =_bfbgd ;
};_ddgdee ._eacdc =_ddgdee ._adeef ;_ddgdee ._decf =_c .NewWriter (writer );_gedeg :=_ddgdee ._gaggf > 1||(_ddgdee ._gaggf ==1&&_ddgdee ._egfcf > 4);if _ddgdee ._edcdg !=nil {_gedeg =*_ddgdee ._edcdg ;};_eeaec :=make (map[_db .PdfObject ]bool );for _ ,_gdbbb :=range _ddgdee ._fadge {if _agcf ,_bbfaff :=_gdbbb .(*_db .PdfObjectStreams );
_bbfaff {_gedeg =true ;for _ ,_fegdb :=range _agcf .Elements (){_eeaec [_fegdb ]=true ;if _dgbbc ,_ccbfe :=_fegdb .(*_db .PdfIndirectObject );_ccbfe {_eeaec [_dgbbc .PdfObject ]=true ;};};};};if _gedeg &&_ddgdee ._gaggf ==1&&_ddgdee ._egfcf < 5{_ddgdee ._egfcf =5;
};if _ddgdee ._gcabf {_ddgdee .writeString ("\u000a");}else {_ddgdee .writeString (_g .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_ddgdee ._gaggf ,_ddgdee ._egfcf ));_ddgdee .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_ddgdee .updateObjectNumbers ();_gd .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_ddgdee ._fadge ));_ddgdee ._bccag =make (map[int ]crossReference );_ddgdee ._bccag [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _ddgdee ._cbedb .ObjectMap !=nil {for _fdeeca ,_gbfgf :=range _ddgdee ._cbedb .ObjectMap {if _fdeeca ==0{continue ;};if _gbfgf .XType ==_db .XrefTypeObjectStream {_cbbba :=crossReference {Type :2,ObjectNumber :_gbfgf .OsObjNumber ,Index :_gbfgf .OsObjIndex };
_ddgdee ._bccag [_fdeeca ]=_cbbba ;};if _gbfgf .XType ==_db .XrefTypeTableEntry {_facfg :=crossReference {Type :1,ObjectNumber :_gbfgf .ObjectNumber ,Offset :_gbfgf .Offset };_ddgdee ._bccag [_fdeeca ]=_facfg ;};};};for _ ,_bdfdd :=range _ddgdee ._fadge {if _cgdgd :=_eeaec [_bdfdd ];
_cgdgd {continue ;};_ccgeaa :=int64 (0);switch _dcdfcd :=_bdfdd .(type ){case *_db .PdfIndirectObject :_ccgeaa =_dcdfcd .ObjectNumber ;case *_db .PdfObjectStream :_ccgeaa =_dcdfcd .ObjectNumber ;case *_db .PdfObjectStreams :_ccgeaa =_dcdfcd .ObjectNumber ;
default:_gd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_bdfdd );
return ErrTypeCheck ;};if _ddgdee ._bgfgc !=nil &&_bdfdd !=_ddgdee ._bbaea {_gafga :=_ddgdee ._bgfgc .Encrypt (_bdfdd ,_ccgeaa ,0);if _gafga !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gafga );
return _gafga ;};};_ddgdee .writeObject (int (_ccgeaa ),_bdfdd );};_eeadfe :=_ddgdee ._eacdc ;var _gcefe int ;for _dgbfd :=range _ddgdee ._bccag {if _dgbfd > _gcefe {_gcefe =_dgbfd ;};};if _gedeg {_bcfga :=_gcefe +1;_ddgdee ._bccag [_bcfga ]=crossReference {Type :1,ObjectNumber :_bcfga ,Offset :_eeadfe };
_faeb :=_cfg .NewBuffer (nil );_bbeb :=_db .MakeArray ();for _cdfed :=0;_cdfed <=_gcefe ;{for ;_cdfed <=_gcefe ;_cdfed ++{_feacf ,_gagfb :=_ddgdee ._bccag [_cdfed ];if _gagfb &&(!_ddgdee ._gcabf ||_ddgdee ._gcabf &&(_feacf .Type ==1&&_feacf .Offset >=_ddgdee ._aebd ||_feacf .Type ==0)){break ;
};};var _efcbc int ;for _efcbc =_cdfed +1;_efcbc <=_gcefe ;_efcbc ++{_bfbbc ,_cfdfe :=_ddgdee ._bccag [_efcbc ];if _cfdfe &&(!_ddgdee ._gcabf ||_ddgdee ._gcabf &&(_bfbbc .Type ==1&&_bfbbc .Offset > _ddgdee ._aebd )){continue ;};break ;};_bbeb .Append (_db .MakeInteger (int64 (_cdfed )),_db .MakeInteger (int64 (_efcbc -_cdfed )));
for _cbcgg :=_cdfed ;_cbcgg < _efcbc ;_cbcgg ++{_cdbfaa :=_ddgdee ._bccag [_cbcgg ];switch _cdbfaa .Type {case 0:_cg .Write (_faeb ,_cg .BigEndian ,byte (0));_cg .Write (_faeb ,_cg .BigEndian ,uint32 (0));_cg .Write (_faeb ,_cg .BigEndian ,uint16 (0xFFFF));
case 1:_cg .Write (_faeb ,_cg .BigEndian ,byte (1));_cg .Write (_faeb ,_cg .BigEndian ,uint32 (_cdbfaa .Offset ));_cg .Write (_faeb ,_cg .BigEndian ,uint16 (_cdbfaa .Generation ));case 2:_cg .Write (_faeb ,_cg .BigEndian ,byte (2));_cg .Write (_faeb ,_cg .BigEndian ,uint32 (_cdbfaa .ObjectNumber ));
_cg .Write (_faeb ,_cg .BigEndian ,uint16 (_cdbfaa .Index ));};};_cdfed =_efcbc +1;};_adbaa ,_bdfdbe :=_db .MakeStream (_faeb .Bytes (),_db .NewFlateEncoder ());if _bdfdbe !=nil {return _bdfdbe ;};_adbaa .ObjectNumber =int64 (_bcfga );_adbaa .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0058\u0052\u0065\u0066"));
_adbaa .PdfObjectDictionary .Set ("\u0057",_db .MakeArray (_db .MakeInteger (1),_db .MakeInteger (4),_db .MakeInteger (2)));_adbaa .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bbeb );_adbaa .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_db .MakeInteger (int64 (_bcfga +1)));
_adbaa .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_ddgdee ._dggb );_adbaa .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_ddgdee ._efeda );if _ddgdee ._gcabf &&_ddgdee ._ggef > 0{_adbaa .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_db .MakeInteger (_ddgdee ._ggef ));
};if _ddgdee ._bgfgc !=nil {_adbaa .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ddgdee ._bbaea );_adbaa .Set ("\u0049\u0044",_ddgdee ._eecdf );_gd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ddgdee ._eecdf );};_ddgdee .writeObject (int (_adbaa .ObjectNumber ),_adbaa );
}else {_ddgdee .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _ebfa :=0;_ebfa <=_gcefe ;{for ;_ebfa <=_gcefe ;_ebfa ++{_bageb ,_dgafc :=_ddgdee ._bccag [_ebfa ];if _dgafc &&(!_ddgdee ._gcabf ||_ddgdee ._gcabf &&(_bageb .Type ==1&&_bageb .Offset >=_ddgdee ._aebd ||_bageb .Type ==0)){break ;
};};var _cafgd int ;for _cafgd =_ebfa +1;_cafgd <=_gcefe ;_cafgd ++{_bffcg ,_gaeff :=_ddgdee ._bccag [_cafgd ];if _gaeff &&(!_ddgdee ._gcabf ||_ddgdee ._gcabf &&(_bffcg .Type ==1&&_bffcg .Offset > _ddgdee ._aebd )){continue ;};break ;};_bffg :=_g .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ebfa ,_cafgd -_ebfa );
_ddgdee .writeString (_bffg );for _afedc :=_ebfa ;_afedc < _cafgd ;_afedc ++{_gaacc :=_ddgdee ._bccag [_afedc ];switch _gaacc .Type {case 0:_bffg =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_ddgdee .writeString (_bffg );
case 1:_bffg =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gaacc .Offset ,0);_ddgdee .writeString (_bffg );};};_ebfa =_cafgd +1;};_dfgec :=_db .MakeDict ();_dfgec .Set ("\u0049\u006e\u0066\u006f",_ddgdee ._dggb );
_dfgec .Set ("\u0052\u006f\u006f\u0074",_ddgdee ._efeda );_dfgec .Set ("\u0053\u0069\u007a\u0065",_db .MakeInteger (int64 (_gcefe +1)));if _ddgdee ._gcabf &&_ddgdee ._ggef > 0{_dfgec .Set ("\u0050\u0072\u0065\u0076",_db .MakeInteger (_ddgdee ._ggef ));
};if _ddgdee ._bgfgc !=nil {_dfgec .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ddgdee ._bbaea );_dfgec .Set ("\u0049\u0044",_ddgdee ._eecdf );_gd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ddgdee ._eecdf );};_ddgdee .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");
_ddgdee .writeString (_dfgec .WriteString ());_ddgdee .writeString ("\u000a");};_bgefg :=_g .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_eeadfe );_ddgdee .writeString (_bgefg );_ddgdee .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
if _ddgdee ._aedbc ==nil {_ddgdee ._aedbc =_ddgdee ._decf .Flush ();};return _ddgdee ._aedbc ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ecbee *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// GetSubFilter returns SubFilter value or empty string.
func (_bcgbc *pdfSignDictionary )GetSubFilter ()string {_fceeb :=_bcgbc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _fceeb ==nil {return "";};if _gadfd ,_babgc :=_db .GetNameVal (_fceeb );_babgc {return _gadfd ;};return "";};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cgcaa *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cgcaa ._bffbe .(*PdfShadingPattern );};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func _ccedg (_adagec *_db .PdfObjectDictionary )(*PdfShadingPattern ,error ){_fcdd :=&PdfShadingPattern {};_ddcb :=_adagec .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _ddcb ==nil {_gd .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggca ,_effaaf :=_eeea (_ddcb );if _effaaf !=nil {_gd .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_effaaf );return nil ,_effaaf ;
};_fcdd .Shading =_ggca ;if _agafe :=_adagec .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_agafe !=nil {_bgfe ,_dgbac :=_agafe .(*_db .PdfObjectArray );if !_dgbac {_gd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agafe );
return nil ,_db .ErrTypeError ;};_fcdd .Matrix =_bgfe ;};if _ecac :=_adagec .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ecac !=nil {_fcdd .ExtGState =_ecac ;};return _fcdd ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_eceg PdfDate )ToGoTime ()_cb .Time {_ddecf :=int (_eceg ._gdgee *60*60+_eceg ._bfdgb *60);switch _eceg ._gdcdc {case '-':_ddecf =-_ddecf ;case 'Z':_ddecf =0;};_acaea :=_g .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_eceg ._gdcdc ,_eceg ._gdgee ,_eceg ._bfdgb );
_dabbe :=_cb .FixedZone (_acaea ,_ddecf );return _cb .Date (int (_eceg ._fcae ),_cb .Month (_eceg ._dcecg ),int (_eceg ._eggb ),int (_eceg ._accca ),int (_eceg ._aeac ),int (_eceg ._cabaa ),0,_dabbe );};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cd :=NewPdfAction ();_fab :=&PdfActionThread {};_fab .PdfAction =_cd ;_cd .SetContext (_fab );return _fab ;};

// Items returns all children outline items.
func (_dedb *Outline )Items ()[]*OutlineItem {return _dedb .Entries };

// Evaluate runs the function on the passed in slice and returns the results.
func (_bbdb *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_bbdb .NumInputs {_gd .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_f .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _bbdb ._dbgdd ==nil {_cffd :=_bbdb .processSamples ();if _cffd !=nil {return nil ,_cffd ;};};_cfdff :=_bbdb .Encode ;if _cfdff ==nil {_cfdff =[]float64 {};
for _gaaa :=0;_gaaa < len (_bbdb .Size );_gaaa ++{_cfdff =append (_cfdff ,0);_cfdff =append (_cfdff ,float64 (_bbdb .Size [_gaaa ]-1));};};_cfbgd :=_bbdb .Decode ;if _cfbgd ==nil {_cfbgd =_bbdb .Range ;};_dcdeba :=make ([]int ,len (x ));for _cfbae :=0;
_cfbae < len (x );_cfbae ++{_gggab :=x [_cfbae ];_fgggb :=_ae .Min (_ae .Max (_gggab ,_bbdb .Domain [2*_cfbae ]),_bbdb .Domain [2*_cfbae +1]);_gacfc :=_fg .LinearInterpolate (_fgggb ,_bbdb .Domain [2*_cfbae ],_bbdb .Domain [2*_cfbae +1],_cfdff [2*_cfbae ],_cfdff [2*_cfbae +1]);
_bgcdd :=_ae .Min (_ae .Max (_gacfc ,0),float64 (_bbdb .Size [_cfbae ]-1));_aadd :=int (_ae .Floor (_bgcdd +0.5));if _aadd < 0{_aadd =0;}else if _aadd > _bbdb .Size [_cfbae ]{_aadd =_bbdb .Size [_cfbae ]-1;};_dcdeba [_cfbae ]=_aadd ;};_fagba :=_dcdeba [0];
for _dfbefe :=1;_dfbefe < _bbdb .NumInputs ;_dfbefe ++{_fdac :=_dcdeba [_dfbefe ];for _abbeb :=0;_abbeb < _dfbefe ;_abbeb ++{_fdac *=_bbdb .Size [_abbeb ];};_fagba +=_fdac ;};_fagba *=_bbdb .NumOutputs ;var _gabgbg []float64 ;for _fffab :=0;_fffab < _bbdb .NumOutputs ;
_fffab ++{_bgbc :=_fagba +_fffab ;if _bgbc >=len (_bbdb ._dbgdd ){_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_afde :=_bbdb ._dbgdd [_bgbc ];_fbeff :=_fg .LinearInterpolate (float64 (_afde ),0,_ae .Pow (2,float64 (_bbdb .BitsPerSample )),_cfbgd [2*_fffab ],_cfbgd [2*_fffab +1]);_cbdce :=_ae .Min (_ae .Max (_fbeff ,_bbdb .Range [2*_fffab ]),_bbdb .Range [2*_fffab +1]);
_gabgbg =append (_gabgbg ,_cbdce );};return _gabgbg ,nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aegfb *PdfPageResources )GetColorspaceByName (keyName _db .PdfObjectName )(PdfColorspace ,bool ){_gcagd ,_dabaf :=_aegfb .GetColorspaces ();if _dabaf !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dabaf );
return nil ,false ;};if _gcagd ==nil {return nil ,false ;};_ccdca ,_ggfa :=_gcagd .Colorspaces [string (keyName )];if !_ggfa {return nil ,false ;};return _ccdca ,true ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_aebfd :map[_db .PdfObject ]struct{}{},_afdb :_bebc (),_ceaabg :_db .NewParserFromString (txt )};};func (_gcgc *LTV )getCRLs (_fdfgd []*_b .Certificate )([][]byte ,error ){_ecggc :=make ([][]byte ,0,len (_fdfgd ));
for _ ,_ggfde :=range _fdfgd {for _ ,_gceae :=range _ggfde .CRLDistributionPoints {if _gcgc .CertClient .IsCA (_ggfde ){continue ;};_ddecd ,_cgfa :=_gcgc .CRLClient .MakeRequest (_gceae ,_ggfde );if _cgfa !=nil {_gd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_cgfa );
continue ;};_ecggc =append (_ecggc ,_ddecd );};};return _ecggc ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _db .PdfObject ;Dest _db .PdfObject ;H _db .PdfObject ;PA _db .PdfObject ;QuadPoints _db .PdfObject ;BS _db .PdfObject ;_gcb *PdfAction ;_gbaf *PdfReader ;};func (_dgde *PdfReader )newPdfActionRenditionFromDict (_gac *_db .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gac .Get ("\u0052"),AN :_gac .Get ("\u0041\u004e"),OP :_gac .Get ("\u004f\u0050"),JS :_gac .Get ("\u004a\u0053")},nil ;
};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bedf *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gbgc ,_cfcge :=color .(*PdfColorCalGray );if !_cfcge {_gd .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gbgc .Val ();X :=_bedf .WhitePoint [0]*_ae .Pow (ANorm ,_bedf .Gamma );Y :=_bedf .WhitePoint [1]*_ae .Pow (ANorm ,_bedf .Gamma );Z :=_bedf .WhitePoint [2]*_ae .Pow (ANorm ,_bedf .Gamma );
_eefea :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ffdf :=-0.969256*X +1.875992*Y +0.041556*Z ;_bfdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_eefea =_ae .Min (_ae .Max (_eefea ,0),1.0);_ffdf =_ae .Min (_ae .Max (_ffdf ,0),1.0);_bfdb =_ae .Min (_ae .Max (_bfdb ,0),1.0);
return NewPdfColorDeviceRGB (_eefea ,_ffdf ,_bfdb ),nil ;};func (_cffb *PdfReader )newPdfAnnotationStampFromDict (_cabe *_db .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ddea :=PdfAnnotationStamp {};_fgcb ,_gdcg :=_cffb .newPdfAnnotationMarkupFromDict (_cabe );
if _gdcg !=nil {return nil ,_gdcg ;};_ddea .PdfAnnotationMarkup =_fgcb ;_ddea .Name =_cabe .Get ("\u004e\u0061\u006d\u0065");return &_ddea ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// ReplacePage replaces the original page to a new page.
func (_cabee *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_dcd :=pageNum -1;for _bed :=range _cabee ._afb {if _bed ==_dcd {_adad :=page .Duplicate ();_ccbeg (_adad );_cabee ._afb [_bed ]=_adad ;};};};func (_dccd *LTV )getOCSPs (_edgbb []*_b .Certificate ,_cceb map[string ]*_b .Certificate )([][]byte ,error ){_gdad :=make ([][]byte ,0,len (_edgbb ));
for _ ,_cbebg :=range _edgbb {for _ ,_gagca :=range _cbebg .OCSPServer {if _dccd .CertClient .IsCA (_cbebg ){continue ;};_fffaf ,_gegc :=_cceb [_cbebg .Issuer .CommonName ];if !_gegc {_gd .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_ddgad ,_gfdab :=_dccd .OCSPClient .MakeRequest (_gagca ,_cbebg ,_fffaf );if _gfdab !=nil {_gd .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_gfdab );
continue ;};_gdad =append (_gdad ,_ddgad );};};return _gdad ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_facf *PdfReader )Inspect ()(map[string ]int ,error ){return _facf ._ceaabg .Inspect ()};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_aadgd *PdfPageResources )GetExtGState (keyName _db .PdfObjectName )(_db .PdfObject ,bool ){if _aadgd .ExtGState ==nil {return nil ,false ;};_eeeeb ,_egfga :=_db .TraceToDirectObject (_aadgd .ExtGState ).(*_db .PdfObjectDictionary );if !_egfga {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aadgd .ExtGState );
return nil ,false ;};if _afecb :=_eeeeb .Get (keyName );_afecb !=nil {return _afecb ,true ;};return nil ,false ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fdeec *PdfOutlineTreeNode )GetContainingPdfObject ()_db .PdfObject {return _fdeec .GetContext ().GetContainingPdfObject ();};func (_bdd *PdfReader )newPdfActionImportDataFromDict (_gfcb *_db .PdfObjectDictionary )(*PdfActionImportData ,error ){_cdf ,_ecab :=_ebae (_gfcb .Get ("\u0046"));
if _ecab !=nil {return nil ,_ecab ;};return &PdfActionImportData {F :_cdf },nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _db .PdfObject ;AN _db .PdfObject ;OP _db .PdfObject ;JS _db .PdfObject ;};func (_eggc *Image )samplesTrimPadding (_eaeff []uint32 )[]uint32 {_dabgae :=_eggc .ColorComponents *int (_eggc .Width )*int (_eggc .Height );
if len (_eaeff )==_dabgae {return _eaeff ;};_bdcfa :=make ([]uint32 ,_dabgae );_fgdbda :=int (_eggc .Width )*_eggc .ColorComponents ;var _caab ,_edbcf ,_fdfee ,_ecccg int ;_gega :=_fg .BytesPerLine (int (_eggc .Width ),int (_eggc .BitsPerComponent ),_eggc .ColorComponents );
for _caab =0;_caab < int (_eggc .Height );_caab ++{_edbcf =_caab *int (_eggc .Width );_fdfee =_caab *_gega ;for _ecccg =0;_ecccg < _fgdbda ;_ecccg ++{_bdcfa [_edbcf +_ecccg ]=_eaeff [_fdfee +_ecccg ];};};return _bdcfa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgbeg *PdfShadingType3 )ToPdfObject ()_db .PdfObject {_fgbeg .PdfShading .ToPdfObject ();_dbbe ,_eaab :=_fgbeg .getShadingDict ();if _eaab !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fgbeg .Coords !=nil {_dbbe .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fgbeg .Coords );};if _fgbeg .Domain !=nil {_dbbe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgbeg .Domain );};if _fgbeg .Function !=nil {if len (_fgbeg .Function )==1{_dbbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgbeg .Function [0].ToPdfObject ());
}else {_cbfcg :=_db .MakeArray ();for _ ,_fffbg :=range _fgbeg .Function {_cbfcg .Append (_fffbg .ToPdfObject ());};_dbbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbfcg );};};if _fgbeg .Extend !=nil {_dbbe .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fgbeg .Extend );
};return _fgbeg ._eccbgb ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dbba *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gb :=NewPdfAction ();_ba :=&PdfActionGoToR {};_ba .PdfAction =_gb ;_gb .SetContext (_ba );return _ba ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_ddfdc *PdfFont )CharcodesToUnicode (charcodes []_fa .CharCode )[]rune {_cecbe ,_ ,_ :=_ddfdc .CharcodesToUnicodeWithStats (charcodes );return _cecbe ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_dagf *PdfPattern )GetContainingPdfObject ()_db .PdfObject {return _dagf ._afae };

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _db .PdfObject ;};func (_eagf *LTV )validateSig (_fddda *PdfSignature )error {if _fddda ==nil ||_fddda .Contents ==nil ||len (_fddda .Contents .Bytes ())==0{return _g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fddda );
};return nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fcce *PdfWriter )SetPageLabels (pageLabels _db .PdfObject )error {if pageLabels ==nil {return nil ;};_gd .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_fcce ._egdad .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fcce .addObjects (pageLabels );};func (_bebdb *PdfFont )baseFields ()*fontCommon {if _bebdb ._fdcca ==nil {_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _bebdb ._fdcca .baseFields ();};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bebd *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_gd .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_gd .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_gd .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_gd .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_ddee ,_adeg :=_fg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ededa ,img ._ffga );if _adeg !=nil {return Image {},_adeg ;};_dcdg ,_adeg :=_fg .NRGBAConverter .Convert (_ddee );if _adeg !=nil {return Image {},_adeg ;
};return _efdbf (_dcdg .Base ()),nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_acg .StdFontName ;

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_db .PdfObjectInteger ;BitsPerComponent *_db .PdfObjectInteger ;BitsPerFlag *_db .PdfObjectInteger ;Decode *_db .PdfObjectArray ;Function []PdfFunction ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ga .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ga .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ga .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ceeda *PdfAppender ;_ebaef *DSS ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_gcbd *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gabe ,_gbdeb :=_db .GetNumbersAsFloat (objects );
if _gbdeb !=nil {return nil ,_gbdeb ;};return _gcbd .ColorFromFloats (_gabe );};func (_cagfb *PdfReader )newPdfPageFromDict (_gafcd *_db .PdfObjectDictionary )(*PdfPage ,error ){_aaddb :=NewPdfPage ();_aaddb ._bgbaf =_gafcd ;_feaca :=*_gafcd ;_adaga ,_defbeg :=_feaca .Get ("\u0054\u0079\u0070\u0065").(*_db .PdfObjectName );
if !_defbeg {return nil ,_f .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_adaga !="\u0050\u0061\u0067\u0065"{return nil ,_f .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _fdeda :=_feaca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_fdeda !=nil {_aaddb .Parent =_fdeda ;};if _dfcgc :=_feaca .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_dfcgc !=nil {_becg ,_beff :=_db .GetString (_dfcgc );
if !_beff {return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_edfdc ,_acecgf :=NewPdfDate (_becg .Str ());
if _acecgf !=nil {return nil ,_acecgf ;};_aaddb .LastModified =&_edfdc ;};if _ggcbg :=_feaca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggcbg !=nil &&!_db .IsNullObject (_ggcbg ){_edeeb ,_eaecc :=_db .GetDict (_ggcbg );if !_eaecc {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ggcbg );
};var _eebgg error ;_aaddb .Resources ,_eebgg =NewPdfPageResourcesFromDict (_edeeb );if _eebgg !=nil {return nil ,_eebgg ;};}else {_feaf ,_agdga :=_aaddb .getParentResources ();if _agdga !=nil {return nil ,_agdga ;};if _feaf ==nil {_feaf =NewPdfPageResources ();
};_aaddb .Resources =_feaf ;};if _cggf :=_feaca .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_cggf !=nil {_fcbed ,_cebfg :=_db .GetArray (_cggf );if !_cebfg {return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _eecbe error ;_aaddb .MediaBox ,_eecbe =NewPdfRectangle (*_fcbed );if _eecbe !=nil {return nil ,_eecbe ;};};if _acac :=_feaca .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_acac !=nil {_debge ,_dfgb :=_db .GetArray (_acac );if !_dfgb {return nil ,_f .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _aafa error ;_aaddb .CropBox ,_aafa =NewPdfRectangle (*_debge );if _aafa !=nil {return nil ,_aafa ;};};if _cdec :=_feaca .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cdec !=nil {_deaea ,_bcgac :=_db .GetArray (_cdec );if !_bcgac {return nil ,_f .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _cdggb error ;_aaddb .BleedBox ,_cdggb =NewPdfRectangle (*_deaea );if _cdggb !=nil {return nil ,_cdggb ;};};if _aebbf :=_feaca .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_aebbf !=nil {_debgd ,_fdeaa :=_db .GetArray (_aebbf );if !_fdeaa {return nil ,_f .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ecddc error ;_aaddb .TrimBox ,_ecddc =NewPdfRectangle (*_debgd );if _ecddc !=nil {return nil ,_ecddc ;};};if _fdcbb :=_feaca .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_fdcbb !=nil {_febae ,_ggcbf :=_db .GetArray (_fdcbb );if !_ggcbf {return nil ,_f .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bgge error ;_aaddb .ArtBox ,_bgge =NewPdfRectangle (*_febae );if _bgge !=nil {return nil ,_bgge ;};};if _ccead :=_feaca .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_ccead !=nil {_aaddb .BoxColorInfo =_ccead ;};if _bebff :=_feaca .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_bebff !=nil {_aaddb .Contents =_bebff ;};if _dacde :=_feaca .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dacde !=nil {_aeeab ,_cbef :=_db .GetInt (_dacde );if !_cbef {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cgdad :=int64 (*_aeeab );_aaddb .Rotate =&_cgdad ;};if _ggddfe :=_feaca .Get ("\u0047\u0072\u006fu\u0070");_ggddfe !=nil {_aaddb .Group =_ggddfe ;};if _gefd :=_feaca .Get ("\u0054\u0068\u0075m\u0062");_gefd !=nil {_aaddb .Thumb =_gefd ;};if _gacfa :=_feaca .Get ("\u0042");
_gacfa !=nil {_aaddb .B =_gacfa ;};if _fagag :=_feaca .Get ("\u0044\u0075\u0072");_fagag !=nil {_aaddb .Dur =_fagag ;};if _faafe :=_feaca .Get ("\u0054\u0072\u0061n\u0073");_faafe !=nil {_aaddb .Trans =_faafe ;};if _aeaff :=_feaca .Get ("\u0041\u0041");
_aeaff !=nil {_aaddb .AA =_aeaff ;};if _dcbdg :=_feaca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dcbdg !=nil {_aaddb .Metadata =_dcbdg ;};if _abea :=_feaca .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_abea !=nil {_aaddb .PieceInfo =_abea ;
};if _fcdbe :=_feaca .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fcdbe !=nil {_aaddb .StructParents =_fcdbe ;};if _gebf :=_feaca .Get ("\u0049\u0044");_gebf !=nil {_aaddb .ID =_gebf ;};if _gcggb :=_feaca .Get ("\u0050\u005a");
_gcggb !=nil {_aaddb .PZ =_gcggb ;};if _bagf :=_feaca .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_bagf !=nil {_aaddb .SeparationInfo =_bagf ;};if _cgggg :=_feaca .Get ("\u0054\u0061\u0062\u0073");_cgggg !=nil {_aaddb .Tabs =_cgggg ;
};if _eebe :=_feaca .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_eebe !=nil {_aaddb .TemplateInstantiated =_eebe ;};if _egge :=_feaca .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_egge !=nil {_aaddb .PresSteps =_egge ;
};if _dafgc :=_feaca .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dafgc !=nil {_aaddb .UserUnit =_dafgc ;};if _acffe :=_feaca .Get ("\u0056\u0050");_acffe !=nil {_aaddb .VP =_acffe ;};if _eddca :=_feaca .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");
_eddca !=nil {_aaddb .Annots =_eddca ;};_aaddb ._eedb =_cagfb ;return _aaddb ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_fgdbf *PdfFont )GetCharMetrics (code _fa .CharCode )(CharMetrics ,bool ){var _cddgg _acg .CharMetrics ;switch _ecae :=_fgdbf ._fdcca .(type ){case *pdfFontSimple :if _ddcc ,_ffbb :=_ecae .GetCharMetrics (code );_ffbb {return _ddcc ,_ffbb ;};case *pdfFontType0 :if _gfcbbd ,_dfaa :=_ecae .GetCharMetrics (code );
_dfaa {return _gfcbbd ,_dfaa ;};case *pdfCIDFontType0 :if _egggc ,_bdgbb :=_ecae .GetCharMetrics (code );_bdgbb {return _egggc ,_bdgbb ;};case *pdfCIDFontType2 :if _ffadb ,_dcea :=_ecae .GetCharMetrics (code );_dcea {return _ffadb ,_dcea ;};case *pdfFontType3 :if _cdaaf ,_gfgdc :=_ecae .GetCharMetrics (code );
_gfgdc {return _cdaaf ,_gfgdc ;};default:_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_fgdbf ._fdcca );
return _cddgg ,false ;};if _dgfe ,_bace :=_fgdbf .GetFontDescriptor ();_bace ==nil &&_dgfe !=nil {return _acg .CharMetrics {Wx :_dgfe ._cedf },true ;};_gd .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_fgdbf );
return _cddgg ,false ;};

// SetVersion sets the PDF version of the output file.
func (_fceeba *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fceeba ._gaggf =majorVersion ;_fceeba ._egfcf =minorVersion ;};

// Encoder returns the font's text encoder.
func (_bddg pdfCIDFontType0 )Encoder ()_fa .TextEncoder {return _bddg ._edgc };

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_dcgeb *PdfWriter )SetOptimizer (optimizer Optimizer ){_dcgeb ._ebaec =optimizer };

// GetCharMetrics returns the char metrics for character code `code`.
func (_fbee pdfCIDFontType0 )GetCharMetrics (code _fa .CharCode )(_acg .CharMetrics ,bool ){_fcfd :=_fbee ._bgbde ;if _egaa ,_gdcc :=_fbee ._facb [code ];_gdcc {_fcfd =_egaa ;};return _acg .CharMetrics {Wx :_fcfd },true ;};func _dgbc (_badgg *_db .PdfObjectDictionary ,_fcfda *fontCommon )(*pdfCIDFontType0 ,error ){if _fcfda ._cdbfb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_gd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fcfda );
return nil ,_db .ErrRangeError ;};_ccddc :=_addg (_fcfda );_ffade ,_abdfa :=_db .GetDict (_badgg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_abdfa {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fcfda );
return nil ,ErrRequiredAttributeMissing ;};_ccddc .CIDSystemInfo =_ffade ;_ccddc .DW =_badgg .Get ("\u0044\u0057");_ccddc .W =_badgg .Get ("\u0057");_ccddc .DW2 =_badgg .Get ("\u0044\u0057\u0032");_ccddc .W2 =_badgg .Get ("\u0057\u0032");_ccddc ._bgbde =1000.0;
if _abgg ,_gaad :=_db .GetNumberAsFloat (_ccddc .DW );_gaad ==nil {_ccddc ._bgbde =_abgg ;};_edbdc ,_ebaca :=_cefae (_ccddc .W );if _ebaca !=nil {return nil ,_ebaca ;};if _edbdc ==nil {_edbdc =map[_fa .CharCode ]float64 {};};_ccddc ._facb =_edbdc ;return _ccddc ,nil ;
};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_eaadb *PdfOutlineItem )GetContainingPdfObject ()_db .PdfObject {return _eaadb ._afecf };

// SetContext set the sub annotation (context).
func (_feeed *PdfShading )SetContext (ctx PdfModel ){_feeed ._facee =ctx };

// ValidateSignatures validates digital signatures in the document.
func (_ggdfg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ggdfg .AcroForm ==nil {return nil ,nil ;};if _ggdfg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gdadf *PdfSignature ;
_fbdbd *PdfField ;_egbba SignatureHandler ;};var _ccegf []*sigFieldPair ;for _ ,_dgedf :=range _ggdfg .AcroForm .AllFields (){if _dgedf .V ==nil {continue ;};if _eebgf ,_acbc :=_db .GetDict (_dgedf .V );_acbc {if _gaagc ,_bfbad :=_db .GetNameVal (_eebgf .Get ("\u0054\u0079\u0070\u0065"));
_bfbad &&_gaagc =="\u0053\u0069\u0067"{_cbeg ,_bgdad :=_db .GetIndirect (_dgedf .V );if !_bgdad {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_eceae ,_agcde :=_ggdfg .newPdfSignatureFromIndirect (_cbeg );if _agcde !=nil {return nil ,_agcde ;};var _bbfbeg SignatureHandler ;for _ ,_dacaf :=range handlers {if _dacaf .IsApplicable (_eceae ){_bbfbeg =_dacaf ;break ;};};
_ccegf =append (_ccegf ,&sigFieldPair {_gdadf :_eceae ,_fbdbd :_dgedf ,_egbba :_bbfbeg });};};};var _bacbg []SignatureValidationResult ;for _ ,_afcad :=range _ccegf {_cggggb :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_afcad ._fbdbd }};
if _afcad ._egbba ==nil {_cggggb .Errors =append (_cggggb .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_bacbg =append (_bacbg ,_cggggb );continue ;};_aegd ,_bdbce :=_afcad ._egbba .NewDigest (_afcad ._gdadf );
if _bdbce !=nil {_cggggb .Errors =append (_cggggb .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_bdbce .Error ());_bacbg =append (_bacbg ,_cggggb );continue ;};_ffdec :=_afcad ._gdadf .ByteRange ;if _ffdec ==nil {_cggggb .Errors =append (_cggggb .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_bacbg =append (_bacbg ,_cggggb );continue ;};for _adcdg :=0;_adcdg < _ffdec .Len ();_adcdg =_adcdg +2{_bcegf ,_ :=_db .GetNumberAsInt64 (_ffdec .Get (_adcdg ));_fgfge ,_ :=_db .GetIntVal (_ffdec .Get (_adcdg +1));if _ ,_gcaae :=_ggdfg ._dbfcgb .Seek (_bcegf ,_dg .SeekStart );
_gcaae !=nil {return nil ,_gcaae ;};_fbfb :=make ([]byte ,_fgfge );if _ ,_dddec :=_ggdfg ._dbfcgb .Read (_fbfb );_dddec !=nil {return nil ,_dddec ;};_aegd .Write (_fbfb );};_gefb ,_bdbce :=_afcad ._egbba .Validate (_afcad ._gdadf ,_aegd );if _bdbce !=nil {return nil ,_bdbce ;
};_gefb .Name =_afcad ._gdadf .Name .Decoded ();_gefb .Reason =_afcad ._gdadf .Reason .Decoded ();if _afcad ._gdadf .M !=nil {_ebgb ,_gcfbdb :=NewPdfDate (_afcad ._gdadf .M .String ());if _gcfbdb !=nil {_gefb .Errors =append (_gefb .Errors ,_gcfbdb .Error ());
continue ;};_gefb .Date =_ebgb ;};_gefb .ContactInfo =_afcad ._gdadf .ContactInfo .Decoded ();_gefb .Location =_afcad ._gdadf .Location .Decoded ();_gefb .Fields =_cggggb .Fields ;_bacbg =append (_bacbg ,_gefb );};return _bacbg ,nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_dbcaf :=&PdfBorderStyle {};return _dbcaf };

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_baebc :=&PdfColorspaceLab {};_baebc .BlackPoint =[]float64 {0.0,0.0,0.0};_baebc .Range =[]float64 {-100,100,-100,100};return _baebc ;};

// GetBorderWidth returns the border style's width.
func (_afdd *PdfBorderStyle )GetBorderWidth ()float64 {if _afdd .W ==nil {return 1;};return *_afdd .W ;};

// ToPdfObject implements interface PdfModel.
func (_gbba *PdfAnnotationProjection )ToPdfObject ()_db .PdfObject {_gbba .PdfAnnotation .ToPdfObject ();_ggg :=_gbba ._addd ;_cec :=_ggg .PdfObject .(*_db .PdfObjectDictionary );_gbba .PdfAnnotationMarkup .appendToPdfDictionary (_cec );return _ggg ;};
func (_aeeb *PdfReader )traverseObjectData (_gdebb _db .PdfObject )error {return _db .ResolveReferencesDeep (_gdebb ,_aeeb ._aebfd );};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_cfec _dg .ReadSeeker ;_bebf *_db .PdfParser ;_effb *PdfReader ;Reader *PdfReader ;_afb []*PdfPage ;_edce *PdfAcroForm ;_dgaab *DSS ;_ddeae _db .XrefTable ;_bbfdf int64 ;_bge int ;_bbg []_db .PdfObject ;_bbfdg map[_db .PdfObject ]struct{};
_dage map[_db .PdfObject ]int64 ;_gbgd map[_db .PdfObject ]struct{};_ggcbe map[_db .PdfObject ]struct{};_ggdg int64 ;_acga bool ;};

// Add appends a top level outline item to the outline.
func (_gfba *Outline )Add (item *OutlineItem ){_gfba .Entries =append (_gfba .Entries ,item )};

// ToPdfObject implements interface PdfModel.
func (_gge *PdfActionThread )ToPdfObject ()_db .PdfObject {_gge .PdfAction .ToPdfObject ();_effc :=_gge ._bcc ;_eec :=_effc .PdfObject .(*_db .PdfObjectDictionary );_eec .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeThread )));if _gge .F !=nil {_eec .Set ("\u0046",_gge .F .ToPdfObject ());
};_eec .SetIfNotNil ("\u0044",_gge .D );_eec .SetIfNotNil ("\u0042",_gge .B );return _effc ;};

// Register registers (caches) a model to primitive object relationship.
func (_gbbbdd *modelManager )Register (primitive _db .PdfObject ,model PdfModel ){_gbbbdd ._fgggc [model ]=primitive ;_gbbbdd ._gffaa [primitive ]=model ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dffb *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// Encrypt encrypts the output file with a specified user/owner password.
func (_bgace *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_ecede :=RC4_128bit ;if options !=nil {_ecede =options .Algorithm ;};_gdacd :=_gda .PermOwner ;if options !=nil {_gdacd =options .Permissions ;};var _efdce _dfa .Filter ;
switch _ecede {case RC4_128bit :_efdce =_dfa .NewFilterV2 (16);case AES_128bit :_efdce =_dfa .NewFilterAESV2 ();case AES_256bit :_efdce =_dfa .NewFilterAESV3 ();default:return _g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_ceedce ,_fcfb ,_gaeeb :=_db .PdfCryptNewEncrypt (_efdce ,userPass ,ownerPass ,_gdacd );if _gaeeb !=nil {return _gaeeb ;};_bgace ._bgfgc =_ceedce ;if _fcfb .Major !=0{_bgace .SetVersion (_fcfb .Major ,_fcfb .Minor );};_bgace ._eggbb =_fcfb .Encrypt ;
_bgace ._eecdf =_db .MakeArray (_db .MakeHexString (_fcfb .ID0 ),_db .MakeHexString (_fcfb .ID1 ));_bagab :=_db .MakeIndirectObject (_fcfb .Encrypt );_bgace ._bbaea =_bagab ;_bgace .addObject (_bagab );return nil ;};

// B returns the value of the B component of the color.
func (_gcbee *PdfColorCalRGB )B ()float64 {return _gcbee [1]};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dcbe pdfFontType0 )GetRuneMetrics (r rune )(_acg .CharMetrics ,bool ){if _dcbe .DescendantFont ==nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dcbe );
return _acg .CharMetrics {},false ;};return _dcbe .DescendantFont .GetRuneMetrics (r );};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_acae int ,_feabe *PdfPage )error ;

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_ceebg :=NewPdfAnnotation ();_dfbe :=&PdfAnnotationSquare {};_dfbe .PdfAnnotation =_ceebg ;_dfbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceebg .SetContext (_dfbe );return _dfbe ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_agaa *PdfReader )resolveReference (_gggf *_db .PdfObjectReference )(_db .PdfObject ,bool ,error ){_egcf ,_aagbe :=_agaa ._ceaabg .ObjCache [int (_gggf .ObjectNumber )];if !_aagbe {_gd .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gggf );
_aaec ,_bffcbc :=_agaa ._ceaabg .LookupByReference (*_gggf );if _bffcbc !=nil {return nil ,false ,_bffcbc ;};_agaa ._ceaabg .ObjCache [int (_gggf .ObjectNumber )]=_aaec ;return _aaec ,false ,nil ;};return _egcf ,true ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );
type fontCommon struct{_abeff string ;_cdbfb string ;_dfegd string ;_bffc _db .PdfObject ;_begaf *_dc .CMap ;_dfff *PdfFontDescriptor ;_gegf int64 ;};func (_gga *PdfReader )newPdfAnnotationInkFromDict (_bfc *_db .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_adg :=PdfAnnotationInk {};
_abeg ,_gebd :=_gga .newPdfAnnotationMarkupFromDict (_bfc );if _gebd !=nil {return nil ,_gebd ;};_adg .PdfAnnotationMarkup =_abeg ;_adg .InkList =_bfc .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_adg .BS =_bfc .Get ("\u0042\u0053");return &_adg ,nil ;
};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_ffbed *Image )ToGoImage ()(_ad .Image ,error ){_gd .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_adbdb ,_bcadg :=_fg .NewImage (int (_ffbed .Width ),int (_ffbed .Height ),int (_ffbed .BitsPerComponent ),_ffbed .ColorComponents ,_ffbed .Data ,_ffbed ._ededa ,_ffbed ._ffga );
if _bcadg !=nil {return nil ,_bcadg ;};return _adbdb ,nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _cb .Time ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_dgfbg :=&XObjectImage {};_dcbcf :=&_db .PdfObjectStream {};_dcbcf .PdfObjectDictionary =_db .MakeDict ();_dgfbg ._aebae =_dcbcf ;return _dgfbg ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_cdcd *XObjectForm )GetContainingPdfObject ()_db .PdfObject {return _cdcd ._abddd };

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_eggdg *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _eggdg .MediaBox !=nil {return _eggdg .MediaBox ,nil ;};_ccfe :=_eggdg .Parent ;for _ccfe !=nil {_bbde ,_gaggb :=_db .GetDict (_ccfe );if !_gaggb {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dcdgf :=_bbde .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dcdgf !=nil {_cddd ,_cefc :=_db .GetArray (_dcdgf );if !_cefc {return nil ,_f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_fbdbf ,_gfgfe :=NewPdfRectangle (*_cddd );if _gfgfe !=nil {return nil ,_gfgfe ;};return _fbdbf ,nil ;};_ccfe =_bbde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_f .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_adagd *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_adagd .ToPdfOutline ().PdfOutlineTreeNode ;};

// SetImage updates XObject Image with new image data.
func (_cbbga *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_cbbga .Filter .UpdateParams (img .GetParamsDict ());_bbfef ,_ebbae :=_cbbga .Filter .EncodeBytes (img .Data );if _ebbae !=nil {return _ebbae ;};_cbbga .Stream =_bbfef ;_dccea :=img .Width ;
_cbbga .Width =&_dccea ;_eagbb :=img .Height ;_cbbga .Height =&_eagbb ;_abbbec :=img .BitsPerComponent ;_cbbga .BitsPerComponent =&_abbbec ;if cs ==nil {if img .ColorComponents ==1{_cbbga .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_cbbga .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_cbbga .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _f .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cbbga .ColorSpace =cs ;};return nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_abfea *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgac :=vals [0];if _bgac < 0.0||_bgac > 100.0{_gd .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_bgac );
return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcfd :=vals [1];_dgdg :=float64 (-100);_ggbc :=float64 (100);if len (_abfea .Range )> 1{_dgdg =_abfea .Range [0];_ggbc =_abfea .Range [1];};if _dcfd < _dgdg ||_dcfd > _ggbc {_gd .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dcfd ,_dgdg ,_ggbc );
return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcee :=vals [2];_gbab :=float64 (-100);_ddcaa :=float64 (100);if len (_abfea .Range )> 3{_gbab =_abfea .Range [2];_ddcaa =_abfea .Range [3];};if _gcee < _gbab ||_gcee > _ddcaa {_gd .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gcee ,_gbab ,_ddcaa );
return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdee :=NewPdfColorLab (_bgac ,_dcfd ,_gcee );return _fdee ,nil ;};func (_eddb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_adcg *_db .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dagc :=PdfAnnotationPrinterMark {};
_dagc .MN =_adcg .Get ("\u004d\u004e");return &_dagc ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_befd *PdfColorspaceDeviceRGB )ToPdfObject ()_db .PdfObject {return _db .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_gfgd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func (_ffb *PdfAnnotation )String ()string {_fdfc :="";
_bgf ,_aab :=_ffb .ToPdfObject ().(*_db .PdfIndirectObject );if _aab {_fdfc =_g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ffb ._aeb ,_bgf .PdfObject .String ());};return _fdfc ;};func _abcg (_ffcga _db .PdfObject )(*PdfColorspaceCalGray ,error ){_dcgc :=NewPdfColorspaceCalGray ();
if _bcdbd ,_dfca :=_ffcga .(*_db .PdfIndirectObject );_dfca {_dcgc ._fcff =_bcdbd ;};_ffcga =_db .TraceToDirectObject (_ffcga );_adddf ,_bgdg :=_ffcga .(*_db .PdfObjectArray );if !_bgdg {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _adddf .Len ()!=2{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ffcga =_db .TraceToDirectObject (_adddf .Get (0));_ecabb ,_bgdg :=_ffcga .(*_db .PdfObjectName );
if !_bgdg {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ecabb !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_g .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_ffcga =_db .TraceToDirectObject (_adddf .Get (1));_gaed ,_bgdg :=_ffcga .(*_db .PdfObjectDictionary );if !_bgdg {return nil ,_g .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_ffcga =_gaed .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ffcga =_db .TraceToDirectObject (_ffcga );_ebgaf ,_bgdg :=_ffcga .(*_db .PdfObjectArray );if !_bgdg {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _ebgaf .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cege ,_fbdf :=_ebgaf .GetAsFloat64Slice ();
if _fbdf !=nil {return nil ,_fbdf ;};_dcgc .WhitePoint =_cege ;_ffcga =_gaed .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ffcga !=nil {_ffcga =_db .TraceToDirectObject (_ffcga );_eged ,_beg :=_ffcga .(*_db .PdfObjectArray );
if !_beg {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _eged .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_eaf ,_daga :=_eged .GetAsFloat64Slice ();if _daga !=nil {return nil ,_daga ;};_dcgc .BlackPoint =_eaf ;};_ffcga =_gaed .Get ("\u0047\u0061\u006dm\u0061");if _ffcga !=nil {_ffcga =_db .TraceToDirectObject (_ffcga );_ddfc ,_bdfg :=_db .GetNumberAsFloat (_ffcga );
if _bdfg !=nil {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_dcgc .Gamma =_ddfc ;};return _dcgc ,nil ;};func _ggbea (_dccg *_db .PdfObjectDictionary ,_fgdda *fontCommon )(*pdfFontType3 ,error ){_beade :=_ccbd (_fgdda );
_eeadd :=_dccg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eeadd ==nil {_eeadd =_db .MakeInteger (0);};_beade .FirstChar =_eeadd ;_befgd ,_deada :=_db .GetIntVal (_eeadd );if !_deada {_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eeadd );
return nil ,_db .ErrTypeError ;};_ggbb :=_fa .CharCode (_befgd );_eeadd =_dccg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eeadd ==nil {_eeadd =_db .MakeInteger (255);};_beade .LastChar =_eeadd ;_befgd ,_deada =_db .GetIntVal (_eeadd );
if !_deada {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eeadd );return nil ,_db .ErrTypeError ;
};_cabeg :=_fa .CharCode (_befgd );_eeadd =_dccg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _eeadd !=nil {_beade .Resources =_eeadd ;};_eeadd =_dccg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _eeadd ==nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_eeadd );
return nil ,_db .ErrNotSupported ;};_beade .CharProcs =_eeadd ;_eeadd =_dccg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _eeadd ==nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_eeadd );
return nil ,_db .ErrNotSupported ;};_beade .FontMatrix =_eeadd ;_beade ._dafce =make (map[_fa .CharCode ]float64 );_eeadd =_dccg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eeadd !=nil {_beade .Widths =_eeadd ;_dddef ,_dgddd :=_db .GetArray (_eeadd );
if !_dgddd {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eeadd );return nil ,_db .ErrTypeError ;
};_bfde ,_ceeed :=_dddef .ToFloat64Array ();if _ceeed !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ceeed ;};if len (_bfde )!=int (_cabeg -_ggbb +1){_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_cabeg -_ggbb +1,len (_bfde ));
return nil ,_db .ErrRangeError ;};_ebadd ,_dgddd :=_db .GetArray (_beade .FontMatrix );if !_dgddd {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ebadd );
return nil ,_ceeed ;};_afdf ,_ceeed :=_ebadd .ToFloat64Array ();if _ceeed !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ceeed ;};_feeb :=_ebg .NewMatrix (_afdf [0],_afdf [1],_afdf [2],_afdf [3],_afdf [4],_afdf [5]);for _ggag ,_eccga :=range _bfde {_dgcdf ,_ :=_feeb .Transform (_eccga ,_eccga );_beade ._dafce [_ggbb +_fa .CharCode (_ggag )]=_dgcdf ;};};_beade .Encoding =_db .TraceToDirectObject (_dccg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_dgad :=_dccg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dgad !=nil {_beade ._bffc =_db .TraceToDirectObject (_dgad );_afdgg ,_cfaa :=_eaga (_beade ._bffc ,&_beade .fontCommon );if _cfaa !=nil {return nil ,_cfaa ;};_beade ._begaf =_afdgg ;
};if _dcgfd :=_beade ._begaf ;_dcgfd !=nil {_beade ._dedg =_fa .NewCMapEncoder ("",nil ,_dcgfd );}else {_beade ._dedg =_fa .NewPdfDocEncoder ();};return _beade ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_bfdaa *Outline )ToPdfOutline ()*PdfOutline {_gcbgf :=NewPdfOutline ();var _fdggf []*PdfOutlineItem ;var _bebcd int64 ;var _aggag *PdfOutlineItem ;for _ ,_dfbde :=range _bfdaa .Entries {_ddac ,_fadga :=_dfbde .ToPdfOutlineItem ();_ddac .Parent =&_gcbgf .PdfOutlineTreeNode ;
if _aggag !=nil {_aggag .Next =&_ddac .PdfOutlineTreeNode ;_ddac .Prev =&_aggag .PdfOutlineTreeNode ;};_fdggf =append (_fdggf ,_ddac );_bebcd +=_fadga ;_aggag =_ddac ;};_bfgg :=int64 (len (_fdggf ));_bebcd +=_bfgg ;if _bfgg > 0{_gcbgf .First =&_fdggf [0].PdfOutlineTreeNode ;
_gcbgf .Last =&_fdggf [_bfgg -1].PdfOutlineTreeNode ;_gcbgf .Count =&_bebcd ;};return _gcbgf ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_aggge *PdfReader )loadStructure ()error {if _aggge ._ceaabg .GetCrypter ()!=nil &&!_aggge ._ceaabg .IsAuthenticated (){return _g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bbab :=_aggge ._ceaabg .GetTrailer ();if _bbab ==nil {return _g .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ceda ,_cdadb :=_bbab .Get ("\u0052\u006f\u006f\u0074").(*_db .PdfObjectReference );if !_cdadb {return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bbab );
};_cbeda ,_fcebf :=_aggge ._ceaabg .LookupByReference (*_ceda );if _fcebf !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fcebf );
return _fcebf ;};_dfce ,_cdadb :=_cbeda .(*_db .PdfIndirectObject );if !_cdadb {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cbeda ,*_bbab );
return _f .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gcbce ,_cdadb :=(*_dfce ).PdfObject .(*_db .PdfObjectDictionary );if !_cdadb {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dfce .PdfObject );
return _f .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gd .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gcbce );_abgaf ,_cdadb :=_gcbce .Get ("\u0050\u0061\u0067e\u0073").(*_db .PdfObjectReference );
if !_cdadb {return _f .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_ebaga ,_fcebf :=_aggge ._ceaabg .LookupByReference (*_abgaf );
if _fcebf !=nil {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _fcebf ;};_abdbad ,_cdadb :=_ebaga .(*_db .PdfIndirectObject );if !_cdadb {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_gd .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_abdbad );return _f .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dgbf ,_cdadb :=_abdbad .PdfObject .(*_db .PdfObjectDictionary );if !_cdadb {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_abdbad );
return _f .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fecgd ,_cdadb :=_db .GetInt (_dgbf .Get ("\u0043\u006f\u0075n\u0074"));if !_cdadb {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _f .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cdadb =_db .GetName (_dgbf .Get ("\u0054\u0079\u0070\u0065"));!_cdadb {_gd .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_dgbf .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0050\u0061\u0067e\u0073"));};if _bcfeg ,_dgccc :=_db .GetInt (_dgbf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_dgccc {_babdg :=int64 (*_bcfeg );_aggge .Rotate =&_babdg ;};_aggge ._efadc =_ceda ;
_aggge ._ebfee =_gcbce ;_aggge ._fadec =_dgbf ;_aggge ._cgfc =_abdbad ;_aggge ._befb =int (*_fecgd );_aggge ._aedae =[]*_db .PdfIndirectObject {};_baedf :=map[_db .PdfObject ]struct{}{};_fcebf =_aggge .buildPageList (_abdbad ,nil ,_baedf );if _fcebf !=nil {return _fcebf ;
};_gd .Log .Trace ("\u002d\u002d\u002d");_gd .Log .Trace ("\u0054\u004f\u0043");_gd .Log .Trace ("\u0050\u0061\u0067e\u0073");_gd .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_aggge ._aedae ),_aggge ._aedae );_aggge ._aafde ,_fcebf =_aggge .loadOutlines ();
if _fcebf !=nil {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_fcebf );
return _fcebf ;};_aggge .AcroForm ,_fcebf =_aggge .loadForms ();if _fcebf !=nil {return _fcebf ;};_aggge .DSS ,_fcebf =_aggge .loadDSS ();if _fcebf !=nil {return _fcebf ;};return nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bcgbf *LTV )EnableChain (chain []*_b .Certificate )error {return _bcgbf .enable (nil ,chain ,"")};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_fcc *PdfAnnotation )ToPdfObject ()_db .PdfObject {_aggf :=_fcc ._addd ;_febd :=_aggf .PdfObject .(*_db .PdfObjectDictionary );_febd .Clear ();_febd .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0041\u006e\u006eo\u0074"));_febd .SetIfNotNil ("\u0052\u0065\u0063\u0074",_fcc .Rect );
_febd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fcc .Contents );_febd .SetIfNotNil ("\u0050",_fcc .P );_febd .SetIfNotNil ("\u004e\u004d",_fcc .NM );_febd .SetIfNotNil ("\u004d",_fcc .M );_febd .SetIfNotNil ("\u0046",_fcc .F );_febd .SetIfNotNil ("\u0041\u0050",_fcc .AP );
_febd .SetIfNotNil ("\u0041\u0053",_fcc .AS );_febd .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_fcc .Border );_febd .SetIfNotNil ("\u0043",_fcc .C );_febd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fcc .StructParent );
_febd .SetIfNotNil ("\u004f\u0043",_fcc .OC );return _aggf ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_eefgd *PdfReader )GetTrailer ()(*_db .PdfObjectDictionary ,error ){_geab :=_eefgd ._ceaabg .GetTrailer ();if _geab ==nil {return nil ,_f .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _geab ,nil ;
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fdd :=NewPdfAction ();_bce :=&PdfActionMovie {};_bce .PdfAction =_fdd ;_fdd .SetContext (_bce );return _bce ;};func (_abb *PdfReader )newPdfAnnotationStrikeOut (_egb *_db .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_daeg :=PdfAnnotationStrikeOut {};
_efag ,_cdbf :=_abb .newPdfAnnotationMarkupFromDict (_egb );if _cdbf !=nil {return nil ,_cdbf ;};_daeg .PdfAnnotationMarkup =_efag ;_daeg .QuadPoints =_egb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_daeg ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_fgda *PdfPageResources )GetContainingPdfObject ()_db .PdfObject {return _fgda ._bffbb };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fggc *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdd :=vals [0];if _cdd < 0.0||_cdd > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fcca :=NewPdfColorCalGray (_cdd );return _fcca ,nil ;};func _ccbd (_cgfda *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_cgfda }};func (_eafbd *PdfSignature )extractChainFromCert ()([]*_b .Certificate ,error ){var _gfbbb *_db .PdfObjectArray ;
switch _ffaad :=_eafbd .Cert .(type ){case *_db .PdfObjectString :_gfbbb =_db .MakeArray (_ffaad );case *_db .PdfObjectArray :_gfbbb =_ffaad ;default:return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ffaad );
};var _eaffa _cfg .Buffer ;for _ ,_fdddd :=range _gfbbb .Elements (){_gcce ,_effgc :=_db .GetString (_fdddd );if !_effgc {return nil ,_g .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fdddd );
};if _ ,_gceaac :=_eaffa .Write (_gcce .Bytes ());_gceaac !=nil {return nil ,_gceaac ;};};return _b .ParseCertificates (_eaffa .Bytes ());};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_accea *PdfReader )GetPageLabels ()(_db .PdfObject ,error ){_egffc :=_db .ResolveReference (_accea ._ebfee .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _egffc ==nil {return nil ,nil ;};if !_accea ._cbfe {_aacb :=_accea .traverseObjectData (_egffc );
if _aacb !=nil {return nil ,_aacb ;};};return _egffc ,nil ;};

// C returns the value of the cyan component of the color.
func (_bced *PdfColorDeviceCMYK )C ()float64 {return _bced [0]};

// ToPdfObject implements interface PdfModel.
func (_gbbg *PdfAnnotationScreen )ToPdfObject ()_db .PdfObject {_gbbg .PdfAnnotation .ToPdfObject ();_fafg :=_gbbg ._addd ;_bfcd :=_fafg .PdfObject .(*_db .PdfObjectDictionary );_bfcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_bfcd .SetIfNotNil ("\u0054",_gbbg .T );_bfcd .SetIfNotNil ("\u004d\u004b",_gbbg .MK );_bfcd .SetIfNotNil ("\u0041",_gbbg .A );_bfcd .SetIfNotNil ("\u0041\u0041",_gbbg .AA );return _fafg ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_eada :=NewPdfAnnotation ();_bec :=&PdfAnnotationLink {};_bec .PdfAnnotation =_eada ;_eada .SetContext (_bec );return _bec ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_bcaa *PdfPattern )SetContext (ctx PdfModel ){_bcaa ._bffbe =ctx };

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_edbg .Lock ();defer _edbg .Unlock ();_aaead =subject };

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_aagbb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _aagbb .Range };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_fdgag *PdfPageResources )SetColorspaceByName (keyName _db .PdfObjectName ,cs PdfColorspace )error {_bccg ,_bgaee :=_fdgag .GetColorspaces ();if _bgaee !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bgaee );
return _bgaee ;};if _bccg ==nil {_bccg =NewPdfPageResourcesColorspaces ();_fdgag .SetColorSpace (_bccg );};_bccg .Set (keyName ,cs );return nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fbeg :_db .MakeIndirectObject (_db .MakeDict ())}};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eegc *PdfShadingType6 )ToPdfObject ()_db .PdfObject {_eegc .PdfShading .ToPdfObject ();_daag ,_deebba :=_eegc .getShadingDict ();if _deebba !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eegc .BitsPerCoordinate !=nil {_daag .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eegc .BitsPerCoordinate );};if _eegc .BitsPerComponent !=nil {_daag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eegc .BitsPerComponent );
};if _eegc .BitsPerFlag !=nil {_daag .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_eegc .BitsPerFlag );};if _eegc .Decode !=nil {_daag .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eegc .Decode );};if _eegc .Function !=nil {if len (_eegc .Function )==1{_daag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eegc .Function [0].ToPdfObject ());
}else {_cdbc :=_db .MakeArray ();for _ ,_gcbagc :=range _eegc .Function {_cdbc .Append (_gcbagc .ToPdfObject ());};_daag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdbc );};};return _eegc ._eccbgb ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_ccfeg *PdfReader )Decrypt (password []byte )(bool ,error ){_cafg ,_ccffa :=_ccfeg ._ceaabg .Decrypt (password );if _ccffa !=nil {return false ,_ccffa ;};if !_cafg {return false ,nil ;};_ccffa =_ccfeg .loadStructure ();if _ccffa !=nil {_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_ccffa );
return false ,_ccffa ;};return true ,nil ;};func (_ccbb *PdfAppender )addNewObject (_ebfg _db .PdfObject ){if _ ,_cbaeg :=_ccbb ._bbfdg [_ebfg ];!_cbaeg {_ccbb ._bbg =append (_ccbb ._bbg ,_ebfg );_ccbb ._bbfdg [_ebfg ]=struct{}{};};};func _bega (_bccd _db .PdfObject )(*PdfColorspaceDeviceN ,error ){_aged :=NewPdfColorspaceDeviceN ();
if _aagcgf ,_adcefd :=_bccd .(*_db .PdfIndirectObject );_adcefd {_aged ._gegg =_aagcgf ;};_bccd =_db .TraceToDirectObject (_bccd );_bbae ,_feae :=_bccd .(*_db .PdfObjectArray );if !_feae {return nil ,_g .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bbae .Len ()!=4&&_bbae .Len ()!=5{return nil ,_g .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_bccd =_bbae .Get (0);
_cecd ,_feae :=_bccd .(*_db .PdfObjectName );if !_feae {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cecd !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_g .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_bccd =_bbae .Get (1);
_bccd =_db .TraceToDirectObject (_bccd );_fegd ,_feae :=_bccd .(*_db .PdfObjectArray );if !_feae {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_aged .ColorantNames =_fegd ;_bccd =_bbae .Get (2);_bgfbb ,_edbc :=NewPdfColorspaceFromPdfObject (_bccd );if _edbc !=nil {return nil ,_edbc ;};_aged .AlternateSpace =_bgfbb ;_cgag ,_edbc :=_ccee (_bbae .Get (3));if _edbc !=nil {return nil ,_edbc ;};_aged .TintTransform =_cgag ;
if _bbae .Len ()==5{_fdab ,_eafe :=_gceef (_bbae .Get (4));if _eafe !=nil {return nil ,_eafe ;};_aged .Attributes =_fdab ;};return _aged ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_gfge :=NewPdfAnnotation ();_gaa :=&PdfAnnotationRichMedia {};_gaa .PdfAnnotation =_gfge ;_gfge .SetContext (_gaa );return _gaa ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_aagc :=NewPdfAnnotation ();_bgdd :=&PdfAnnotationFreeText {};_bgdd .PdfAnnotation =_aagc ;_bgdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aagc .SetContext (_bgdd );return _bgdd ;};

// AddImageResource adds an image to the XObject resources.
func (_fcea *PdfPage )AddImageResource (name _db .PdfObjectName ,ximg *XObjectImage )error {var _gadd *_db .PdfObjectDictionary ;if _fcea .Resources .XObject ==nil {_gadd =_db .MakeDict ();_fcea .Resources .XObject =_gadd ;}else {var _eeffa bool ;_gadd ,_eeffa =(_fcea .Resources .XObject ).(*_db .PdfObjectDictionary );
if !_eeffa {return _f .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gadd .Set (name ,ximg .ToPdfObject ());return nil ;};func (_ecd *PdfReader )newPdfAnnotationRichMediaFromDict (_bcef *_db .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_aceg :=&PdfAnnotationRichMedia {};
_aceg .RichMediaSettings =_bcef .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_aceg .RichMediaContent =_bcef .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _aceg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aeda *PdfAnnotationSquare )ToPdfObject ()_db .PdfObject {_aeda .PdfAnnotation .ToPdfObject ();_gbfb :=_aeda ._addd ;_ebc :=_gbfb .PdfObject .(*_db .PdfObjectDictionary );if _aeda .PdfAnnotationMarkup !=nil {_aeda .PdfAnnotationMarkup .appendToPdfDictionary (_ebc );
};_ebc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ebc .SetIfNotNil ("\u0042\u0053",_aeda .BS );_ebc .SetIfNotNil ("\u0049\u0043",_aeda .IC );_ebc .SetIfNotNil ("\u0042\u0045",_aeda .BE );
_ebc .SetIfNotNil ("\u0052\u0044",_aeda .RD );return _gbfb ;};func (_acbb *PdfReader )buildPageList (_adfaeb *_db .PdfIndirectObject ,_cfeb *_db .PdfIndirectObject ,_edacfc map[_db .PdfObject ]struct{})error {if _adfaeb ==nil {return nil ;};if _ ,_gfbcd :=_edacfc [_adfaeb ];
_gfbcd {_gd .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_adfaeb .ObjectNumber );return nil ;};_edacfc [_adfaeb ]=struct{}{};
_debb ,_fecfd :=_adfaeb .PdfObject .(*_db .PdfObjectDictionary );if !_fecfd {return _f .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_eedce ,_fecfd :=(*_debb ).Get ("\u0054\u0079\u0070\u0065").(*_db .PdfObjectName );
if !_fecfd {if _debb .Get ("\u004b\u0069\u0064\u0073")==nil {return _f .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_gd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_eedce =_db .MakeName ("\u0050\u0061\u0067e\u0073");_debb .Set ("\u0054\u0079\u0070\u0065",_eedce );};_gd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_eedce ,_adfaeb );
if *_eedce =="\u0050\u0061\u0067\u0065"{_aabaa ,_cdbfa :=_acbb .newPdfPageFromDict (_debb );if _cdbfa !=nil {return _cdbfa ;};_aabaa .setContainer (_adfaeb );if _cfeb !=nil {_debb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cfeb );};_acbb ._aedae =append (_acbb ._aedae ,_adfaeb );
_acbb .PageList =append (_acbb .PageList ,_aabaa );return nil ;};if *_eedce !="\u0050\u0061\u0067e\u0073"{_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_eedce );
return _f .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _cfeb !=nil {_debb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cfeb );};if !_acbb ._cbfe {_adbcf :=_acbb .traverseObjectData (_adfaeb );if _adbcf !=nil {return _adbcf ;};};_cecdf ,_dfagc :=_acbb ._ceaabg .Resolve (_debb .Get ("\u004b\u0069\u0064\u0073"));
if _dfagc !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _dfagc ;};var _caad *_db .PdfObjectArray ;
_caad ,_fecfd =_cecdf .(*_db .PdfObjectArray );if !_fecfd {_cgccg ,_gdaaf :=_cecdf .(*_db .PdfIndirectObject );if !_gdaaf {return _f .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_caad ,_fecfd =_cgccg .PdfObject .(*_db .PdfObjectArray );
if !_fecfd {return _f .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_gd .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_caad );
for _adgbe ,_dcggd :=range _caad .Elements (){_gcgf ,_ccdg :=_db .GetIndirect (_dcggd );if !_ccdg {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gcgf );
return _f .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_caad .Set (_adgbe ,_gcgf );_dfagc =_acbb .buildPageList (_gcgf ,_adfaeb ,_edacfc );if _dfagc !=nil {return _dfagc ;
};};return nil ;};func (_defg *PdfReader )newPdfAnnotationRedactFromDict (_baa *_db .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gaab :=PdfAnnotationRedact {};_agf ,_gdcdg :=_defg .newPdfAnnotationMarkupFromDict (_baa );if _gdcdg !=nil {return nil ,_gdcdg ;
};_gaab .PdfAnnotationMarkup =_agf ;_gaab .QuadPoints =_baa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gaab .IC =_baa .Get ("\u0049\u0043");_gaab .RO =_baa .Get ("\u0052\u004f");_gaab .OverlayText =_baa .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_gaab .Repeat =_baa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gaab .DA =_baa .Get ("\u0044\u0041");_gaab .Q =_baa .Get ("\u0051");return &_gaab ,nil ;};func (_ecgd *fontFile )parseASCIIPart (_bedca []byte )error {if len (_bedca )< 2||string (_bedca [:2])!="\u0025\u0021"{return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fdge ,_agdd ,_bcbf :=_agga (_bedca );if _bcbf !=nil {return _bcbf ;};_acdd :=_fgdbe (_fdge );_ecgd ._gbabd =_acdd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _ecgd ._gbabd ==""{_gd .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _agdd !=""{_edceb ,_ceagb :=_edgfa (_agdd );if _ceagb !=nil {return _ceagb ;};_ffbf ,_ceagb :=_fa .NewCustomSimpleTextEncoder (_edceb ,nil );if _ceagb !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ceagb );
return nil ;};_ecgd ._dfegf =_ffbf ;};return nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _db .PdfObject ;T3DV _db .PdfObject ;T3DA _db .PdfObject ;T3DI _db .PdfObject ;T3DB _db .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ddbg *PdfPageResources )GetShadingByName (keyName _db .PdfObjectName )(*PdfShading ,bool ){if _ddbg .Shading ==nil {return nil ,false ;};_ccggf ,_ffed :=_db .TraceToDirectObject (_ddbg .Shading ).(*_db .PdfObjectDictionary );if !_ffed {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddbg .Shading );
return nil ,false ;};if _gaba :=_ccggf .Get (keyName );_gaba !=nil {_gedbf ,_agcge :=_eeea (_gaba );if _agcge !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_agcge );
return nil ,false ;};return _gedbf ,true ;};return nil ,false ;};func _geag ()string {return _gd .Version };

// GetContentStreams returns the content stream as an array of strings.
func (_gffge *PdfPage )GetContentStreams ()([]string ,error ){_dcfgf :=_gffge .GetContentStreamObjs ();var _fbff []string ;for _ ,_fcbbd :=range _dcfgf {_agcca ,_daea :=_bebffb (_fcbbd );if _daea !=nil {return nil ,_daea ;};_fbff =append (_fbff ,_agcca );
};return _fbff ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_cdbg *OutlineItem )Add (item *OutlineItem ){_cdbg .Entries =append (_cdbg .Entries ,item )};

// SetAnnotations sets the annotations list.
func (_aeab *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_aeab ._gfeg =annotations };func _dgcgb (_dcfgb *_db .PdfObjectDictionary )(*PdfFieldButton ,error ){_fgbg :=&PdfFieldButton {};_fgbg .Opt ,_ =_db .GetArray (_dcfgb .Get ("\u004f\u0070\u0074"));
return _fgbg ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _db .PdfObject ;B _db .PdfObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bdac *PdfFont )SubsetRegistered ()error {switch _egbg :=_bdac ._fdcca .(type ){case *pdfFontType0 :_eee :=_egbg .subsetRegistered ();if _eee !=nil {_gd .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eee );
return _eee ;};if _egbg ._cbabg !=nil {if _egbg ._ecbc !=nil {_egbg ._ecbc .ToPdfObject ();};_egbg .ToPdfObject ();};default:_gd .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_egbg );
};return nil ;};func (_adgeb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_adgeb .fontCommon };func (_fbda *PdfReader )newPdfAnnotationProjectionFromDict (_ccfd *_db .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cbbe :=&PdfAnnotationProjection {};
_aca ,_fgcc :=_fbda .newPdfAnnotationMarkupFromDict (_ccfd );if _fgcc !=nil {return nil ,_fgcc ;};_cbbe .PdfAnnotationMarkup =_aca ;return _cbbe ,nil ;};

// SetContext sets the sub action (context).
func (_ff *PdfAction )SetContext (ctx PdfModel ){_ff ._dbc =ctx };

// XObjectType represents the type of an XObject.
type XObjectType int ;

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_beag *PdfReader )CheckAccessRights (password []byte )(bool ,_gda .Permissions ,error ){return _beag ._ceaabg .CheckAccessRights (password );};

// DecodeArray returns the component range values for the Separation colorspace.
func (_aabe *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_bddd *PdfAnnotationPopup )ToPdfObject ()_db .PdfObject {_bddd .PdfAnnotation .ToPdfObject ();_ggfc :=_bddd ._addd ;_cadf :=_ggfc .PdfObject .(*_db .PdfObjectDictionary );_cadf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0050\u006f\u0070u\u0070"));
_cadf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bddd .Parent );_cadf .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bddd .Open );return _ggfc ;};

// GetPage returns the PdfPage model for the specified page number.
func (_aeceb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _aeceb ._ceaabg .GetCrypter ()!=nil &&!_aeceb ._ceaabg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_aeceb ._aedae )< pageNumber {return nil ,_f .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_aaadg :=pageNumber -1;if _aaadg < 0{return nil ,_g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_affa :=_aeceb .PageList [_aaadg ];
return _affa ,nil ;};func _dcbaa (_debd *_db .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ebabg :=PdfShadingType6 {};_dcac :=_debd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dcac ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aafe ,_fbfdff :=_dcac .(*_db .PdfObjectInteger );if !_fbfdff {_gd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcac );
return nil ,_db .ErrTypeError ;};_ebabg .BitsPerCoordinate =_aafe ;_dcac =_debd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dcac ==nil {_gd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aafe ,_fbfdff =_dcac .(*_db .PdfObjectInteger );if !_fbfdff {_gd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dcac );
return nil ,_db .ErrTypeError ;};_ebabg .BitsPerComponent =_aafe ;_dcac =_debd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dcac ==nil {_gd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aafe ,_fbfdff =_dcac .(*_db .PdfObjectInteger );if !_fbfdff {_gd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dcac );
return nil ,_db .ErrTypeError ;};_ebabg .BitsPerComponent =_aafe ;_dcac =_debd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dcac ==nil {_gd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cceaa ,_fbfdff :=_dcac .(*_db .PdfObjectArray );if !_fbfdff {_gd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcac );
return nil ,_db .ErrTypeError ;};_ebabg .Decode =_cceaa ;if _cbcea :=_debd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cbcea !=nil {_ebabg .Function =[]PdfFunction {};if _edcgfed ,_eagc :=_cbcea .(*_db .PdfObjectArray );_eagc {for _ ,_defad :=range _edcgfed .Elements (){_dged ,_cbedc :=_ccee (_defad );
if _cbedc !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbedc );return nil ,_cbedc ;};_ebabg .Function =append (_ebabg .Function ,_dged );
};}else {_ebfc ,_dabdf :=_ccee (_cbcea );if _dabdf !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dabdf );return nil ,_dabdf ;
};_ebabg .Function =append (_ebabg .Function ,_ebfc );};};return &_ebabg ,nil ;};func (_acagf *PdfReader )loadAnnotations (_cgcc _db .PdfObject )([]*PdfAnnotation ,error ){_eacee ,_defga :=_db .GetArray (_cgcc );if !_defga {return nil ,_g .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cdbbf []*PdfAnnotation ;for _ ,_eaafb :=range _eacee .Elements (){_eaafb =_db .ResolveReference (_eaafb );if _ ,_deag :=_eaafb .(*_db .PdfObjectNull );_deag {continue ;};_egabe ,_gfdccb :=_eaafb .(*_db .PdfObjectDictionary );_bfcff ,_baeag :=_eaafb .(*_db .PdfIndirectObject );
if _gfdccb {_bfcff =&_db .PdfIndirectObject {};_bfcff .PdfObject =_egabe ;}else {if !_baeag {return nil ,_g .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_begac ,_fcage :=_acagf .newPdfAnnotationFromIndirectObject (_bfcff );if _fcage !=nil {return nil ,_fcage ;};switch _cebe :=_begac .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_eeagec :=range _acagf .AcroForm .AllFields (){if _eeagec ._fbeg ==_cebe .Parent {_cebe ._cba =_eeagec ;
break ;};};};if _begac !=nil {_cdbbf =append (_cdbbf ,_begac );};};return _cdbbf ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fad :=NewPdfAction ();_cbgc :=&PdfActionImportData {};_cbgc .PdfAction =_fad ;_fad .SetContext (_cbgc );return _cbgc ;};func _gdcfb (_cgggb *_db .PdfObjectDictionary ,_bcea *fontCommon )(*pdfFontType0 ,error ){_acad ,_ebff :=_db .GetArray (_cgggb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_ebff {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_bcea );
return nil ,_db .ErrRangeError ;};if _acad .Len ()!=1{_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_acad .Len ());return nil ,_db .ErrRangeError ;
};_fddfb ,_gcfae :=_adcaa (_acad .Get (0),false );if _gcfae !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_gcfae ,_bcea );
return nil ,_gcfae ;};_eadac :=_ccbcf (_bcea );_eadac .DescendantFont =_fddfb ;_cdeg ,_ebff :=_db .GetNameVal (_cgggb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ebff {if _cdeg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cdeg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_eadac ._ecbc =_fa .NewIdentityTextEncoder (_cdeg );
}else if _dc .IsPredefinedCMap (_cdeg ){_eadac ._cabbf ,_gcfae =_dc .LoadPredefinedCMap (_cdeg );if _gcfae !=nil {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cdeg ,_gcfae );
};}else {_gd .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cdeg );};};if _ffcgg :=_fddfb .baseFields ()._begaf ;_ffcgg !=nil {if _dffcdd :=_ffcgg .Name ();_dffcdd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dffcdd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dffcdd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dffcdd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_eadac ._ecbc =_fa .NewCMapEncoder (_cdeg ,_eadac ._cabbf ,_ffcgg );
};};return _eadac ,nil ;};func _fbca ()string {_edbg .Lock ();defer _edbg .Unlock ();return _bddbc };

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_bfdc *PdfAppender )UpdateObject (obj _db .PdfObject ){_bfdc .replaceObject (obj ,obj );if _ ,_bbdd :=_bfdc ._bbfdg [obj ];!_bbdd {_bfdc ._bbg =append (_bfdc ._bbg ,obj );_bfdc ._bbfdg [obj ]=struct{}{};};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_adfbf *PdfShadingPattern )ToPdfObject ()_db .PdfObject {_adfbf .PdfPattern .ToPdfObject ();_cddf :=_adfbf .getDict ();if _adfbf .Shading !=nil {_cddf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_adfbf .Shading .ToPdfObject ());};if _adfbf .Matrix !=nil {_cddf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_adfbf .Matrix );
};if _adfbf .ExtGState !=nil {_cddf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_adfbf .ExtGState );};return _adfbf ._afae ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// GetOutlineTree returns the outline tree.
func (_gdca *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _gdca ._aafde };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfaad *PdfShading )ToPdfObject ()_db .PdfObject {_ebbc :=_gfaad ._eccbgb ;_dcead ,_gebffc :=_gfaad .getShadingDict ();if _gebffc !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gfaad .ShadingType !=nil {_dcead .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gfaad .ShadingType );};if _gfaad .ColorSpace !=nil {_dcead .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gfaad .ColorSpace .ToPdfObject ());
};if _gfaad .Background !=nil {_dcead .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_gfaad .Background );};if _gfaad .BBox !=nil {_dcead .Set ("\u0042\u0042\u006f\u0078",_gfaad .BBox .ToPdfObject ());};if _gfaad .AntiAlias !=nil {_dcead .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_gfaad .AntiAlias );
};return _ebbc ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gefa *PdfFieldButton )IsPush ()bool {return _gefa .GetType ()==ButtonTypePush };

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cdbb *PdfPage )Duplicate ()*PdfPage {_aebf :=*_cdbb ;_aebf ._bgbaf =_db .MakeDict ();_aebf ._gdcfd =_db .MakeIndirectObject (_aebf ._bgbaf );return &_aebf ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_ecabe *pdfCIDFontType2 )baseFields ()*fontCommon {return &_ecabe .fontCommon };

// HasExtGState checks if ExtGState name is available.
func (_dfdea *PdfPage )HasExtGState (name _db .PdfObjectName )bool {if _dfdea .Resources ==nil {return false ;};if _dfdea .Resources .ExtGState ==nil {return false ;};_bdde ,_aecc :=_db .TraceToDirectObject (_dfdea .Resources .ExtGState ).(*_db .PdfObjectDictionary );
if !_aecc {_gd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_db .TraceToDirectObject (_dfdea .Resources .ExtGState ));
return false ;};_cabba :=_bdde .Get (name );_fdfb :=_cabba !=nil ;return _fdfb ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _db .PdfObject )(*PdfFilespec ,error ){_dabd :=&PdfFilespec {};var _dfaeb *_db .PdfObjectDictionary ;if _dfde ,_dcfc :=_db .GetIndirect (obj );_dcfc {_dabd ._cebda =_dfde ;_acdf ,_bfac :=_db .GetDict (_dfde .PdfObject );
if !_bfac {_gd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_db .ErrTypeError ;};_dfaeb =_acdf ;}else if _aece ,_becfg :=_db .GetDict (obj );
_becfg {_dabd ._cebda =_aece ;_dfaeb =_aece ;}else {_gd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_db .ErrTypeError ;};if _dfaeb ==nil {_gd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_f .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fegg :=_dfaeb .Get ("\u0054\u0079\u0070\u0065");_fegg !=nil {_bcgc ,_dbag :=_fegg .(*_db .PdfObjectName );if !_dbag {_gd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fegg );
}else {if *_bcgc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_gd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bcgc );
};};};if _agcg :=_dfaeb .Get ("\u0046\u0053");_agcg !=nil {_dabd .FS =_agcg ;};if _dfgef :=_dfaeb .Get ("\u0046");_dfgef !=nil {_dabd .F =_dfgef ;};if _gggec :=_dfaeb .Get ("\u0055\u0046");_gggec !=nil {_dabd .UF =_gggec ;};if _eede :=_dfaeb .Get ("\u0044\u004f\u0053");
_eede !=nil {_dabd .DOS =_eede ;};if _acde :=_dfaeb .Get ("\u004d\u0061\u0063");_acde !=nil {_dabd .Mac =_acde ;};if _agdcc :=_dfaeb .Get ("\u0055\u006e\u0069\u0078");_agdcc !=nil {_dabd .Unix =_agdcc ;};if _gagec :=_dfaeb .Get ("\u0049\u0044");_gagec !=nil {_dabd .ID =_gagec ;
};if _geff :=_dfaeb .Get ("\u0056");_geff !=nil {_dabd .V =_geff ;};if _dacddd :=_dfaeb .Get ("\u0045\u0046");_dacddd !=nil {_dabd .EF =_dacddd ;};if _fbef :=_dfaeb .Get ("\u0052\u0046");_fbef !=nil {_dabd .RF =_fbef ;};if _fcaa :=_dfaeb .Get ("\u0044\u0065\u0073\u0063");
_fcaa !=nil {_dabd .Desc =_fcaa ;};if _cbda :=_dfaeb .Get ("\u0043\u0049");_cbda !=nil {_dabd .CI =_cbda ;};return _dabd ,nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_cgbef *PdfOutline )GetContainingPdfObject ()_db .PdfObject {return _cgbef ._dfcg };

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _db .StreamEncoder )(*XObjectImage ,error ){_dfdee :=NewXObjectImage ();return UpdateXObjectImageFromImage (_dfdee ,img ,cs ,encoder );};func (_bbdcc *PdfWriter )copyObject (_gdgbc _db .PdfObject ,_efgdd map[_db .PdfObject ]_db .PdfObject ,_deaeg map[_db .PdfObject ]struct{},_dbagg bool )_db .PdfObject {_abgcbf :=!_bbdcc ._gcabf &&_deaeg !=nil ;
if _acfdd ,_fbbg :=_efgdd [_gdgbc ];_fbbg {if _abgcbf &&!_dbagg {delete (_deaeg ,_gdgbc );};return _acfdd ;};_bacaa :=_gdgbc ;switch _edbcg :=_gdgbc .(type ){case *_db .PdfObjectArray :_gcdce :=_db .MakeArray ();_bacaa =_gcdce ;_efgdd [_gdgbc ]=_bacaa ;
for _ ,_eadbb :=range _edbcg .Elements (){_gcdce .Append (_bbdcc .copyObject (_eadbb ,_efgdd ,_deaeg ,_dbagg ));};case *_db .PdfObjectStreams :_agge :=&_db .PdfObjectStreams {PdfObjectReference :_edbcg .PdfObjectReference };_bacaa =_agge ;_efgdd [_gdgbc ]=_bacaa ;
for _ ,_bgbcc :=range _edbcg .Elements (){_agge .Append (_bbdcc .copyObject (_bgbcc ,_efgdd ,_deaeg ,_dbagg ));};case *_db .PdfObjectStream :_dcdga :=&_db .PdfObjectStream {Stream :_edbcg .Stream ,PdfObjectReference :_edbcg .PdfObjectReference };_bacaa =_dcdga ;
_efgdd [_gdgbc ]=_bacaa ;_dcdga .PdfObjectDictionary =_bbdcc .copyObject (_edbcg .PdfObjectDictionary ,_efgdd ,_deaeg ,_dbagg ).(*_db .PdfObjectDictionary );case *_db .PdfObjectDictionary :var _efbbd bool ;if _abgcbf &&!_dbagg {if _dcede ,_ :=_db .GetNameVal (_edbcg .Get ("\u0054\u0079\u0070\u0065"));
_dcede =="\u0050\u0061\u0067\u0065"{_ ,_gacga :=_bbdcc ._bdbcb [_edbcg ];_dbagg =!_gacga ;_efbbd =_dbagg ;};};_cfbf :=_db .MakeDict ();_bacaa =_cfbf ;_efgdd [_gdgbc ]=_bacaa ;for _ ,_aedfe :=range _edbcg .Keys (){_cfbf .Set (_aedfe ,_bbdcc .copyObject (_edbcg .Get (_aedfe ),_efgdd ,_deaeg ,_dbagg ));
};if _efbbd {_bacaa =_db .MakeNull ();_dbagg =false ;};case *_db .PdfIndirectObject :_bbdf :=&_db .PdfIndirectObject {PdfObjectReference :_edbcg .PdfObjectReference };_bacaa =_bbdf ;_efgdd [_gdgbc ]=_bacaa ;_bbdf .PdfObject =_bbdcc .copyObject (_edbcg .PdfObject ,_efgdd ,_deaeg ,_dbagg );
case *_db .PdfObjectString :_agggeb :=*_edbcg ;_bacaa =&_agggeb ;_efgdd [_gdgbc ]=_bacaa ;case *_db .PdfObjectName :_adaag :=*_edbcg ;_bacaa =&_adaag ;_efgdd [_gdgbc ]=_bacaa ;case *_db .PdfObjectNull :_bacaa =_db .MakeNull ();_efgdd [_gdgbc ]=_bacaa ;
case *_db .PdfObjectInteger :_bfgc :=*_edbcg ;_bacaa =&_bfgc ;_efgdd [_gdgbc ]=_bacaa ;case *_db .PdfObjectReference :_gdcgc :=*_edbcg ;_bacaa =&_gdcgc ;_efgdd [_gdgbc ]=_bacaa ;case *_db .PdfObjectFloat :_eagb :=*_edbcg ;_bacaa =&_eagb ;_efgdd [_gdgbc ]=_bacaa ;
case *_db .PdfObjectBool :_eeeg :=*_edbcg ;_bacaa =&_eeeg ;_efgdd [_gdgbc ]=_bacaa ;case *pdfSignDictionary :_cbdabb :=&pdfSignDictionary {PdfObjectDictionary :_db .MakeDict (),_gcdd :_edbcg ._gcdd ,_eebcd :_edbcg ._eebcd };_bacaa =_cbdabb ;_efgdd [_gdgbc ]=_bacaa ;
for _ ,_acacc :=range _edbcg .Keys (){_cbdabb .Set (_acacc ,_bbdcc .copyObject (_edbcg .Get (_acacc ),_efgdd ,_deaeg ,_dbagg ));};default:_gd .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gdgbc );
};if _abgcbf &&_dbagg {_deaeg [_gdgbc ]=struct{}{};};return _bacaa ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};const (_egbgf =0x00001;_ceab =0x00002;_egacb =0x00004;_cbbb =0x00008;_bfbb =0x00020;_dbge =0x00040;_fegcc =0x10000;_cbbdcd =0x20000;_caba =0x40000;);

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_edbg .Lock ();defer _edbg .Unlock ();_adfga =creator };func (_bdcge *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _fddfa []*PdfFieldSignature ;for _ ,_gfdg :=range _bdcge .AllFields (){switch _cdfb :=_gfdg .GetContext ().(type ){case *PdfFieldSignature :_accd :=_cdfb ;
_fddfa =append (_fddfa ,_accd );};};return _fddfa ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gbaed ,_gabcc :=_ebeff (basefont );if _gabcc !=nil {return nil ,_gabcc ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gbaed ._gffaf =_fa .NewWinAnsiEncoder ();};return &PdfFont {_fdcca :&_gbaed },nil ;
};type pdfCIDFontType2 struct{fontCommon ;_bfeba *_db .PdfIndirectObject ;_egcad _fa .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_db .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _db .PdfObject ;W _db .PdfObject ;DW2 _db .PdfObject ;W2 _db .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _db .PdfObject ;_abgcd map[_fa .CharCode ]float64 ;_dcdgg float64 ;_dfag map[rune ]int ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_bfaa FieldFlag )Mask ()uint32 {return uint32 (_bfaa )};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ffgd *PdfColorspaceLab )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bage ,_eaage :=_db .GetNumbersAsFloat (objects );
if _eaage !=nil {return nil ,_eaage ;};return _ffgd .ColorFromFloats (_bage );};

// ToPdfObject implements interface PdfModel.
func (_efeg *PdfAnnotationInk )ToPdfObject ()_db .PdfObject {_efeg .PdfAnnotation .ToPdfObject ();_fgcbf :=_efeg ._addd ;_cfda :=_fgcbf .PdfObject .(*_db .PdfObjectDictionary );_efeg .PdfAnnotationMarkup .appendToPdfDictionary (_cfda );_cfda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0049\u006e\u006b"));
_cfda .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_efeg .InkList );_cfda .SetIfNotNil ("\u0042\u0053",_efeg .BS );return _fgcbf ;};func (_aeff Image )getBase ()_fg .ImageBase {return _fg .NewImageBase (int (_aeff .Width ),int (_aeff .Height ),int (_aeff .BitsPerComponent ),_aeff .ColorComponents ,_aeff .Data ,_aeff ._ededa ,_aeff ._ffga );
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_efdg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_aebfa *PdfWriter )SetNamedDestinations (names _db .PdfObject )error {if names ==nil {return nil ;};_gd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_aebfa ._egdad .Set ("\u004e\u0061\u006de\u0073",names );return _aebfa .addObjects (names );};func _dcceb ()_cb .Time {_edbg .Lock ();defer _edbg .Unlock ();return _bcaae };

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _db .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_db .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_daead ,_agdea :=encoder .EncodeBytes (img .Data );
if _agdea !=nil {_gd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_agdea );return nil ,_agdea ;};_agcb :=NewXObjectImage ();_gecbb :=img .Width ;_cbfcd :=img .Height ;
_agcb .Width =&_gecbb ;_agcb .Height =&_cbfcd ;_fcgg :=img .BitsPerComponent ;_agcb .BitsPerComponent =&_fcgg ;_agcb .Filter =encoder ;_agcb .Stream =_daead ;if cs ==nil {if img .ColorComponents ==1{_agcb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_agcb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_agcb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_f .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_agcb .ColorSpace =cs ;};if len (img ._ededa )!=0{_afdfc :=NewXObjectImage ();
_afdfc .Filter =encoder ;_gaaccf ,_efbgf :=encoder .EncodeBytes (img ._ededa );if _efbgf !=nil {_gd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_efbgf );
return nil ,_efbgf ;};_afdfc .Stream =_gaaccf ;_afdfc .BitsPerComponent =_agcb .BitsPerComponent ;_afdfc .Width =&img .Width ;_afdfc .Height =&img .Height ;_afdfc .ColorSpace =NewPdfColorspaceDeviceGray ();_agcb .SMask =_afdfc .ToPdfObject ();}else {_agcb .SMask =xobjIn .SMask ;
_agcb .ImageMask =xobjIn .ImageMask ;if _agcb .ColorSpace .GetNumComponents ()==1{_aegdf (_agcb );};};return _agcb ,nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_edfdcb *PdfPageResources )SetFontByName (keyName _db .PdfObjectName ,obj _db .PdfObject )error {if _edfdcb .Font ==nil {_edfdcb .Font =_db .MakeDict ();};_cddgb ,_abcb :=_db .TraceToDirectObject (_edfdcb .Font ).(*_db .PdfObjectDictionary );if !_abcb {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_db .TraceToDirectObject (_edfdcb .Font ));
return _db .ErrTypeError ;};_cddgb .Set (keyName ,obj );return nil ;};func (_bgag *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_abg :=NewPdfAnnotation ();_cbge :=&PdfAnnotationPopup {};_cbge .PdfAnnotation =_abg ;_abg .SetContext (_cbge );return _cbge ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_baacc *PdfPattern )GetContext ()PdfModel {return _baacc ._bffbe };

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _db .PdfObject ;T _db .PdfObject ;Operation _db .PdfObject ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dfddc *PdfShading )GetContext ()PdfModel {return _dfddc ._facee };func _ageb (_egfc _db .PdfObject )(*PdfColorspaceICCBased ,error ){_gcdee :=&PdfColorspaceICCBased {};if _egbcd ,_dabef :=_egfc .(*_db .PdfIndirectObject );_dabef {_gcdee ._gdab =_egbcd ;
};_egfc =_db .TraceToDirectObject (_egfc );_agca ,_bbee :=_egfc .(*_db .PdfObjectArray );if !_bbee {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _agca .Len ()!=2{return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_egfc =_db .TraceToDirectObject (_agca .Get (0));_cdda ,_bbee :=_egfc .(*_db .PdfObjectName );if !_bbee {return nil ,_g .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cdda !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_g .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_egfc =_agca .Get (1);
_fafe ,_bbee :=_db .GetStream (_egfc );if !_bbee {_gd .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_egfc );
return nil ,_g .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cgad :=_fafe .PdfObjectDictionary ;_dggc ,_bbee :=_cgad .Get ("\u004e").(*_db .PdfObjectInteger );
if !_bbee {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_dggc !=1&&*_dggc !=3&&*_dggc !=4{return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_gcdee .N =int (*_dggc );if _abdf :=_cgad .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_abdf !=nil {_cacce ,_cdfef :=NewPdfColorspaceFromPdfObject (_abdf );if _cdfef !=nil {return nil ,_cdfef ;};_gcdee .Alternate =_cacce ;};if _bdbe :=_cgad .Get ("\u0052\u0061\u006eg\u0065");
_bdbe !=nil {_bdbe =_db .TraceToDirectObject (_bdbe );_bfec ,_accg :=_bdbe .(*_db .PdfObjectArray );if !_accg {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bfec .Len ()!=2*_gcdee .N {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_cgec ,_fgca :=_bfec .GetAsFloat64Slice ();if _fgca !=nil {return nil ,_fgca ;};_gcdee .Range =_cgec ;}else {_gcdee .Range =make ([]float64 ,2*_gcdee .N );for _edbd :=0;_edbd < _gcdee .N ;_edbd ++{_gcdee .Range [2*_edbd ]=0.0;_gcdee .Range [2*_edbd +1]=1.0;
};};if _gdaba :=_cgad .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gdaba !=nil {_ddba ,_fdfe :=_gdaba .(*_db .PdfObjectStream );if !_fdfe {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_gcdee .Metadata =_ddba ;};_bfbe ,_afce :=_db .DecodeStream (_fafe );if _afce !=nil {return nil ,_afce ;};_gcdee .Data =_bfbe ;_gcdee ._ccfbc =_fafe ;return _gcdee ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_egcec *PdfPageResources )SetPatternByName (keyName _db .PdfObjectName ,pattern _db .PdfObject )error {if _egcec .Pattern ==nil {_egcec .Pattern =_db .MakeDict ();};_fcgcg ,_ggbec :=_egcec .Pattern .(*_db .PdfObjectDictionary );if !_ggbec {return _db .ErrTypeError ;
};_fcgcg .Set (keyName ,pattern );return nil ;};

// Encoder returns the font's text encoder.
func (_adcf *PdfFont )Encoder ()_fa .TextEncoder {_cgbad :=_adcf .actualFont ();if _cgbad ==nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_adcf ._fdcca );
return nil ;};return _cgbad .Encoder ();};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bffabe *PdfPageResources )GetXObjectByName (keyName _db .PdfObjectName )(*_db .PdfObjectStream ,XObjectType ){if _bffabe .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bgca ,_cbfc :=_db .TraceToDirectObject (_bffabe .XObject ).(*_db .PdfObjectDictionary );
if !_cbfc {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_db .TraceToDirectObject (_bffabe .XObject ));
return nil ,XObjectTypeUndefined ;};if _dbccd :=_bgca .Get (keyName );_dbccd !=nil {_cbffdc ,_eedca :=_db .GetStream (_dbccd );if !_eedca {_gd .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_dbccd );
return nil ,XObjectTypeUndefined ;};_effbd :=_cbffdc .PdfObjectDictionary ;_bgda ,_eedca :=_db .TraceToDirectObject (_effbd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_db .PdfObjectName );if !_eedca {_gd .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_effbd .String ());
return nil ,XObjectTypeUndefined ;};if *_bgda =="\u0049\u006d\u0061g\u0065"{return _cbffdc ,XObjectTypeImage ;}else if *_bgda =="\u0046\u006f\u0072\u006d"{return _cbffdc ,XObjectTypeForm ;}else if *_bgda =="\u0050\u0053"{return _cbffdc ,XObjectTypePS ;
}else {_gd .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bgda );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};func (_efgdc *PdfWriter )addObject (_eeegg _db .PdfObject )bool {_cabed :=_efgdc .hasObject (_eeegg );if !_cabed {_dgfbe :=_db .ResolveReferencesDeep (_eeegg ,_efgdc ._ggacaa );if _dgfbe !=nil {_gd .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_dgfbe );
};_efgdc ._fadge =append (_efgdc ._fadge ,_eeegg );_efgdc ._fdef [_eeegg ]=struct{}{};return true ;};return false ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_feaa pdfCIDFontType2 )GetRuneMetrics (r rune )(_acg .CharMetrics ,bool ){_adcefb ,_gfab :=_feaa ._dfag [r ];if !_gfab {_aecd ,_aecba :=_db .GetInt (_feaa .DW );if !_aecba {return _acg .CharMetrics {},false ;};_adcefb =int (*_aecd );};return _acg .CharMetrics {Wx :float64 (_adcefb )},true ;
};func _ccbcf (_cded *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_cded }};func (_bfbg *PdfReader )newPdfAnnotationWatermarkFromDict (_dagb *_db .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fffg :=PdfAnnotationWatermark {};
_fffg .FixedPrint =_dagb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_fffg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aba *PdfActionJavaScript )ToPdfObject ()_db .PdfObject {_aba .PdfAction .ToPdfObject ();_gfb :=_aba ._bcc ;_ag :=_gfb .PdfObject .(*_db .PdfObjectDictionary );_ag .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeJavaScript )));_ag .SetIfNotNil ("\u004a\u0053",_aba .JS );
return _gfb ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_gdbe *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _fbfdf []*PdfField ;if _gdbe .AcroForm !=nil {_fbfdf =_gdbe .AcroForm .AllFields ();};_dgagf :=make (map[*PdfField ]struct{},len (_fbfdf ));for _ ,_edede :=range _fbfdf {_dgagf [_edede ]=struct{}{};
};for _ ,_ebde :=range _gdbe .PageList {_fbcbc ,_gbebd :=_ebde .GetAnnotations ();if _gbebd !=nil {return false ,_gbebd ;};for _ ,_fdgdg :=range _fbcbc {_dcfb ,_cead :=_fdgdg .GetContext ().(*PdfAnnotationWidget );if !_cead {continue ;};_abbab :=_dcfb .Field ();
if _abbab ==nil {return true ,nil ;};if _ ,_aefcg :=_dgagf [_abbab ];!_aefcg {return true ,nil ;};};};return false ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_aeg :=PdfColorLab {l ,a ,b };return &_aeg };

// ToPdfObject returns the PDF representation of the colorspace.
func (_fafd *PdfColorspaceSpecialPattern )ToPdfObject ()_db .PdfObject {if _fafd .UnderlyingCS ==nil {return _db .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_gaga :=_db .MakeArray (_db .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gaga .Append (_fafd .UnderlyingCS .ToPdfObject ());
if _fafd ._aeba !=nil {_fafd ._aeba .PdfObject =_gaga ;return _fafd ._aeba ;};return _gaga ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fgef *PdfColorspaceDeviceCMYK )ToPdfObject ()_db .PdfObject {return _db .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// AddAnnotation appends `annot` to the list of page annotations.
func (_eegaf *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _eegaf ._gfeg ==nil {_eegaf .GetAnnotations ();};_eegaf ._gfeg =append (_eegaf ._gfeg ,annot );};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_edcgf pdfFontSimple )GetRuneMetrics (r rune )(_acg .CharMetrics ,bool ){if _edcgf ._dccec !=nil {_bfee ,_cfecf :=_edcgf ._dccec .Read (r );if _cfecf {return _bfee ,true ;};};_dbgg :=_edcgf .Encoder ();if _dbgg ==nil {_gd .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_edcgf );
return _acg .CharMetrics {},false ;};_fggb ,_aecbe :=_dbgg .RuneToCharcode (r );if !_aecbe {if r !=' '{_gd .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_edcgf );
};return _acg .CharMetrics {},false ;};_ebbaf ,_cfbg :=_edcgf .GetCharMetrics (_fggb );return _ebbaf ,_cfbg ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_aeeeg ,_bcfd :=_ca .Open (filePath );if _bcfd !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bcfd );
return nil ,_bcfd ;};defer _aeeeg .Close ();return NewPdfFontFromTTF (_aeeeg );};

// ToInteger convert to an integer format.
func (_gfaa *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cfba :=_ae .Pow (2,float64 (bits ))-1;return uint32 (_cfba *_gfaa .Val ());};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _db .PdfObject ;NewWindow _db .PdfObject ;T _db .PdfObject ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fcae int64 ;_dcecg int64 ;_eggb int64 ;_accca int64 ;_aeac int64 ;_cabaa int64 ;_gdcdc byte ;_gdgee int64 ;_bfdgb int64 ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _db .PdfObject ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _db .PdfObject ;IsMap _db .PdfObject ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_ecbcc *PdfReader )GetObjectNums ()[]int {return _ecbcc ._ceaabg .GetObjectNums ()};func (_ddfee *PdfWriter )updateObjectNumbers (){_agggd :=_ddfee .ObjNumOffset ;_fbedg :=0;for _ ,_cegc :=range _ddfee ._fadge {_faefb :=int64 (_fbedg +1+_agggd );
_gbfcfe :=true ;if _ddfee ._gcabf {if _fgbag ,_defc :=_ddfee ._caee [_cegc ];_defc {_faefb =_fgbag ;_gbfcfe =false ;};};switch _ggdfa :=_cegc .(type ){case *_db .PdfIndirectObject :_ggdfa .ObjectNumber =_faefb ;_ggdfa .GenerationNumber =0;case *_db .PdfObjectStream :_ggdfa .ObjectNumber =_faefb ;
_ggdfa .GenerationNumber =0;case *_db .PdfObjectStreams :_ggdfa .ObjectNumber =_faefb ;_ggdfa .GenerationNumber =0;default:_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ggdfa );
continue ;};if _gbfcfe {_fbedg ++;};};_fceaf :=func (_dcafg _db .PdfObject )int64 {switch _ecddb :=_dcafg .(type ){case *_db .PdfIndirectObject :return _ecddb .ObjectNumber ;case *_db .PdfObjectStream :return _ecddb .ObjectNumber ;case *_db .PdfObjectStreams :return _ecddb .ObjectNumber ;
};return 0;};_ea .SliceStable (_ddfee ._fadge ,func (_abbbe ,_gbgdd int )bool {return _fceaf (_ddfee ._fadge [_abbbe ])< _fceaf (_ddfee ._fadge [_gbgdd ])});};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fafgb *PdfPageResources )HasXObjectByName (keyName _db .PdfObjectName )bool {_dccc ,_ :=_fafgb .GetXObjectByName (keyName );return _dccc !=nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_baag *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _baag ._bffbe .(*PdfTilingPattern );};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_cgba *PdfFieldButton )GetType ()ButtonType {_cacea :=ButtonTypeCheckbox ;if _cgba .Ff !=nil {if (uint32 (*_cgba .Ff )&FieldFlagPushbutton .Mask ())> 0{_cacea =ButtonTypePush ;}else if (uint32 (*_cgba .Ff )&FieldFlagRadio .Mask ())> 0{_cacea =ButtonTypeRadio ;
};};return _cacea ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cgca *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cgca .GetNumComponents (){return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdfa ,_adea :=_cgca .TintTransform .Evaluate (vals );
if _adea !=nil {return nil ,_adea ;};_bedd ,_adea :=_cgca .AlternateSpace .ColorFromFloats (_cdfa );if _adea !=nil {return nil ,_adea ;};return _bedd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcf *PdfActionGoTo )ToPdfObject ()_db .PdfObject {_dcf .PdfAction .ToPdfObject ();_fb :=_dcf ._bcc ;_gbf :=_fb .PdfObject .(*_db .PdfObjectDictionary );_gbf .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeGoTo )));_gbf .SetIfNotNil ("\u0044",_dcf .D );
return _fb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_decb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if _decb .Alternate ==nil {if _decb .N ==1{_bbge :=NewPdfColorspaceDeviceGray ();return _bbge .ColorFromPdfObjects (objects );}else if _decb .N ==3{_eccg :=NewPdfColorspaceDeviceRGB ();
return _eccg .ColorFromPdfObjects (objects );}else if _decb .N ==4{_bgab :=NewPdfColorspaceDeviceCMYK ();return _bgab .ColorFromPdfObjects (objects );}else {return nil ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _decb .Alternate .ColorFromPdfObjects (objects );};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gfddc *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgcf ,_acgac :=color .(*PdfColorDeviceRGB );if !_acgac {_gd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cgcf ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_ggffg *PdfReader )IsEncrypted ()(bool ,error ){return _ggffg ._ceaabg .IsEncrypted ()};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_db .PdfObjectArray ;Domain *_db .PdfObjectArray ;Function []PdfFunction ;Extend *_db .PdfObjectArray ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ddbed ,_gdagb :=_ca .Open (filePath );if _gdagb !=nil {_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gdagb );
return nil ,_gdagb ;};defer _ddbed .Close ();return NewCompositePdfFontFromTTF (_ddbed );};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ecca *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// GetCustomInfo returns a custom info value for the specified name.
func (_fgdd *PdfInfo )GetCustomInfo (name string )*_db .PdfObjectString {var _daeea *_db .PdfObjectString ;if _fgdd ._eccbf ==nil {return _daeea ;};if _aecb ,_bafge :=_fgdd ._eccbf .Get (*_db .MakeName (name )).(*_db .PdfObjectString );_bafge {_daeea =_aecb ;
};return _daeea ;};

// ToPdfObject implements interface PdfModel.
func (_bdg *PdfActionGoTo3DView )ToPdfObject ()_db .PdfObject {_bdg .PdfAction .ToPdfObject ();_gcc :=_bdg ._bcc ;_ceb :=_gcc .PdfObject .(*_db .PdfObjectDictionary );_ceb .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeGoTo3DView )));_ceb .SetIfNotNil ("\u0054\u0041",_bdg .TA );
_ceb .SetIfNotNil ("\u0056",_bdg .V );return _gcc ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ceaabg *_db .PdfParser ;_efadc _db .PdfObject ;_cgfc *_db .PdfIndirectObject ;_fadec *_db .PdfObjectDictionary ;_aedae []*_db .PdfIndirectObject ;PageList []*PdfPage ;_befb int ;_ebfee *_db .PdfObjectDictionary ;_aafde *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_afdb *modelManager ;_cbfe bool ;_aebfd map[_db .PdfObject ]struct{};_dbfcgb _dg .ReadSeeker ;_fecge string ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_daacg *Image )GetSamples ()[]uint32 {_bbbcf :=_cga .ResampleBytes (_daacg .Data ,int (_daacg .BitsPerComponent ));if _daacg .BitsPerComponent < 8{_bbbcf =_daacg .samplesTrimPadding (_bbbcf );};_fgcec :=int (_daacg .Width )*int (_daacg .Height )*_daacg .ColorComponents ;
if len (_bbbcf )< _fgcec {_gd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_bbbcf ),_fgcec );
return _bbbcf ;}else if len (_bbbcf )> _fgcec {_gd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_bbbcf ),_fgcec );
_bbbcf =_bbbcf [:_fgcec ];};return _bbbcf ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_feaab *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _feaab .fill (provider ,appGen );};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bgfgd *PdfPage )GetAllContentStreams ()(string ,error ){_cbbg ,_adegf :=_bgfgd .GetContentStreams ();if _adegf !=nil {return "",_adegf ;};return _cf .Join (_cbbg ,"\u0020"),nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _db .PdfObject ;};func (_aabab *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _aabab ._dfff };

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ccgcf []byte )(_feagg int ,_egcacb error );};

// ToInteger convert to an integer format.
func (_bgee *PdfColorLab )ToInteger (bits int )[3]uint32 {_dgff :=_ae .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dgff *_bgee .L ()),uint32 (_dgff *_bgee .A ()),uint32 (_dgff *_bgee .B ())};};

// ToPdfObject converts the font to a PDF representation.
func (_bfgde *pdfFontType0 )ToPdfObject ()_db .PdfObject {if _bfgde ._cbabg ==nil {_bfgde ._cbabg =&_db .PdfIndirectObject {};};_cgga :=_bfgde .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bfgde ._cbabg .PdfObject =_cgga ;if _bfgde .Encoding !=nil {_cgga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfgde .Encoding );
}else if _bfgde ._ecbc !=nil {_cgga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfgde ._ecbc .ToPdfObject ());};if _bfgde .DescendantFont !=nil {_cgga .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_db .MakeArray (_bfgde .DescendantFont .ToPdfObject ()));
};return _bfgde ._cbabg ;};

// ToPdfObject returns a stream object.
func (_gcdcg *XObjectForm )ToPdfObject ()_db .PdfObject {_gefff :=_gcdcg ._abddd ;_ceeeb :=_gefff .PdfObjectDictionary ;if _gcdcg .Filter !=nil {_ceeeb =_gcdcg .Filter .MakeStreamDict ();_gefff .PdfObjectDictionary =_ceeeb ;};_ceeeb .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ceeeb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0046\u006f\u0072\u006d"));_ceeeb .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gcdcg .FormType );_ceeeb .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gcdcg .BBox );_ceeeb .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gcdcg .Matrix );
if _gcdcg .Resources !=nil {_ceeeb .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gcdcg .Resources .ToPdfObject ());};_ceeeb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gcdcg .Group );_ceeeb .SetIfNotNil ("\u0052\u0065\u0066",_gcdcg .Ref );
_ceeeb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gcdcg .MetaData );_ceeeb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gcdcg .PieceInfo );_ceeeb .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gcdcg .LastModified );
_ceeeb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gcdcg .StructParent );_ceeeb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gcdcg .StructParents );_ceeeb .SetIfNotNil ("\u004f\u0050\u0049",_gcdcg .OPI );
_ceeeb .SetIfNotNil ("\u004f\u0043",_gcdcg .OC );_ceeeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcdcg .Name );_ceeeb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_db .MakeInteger (int64 (len (_gcdcg .Stream ))));_gefff .Stream =_gcdcg .Stream ;return _gefff ;
};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fdfg :=NewPdfAnnotation ();_gfa :=&PdfAnnotationPolygon {};_gfa .PdfAnnotation =_fdfg ;_gfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdfg .SetContext (_gfa );return _gfa ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bafaf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bafaf ._gfeg !=nil {return _bafaf ._gfeg ,nil ;};if _bafaf .Annots ==nil {_bafaf ._gfeg =[]*PdfAnnotation {};return nil ,nil ;};if _bafaf ._eedb ==nil {_bafaf ._gfeg =[]*PdfAnnotation {};
return nil ,nil ;};_cgae ,_faecg :=_bafaf ._eedb .loadAnnotations (_bafaf .Annots );if _faecg !=nil {return nil ,_faecg ;};if _cgae ==nil {_bafaf ._gfeg =[]*PdfAnnotation {};};_bafaf ._gfeg =_cgae ;return _bafaf ._gfeg ,nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};


// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_edbg .Lock ();defer _edbg .Unlock ();_bbdae =keywords };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_faaf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _cdade ,_eeeed :=range _faaf ._ededa {_faaf ._ededa [_cdade ]=mapFunc (_eeeed );};};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_egfg *Image )SetSamples (samples []uint32 ){if _egfg .BitsPerComponent < 8{samples =_egfg .samplesAddPadding (samples );};_ecgb :=_cga .ResampleUint32 (samples ,int (_egfg .BitsPerComponent ),8);_cedgg :=make ([]byte ,len (_ecgb ));for _fgdce ,_gbbbg :=range _ecgb {_cedgg [_fgdce ]=byte (_gbbbg );
};_egfg .Data =_cedgg ;};

// AddFont adds a font dictionary to the Font resources.
func (_cefbe *PdfPage )AddFont (name _db .PdfObjectName ,font _db .PdfObject )error {if _cefbe .Resources ==nil {_cefbe .Resources =NewPdfPageResources ();};if _cefbe .Resources .Font ==nil {_cefbe .Resources .Font =_db .MakeDict ();};_aaebc ,_fgbec :=_db .TraceToDirectObject (_cefbe .Resources .Font ).(*_db .PdfObjectDictionary );
if !_fgbec {_gd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_db .TraceToDirectObject (_cefbe .Resources .Font ));
return _f .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaebc .Set (name ,font );return nil ;};func (_cfabg *PdfWriter )addObjects (_aaaca _db .PdfObject )error {_gd .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _fdaag ,_acgae :=_aaaca .(*_db .PdfIndirectObject );_acgae {_gd .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_gd .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_aaaca ,_fdaag );_gd .Log .Trace ("\u002d\u0020\u0025\u0073",_fdaag .PdfObject );
if _cfabg .addObject (_fdaag ){_eggea :=_cfabg .addObjects (_fdaag .PdfObject );if _eggea !=nil {return _eggea ;};};return nil ;};if _agfba ,_gadfdd :=_aaaca .(*_db .PdfObjectStream );_gadfdd {_gd .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_gd .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_aaaca ,_aaaca );
if _cfabg .addObject (_agfba ){_gbgdg :=_cfabg .addObjects (_agfba .PdfObjectDictionary );if _gbgdg !=nil {return _gbgdg ;};};return nil ;};if _ecfeb ,_aebaca :=_aaaca .(*_db .PdfObjectDictionary );_aebaca {_gd .Log .Trace ("\u0044\u0069\u0063\u0074");
_gd .Log .Trace ("\u002d\u0020\u0025\u0073",_aaaca );for _ ,_cbefe :=range _ecfeb .Keys (){_gdabe :=_ecfeb .Get (_cbefe );if _aeedg ,_bfga :=_gdabe .(*_db .PdfObjectReference );_bfga {_gdabe =_aeedg .Resolve ();_ecfeb .Set (_cbefe ,_gdabe );};if _cbefe !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _begafb :=_cfabg .addObjects (_gdabe );
_begafb !=nil {return _begafb ;};}else {if _ ,_ebegc :=_gdabe .(*_db .PdfObjectNull );_ebegc {continue ;};if _efacc :=_cfabg .hasObject (_gdabe );!_efacc {_gd .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_gdabe ,_gdabe ,_gdabe );
_cfabg ._ccda [_gdabe ]=append (_cfabg ._ccda [_gdabe ],_ecfeb );};};};return nil ;};if _bfca ,_agbgdf :=_aaaca .(*_db .PdfObjectArray );_agbgdf {_gd .Log .Trace ("\u0041\u0072\u0072a\u0079");_gd .Log .Trace ("\u002d\u0020\u0025\u0073",_aaaca );if _bfca ==nil {return _f .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _dfebd ,_bcbde :=range _bfca .Elements (){if _aagca ,_aebbg :=_bcbde .(*_db .PdfObjectReference );_aebbg {_bcbde =_aagca .Resolve ();_bfca .Set (_dfebd ,_bcbde );};if _gddgg :=_cfabg .addObjects (_bcbde );_gddgg !=nil {return _gddgg ;};};return nil ;
};if _ ,_abffd :=_aaaca .(*_db .PdfObjectReference );_abffd {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_aaaca );
return _f .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dac *PdfActionNamed )ToPdfObject ()_db .PdfObject {_dac .PdfAction .ToPdfObject ();_ffd :=_dac ._bcc ;_fdc :=_ffd .PdfObject .(*_db .PdfObjectDictionary );_fdc .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeNamed )));_fdc .SetIfNotNil ("\u004e",_dac .N );
return _ffd ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_eedddd *PdfFont )ToPdfObject ()_db .PdfObject {if _eedddd ._fdcca ==nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _db .MakeNull ();
};return _eedddd ._fdcca .ToPdfObject ();};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cbbdc FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cbbdc .Mask ()|fl .Mask ())};

// Y returns the value of the yellow component of the color.
func (_gdaa *PdfColorDeviceCMYK )Y ()float64 {return _gdaa [2]};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cafdea DefaultImageHandler )NewGrayImageFromGoImage (goimg _ad .Image )(*Image ,error ){_fcfag :=goimg .Bounds ();_fedf :=&Image {Width :int64 (_fcfag .Dx ()),Height :int64 (_fcfag .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _aafc :=goimg .(type ){case *_ad .Gray :if len (_aafc .Pix )!=_fcfag .Dx ()*_fcfag .Dy (){_cbgcg ,_eadfd :=_fg .GrayConverter .Convert (goimg );
if _eadfd !=nil {return nil ,_eadfd ;};_fedf .Data =_cbgcg .Pix ();}else {_fedf .Data =_aafc .Pix ;};case *_ad .Gray16 :_fedf .BitsPerComponent =16;if len (_aafc .Pix )!=_fcfag .Dx ()*_fcfag .Dy ()*2{_eabg ,_acfcf :=_fg .Gray16Converter .Convert (goimg );
if _acfcf !=nil {return nil ,_acfcf ;};_fedf .Data =_eabg .Pix ();}else {_fedf .Data =_aafc .Pix ;};case _fg .Image :_agdfb :=_aafc .Base ();if _agdfb .ColorComponents ==1{_fedf .BitsPerComponent =int64 (_agdfb .BitsPerComponent );_fedf .Data =_agdfb .Data ;
return _fedf ,nil ;};_fdbda ,_badge :=_fg .GrayConverter .Convert (goimg );if _badge !=nil {return nil ,_badge ;};_fedf .Data =_fdbda .Pix ();default:_dcgag ,_dbbfc :=_fg .GrayConverter .Convert (goimg );if _dbbfc !=nil {return nil ,_dbbfc ;};_fedf .Data =_dcgag .Pix ();
};return _fedf ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_daadg *PdfPageResources )GetPatternByName (keyName _db .PdfObjectName )(*PdfPattern ,bool ){if _daadg .Pattern ==nil {return nil ,false ;};_adagb ,_acbaa :=_db .TraceToDirectObject (_daadg .Pattern ).(*_db .PdfObjectDictionary );if !_acbaa {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_daadg .Pattern );
return nil ,false ;};if _ccce :=_adagb .Get (keyName );_ccce !=nil {_gafcg ,_ggee :=_bdfdb (_ccce );if _ggee !=nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_ggee );
return nil ,false ;};return _gafcg ,true ;};return nil ,false ;};func (_dbafc *PdfWriter )copyObjects (){_gebfa :=make (map[_db .PdfObject ]_db .PdfObject );_fcgbc :=make ([]_db .PdfObject ,0,len (_dbafc ._fadge ));_cdbcf :=make (map[_db .PdfObject ]struct{},len (_dbafc ._fadge ));
_agdbb :=make (map[_db .PdfObject ]struct{});for _ ,_faecgd :=range _dbafc ._fadge {_agabee :=_dbafc .copyObject (_faecgd ,_gebfa ,_agdbb ,false );if _ ,_cfgaae :=_agdbb [_faecgd ];_cfgaae {continue ;};_fcgbc =append (_fcgbc ,_agabee );_cdbcf [_agabee ]=struct{}{};
};_dbafc ._fadge =_fcgbc ;_dbafc ._fdef =_cdbcf ;_dbafc ._dggb =_dbafc .copyObject (_dbafc ._dggb ,_gebfa ,nil ,false ).(*_db .PdfIndirectObject );_dbafc ._efeda =_dbafc .copyObject (_dbafc ._efeda ,_gebfa ,nil ,false ).(*_db .PdfIndirectObject );if _dbafc ._bbaea !=nil {_dbafc ._bbaea =_dbafc .copyObject (_dbafc ._bbaea ,_gebfa ,nil ,false ).(*_db .PdfIndirectObject );
};if _dbafc ._gcabf {_acddg :=make (map[_db .PdfObject ]int64 );for _cegfb ,_agddg :=range _dbafc ._caee {if _cadcd ,_fgbgd :=_gebfa [_cegfb ];_fgbgd {_acddg [_cadcd ]=_agddg ;}else {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_dbafc ._caee =_acddg ;};};func (_agbb *PdfReader )newPdfAnnotation3DFromDict (_dgac *_db .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_dbe :=PdfAnnotation3D {};_dbe .T3DD =_dgac .Get ("\u0033\u0044\u0044");_dbe .T3DV =_dgac .Get ("\u0033\u0044\u0056");
_dbe .T3DA =_dgac .Get ("\u0033\u0044\u0041");_dbe .T3DI =_dgac .Get ("\u0033\u0044\u0049");_dbe .T3DB =_dgac .Get ("\u0033\u0044\u0042");return &_dbe ,nil ;};func (_daff *pdfFontType3 )baseFields ()*fontCommon {return &_daff .fontCommon };func _gdcdf (_dgdddf *[]*PdfField ,_cdgb FieldFilterFunc ,_gafbg bool )[]*PdfField {if _dgdddf ==nil {return nil ;
};_efab :=*_dgdddf ;if len (*_dgdddf )==0{return nil ;};_ggagb :=_efab [:0];if _cdgb ==nil {_cdgb =func (*PdfField )bool {return true };};var _cfdc []*PdfField ;for _ ,_fdfca :=range _efab {_bgabe :=_cdgb (_fdfca );if _bgabe {_cfdc =append (_cfdc ,_fdfca );
if len (_fdfca .Kids )> 0{_cfdc =append (_cfdc ,_gdcdf (&_fdfca .Kids ,_cdgb ,_gafbg )...);};};if !_gafbg ||!_bgabe ||len (_fdfca .Kids )> 0{_ggagb =append (_ggagb ,_fdfca );};};*_dgdddf =_ggagb ;return _cfdc ;};func (_eac *PdfReader )newPdfActionGoTo3DViewFromDict (_edd *_db .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_edd .Get ("\u0054\u0041"),V :_edd .Get ("\u0056")},nil ;
};func _deceg (_fbegg *PdfField ,_dfcc _db .PdfObject )error {switch _fbegg .GetContext ().(type ){case *PdfFieldText :switch _aceb :=_dfcc .(type ){case *_db .PdfObjectName :_ddga :=_aceb ;_gd .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ddga .String ());
_fbegg .V =_db .MakeEncodedString (_aceb .String (),true );case *_db .PdfObjectString :_fbegg .V =_db .MakeEncodedString (_aceb .String (),true );default:_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_aceb ,_aceb );
};case *PdfFieldButton :switch _dfcc .(type ){case *_db .PdfObjectName :if len (_dfcc .String ())> 0{_fbegg .V =_dfcc ;_eegfc (_fbegg ,_dfcc );};case *_db .PdfObjectString :if len (_dfcc .String ())> 0{_fbegg .V =_db .MakeName (_dfcc .String ());_eegfc (_fbegg ,_fbegg .V );
};default:_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_fbegg .PartialName (),_dfcc );_fbegg .V =_dfcc ;};case *PdfFieldChoice :switch _dfcc .(type ){case *_db .PdfObjectName :if len (_dfcc .String ())> 0{_fbegg .V =_db .MakeString (_dfcc .String ());
_eegfc (_fbegg ,_dfcc );};case *_db .PdfObjectString :if len (_dfcc .String ())> 0{_fbegg .V =_dfcc ;_eegfc (_fbegg ,_db .MakeName (_dfcc .String ()));};default:_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_fbegg .PartialName (),_dfcc );
_fbegg .V =_dfcc ;};case *PdfFieldSignature :_gd .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_fbegg .PartialName (),_dfcc );
};return nil ;};func (_edbcb *DSS )generateHashMaps ()error {_cfgg ,_ccff :=_edbcb .generateHashMap (_edbcb .Certs );if _ccff !=nil {return _ccff ;};_efce ,_ccff :=_edbcb .generateHashMap (_edbcb .OCSPs );if _ccff !=nil {return _ccff ;};_ggdb ,_ccff :=_edbcb .generateHashMap (_edbcb .CRLs );
if _ccff !=nil {return _ccff ;};_edbcb ._gcgac =_cfgg ;_edbcb ._fadeb =_efce ;_edbcb ._fcdf =_ggdb ;return nil ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_dcbg *PdfFieldButton )SetType (btype ButtonType ){_baac :=uint32 (0);if _dcbg .Ff !=nil {_baac =uint32 (*_dcbg .Ff );};switch btype {case ButtonTypePush :_baac |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_baac |=FieldFlagRadio .Mask ();
};_dcbg .Ff =_db .MakeInteger (int64 (_baac ));};

// AddCustomInfo adds a custom info into document info dictionary.
func (_cgcaf *PdfInfo )AddCustomInfo (name string ,value string )error {if _cgcaf ._eccbf ==nil {_cgcaf ._eccbf =_db .MakeDict ();};if _ ,_fabe :=_aaged [name ];_fabe {return _g .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_cgcaf ._eccbf .SetIfNotNil (*_db .MakeName (name ),_db .MakeString (value ));return nil ;};func (_egfcb *PdfReader )newPdfFieldSignatureFromDict (_gacd *_db .PdfObjectDictionary )(*PdfFieldSignature ,error ){_fdgg :=&PdfFieldSignature {};_daegg ,_accgb :=_db .GetIndirect (_gacd .Get ("\u0056"));
if _accgb {var _efaf error ;_fdgg .V ,_efaf =_egfcb .newPdfSignatureFromIndirect (_daegg );if _efaf !=nil {return nil ,_efaf ;};};_fdgg .Lock ,_ =_db .GetIndirect (_gacd .Get ("\u004c\u006f\u0063\u006b"));_fdgg .SV ,_ =_db .GetIndirect (_gacd .Get ("\u0053\u0056"));
return _fdgg ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ef *PdfAction )GetContext ()PdfModel {if _ef ==nil {return nil ;};return _ef ._dbc ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cdfg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_db .PdfObject {_agaf :=_db .MakeDict ();if _cdfg .Subtype !=nil {_agaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cdfg .Subtype );};_agaf .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cdfg .Colorants );
_agaf .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cdfg .Process );_agaf .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cdfg .MixingHints );if _cdfg ._bbeec !=nil {_cdfg ._bbeec .PdfObject =_agaf ;return _cdfg ._bbeec ;
};return _agaf ;};

// ToPdfObject returns the PDF representation of the function.
func (_dedag *PdfFunctionType2 )ToPdfObject ()_db .PdfObject {_fbafed :=_db .MakeDict ();_fbafed .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_db .MakeInteger (2));_dafa :=&_db .PdfObjectArray {};for _ ,_dcgg :=range _dedag .Domain {_dafa .Append (_db .MakeFloat (_dcgg ));
};_fbafed .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dafa );if _dedag .Range !=nil {_ggaca :=&_db .PdfObjectArray {};for _ ,_abbce :=range _dedag .Range {_ggaca .Append (_db .MakeFloat (_abbce ));};_fbafed .Set ("\u0052\u0061\u006eg\u0065",_ggaca );
};if _dedag .C0 !=nil {_ddbb :=&_db .PdfObjectArray {};for _ ,_caac :=range _dedag .C0 {_ddbb .Append (_db .MakeFloat (_caac ));};_fbafed .Set ("\u0043\u0030",_ddbb );};if _dedag .C1 !=nil {_dgeeg :=&_db .PdfObjectArray {};for _ ,_dafff :=range _dedag .C1 {_dgeeg .Append (_db .MakeFloat (_dafff ));
};_fbafed .Set ("\u0043\u0031",_dgeeg );};_fbafed .Set ("\u004e",_db .MakeFloat (_dedag .N ));if _dedag ._gafac !=nil {_dedag ._gafac .PdfObject =_fbafed ;return _dedag ._gafac ;};return _fbafed ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_bfdf *Image )ColorAt (x ,y int )(_bb .Color ,error ){_ccac :=_fg .BytesPerLine (int (_bfdf .Width ),int (_bfdf .BitsPerComponent ),_bfdf .ColorComponents );switch _bfdf .ColorComponents {case 1:return _fg .ColorAtGrayscale (x ,y ,int (_bfdf .BitsPerComponent ),_ccac ,_bfdf .Data ,_bfdf ._ffga );
case 3:return _fg .ColorAtNRGBA (x ,y ,int (_bfdf .Width ),_ccac ,int (_bfdf .BitsPerComponent ),_bfdf .Data ,_bfdf ._ededa ,_bfdf ._ffga );case 4:return _fg .ColorAtCMYK (x ,y ,int (_bfdf .Width ),_bfdf .Data ,_bfdf ._ffga );};_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfdf .ColorComponents ,_bfdf .BitsPerComponent );
return nil ,_f .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_fceb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _f .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dagcb :=field .V ;if _dagcb ==nil {return _f .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bebeb :=pageNum -1;
if _bebeb < 0||_bebeb > len (_fceb ._afb )-1{return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ggeb :=_fceb .Reader .PageList [_bebeb ];field .P =_ggeb .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_db .MakeString (_g .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_ggeb .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _fceb ._edce ==_fceb ._effb .AcroForm {_fceb ._edce =_fceb .Reader .AcroForm ;};_dbcb :=_fceb ._edce ;if _dbcb ==nil {_dbcb =NewPdfAcroForm ();};_dbcb .SigFlags =_db .MakeInteger (3);
_edae :=append (_dbcb .AllFields (),field .PdfField );_dbcb .Fields =&_edae ;_fceb .ReplaceAcroForm (_dbcb );_fceb .UpdatePage (_ggeb );_fceb ._afb [_bebeb ]=_ggeb ;return nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _db .PdfObject ;PreserveRB _db .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbcc *PdfShadingType5 )ToPdfObject ()_db .PdfObject {_fbcc .PdfShading .ToPdfObject ();_gbfbf ,_aecfg :=_fbcc .getShadingDict ();if _aecfg !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbcc .BitsPerCoordinate !=nil {_gbfbf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbcc .BitsPerCoordinate );};if _fbcc .BitsPerComponent !=nil {_gbfbf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbcc .BitsPerComponent );
};if _fbcc .VerticesPerRow !=nil {_gbfbf .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fbcc .VerticesPerRow );};if _fbcc .Decode !=nil {_gbfbf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbcc .Decode );};if _fbcc .Function !=nil {if len (_fbcc .Function )==1{_gbfbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbcc .Function [0].ToPdfObject ());
}else {_adgfa :=_db .MakeArray ();for _ ,_afaab :=range _fbcc .Function {_adgfa .Append (_afaab .ToPdfObject ());};_gbfbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adgfa );};};return _fbcc ._eccbgb ;};func _bebffb (_bgefe _db .PdfObject )(string ,error ){_bgefe =_db .TraceToDirectObject (_bgefe );
switch _cbdga :=_bgefe .(type ){case *_db .PdfObjectString :return _cbdga .Str (),nil ;case *_db .PdfObjectStream :_gbcda ,_dcaec :=_db .DecodeStream (_cbdga );if _dcaec !=nil {return "",_dcaec ;};return string (_gbcda ),nil ;};return "",_g .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_bgefe );
};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_egegc *PdfPageResources )GetFontByName (keyName _db .PdfObjectName )(_db .PdfObject ,bool ){if _egegc .Font ==nil {return nil ,false ;};_ecbfa ,_cdcg :=_db .TraceToDirectObject (_egegc .Font ).(*_db .PdfObjectDictionary );if !_cdcg {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_db .TraceToDirectObject (_egegc .Font ));
return nil ,false ;};if _edaggb :=_ecbfa .Get (keyName );_edaggb !=nil {return _edaggb ,true ;};return nil ,false ;};func (_eabfd *PdfAcroForm )fill (_bdddd FieldValueProvider ,_edbdb FieldAppearanceGenerator )error {if _eabfd ==nil {return nil ;};_feag ,_fdag :=_bdddd .FieldValues ();
if _fdag !=nil {return _fdag ;};for _ ,_edcdf :=range _eabfd .AllFields (){_gbbfd :=_edcdf .PartialName ();_beebg ,_bacfb :=_feag [_gbbfd ];if !_bacfb {if _ebed ,_ddfeg :=_edcdf .FullName ();_ddfeg ==nil {_beebg ,_bacfb =_feag [_ebed ];};};if !_bacfb {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gbbfd );
continue ;};if _dcdeb :=_deceg (_edcdf ,_beebg );_dcdeb !=nil {return _dcdeb ;};if _edbdb ==nil {continue ;};for _ ,_faegf :=range _edcdf .Annotations {_aabd ,_bege :=_edbdb .GenerateAppearanceDict (_eabfd ,_edcdf ,_faegf );if _bege !=nil {return _bege ;
};_faegf .AP =_aabd ;_faegf .ToPdfObject ();};};return nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gagab *PdfOutlineTreeNode )GetContext ()PdfModel {if _ecdgb ,_bcadc :=_gagab ._fcbe .(*PdfOutline );_bcadc {return _ecdgb ;};if _ccgad ,_bffd :=_gagab ._fcbe .(*PdfOutlineItem );_bffd {return _ccgad ;};_gd .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;};

// ToInteger convert to an integer format.
func (_dceeg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_ggaf :=_ae .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ggaf *_dceeg .R ()),uint32 (_ggaf *_dceeg .G ()),uint32 (_ggaf *_dceeg .B ())};};func (_fgfd *PdfReader )newPdfOutlineItemFromIndirectObject (_fcfc *_db .PdfIndirectObject )(*PdfOutlineItem ,error ){_febea ,_fgfc :=_fcfc .PdfObject .(*_db .PdfObjectDictionary );
if !_fgfc {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fedgd :=NewPdfOutlineItem ();_gbdg :=_febea .Get ("\u0054\u0069\u0074l\u0065");
if _gbdg ==nil {return nil ,_g .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_cegae ,_agbge :=_db .GetString (_gbdg );if !_agbge {return nil ,_g .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gbdg );};_fedgd .Title =_cegae ;if _abbcb :=_febea .Get ("\u0043\u006f\u0075n\u0074");
_abbcb !=nil {_aegg ,_ceggb :=_abbcb .(*_db .PdfObjectInteger );if !_ceggb {return nil ,_g .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_abbcb );};_dbfbe :=int64 (*_aegg );
_fedgd .Count =&_dbfbe ;};if _gffgb :=_febea .Get ("\u0044\u0065\u0073\u0074");_gffgb !=nil {_fedgd .Dest =_db .ResolveReference (_gffgb );if !_fgfd ._cbfe {_aebg :=_fgfd .traverseObjectData (_fedgd .Dest );if _aebg !=nil {return nil ,_aebg ;};};};if _becbg :=_febea .Get ("\u0041");
_becbg !=nil {_fedgd .A =_db .ResolveReference (_becbg );if !_fgfd ._cbfe {_ecefbe :=_fgfd .traverseObjectData (_fedgd .A );if _ecefbe !=nil {return nil ,_ecefbe ;};};};if _bbaef :=_febea .Get ("\u0053\u0045");_bbaef !=nil {_fedgd .SE =nil ;};if _dfabc :=_febea .Get ("\u0043");
_dfabc !=nil {_fedgd .C =_db .ResolveReference (_dfabc );};if _gcec :=_febea .Get ("\u0046");_gcec !=nil {_fedgd .F =_db .ResolveReference (_gcec );};return _fedgd ,nil ;};func (_gebbg *LTV )generateVRIKey (_dfada *PdfSignature )(string ,error ){_egbcde ,_cdgba :=_fcdg (_dfada .Contents .Bytes ());
if _cdgba !=nil {return "",_cdgba ;};return _cf .ToUpper (_gf .EncodeToString (_egbcde )),nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _db .PdfObject ;RichMediaContent _db .PdfObject ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cecbea *Image )ConvertToBinary ()error {if _cecbea .ColorComponents ==1&&_cecbea .BitsPerComponent ==1{return nil ;};_fbdg ,_gfbe :=_cecbea .ToGoImage ();if _gfbe !=nil {return _gfbe ;};_cbdac ,_gfbe :=_fg .MonochromeConverter .Convert (_fbdg );
if _gfbe !=nil {return _gfbe ;};_cecbea .Data =_cbdac .Base ().Data ;_cecbea ._ededa ,_gfbe =_fg .ScaleAlphaToMonochrome (_cecbea ._ededa ,int (_cecbea .Width ),int (_cecbea .Height ));if _gfbe !=nil {return _gfbe ;};_cecbea .BitsPerComponent =1;_cecbea .ColorComponents =1;
_cecbea ._ffga =nil ;return nil ;};

// WriteString outputs the object as it is to be written to file.
func (_ddfcc *pdfSignDictionary )WriteString ()string {_ddfcc ._aafed =0;_ddfcc ._febbf =0;_ddfcc ._aebfde =0;_ddfcc ._fefa =0;_ebgdc :=_cfg .NewBuffer (nil );_ebgdc .WriteString ("\u003c\u003c");for _ ,_bfeaa :=range _ddfcc .Keys (){_cgfef :=_ddfcc .Get (_bfeaa );
switch _bfeaa {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ebgdc .WriteString (_bfeaa .WriteString ());_ebgdc .WriteString ("\u0020");_ddfcc ._aebfde =_ebgdc .Len ();_ebgdc .WriteString (_cgfef .WriteString ());_ebgdc .WriteString ("\u0020");_ddfcc ._fefa =_ebgdc .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ebgdc .WriteString (_bfeaa .WriteString ());_ebgdc .WriteString ("\u0020");_ddfcc ._aafed =_ebgdc .Len ();_ebgdc .WriteString (_cgfef .WriteString ());_ebgdc .WriteString ("\u0020");_ddfcc ._febbf =_ebgdc .Len ()-1;
default:_ebgdc .WriteString (_bfeaa .WriteString ());_ebgdc .WriteString ("\u0020");_ebgdc .WriteString (_cgfef .WriteString ());};};_ebgdc .WriteString ("\u003e\u003e");return _ebgdc .String ();};

// Evaluate runs the function on the passed in slice and returns the results.
func (_defbe *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dcfeg :=[]float64 {0.0};if _defbe .C0 !=nil {_dcfeg =_defbe .C0 ;};_gcbc :=[]float64 {1.0};if _defbe .C1 !=nil {_gcbc =_defbe .C1 ;};var _aagfg []float64 ;for _dacg :=0;_dacg < len (_dcfeg );_dacg ++{_gbdf :=_dcfeg [_dacg ]+_ae .Pow (x [0],_defbe .N )*(_gcbc [_dacg ]-_dcfeg [_dacg ]);
_aagfg =append (_aagfg ,_gbdf );};return _aagfg ,nil ;};func _acgbd ()string {_edbg .Lock ();defer _edbg .Unlock ();_dfcgbe :=_def .GetLicenseKey ();if len (_fdfbf )> 0&&(_dfcgbe .IsLicensed ()||_afceae ){return _fdfbf ;};return _g .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_geag (),_dfcgbe .TypeToString ());
};

// ToPdfObject implements interface PdfModel.
func (_dbca *PdfActionSound )ToPdfObject ()_db .PdfObject {_dbca .PdfAction .ToPdfObject ();_ede :=_dbca ._bcc ;_ddg :=_ede .PdfObject .(*_db .PdfObjectDictionary );_ddg .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeSound )));_ddg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dbca .Sound );
_ddg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_dbca .Volume );_ddg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_dbca .Synchronous );_ddg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dbca .Repeat );
_ddg .SetIfNotNil ("\u004d\u0069\u0078",_dbca .Mix );return _ede ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gfeb :=NewPdfAnnotation ();_gbeb :=&PdfAnnotation3D {};_gbeb .PdfAnnotation =_gfeb ;_gfeb .SetContext (_gbeb );return _gbeb ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fbdfd pdfCIDFontType2 )GetCharMetrics (code _fa .CharCode )(_acg .CharMetrics ,bool ){if _cfecb ,_acbe :=_fbdfd ._abgcd [code ];_acbe {return _acg .CharMetrics {Wx :_cfecb },true ;};_dffe :=rune (code );_adgd ,_ecabcg :=_fbdfd ._dfag [_dffe ];if !_ecabcg {_adgd =int (_fbdfd ._dcdgg );
};return _acg .CharMetrics {Wx :float64 (_adgd )},true ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_ecefb *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _ecefb .baseFields ()._dfff !=nil {return _ecefb .baseFields ()._dfff ;};if _abdb :=_ecefb ._fdcca .getFontDescriptor ();_abdb !=nil {return _abdb ;};_gd .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_ecefb );
return nil ;};func (_babbg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _babbg ._ceaabg .GetCrypter ()!=nil &&!_babbg ._ceaabg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cfbdg :=_babbg ._ebfee ;_addge :=_cfbdg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _addge ==nil {return nil ,nil ;};_gd .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ecce :=_db .ResolveReference (_addge );
_gd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ecce );if _gececa :=_db .IsNullObject (_ecce );_gececa {_gd .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_fcgf ,_cdgbc :=_ecce .(*_db .PdfIndirectObject );if !_cdgbc {if _ ,_bada :=_db .GetDict (_ecce );!_bada {_gd .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_gd .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_fcgf =_db .MakeIndirectObject (_ecce );};_fcgae ,_cdgbc :=_fcgf .PdfObject .(*_db .PdfObjectDictionary );if !_cdgbc {return nil ,_f .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_gd .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fcgae );_fdfgdc ,_ ,_aedf :=_babbg .buildOutlineTree (_fcgf ,nil ,nil ,nil );if _aedf !=nil {return nil ,_aedf ;};_gd .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_fdfgdc );
return _fdfgdc ,nil ;};func (_egdb *PdfReader )newPdfAcroFormFromDict (_cbcdg *_db .PdfIndirectObject ,_eabcg *_db .PdfObjectDictionary )(*PdfAcroForm ,error ){_abdfb :=NewPdfAcroForm ();if _cbcdg !=nil {_abdfb ._fbbe =_cbcdg ;_cbcdg .PdfObject =_db .MakeDict ();
};if _aagg :=_eabcg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_aagg !=nil {_bffae ,_gcaaf :=_db .GetArray (_aagg );if !_gcaaf {return nil ,_g .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_aagg );
};var _cbfa []*PdfField ;for _ ,_dfcdd :=range _bffae .Elements (){_bfef ,_bcgd :=_db .GetIndirect (_dfcdd );if !_bcgd {if _ ,_fbdff :=_dfcdd .(*_db .PdfObjectNull );_fbdff {_gd .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_gd .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dfcdd );
return nil ,_g .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dcfa ,_ddadc :=_egdb .newPdfFieldFromIndirectObject (_bfef ,nil );
if _ddadc !=nil {return nil ,_ddadc ;};_gd .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_dcfa );_cbfa =append (_cbfa ,_dcfa );};_abdfb .Fields =&_cbfa ;};if _babg :=_eabcg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_babg !=nil {_gbdb ,_cgfdg :=_db .GetBool (_babg );if _cgfdg {_abdfb .NeedAppearances =_gbdb ;}else {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_babg );
};};if _abadc :=_eabcg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_abadc !=nil {_eegf ,_bgfc :=_db .GetInt (_abadc );if _bgfc {_abdfb .SigFlags =_eegf ;}else {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abadc );
};};if _abdba :=_eabcg .Get ("\u0043\u004f");_abdba !=nil {_afabb ,_dbecf :=_db .GetArray (_abdba );if _dbecf {_abdfb .CO =_afabb ;}else {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_abdba );
};};if _dfaaf :=_eabcg .Get ("\u0044\u0052");_dfaaf !=nil {if _dabga ,_cfdb :=_db .GetDict (_dfaaf );_cfdb {_ffdg ,_ccef :=NewPdfPageResourcesFromDict (_dabga );if _ccef !=nil {_gd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ccef );
return nil ,_ccef ;};_abdfb .DR =_ffdg ;}else {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dfaaf );};};if _cfcbb :=_eabcg .Get ("\u0044\u0041");
_cfcbb !=nil {_fbcee ,_effaa :=_db .GetString (_cfcbb );if _effaa {_abdfb .DA =_fbcee ;}else {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cfcbb );
};};if _eacgg :=_eabcg .Get ("\u0051");_eacgg !=nil {_gggd ,_ecfac :=_db .GetInt (_eacgg );if _ecfac {_abdfb .Q =_gggd ;}else {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eacgg );
};};if _aaae :=_eabcg .Get ("\u0058\u0046\u0041");_aaae !=nil {_abdfb .XFA =_aaae ;};_abdfb .ToPdfObject ();return _abdfb ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_fecfc *PdfRectangle )ToPdfObject ()_db .PdfObject {return _db .MakeArray (_db .MakeFloat (_fecfc .Llx ),_db .MakeFloat (_fecfc .Lly ),_db .MakeFloat (_fecfc .Urx ),_db .MakeFloat (_fecfc .Ury ));};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_gc :=NewPdfAction ();_cfcb :=&PdfActionRendition {};_cfcb .PdfAction =_gc ;_gc .SetContext (_cfcb );return _cfcb ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_aefd DefaultImageHandler )NewImageFromGoImage (goimg _ad .Image )(*Image ,error ){_bfea ,_feeeb :=_fg .FromGoImage (goimg );if _feeeb !=nil {return nil ,_feeeb ;};_bfgbg :=_efdbf (_bfea .Base ());return &_bfgbg ,nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fdcca pdfFont };

// PartialName returns the partial name of the field.
func (_fee *PdfField )PartialName ()string {_dbec :="";if _fee .T !=nil {_dbec =_fee .T .Decoded ();}else {_gd .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _dbec ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_cgedbg *PdfField )IsTerminal ()bool {return len (_cgedbg .Kids )==0};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fdbba *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_ffdb *PdfWriter )SetRotation (rotate int64 )error {_cgage ,_defge :=_db .GetDict (_ffdb ._fbffe );if !_defge {return ErrTypeCheck ;};_cgage .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_db .MakeInteger (rotate ));return nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ToPdfObject implements interface PdfModel.
func (_fgg *PdfAnnotationRichMedia )ToPdfObject ()_db .PdfObject {_fgg .PdfAnnotation .ToPdfObject ();_eed :=_fgg ._addd ;_aggb :=_eed .PdfObject .(*_db .PdfObjectDictionary );_aggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_aggb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_fgg .RichMediaSettings );_aggb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_fgg .RichMediaContent );
return _eed ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_aadf *PdfPage )error ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ToPdfObject converts date to a PDF string object.
func (_ecfaf *PdfDate )ToPdfObject ()_db .PdfObject {_ecadb :=_g .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ecfaf ._fcae ,_ecfaf ._dcecg ,_ecfaf ._eggb ,_ecfaf ._accca ,_ecfaf ._aeac ,_ecfaf ._cabaa ,_ecfaf ._gdcdc ,_ecfaf ._gdgee ,_ecfaf ._bfdgb );
return _db .MakeString (_ecadb );};

// ToPdfObject implements interface PdfModel.
func (_adeea *PdfFilespec )ToPdfObject ()_db .PdfObject {_cdgg :=_adeea .getDict ();_cdgg .Clear ();_cdgg .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cdgg .SetIfNotNil ("\u0046\u0053",_adeea .FS );
_cdgg .SetIfNotNil ("\u0046",_adeea .F );_cdgg .SetIfNotNil ("\u0055\u0046",_adeea .UF );_cdgg .SetIfNotNil ("\u0044\u004f\u0053",_adeea .DOS );_cdgg .SetIfNotNil ("\u004d\u0061\u0063",_adeea .Mac );_cdgg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_adeea .Unix );
_cdgg .SetIfNotNil ("\u0049\u0044",_adeea .ID );_cdgg .SetIfNotNil ("\u0056",_adeea .V );_cdgg .SetIfNotNil ("\u0045\u0046",_adeea .EF );_cdgg .SetIfNotNil ("\u0052\u0046",_adeea .RF );_cdgg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_adeea .Desc );_cdgg .SetIfNotNil ("\u0043\u0049",_adeea .CI );
return _adeea ._cebda ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cgaf *PdfFieldButton )IsCheckbox ()bool {return _cgaf .GetType ()==ButtonTypeCheckbox };

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_adff *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_fcgcc :=_adff .GetContentStreamObjs ();wrapContents =wrapContents &&len (_fcgcc )> 0;_dgef :=_db .NewFlateEncoder ();_dfcgg :=_db .MakeArray ();if wrapContents {_deedg ,_ggdgg :=_db .MakeStream ([]byte ("\u0071\u000a"),_dgef );
if _ggdgg !=nil {return _ggdgg ;};_dfcgg .Append (_deedg );};_dfcgg .Append (_fcgcc ...);if wrapContents {_bcbef ,_bbded :=_db .MakeStream ([]byte ("\u000a\u0051\u000a"),_dgef );if _bbded !=nil {return _bbded ;};_dfcgg .Append (_bcbef );};_acaaf ,_gedec :=_db .MakeStream (cs ,_dgef );
if _gedec !=nil {return _gedec ;};_dfcgg .Append (_acaaf );_adff .Contents =_dfcgg ;return nil ;};func _aaea (_cbcg []byte )bool {if len (_cbcg )< 4{return true ;};for _ccgea :=range _cbcg [:4]{_edcggg :=rune (_ccgea );if !_d .Is (_d .ASCII_Hex_Digit ,_edcggg )&&!_d .IsSpace (_edcggg ){return true ;
};};return false ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_caeab pdfCIDFontType0 )GetRuneMetrics (r rune )(_acg .CharMetrics ,bool ){return _acg .CharMetrics {Wx :_caeab ._bgbde },true ;};

// ToPdfObject implements interface PdfModel.
func (_dgcg *PdfAnnotationLine )ToPdfObject ()_db .PdfObject {_dgcg .PdfAnnotation .ToPdfObject ();_bdgbe :=_dgcg ._addd ;_adce :=_bdgbe .PdfObject .(*_db .PdfObjectDictionary );_dgcg .PdfAnnotationMarkup .appendToPdfDictionary (_adce );_adce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u004c\u0069\u006e\u0065"));
_adce .SetIfNotNil ("\u004c",_dgcg .L );_adce .SetIfNotNil ("\u0042\u0053",_dgcg .BS );_adce .SetIfNotNil ("\u004c\u0045",_dgcg .LE );_adce .SetIfNotNil ("\u0049\u0043",_dgcg .IC );_adce .SetIfNotNil ("\u004c\u004c",_dgcg .LL );_adce .SetIfNotNil ("\u004c\u004c\u0045",_dgcg .LLE );
_adce .SetIfNotNil ("\u0043\u0061\u0070",_dgcg .Cap );_adce .SetIfNotNil ("\u0049\u0054",_dgcg .IT );_adce .SetIfNotNil ("\u004c\u004c\u004f",_dgcg .LLO );_adce .SetIfNotNil ("\u0043\u0050",_dgcg .CP );_adce .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dgcg .Measure );
_adce .SetIfNotNil ("\u0043\u004f",_dgcg .CO );return _bdgbe ;};func (_ggec *PdfReader )newPdfActionGotoFromDict (_bdf *_db .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bdf .Get ("\u0044")},nil ;};func (_ggdddg *XObjectImage )getParamsDict ()*_db .PdfObjectDictionary {_agfbg :=_db .MakeDict ();
_agfbg .Set ("\u0057\u0069\u0064t\u0068",_db .MakeInteger (*_ggdddg .Width ));_agfbg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_db .MakeInteger (*_ggdddg .Height ));_agfbg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_db .MakeInteger (int64 (_ggdddg .ColorSpace .GetNumComponents ())));
_agfbg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_db .MakeInteger (*_ggdddg .BitsPerComponent ));return _agfbg ;};

// ToPdfObject implements interface PdfModel.
func (_ecfc *PdfAnnotation3D )ToPdfObject ()_db .PdfObject {_ecfc .PdfAnnotation .ToPdfObject ();_dcc :=_ecfc ._addd ;_dcb :=_dcc .PdfObject .(*_db .PdfObjectDictionary );_dcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0033\u0044"));
_dcb .SetIfNotNil ("\u0033\u0044\u0044",_ecfc .T3DD );_dcb .SetIfNotNil ("\u0033\u0044\u0056",_ecfc .T3DV );_dcb .SetIfNotNil ("\u0033\u0044\u0041",_ecfc .T3DA );_dcb .SetIfNotNil ("\u0033\u0044\u0049",_ecfc .T3DI );_dcb .SetIfNotNil ("\u0033\u0044\u0042",_ecfc .T3DB );
return _dcc ;};

// ToPdfObject implements interface PdfModel.
func (_bdbf *PdfAnnotationPrinterMark )ToPdfObject ()_db .PdfObject {_bdbf .PdfAnnotation .ToPdfObject ();_bbda :=_bdbf ._addd ;_dgdb :=_bbda .PdfObject .(*_db .PdfObjectDictionary );_dgdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_dgdb .SetIfNotNil ("\u004d\u004e",_bdbf .MN );return _bbda ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_gdacf *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_beea :=_gdacf .actualFont ();if _beea ==nil {_gd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_gdacf ._fdcca );
return _acg .CharMetrics {},false ;};if _ebbb ,_aeedf :=_beea .GetRuneMetrics (r );_aeedf {return _ebbb ,true ;};if _eacdd ,_gagb :=_gdacf .GetFontDescriptor ();_gagb ==nil &&_eacdd !=nil {return _acg .CharMetrics {Wx :_eacdd ._cedf },true ;};_gd .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdacf );
return _acg .CharMetrics {},false ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_afcbg DefaultImageHandler )Read (reader _dg .Reader )(*Image ,error ){_cabf ,_ ,_adabf :=_ad .Decode (reader );if _adabf !=nil {_gd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_adabf );
return nil ,_adabf ;};return _afcbg .NewImageFromGoImage (_cabf );};func (_gead *PdfReader )newPdfAnnotationMovieFromDict (_daeb *_db .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_bagd :=PdfAnnotationMovie {};_bagd .T =_daeb .Get ("\u0054");_bagd .Movie =_daeb .Get ("\u004d\u006f\u0076i\u0065");
_bagd .A =_daeb .Get ("\u0041");return &_bagd ,nil ;};func (_gde *PdfReader )newPdfActionGotoEFromDict (_gfgc *_db .PdfObjectDictionary )(*PdfActionGoToE ,error ){_aea ,_ddf :=_ebae (_gfgc .Get ("\u0046"));if _ddf !=nil {return nil ,_ddf ;};return &PdfActionGoToE {D :_gfgc .Get ("\u0044"),NewWindow :_gfgc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gfgc .Get ("\u0054"),F :_aea },nil ;
};func (_dgaa *PdfReader )newPdfAnnotationMarkupFromDict (_cfede *_db .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bafe :=&PdfAnnotationMarkup {};if _agc :=_cfede .Get ("\u0054");_agc !=nil {_bafe .T =_agc ;};if _abga :=_cfede .Get ("\u0050\u006f\u0070u\u0070");
_abga !=nil {_cab ,_bbfa :=_abga .(*_db .PdfIndirectObject );if !_bbfa {if _ ,_abgb :=_abga .(*_db .PdfObjectNull );!_abgb {return nil ,_f .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_ffe ,_bgc :=_dgaa .newPdfAnnotationFromIndirectObject (_cab );if _bgc !=nil {return nil ,_bgc ;};if _ffe !=nil {_fbabb ,_ebf :=_ffe ._aeb .(*PdfAnnotationPopup );if !_ebf {return nil ,_f .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_bafe .Popup =_fbabb ;};};};if _fefc :=_cfede .Get ("\u0043\u0041");_fefc !=nil {_bafe .CA =_fefc ;};if _geg :=_cfede .Get ("\u0052\u0043");_geg !=nil {_bafe .RC =_geg ;};if _cacb :=_cfede .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_cacb !=nil {_bafe .CreationDate =_cacb ;};if _ffad :=_cfede .Get ("\u0049\u0052\u0054");_ffad !=nil {_bafe .IRT =_ffad ;};if _fgc :=_cfede .Get ("\u0053\u0075\u0062\u006a");_fgc !=nil {_bafe .Subj =_fgc ;};if _ffgf :=_cfede .Get ("\u0052\u0054");_ffgf !=nil {_bafe .RT =_ffgf ;
};if _ffgg :=_cfede .Get ("\u0049\u0054");_ffgg !=nil {_bafe .IT =_ffgg ;};if _gdcd :=_cfede .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_gdcd !=nil {_bafe .ExData =_gdcd ;};return _bafe ,nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func _gdfee (_affcbf _db .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gebff :=&PdfPageResourcesColorspaces {};
if _fcaga ,_fdbdaf :=_affcbf .(*_db .PdfIndirectObject );_fdbdaf {_gebff ._dgdgd =_fcaga ;_affcbf =_fcaga .PdfObject ;};_bfdea ,_dgea :=_db .GetDict (_affcbf );if !_dgea {return nil ,_f .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gebff .Names =[]string {};_gebff .Colorspaces =map[string ]PdfColorspace {};for _ ,_caffe :=range _bfdea .Keys (){_fgagg :=_bfdea .Get (_caffe );_gebff .Names =append (_gebff .Names ,string (_caffe ));_aeeee ,_cefed :=NewPdfColorspaceFromPdfObject (_fgagg );
if _cefed !=nil {return nil ,_cefed ;};_gebff .Colorspaces [string (_caffe )]=_aeeee ;};return _gebff ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_bgcb *PdfPageResources )SetShadingByName (keyName _db .PdfObjectName ,shadingObj _db .PdfObject )error {if _bgcb .Shading ==nil {_bgcb .Shading =_db .MakeDict ();};_dbgbc ,_fccae :=_bgcb .Shading .(*_db .PdfObjectDictionary );if !_fccae {return _db .ErrTypeError ;
};_dbgbc .Set (keyName ,shadingObj );return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_cbgg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=_cbgg .GetNumComponents (){return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dddd ,_bgba :=_db .GetNumbersAsFloat (objects );
if _bgba !=nil {return nil ,_bgba ;};return _cbgg .ColorFromFloats (_dddd );};func (_afdc *PdfReader )newPdfAnnotationPopupFromDict (_gcbe *_db .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_dcga :=PdfAnnotationPopup {};_dcga .Parent =_gcbe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_dcga .Open =_gcbe .Get ("\u004f\u0070\u0065\u006e");return &_dcga ,nil ;};func (_dfb *PdfReader )newPdfActionNamedFromDict (_efff *_db .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_efff .Get ("\u004e")},nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject returns the PDF representation of the page resources.
func (_bddc *PdfPageResources )ToPdfObject ()_db .PdfObject {_fdgca :=_bddc ._bffbb ;_fdgca .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bddc .ExtGState );if _bddc ._gcggg !=nil {_bddc .ColorSpace =_bddc ._gcggg .ToPdfObject ();};_fdgca .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bddc .ColorSpace );
_fdgca .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_bddc .Pattern );_fdgca .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bddc .Shading );_fdgca .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_bddc .XObject );_fdgca .SetIfNotNil ("\u0046\u006f\u006e\u0074",_bddc .Font );
_fdgca .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_bddc .ProcSet );_fdgca .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_bddc .Properties );return _fdgca ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_bgedd FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_bgedd .Mask ()&^fl .Mask ())};

// ToPdfObject implements interface PdfModel.
func (_abeb *PdfAnnotationFreeText )ToPdfObject ()_db .PdfObject {_abeb .PdfAnnotation .ToPdfObject ();_bbag :=_abeb ._addd ;_fdae :=_bbag .PdfObject .(*_db .PdfObjectDictionary );_abeb .PdfAnnotationMarkup .appendToPdfDictionary (_fdae );_fdae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fdae .SetIfNotNil ("\u0044\u0041",_abeb .DA );_fdae .SetIfNotNil ("\u0051",_abeb .Q );_fdae .SetIfNotNil ("\u0052\u0043",_abeb .RC );_fdae .SetIfNotNil ("\u0044\u0053",_abeb .DS );_fdae .SetIfNotNil ("\u0043\u004c",_abeb .CL );_fdae .SetIfNotNil ("\u0049\u0054",_abeb .IT );
_fdae .SetIfNotNil ("\u0042\u0045",_abeb .BE );_fdae .SetIfNotNil ("\u0052\u0044",_abeb .RD );_fdae .SetIfNotNil ("\u0042\u0053",_abeb .BS );_fdae .SetIfNotNil ("\u004c\u0045",_abeb .LE );return _bbag ;};func (_aebbb SignatureValidationResult )String ()string {var _cfgd _cfg .Buffer ;
_cfgd .WriteString (_g .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_aebbb .Name ));if _aebbb .Date ._fcae > 0{_cfgd .WriteString (_g .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_aebbb .Date .ToGoTime ().String ()));}else {_cfgd .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_aebbb .Reason )> 0{_cfgd .WriteString (_g .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_aebbb .Reason ));}else {_cfgd .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_aebbb .Location )> 0{_cfgd .WriteString (_g .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_aebbb .Location ));}else {_cfgd .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_aebbb .ContactInfo )> 0{_cfgd .WriteString (_g .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_aebbb .ContactInfo ));}else {_cfgd .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_cfgd .WriteString (_g .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_aebbb .Fields )));if _aebbb .IsSigned {_cfgd .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_cfgd .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _aebbb .IsVerified {_cfgd .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_cfgd .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _aebbb .IsTrusted {_cfgd .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_cfgd .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_aebbb .GeneralizedTime .IsZero (){_cfgd .WriteString (_g .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_aebbb .GeneralizedTime .String ()));
};return _cfgd .String ();};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dafcd *PdfFont )ToUnicode ()string {if _dafcd .baseFields ()._begaf ==nil {return "";};return _dafcd .baseFields ()._begaf .Name ();};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_agdb *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_agdb .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_agdb ._edce =acroForm ;};

// GetContentStream returns the pattern cell's content stream
func (_fcgeb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_bcgcb ,_ ,_fadb :=_fcgeb .GetContentStreamWithEncoder ();return _bcgcb ,_fadb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dbbc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dbbc .UnderlyingCS ==nil {return nil ,_f .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _dbbc .UnderlyingCS .ColorFromFloats (vals );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_defa *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_db .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddce ,_gegd :=_db .GetNumbersAsFloat (objects );
if _gegd !=nil {return nil ,_gegd ;};return _defa .ColorFromFloats (_ddce );};

// GetContentStream returns the XObject Form's content stream.
func (_ededd *XObjectForm )GetContentStream ()([]byte ,error ){_ffefcg ,_abdec :=_db .DecodeStream (_ededd ._abddd );if _abdec !=nil {return nil ,_abdec ;};return _ffefcg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbd *PdfActionRendition )ToPdfObject ()_db .PdfObject {_dbd .PdfAction .ToPdfObject ();_cc :=_dbd ._bcc ;_bg :=_cc .PdfObject .(*_db .PdfObjectDictionary );_bg .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeRendition )));_bg .SetIfNotNil ("\u0052",_dbd .R );
_bg .SetIfNotNil ("\u0041\u004e",_dbd .AN );_bg .SetIfNotNil ("\u004f\u0050",_dbd .OP );_bg .SetIfNotNil ("\u004a\u0053",_dbd .JS );return _cc ;};func _bdaaa ()string {_edbg .Lock ();defer _edbg .Unlock ();if len (_adfga )> 0{return _adfga ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _db .PdfObject ;Volume _db .PdfObject ;Synchronous _db .PdfObject ;Repeat _db .PdfObject ;Mix _db .PdfObject ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_ffff *PdfFont )CharcodesToStrings (charcodes []_fa .CharCode )([]string ,int ,int ){_bfbae :=_ffff .baseFields ();_ccge :=make ([]string ,0,len (charcodes ));_ceeca :=0;_gfae :=_ffff .Encoder ();if _gfae !=nil {switch _babe :=_gfae .(type ){case _fa .SimpleEncoder :_bbfbd :=_babe .BaseName ();
if _ ,_ddgd :=_acbg [_bbfbd ];_ddgd {for _ ,_daegc :=range charcodes {if _eggg ,_eaeg :=_gfae .CharcodeToRune (_daegc );_eaeg {_ccge =append (_ccge ,string (_eggg ));}else {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_daegc ,charcodes ,_bfbae .isCIDFont (),_ffff ,_gfae );
_ceeca ++;_ccge =append (_ccge ,_dc .MissingCodeString );};};return _ccge ,len (_ccge ),_ceeca ;};};};for _ ,_baebcf :=range charcodes {if _bfbae ._begaf !=nil {if _dedf ,_acag :=_bfbae ._begaf .CharcodeToUnicode (_dc .CharCode (_baebcf ));_acag {_ccge =append (_ccge ,_dedf );
continue ;};};if _gfae !=nil {if _edcg ,_bcdgb :=_gfae .CharcodeToRune (_baebcf );_bcdgb {_ccge =append (_ccge ,string (_edcg ));continue ;};};_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_baebcf ,charcodes ,_bfbae .isCIDFont (),_ffff ,_gfae );
_ceeca ++;_ccge =append (_ccge ,_dc .MissingCodeString );};if _ceeca !=0{_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_ceeca ,_ffff );
};return _ccge ,len (_ccge ),_ceeca ;};

// ToPdfObject implements interface PdfModel.
func (_cef *PdfActionGoToE )ToPdfObject ()_db .PdfObject {_cef .PdfAction .ToPdfObject ();_bf :=_cef ._bcc ;_gdf :=_bf .PdfObject .(*_db .PdfObjectDictionary );_gdf .SetIfNotNil ("\u0053",_db .MakeName (string (ActionTypeGoToE )));if _cef .F !=nil {_gdf .Set ("\u0046",_cef .F .ToPdfObject ());
};_gdf .SetIfNotNil ("\u0044",_cef .D );_gdf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cef .NewWindow );_gdf .SetIfNotNil ("\u0054",_cef .T );return _bf ;};

// IsShading specifies if the pattern is a shading pattern.
func (_bagfe *PdfPattern )IsShading ()bool {return _bagfe .PatternType ==2};func (_bgedg *DSS )add (_gecbd *[]*_db .PdfObjectStream ,_ggebc map[string ]*_db .PdfObjectStream ,_bbbb [][]byte )([]*_db .PdfObjectStream ,error ){_ecad :=make ([]*_db .PdfObjectStream ,0,len (_bbbb ));
for _ ,_daac :=range _bbbb {_bdede ,_bcbbd :=_fcdg (_daac );if _bcbbd !=nil {return nil ,_bcbbd ;};_cbcf ,_edag :=_ggebc [string (_bdede )];if !_edag {_cbcf ,_bcbbd =_db .MakeStream (_daac ,_db .NewRawEncoder ());if _bcbbd !=nil {return nil ,_bcbbd ;};
_ggebc [string (_bdede )]=_cbcf ;*_gecbd =append (*_gecbd ,_cbcf );};_ecad =append (_ecad ,_cbcf );};return _ecad ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_becf :=NewPdfAnnotation ();_bba :=&PdfAnnotationRedact {};_bba .PdfAnnotation =_becf ;_bba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_becf .SetContext (_bba );return _bba ;};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _db .PdfObject ;IC _db .PdfObject ;BE _db .PdfObject ;RD _db .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbgcd *PdfShadingType4 )ToPdfObject ()_db .PdfObject {_fbgcd .PdfShading .ToPdfObject ();_bdfce ,_egfgb :=_fbgcd .getShadingDict ();if _egfgb !=nil {_gd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbgcd .BitsPerCoordinate !=nil {_bdfce .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbgcd .BitsPerCoordinate );};if _fbgcd .BitsPerComponent !=nil {_bdfce .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbgcd .BitsPerComponent );
};if _fbgcd .BitsPerFlag !=nil {_bdfce .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fbgcd .BitsPerFlag );};if _fbgcd .Decode !=nil {_bdfce .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbgcd .Decode );};if _fbgcd .Function !=nil {if len (_fbgcd .Function )==1{_bdfce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbgcd .Function [0].ToPdfObject ());
}else {_dfacf :=_db .MakeArray ();for _ ,_ggfag :=range _fbgcd .Function {_dfacf .Append (_ggfag .ToPdfObject ());};_bdfce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dfacf );};};return _fbgcd ._eccbgb ;};func (_eccef *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _eccef ._ceaabg .GetCrypter ()!=nil &&!_eccef ._ceaabg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_afcagf :=_eccef ._ebfee ;_cdgdc :=_afcagf .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cdgdc ==nil {return nil ,nil ;};_bffca ,_ :=_db .GetIndirect (_cdgdc );_cdgdc =_db .TraceToDirectObject (_cdgdc );if _db .IsNullObject (_cdgdc ){_gd .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_baabd ,_adaae :=_db .GetDict (_cdgdc );if !_adaae {_gd .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cdgdc );_gd .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cdgdc );};_gd .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_gd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_eccef ._cbfe {_gcbcef :=_eccef .traverseObjectData (_baabd );
if _gcbcef !=nil {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gcbcef );
return nil ,_gcbcef ;};};_cadfd ,_eeaa :=_eccef .newPdfAcroFormFromDict (_bffca ,_baabd );if _eeaa !=nil {return nil ,_eeaa ;};return _cadfd ,nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_eadfc *OutlineItem )ToPdfObject ()_db .PdfObject {_deead ,_ :=_eadfc .ToPdfOutlineItem ();return _deead .ToPdfObject ();};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _db .PdfObject ;Open _db .PdfObject ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_efa :=NewPdfAction ();_bd :=&PdfActionGoTo {};_bd .PdfAction =_efa ;_efa .SetContext (_bd );return _bd ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_fgfed :=&PdfColorspaceDeviceN {};return _fgfed ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_bfdcd *PdfWriter )AddPage (page *PdfPage )error {const _faece ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ccbeg (page );_gfafbf :=page .ToPdfObject ();_gd .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_gd .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_gfafbf );_aafae ,_dfcgge :=_db .GetIndirect (_gfafbf );if !_dfcgge {return _f .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gd .Log .Trace ("\u0025\u0073",_aafae );_gd .Log .Trace ("\u0025\u0073",_aafae .PdfObject );_aagag ,_dfcgge :=_db .GetDict (_aafae .PdfObject );if !_dfcgge {return _f .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eddfd ,_dfcgge :=_db .GetName (_aagag .Get ("\u0054\u0079\u0070\u0065"));if !_dfcgge {return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_aagag .Get ("\u0054\u0079\u0070\u0065"));
};if _eddfd .String ()!="\u0050\u0061\u0067\u0065"{return _f .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_acaee :=[]_db .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_ggbbg ,_accef :=_db .GetIndirect (_aagag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gd .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_aagag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_accef );
for _accef {_gd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ggbbg );_dfee ,_feea :=_db .GetDict (_ggbbg .PdfObject );if !_feea {return _f .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_abde :=range _acaee {_gd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_abde );if _aagag .Get (_abde )!=nil {_gd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _bgfed :=_dfee .Get (_abde );_bgfed !=nil {_gd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_abde );_aagag .Set (_abde ,_bgfed );};};_ggbbg ,_accef =_db .GetIndirect (_dfee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_gd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dfee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_aagag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfdcd ._fbffe );_aafae .PdfObject =_aagag ;_dcagb ,_dfcgge :=_db .GetDict (_bfdcd ._fbffe .PdfObject );if !_dfcgge {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bacce ,_dfcgge :=_db .GetArray (_dcagb .Get ("\u004b\u0069\u0064\u0073"));if !_dfcgge {return _f .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bacce .Append (_aafae );_bfdcd ._bdbcb [_aagag ]=struct{}{};_eedg ,_dfcgge :=_db .GetInt (_dcagb .Get ("\u0043\u006f\u0075n\u0074"));if !_dfcgge {return _f .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_eedg =*_eedg +1;if page ._eedb ==nil {_agff :=_def .Track (_bfdcd ._afede ,_faece );if _agff !=nil {return _agff ;};}else {_ggba :=_def .Track (page ._eedb ._fecge ,_faece );if _ggba !=nil {return _ggba ;};};_bfdcd .addObject (_aafae );_dbcac :=_bfdcd .addObjects (_aagag );
if _dbcac !=nil {return _dbcac ;};return nil ;};func (_adgb *PdfField )inherit (_egbd func (*PdfField )bool )(bool ,error ){_adee :=map[*PdfField ]bool {};_eaaa :=false ;_bffb :=_adgb ;for _bffb !=nil {if _ ,_gcfed :=_adee [_bffb ];_gcfed {return false ,_f .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_eaeb :=_egbd (_bffb );if _eaeb {_eaaa =true ;break ;};_adee [_bffb ]=true ;_bffb =_bffb .Parent ;};return _eaaa ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_gaeg *PdfReader )newPdfActionJavaScriptFromDict (_dcg *_db .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_dcg .Get ("\u004a\u0053")},nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _db .PdfObject ;};func (_ccga *PdfReader )newPdfAnnotationLinkFromDict (_bbe *_db .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_ccgd :=PdfAnnotationLink {};_ccgd .A =_bbe .Get ("\u0041");
_ccgd .Dest =_bbe .Get ("\u0044\u0065\u0073\u0074");_ccgd .H =_bbe .Get ("\u0048");_ccgd .PA =_bbe .Get ("\u0050\u0041");_ccgd .QuadPoints =_bbe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ccgd .BS =_bbe .Get ("\u0042\u0053");
return &_ccgd ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_decda []byte ;_dbgdd []uint32 ;_afbcg *_db .PdfObjectStream ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_egac *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfad :=vals [0];if _gfad < 0.0||_gfad > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gaecg :=vals [1];if _gaecg < 0.0||_gaecg > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfe :=vals [2];if _abfe < 0.0||_abfe > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ggdd :=vals [3];if _ggdd < 0.0||_ggdd > 1.0{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agbad :=NewPdfColorDeviceCMYK (_gfad ,_gaecg ,_abfe ,_ggdd );return _agbad ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dgg *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_f .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgbf :=vals [0];if _fgbf < 0.0||_fgbf > 1.0{_gd .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _fgbf < 0.0{_fgbf =0.0;}else if _fgbf > 1.0{_fgbf =1.0;};return NewPdfColorDeviceGray (_fgbf ),nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fgfe *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_beeb :=_cga .NewReader (img .getBase ());_ceec :=_fg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cdgd :=_cga .NewWriter (_ceec );
_acaa :=_ae .Pow (2,float64 (img .BitsPerComponent ))-1;_fdgd :=make ([]uint32 ,3);var (_fefccf error ;_bdebf ,_cgfd ,_efbbg ,_bgfd ,_agdf ,_dfdc float64 ;);for {_fefccf =_beeb .ReadSamples (_fdgd );if _fefccf ==_dg .EOF {break ;}else if _fefccf !=nil {return img ,_fefccf ;
};_bdebf =float64 (_fdgd [0])/_acaa ;_cgfd =float64 (_fdgd [1])/_acaa ;_efbbg =float64 (_fdgd [2])/_acaa ;_bgfd =_fgfe .Matrix [0]*_ae .Pow (_bdebf ,_fgfe .Gamma [0])+_fgfe .Matrix [3]*_ae .Pow (_cgfd ,_fgfe .Gamma [1])+_fgfe .Matrix [6]*_ae .Pow (_efbbg ,_fgfe .Gamma [2]);
_agdf =_fgfe .Matrix [1]*_ae .Pow (_bdebf ,_fgfe .Gamma [0])+_fgfe .Matrix [4]*_ae .Pow (_cgfd ,_fgfe .Gamma [1])+_fgfe .Matrix [7]*_ae .Pow (_efbbg ,_fgfe .Gamma [2]);_dfdc =_fgfe .Matrix [2]*_ae .Pow (_bdebf ,_fgfe .Gamma [0])+_fgfe .Matrix [5]*_ae .Pow (_cgfd ,_fgfe .Gamma [1])+_fgfe .Matrix [8]*_ae .Pow (_efbbg ,_fgfe .Gamma [2]);
_bdebf =3.240479*_bgfd +-1.537150*_agdf +-0.498535*_dfdc ;_cgfd =-0.969256*_bgfd +1.875992*_agdf +0.041556*_dfdc ;_efbbg =0.055648*_bgfd +-0.204043*_agdf +1.057311*_dfdc ;_bdebf =_ae .Min (_ae .Max (_bdebf ,0),1.0);_cgfd =_ae .Min (_ae .Max (_cgfd ,0),1.0);
_efbbg =_ae .Min (_ae .Max (_efbbg ,0),1.0);_fdgd [0]=uint32 (_bdebf *_acaa );_fdgd [1]=uint32 (_cgfd *_acaa );_fdgd [2]=uint32 (_efbbg *_acaa );if _fefccf =_cdgd .WriteSamples (_fdgd );_fefccf !=nil {return img ,_fefccf ;};};return _efdbf (&_ceec ),nil ;
};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_db .PdfObject ;GetContainingPdfObject ()_db .PdfObject ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_cagf :=NewPdfAnnotation ();_cggg :=&PdfAnnotationFileAttachment {};_cggg .PdfAnnotation =_cagf ;_cggg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cagf .SetContext (_cggg );return _cggg ;
};func _ebae (_bdgb _db .PdfObject )(*PdfFilespec ,error ){if _bdgb ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_bdgb );};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_eadbg :=&XObjectForm {};_cgggc :=&_db .PdfObjectStream {};_cgggc .PdfObjectDictionary =_db .MakeDict ();_eadbg ._abddd =_cgggc ;return _eadbg ;};func _feafa (_geae *_db .PdfObjectArray )(float64 ,error ){_cddaa ,_eegg :=_geae .ToFloat64Array ();
if _eegg !=nil {_gd .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_geae ,_eegg );};switch len (_cddaa ){case 1:return _cddaa [0],nil ;
case 3:_cedbd :=PdfColorspaceDeviceRGB {};_ecefg ,_aafeb :=_cedbd .ColorFromFloats (_cddaa );if _aafeb !=nil {return 0.0,_aafeb ;};return _ecefg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_ccafa :=PdfColorspaceDeviceCMYK {};_adbded ,_abbabe :=_ccafa .ColorFromFloats (_cddaa );
if _abbabe !=nil {return 0.0,_abbabe ;};_egaff ,_abbabe :=_ccafa .ColorToRGB (_adbded .(*PdfColorDeviceCMYK ));if _abbabe !=nil {return 0.0,_abbabe ;};return _egaff .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_eegg =_f .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_gd .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_geae ,_eegg );return 0.0,_eegg ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_gdfb :=PdfPage {};_gdfb ._bgbaf =_db .MakeDict ();_gdfb .Resources =NewPdfPageResources ();_cbce :=_db .PdfIndirectObject {};_cbce .PdfObject =_gdfb ._bgbaf ;_gdfb ._gdcfd =&_cbce ;return &_gdfb ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_gfegf *PdfPageResourcesColorspaces )Set (key _db .PdfObjectName ,val PdfColorspace ){if _ ,_gebea :=_gfegf .Colorspaces [string (key )];!_gebea {_gfegf .Names =append (_gfegf .Names ,string (key ));};_gfegf .Colorspaces [string (key )]=val ;};func (_gbec *PdfAppender )mergeResources (_eccb ,_febb _db .PdfObject ,_efad map[_db .PdfObjectName ]_db .PdfObjectName )_db .PdfObject {if _febb ==nil &&_eccb ==nil {return nil ;
};if _febb ==nil {return _eccb ;};_dce ,_baeg :=_db .GetDict (_febb );if !_baeg {return _eccb ;};if _eccb ==nil {_aeag :=_db .MakeDict ();_aeag .Merge (_dce );return _febb ;};_bcf ,_baeg :=_db .GetDict (_eccb );if !_baeg {_gd .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_bcf =_db .MakeDict ();};for _ ,_bbac :=range _dce .Keys (){if _gecg ,_gebb :=_efad [_bbac ];_gebb {_bcf .Set (_gecg ,_dce .Get (_bbac ));}else {_bcf .Set (_bbac ,_dce .Get (_bbac ));};};return _bcf ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_dgba *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _dgba ._bdgea ==nil {_dgba ._bdgea =_fd .NewPSExecutor (_dgba .Program );};var _fcee []_fd .PSObject ;for _ ,_bgddec :=range xVec {_fcee =append (_fcee ,_fd .MakeReal (_bgddec ));
};_edgec ,_fdbag :=_dgba ._bdgea .Execute (_fcee );if _fdbag !=nil {return nil ,_fdbag ;};_cbffd ,_fdbag :=_fd .PSObjectArrayToFloat64Array (_edgec );if _fdbag !=nil {return nil ,_fdbag ;};return _cbffd ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_efeda *_db .PdfIndirectObject ;_fbffe *_db .PdfIndirectObject ;_bdbcb map[_db .PdfObject ]struct{};_fadge []_db .PdfObject ;_fdef map[_db .PdfObject ]struct{};_cgdcd []*_db .PdfIndirectObject ;_acdad *PdfOutlineTreeNode ;_egdad *_db .PdfObjectDictionary ;
_bcggc []_db .PdfObject ;_dggb *_db .PdfIndirectObject ;_decf *_c .Writer ;_eacdc int64 ;_aedbc error ;_bgfgc *_db .PdfCrypt ;_eggbb *_db .PdfObjectDictionary ;_bbaea *_db .PdfIndirectObject ;_eecdf *_db .PdfObjectArray ;_gaggf int ;_egfcf int ;_edcdg *bool ;
_ccda map[_db .PdfObject ][]*_db .PdfObjectDictionary ;_dcfce *PdfAcroForm ;_ebaec Optimizer ;_bccag map[int ]crossReference ;_adeef int64 ;ObjNumOffset int ;_gcabf bool ;_cbedb _db .XrefTable ;_ggef int64 ;_aebd int64 ;_caee map[_db .PdfObject ]int64 ;
_ggacaa map[_db .PdfObject ]struct{};_afede string ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gcbbd *PdfReader )GetNamedDestinations ()(_db .PdfObject ,error ){_cbfaf :=_db .ResolveReference (_gcbbd ._ebfee .Get ("\u004e\u0061\u006de\u0073"));if _cbfaf ==nil {return nil ,nil ;};if !_gcbbd ._cbfe {_ddda :=_gcbbd .traverseObjectData (_cbfaf );
if _ddda !=nil {return nil ,_ddda ;};};return _cbfaf ,nil ;};func _ebcd (_eaac _db .PdfObject )(*PdfColorspaceCalRGB ,error ){_adba :=NewPdfColorspaceCalRGB ();if _bdgd ,_dade :=_eaac .(*_db .PdfIndirectObject );_dade {_adba ._fcgc =_bdgd ;};_eaac =_db .TraceToDirectObject (_eaac );
_fdccc ,_bade :=_eaac .(*_db .PdfObjectArray );if !_bade {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdccc .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_eaac =_db .TraceToDirectObject (_fdccc .Get (0));_dgdd ,_bade :=_eaac .(*_db .PdfObjectName );if !_bade {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_dgdd !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_g .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_eaac =_db .TraceToDirectObject (_fdccc .Get (1));
_adbd ,_bade :=_eaac .(*_db .PdfObjectDictionary );if !_bade {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_eaac =_adbd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_eaac =_db .TraceToDirectObject (_eaac );_bafgb ,_bade :=_eaac .(*_db .PdfObjectArray );if !_bade {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _bafgb .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_fbbf ,_fbed :=_bafgb .GetAsFloat64Slice ();
if _fbed !=nil {return nil ,_fbed ;};_adba .WhitePoint =_fbbf ;_eaac =_adbd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _eaac !=nil {_eaac =_db .TraceToDirectObject (_eaac );_gfgg ,_cabce :=_eaac .(*_db .PdfObjectArray );if !_cabce {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _gfgg .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_adef ,_ceaaf :=_gfgg .GetAsFloat64Slice ();
if _ceaaf !=nil {return nil ,_ceaaf ;};_adba .BlackPoint =_adef ;};_eaac =_adbd .Get ("\u0047\u0061\u006dm\u0061");if _eaac !=nil {_eaac =_db .TraceToDirectObject (_eaac );_bcae ,_fbgc :=_eaac .(*_db .PdfObjectArray );if !_fbgc {return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _bcae .Len ()!=3{return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_bfbcg ,_abdd :=_bcae .GetAsFloat64Slice ();if _abdd !=nil {return nil ,_abdd ;
};_adba .Gamma =_bfbcg ;};_eaac =_adbd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _eaac !=nil {_eaac =_db .TraceToDirectObject (_eaac );_faadg ,_agde :=_eaac .(*_db .PdfObjectArray );if !_agde {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _faadg .Len ()!=9{_gd .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_faadg .String ());return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_ccab ,_dccf :=_faadg .GetAsFloat64Slice ();if _dccf !=nil {return nil ,_dccf ;};_adba .Matrix =_ccab ;};return _adba ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gaag *PdfOutlineTreeNode )ToPdfObject ()_db .PdfObject {return _gaag .GetContext ().ToPdfObject ()};func (_cbab *PdfReader )newPdfAnnotationFromIndirectObject (_bcdb *_db .PdfIndirectObject )(*PdfAnnotation ,error ){_bcbg ,_daca :=_bcdb .PdfObject .(*_db .PdfObjectDictionary );
if !_daca {return nil ,_g .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cbab ._afdb .GetModelFromPrimitive (_bcbg );model !=nil {_bbd ,_gfdd :=model .(*PdfAnnotation );if !_gfdd {return nil ,_g .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _bbd ,nil ;};_cbc :=&PdfAnnotation {};_cbc ._addd =_bcdb ;_cbab ._afdb .Register (_bcbg ,_cbc );if _cbged :=_bcbg .Get ("\u0054\u0079\u0070\u0065");_cbged !=nil {_dba ,_eeg :=_cbged .(*_db .PdfObjectName );if !_eeg {_gd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cbged );
}else {if *_dba !="\u0041\u006e\u006eo\u0074"{_gd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dba );};};};if _dgdc :=_bcbg .Get ("\u0052\u0065\u0063\u0074");
_dgdc !=nil {_cbc .Rect =_dgdc ;};if _adaa :=_bcbg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_adaa !=nil {_cbc .Contents =_adaa ;};if _dff :=_bcbg .Get ("\u0050");_dff !=nil {_cbc .P =_dff ;};if _cebf :=_bcbg .Get ("\u004e\u004d");_cebf !=nil {_cbc .NM =_cebf ;
};if _dee :=_bcbg .Get ("\u004d");_dee !=nil {_cbc .M =_dee ;};if _gccg :=_bcbg .Get ("\u0046");_gccg !=nil {_cbc .F =_gccg ;};if _edf :=_bcbg .Get ("\u0041\u0050");_edf !=nil {_cbc .AP =_edf ;};if _fbab :=_bcbg .Get ("\u0041\u0053");_fbab !=nil {_cbc .AS =_fbab ;
};if _fdb :=_bcbg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fdb !=nil {_cbc .Border =_fdb ;};if _eeb :=_bcbg .Get ("\u0043");_eeb !=nil {_cbc .C =_eeb ;};if _aff :=_bcbg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_aff !=nil {_cbc .StructParent =_aff ;};if _dcfe :=_bcbg .Get ("\u004f\u0043");_dcfe !=nil {_cbc .OC =_dcfe ;};_ecbd :=_bcbg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _ecbd ==nil {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_cbc ._aeb =nil ;return _cbc ,nil ;};_adaf ,_ccg :=_ecbd .(*_db .PdfObjectName );if !_ccg {_gd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ecbd );
return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_ecbd );};switch *_adaf {case "\u0054\u0065\u0078\u0074":_age ,_bfg :=_cbab .newPdfAnnotationTextFromDict (_bcbg );
if _bfg !=nil {return nil ,_bfg ;};_age .PdfAnnotation =_cbc ;_cbc ._aeb =_age ;return _cbc ,nil ;case "\u004c\u0069\u006e\u006b":_ccf ,_eebg :=_cbab .newPdfAnnotationLinkFromDict (_bcbg );if _eebg !=nil {return nil ,_eebg ;};_ccf .PdfAnnotation =_cbc ;
_cbc ._aeb =_ccf ;return _cbc ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dcfed ,_cbf :=_cbab .newPdfAnnotationFreeTextFromDict (_bcbg );if _cbf !=nil {return nil ,_cbf ;};_dcfed .PdfAnnotation =_cbc ;_cbc ._aeb =_dcfed ;return _cbc ,nil ;
case "\u004c\u0069\u006e\u0065":_acd ,_cffc :=_cbab .newPdfAnnotationLineFromDict (_bcbg );if _cffc !=nil {return nil ,_cffc ;};_acd .PdfAnnotation =_cbc ;_cbc ._aeb =_acd ;_gd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cbc ,_cbc );
_gd .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_acd ,_acd );_gd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_acd .PdfAnnotationMarkup ,_acd .PdfAnnotationMarkup );
return _cbc ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_aeddf ,_dbf :=_cbab .newPdfAnnotationSquareFromDict (_bcbg );if _dbf !=nil {return nil ,_dbf ;};_aeddf .PdfAnnotation =_cbc ;_cbc ._aeb =_aeddf ;return _cbc ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_fac ,_cda :=_cbab .newPdfAnnotationCircleFromDict (_bcbg );
if _cda !=nil {return nil ,_cda ;};_fac .PdfAnnotation =_cbc ;_cbc ._aeb =_fac ;return _cbc ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cfeda ,_ebb :=_cbab .newPdfAnnotationPolygonFromDict (_bcbg );if _ebb !=nil {return nil ,_ebb ;};_cfeda .PdfAnnotation =_cbc ;
_cbc ._aeb =_cfeda ;return _cbc ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_gabd ,_edfa :=_cbab .newPdfAnnotationPolyLineFromDict (_bcbg );if _edfa !=nil {return nil ,_edfa ;};_gabd .PdfAnnotation =_cbc ;_cbc ._aeb =_gabd ;return _cbc ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dgce ,_cfb :=_cbab .newPdfAnnotationHighlightFromDict (_bcbg );if _cfb !=nil {return nil ,_cfb ;};_dgce .PdfAnnotation =_cbc ;_cbc ._aeb =_dgce ;return _cbc ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_geee ,_dca :=_cbab .newPdfAnnotationUnderlineFromDict (_bcbg );
if _dca !=nil {return nil ,_dca ;};_geee .PdfAnnotation =_cbc ;_cbc ._aeb =_geee ;return _cbc ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bda ,_effg :=_cbab .newPdfAnnotationSquigglyFromDict (_bcbg );if _effg !=nil {return nil ,_effg ;
};_bda .PdfAnnotation =_cbc ;_cbc ._aeb =_bda ;return _cbc ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bgdde ,_bfa :=_cbab .newPdfAnnotationStrikeOut (_bcbg );if _bfa !=nil {return nil ,_bfa ;};_bgdde .PdfAnnotation =_cbc ;_cbc ._aeb =_bgdde ;
return _cbc ,nil ;case "\u0043\u0061\u0072e\u0074":_bdcd ,_bgde :=_cbab .newPdfAnnotationCaretFromDict (_bcbg );if _bgde !=nil {return nil ,_bgde ;};_bdcd .PdfAnnotation =_cbc ;_cbc ._aeb =_bdcd ;return _cbc ,nil ;case "\u0053\u0074\u0061m\u0070":_bafg ,_ccd :=_cbab .newPdfAnnotationStampFromDict (_bcbg );
if _ccd !=nil {return nil ,_ccd ;};_bafg .PdfAnnotation =_cbc ;_cbc ._aeb =_bafg ;return _cbc ,nil ;case "\u0049\u006e\u006b":_becfe ,_ffcc :=_cbab .newPdfAnnotationInkFromDict (_bcbg );if _ffcc !=nil {return nil ,_ffcc ;};_becfe .PdfAnnotation =_cbc ;
_cbc ._aeb =_becfe ;return _cbc ,nil ;case "\u0050\u006f\u0070u\u0070":_cbe ,_ffccg :=_cbab .newPdfAnnotationPopupFromDict (_bcbg );if _ffccg !=nil {return nil ,_ffccg ;};_cbe .PdfAnnotation =_cbc ;_cbc ._aeb =_cbe ;return _cbc ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ggb ,_fff :=_cbab .newPdfAnnotationFileAttachmentFromDict (_bcbg );
if _fff !=nil {return nil ,_fff ;};_ggb .PdfAnnotation =_cbc ;_cbc ._aeb =_ggb ;return _cbc ,nil ;case "\u0053\u006f\u0075n\u0064":_gad ,_fdfa :=_cbab .newPdfAnnotationSoundFromDict (_bcbg );if _fdfa !=nil {return nil ,_fdfa ;};_gad .PdfAnnotation =_cbc ;
_cbc ._aeb =_gad ;return _cbc ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_ffg ,_geb :=_cbab .newPdfAnnotationRichMediaFromDict (_bcbg );if _geb !=nil {return nil ,_geb ;};_ffg .PdfAnnotation =_cbc ;_cbc ._aeb =_ffg ;return _cbc ,nil ;case "\u004d\u006f\u0076i\u0065":_dbb ,_ccbe :=_cbab .newPdfAnnotationMovieFromDict (_bcbg );
if _ccbe !=nil {return nil ,_ccbe ;};_dbb .PdfAnnotation =_cbc ;_cbc ._aeb =_dbb ;return _cbc ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dcag ,_ecc :=_cbab .newPdfAnnotationScreenFromDict (_bcbg );if _ecc !=nil {return nil ,_ecc ;};_dcag .PdfAnnotation =_cbc ;
_cbc ._aeb =_dcag ;return _cbc ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_afab ,_eabd :=_cbab .newPdfAnnotationWidgetFromDict (_bcbg );if _eabd !=nil {return nil ,_eabd ;};_afab .PdfAnnotation =_cbc ;_cbc ._aeb =_afab ;return _cbc ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bdgc ,_ced :=_cbab .newPdfAnnotationPrinterMarkFromDict (_bcbg );
if _ced !=nil {return nil ,_ced ;};_bdgc .PdfAnnotation =_cbc ;_cbc ._aeb =_bdgc ;return _cbc ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fgag ,_ccc :=_cbab .newPdfAnnotationTrapNetFromDict (_bcbg );if _ccc !=nil {return nil ,_ccc ;};_fgag .PdfAnnotation =_cbc ;
_cbc ._aeb =_fgag ;return _cbc ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_faff ,_fbde :=_cbab .newPdfAnnotationWatermarkFromDict (_bcbg );if _fbde !=nil {return nil ,_fbde ;};_faff .PdfAnnotation =_cbc ;_cbc ._aeb =_faff ;return _cbc ,nil ;
case "\u0033\u0044":_eebc ,_cgd :=_cbab .newPdfAnnotation3DFromDict (_bcbg );if _cgd !=nil {return nil ,_cgd ;};_eebc .PdfAnnotation =_cbc ;_cbc ._aeb =_eebc ;return _cbc ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_dfc ,_adf :=_cbab .newPdfAnnotationProjectionFromDict (_bcbg );
if _adf !=nil {return nil ,_adf ;};_dfc .PdfAnnotation =_cbc ;_cbc ._aeb =_dfc ;return _cbc ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_aagb ,_cge :=_cbab .newPdfAnnotationRedactFromDict (_bcbg );if _cge !=nil {return nil ,_cge ;};_aagb .PdfAnnotation =_cbc ;
_cbc ._aeb =_aagb ;return _cbc ,nil ;};_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_adaf );
return nil ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _db .PdfObject ;LE _db .PdfObject ;BS _db .PdfObject ;IC _db .PdfObject ;BE _db .PdfObject ;IT _db .PdfObject ;Measure _db .PdfObject ;};

// R returns the value of the red component of the color.
func (_ebabe *PdfColorDeviceRGB )R ()float64 {return _ebabe [0]};

// GetDescent returns the Descent of the font `descriptor`.
func (_adgab *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _db .GetNumberAsFloat (_adgab .Descent );};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _cb .Time )(PdfDate ,error ){_cgdcf :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_abeec ,_ :=_ac .ParseInt (_cgdcf [1:3],10,32);_gggcc ,_ :=_ac .ParseInt (_cgdcf [4:6],10,32);return PdfDate {_fcae :int64 (timeObj .Year ()),_dcecg :int64 (timeObj .Month ()),_eggb :int64 (timeObj .Day ()),_accca :int64 (timeObj .Hour ()),_aeac :int64 (timeObj .Minute ()),_cabaa :int64 (timeObj .Second ()),_gdcdc :_cgdcf [0],_gdgee :_abeec ,_bfdgb :_gggcc },nil ;
};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_bfe _db .PdfObject ;};

// String implements interface PdfObject.
func (_eda *PdfAction )String ()string {_cad ,_cfc :=_eda .ToPdfObject ().(*_db .PdfIndirectObject );if _cfc {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eda ._dbc ,_cad .PdfObject .String ());};return "";};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _dg .ReadSeeker )(*PdfFont ,error ){_bfdbf ,_bgef :=_ee .ReadAll (r );if _bgef !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bgef );
return nil ,_bgef ;};_bgcd ,_bgef :=_acg .TtfParse (_cfg .NewReader (_bfdbf ));if _bgef !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bgef );
return nil ,_bgef ;};_fbgbd :=&pdfCIDFontType2 {fontCommon :fontCommon {_cdbfb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_db .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_bgdf :=make ([]rune ,0,len (_bgcd .Chars ));
for _fgdbd :=range _bgcd .Chars {_bgdf =append (_bgdf ,_fgdbd );};_ea .Slice (_bgdf ,func (_ceecf ,_bgcg int )bool {return _bgdf [_ceecf ]< _bgdf [_bgcg ]});_ddaa :=1000.0/float64 (_bgcd .UnitsPerEm );if len (_bgcd .Widths )<=0{return nil ,_f .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_eedda :=_ddaa *float64 (_bgcd .Widths [0]);_gadf :=make (map[rune ]int );for _ ,_aefa :=range _bgdf {_cecff :=_bgcd .Chars [_aefa ];_acaae :=_ddaa *float64 (_bgcd .Widths [_cecff ]);_gadf [_aefa ]=int (_acaae );};_fbgbd ._dfag =_gadf ;_fbgbd .DW =_db .MakeInteger (int64 (_eedda ));
_bbbbf :=_abecc (_bgdf ,_gadf ,_bgcd .Chars );_fbgbd .W =_db .MakeIndirectObject (_bbbbf );_abdg :=_db .MakeDict ();_abdg .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_db .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_abdg .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_db .MakeString ("\u0041\u0064\u006fb\u0065"));
_abdg .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_db .MakeInteger (0));_fbgbd .CIDSystemInfo =_abdg ;_dcfcb :=&PdfFontDescriptor {FontName :_db .MakeName (_bgcd .PostScriptName ),Ascent :_db .MakeFloat (_ddaa *float64 (_bgcd .TypoAscender )),Descent :_db .MakeFloat (_ddaa *float64 (_bgcd .TypoDescender )),CapHeight :_db .MakeFloat (_ddaa *float64 (_bgcd .CapHeight )),FontBBox :_db .MakeArrayFromFloats ([]float64 {_ddaa *float64 (_bgcd .Xmin ),_ddaa *float64 (_bgcd .Ymin ),_ddaa *float64 (_bgcd .Xmax ),_ddaa *float64 (_bgcd .Ymax )}),ItalicAngle :_db .MakeFloat (_bgcd .ItalicAngle ),MissingWidth :_db .MakeFloat (_ddaa *float64 (_bgcd .Widths [0]))};
_fabd ,_bgef :=_db .MakeStream (_bfdbf ,_db .NewFlateEncoder ());if _bgef !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bgef );
return nil ,_bgef ;};_fabd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_db .MakeInteger (int64 (len (_bfdbf ))));_dcfcb .FontFile2 =_fabd ;if _bgcd .Bold {_dcfcb .StemV =_db .MakeInteger (120);}else {_dcfcb .StemV =_db .MakeInteger (70);
};_cdfeg :=_egacb ;if _bgcd .IsFixedPitch {_cdfeg |=_egbgf ;};if _bgcd .ItalicAngle !=0{_cdfeg |=_dbge ;};_dcfcb .Flags =_db .MakeInteger (int64 (_cdfeg ));_fbgbd ._abeff =_bgcd .PostScriptName ;_fbgbd ._dfff =_dcfcb ;_babde :=pdfFontType0 {fontCommon :fontCommon {_cdbfb :"\u0054\u0079\u0070e\u0030",_abeff :_bgcd .PostScriptName },DescendantFont :&PdfFont {_fdcca :_fbgbd },Encoding :_db .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_ecbc :_bgcd .NewEncoder ()};
if len (_bgcd .Chars )> 0{_edbda :=make (map[_dc .CharCode ]rune ,len (_bgcd .Chars ));for _fgbb ,_deda :=range _bgcd .Chars {_gdaad :=_dc .CharCode (_deda );if _acaad ,_ddff :=_edbda [_gdaad ];!_ddff ||(_ddff &&_acaad > _fgbb ){_edbda [_gdaad ]=_fgbb ;
};};_babde ._begaf =_dc .NewToUnicodeCMap (_edbda );};_gabccd :=PdfFont {_fdcca :&_babde };return &_gabccd ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gfgca *PdfAnnotation )GetContext ()PdfModel {if _gfgca ==nil {return nil ;};return _gfgca ._aeb ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_gfdc *PdfField )Flags ()FieldFlag {var _edacf FieldFlag ;_fgge ,_gbadd :=_gfdc .inherit (func (_deedb *PdfField )bool {if _deedb .Ff !=nil {_edacf =FieldFlag (*_deedb .Ff );return true ;};return false ;});if _gbadd !=nil {_gd .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gbadd );
};if !_fgge {_gd .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _edacf ;};func (_ebgd *PdfReader )loadDSS ()(*DSS ,error ){if _ebgd ._ceaabg .GetCrypter ()!=nil &&!_ebgd ._ceaabg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_abdbd :=_ebgd ._ebfee .Get ("\u0044\u0053\u0053");if _abdbd ==nil {return nil ,nil ;};_bbffc ,_ :=_db .GetIndirect (_abdbd );_abdbd =_db .TraceToDirectObject (_abdbd );switch _babgf :=_abdbd .(type ){case *_db .PdfObjectNull :return nil ,nil ;case *_db .PdfObjectDictionary :return _fgee (_bbffc ,_babgf );
};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_abdbd );};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fefe *PdfAppender )UpdatePage (page *PdfPage ){_fefe .updateObjectsDeep (page .ToPdfObject (),nil )};func _efdgf (_cedgf _db .PdfObject ){_gd .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_cedgf ,_cedgf .String ());
if _eceee ,_acfcff :=_cedgf .(*_db .PdfObjectStream );_acfcff {_bcadfb ,_dbdffc :=_db .DecodeStream (_eceee );if _dbdffc !=nil {_gd .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dbdffc );return ;};_gd .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_bcadfb );
}else if _ebcaf ,_faae :=_cedgf .(*_db .PdfIndirectObject );_faae {_gd .Log .Debug ("\u0025\u0054\u0020%\u0076",_ebcaf .PdfObject ,_ebcaf .PdfObject );_gd .Log .Debug ("\u0025\u0073",_ebcaf .PdfObject .String ());};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cgaac pdfFontType0 )GetCharMetrics (code _fa .CharCode )(_acg .CharMetrics ,bool ){if _cgaac .DescendantFont ==nil {_gd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cgaac );
return _acg .CharMetrics {},false ;};return _cgaac .DescendantFont .GetCharMetrics (code );};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_cabb *PdfField )ToPdfObject ()_db .PdfObject {_eaed :=_cabb ._fbeg ;_cgfe :=_eaed .PdfObject .(*_db .PdfObjectDictionary );_affec :=_db .MakeArray ();for _ ,_fbfge :=range _cabb .Kids {_affec .Append (_fbfge .ToPdfObject ());};for _ ,_adca :=range _cabb .Annotations {if _adca ._addd !=_cabb ._fbeg {_affec .Append (_adca .GetContext ().ToPdfObject ());
};};if _cabb .Parent !=nil {_cgfe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cabb .Parent .GetContainingPdfObject ());};if _affec .Len ()> 0{_cgfe .Set ("\u004b\u0069\u0064\u0073",_affec );};_cgfe .SetIfNotNil ("\u0046\u0054",_cabb .FT );_cgfe .SetIfNotNil ("\u0054",_cabb .T );
_cgfe .SetIfNotNil ("\u0054\u0055",_cabb .TU );_cgfe .SetIfNotNil ("\u0054\u004d",_cabb .TM );_cgfe .SetIfNotNil ("\u0046\u0066",_cabb .Ff );_cgfe .SetIfNotNil ("\u0056",_cabb .V );_cgfe .SetIfNotNil ("\u0044\u0056",_cabb .DV );_cgfe .SetIfNotNil ("\u0041\u0041",_cabb .AA );
return _eaed ;};

// G returns the value of the green component of the color.
func (_bcba *PdfColorDeviceRGB )G ()float64 {return _bcba [1]};

// ToPdfObject implements interface PdfModel.
func (_fgd *PdfAction )ToPdfObject ()_db .PdfObject {_be :=_fgd ._bcc ;_cbg :=_be .PdfObject .(*_db .PdfObjectDictionary );_cbg .Clear ();_cbg .Set ("\u0054\u0079\u0070\u0065",_db .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_cbg .SetIfNotNil ("\u0053",_fgd .S );
_cbg .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fgd .Next );return _be ;};func _ccfde (_efeaa *_db .PdfObjectDictionary )(*PdfTilingPattern ,error ){_acbfb :=&PdfTilingPattern {};_gbcdf :=_efeaa .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _gbcdf ==nil {_gd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgcac ,_daecb :=_gbcdf .(*_db .PdfObjectInteger );if !_daecb {_gd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_gbcdf );
return nil ,_db .ErrTypeError ;};_acbfb .PaintType =_dgcac ;_gbcdf =_efeaa .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gbcdf ==nil {_gd .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gaddc ,_daecb :=_gbcdf .(*_db .PdfObjectInteger );if !_daecb {_gd .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbcdf );
return nil ,_db .ErrTypeError ;};_acbfb .TilingType =_gaddc ;_gbcdf =_efeaa .Get ("\u0042\u0042\u006f\u0078");if _gbcdf ==nil {_gd .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gbcdf =_db .TraceToDirectObject (_gbcdf );_caecc ,_daecb :=_gbcdf .(*_db .PdfObjectArray );if !_daecb {_gd .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbcdf );
return nil ,_db .ErrTypeError ;};_fagf ,_ebbbc :=NewPdfRectangle (*_caecc );if _ebbbc !=nil {_gd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ebbbc );return nil ,_ebbbc ;};_acbfb .BBox =_fagf ;_gbcdf =_efeaa .Get ("\u0058\u0053\u0074e\u0070");
if _gbcdf ==nil {_gd .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gbdfd ,_ebbbc :=_db .GetNumberAsFloat (_gbcdf );if _ebbbc !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gbdfd );
return nil ,_ebbbc ;};_acbfb .XStep =_db .MakeFloat (_gbdfd );_gbcdf =_efeaa .Get ("\u0059\u0053\u0074e\u0070");if _gbcdf ==nil {_gd .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_abdga ,_ebbbc :=_db .GetNumberAsFloat (_gbcdf );if _ebbbc !=nil {_gd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_abdga );
return nil ,_ebbbc ;};_acbfb .YStep =_db .MakeFloat (_abdga );_gbcdf =_efeaa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gbcdf ==nil {_gd .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_efeaa ,_daecb =_db .TraceToDirectObject (_gbcdf ).(*_db .PdfObjectDictionary );if !_daecb {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gbcdf );
};_ffcecc ,_ebbbc :=NewPdfPageResourcesFromDict (_efeaa );if _ebbbc !=nil {return nil ,_ebbbc ;};_acbfb .Resources =_ffcecc ;if _ffdc :=_efeaa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ffdc !=nil {_fgbfb ,_cbfba :=_ffdc .(*_db .PdfObjectArray );if !_cbfba {_gd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffdc );
return nil ,_db .ErrTypeError ;};_acbfb .Matrix =_fgbfb ;};return _acbfb ,nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_becga *PdfPageResources )AddExtGState (gsName _db .PdfObjectName ,gsDict _db .PdfObject )error {if _becga .ExtGState ==nil {_becga .ExtGState =_db .MakeDict ();};_dfbab :=_becga .ExtGState ;_cbdec ,_ebea :=_db .TraceToDirectObject (_dfbab ).(*_db .PdfObjectDictionary );
if !_ebea {_gd .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_dfbab ,_db .TraceToDirectObject (_dfbab ));
return _db .ErrTypeError ;};_cbdec .Set (gsName ,gsDict );return nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_db .PdfObjectBool ;SigFlags *_db .PdfObjectInteger ;CO *_db .PdfObjectArray ;DR *PdfPageResources ;DA *_db .PdfObjectString ;Q *_db .PdfObjectInteger ;XFA _db .PdfObject ;_fbbe *_db .PdfIndirectObject ;
};

// K returns the value of the key component of the color.
func (_bbgc *PdfColorDeviceCMYK )K ()float64 {return _bbgc [3]};

// ToPdfObject implements interface PdfModel.
func (_fgec *PdfAnnotationTrapNet )ToPdfObject ()_db .PdfObject {_fgec .PdfAnnotation .ToPdfObject ();_cabcf :=_fgec ._addd ;_gag :=_cabcf .PdfObject .(*_db .PdfObjectDictionary );_gag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cabcf ;};func (_eaa *PdfReader )newPdfActionResetFormFromDict (_fdf *_db .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_fdf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fdf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_cbdg *PdfAnnotationMovie )ToPdfObject ()_db .PdfObject {_cbdg .PdfAnnotation .ToPdfObject ();_adfc :=_cbdg ._addd ;_acfa :=_adfc .PdfObject .(*_db .PdfObjectDictionary );_acfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_db .MakeName ("\u004d\u006f\u0076i\u0065"));
_acfa .SetIfNotNil ("\u0054",_cbdg .T );_acfa .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_cbdg .Movie );_acfa .SetIfNotNil ("\u0041",_cbdg .A );return _adfc ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gfdb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gfdb .Alternate ==nil {_gd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gfdb .N ==1{_gd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_acda :=NewPdfColorspaceDeviceGray ();return _acda .ColorToRGB (color );}else if _gfdb .N ==3{_gd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _gfdb .N ==4{_gd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cccf :=NewPdfColorspaceDeviceCMYK ();return _cccf .ColorToRGB (color );}else {return nil ,_f .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gfdb );
return _gfdb .Alternate .ColorToRGB (color );};func _aegdf (_bdagc *XObjectImage )error {if _bdagc .SMask ==nil {return nil ;};_fedbf ,_afeg :=_bdagc .SMask .(*_db .PdfObjectStream );if !_afeg {_gd .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _db .ErrTypeError ;};_faeba :=_fedbf .PdfObjectDictionary ;_fafaf :=_faeba .Get ("\u004d\u0061\u0074t\u0065");if _fafaf ==nil {return nil ;};_cbdde ,_fdcea :=_feafa (_fafaf .(*_db .PdfObjectArray ));if _fdcea !=nil {return _fdcea ;};_fcfead :=_db .MakeArrayFromFloats ([]float64 {_cbdde });
_faeba .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fcfead );return nil ;};