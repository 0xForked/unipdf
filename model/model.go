//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_dc "bytes";_g "crypto/rand";_ad "crypto/sha1";_ca "crypto/x509";_ae "encoding/binary";_b "encoding/hex";_fda "errors";_e "fmt";_fb "github.com/unidoc/pkcs7";_ba "github.com/unidoc/unipdf/v3/common";_aa "github.com/unidoc/unipdf/v3/core";_bc "github.com/unidoc/unipdf/v3/core/security";_dd "github.com/unidoc/unipdf/v3/core/security/crypt";_dgg "github.com/unidoc/unipdf/v3/internal/cmap";_ff "github.com/unidoc/unipdf/v3/internal/imageutil";_aee "github.com/unidoc/unipdf/v3/internal/license";_fdg "github.com/unidoc/unipdf/v3/internal/sampling";_af "github.com/unidoc/unipdf/v3/internal/textencoding";_fa "github.com/unidoc/unipdf/v3/model/internal/fonts";_bcc "github.com/unidoc/unipdf/v3/model/sigutil";_bag "github.com/unidoc/unipdf/v3/ps";_bd "github.com/unidoc/unitype";_dfb "golang.org/x/xerrors";_fe "image";_f "image/color";_ "image/gif";_ "image/png";_gb "io";_fd "io/ioutil";_ag "math";_df "math/rand";_bf "os";_ce "regexp";_fg "sort";_dg "strconv";_ga "strings";_c "sync";_ab "time";_cag "unicode";_be "unicode/utf8";);

// IsColored specifies if the pattern is colored.
func (_babbf *PdfTilingPattern )IsColored ()bool {if _babbf .PaintType !=nil &&*_babbf .PaintType ==1{return true ;};return false ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_afdff PdfModel ;_ebabe *_aa .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_aa .PdfObjectName ;T *_aa .PdfObjectString ;TU *_aa .PdfObjectString ;TM *_aa .PdfObjectString ;Ff *_aa .PdfObjectInteger ;V _aa .PdfObject ;DV _aa .PdfObject ;AA _aa .PdfObject ;};

// A returns the value of the A component of the color.
func (_bafd *PdfColorCalRGB )A ()float64 {return _bafd [0]};

// SetAnnotations sets the annotations list.
func (_befbf *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_befbf ._ecgde =annotations };func (_feb *PdfReader )newPdfActionGoTo3DViewFromDict (_agg *_aa .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_agg .Get ("\u0054\u0041"),V :_agg .Get ("\u0056")},nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _aa .PdfObject ;RichMediaContent _aa .PdfObject ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _aa .PdfObject ;Open _aa .PdfObject ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_cagg :=NewPdfAction ();_bfg :=&PdfActionLaunch {};_bfg .PdfAction =_cagg ;_cagg .SetContext (_bfg );return _bfg ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _aa .PdfObject ;FontFamily _aa .PdfObject ;FontStretch _aa .PdfObject ;FontWeight _aa .PdfObject ;Flags _aa .PdfObject ;FontBBox _aa .PdfObject ;ItalicAngle _aa .PdfObject ;Ascent _aa .PdfObject ;Descent _aa .PdfObject ;Leading _aa .PdfObject ;CapHeight _aa .PdfObject ;XHeight _aa .PdfObject ;StemV _aa .PdfObject ;StemH _aa .PdfObject ;AvgWidth _aa .PdfObject ;MaxWidth _aa .PdfObject ;MissingWidth _aa .PdfObject ;FontFile _aa .PdfObject ;FontFile2 _aa .PdfObject ;FontFile3 _aa .PdfObject ;CharSet _aa .PdfObject ;_befeg int ;_gdfg float64 ;*fontFile ;_bedb *_fa .TtfType ;

// Additional entries for CIDFonts
Style _aa .PdfObject ;Lang _aa .PdfObject ;FD _aa .PdfObject ;CIDSet _aa .PdfObject ;_gegcg *_aa .PdfIndirectObject ;};func _cfbee (_dcbf _aa .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_dcgea :=NewPdfColorspaceSpecialIndexed ();if _ccdg ,_dbebc :=_dcbf .(*_aa .PdfIndirectObject );_dbebc {_dcgea ._dfcb =_ccdg ;};_dcbf =_aa .TraceToDirectObject (_dcbf );_gdag ,_acbgb :=_dcbf .(*_aa .PdfObjectArray );if !_acbgb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gdag .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_dcbf =_gdag .Get (0);_bdcgb ,_acbgb :=_dcbf .(*_aa .PdfObjectName );if !_acbgb {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_bdcgb !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_dcbf =_gdag .Get (1);_adaad ,_abfc :=DetermineColorspaceNameFromPdfObject (_dcbf );if _abfc !=nil {return nil ,_abfc ;};if _adaad =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_adaad =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ba .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_adaad );return nil ,_bddd ;};_baade ,_abfc :=NewPdfColorspaceFromPdfObject (_dcbf );if _abfc !=nil {return nil ,_abfc ;};_dcgea .Base =_baade ;_dcbf =_gdag .Get (2);_abega ,_abfc :=_aa .GetNumberAsInt64 (_dcbf );if _abfc !=nil {return nil ,_abfc ;};if _abega > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_dcgea .HiVal =int (_abega );_dcbf =_gdag .Get (3);_dcgea .Lookup =_dcbf ;_dcbf =_aa .TraceToDirectObject (_dcbf );var _gbab []byte ;if _gfba ,_edgfc :=_dcbf .(*_aa .PdfObjectString );_edgfc {_gbab =_gfba .Bytes ();_ba .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gbab );}else if _ggefd ,_fafcd :=_dcbf .(*_aa .PdfObjectStream );_fafcd {_ba .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_dcbf .String ());_ba .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_ggefd .Stream ),_ggefd .Stream );_bbaa ,_gdcac :=_aa .DecodeStream (_ggefd );if _gdcac !=nil {return nil ,_gdcac ;};_ba .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_bbaa ),_bbaa );_gbab =_bbaa ;}else {_ba .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dcbf );return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gbab )< _dcgea .Base .GetNumComponents ()*(_dcgea .HiVal +1){_ba .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_ba .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gbab ),_dcgea .Base .GetNumComponents (),_dcgea .HiVal );}else {_gbab =_gbab [:_dcgea .Base .GetNumComponents ()*(_dcgea .HiVal +1)];};_dcgea ._bdea =_gbab ;return _dcgea ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_ebb :=NewPdfAnnotation ();_befe :=&PdfAnnotationHighlight {};_befe .PdfAnnotation =_ebb ;_befe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebb .SetContext (_befe );return _befe ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_baaa *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _baaa .AlternateSpace ==nil {return nil ,_fda .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _baaa .AlternateSpace .ColorToRGB (color );};

// ValidateSignatures validates digital signatures in the document.
func (_ebfgg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ebfgg .AcroForm ==nil {return nil ,nil ;};if _ebfgg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_abecg *PdfSignature ;_gcdfe *PdfField ;_fedef SignatureHandler ;};var _bcea []*sigFieldPair ;for _ ,_gdafab :=range _ebfgg .AcroForm .AllFields (){if _gdafab .V ==nil {continue ;};if _abgc ,_dbgeg :=_aa .GetDict (_gdafab .V );_dbgeg {if _gegbc ,_aeebd :=_aa .GetNameVal (_abgc .Get ("\u0054\u0079\u0070\u0065"));_aeebd &&_gegbc =="\u0053\u0069\u0067"{_cccac ,_adeab :=_aa .GetIndirect (_gdafab .V );if !_adeab {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_gbee ,_fbgag :=_ebfgg .newPdfSignatureFromIndirect (_cccac );if _fbgag !=nil {return nil ,_fbgag ;};var _cgcbd SignatureHandler ;for _ ,_ddggf :=range handlers {if _ddggf .IsApplicable (_gbee ){_cgcbd =_ddggf ;break ;};};_bcea =append (_bcea ,&sigFieldPair {_abecg :_gbee ,_gcdfe :_gdafab ,_fedef :_cgcbd });};};};var _dabcgf []SignatureValidationResult ;for _ ,_bcgbd :=range _bcea {_efbeg :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_bcgbd ._gcdfe }};if _bcgbd ._fedef ==nil {_efbeg .Errors =append (_efbeg .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_dabcgf =append (_dabcgf ,_efbeg );continue ;};_egcda ,_bggea :=_bcgbd ._fedef .NewDigest (_bcgbd ._abecg );if _bggea !=nil {_efbeg .Errors =append (_efbeg .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_bggea .Error ());_dabcgf =append (_dabcgf ,_efbeg );continue ;};_edce :=_bcgbd ._abecg .ByteRange ;if _edce ==nil {_efbeg .Errors =append (_efbeg .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_dabcgf =append (_dabcgf ,_efbeg );continue ;};for _gbabb :=0;_gbabb < _edce .Len ();_gbabb =_gbabb +2{_dfcce ,_ :=_aa .GetNumberAsInt64 (_edce .Get (_gbabb ));_aceec ,_ :=_aa .GetIntVal (_edce .Get (_gbabb +1));if _ ,_aefgf :=_ebfgg ._bgbae .Seek (_dfcce ,_gb .SeekStart );_aefgf !=nil {return nil ,_aefgf ;};_cgac :=make ([]byte ,_aceec );if _ ,_ffecd :=_ebfgg ._bgbae .Read (_cgac );_ffecd !=nil {return nil ,_ffecd ;};_egcda .Write (_cgac );};_ecggff ,_bggea :=_bcgbd ._fedef .Validate (_bcgbd ._abecg ,_egcda );if _bggea !=nil {return nil ,_bggea ;};_ecggff .Name =_bcgbd ._abecg .Name .Decoded ();_ecggff .Reason =_bcgbd ._abecg .Reason .Decoded ();if _bcgbd ._abecg .M !=nil {_egfdc ,_gdffcb :=NewPdfDate (_bcgbd ._abecg .M .String ());if _gdffcb !=nil {_ecggff .Errors =append (_ecggff .Errors ,_gdffcb .Error ());continue ;};_ecggff .Date =_egfdc ;};_ecggff .ContactInfo =_bcgbd ._abecg .ContactInfo .Decoded ();_ecggff .Location =_bcgbd ._abecg .Location .Decoded ();_ecggff .Fields =_efbeg .Fields ;_dabcgf =append (_dabcgf ,_ecggff );};return _dabcgf ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _aa .PdfObject ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_ggef *PdfReader )newPdfAnnotationLinkFromDict (_ege *_aa .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_egeb :=PdfAnnotationLink {};_egeb .A =_ege .Get ("\u0041");_egeb .Dest =_ege .Get ("\u0044\u0065\u0073\u0074");_egeb .H =_ege .Get ("\u0048");_egeb .PA =_ege .Get ("\u0050\u0041");_egeb .QuadPoints =_ege .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_egeb .BS =_ege .Get ("\u0042\u0053");return &_egeb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ef *PdfActionGoTo3DView )ToPdfObject ()_aa .PdfObject {_ef .PdfAction .ToPdfObject ();_bfc :=_ef ._bg ;_cbb :=_bfc .PdfObject .(*_aa .PdfObjectDictionary );_cbb .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeGoTo3DView )));_cbb .SetIfNotNil ("\u0054\u0041",_ef .TA );_cbb .SetIfNotNil ("\u0056",_ef .V );return _bfc ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_fcdg :=PdfColorLab {l ,a ,b };return &_fcdg };

// GetContainingPdfObject implements interface PdfModel.
func (_faabf *PdfSignature )GetContainingPdfObject ()_aa .PdfObject {return _faabf ._bfbeb };func (_dgcbe *PdfReader )newPdfOutlineItemFromIndirectObject (_feef *_aa .PdfIndirectObject )(*PdfOutlineItem ,error ){_fdfcg ,_dfegbd :=_feef .PdfObject .(*_aa .PdfObjectDictionary );if !_dfegbd {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_afgae :=NewPdfOutlineItem ();_ccege :=_fdfcg .Get ("\u0054\u0069\u0074l\u0065");if _ccege ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_ebgbe ,_gfcff :=_aa .GetString (_ccege );if !_gfcff {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_ccege );};_afgae .Title =_ebgbe ;if _dcafgg :=_fdfcg .Get ("\u0043\u006f\u0075n\u0074");_dcafgg !=nil {_bgbdc ,_aeab :=_dcafgg .(*_aa .PdfObjectInteger );if !_aeab {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_dcafgg );};_cdabe :=int64 (*_bgbdc );_afgae .Count =&_cdabe ;};if _cdfe :=_fdfcg .Get ("\u0044\u0065\u0073\u0074");_cdfe !=nil {_afgae .Dest =_aa .ResolveReference (_cdfe );if !_dgcbe ._edef {_efeeb :=_dgcbe .traverseObjectData (_afgae .Dest );if _efeeb !=nil {return nil ,_efeeb ;};};};if _dedbe :=_fdfcg .Get ("\u0041");_dedbe !=nil {_afgae .A =_aa .ResolveReference (_dedbe );if !_dgcbe ._edef {_eddbc :=_dgcbe .traverseObjectData (_afgae .A );if _eddbc !=nil {return nil ,_eddbc ;};};};if _eeaf :=_fdfcg .Get ("\u0053\u0045");_eeaf !=nil {_afgae .SE =nil ;};if _fafff :=_fdfcg .Get ("\u0043");_fafff !=nil {_afgae .C =_aa .ResolveReference (_fafff );};if _cccg :=_fdfcg .Get ("\u0046");_cccg !=nil {_afgae .F =_aa .ResolveReference (_cccg );};return _afgae ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dggdc *PdfShadingType2 )ToPdfObject ()_aa .PdfObject {_dggdc .PdfShading .ToPdfObject ();_eadg ,_aedd :=_dggdc .getShadingDict ();if _aedd !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _eadg ==nil {_ba .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _dggdc .Coords !=nil {_eadg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_dggdc .Coords );};if _dggdc .Domain !=nil {_eadg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dggdc .Domain );};if _dggdc .Function !=nil {if len (_dggdc .Function )==1{_eadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dggdc .Function [0].ToPdfObject ());}else {_dbcgg :=_aa .MakeArray ();for _ ,_dbafg :=range _dggdc .Function {_dbcgg .Append (_dbafg .ToPdfObject ());};_eadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbcgg );};};if _dggdc .Extend !=nil {_eadg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_dggdc .Extend );};return _dggdc ._fbdfa ;};

// ToPdfObject converts the font to a PDF representation.
func (_geaf *pdfFontType0 )ToPdfObject ()_aa .PdfObject {if _geaf ._dgge ==nil {_geaf ._dgge =&_aa .PdfIndirectObject {};};_eccfc :=_geaf .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_geaf ._dgge .PdfObject =_eccfc ;if _geaf .Encoding !=nil {_eccfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_geaf .Encoding );}else if _geaf ._adgba !=nil {_eccfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_geaf ._adgba .ToPdfObject ());};if _geaf .DescendantFont !=nil {_eccfc .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_aa .MakeArray (_geaf .DescendantFont .ToPdfObject ()));};return _geaf ._dgge ;};

// ToPdfObject implements interface PdfModel.
func (_fed *PdfActionMovie )ToPdfObject ()_aa .PdfObject {_fed .PdfAction .ToPdfObject ();_bb :=_fed ._bg ;_bdcf :=_bb .PdfObject .(*_aa .PdfObjectDictionary );_bdcf .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeMovie )));_bdcf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_fed .Annotation );_bdcf .SetIfNotNil ("\u0054",_fed .T );_bdcf .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_fed .Operation );return _bb ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_gbfb *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _gbfb ._ecgde !=nil {return _gbfb ._ecgde ,nil ;};if _gbfb .Annots ==nil {_gbfb ._ecgde =[]*PdfAnnotation {};return nil ,nil ;};if _gbfb ._cdecc ==nil {_gbfb ._ecgde =[]*PdfAnnotation {};return nil ,nil ;};_afcdbg ,_cdbf :=_gbfb ._cdecc .loadAnnotations (_gbfb .Annots );if _cdbf !=nil {return nil ,_cdbf ;};if _afcdbg ==nil {_gbfb ._ecgde =[]*PdfAnnotation {};};_gbfb ._ecgde =_afcdbg ;return _gbfb ._ecgde ,nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_aeaff *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ba .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ba .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_ba .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ba .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_abge ,_afafg :=_ff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eecd ,img ._ddfac );if _afafg !=nil {return Image {},_afafg ;};_adge ,_afafg :=_ff .NRGBAConverter .Convert (_abge );if _afafg !=nil {return Image {},_afafg ;};return _bdaag (_adge .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_eafe *PdfAnnotationSound )ToPdfObject ()_aa .PdfObject {_eafe .PdfAnnotation .ToPdfObject ();_bfbf :=_eafe ._dde ;_afeaa :=_bfbf .PdfObject .(*_aa .PdfObjectDictionary );_eafe .PdfAnnotationMarkup .appendToPdfDictionary (_afeaa );_afeaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0053\u006f\u0075n\u0064"));_afeaa .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_eafe .Sound );_afeaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eafe .Name );return _bfbf ;};func _bcbca (_becee *_aa .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ebafc :=PdfShadingType6 {};_bdgb :=_becee .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bdgb ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gbead ,_bage :=_bdgb .(*_aa .PdfObjectInteger );if !_bage {_ba .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdgb );return nil ,_aa .ErrTypeError ;};_ebafc .BitsPerCoordinate =_gbead ;_bdgb =_becee .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdgb ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gbead ,_bage =_bdgb .(*_aa .PdfObjectInteger );if !_bage {_ba .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdgb );return nil ,_aa .ErrTypeError ;};_ebafc .BitsPerComponent =_gbead ;_bdgb =_becee .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdgb ==nil {_ba .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_gbead ,_bage =_bdgb .(*_aa .PdfObjectInteger );if !_bage {_ba .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdgb );return nil ,_aa .ErrTypeError ;};_ebafc .BitsPerComponent =_gbead ;_bdgb =_becee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdgb ==nil {_ba .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_bbaaf ,_bage :=_bdgb .(*_aa .PdfObjectArray );if !_bage {_ba .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdgb );return nil ,_aa .ErrTypeError ;};_ebafc .Decode =_bbaaf ;if _afgdee :=_becee .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_afgdee !=nil {_ebafc .Function =[]PdfFunction {};if _agee ,_dccbb :=_afgdee .(*_aa .PdfObjectArray );_dccbb {for _ ,_bbcfa :=range _agee .Elements (){_fccb ,_daaag :=_dccg (_bbcfa );if _daaag !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daaag );return nil ,_daaag ;};_ebafc .Function =append (_ebafc .Function ,_fccb );};}else {_edfc ,_dgafc :=_dccg (_afgdee );if _dgafc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgafc );return nil ,_dgafc ;};_ebafc .Function =append (_ebafc .Function ,_edfc );};};return &_ebafc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abe *PdfActionTrans )ToPdfObject ()_aa .PdfObject {_abe .PdfAction .ToPdfObject ();_ge :=_abe ._bg ;_accf :=_ge .PdfObject .(*_aa .PdfObjectDictionary );_accf .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeTrans )));_accf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_abe .Trans );return _ge ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bcba *PdfColorDeviceGray )GetNumComponents ()int {return 1};func _dccg (_bedfc _aa .PdfObject )(PdfFunction ,error ){_bedfc =_aa .ResolveReference (_bedfc );if _cfga ,_cabef :=_bedfc .(*_aa .PdfObjectStream );_cabef {_ccaf :=_cfga .PdfObjectDictionary ;_abdgg ,_decbg :=_ccaf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aa .PdfObjectInteger );if !_decbg {_ba .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fda .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_abdgg ==0{return _bbacf (_cfga );}else if *_abdgg ==4{return _accbc (_cfga );}else {return nil ,_fda .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ddfa ,_ggggf :=_bedfc .(*_aa .PdfIndirectObject );_ggggf {_cfda ,_gdaa :=_ddfa .PdfObject .(*_aa .PdfObjectDictionary );if !_gdaa {_ba .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_fda .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_fcgag ,_gdaa :=_cfda .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aa .PdfObjectInteger );if !_gdaa {_ba .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fda .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fcgag ==2{return _baed (_ddfa );}else if *_fcgag ==3{return _afade (_ddfa );}else {return nil ,_fda .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _fbeacf ,_fdccge :=_bedfc .(*_aa .PdfObjectDictionary );_fdccge {_agcg ,_dfdec :=_fbeacf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aa .PdfObjectInteger );if !_dfdec {_ba .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fda .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_agcg ==2{return _baed (_fbeacf );}else if *_agcg ==3{return _afade (_fbeacf );}else {return nil ,_fda .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ba .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_bedfc );return nil ,_fda .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToPdfObject implements interface PdfModel.
func (_aeae *PdfAnnotationLine )ToPdfObject ()_aa .PdfObject {_aeae .PdfAnnotation .ToPdfObject ();_fae :=_aeae ._dde ;_ebge :=_fae .PdfObject .(*_aa .PdfObjectDictionary );_aeae .PdfAnnotationMarkup .appendToPdfDictionary (_ebge );_ebge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u004c\u0069\u006e\u0065"));_ebge .SetIfNotNil ("\u004c",_aeae .L );_ebge .SetIfNotNil ("\u0042\u0053",_aeae .BS );_ebge .SetIfNotNil ("\u004c\u0045",_aeae .LE );_ebge .SetIfNotNil ("\u0049\u0043",_aeae .IC );_ebge .SetIfNotNil ("\u004c\u004c",_aeae .LL );_ebge .SetIfNotNil ("\u004c\u004c\u0045",_aeae .LLE );_ebge .SetIfNotNil ("\u0043\u0061\u0070",_aeae .Cap );_ebge .SetIfNotNil ("\u0049\u0054",_aeae .IT );_ebge .SetIfNotNil ("\u004c\u004c\u004f",_aeae .LLO );_ebge .SetIfNotNil ("\u0043\u0050",_aeae .CP );_ebge .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aeae .Measure );_ebge .SetIfNotNil ("\u0043\u004f",_aeae .CO );return _fae ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_edad *PdfField )ToPdfObject ()_aa .PdfObject {_fdccg :=_edad ._ebabe ;_efeg :=_fdccg .PdfObject .(*_aa .PdfObjectDictionary );_dddb :=_aa .MakeArray ();for _ ,_cddg :=range _edad .Kids {_dddb .Append (_cddg .ToPdfObject ());};for _ ,_bdfc :=range _edad .Annotations {if _bdfc ._dde !=_edad ._ebabe {_dddb .Append (_bdfc .GetContext ().ToPdfObject ());};};if _edad .Parent !=nil {_efeg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_edad .Parent .GetContainingPdfObject ());};if _dddb .Len ()> 0{_efeg .Set ("\u004b\u0069\u0064\u0073",_dddb );};_efeg .SetIfNotNil ("\u0046\u0054",_edad .FT );_efeg .SetIfNotNil ("\u0054",_edad .T );_efeg .SetIfNotNil ("\u0054\u0055",_edad .TU );_efeg .SetIfNotNil ("\u0054\u004d",_edad .TM );_efeg .SetIfNotNil ("\u0046\u0066",_edad .Ff );_efeg .SetIfNotNil ("\u0056",_edad .V );_efeg .SetIfNotNil ("\u0044\u0056",_edad .DV );_efeg .SetIfNotNil ("\u0041\u0041",_edad .AA );return _fdccg ;};

// ToPdfObject implements interface PdfModel.
func (_afed *PdfAnnotationStrikeOut )ToPdfObject ()_aa .PdfObject {_afed .PdfAnnotation .ToPdfObject ();_gbde :=_afed ._dde ;_dgeb :=_gbde .PdfObject .(*_aa .PdfObjectDictionary );_afed .PdfAnnotationMarkup .appendToPdfDictionary (_dgeb );_dgeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_dgeb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_afed .QuadPoints );return _gbde ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_gdda *_aa .PdfObjectDictionary ;_bfbdf *_aa .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbeb *PdfAnnotationPopup )ToPdfObject ()_aa .PdfObject {_fbeb .PdfAnnotation .ToPdfObject ();_fcbg :=_fbeb ._dde ;_ebe :=_fcbg .PdfObject .(*_aa .PdfObjectDictionary );_ebe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0050\u006f\u0070u\u0070"));_ebe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbeb .Parent );_ebe .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fbeb .Open );return _fcbg ;};func (_ggcb *PdfReader )newPdfActionMovieFromDict (_aea *_aa .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_aea .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_aea .Get ("\u0054"),Operation :_aea .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};func (_gdbg *DSS )addCRLs (_aecc [][]byte )([]*_aa .PdfObjectStream ,error ){return _gdbg .add (&_gdbg .CRLs ,_gdbg ._dbbfb ,_aecc );};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_aa .PdfObjectArray ;Domain *_aa .PdfObjectArray ;Function []PdfFunction ;Extend *_aa .PdfObjectArray ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_dddc *Outline )Insert (index uint ,item *OutlineItem ){_fccec :=uint (len (_dddc .Entries ));if index > _fccec {index =_fccec ;};_dddc .Entries =append (_dddc .Entries [:index ],append ([]*OutlineItem {item },_dddc .Entries [index :]...)...);};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_faeb *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fda .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_bcf ,_bbfb :=_ff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eecd ,img ._ddfac );if _bbfb !=nil {return img ,_bbfb ;};_efbe ,_bbfb :=_ff .GrayConverter .Convert (_bcf );if _bbfb !=nil {return img ,_bbfb ;};return _bdaag (_efbe .Base ()),nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bgaa *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fda .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_eea :=field .V ;if _eea ==nil {return _fda .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_aeag :=pageNum -1;if _aeag < 0||_aeag > len (_bgaa ._fdcc )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_cadb :=_bgaa .Reader .PageList [_aeag ];field .P =_cadb .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_aa .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_cadb .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _bgaa ._cabd ==_bgaa ._edc .AcroForm {_bgaa ._cabd =_bgaa .Reader .AcroForm ;};_ffdb :=_bgaa ._cabd ;if _ffdb ==nil {_ffdb =NewPdfAcroForm ();};_ffdb .SigFlags =_aa .MakeInteger (3);_bfega :=append (_ffdb .AllFields (),field .PdfField );_ffdb .Fields =&_bfega ;_bgaa .ReplaceAcroForm (_ffdb );_bgaa .UpdatePage (_cadb );_bgaa ._fdcc [_aeag ]=_cadb ;return nil ;};func _afff (_babd *_aa .PdfObjectDictionary )bool {for _ ,_bfba :=range _babd .Keys (){if _ ,_gaea :=_baea [_bfba .String ()];_gaea {return true ;};};return false ;};func (_efbg *LTV )buildCertChain (_dfcge ,_abfd []*_ca .Certificate )([]*_ca .Certificate ,map[string ]*_ca .Certificate ,error ){_bfefd :=map[string ]*_ca .Certificate {};for _ ,_afdde :=range _dfcge {_bfefd [_afdde .Subject .CommonName ]=_afdde ;};_eagab :=_dfcge ;for _ ,_cffb :=range _abfd {_ceaa :=_cffb .Subject .CommonName ;if _ ,_cfcf :=_bfefd [_ceaa ];_cfcf {continue ;};_bfefd [_ceaa ]=_cffb ;_eagab =append (_eagab ,_cffb );};if len (_eagab )==0{return nil ,nil ,ErrSignNoCertificates ;};var _bfcb error ;for _fafef :=_eagab [0];_fafef !=nil &&!_efbg .CertClient .IsCA (_fafef );{_ebgge ,_ffgcbd :=_bfefd [_fafef .Issuer .CommonName ];if !_ffgcbd {if _ebgge ,_bfcb =_efbg .CertClient .GetIssuer (_fafef );_bfcb !=nil {_ba .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_bfcb );break ;};_bfefd [_fafef .Issuer .CommonName ]=_ebgge ;_eagab =append (_eagab ,_ebgge );};_fafef =_ebgge ;};return _eagab ,_bfefd ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_caaae *pdfSignDictionary )GetSubFilter ()string {_edgc :=_caaae .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _edgc ==nil {return "";};if _cbcgdb ,_fcgba :=_aa .GetNameVal (_edgc );_fcgba {return _cbcgdb ;};return "";};var (CourierName =_fa .CourierName ;CourierBoldName =_fa .CourierBoldName ;CourierObliqueName =_fa .CourierObliqueName ;CourierBoldObliqueName =_fa .CourierBoldObliqueName ;HelveticaName =_fa .HelveticaName ;HelveticaBoldName =_fa .HelveticaBoldName ;HelveticaObliqueName =_fa .HelveticaObliqueName ;HelveticaBoldObliqueName =_fa .HelveticaBoldObliqueName ;SymbolName =_fa .SymbolName ;ZapfDingbatsName =_fa .ZapfDingbatsName ;TimesRomanName =_fa .TimesRomanName ;TimesBoldName =_fa .TimesBoldName ;TimesItalicName =_fa .TimesItalicName ;TimesBoldItalicName =_fa .TimesBoldItalicName ;);

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_gcdaa *PdfPageResources )GetXObjectFormByName (keyName _aa .PdfObjectName )(*XObjectForm ,error ){_fgega ,_bfdc :=_gcdaa .GetXObjectByName (keyName );if _fgega ==nil {return nil ,nil ;};if _bfdc !=XObjectTypeForm {return nil ,_fda .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_ggdac ,_gdea :=NewXObjectFormFromStream (_fgega );if _gdea !=nil {return nil ,_gdea ;};return _ggdac ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aa .PdfObject ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_dacfg *pdfCIDFontType2 )ToPdfObject ()_aa .PdfObject {if _dacfg ._fbgc ==nil {_dacfg ._fbgc =&_aa .PdfIndirectObject {};};_agabc :=_dacfg .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_dacfg ._fbgc .PdfObject =_agabc ;if _dacfg .CIDSystemInfo !=nil {_agabc .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_dacfg .CIDSystemInfo );};if _dacfg .DW !=nil {_agabc .Set ("\u0044\u0057",_dacfg .DW );};if _dacfg .DW2 !=nil {_agabc .Set ("\u0044\u0057\u0032",_dacfg .DW2 );};if _dacfg .W !=nil {_agabc .Set ("\u0057",_dacfg .W );};if _dacfg .W2 !=nil {_agabc .Set ("\u0057\u0032",_dacfg .W2 );};if _dacfg .CIDToGIDMap !=nil {_agabc .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_dacfg .CIDToGIDMap );};return _dacfg ._fbgc ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_dga :=NewPdfAnnotation ();_daed :=&PdfAnnotationSquare {};_daed .PdfAnnotation =_dga ;_daed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dga .SetContext (_daed );return _daed ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gggae *LTV )Enable (sig *PdfSignature ,extraCerts []*_ca .Certificate )error {if _agccb :=_gggae .validateSig (sig );_agccb !=nil {return _agccb ;};_fbabb ,_fgegf :=_gggae .generateVRIKey (sig );if _fgegf !=nil {return _fgegf ;};if _ ,_gedae :=_gggae ._afgfd .VRI [_fbabb ];_gedae &&_gggae .SkipExisting {return nil ;};_febdc ,_fgegf :=sig .GetCerts ();if _fgegf !=nil {return _fgegf ;};return _gggae .enable (_febdc ,extraCerts ,_fbabb );};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aa .PdfObject ;IC _aa .PdfObject ;RO _aa .PdfObject ;OverlayText _aa .PdfObject ;Repeat _aa .PdfObject ;DA _aa .PdfObject ;Q _aa .PdfObject ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_eggaf *_aa .PdfIndirectObject ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_eabgg *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_fgdb :=NewPdfOutlineItem ();_fgdb .Title =_aa .MakeEncodedString (_eabgg .Title ,true );_fgdb .Dest =_eabgg .Dest .ToPdfObject ();var _ecgbb []*PdfOutlineItem ;var _abdga int64 ;var _gggb *PdfOutlineItem ;for _ ,_gddd :=range _eabgg .Entries {_dcbbe ,_gebf :=_gddd .ToPdfOutlineItem ();_dcbbe .Parent =&_fgdb .PdfOutlineTreeNode ;if _gggb !=nil {_gggb .Next =&_dcbbe .PdfOutlineTreeNode ;_dcbbe .Prev =&_gggb .PdfOutlineTreeNode ;};_ecgbb =append (_ecgbb ,_dcbbe );_abdga +=_gebf ;_gggb =_dcbbe ;};_cgaba :=len (_ecgbb );_abdga +=int64 (_cgaba );if _cgaba > 0{_fgdb .First =&_ecgbb [0].PdfOutlineTreeNode ;_fgdb .Last =&_ecgbb [_cgaba -1].PdfOutlineTreeNode ;_fgdb .Count =&_abdga ;};return _fgdb ,_abdga ;};

// R returns the value of the red component of the color.
func (_gebc *PdfColorDeviceRGB )R ()float64 {return _gebc [0]};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_eabg *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecc :=vals [0];if _ecc < 0.0||_ecc > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edfg :=vals [1];if _edfg < 0.0||_edfg > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfde :=vals [2];if _dfde < 0.0||_dfde > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agcbf :=NewPdfColorDeviceRGB (_ecc ,_edfg ,_dfde );return _agcbf ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_gabf *PdfReader )newPdfActionGotoRFromDict (_bdab *_aa .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bdac ,_eed :=_caed (_bdab .Get ("\u0046"));if _eed !=nil {return nil ,_eed ;};return &PdfActionGoToR {D :_bdab .Get ("\u0044"),NewWindow :_bdab .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bdac },nil ;};

// Encoder returns the font's text encoder.
func (_eadbc pdfCIDFontType2 )Encoder ()_af .TextEncoder {return _eadbc ._baegd };func (_cef *PdfReader )newPdfActionSetOCGStateFromDict (_bcgf *_aa .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bcgf .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bcgf .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// HasFontByName checks if has font resource by name.
func (_gfcfa *PdfPage )HasFontByName (name _aa .PdfObjectName )bool {_ccdeb ,_gcgceg :=_gfcfa .Resources .Font .(*_aa .PdfObjectDictionary );if !_gcgceg {return false ;};if _cdcbc :=_ccdeb .Get (name );_cdcbc !=nil {return true ;};return false ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_cfdfaa *PdfFont )CharcodesToStrings (charcodes []_af .CharCode )([]string ,int ,int ){_edeea :=_cfdfaa .baseFields ();_gffa :=make ([]string ,0,len (charcodes ));_dcefg :=0;_bedce :=_cfdfaa .Encoder ();if _bedce !=nil {switch _egcgg :=_bedce .(type ){case _af .SimpleEncoder :_gfcge :=_egcgg .BaseName ();if _ ,_dedd :=_bcee [_gfcge ];_dedd {for _ ,_fdgbd :=range charcodes {if _deecb ,_ggcd :=_bedce .CharcodeToRune (_fdgbd );_ggcd {_gffa =append (_gffa ,string (_deecb ));}else {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fdgbd ,charcodes ,_edeea .isCIDFont (),_cfdfaa ,_bedce );_dcefg ++;_gffa =append (_gffa ,_dgg .MissingCodeString );};};return _gffa ,len (_gffa ),_dcefg ;};};};for _ ,_bfedg :=range charcodes {if _edeea ._dbacb !=nil {if _agaa ,_cfccd :=_edeea ._dbacb .CharcodeToUnicode (_dgg .CharCode (_bfedg ));_cfccd {_gffa =append (_gffa ,_agaa );continue ;};};if _bedce !=nil {if _ecgc ,_agdf :=_bedce .CharcodeToRune (_bfedg );_agdf {_gffa =append (_gffa ,string (_ecgc ));continue ;};};_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bfedg ,charcodes ,_edeea .isCIDFont (),_cfdfaa ,_bedce );_dcefg ++;_gffa =append (_gffa ,_dgg .MissingCodeString );};if _dcefg !=0{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_dcefg ,_cfdfaa );};return _gffa ,len (_gffa ),_dcefg ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// GetNumComponents returns the number of color components (1 for CalGray).
func (_cbgg *PdfColorCalGray )GetNumComponents ()int {return 1};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bfef *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbc ,_cdde :=_aa .GetNumbersAsFloat (objects );if _cdde !=nil {return nil ,_cdde ;};return _bfef .ColorFromFloats (_fbc );};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_dgff *PdfAcroForm )ToPdfObject ()_aa .PdfObject {_deed :=_dgff ._acba ;_fdabe :=_deed .PdfObject .(*_aa .PdfObjectDictionary );if _dgff .Fields !=nil {_ageff :=_aa .PdfObjectArray {};for _ ,_bbec :=range *_dgff .Fields {_fbeac :=_bbec .GetContext ();if _fbeac !=nil {_ageff .Append (_fbeac .ToPdfObject ());}else {_ageff .Append (_bbec .ToPdfObject ());};};_fdabe .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_ageff );};if _dgff .NeedAppearances !=nil {_fdabe .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_dgff .NeedAppearances );};if _dgff .SigFlags !=nil {_fdabe .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_dgff .SigFlags );};if _dgff .CO !=nil {_fdabe .Set ("\u0043\u004f",_dgff .CO );};if _dgff .DR !=nil {_fdabe .Set ("\u0044\u0052",_dgff .DR .ToPdfObject ());};if _dgff .DA !=nil {_fdabe .Set ("\u0044\u0041",_dgff .DA );};if _dgff .Q !=nil {_fdabe .Set ("\u0051",_dgff .Q );};if _dgff .XFA !=nil {_fdabe .Set ("\u0058\u0046\u0041",_dgff .XFA );};return _deed ;};func _egeee ()_ab .Time {_beea .Lock ();defer _beea .Unlock ();return _affbfb };

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_aa .PdfObjectInteger ;BitsPerComponent *_aa .PdfObjectInteger ;BitsPerFlag *_aa .PdfObjectInteger ;Decode *_aa .PdfObjectArray ;Function []PdfFunction ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_fegb *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _fegb .baseFields ()._edga !=nil {return _fegb .baseFields ()._edga ;};if _fee :=_fegb ._acdfa .getFontDescriptor ();_fee !=nil {return _fee ;};_ba .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_fegb );return nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_fc *PdfAction )GetContext ()PdfModel {if _fc ==nil {return nil ;};return _fc ._ac ;};func _abgag ()string {return _ba .Version };func (_daggd *XObjectImage )getParamsDict ()*_aa .PdfObjectDictionary {_ecaae :=_aa .MakeDict ();_ecaae .Set ("\u0057\u0069\u0064t\u0068",_aa .MakeInteger (*_daggd .Width ));_ecaae .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aa .MakeInteger (*_daggd .Height ));_ecaae .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aa .MakeInteger (int64 (_daggd .ColorSpace .GetNumComponents ())));_ecaae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aa .MakeInteger (*_daggd .BitsPerComponent ));return _ecaae ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _aa .PdfObject ;NewWindow _aa .PdfObject ;T _aa .PdfObject ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_caga *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_caga .HiVal )};};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func _baed (_bcaa _aa .PdfObject )(*PdfFunctionType2 ,error ){_fggae :=&PdfFunctionType2 {};var _gccdf *_aa .PdfObjectDictionary ;if _bfad ,_fbgfd :=_bcaa .(*_aa .PdfIndirectObject );_fbgfd {_fafaf ,_babdc :=_bfad .PdfObject .(*_aa .PdfObjectDictionary );if !_babdc {return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fggae ._dagd =_bfad ;_gccdf =_fafaf ;}else if _ddff ,_dgca :=_bcaa .(*_aa .PdfObjectDictionary );_dgca {_gccdf =_ddff ;}else {return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ba .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gccdf .String ());_dfgd ,_egcc :=_aa .TraceToDirectObject (_gccdf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aa .PdfObjectArray );if !_egcc {_ba .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dfgd .Len ()< 0||_dfgd .Len ()%2!=0{_ba .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fda .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fcbbd ,_cffe :=_dfgd .ToFloat64Array ();if _cffe !=nil {return nil ,_cffe ;};_fggae .Domain =_fcbbd ;_dfgd ,_egcc =_aa .TraceToDirectObject (_gccdf .Get ("\u0052\u0061\u006eg\u0065")).(*_aa .PdfObjectArray );if _egcc {if _dfgd .Len ()< 0||_dfgd .Len ()%2!=0{return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bdfdd ,_geda :=_dfgd .ToFloat64Array ();if _geda !=nil {return nil ,_geda ;};_fggae .Range =_bdfdd ;};_dfgd ,_egcc =_aa .TraceToDirectObject (_gccdf .Get ("\u0043\u0030")).(*_aa .PdfObjectArray );if _egcc {_cgdb ,_cdcce :=_dfgd .ToFloat64Array ();if _cdcce !=nil {return nil ,_cdcce ;};_fggae .C0 =_cgdb ;};_dfgd ,_egcc =_aa .TraceToDirectObject (_gccdf .Get ("\u0043\u0031")).(*_aa .PdfObjectArray );if _egcc {_acbab ,_febd :=_dfgd .ToFloat64Array ();if _febd !=nil {return nil ,_febd ;};_fggae .C1 =_acbab ;};if len (_fggae .C0 )!=len (_fggae .C1 ){_ba .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_aa .ErrRangeError ;};N ,_cffe :=_aa .GetNumberAsFloat (_aa .TraceToDirectObject (_gccdf .Get ("\u004e")));if _cffe !=nil {_ba .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gccdf .String ());return nil ,_cffe ;};_fggae .N =N ;return _fggae ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_fgafd *pdfSignDictionary )WriteString ()string {_fgafd ._ebaad =0;_fgafd ._acbe =0;_fgafd ._dfga =0;_fgafd ._baceb =0;_dbdbb :=_dc .NewBuffer (nil );_dbdbb .WriteString ("\u003c\u003c");for _ ,_fbfd :=range _fgafd .Keys (){_cdea :=_fgafd .Get (_fbfd );switch _fbfd {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_dbdbb .WriteString (_fbfd .WriteString ());_dbdbb .WriteString ("\u0020");_fgafd ._dfga =_dbdbb .Len ();_dbdbb .WriteString (_cdea .WriteString ());_dbdbb .WriteString ("\u0020");_fgafd ._baceb =_dbdbb .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_dbdbb .WriteString (_fbfd .WriteString ());_dbdbb .WriteString ("\u0020");_fgafd ._ebaad =_dbdbb .Len ();_dbdbb .WriteString (_cdea .WriteString ());_dbdbb .WriteString ("\u0020");_fgafd ._acbe =_dbdbb .Len ()-1;default:_dbdbb .WriteString (_fbfd .WriteString ());_dbdbb .WriteString ("\u0020");_dbdbb .WriteString (_cdea .WriteString ());};};_dbdbb .WriteString ("\u003e\u003e");return _dbdbb .String ();};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_fgfe :=NewPdfAnnotation ();_gbcc :=&PdfAnnotationScreen {};_gbcc .PdfAnnotation =_fgfe ;_fgfe .SetContext (_gbcc );return _gbcc ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_dgedg *PdfFieldButton )IsRadio ()bool {return _dgedg .GetType ()==ButtonTypeRadio };func (_dbgbe *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _aegfd []*PdfFieldSignature ;for _ ,_ecbff :=range _dbgbe .AllFields (){switch _bcef :=_ecbff .GetContext ().(type ){case *PdfFieldSignature :_bfcfcb :=_bcef ;_aegfd =append (_aegfd ,_bfcfcb );};};return _aegfd ;};func (_bcgc *PdfReader )newPdfActionGotoEFromDict (_abf *_aa .PdfObjectDictionary )(*PdfActionGoToE ,error ){_eag ,_eaa :=_caed (_abf .Get ("\u0046"));if _eaa !=nil {return nil ,_eaa ;};return &PdfActionGoToE {D :_abf .Get ("\u0044"),NewWindow :_abf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_abf .Get ("\u0054"),F :_eag },nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_dgggg *OutlineItem )ToPdfObject ()_aa .PdfObject {_dabg ,_ :=_dgggg .ToPdfOutlineItem ();return _dabg .ToPdfObject ();};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_bgfe *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_gaeg ,_ebdee :=color .(*PdfColorDeviceRGB );if !_ebdee {_ba .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _gaeg ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_ebeg *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccfdb :=func (_fcff float64 )float64 {if _fcff >=6.0/29{return _fcff *_fcff *_fcff ;};return 108.0/841*(_fcff -4/29);};_begg ,_cgeff :=color .(*PdfColorLab );if !_cgeff {_ba .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_begg .L ();AStar :=_begg .A ();BStar :=_begg .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_ebeg .WhitePoint [0]*_ccfdb (L );Y :=_ebeg .WhitePoint [1]*_ccfdb (M );Z :=_ebeg .WhitePoint [2]*_ccfdb (N );_abcb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_aggb :=-0.969256*X +1.875992*Y +0.041556*Z ;_ggbe :=0.055648*X +-0.204043*Y +1.057311*Z ;_abcb =_ag .Min (_ag .Max (_abcb ,0),1.0);_aggb =_ag .Min (_ag .Max (_aggb ,0),1.0);_ggbe =_ag .Min (_ag .Max (_ggbe ,0),1.0);return NewPdfColorDeviceRGB (_abcb ,_aggb ,_ggbe ),nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gecgb *PdfReader )Decrypt (password []byte )(bool ,error ){_gdcec ,_deege :=_gecgb ._gbacd .Decrypt (password );if _deege !=nil {return false ,_deege ;};if !_gdcec {return false ,nil ;};_deege =_gecgb .loadStructure ();if _deege !=nil {_ba .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_deege );return false ,_deege ;};return true ,nil ;};func (_gfcad *PdfWriter )addObject (_fafaad _aa .PdfObject )bool {_cgbc :=_gfcad .hasObject (_fafaad );if !_cgbc {_aaeaa :=_aa .ResolveReferencesDeep (_fafaad ,_gfcad ._debc );if _aaeaa !=nil {_ba .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_aaeaa );};_gfcad ._gecd =append (_gfcad ._gecd ,_fafaad );_gfcad ._faceg [_fafaad ]=struct{}{};return true ;};return false ;};func (_bab *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_afe :=NewPdfAnnotation ();_gda :=&PdfAnnotationCircle {};_gda .PdfAnnotation =_afe ;_gda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afe .SetContext (_gda );return _gda ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_adfb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _adfb .Alternate ==nil {_ba .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _adfb .N ==1{_ba .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_fadf :=NewPdfColorspaceDeviceGray ();return _fadf .ColorToRGB (color );}else if _adfb .N ==3{_ba .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _adfb .N ==4{_ba .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_gbaf :=NewPdfColorspaceDeviceCMYK ();return _gbaf .ColorToRGB (color );}else {return nil ,_fda .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ba .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_adfb );return _adfb .Alternate .ColorToRGB (color );};

// GetOCProperties returns the optional content properties PdfObject.
func (_gbda *PdfReader )GetOCProperties ()(_aa .PdfObject ,error ){_bcae :=_gbda ._fbdcg ;_bfbca :=_bcae .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bfbca =_aa .ResolveReference (_bfbca );if !_gbda ._edef {_dgfcbc :=_gbda .traverseObjectData (_bfbca );if _dgfcbc !=nil {return nil ,_dgfcbc ;};};return _bfbca ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_dcacc _gb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_bdeba _fe .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_beee _fe .Image )(*Image ,error );

// Compress an image.
Compress (_ebbg *Image ,_gecga int64 )(*Image ,error );};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_accfd *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgedb ,_bdbg :=_aa .GetNumbersAsFloat (objects );if _bdbg !=nil {return nil ,_bdbg ;};return _accfd .ColorFromFloats (_dgedb );};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func (_fdfdc *PdfReader )newPdfAnnotationFreeTextFromDict (_affa *_aa .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_egd :=PdfAnnotationFreeText {};_fdbf ,_bfbc :=_fdfdc .newPdfAnnotationMarkupFromDict (_affa );if _bfbc !=nil {return nil ,_bfbc ;};_egd .PdfAnnotationMarkup =_fdbf ;_egd .DA =_affa .Get ("\u0044\u0041");_egd .Q =_affa .Get ("\u0051");_egd .RC =_affa .Get ("\u0052\u0043");_egd .DS =_affa .Get ("\u0044\u0053");_egd .CL =_affa .Get ("\u0043\u004c");_egd .IT =_affa .Get ("\u0049\u0054");_egd .BE =_affa .Get ("\u0042\u0045");_egd .RD =_affa .Get ("\u0052\u0044");_egd .BS =_affa .Get ("\u0042\u0053");_egd .LE =_affa .Get ("\u004c\u0045");return &_egd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_cdcf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bcc .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bcc .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bcc .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ddfaa *PdfAppender ;_afgfd *DSS ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _aa .PdfObject ;MK _aa .PdfObject ;A _aa .PdfObject ;AA _aa .PdfObject ;};func (_agefe *LTV )generateVRIKey (_cecfd *PdfSignature )(string ,error ){_fabdb ,_cfccg :=_degbd (_cecfd .Contents .Bytes ());if _cfccg !=nil {return "",_cfccg ;};return _ga .ToUpper (_b .EncodeToString (_fabdb )),nil ;};func (_dffg *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_gedca *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _gedca ._adfea .(*PdfTilingPattern );};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfAction )ToPdfObject ()_aa .PdfObject {_da :=_ea ._bg ;_gf :=_da .PdfObject .(*_aa .PdfObjectDictionary );_gf .Clear ();_gf .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gf .SetIfNotNil ("\u0053",_ea .S );_gf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ea .Next );return _da ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_agafg :=map[rune ]int {};for _ ,_bffc :=range text {_agafg [_bffc ]++;};return _agafg ;};func _bdbf (_cfdd _aa .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ba .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cfdd .String (),_cfdd );_cebg :=NewPdfColorspaceSpecialPattern ();if _bede ,_acda :=_cfdd .(*_aa .PdfIndirectObject );_acda {_cebg ._eggaf =_bede ;};_cfdd =_aa .TraceToDirectObject (_cfdd );if _badab ,_ebaba :=_cfdd .(*_aa .PdfObjectName );_ebaba {if *_badab !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _cebg ,nil ;};_adfef ,_bgfd :=_cfdd .(*_aa .PdfObjectArray );if !_bgfd {_ba .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cfdd );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _adfef .Len ()!=1&&_adfef .Len ()!=2{_ba .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_adfef );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cfdd =_adfef .Get (0);if _fdfg ,_ddf :=_cfdd .(*_aa .PdfObjectName );_ddf {if *_fdfg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ba .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_fdfg );return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _adfef .Len ()> 1{_cfdd =_adfef .Get (1);_cfdd =_aa .TraceToDirectObject (_cfdd );_bbdb ,_gfaee :=NewPdfColorspaceFromPdfObject (_cfdd );if _gfaee !=nil {return nil ,_gfaee ;};_cebg .UnderlyingCS =_bbdb ;};_ba .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_cebg .UnderlyingCS );return _cebg ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_egge *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// GetCustomInfo returns a custom info value for the specified name.
func (_aadaf *PdfInfo )GetCustomInfo (name string )*_aa .PdfObjectString {var _bcdc *_aa .PdfObjectString ;if _aadaf ._gaef ==nil {return _bcdc ;};if _beec ,_cgfa :=_aadaf ._gaef .Get (*_aa .MakeName (name )).(*_aa .PdfObjectString );_cgfa {_bcdc =_beec ;};return _bcdc ;};

// ToPdfObject implements interface PdfModel.
func (_dbce *PdfAnnotationCircle )ToPdfObject ()_aa .PdfObject {_dbce .PdfAnnotation .ToPdfObject ();_abbg :=_dbce ._dde ;_bbfc :=_abbg .PdfObject .(*_aa .PdfObjectDictionary );_dbce .PdfAnnotationMarkup .appendToPdfDictionary (_bbfc );_bbfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_bbfc .SetIfNotNil ("\u0042\u0053",_dbce .BS );_bbfc .SetIfNotNil ("\u0049\u0043",_dbce .IC );_bbfc .SetIfNotNil ("\u0042\u0045",_dbce .BE );_bbfc .SetIfNotNil ("\u0052\u0044",_dbce .RD );return _abbg ;};

// GetOptimizer returns current PDF optimizer.
func (_efbfd *PdfWriter )GetOptimizer ()Optimizer {return _efbfd ._bggeg };

// GetContentStream returns the pattern cell's content stream
func (_cgefa *PdfTilingPattern )GetContentStream ()([]byte ,error ){_fagd ,_ ,_gfbga :=_cgefa .GetContentStreamWithEncoder ();return _fagd ,_gfbga ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _aa .PdfObject ;PreserveRB _aa .PdfObject ;};func (_gaae *PdfReader )newPdfAnnotationCaretFromDict (_bbc *_aa .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_afc :=PdfAnnotationCaret {};_gecb ,_ccf :=_gaae .newPdfAnnotationMarkupFromDict (_bbc );if _ccf !=nil {return nil ,_ccf ;};_afc .PdfAnnotationMarkup =_gecb ;_afc .RD =_bbc .Get ("\u0052\u0044");_afc .Sy =_bbc .Get ("\u0053\u0079");return &_afc ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ggcg *PdfFontDescriptor )ToPdfObject ()_aa .PdfObject {_ccacd :=_aa .MakeDict ();if _ggcg ._gegcg ==nil {_ggcg ._gegcg =&_aa .PdfIndirectObject {};};_ggcg ._gegcg .PdfObject =_ccacd ;_ccacd .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _ggcg .FontName !=nil {_ccacd .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ggcg .FontName );};if _ggcg .FontFamily !=nil {_ccacd .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ggcg .FontFamily );};if _ggcg .FontStretch !=nil {_ccacd .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ggcg .FontStretch );};if _ggcg .FontWeight !=nil {_ccacd .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ggcg .FontWeight );};if _ggcg .Flags !=nil {_ccacd .Set ("\u0046\u006c\u0061g\u0073",_ggcg .Flags );};if _ggcg .FontBBox !=nil {_ccacd .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ggcg .FontBBox );};if _ggcg .ItalicAngle !=nil {_ccacd .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ggcg .ItalicAngle );};if _ggcg .Ascent !=nil {_ccacd .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ggcg .Ascent );};if _ggcg .Descent !=nil {_ccacd .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ggcg .Descent );};if _ggcg .Leading !=nil {_ccacd .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ggcg .Leading );};if _ggcg .CapHeight !=nil {_ccacd .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ggcg .CapHeight );};if _ggcg .XHeight !=nil {_ccacd .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ggcg .XHeight );};if _ggcg .StemV !=nil {_ccacd .Set ("\u0053\u0074\u0065m\u0056",_ggcg .StemV );};if _ggcg .StemH !=nil {_ccacd .Set ("\u0053\u0074\u0065m\u0048",_ggcg .StemH );};if _ggcg .AvgWidth !=nil {_ccacd .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ggcg .AvgWidth );};if _ggcg .MaxWidth !=nil {_ccacd .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ggcg .MaxWidth );};if _ggcg .MissingWidth !=nil {_ccacd .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ggcg .MissingWidth );};if _ggcg .FontFile !=nil {_ccacd .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ggcg .FontFile );};if _ggcg .FontFile2 !=nil {_ccacd .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ggcg .FontFile2 );};if _ggcg .FontFile3 !=nil {_ccacd .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ggcg .FontFile3 );};if _ggcg .CharSet !=nil {_ccacd .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ggcg .CharSet );};if _ggcg .Style !=nil {_ccacd .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ggcg .FontName );};if _ggcg .Lang !=nil {_ccacd .Set ("\u004c\u0061\u006e\u0067",_ggcg .Lang );};if _ggcg .FD !=nil {_ccacd .Set ("\u0046\u0044",_ggcg .FD );};if _ggcg .CIDSet !=nil {_ccacd .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ggcg .CIDSet );};return _ggcg ._gegcg ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_aabd :=NewPdfAnnotation ();_geb :=&PdfAnnotationUnderline {};_geb .PdfAnnotation =_aabd ;_geb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aabd .SetContext (_geb );return _geb ;};func _cgbdcb (_aagd _aa .PdfObject )(*_aa .PdfObjectDictionary ,*fontCommon ,error ){_cadc :=&fontCommon {};if _dggag ,_ccegf :=_aagd .(*_aa .PdfIndirectObject );_ccegf {_cadc ._baeg =_dggag .ObjectNumber ;};_eacd ,_gdec :=_aa .GetDict (_aagd );if !_gdec {_ba .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aagd );return nil ,nil ,ErrFontNotSupported ;};_gedg ,_gdec :=_aa .GetNameVal (_eacd .Get ("\u0054\u0079\u0070\u0065"));if !_gdec {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _gedg !="\u0046\u006f\u006e\u0074"{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gedg ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_aa .ErrTypeError ;};_bfgd ,_gdec :=_aa .GetNameVal (_eacd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gdec {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_cadc ._cbae =_bfgd ;_fdffb ,_gdec :=_aa .GetNameVal (_eacd .Get ("\u004e\u0061\u006d\u0065"));if _gdec {_cadc ._caaca =_fdffb ;};if _bfgd =="\u0054\u0079\u0070e\u0033"{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_eacd );return _eacd ,_cadc ,ErrType3FontNotSupported ;};_gcdac ,_gdec :=_aa .GetNameVal (_eacd .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_gdec {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _eacd ,_cadc ,ErrRequiredAttributeMissing ;};_cadc ._debe =_gcdac ;_gbbfc :=_eacd .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _gbbfc !=nil {_efae ,_abdg :=_affbd (_gbbfc );if _abdg !=nil {_ba .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abdg );return _eacd ,_cadc ,_abdg ;};_cadc ._edga =_efae ;};_eaff :=_eacd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _eaff !=nil {_cadc ._bgdfb =_aa .TraceToDirectObject (_eaff );_affaa ,_afbc :=_cdgbd (_cadc ._bgdfb ,_cadc );if _afbc !=nil {return _eacd ,_cadc ,_afbc ;};_cadc ._dbacb =_affaa ;}else if _bfgd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_bfgd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bcfg ,_cebc :=_dgg .NewCIDSystemInfo (_eacd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _cebc !=nil {return _eacd ,_cadc ,_cebc ;};_abdag :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_bcfg .Registry ,_bcfg .Ordering );if _dgg .IsPredefinedCMap (_abdag ){_cadc ._dbacb ,_cebc =_dgg .LoadPredefinedCMap (_abdag );if _cebc !=nil {_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_abdag ,_cebc );};};};return _eacd ,_cadc ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_aeagf *PdfFieldSignature )ToPdfObject ()_aa .PdfObject {if _aeagf .PdfAnnotationWidget !=nil {_aeagf .PdfAnnotationWidget .ToPdfObject ();};_aeagf .PdfField .ToPdfObject ();_ebgef :=_aeagf ._ebabe ;_ddfea :=_ebgef .PdfObject .(*_aa .PdfObjectDictionary );_ddfea .SetIfNotNil ("\u0046\u0054",_aa .MakeName ("\u0053\u0069\u0067"));_ddfea .SetIfNotNil ("\u004c\u006f\u0063\u006b",_aeagf .Lock );_ddfea .SetIfNotNil ("\u0053\u0056",_aeagf .SV );if _aeagf .V !=nil {_ddfea .SetIfNotNil ("\u0056",_aeagf .V .ToPdfObject ());};return _ebgef ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_cdff *_aa .PdfIndirectObject ;_bfbdg *_aa .PdfIndirectObject ;_agfeg map[_aa .PdfObject ]struct{};_gecd []_aa .PdfObject ;_faceg map[_aa .PdfObject ]struct{};_ddcga []*_aa .PdfIndirectObject ;_ggfaf *PdfOutlineTreeNode ;_gbcg *_aa .PdfObjectDictionary ;_gcabb []_aa .PdfObject ;_fgeca *_aa .PdfIndirectObject ;_cegff *_a .Writer ;_gaafg int64 ;_gcdgc error ;_fdaab *_aa .PdfCrypt ;_dadf *_aa .PdfObjectDictionary ;_ccfdce *_aa .PdfIndirectObject ;_eegbf *_aa .PdfObjectArray ;_abeac int ;_ccdd int ;_acgbd *bool ;_bfdb map[_aa .PdfObject ][]*_aa .PdfObjectDictionary ;_eaee *PdfAcroForm ;_bggeg Optimizer ;_bfeb map[int ]crossReference ;_bfaeg int64 ;ObjNumOffset int ;_dgfbd bool ;_deedd _aa .XrefTable ;_gdde int64 ;_gfbdgb int64 ;_edff map[_aa .PdfObject ]int64 ;_debc map[_aa .PdfObject ]struct{};_ecdeg string ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_cabde *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ebdd *_aa .PdfIndirectObject ;};func (_ada *PdfReader )newPdfAnnotationTextFromDict (_bgbef *_aa .PdfObjectDictionary )(*PdfAnnotationText ,error ){_dfae :=PdfAnnotationText {};_eec ,_dgbd :=_ada .newPdfAnnotationMarkupFromDict (_bgbef );if _dgbd !=nil {return nil ,_dgbd ;};_dfae .PdfAnnotationMarkup =_eec ;_dfae .Open =_bgbef .Get ("\u004f\u0070\u0065\u006e");_dfae .Name =_bgbef .Get ("\u004e\u0061\u006d\u0065");_dfae .State =_bgbef .Get ("\u0053\u0074\u0061t\u0065");_dfae .StateModel =_bgbef .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_dfae ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bedd *PdfField )Flags ()FieldFlag {var _beaba FieldFlag ;_dgee ,_acdg :=_bedd .inherit (func (_gegf *PdfField )bool {if _gegf .Ff !=nil {_beaba =FieldFlag (*_bedd .Ff );return true ;};return false ;});if _acdg !=nil {_ba .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_acdg );};if !_dgee {_ba .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _beaba ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_cgab *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbba ,_bagc :=color .(*PdfColorCalGray );if !_bagc {_ba .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cbba .Val ();X :=_cgab .WhitePoint [0]*_ag .Pow (ANorm ,_cgab .Gamma );Y :=_cgab .WhitePoint [1]*_ag .Pow (ANorm ,_cgab .Gamma );Z :=_cgab .WhitePoint [2]*_ag .Pow (ANorm ,_cgab .Gamma );_abed :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fge :=-0.969256*X +1.875992*Y +0.041556*Z ;_gfgaa :=0.055648*X +-0.204043*Y +1.057311*Z ;_abed =_ag .Min (_ag .Max (_abed ,0),1.0);_fge =_ag .Min (_ag .Max (_fge ,0),1.0);_gfgaa =_ag .Min (_ag .Max (_gfgaa ,0),1.0);return NewPdfColorDeviceRGB (_abed ,_fge ,_gfgaa ),nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aaa *PdfColorspaceDeviceCMYK )ToPdfObject ()_aa .PdfObject {return _aa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ToInteger convert to an integer format.
func (_bafff *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_abda :=_ag .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_abda *_bafff .C ()),uint32 (_abda *_bafff .M ()),uint32 (_abda *_bafff .Y ()),uint32 (_abda *_bafff .K ())};};

// PdfVersion returns version of the PDF file.
func (_cfbdd *PdfReader )PdfVersion ()_aa .Version {return _cfbdd ._gbacd .PdfVersion ()};func _bfab (_faffd *_aa .PdfObjectDictionary ,_dfcgd *fontCommon ,_bdeaa _af .TextEncoder )(*pdfFontSimple ,error ){_bbbge :=_abcce (_dfcgd );_bbbge ._dcfgf =_bdeaa ;if _bdeaa ==nil {_dbcac :=_faffd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _dbcac ==nil {_dbcac =_aa .MakeInteger (0);};_bbbge .FirstChar =_dbcac ;_fecag ,_dbgd :=_aa .GetIntVal (_dbcac );if !_dbgd {_ba .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dbcac );return nil ,_aa .ErrTypeError ;};_cbgc :=_af .CharCode (_fecag );_dbcac =_faffd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _dbcac ==nil {_dbcac =_aa .MakeInteger (255);};_bbbge .LastChar =_dbcac ;_fecag ,_dbgd =_aa .GetIntVal (_dbcac );if !_dbgd {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_dbcac );return nil ,_aa .ErrTypeError ;};_afec :=_af .CharCode (_fecag );_bbbge ._ccga =make (map[_af .CharCode ]float64 );_dbcac =_faffd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _dbcac !=nil {_bbbge .Widths =_dbcac ;_bdfbe ,_ddead :=_aa .GetArray (_dbcac );if !_ddead {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_dbcac );return nil ,_aa .ErrTypeError ;};_cgaad ,_edcbd :=_bdfbe .ToFloat64Array ();if _edcbd !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_edcbd ;};if len (_cgaad )!=int (_afec -_cbgc +1){_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_afec -_cbgc +1,len (_cgaad ));return nil ,_aa .ErrRangeError ;};for _eefbf ,_eacc :=range _cgaad {_bbbge ._ccga [_cbgc +_af .CharCode (_eefbf )]=_eacc ;};};};_bbbge .Encoding =_aa .TraceToDirectObject (_faffd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bbbge ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_aa .PdfObject ,error );};func (_eaeb *PdfReader )newPdfAnnotationPopupFromDict (_ddb *_aa .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_cedf :=PdfAnnotationPopup {};_cedf .Parent =_ddb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cedf .Open =_ddb .Get ("\u004f\u0070\u0065\u006e");return &_cedf ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_cefaa *PdfField )GetContainingPdfObject ()_aa .PdfObject {return _cefaa ._ebabe };

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_adebdg *PdfPageResources )GetColorspaceByName (keyName _aa .PdfObjectName )(PdfColorspace ,bool ){_eeaaf ,_gbdea :=_adebdg .GetColorspaces ();if _gbdea !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gbdea );return nil ,false ;};if _eeaaf ==nil {return nil ,false ;};_dffcf ,_ddffc :=_eeaaf .Colorspaces [string (keyName )];if !_ddffc {return nil ,false ;};return _dffcf ,true ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_gedc *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ececd *PdfColorspaceSpecialPattern )ToPdfObject ()_aa .PdfObject {if _ececd .UnderlyingCS ==nil {return _aa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cbdg :=_aa .MakeArray (_aa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cbdg .Append (_ececd .UnderlyingCS .ToPdfObject ());if _ececd ._eggaf !=nil {_ececd ._eggaf .PdfObject =_cbdg ;return _ececd ._eggaf ;};return _cbdg ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fgcda *PdfPageResources )SetXObjectByName (keyName _aa .PdfObjectName ,stream *_aa .PdfObjectStream )error {if _fgcda .XObject ==nil {_fgcda .XObject =_aa .MakeDict ();};_eeae :=_aa .TraceToDirectObject (_fgcda .XObject );_dfbdf ,_bedfa :=_eeae .(*_aa .PdfObjectDictionary );if !_bedfa {_ba .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fgcda .XObject ,_eeae );return _fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfbdf .Set (keyName ,stream );return nil ;};func _daae (_bfefe *_aa .PdfObjectDictionary )*VRI {_bcga ,_ :=_aa .GetString (_bfefe .Get ("\u0054\u0055"));_gceg ,_ :=_aa .GetString (_bfefe .Get ("\u0054\u0053"));return &VRI {Cert :_feab (_bfefe .Get ("\u0043\u0065\u0072\u0074")),OCSP :_feab (_bfefe .Get ("\u004f\u0043\u0053\u0050")),CRL :_feab (_bfefe .Get ("\u0043\u0052\u004c")),TU :_bcga ,TS :_gceg };};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_gabad *PdfPageResources )GetXObjectImageByName (keyName _aa .PdfObjectName )(*XObjectImage ,error ){_dfge ,_baabe :=_gabad .GetXObjectByName (keyName );if _dfge ==nil {return nil ,nil ;};if _baabe !=XObjectTypeImage {return nil ,_fda .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_ebaaf ,_fgbdg :=NewXObjectImageFromStream (_dfge );if _fgbdg !=nil {return nil ,_fgbdg ;};return _ebaaf ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_fca :=NewPdfAction ();_dag :=&PdfActionSubmitForm {};_dag .PdfAction =_fca ;_fca .SetContext (_dag );return _dag ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_dcdec *PdfFont )CharcodesToUnicode (charcodes []_af .CharCode )[]rune {_cbeb ,_ ,_ :=_dcdec .CharcodesToUnicodeWithStats (charcodes );return _cbeb ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _aa .PdfObject ;Name _aa .PdfObject ;State _aa .PdfObject ;StateModel _aa .PdfObject ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_dcbff *modelManager )GetPrimitiveFromModel (model PdfModel )_aa .PdfObject {_edfb ,_dgede :=_dcbff ._ebcfa [model ];if !_dgede {return nil ;};return _edfb ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cedd *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ba .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgefc :=[]float64 {0.0};if _cedd .C0 !=nil {_dgefc =_cedd .C0 ;};_efgg :=[]float64 {1.0};if _cedd .C1 !=nil {_efgg =_cedd .C1 ;};var _dgbgee []float64 ;for _agff :=0;_agff < len (_dgefc );_agff ++{_daagd :=_dgefc [_agff ]+_ag .Pow (x [0],_cedd .N )*(_efgg [_agff ]-_dgefc [_agff ]);_dgbgee =append (_dgbgee ,_daagd );};return _dgbgee ,nil ;};

// String implements interface PdfObject.
func (_cagb *PdfAction )String ()string {_fcb ,_bef :=_cagb .ToPdfObject ().(*_aa .PdfIndirectObject );if _bef {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cagb ._ac ,_fcb .PdfObject .String ());};return "";};

// GetFontDescriptor returns the font descriptor for `font`.
func (_agceb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _agceb ._acdfa .getFontDescriptor (),nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_dcaf :=NewPdfAnnotation ();_cfa :=&PdfAnnotation3D {};_cfa .PdfAnnotation =_dcaf ;_dcaf .SetContext (_cfa );return _cfa ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gcac *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daad :=vals [0];if _daad < 0.0||_daad > 1.0{_ba .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _daad < 0.0{_daad =0.0;}else if _daad > 1.0{_daad =1.0;};return NewPdfColorDeviceGray (_daad ),nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func (_egegf *PdfWriter )writeBytes (_eecef []byte ){if _egegf ._gcdgc !=nil {return ;};_fcfag ,_bbccc :=_egegf ._cegff .Write (_eecef );_egegf ._gaafg +=int64 (_fcfag );_egegf ._gcdgc =_bbccc ;};

// AddFont adds a font dictionary to the Font resources.
func (_bcca *PdfPage )AddFont (name _aa .PdfObjectName ,font _aa .PdfObject )error {if _bcca .Resources ==nil {_bcca .Resources =NewPdfPageResources ();};if _bcca .Resources .Font ==nil {_bcca .Resources .Font =_aa .MakeDict ();};_gfebf ,_cecc :=_aa .TraceToDirectObject (_bcca .Resources .Font ).(*_aa .PdfObjectDictionary );if !_cecc {_ba .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_aa .TraceToDirectObject (_bcca .Resources .Font ));return _fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gfebf .Set (name ,font );return nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_beea .Lock ();defer _beea .Unlock ();_bdegd =author };func _agfe ()string {_beea .Lock ();defer _beea .Unlock ();return _adafa };

// ToPdfObject returns the PDF representation of the function.
func (_fbdee *PdfFunctionType4 )ToPdfObject ()_aa .PdfObject {_dcgffc :=_fbdee ._abgf ;if _dcgffc ==nil {_fbdee ._abgf =&_aa .PdfObjectStream {};_dcgffc =_fbdee ._abgf ;};_eeebc :=_aa .MakeDict ();_eeebc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aa .MakeInteger (4));_ecgba :=&_aa .PdfObjectArray {};for _ ,_bdcb :=range _fbdee .Domain {_ecgba .Append (_aa .MakeFloat (_bdcb ));};_eeebc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ecgba );_bgbb :=&_aa .PdfObjectArray {};for _ ,_ccdc :=range _fbdee .Range {_bgbb .Append (_aa .MakeFloat (_ccdc ));};_eeebc .Set ("\u0052\u0061\u006eg\u0065",_bgbb );if _fbdee ._bade ==nil &&_fbdee .Program !=nil {_fbdee ._bade =[]byte (_fbdee .Program .String ());};_eeebc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aa .MakeInteger (int64 (len (_fbdee ._bade ))));_dcgffc .Stream =_fbdee ._bade ;_dcgffc .PdfObjectDictionary =_eeebc ;return _dcgffc ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// SetContext sets the sub annotation (context).
func (_afb *PdfAnnotation )SetContext (ctx PdfModel ){_afb ._dbdc =ctx };func (_cbf *PdfReader )newPdfAnnotationFileAttachmentFromDict (_gfee *_aa .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gba :=PdfAnnotationFileAttachment {};_egac ,_fdbc :=_cbf .newPdfAnnotationMarkupFromDict (_gfee );if _fdbc !=nil {return nil ,_fdbc ;};_gba .PdfAnnotationMarkup =_egac ;_gba .FS =_gfee .Get ("\u0046\u0053");_gba .Name =_gfee .Get ("\u004e\u0061\u006d\u0065");return &_gba ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ecfag *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_baff ,_ebcf :=color .(*PdfColorDeviceGray );if !_ebcf {_ba .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_baff ),float64 (*_baff ),float64 (*_baff )),nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_aa .PdfObjectArray ;ExtGState _aa .PdfObject ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_bfbeb *_aa .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_aa .PdfObjectName ;Filter *_aa .PdfObjectName ;SubFilter *_aa .PdfObjectName ;Contents *_aa .PdfObjectString ;Cert _aa .PdfObject ;ByteRange *_aa .PdfObjectArray ;Reference *_aa .PdfObjectArray ;Changes *_aa .PdfObjectArray ;Name *_aa .PdfObjectString ;M *_aa .PdfObjectString ;Location *_aa .PdfObjectString ;Reason *_aa .PdfObjectString ;ContactInfo *_aa .PdfObjectString ;R *_aa .PdfObjectInteger ;V *_aa .PdfObjectInteger ;PropBuild *_aa .PdfObjectDictionary ;PropAuthTime *_aa .PdfObjectInteger ;PropAuthType *_aa .PdfObjectName ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ccedg *PdfShading )ToPdfObject ()_aa .PdfObject {_eeade :=_ccedg ._fbdfa ;_ebefb ,_edbe :=_ccedg .getShadingDict ();if _edbe !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ccedg .ShadingType !=nil {_ebefb .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ccedg .ShadingType );};if _ccedg .ColorSpace !=nil {_ebefb .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ccedg .ColorSpace .ToPdfObject ());};if _ccedg .Background !=nil {_ebefb .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_ccedg .Background );};if _ccedg .BBox !=nil {_ebefb .Set ("\u0042\u0042\u006f\u0078",_ccedg .BBox .ToPdfObject ());};if _ccedg .AntiAlias !=nil {_ebefb .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_ccedg .AntiAlias );};return _eeade ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_aa .PdfObjectArray ;TI *_aa .PdfObjectInteger ;I *_aa .PdfObjectArray ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_afecg *PdfReader )GetObjectNums ()[]int {return _afecg ._gbacd .GetObjectNums ()};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _aa .PdfObject ;Name _aa .PdfObject ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_dade :=NewPdfAnnotation ();_ecegd :=&PdfAnnotationLine {};_ecegd .PdfAnnotation =_dade ;_ecegd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dade .SetContext (_ecegd );return _ecegd ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_beaa *PdfSignature )bool ;Validate (_fdbgc *PdfSignature ,_cbeaf Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gfab *PdfSignature )(Hasher ,error );Sign (_bbfgc *PdfSignature ,_eedbg Hasher )error ;};func (_baga *PdfReader )newPdfAnnotationStampFromDict (_cbe *_aa .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ecbe :=PdfAnnotationStamp {};_ebab ,_cdab :=_baga .newPdfAnnotationMarkupFromDict (_cbe );if _cdab !=nil {return nil ,_cdab ;};_ecbe .PdfAnnotationMarkup =_ebab ;_ecbe .Name =_cbe .Get ("\u004e\u0061\u006d\u0065");return &_ecbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bfb *PdfActionGoToE )ToPdfObject ()_aa .PdfObject {_bfb .PdfAction .ToPdfObject ();_ggf :=_bfb ._bg ;_dbe :=_ggf .PdfObject .(*_aa .PdfObjectDictionary );_dbe .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeGoToE )));if _bfb .F !=nil {_dbe .Set ("\u0046",_bfb .F .ToPdfObject ());};_dbe .SetIfNotNil ("\u0044",_bfb .D );_dbe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bfb .NewWindow );_dbe .SetIfNotNil ("\u0054",_bfb .T );return _ggf ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _aa .PdfObjectArray )(*PdfRectangle ,error ){_ggcac :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _bedbd error ;_ggcac .Llx ,_bedbd =_aa .GetNumberAsFloat (arr .Get (0));if _bedbd !=nil {return nil ,_bedbd ;};_ggcac .Lly ,_bedbd =_aa .GetNumberAsFloat (arr .Get (1));if _bedbd !=nil {return nil ,_bedbd ;};_ggcac .Urx ,_bedbd =_aa .GetNumberAsFloat (arr .Get (2));if _bedbd !=nil {return nil ,_bedbd ;};_ggcac .Ury ,_bedbd =_aa .GetNumberAsFloat (arr .Get (3));if _bedbd !=nil {return nil ,_bedbd ;};return &_ggcac ,nil ;};func _fdfgd (_dffd *_aa .PdfObjectDictionary )(*PdfShadingPattern ,error ){_edag :=&PdfShadingPattern {};_gedge :=_dffd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _gedge ==nil {_ba .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aacfg ,_gabb :=_bfcfcd (_gedge );if _gabb !=nil {_ba .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gabb );return nil ,_gabb ;};_edag .Shading =_aacfg ;if _cacfd :=_dffd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cacfd !=nil {_eeaff ,_dgege :=_cacfd .(*_aa .PdfObjectArray );if !_dgege {_ba .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cacfd );return nil ,_aa .ErrTypeError ;};_edag .Matrix =_eeaff ;};if _deeb :=_dffd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_deeb !=nil {_edag .ExtGState =_deeb ;};return _edag ,nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cdcbb :=PdfPage {};_cdcbb ._bebd =_aa .MakeDict ();_cdcbb .Resources =NewPdfPageResources ();_caec :=_aa .PdfIndirectObject {};_caec .PdfObject =_cdcbb ._bebd ;_cdcbb ._gacge =&_caec ;return &_cdcbb ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_gcab *PdfField )IsTerminal ()bool {return len (_gcab .Kids )==0};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dbdeb *PdfFieldText )ToPdfObject ()_aa .PdfObject {_dbdeb .PdfField .ToPdfObject ();_bbfe :=_dbdeb ._ebabe ;_aceb :=_bbfe .PdfObject .(*_aa .PdfObjectDictionary );_aceb .Set ("\u0046\u0054",_aa .MakeName ("\u0054\u0078"));if _dbdeb .DA !=nil {_aceb .Set ("\u0044\u0041",_dbdeb .DA );};if _dbdeb .Q !=nil {_aceb .Set ("\u0051",_dbdeb .Q );};if _dbdeb .DS !=nil {_aceb .Set ("\u0044\u0053",_dbdeb .DS );};if _dbdeb .RV !=nil {_aceb .Set ("\u0052\u0056",_dbdeb .RV );};if _dbdeb .MaxLen !=nil {_aceb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dbdeb .MaxLen );};return _bbfe ;};

// Val returns the color value.
func (_aggd *PdfColorDeviceGray )Val ()float64 {return float64 (*_aggd )};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dggc *PdfAnnotationWidget )Field ()*PdfField {return _dggc ._eagf };func (_eaafd *DSS )add (_cecgb *[]*_aa .PdfObjectStream ,_bedc map[string ]*_aa .PdfObjectStream ,_bdbaf [][]byte )([]*_aa .PdfObjectStream ,error ){_bfedf :=make ([]*_aa .PdfObjectStream ,0,len (_bdbaf ));for _ ,_ggfa :=range _bdbaf {_caag ,_bdge :=_degbd (_ggfa );if _bdge !=nil {return nil ,_bdge ;};_dfec ,_fecg :=_bedc [string (_caag )];if !_fecg {_dfec ,_bdge =_aa .MakeStream (_ggfa ,_aa .NewRawEncoder ());if _bdge !=nil {return nil ,_bdge ;};_bedc [string (_caag )]=_dfec ;*_cecgb =append (*_cecgb ,_dfec );};_bfedf =append (_bfedf ,_dfec );};return _bfedf ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_adafg *PdfFunctionType0 )ToPdfObject ()_aa .PdfObject {if _adafg ._efgaf ==nil {_adafg ._efgaf =&_aa .PdfObjectStream {};};_aeeeb :=_aa .MakeDict ();_aeeeb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aa .MakeInteger (0));_cfcce :=&_aa .PdfObjectArray {};for _ ,_ceaeg :=range _adafg .Domain {_cfcce .Append (_aa .MakeFloat (_ceaeg ));};_aeeeb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfcce );_cffa :=&_aa .PdfObjectArray {};for _ ,_fadfc :=range _adafg .Range {_cffa .Append (_aa .MakeFloat (_fadfc ));};_aeeeb .Set ("\u0052\u0061\u006eg\u0065",_cffa );_gggd :=&_aa .PdfObjectArray {};for _ ,_feagg :=range _adafg .Size {_gggd .Append (_aa .MakeInteger (int64 (_feagg )));};_aeeeb .Set ("\u0053\u0069\u007a\u0065",_gggd );_aeeeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_aa .MakeInteger (int64 (_adafg .BitsPerSample )));if _adafg .Order !=1{_aeeeb .Set ("\u004f\u0072\u0064e\u0072",_aa .MakeInteger (int64 (_adafg .Order )));};_aeeeb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aa .MakeInteger (int64 (len (_adafg ._gfdfd ))));_adafg ._efgaf .Stream =_adafg ._gfdfd ;_adafg ._efgaf .PdfObjectDictionary =_aeeeb ;return _adafg ._efgaf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cfcda pdfCIDFontType2 )GetRuneMetrics (r rune )(_fa .CharMetrics ,bool ){_bdfcc ,_dbedg :=_cfcda ._cddaf [r ];if !_dbedg {_cbga ,_dceba :=_aa .GetInt (_cfcda .DW );if !_dceba {return _fa .CharMetrics {},false ;};_bdfcc =int (*_cbga );};return _fa .CharMetrics {Wx :float64 (_bdfcc )},true ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_gfbbd *PdfPattern )ToPdfObject ()_aa .PdfObject {_gcffb :=_gfbbd .getDict ();_gcffb .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gcffb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_aa .MakeInteger (_gfbbd .PatternType ));return _gfbbd ._dedae ;};func _faabg (_ebeeg string )map[string ]string {_dgae :=_bgggc .Split (_ebeeg ,-1);_dacd :=map[string ]string {};for _ ,_eafb :=range _dgae {_dafbd :=_eeaa .FindStringSubmatch (_eafb );if _dafbd ==nil {continue ;};_dbaf ,_ddeb :=_dafbd [1],_dafbd [2];_dacd [_dbaf ]=_ddeb ;};return _dacd ;};

// CustomKeys returns all custom info keys as list.
func (_dbgb *PdfInfo )CustomKeys ()[]string {if _dbgb ._gaef ==nil {return nil ;};_cecdf :=make ([]string ,len (_dbgb ._gaef .Keys ()));for _ ,_fadd :=range _dbgb ._gaef .Keys (){_cecdf =append (_cecdf ,_fadd .String ());};return _cecdf ;};

// Subtype returns the font's "Subtype" field.
func (_caeef *PdfFont )Subtype ()string {_egecc :=_caeef .baseFields ()._cbae ;if _geca ,_fbbf :=_caeef ._acdfa .(*pdfFontType0 );_fbbf {_egecc =_egecc +"\u003a"+_geca .DescendantFont .Subtype ();};return _egecc ;};func (_dced *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_bfegad int64 ;_ddbbg int64 ;_efdea int64 ;_gcga int64 ;_ecca int64 ;_ddgce int64 ;_gaad byte ;_bcgbe int64 ;_affda int64 ;};func (_fbge *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_egf :=NewPdfAnnotation ();_bcge :=&PdfAnnotationPopup {};_bcge .PdfAnnotation =_egf ;_egf .SetContext (_bcge );return _bcge ;};

// ToPdfObject implements interface PdfModel.
func (_dgfc *PdfActionGoTo )ToPdfObject ()_aa .PdfObject {_dgfc .PdfAction .ToPdfObject ();_ffa :=_dgfc ._bg ;_fdec :=_ffa .PdfObject .(*_aa .PdfObjectDictionary );_fdec .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeGoTo )));_fdec .SetIfNotNil ("\u0044",_dgfc .D );return _ffa ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_egfg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _egfg .Base ==nil {return nil ,_fda .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _egfg .Base .ColorToRGB (color );};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func _ccdfa (_gga ,_aefb string )string {if _ga .Contains (_gga ,"\u002b"){_bbcg :=_ga .Split (_gga ,"\u002b");if len (_bbcg )==2{_gga =_bbcg [1];};};return _aefb +"\u002b"+_gga ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aa .PdfObject ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gaafa :=&PdfOutlineItem {_bfeac :_aa .MakeIndirectObject (_aa .MakeDict ())};_gaafa ._caeff =_gaafa ;return _gaafa ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gffb *Image )ToGoImage ()(_fe .Image ,error ){_ba .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_aegccg ,_bbbgge :=_ff .NewImage (int (_gffb .Width ),int (_gffb .Height ),int (_gffb .BitsPerComponent ),_gffb .ColorComponents ,_gffb .Data ,_gffb ._eecd ,_gffb ._ddfac );if _bbbgge !=nil {return nil ,_bbbgge ;};return _aegccg ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cdba _aa .PdfObject ;};func (_acbbf *pdfFontSimple )baseFields ()*fontCommon {return &_acbbf .fontCommon };func (_cedfd *Image )resampleLowBits (_abcf []uint32 ){_dffab :=_ff .BytesPerLine (int (_cedfd .Width ),int (_cedfd .BitsPerComponent ),_cedfd .ColorComponents );_fgfgf :=make ([]byte ,_cedfd .ColorComponents *_dffab *int (_cedfd .Height ));_ebegg :=int (_cedfd .BitsPerComponent )*_cedfd .ColorComponents *int (_cedfd .Width );_eegg :=uint8 (8);var (_aace ,_gafaa int ;_abdea uint32 ;);for _bbdga :=0;_bbdga < int (_cedfd .Height );_bbdga ++{_gafaa =_bbdga *_dffab ;for _dcdfb :=0;_dcdfb < _ebegg ;_dcdfb ++{_abdea =_abcf [_aace ];_eegg -=uint8 (_cedfd .BitsPerComponent );_fgfgf [_gafaa ]|=byte (_abdea )<<_eegg ;if _eegg ==0{_eegg =8;_gafaa ++;};_aace ++;};};_cedfd .Data =_fgfgf ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_egafe *PdfReader )GetNamedDestinations ()(_aa .PdfObject ,error ){_bgga :=_aa .ResolveReference (_egafe ._fbdcg .Get ("\u004e\u0061\u006de\u0073"));if _bgga ==nil {return nil ,nil ;};if !_egafe ._edef {_fcba :=_egafe .traverseObjectData (_bgga );if _fcba !=nil {return nil ,_fcba ;};};return _bgga ,nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_aa .PdfObject ;GetContainingPdfObject ()_aa .PdfObject ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_gdfee *PdfColorCalRGB )GetNumComponents ()int {return 3};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bgad *PdfColorspaceLab )DecodeArray ()[]float64 {_gfda :=[]float64 {0,100};if _bgad .Range !=nil &&len (_bgad .Range )==4{_gfda =append (_gfda ,_bgad .Range ...);}else {_gfda =append (_gfda ,-100,100,-100,100);};return _gfda ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gff :=&PdfColorspaceCalRGB {};_gff .BlackPoint =[]float64 {0.0,0.0,0.0};_gff .Gamma =[]float64 {1.0,1.0,1.0};_gff .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gff ;};func (_ebfe *PdfWriter )writeObject (_fbbec int ,_cbaea _aa .PdfObject ){_ba .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_fbbec );if _eaec ,_bacdd :=_cbaea .(*_aa .PdfIndirectObject );_bacdd {_ebfe ._bfeb [_fbbec ]=crossReference {Type :1,Offset :_ebfe ._gaafg ,Generation :_eaec .GenerationNumber };_cegg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fbbec );if _fcffd ,_feefe :=_eaec .PdfObject .(*pdfSignDictionary );_feefe {_fcffd ._bdaaf =_ebfe ._gaafg +int64 (len (_cegg ));};if _eaec .PdfObject ==nil {_ba .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_eaec .PdfObject =_aa .MakeNull ();};_cegg +=_eaec .PdfObject .WriteString ();_cegg +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_ebfe .writeString (_cegg );return ;};if _efff ,_aggef :=_cbaea .(*_aa .PdfObjectStream );_aggef {_ebfe ._bfeb [_fbbec ]=crossReference {Type :1,Offset :_ebfe ._gaafg ,Generation :_efff .GenerationNumber };_cdeg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fbbec );_cdeg +=_efff .PdfObjectDictionary .WriteString ();_cdeg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebfe .writeString (_cdeg );_ebfe .writeBytes (_efff .Stream );_ebfe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gbcad ,_aeafc :=_cbaea .(*_aa .PdfObjectStreams );_aeafc {_ebfe ._bfeb [_fbbec ]=crossReference {Type :1,Offset :_ebfe ._gaafg ,Generation :_gbcad .GenerationNumber };_ccea :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fbbec );var _gedgg []string ;var _ddeea string ;var _bbacae int64 ;for _debce ,_gfebc :=range _gbcad .Elements (){_abagd ,_aaebge :=_gfebc .(*_aa .PdfIndirectObject );if !_aaebge {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_fbbec ,_gfebc );continue ;};_abbd :=_abagd .PdfObject .WriteString ()+"\u0020";_ddeea =_ddeea +_abbd ;_gedgg =append (_gedgg ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_abagd .ObjectNumber ,_bbacae ));_ebfe ._bfeb [int (_abagd .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_fbbec ,Index :_debce };_bbacae =_bbacae +int64 (len ([]byte (_abbd )));};_gbdead :=_ga .Join (_gedgg ,"\u0020")+"\u0020";_babfa :=_aa .NewFlateEncoder ();_dgfbc :=_babfa .MakeStreamDict ();_dgfbc .Set (_aa .PdfObjectName ("\u0054\u0079\u0070\u0065"),_aa .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_gebde :=int64 (_gbcad .Len ());_dgfbc .Set (_aa .PdfObjectName ("\u004e"),_aa .MakeInteger (_gebde ));_feefef :=int64 (len (_gbdead ));_dgfbc .Set (_aa .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_aa .MakeInteger (_feefef ));_dedf ,_ :=_babfa .EncodeBytes ([]byte (_gbdead +_ddeea ));_fbbdd :=int64 (len (_dedf ));_dgfbc .Set (_aa .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_aa .MakeInteger (_fbbdd ));_ccea +=_dgfbc .WriteString ();_ccea +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebfe .writeString (_ccea );_ebfe .writeBytes (_dedf );_ebfe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_ebfe .writeString (_cbaea .WriteString ());};func (_fff *PdfReader )newPdfActionLaunchFromDict (_eede *_aa .PdfObjectDictionary )(*PdfActionLaunch ,error ){_acf ,_ggfg :=_caed (_eede .Get ("\u0046"));if _ggfg !=nil {return nil ,_ggfg ;};return &PdfActionLaunch {Win :_eede .Get ("\u0057\u0069\u006e"),Mac :_eede .Get ("\u004d\u0061\u0063"),Unix :_eede .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_eede .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_acf },nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebdb *PdfActionImportData )ToPdfObject ()_aa .PdfObject {_ebdb .PdfAction .ToPdfObject ();_ggfe :=_ebdb ._bg ;_fcc :=_ggfe .PdfObject .(*_aa .PdfObjectDictionary );_fcc .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeImportData )));if _ebdb .F !=nil {_fcc .Set ("\u0046",_ebdb .F .ToPdfObject ());};return _ggfe ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_fgbd PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_aa .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_cbaf []_aa .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_abfaf []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_gega *PdfPageResources )HasColorspaceByName (keyName _aa .PdfObjectName )bool {_fdeab ,_ededg :=_gega .GetColorspaces ();if _ededg !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ededg );return false ;};if _fdeab ==nil {return false ;};_ ,_dbfb :=_fdeab .Colorspaces [string (keyName )];return _dbfb ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_gfef :=NewPdfAnnotation ();_fdf :=&PdfAnnotationPrinterMark {};_fdf .PdfAnnotation =_gfef ;_gfef .SetContext (_fdf );return _fdf ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cda :=NewPdfAnnotation ();_bce :=&PdfAnnotationPolygon {};_bce .PdfAnnotation =_cda ;_bce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cda .SetContext (_bce );return _bce ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fbg :=NewPdfAction ();_egc :=&PdfActionImportData {};_egc .PdfAction =_fbg ;_fbg .SetContext (_egc );return _egc ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gbd :=NewPdfAnnotation ();_feg :=&PdfAnnotationWatermark {};_feg .PdfAnnotation =_gbd ;_gbd .SetContext (_feg );return _feg ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_fdde :=&PdfColorspaceDeviceN {};return _fdde };

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cba :=NewPdfAction ();_acc :=&PdfActionURI {};_acc .PdfAction =_cba ;_cba .SetContext (_acc );return _acc ;};func (_daaec *Image )samplesTrimPadding (_cggd []uint32 )[]uint32 {_edgdd :=_daaec .ColorComponents *int (_daaec .Width )*int (_daaec .Height );if len (_cggd )==_edgdd {return _cggd ;};_gddcf :=make ([]uint32 ,_edgdd );_bfegf :=int (_daaec .Width )*_daaec .ColorComponents ;var _cbfga ,_dgfaf ,_cdeb ,_dega int ;_fccde :=_ff .BytesPerLine (int (_daaec .Width ),int (_daaec .BitsPerComponent ),_daaec .ColorComponents );for _cbfga =0;_cbfga < int (_daaec .Height );_cbfga ++{_dgfaf =_cbfga *int (_daaec .Width );_cdeb =_cbfga *_fccde ;for _dega =0;_dega < _bfegf ;_dega ++{_gddcf [_dgfaf +_dega ]=_cggd [_cdeb +_dega ];};};return _gddcf ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dcec *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fda .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_ecgg :=&PdfColorPattern {};_agda ,_afgdb :=objects [len (objects )-1].(*_aa .PdfObjectName );if !_afgdb {_ba .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_ecgg .PatternName =*_agda ;if len (objects )> 1{_abcbd :=objects [0:len (objects )-1];if _dcec .UnderlyingCS ==nil {_ba .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_fda .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_cabc ,_bbff :=_dcec .UnderlyingCS .ColorFromPdfObjects (_abcbd );if _bbff !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bbff );return nil ,_bbff ;};_ecgg .Color =_cabc ;};return _ecgg ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_adfea PdfModel ;_dedae _aa .PdfObject ;};func _bgec (_aded *_aa .PdfObjectDictionary ,_cdcc *fontCommon )(*pdfCIDFontType2 ,error ){if _cdcc ._cbae !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ba .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cdcc );return nil ,_aa .ErrRangeError ;};_fccfg :=_bbac (_cdcc );_dfeff ,_ccegg :=_aa .GetDict (_aded .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ccegg {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cdcc );return nil ,ErrRequiredAttributeMissing ;};_fccfg .CIDSystemInfo =_dfeff ;_fccfg .DW =_aded .Get ("\u0044\u0057");_fccfg .W =_aded .Get ("\u0057");_fccfg .DW2 =_aded .Get ("\u0044\u0057\u0032");_fccfg .W2 =_aded .Get ("\u0057\u0032");_fccfg .CIDToGIDMap =_aded .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_fccfg ._ddeec =1000.0;if _ggaf ,_ebbdd :=_aa .GetNumberAsFloat (_fccfg .DW );_ebbdd ==nil {_fccfg ._ddeec =_ggaf ;};_cddgg ,_degfb :=_caef (_fccfg .W );if _degfb !=nil {return nil ,_degfb ;};if _cddgg ==nil {_cddgg =map[_af .CharCode ]float64 {};};_fccfg ._dbaee =_cddgg ;return _fccfg ,nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_eebg *BorderStyle )GetPdfName ()string {switch *_eebg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bag .PSProgram ;_cffdf *_bag .PSExecutor ;_bade []byte ;_abgf *_aa .PdfObjectStream ;};func (_cgc *PdfReader )newPdfActionJavaScriptFromDict (_fgc *_aa .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_fgc .Get ("\u004a\u0053")},nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_abd :=NewPdfAnnotation ();_dcc :=&PdfAnnotationStrikeOut {};_dcc .PdfAnnotation =_abd ;_dcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abd .SetContext (_dcc );return _dcc ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// SetVersion sets the PDF version of the output file.
func (_bgedee *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bgedee ._abeac =majorVersion ;_bgedee ._ccdd =minorVersion ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_dfegb *pdfFontType0 )bytesToCharcodes (_gbddc []byte )([]_af .CharCode ,bool ){if _dfegb ._cdbc ==nil {return nil ,false ;};_bbffc ,_cgbef :=_dfegb ._cdbc .BytesToCharcodes (_gbddc );if !_cgbef {return nil ,false ;};_bfgcc :=make ([]_af .CharCode ,len (_bbffc ));for _fbde ,_bgca :=range _bbffc {_bfgcc [_fbde ]=_af .CharCode (_bgca );};return _bfgcc ,true ;};

// HasXObjectByName checks if has XObject resource by name.
func (_becd *PdfPage )HasXObjectByName (name _aa .PdfObjectName )bool {_ccaec ,_aeaffb :=_becd .Resources .XObject .(*_aa .PdfObjectDictionary );if !_aeaffb {return false ;};if _cffgc :=_ccaec .Get (name );_cffgc !=nil {return true ;};return false ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bfeab ,_gcbdb :=NewStandard14Font (basefont );if _gcbdb !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _bfeab ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_agb :=NewPdfAction ();_cbg :=&PdfActionTrans {};_cbg .PdfAction =_agb ;_agb .SetContext (_cbg );return _cbg ;};

// GetXObjectByName gets XObject by name.
func (_bcbg *PdfPage )GetXObjectByName (name _aa .PdfObjectName )(_aa .PdfObject ,bool ){_dgce ,_gbgcd :=_bcbg .Resources .XObject .(*_aa .PdfObjectDictionary );if !_gbgcd {return nil ,false ;};if _fcfa :=_dgce .Get (name );_fcfa !=nil {return _fcfa ,true ;};return nil ,false ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dcafe *PdfPageResources )GetShadingByName (keyName _aa .PdfObjectName )(*PdfShading ,bool ){if _dcafe .Shading ==nil {return nil ,false ;};_gadfb ,_fadfe :=_aa .TraceToDirectObject (_dcafe .Shading ).(*_aa .PdfObjectDictionary );if !_fadfe {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcafe .Shading );return nil ,false ;};if _abbcb :=_gadfb .Get (keyName );_abbcb !=nil {_egcbd ,_cffag :=_bfcfcd (_abbcb );if _cffag !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cffag );return nil ,false ;};return _egcbd ,true ;};return nil ,false ;};func (_fce *PdfReader )newPdfActionResetFormFromDict (_bgf *_aa .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_bgf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bgf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _cgec (_agbff *PdfField ,_gecagd _aa .PdfObject ){for _ ,_aegea :=range _agbff .Annotations {_aegea .AS =_gecagd ;_aegea .ToPdfObject ();};};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _aa .StreamEncoder )(*XObjectImage ,error ){_aaffgc :=NewXObjectImage ();return UpdateXObjectImageFromImage (_aaffgc ,img ,cs ,encoder );};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dbff *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func _fccbg (_gdga _aa .PdfObject ){_ba .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_gdga ,_gdga .String ());if _fdcce ,_dfeba :=_gdga .(*_aa .PdfObjectStream );_dfeba {_abgge ,_adeabd :=_aa .DecodeStream (_fdcce );if _adeabd !=nil {_ba .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_adeabd );return ;};_ba .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_abgge );}else if _dagb ,_cgabda :=_gdga .(*_aa .PdfIndirectObject );_cgabda {_ba .Log .Debug ("\u0025\u0054\u0020%\u0076",_dagb .PdfObject ,_dagb .PdfObject );_ba .Log .Debug ("\u0025\u0073",_dagb .PdfObject .String ());};};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_decb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdadf ,_daac :=color .(*PdfColorCalRGB );if !_daac {_ba .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecbeb :=_cdadf .A ();_fbee :=_cdadf .B ();_aafa :=_cdadf .C ();X :=_decb .Matrix [0]*_ag .Pow (_ecbeb ,_decb .Gamma [0])+_decb .Matrix [3]*_ag .Pow (_fbee ,_decb .Gamma [1])+_decb .Matrix [6]*_ag .Pow (_aafa ,_decb .Gamma [2]);Y :=_decb .Matrix [1]*_ag .Pow (_ecbeb ,_decb .Gamma [0])+_decb .Matrix [4]*_ag .Pow (_fbee ,_decb .Gamma [1])+_decb .Matrix [7]*_ag .Pow (_aafa ,_decb .Gamma [2]);Z :=_decb .Matrix [2]*_ag .Pow (_ecbeb ,_decb .Gamma [0])+_decb .Matrix [5]*_ag .Pow (_fbee ,_decb .Gamma [1])+_decb .Matrix [8]*_ag .Pow (_aafa ,_decb .Gamma [2]);_gcbd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cgge :=-0.969256*X +1.875992*Y +0.041556*Z ;_fecf :=0.055648*X +-0.204043*Y +1.057311*Z ;_gcbd =_ag .Min (_ag .Max (_gcbd ,0),1.0);_cgge =_ag .Min (_ag .Max (_cgge ,0),1.0);_fecf =_ag .Min (_ag .Max (_fecf ,0),1.0);return NewPdfColorDeviceRGB (_gcbd ,_cgge ,_fecf ),nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ddgd :=&PdfColorspaceCalGray {};_ddgd .BlackPoint =[]float64 {0.0,0.0,0.0};_ddgd .Gamma =1;return _ddgd ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_acdfa pdfFont };

// BaseFont returns the font's "BaseFont" field.
func (_dcgb *PdfFont )BaseFont ()string {return _dcgb .baseFields ()._debe };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gcbf *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gcbf .Alternate ==nil {if _gcbf .N ==1{_ecefe :=NewPdfColorspaceDeviceGray ();return _ecefe .ColorFromFloats (vals );}else if _gcbf .N ==3{_cgbg :=NewPdfColorspaceDeviceRGB ();return _cgbg .ColorFromFloats (vals );}else if _gcbf .N ==4{_gbff :=NewPdfColorspaceDeviceCMYK ();return _gbff .ColorFromFloats (vals );}else {return nil ,_fda .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gcbf .Alternate .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_dge *PdfActionThread )ToPdfObject ()_aa .PdfObject {_dge .PdfAction .ToPdfObject ();_bcg :=_dge ._bg ;_daf :=_bcg .PdfObject .(*_aa .PdfObjectDictionary );_daf .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeThread )));if _dge .F !=nil {_daf .Set ("\u0046",_dge .F .ToPdfObject ());};_daf .SetIfNotNil ("\u0044",_dge .D );_daf .SetIfNotNil ("\u0042",_dge .B );return _bcg ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_bgdbg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _bgdbg .UnderlyingCS .GetNumComponents ();};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gfbc *PdfColorspaceLab )ToPdfObject ()_aa .PdfObject {_ecaad :=_aa .MakeArray ();_ecaad .Append (_aa .MakeName ("\u004c\u0061\u0062"));_eged :=_aa .MakeDict ();if _gfbc .WhitePoint !=nil {_fbdf :=_aa .MakeArray (_aa .MakeFloat (_gfbc .WhitePoint [0]),_aa .MakeFloat (_gfbc .WhitePoint [1]),_aa .MakeFloat (_gfbc .WhitePoint [2]));_eged .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fbdf );}else {_ba .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _gfbc .BlackPoint !=nil {_accfg :=_aa .MakeArray (_aa .MakeFloat (_gfbc .BlackPoint [0]),_aa .MakeFloat (_gfbc .BlackPoint [1]),_aa .MakeFloat (_gfbc .BlackPoint [2]));_eged .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_accfg );};if _gfbc .Range !=nil {_caeab :=_aa .MakeArray (_aa .MakeFloat (_gfbc .Range [0]),_aa .MakeFloat (_gfbc .Range [1]),_aa .MakeFloat (_gfbc .Range [2]),_aa .MakeFloat (_gfbc .Range [3]));_eged .Set ("\u0052\u0061\u006eg\u0065",_caeab );};_ecaad .Append (_eged );if _gfbc ._dbcg !=nil {_gfbc ._dbcg .PdfObject =_ecaad ;return _gfbc ._dbcg ;};return _ecaad ;};func (_eafc *PdfReader )newPdfFieldSignatureFromDict (_fdgdb *_aa .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cgcc :=&PdfFieldSignature {};_fgcbd ,_debf :=_aa .GetIndirect (_fdgdb .Get ("\u0056"));if _debf {var _cddd error ;_cgcc .V ,_cddd =_eafc .newPdfSignatureFromIndirect (_fgcbd );if _cddd !=nil {return nil ,_cddd ;};};_cgcc .Lock ,_ =_aa .GetIndirect (_fdgdb .Get ("\u004c\u006f\u0063\u006b"));_cgcc .SV ,_ =_aa .GetIndirect (_fdgdb .Get ("\u0053\u0056"));return _cgcc ,nil ;};

// GetBorderWidth returns the border style's width.
func (_ddbe *PdfBorderStyle )GetBorderWidth ()float64 {if _ddbe .W ==nil {return 1;};return *_ddbe .W ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bgff *PdfField )GetContext ()PdfModel {return _bgff ._afdff };

// SetContext set the sub annotation (context).
func (_babc *PdfShading )SetContext (ctx PdfModel ){_babc ._dafgg =ctx };

// Encoder returns the font's text encoder.
func (_adebda pdfFontType0 )Encoder ()_af .TextEncoder {return _adebda ._adgba };

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_afeb *PdfColorspaceDeviceN )ToPdfObject ()_aa .PdfObject {_fdgd :=_aa .MakeArray (_aa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_fdgd .Append (_afeb .ColorantNames );_fdgd .Append (_afeb .AlternateSpace .ToPdfObject ());_fdgd .Append (_afeb .TintTransform .ToPdfObject ());if _afeb .Attributes !=nil {_fdgd .Append (_afeb .Attributes .ToPdfObject ());};if _afeb ._adcg !=nil {_afeb ._adcg .PdfObject =_fdgd ;return _afeb ._adcg ;};return _fdgd ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dbda *PdfColorLab )GetNumComponents ()int {return 3};const (_acbb =0x00001;_baeb =0x00002;_bafcb =0x00004;_eefg =0x00008;_geea =0x00020;_cbded =0x00040;_ffdbg =0x10000;_cgbb =0x20000;_edge =0x40000;);func _afbdd (_gdbca string )(map[_af .CharCode ]_af .GlyphName ,error ){_gccc :=_ga .Split (_gdbca ,"\u000a");_abcbbc :=make (map[_af .CharCode ]_af .GlyphName );for _ ,_bffg :=range _gccc {_acaac :=_eagg .FindStringSubmatch (_bffg );if _acaac ==nil {continue ;};_bfgfa ,_dggaa :=_acaac [1],_acaac [2];_gbegfe ,_abdb :=_dg .Atoi (_bfgfa );if _abdb !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_bffg );return nil ,_aa .ErrTypeError ;};_abcbbc [_af .CharCode (_gbegfe )]=_af .GlyphName (_dggaa );};_ba .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_abcbbc );return _abcbbc ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_abecb :=&PdfFilespec {};_abecb ._bfeff =_aa .MakeIndirectObject (_aa .MakeDict ());return _abecb ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_fdgdbc *Image )AlphaMap (mapFunc AlphaMapFunc ){for _egggg ,_bgfc :=range _fdgdbc ._eecd {_fdgdbc ._eecd [_egggg ]=mapFunc (_bgfc );};};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_facf *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_fdaec :map[_aa .PdfObject ]struct{}{},_cgaeff :_bfeag (),_gbacd :_aa .NewParserFromString (txt )};};

// SetReason sets the `Reason` field of the signature.
func (_edgcd *PdfSignature )SetReason (reason string ){_edgcd .Reason =_aa .MakeString (reason )};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ced :=NewPdfAnnotation ();_eac :=&PdfAnnotationProjection {};_eac .PdfAnnotation =_ced ;_eac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ced .SetContext (_eac );return _eac ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_ffab *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bfae :=_fdg .NewReader (img .getBase ());_efbd :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._eecd ,img ._ddfac );_cbde :=_fdg .NewWriter (_efbd );_gcaf :=_ag .Pow (2,float64 (img .BitsPerComponent ))-1;_ecfcdc :=_ffab .GetNumComponents ();_ddbf :=make ([]uint32 ,_ecfcdc );_febb :=make ([]float64 ,_ecfcdc );for {_egdg :=_bfae .ReadSamples (_ddbf );if _egdg ==_gb .EOF {break ;}else if _egdg !=nil {return img ,_egdg ;};for _dbdcf :=0;_dbdcf < _ecfcdc ;_dbdcf ++{_gbbe :=float64 (_ddbf [_dbdcf ])/_gcaf ;_febb [_dbdcf ]=_gbbe ;};_cdcb ,_egdg :=_ffab .TintTransform .Evaluate (_febb );if _egdg !=nil {return img ,_egdg ;};for _ ,_dfca :=range _cdcb {_dfca =_ag .Min (_ag .Max (0,_dfca ),1.0);if _egdg =_cbde .WriteSample (uint32 (_dfca *_gcaf ));_egdg !=nil {return img ,_egdg ;};};};return _ffab .AlternateSpace .ImageToRGB (_bdaag (&_efbd ));};func _gecgf ()string {_gfafa :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _cgaae _dc .Buffer ;for _bgbf :=0;_bgbf < 6;_bgbf ++{_cgaae .WriteRune (rune (_gfafa [_df .Intn (len (_gfafa ))]));};return _cgaae .String ();};func (_egdc *PdfField )inherit (_fagb func (*PdfField )bool )(bool ,error ){_cfbeb :=map[*PdfField ]bool {};_gbgc :=false ;_fbeee :=_egdc ;for _fbeee !=nil {if _ ,_gdcc :=_cfbeb [_fbeee ];_gdcc {return false ,_fda .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_cdga :=_fagb (_fbeee );if _cdga {_gbgc =true ;break ;};_cfbeb [_fbeee ]=true ;_fbeee =_fbeee .Parent ;};return _gbgc ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_egead *XObjectImage )GetContainingPdfObject ()_aa .PdfObject {return _egead ._fcbac };func (_cddeg fontCommon )isCIDFont ()bool {if _cddeg ._cbae ==""{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cddeg );};_ebee :=false ;switch _cddeg ._cbae {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ebee =true ;};_ba .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_ebee ,_cddeg );return _ebee ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_efed *PdfPattern )IsTiling ()bool {return _efed .PatternType ==1};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_cbfae *DSS )GetContainingPdfObject ()_aa .PdfObject {return _cbfae ._cffd };func (_fdad *DSS )addOCSPs (_cace [][]byte )([]*_aa .PdfObjectStream ,error ){return _fdad .add (&_fdad .OCSPs ,_fdad ._ccdee ,_cace );};func (_cce *PdfReader )newPdfAnnotationFromIndirectObject (_ded *_aa .PdfIndirectObject )(*PdfAnnotation ,error ){_fdaa ,_aad :=_ded .PdfObject .(*_aa .PdfObjectDictionary );if !_aad {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_cce ._cgaeff .GetModelFromPrimitive (_fdaa );model !=nil {_gfcc ,_fcca :=model .(*PdfAnnotation );if !_fcca {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _gfcc ,nil ;};_fcd :=&PdfAnnotation {};_fcd ._dde =_ded ;_cce ._cgaeff .Register (_fdaa ,_fcd );if _ecdb :=_fdaa .Get ("\u0054\u0079\u0070\u0065");_ecdb !=nil {_cdad ,_bee :=_ecdb .(*_aa .PdfObjectName );if !_bee {_ba .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ecdb );}else {if *_cdad !="\u0041\u006e\u006eo\u0074"{_ba .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_cdad );};};};if _dfa :=_fdaa .Get ("\u0052\u0065\u0063\u0074");_dfa !=nil {_fcd .Rect =_dfa ;};if _afea :=_fdaa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_afea !=nil {_fcd .Contents =_afea ;};if _gdbe :=_fdaa .Get ("\u0050");_gdbe !=nil {_fcd .P =_gdbe ;};if _agf :=_fdaa .Get ("\u004e\u004d");_agf !=nil {_fcd .NM =_agf ;};if _efdg :=_fdaa .Get ("\u004d");_efdg !=nil {_fcd .M =_efdg ;};if _cac :=_fdaa .Get ("\u0046");_cac !=nil {_fcd .F =_cac ;};if _gfb :=_fdaa .Get ("\u0041\u0050");_gfb !=nil {_fcd .AP =_gfb ;};if _eab :=_fdaa .Get ("\u0041\u0053");_eab !=nil {_fcd .AS =_eab ;};if _dfdf :=_fdaa .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_dfdf !=nil {_fcd .Border =_dfdf ;};if _cca :=_fdaa .Get ("\u0043");_cca !=nil {_fcd .C =_cca ;};if _cgca :=_fdaa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cgca !=nil {_fcd .StructParent =_cgca ;};if _caa :=_fdaa .Get ("\u004f\u0043");_caa !=nil {_fcd .OC =_caa ;};_fbf :=_fdaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fbf ==nil {_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_fcd ._dbdc =nil ;return _fcd ,nil ;};_abde ,_bbbgg :=_fbf .(*_aa .PdfObjectName );if !_bbbgg {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fbf );return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fbf );};switch *_abde {case "\u0054\u0065\u0078\u0074":_cfcb ,_dgad :=_cce .newPdfAnnotationTextFromDict (_fdaa );if _dgad !=nil {return nil ,_dgad ;};_cfcb .PdfAnnotation =_fcd ;_fcd ._dbdc =_cfcb ;return _fcd ,nil ;case "\u004c\u0069\u006e\u006b":_eba ,_dac :=_cce .newPdfAnnotationLinkFromDict (_fdaa );if _dac !=nil {return nil ,_dac ;};_eba .PdfAnnotation =_fcd ;_fcd ._dbdc =_eba ;return _fcd ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gdaf ,_gbdd :=_cce .newPdfAnnotationFreeTextFromDict (_fdaa );if _gbdd !=nil {return nil ,_gbdd ;};_gdaf .PdfAnnotation =_fcd ;_fcd ._dbdc =_gdaf ;return _fcd ,nil ;case "\u004c\u0069\u006e\u0065":_eded ,_dbf :=_cce .newPdfAnnotationLineFromDict (_fdaa );if _dbf !=nil {return nil ,_dbf ;};_eded .PdfAnnotation =_fcd ;_fcd ._dbdc =_eded ;_ba .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_fcd ,_fcd );_ba .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_eded ,_eded );_ba .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_eded .PdfAnnotationMarkup ,_eded .PdfAnnotationMarkup );return _fcd ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bac ,_gfa :=_cce .newPdfAnnotationSquareFromDict (_fdaa );if _gfa !=nil {return nil ,_gfa ;};_bac .PdfAnnotation =_fcd ;_fcd ._dbdc =_bac ;return _fcd ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ebag ,_fbeg :=_cce .newPdfAnnotationCircleFromDict (_fdaa );if _fbeg !=nil {return nil ,_fbeg ;};_ebag .PdfAnnotation =_fcd ;_fcd ._dbdc =_ebag ;return _fcd ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_gcb ,_dgga :=_cce .newPdfAnnotationPolygonFromDict (_fdaa );if _dgga !=nil {return nil ,_dgga ;};_gcb .PdfAnnotation =_fcd ;_fcd ._dbdc =_gcb ;return _fcd ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cee ,_cafb :=_cce .newPdfAnnotationPolyLineFromDict (_fdaa );if _cafb !=nil {return nil ,_cafb ;};_cee .PdfAnnotation =_fcd ;_fcd ._dbdc =_cee ;return _fcd ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_cdag ,_dfc :=_cce .newPdfAnnotationHighlightFromDict (_fdaa );if _dfc !=nil {return nil ,_dfc ;};_cdag .PdfAnnotation =_fcd ;_fcd ._dbdc =_cdag ;return _fcd ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_fad ,_ccae :=_cce .newPdfAnnotationUnderlineFromDict (_fdaa );if _ccae !=nil {return nil ,_ccae ;};_fad .PdfAnnotation =_fcd ;_fcd ._dbdc =_fad ;return _fcd ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_fdfd ,_dgc :=_cce .newPdfAnnotationSquigglyFromDict (_fdaa );if _dgc !=nil {return nil ,_dgc ;};_fdfd .PdfAnnotation =_fcd ;_fcd ._dbdc =_fdfd ;return _fcd ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_efg ,_bcgd :=_cce .newPdfAnnotationStrikeOut (_fdaa );if _bcgd !=nil {return nil ,_bcgd ;};_efg .PdfAnnotation =_fcd ;_fcd ._dbdc =_efg ;return _fcd ,nil ;case "\u0043\u0061\u0072e\u0074":_edb ,_fede :=_cce .newPdfAnnotationCaretFromDict (_fdaa );if _fede !=nil {return nil ,_fede ;};_edb .PdfAnnotation =_fcd ;_fcd ._dbdc =_edb ;return _fcd ,nil ;case "\u0053\u0074\u0061m\u0070":_fead ,_adeb :=_cce .newPdfAnnotationStampFromDict (_fdaa );if _adeb !=nil {return nil ,_adeb ;};_fead .PdfAnnotation =_fcd ;_fcd ._dbdc =_fead ;return _fcd ,nil ;case "\u0049\u006e\u006b":_afead ,_gfgb :=_cce .newPdfAnnotationInkFromDict (_fdaa );if _gfgb !=nil {return nil ,_gfgb ;};_afead .PdfAnnotation =_fcd ;_fcd ._dbdc =_afead ;return _fcd ,nil ;case "\u0050\u006f\u0070u\u0070":_dbfa ,_deb :=_cce .newPdfAnnotationPopupFromDict (_fdaa );if _deb !=nil {return nil ,_deb ;};_dbfa .PdfAnnotation =_fcd ;_fcd ._dbdc =_dbfa ;return _fcd ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dgfeb ,_adg :=_cce .newPdfAnnotationFileAttachmentFromDict (_fdaa );if _adg !=nil {return nil ,_adg ;};_dgfeb .PdfAnnotation =_fcd ;_fcd ._dbdc =_dgfeb ;return _fcd ,nil ;case "\u0053\u006f\u0075n\u0064":_adc ,_eedg :=_cce .newPdfAnnotationSoundFromDict (_fdaa );if _eedg !=nil {return nil ,_eedg ;};_adc .PdfAnnotation =_fcd ;_fcd ._dbdc =_adc ;return _fcd ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_ffbef ,_fffg :=_cce .newPdfAnnotationRichMediaFromDict (_fdaa );if _fffg !=nil {return nil ,_fffg ;};_ffbef .PdfAnnotation =_fcd ;_fcd ._dbdc =_ffbef ;return _fcd ,nil ;case "\u004d\u006f\u0076i\u0065":_fccf ,_gfgg :=_cce .newPdfAnnotationMovieFromDict (_fdaa );if _gfgg !=nil {return nil ,_gfgg ;};_fccf .PdfAnnotation =_fcd ;_fcd ._dbdc =_fccf ;return _fcd ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_fgbge ,_bbf :=_cce .newPdfAnnotationScreenFromDict (_fdaa );if _bbf !=nil {return nil ,_bbf ;};_fgbge .PdfAnnotation =_fcd ;_fcd ._dbdc =_fgbge ;return _fcd ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_fccc ,_edee :=_cce .newPdfAnnotationWidgetFromDict (_fdaa );if _edee !=nil {return nil ,_edee ;};_fccc .PdfAnnotation =_fcd ;_fcd ._dbdc =_fccc ;return _fcd ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bgbe ,_ffbdf :=_cce .newPdfAnnotationPrinterMarkFromDict (_fdaa );if _ffbdf !=nil {return nil ,_ffbdf ;};_bgbe .PdfAnnotation =_fcd ;_fcd ._dbdc =_bgbe ;return _fcd ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cfd ,_cefe :=_cce .newPdfAnnotationTrapNetFromDict (_fdaa );if _cefe !=nil {return nil ,_cefe ;};_cfd .PdfAnnotation =_fcd ;_fcd ._dbdc =_cfd ;return _fcd ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gdf ,_bba :=_cce .newPdfAnnotationWatermarkFromDict (_fdaa );if _bba !=nil {return nil ,_bba ;};_gdf .PdfAnnotation =_fcd ;_fcd ._dbdc =_gdf ;return _fcd ,nil ;case "\u0033\u0044":_efb ,_dfac :=_cce .newPdfAnnotation3DFromDict (_fdaa );if _dfac !=nil {return nil ,_dfac ;};_efb .PdfAnnotation =_fcd ;_fcd ._dbdc =_efb ;return _fcd ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_aagf ,_gbed :=_cce .newPdfAnnotationProjectionFromDict (_fdaa );if _gbed !=nil {return nil ,_gbed ;};_aagf .PdfAnnotation =_fcd ;_fcd ._dbdc =_aagf ;return _fcd ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_agbe ,_bbdg :=_cce .newPdfAnnotationRedactFromDict (_fdaa );if _bbdg !=nil {return nil ,_bbdg ;};_agbe .PdfAnnotation =_fcd ;_fcd ._dbdc =_agbe ;return _fcd ,nil ;};_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_abde );return nil ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_egdeg :=appender .Reader .DSS ;if _egdeg ==nil {_egdeg =NewDSS ();};if _aacce :=_egdeg .generateHashMaps ();_aacce !=nil {return nil ,_aacce ;};return &LTV {CertClient :_bcc .NewCertClient (),OCSPClient :_bcc .NewOCSPClient (),CRLClient :_bcc .NewCRLClient (),SkipExisting :true ,_ddfaa :appender ,_afgfd :_egdeg },nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_gggg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=_gggg .GetNumComponents (){return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egfce ,_afcd :=_aa .GetNumbersAsFloat (objects );if _afcd !=nil {return nil ,_afcd ;};return _gggg .ColorFromFloats (_egfce );};func _acdf (_eebd _aa .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_ddfe :=NewPdfColorspaceSpecialSeparation ();if _acdb ,_adda :=_eebd .(*_aa .PdfIndirectObject );_adda {_ddfe ._cccc =_acdb ;};_eebd =_aa .TraceToDirectObject (_eebd );_dgega ,_acbc :=_eebd .(*_aa .PdfObjectArray );if !_acbc {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _dgega .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_eebd =_dgega .Get (0);_bfdfg ,_acbc :=_eebd .(*_aa .PdfObjectName );if !_acbc {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_bfdfg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_eebd =_dgega .Get (1);_bfdfg ,_acbc =_eebd .(*_aa .PdfObjectName );if !_acbc {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_ddfe .ColorantName =_bfdfg ;_eebd =_dgega .Get (2);_ecfbg ,_fgcb :=NewPdfColorspaceFromPdfObject (_eebd );if _fgcb !=nil {return nil ,_fgcb ;};_ddfe .AlternateSpace =_ecfbg ;_dbdf ,_fgcb :=_dccg (_dgega .Get (3));if _fgcb !=nil {return nil ,_fgcb ;};_ddfe .TintTransform =_dbdf ;return _ddfe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ceb *PdfActionRendition )ToPdfObject ()_aa .PdfObject {_ceb .PdfAction .ToPdfObject ();_gbcf :=_ceb ._bg ;_bff :=_gbcf .PdfObject .(*_aa .PdfObjectDictionary );_bff .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeRendition )));_bff .SetIfNotNil ("\u0052",_ceb .R );_bff .SetIfNotNil ("\u0041\u004e",_ceb .AN );_bff .SetIfNotNil ("\u004f\u0050",_ceb .OP );_bff .SetIfNotNil ("\u004a\u0053",_ceb .JS );return _gbcf ;};func (_dcf *PdfReader )newPdfActionRenditionFromDict (_aab *_aa .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_aab .Get ("\u0052"),AN :_aab .Get ("\u0041\u004e"),OP :_aab .Get ("\u004f\u0050"),JS :_aab .Get ("\u004a\u0053")},nil ;};func _cacbc (_ebaa _aa .PdfObject )(*PdfColorspaceLab ,error ){_abca :=NewPdfColorspaceLab ();if _affd ,_gecg :=_ebaa .(*_aa .PdfIndirectObject );_gecg {_abca ._dbcg =_affd ;};_ebaa =_aa .TraceToDirectObject (_ebaa );_defee ,_caegf :=_ebaa .(*_aa .PdfObjectArray );if !_caegf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _defee .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_ebaa =_aa .TraceToDirectObject (_defee .Get (0));_caggb ,_caegf :=_ebaa .(*_aa .PdfObjectName );if !_caegf {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_caggb !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_ebaa =_aa .TraceToDirectObject (_defee .Get (1));_adfg ,_caegf :=_ebaa .(*_aa .PdfObjectDictionary );if !_caegf {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_ebaa =_adfg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ebaa =_aa .TraceToDirectObject (_ebaa );_gdca ,_caegf :=_ebaa .(*_aa .PdfObjectArray );if !_caegf {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _gdca .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_abaf ,_aae :=_gdca .GetAsFloat64Slice ();if _aae !=nil {return nil ,_aae ;};_abca .WhitePoint =_abaf ;_ebaa =_adfg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ebaa !=nil {_ebaa =_aa .TraceToDirectObject (_ebaa );_feadbe ,_dfda :=_ebaa .(*_aa .PdfObjectArray );if !_dfda {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _feadbe .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_bca ,_fegc :=_feadbe .GetAsFloat64Slice ();if _fegc !=nil {return nil ,_fegc ;};_abca .BlackPoint =_bca ;};_ebaa =_adfg .Get ("\u0052\u0061\u006eg\u0065");if _ebaa !=nil {_ebaa =_aa .TraceToDirectObject (_ebaa );_gafg ,_cbbb :=_ebaa .(*_aa .PdfObjectArray );if !_cbbb {_ba .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gafg .Len ()!=4{_ba .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bddc ,_dfef :=_gafg .GetAsFloat64Slice ();if _dfef !=nil {return nil ,_dfef ;};_abca .Range =_bddc ;};return _abca ,nil ;};func (_cfgdb *PdfWriter )writeString (_caabd string ){if _cfgdb ._gcdgc !=nil {return ;};_gbfe ,_bccbe :=_cfgdb ._cegff .WriteString (_caabd );_cfgdb ._gaafg +=int64 (_gbfe );_cfgdb ._gcdgc =_bccbe ;};

// ToPdfObject implements interface PdfModel.
func (_dabd *PdfAnnotationWatermark )ToPdfObject ()_aa .PdfObject {_dabd .PdfAnnotation .ToPdfObject ();_edde :=_dabd ._dde ;_fcfg :=_edde .PdfObject .(*_aa .PdfObjectDictionary );_fcfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_fcfg .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dabd .FixedPrint );return _edde ;};func (_acae *PdfReader )loadAction (_geg _aa .PdfObject )(*PdfAction ,error ){if _ebf ,_ccde :=_aa .GetIndirect (_geg );_ccde {_adcd ,_agac :=_acae .newPdfActionFromIndirectObject (_ebf );if _agac !=nil {return nil ,_agac ;};return _adcd ,nil ;}else if !_aa .IsNullObject (_geg ){return nil ,_fda .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_aa .PdfObjectString ;Author *_aa .PdfObjectString ;Subject *_aa .PdfObjectString ;Keywords *_aa .PdfObjectString ;Creator *_aa .PdfObjectString ;Producer *_aa .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_aa .PdfObjectName ;_gaef *_aa .PdfObjectDictionary ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bgdc *PdfField )FullName ()(string ,error ){var _aaffg _dc .Buffer ;_eff :=[]string {};if _bgdc .T !=nil {_eff =append (_eff ,_bgdc .T .Decoded ());};_cdce :=map[*PdfField ]bool {};_cdce [_bgdc ]=true ;_befca :=_bgdc .Parent ;for _befca !=nil {if _ ,_adae :=_cdce [_befca ];_adae {return _aaffg .String (),_fda .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _befca .T ==nil {return _aaffg .String (),_fda .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_eff =append (_eff ,_befca .T .Decoded ());_cdce [_befca ]=true ;_befca =_befca .Parent ;};for _fbega :=len (_eff )-1;_fbega >=0;_fbega --{_aaffg .WriteString (_eff [_fbega ]);if _fbega > 0{_aaffg .WriteString ("\u002e");};};return _aaffg .String (),nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgabc *PdfAnnotation3D )ToPdfObject ()_aa .PdfObject {_bgabc .PdfAnnotation .ToPdfObject ();_ecgd :=_bgabc ._dde ;_acff :=_ecgd .PdfObject .(*_aa .PdfObjectDictionary );_acff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0033\u0044"));_acff .SetIfNotNil ("\u0033\u0044\u0044",_bgabc .T3DD );_acff .SetIfNotNil ("\u0033\u0044\u0056",_bgabc .T3DV );_acff .SetIfNotNil ("\u0033\u0044\u0041",_bgabc .T3DA );_acff .SetIfNotNil ("\u0033\u0044\u0049",_bgabc .T3DI );_acff .SetIfNotNil ("\u0033\u0044\u0042",_bgabc .T3DB );return _ecgd ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_bbce *PdfInfo )AddCustomInfo (name string ,value string )error {if _bbce ._gaef ==nil {_bbce ._gaef =_aa .MakeDict ();};if _ ,_cadba :=_cfbg [name ];_cadba {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );};_bbce ._gaef .SetIfNotNil (*_aa .MakeName (name ),_aa .MakeString (value ));return nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_fdge *LTV )EnableByName (name string ,extraCerts []*_ca .Certificate )error {_eaae :=_fdge ._ddfaa ._edc .AcroForm ;for _ ,_fbfef :=range _eaae .AllFields (){_gcccb ,_ :=_fbfef .GetContext ().(*PdfFieldSignature );if _gcccb ==nil {continue ;};if _cbbdc :=_gcccb .PartialName ();_cbbdc !=name {continue ;};return _fdge .Enable (_gcccb .V ,extraCerts );};return nil ;};func (_dggcg *PdfReader )newPdfAcroFormFromDict (_ceaff *_aa .PdfIndirectObject ,_gfcdg *_aa .PdfObjectDictionary )(*PdfAcroForm ,error ){_ddcd :=NewPdfAcroForm ();if _ceaff !=nil {_ddcd ._acba =_ceaff ;_ceaff .PdfObject =_aa .MakeDict ();};if _ffeeb :=_gfcdg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_ffeeb !=nil {_fafd ,_afgb :=_aa .GetArray (_ffeeb );if !_afgb {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ffeeb );};var _agdg []*PdfField ;for _ ,_fagg :=range _fafd .Elements (){_eabcb ,_eeffe :=_aa .GetIndirect (_fagg );if !_eeffe {if _ ,_ccagf :=_fagg .(*_aa .PdfObjectNull );_ccagf {_ba .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_ba .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fagg );return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bagag ,_accbd :=_dggcg .newPdfFieldFromIndirectObject (_eabcb ,nil );if _accbd !=nil {return nil ,_accbd ;};_ba .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_bagag );_agdg =append (_agdg ,_bagag );};_ddcd .Fields =&_agdg ;};if _dagc :=_gfcdg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_dagc !=nil {_abgb ,_abgg :=_aa .GetBool (_dagc );if _abgg {_ddcd .NeedAppearances =_abgb ;}else {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dagc );};};if _fgbgd :=_gfcdg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_fgbgd !=nil {_fcfd ,_ecde :=_aa .GetInt (_fgbgd );if _ecde {_ddcd .SigFlags =_fcfd ;}else {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgbgd );};};if _afcc :=_gfcdg .Get ("\u0043\u004f");_afcc !=nil {_fggaab ,_dace :=_aa .GetArray (_afcc );if _dace {_ddcd .CO =_fggaab ;}else {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_afcc );};};if _aabc :=_gfcdg .Get ("\u0044\u0052");_aabc !=nil {if _dcbae ,_ccee :=_aa .GetDict (_aabc );_ccee {_acad ,_afcdf :=NewPdfPageResourcesFromDict (_dcbae );if _afcdf !=nil {_ba .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_afcdf );return nil ,_afcdf ;};_ddcd .DR =_acad ;}else {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_aabc );};};if _bcbf :=_gfcdg .Get ("\u0044\u0041");_bcbf !=nil {_cbdb ,_debfb :=_aa .GetString (_bcbf );if _debfb {_ddcd .DA =_cbdb ;}else {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bcbf );};};if _fddaf :=_gfcdg .Get ("\u0051");_fddaf !=nil {_dgea ,_fdbe :=_aa .GetInt (_fddaf );if _fdbe {_ddcd .Q =_dgea ;}else {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fddaf );};};if _efcd :=_gfcdg .Get ("\u0058\u0046\u0041");_efcd !=nil {_ddcd .XFA =_efcd ;};_ddcd .ToPdfObject ();return _ddcd ,nil ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_dcafd *PdfWriter )SetNamedDestinations (names _aa .PdfObject )error {if names ==nil {return nil ;};_ba .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_dcafd ._gbcg .Set ("\u004e\u0061\u006de\u0073",names );return _dcafd .addObjects (names );};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_aa .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_cccc *_aa .PdfIndirectObject ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_aa .PdfObjectStream ;Data []byte ;_gaec *_aa .PdfIndirectObject ;_ggdf *_aa .PdfObjectStream ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _aa .PdfObject )(*PdfFont ,error ){return _caegfd (fontObj ,true )};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_fdgff *PdfFont )GetCharMetrics (code _af .CharCode )(CharMetrics ,bool ){var _defgf _fa .CharMetrics ;switch _gbcaa :=_fdgff ._acdfa .(type ){case *pdfFontSimple :if _ffec ,_fdff :=_gbcaa .GetCharMetrics (code );_fdff {return _ffec ,_fdff ;};case *pdfFontType0 :if _gedea ,_eeeac :=_gbcaa .GetCharMetrics (code );_eeeac {return _gedea ,_eeeac ;};case *pdfCIDFontType0 :if _dgccd ,_fcgg :=_gbcaa .GetCharMetrics (code );_fcgg {return _dgccd ,_fcgg ;};case *pdfCIDFontType2 :if _agcde ,_acgd :=_gbcaa .GetCharMetrics (code );_acgd {return _agcde ,_acgd ;};default:_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_fdgff ._acdfa );return _defgf ,false ;};if _fgadc ,_dgfd :=_fdgff .GetFontDescriptor ();_dgfd ==nil &&_fgadc !=nil {return _fa .CharMetrics {Wx :_fgadc ._gdfg },true ;};_ba .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_fdgff );return _defgf ,false ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bfdf *PdfAnnotation )GetContainingPdfObject ()_aa .PdfObject {return _bfdf ._dde };

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_aba :=NewPdfAction ();_eb :=&PdfActionResetForm {};_eb .PdfAction =_aba ;_aba .SetContext (_eb );return _eb ;};func (_bdebb *pdfFontSimple )addEncoding ()error {var (_fgfd string ;_ceea map[_af .CharCode ]_af .GlyphName ;_caeaba _af .SimpleEncoder ;);if _bdebb .Encoder ()!=nil {_cgggf ,_ecce :=_bdebb .Encoder ().(_af .SimpleEncoder );if _ecce &&_cgggf !=nil {_fgfd =_cgggf .BaseName ();};};if _bdebb .Encoding !=nil {_cdgg ,_bcde ,_ebdgd :=_bdebb .getFontEncoding ();if _ebdgd !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bdebb ._debe ,_bdebb ._cbae ,_bdebb .Encoding ,_bdebb .Encoding ,_ebdgd );return _ebdgd ;};if _cdgg !=""{_fgfd =_cdgg ;};_ceea =_bcde ;_caeaba ,_ebdgd =_af .NewSimpleTextEncoder (_fgfd ,_ceea );if _ebdgd !=nil {return _ebdgd ;};};if _caeaba ==nil {_bddf :=_bdebb ._edga ;if _bddf !=nil {switch _bdebb ._cbae {case "\u0054\u0079\u0070e\u0031":if _bddf .fontFile !=nil &&_bddf .fontFile ._ffbg !=nil {_ba .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_caeaba =_bddf .fontFile ._ffbg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _bddf ._bedb !=nil {_ba .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dcefa ,_ceda :=_bddf ._bedb .MakeEncoder ();if _ceda ==nil {_caeaba =_dcefa ;};};};};};if _caeaba !=nil {if _ceea !=nil {_ba .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ceea ,_bdebb .baseFields ());_caeaba =_af .ApplyDifferences (_caeaba ,_ceea );};_bdebb .SetEncoder (_caeaba );};return nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_bdadd *PdfOutlineItem )GetContainingPdfObject ()_aa .PdfObject {return _bdadd ._bfeac };

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gc :=NewPdfAction ();_bccb :=&PdfActionJavaScript {};_bccb .PdfAction =_gc ;_gc .SetContext (_bccb );return _bccb ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_beea .Lock ();defer _beea .Unlock ();_ebefac =title };

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_fdcb *PdfPage )ToPdfObject ()_aa .PdfObject {_edcbb :=_fdcb ._gacge ;_fdcb .GetPageDict ();return _edcbb ;};func (_dbc *PdfReader )newPdfAnnotationMarkupFromDict (_fbfe *_aa .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_eedgc :=&PdfAnnotationMarkup {};if _fcf :=_fbfe .Get ("\u0054");_fcf !=nil {_eedgc .T =_fcf ;};if _dgfce :=_fbfe .Get ("\u0050\u006f\u0070u\u0070");_dgfce !=nil {_dcg ,_abc :=_dgfce .(*_aa .PdfIndirectObject );if !_abc {if _ ,_efbf :=_dgfce .(*_aa .PdfObjectNull );!_efbf {return nil ,_fda .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_bdcc ,_cfdf :=_dbc .newPdfAnnotationFromIndirectObject (_dcg );if _cfdf !=nil {return nil ,_cfdf ;};if _bdcc !=nil {_aegg ,_bgc :=_bdcc ._dbdc .(*PdfAnnotationPopup );if !_bgc {return nil ,_fda .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_eedgc .Popup =_aegg ;};};};if _gabc :=_fbfe .Get ("\u0043\u0041");_gabc !=nil {_eedgc .CA =_gabc ;};if _gcc :=_fbfe .Get ("\u0052\u0043");_gcc !=nil {_eedgc .RC =_gcc ;};if _fgdg :=_fbfe .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_fgdg !=nil {_eedgc .CreationDate =_fgdg ;};if _dagg :=_fbfe .Get ("\u0049\u0052\u0054");_dagg !=nil {_eedgc .IRT =_dagg ;};if _afg :=_fbfe .Get ("\u0053\u0075\u0062\u006a");_afg !=nil {_eedgc .Subj =_afg ;};if _gcff :=_fbfe .Get ("\u0052\u0054");_gcff !=nil {_eedgc .RT =_gcff ;};if _dbg :=_fbfe .Get ("\u0049\u0054");_dbg !=nil {_eedgc .IT =_dbg ;};if _cafc :=_fbfe .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cafc !=nil {_eedgc .ExData =_cafc ;};return _eedgc ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_gbac *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fdba :=_fdg .NewReader (img .getBase ());_abab :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_gbac .AlternateSpace .GetNumComponents (),nil ,img ._eecd ,nil );_aeef :=_fdg .NewWriter (_abab );_ggcf :=_ag .Pow (2,float64 (img .BitsPerComponent ))-1;_ba .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_ba .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_gbac .TintTransform );_agcc :=_gbac .AlternateSpace .DecodeArray ();var (_dgbae uint32 ;_eegf error ;);for {_dgbae ,_eegf =_fdba .ReadSample ();if _eegf ==_gb .EOF {break ;};if _eegf !=nil {return img ,_eegf ;};_eeab :=float64 (_dgbae )/_ggcf ;_dcad ,_dffa :=_gbac .TintTransform .Evaluate ([]float64 {_eeab });if _dffa !=nil {return img ,_dffa ;};for _cbbc ,_gebe :=range _dcad {_abegf :=_ff .LinearInterpolate (_gebe ,_agcc [_cbbc *2],_agcc [_cbbc *2+1],0,1);if _dffa =_aeef .WriteSample (uint32 (_abegf *_ggcf ));_dffa !=nil {return img ,_dffa ;};};};return _gbac .AlternateSpace .ImageToRGB (_bdaag (&_abab ));};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_caffg *PdfWriter )SetPageLabels (pageLabels _aa .PdfObject )error {if pageLabels ==nil {return nil ;};_ba .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_caffg ._gbcg .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _caffg .addObjects (pageLabels );};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _aa .PdfObject ;Popup *PdfAnnotationPopup ;CA _aa .PdfObject ;RC _aa .PdfObject ;CreationDate _aa .PdfObject ;IRT _aa .PdfObject ;Subj _aa .PdfObject ;RT _aa .PdfObject ;IT _aa .PdfObject ;ExData _aa .PdfObject ;};

// Add appends a top level outline item to the outline.
func (_fceag *Outline )Add (item *OutlineItem ){_fceag .Entries =append (_fceag .Entries ,item )};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_egddc *VRI )ToPdfObject ()*_aa .PdfObjectDictionary {_eefb :=_aa .MakeDict ();_eefb .SetIfNotNil (_aa .PdfObjectName ("\u0043\u0065\u0072\u0074"),_gbegg (_egddc .Cert ));_eefb .SetIfNotNil (_aa .PdfObjectName ("\u004f\u0043\u0053\u0050"),_gbegg (_egddc .OCSP ));_eefb .SetIfNotNil (_aa .PdfObjectName ("\u0043\u0052\u004c"),_gbegg (_egddc .CRL ));_eefb .SetIfNotNil ("\u0054\u0055",_egddc .TU );_eefb .SetIfNotNil ("\u0054\u0053",_egddc .TS );return _eefb ;};func _febg (_faec _aa .PdfObject )(*PdfBorderStyle ,error ){_cdda :=&PdfBorderStyle {};_cdda ._cdba =_faec ;var _fcga *_aa .PdfObjectDictionary ;_faec =_aa .TraceToDirectObject (_faec );_fcga ,_fafa :=_faec .(*_aa .PdfObjectDictionary );if !_fafa {return nil ,_fda .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _fafee :=_fcga .Get ("\u0054\u0079\u0070\u0065");_fafee !=nil {_ebagg ,_cdc :=_fafee .(*_aa .PdfObjectName );if !_cdc {_ba .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_fafee );}else {if *_ebagg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ba .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ebagg );};};};if _eedef :=_fcga .Get ("\u0057");_eedef !=nil {_gbbg ,_daeb :=_aa .GetNumberAsFloat (_eedef );if _daeb !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_daeb );return nil ,_daeb ;};_cdda .W =&_gbbg ;};if _gad :=_fcga .Get ("\u0053");_gad !=nil {_efc ,_befce :=_gad .(*_aa .PdfObjectName );if !_befce {return nil ,_fda .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _gade BorderStyle ;switch *_efc {case "\u0053":_gade =BorderStyleSolid ;case "\u0044":_gade =BorderStyleDashed ;case "\u0042":_gade =BorderStyleBeveled ;case "\u0049":_gade =BorderStyleInset ;case "\u0055":_gade =BorderStyleUnderline ;default:_ba .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_efc );return nil ,_fda .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cdda .S =&_gade ;};if _cgef :=_fcga .Get ("\u0044");_cgef !=nil {_fgcdb ,_dcdc :=_cgef .(*_aa .PdfObjectArray );if !_dcdc {_ba .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cgef );return nil ,_fda .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_adaf ,_ecbba :=_fgcdb .ToIntegerArray ();if _ecbba !=nil {_ba .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_ecbba );return nil ,_ecbba ;};_cdda .D =&_adaf ;};return _cdda ,nil ;};type pdfFontType0 struct{fontCommon ;_dgge *_aa .PdfIndirectObject ;_adgba _af .TextEncoder ;Encoding _aa .PdfObject ;DescendantFont *PdfFont ;_cdbc *_dgg .CMap ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bfd :=NewPdfAnnotation ();_ffbe :=&PdfAnnotationPolyLine {};_ffbe .PdfAnnotation =_bfd ;_ffbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfd .SetContext (_ffbe );return _ffbe ;};func _fdcf (_cggf _aa .PdfObject ,_aegfc *PdfReader )(*OutlineDest ,error ){_afagd ,_bgafe :=_aa .GetArray (_cggf );if !_bgafe {return nil ,_fda .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_beadg :=_afagd .Len ();if _beadg < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_beadg );};_aagbc :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_begadb :=_afagd .Get (0);if _bfdfbd ,_ffda :=_aa .GetIndirect (_begadb );_ffda {if _ ,_adbbf ,_fgcef :=_aegfc .PageFromIndirectObject (_bfdfbd );_fgcef ==nil {_aagbc .Page =int64 (_adbbf -1);}else {_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bfdfbd );};_aagbc .PageObj =_bfdfbd ;}else if _cebcf ,_decaf :=_aa .GetIntVal (_begadb );_decaf {if _cebcf >=0&&_cebcf < len (_aegfc .PageList ){_aagbc .PageObj =_aegfc .PageList [_cebcf ].GetPageAsIndirectObject ();}else {_ba .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_cebcf );};_aagbc .Page =int64 (_cebcf );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_begadb );};_cagff ,_bgafe :=_aa .GetNameVal (_afagd .Get (1));if !_bgafe {_ba .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_afagd .Get (1));return _aagbc ,nil ;};switch _cagff {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _beadg > 2{_aagbc .Y ,_ =_aa .GetNumberAsFloat (_aa .TraceToDirectObject (_afagd .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _beadg > 2{_aagbc .X ,_ =_aa .GetNumberAsFloat (_aa .TraceToDirectObject (_afagd .Get (2)));};case "\u0058\u0059\u005a":if _beadg > 4{_aagbc .X ,_ =_aa .GetNumberAsFloat (_aa .TraceToDirectObject (_afagd .Get (2)));_aagbc .Y ,_ =_aa .GetNumberAsFloat (_aa .TraceToDirectObject (_afagd .Get (3)));_aagbc .Zoom ,_ =_aa .GetNumberAsFloat (_aa .TraceToDirectObject (_afagd .Get (4)));};default:_cagff ="\u0046\u0069\u0074";};_aagbc .Mode =_cagff ;return _aagbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aedb *PdfSignature )ToPdfObject ()_aa .PdfObject {_acbbfe :=_aedb ._bfbeb ;var _fecdg *_aa .PdfObjectDictionary ;if _acgfe ,_bagce :=_acbbfe .PdfObject .(*pdfSignDictionary );_bagce {_fecdg =_acgfe .PdfObjectDictionary ;}else {_fecdg =_acbbfe .PdfObject .(*_aa .PdfObjectDictionary );};_fecdg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aedb .Type );_fecdg .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_aedb .Filter );_fecdg .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_aedb .SubFilter );_fecdg .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_aedb .ByteRange );_fecdg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aedb .Contents );_fecdg .SetIfNotNil ("\u0043\u0065\u0072\u0074",_aedb .Cert );_fecdg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aedb .Name );_fecdg .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_aedb .Reason );_fecdg .SetIfNotNil ("\u004d",_aedb .M );_fecdg .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_aedb .Reference );_fecdg .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_aedb .Changes );_fecdg .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_aedb .ContactInfo );return _acbbfe ;};

// AddWatermarkImage adds a watermark to the page.
func (_aaeae *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_bddda ,_edeb :=_aaeae .GetMediaBox ();if _edeb !=nil {return _edeb ;};_fadg :=_bddda .Urx -_bddda .Llx ;_cggfd :=_bddda .Ury -_bddda .Lly ;_cfff :=float64 (*ximg .Width );_gaab :=(_fadg -_cfff )/2;if opt .FitToWidth {_cfff =_fadg ;_gaab =0;};_dbdg :=_cggfd ;_cfffa :=float64 (0);if opt .PreserveAspectRatio {_dbdg =_cfff *float64 (*ximg .Height )/float64 (*ximg .Width );_cfffa =(_cggfd -_dbdg )/2;};if _aaeae .Resources ==nil {_aaeae .Resources =NewPdfPageResources ();};_cccb :=0;_cadd :=_aa .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_cccb ));for _aaeae .Resources .HasXObjectByName (_cadd ){_cccb ++;_cadd =_aa .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_cccb ));};_edeb =_aaeae .AddImageResource (_cadd ,ximg );if _edeb !=nil {return _edeb ;};_cccb =0;_abfg :=_aa .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_cccb ));for _aaeae .HasExtGState (_abfg ){_cccb ++;_abfg =_aa .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_cccb ));};_eeafg :=_aa .MakeDict ();_eeafg .Set ("\u0042\u004d",_aa .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_eeafg .Set ("\u0043\u0041",_aa .MakeFloat (opt .Alpha ));_eeafg .Set ("\u0063\u0061",_aa .MakeFloat (opt .Alpha ));_edeb =_aaeae .AddExtGState (_abfg ,_eeafg );if _edeb !=nil {return _edeb ;};_fecgc :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_abfg ,_cfff ,_dbdg ,_gaab ,_cfffa ,_cadd );_aaeae .AddContentStreamByString (_fecgc );return nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_bbgcg *PdfPageResources )HasExtGState (keyName _aa .PdfObjectName )bool {_ ,_daffd :=_bbgcg .GetFontByName (keyName );return _daffd ;};var (ErrRequiredAttributeMissing =_fda .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fda .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_bddd =_fda .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_fda .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fda .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_dfb .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_aa .ErrNotSupported );ErrType1CFontNotSupported =_dfb .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_aa .ErrNotSupported );ErrType3FontNotSupported =_dfb .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_aa .ErrNotSupported );ErrTTCmapNotSupported =_dfb .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_aa .ErrNotSupported );ErrSignNotEnoughSpace =_dfb .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_dfb .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_egeg *PdfAcroForm ,_ccffb *PdfField ,_ffceg *PdfAnnotationWidget )(*_aa .PdfObjectDictionary ,error );};

// M returns the value of the magenta component of the color.
func (_acg *PdfColorDeviceCMYK )M ()float64 {return _acg [1]};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gcbc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eafd :=vals [0];if _eafd < 0.0||_eafd > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeca :=vals [1];if _eeca < 0.0||_eeca > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caggf :=vals [2];if _caggf < 0.0||_caggf > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfdf :=NewPdfColorCalRGB (_eafd ,_eeca ,_caggf );return _gfdf ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gb .ReadSeeker )(*PdfReader ,error ){const _caaeb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";_faef :=&PdfReader {_bgbae :rs ,_fdaec :map[_aa .PdfObject ]struct{}{},_cgaeff :_bfeag (),_edef :true };_bebe ,_fddf :=_facd ("\u0072");if _fddf !=nil {return nil ,_fddf ;};_fddf =_aee .Track (_bebe ,_caaeb );if _fddf !=nil {return nil ,_fddf ;};_faef ._gaeb =_bebe ;_eecec ,_fddf :=_aa .NewParser (rs );if _fddf !=nil {return nil ,_fddf ;};_faef ._gbacd =_eecec ;_egggb ,_fddf :=_faef .IsEncrypted ();if _fddf !=nil {return nil ,_fddf ;};if !_egggb {_fddf =_faef .loadStructure ();if _fddf !=nil {return nil ,_fddf ;};};return _faef ,nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_caff ,_cbcc :=_ddcc (basefont );if _cbcc !=nil {return nil ,_cbcc ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_caff ._ddbeg =_af .NewWinAnsiEncoder ();};return &PdfFont {_acdfa :&_caff },nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ggfgd :=&XObjectForm {};_abgefd :=&_aa .PdfObjectStream {};_abgefd .PdfObjectDictionary =_aa .MakeDict ();_ggfgd ._affbc =_abgefd ;return _ggfgd ;};func (_dcee *PdfPattern )getDict ()*_aa .PdfObjectDictionary {if _dgfb ,_eagd :=_dcee ._dedae .(*_aa .PdfIndirectObject );_eagd {_gfdad ,_gbaab :=_dgfb .PdfObject .(*_aa .PdfObjectDictionary );if !_gbaab {return nil ;};return _gfdad ;}else if _cccgc ,_bgcag :=_dcee ._dedae .(*_aa .PdfObjectStream );_bgcag {return _cccgc .PdfObjectDictionary ;}else {_ba .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dcee ._dedae );return nil ;};};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cgcbc *PdfPage )Duplicate ()*PdfPage {_gcba :=*_cgcbc ;_gcba ._bebd =_aa .MakeDict ();_gcba ._gacge =_aa .MakeIndirectObject (_gcba ._bebd );return &_gcba ;};func (_bgbc *PdfReader )resolveReference (_fbdfd *_aa .PdfObjectReference )(_aa .PdfObject ,bool ,error ){_cbcga ,_fdadb :=_bgbc ._gbacd .ObjCache [int (_fbdfd .ObjectNumber )];if !_fdadb {_ba .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_fbdfd );_eegff ,_dbcbc :=_bgbc ._gbacd .LookupByReference (*_fbdfd );if _dbcbc !=nil {return nil ,false ,_dbcbc ;};_bgbc ._gbacd .ObjCache [int (_fbdfd .ObjectNumber )]=_eegff ;return _eegff ,false ,nil ;};return _cbcga ,true ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dgdb *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ToPdfObject returns a PDF object representation of the outline.
func (_defdc *Outline )ToPdfObject ()_aa .PdfObject {return _defdc .ToPdfOutline ().ToPdfObject ()};func (_dfdbe *DSS )generateHashMaps ()error {_dbea ,_cbdd :=_dfdbe .generateHashMap (_dfdbe .Certs );if _cbdd !=nil {return _cbdd ;};_bfbg ,_cbdd :=_dfdbe .generateHashMap (_dfdbe .OCSPs );if _cbdd !=nil {return _cbdd ;};_bgbd ,_cbdd :=_dfdbe .generateHashMap (_dfdbe .CRLs );if _cbdd !=nil {return _cbdd ;};_dfdbe ._dbcf =_dbea ;_dfdbe ._ccdee =_bfbg ;_dfdbe ._dbbfb =_bgbd ;return nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_dbdc PdfModel ;Rect _aa .PdfObject ;Contents _aa .PdfObject ;P _aa .PdfObject ;NM _aa .PdfObject ;M _aa .PdfObject ;F _aa .PdfObject ;AP _aa .PdfObject ;AS _aa .PdfObject ;Border _aa .PdfObject ;C _aa .PdfObject ;StructParent _aa .PdfObject ;OC _aa .PdfObject ;_dde *_aa .PdfIndirectObject ;};func _eadca (_eaeae *_aa .PdfObjectDictionary )(*PdfShadingType3 ,error ){_gacec :=PdfShadingType3 {};_gccbea :=_eaeae .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gccbea ==nil {_ba .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_dafdd ,_gegee :=_gccbea .(*_aa .PdfObjectArray );if !_gegee {_ba .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gccbea );return nil ,_aa .ErrTypeError ;};if _dafdd .Len ()!=6{_ba .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dafdd .Len ());return nil ,ErrInvalidAttribute ;};_gacec .Coords =_dafdd ;if _dfbdb :=_eaeae .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dfbdb !=nil {_dfbdb =_aa .TraceToDirectObject (_dfbdb );_eedd ,_ccfc :=_dfbdb .(*_aa .PdfObjectArray );if !_ccfc {_ba .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfbdb );return nil ,_aa .ErrTypeError ;};_gacec .Domain =_eedd ;};_gccbea =_eaeae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gccbea ==nil {_ba .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_gacec .Function =[]PdfFunction {};if _edca ,_gfdffb :=_gccbea .(*_aa .PdfObjectArray );_gfdffb {for _ ,_bfecc :=range _edca .Elements (){_ecda ,_cfcbf :=_dccg (_bfecc );if _cfcbf !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfcbf );return nil ,_cfcbf ;};_gacec .Function =append (_gacec .Function ,_ecda );};}else {_eccbc ,_gbeda :=_dccg (_gccbea );if _gbeda !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbeda );return nil ,_gbeda ;};_gacec .Function =append (_gacec .Function ,_eccbc );};if _eedbf :=_eaeae .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eedbf !=nil {_eedbf =_aa .TraceToDirectObject (_eedbf );_dcfe ,_egeaeb :=_eedbf .(*_aa .PdfObjectArray );if !_egeaeb {_ba .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eedbf );return nil ,_aa .ErrTypeError ;};if _dcfe .Len ()!=2{_ba .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dcfe .Len ());return nil ,ErrInvalidAttribute ;};_gacec .Extend =_dcfe ;};return &_gacec ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _aa .PdfObject ;};func (_eece *PdfReader )newPdfAnnotationCircleFromDict (_ceca *_aa .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_bffe :=PdfAnnotationCircle {};_dggb ,_gfag :=_eece .newPdfAnnotationMarkupFromDict (_ceca );if _gfag !=nil {return nil ,_gfag ;};_bffe .PdfAnnotationMarkup =_dggb ;_bffe .BS =_ceca .Get ("\u0042\u0053");_bffe .IC =_ceca .Get ("\u0049\u0043");_bffe .BE =_ceca .Get ("\u0042\u0045");_bffe .RD =_ceca .Get ("\u0052\u0044");return &_bffe ,nil ;};func (_ddcea *PdfReader )newPdfPageFromDict (_adgeg *_aa .PdfObjectDictionary )(*PdfPage ,error ){_dgaac :=NewPdfPage ();_dgaac ._bebd =_adgeg ;_ceaag :=*_adgeg ;_bbgb ,_ebaac :=_ceaag .Get ("\u0054\u0079\u0070\u0065").(*_aa .PdfObjectName );if !_ebaac {return nil ,_fda .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_bbgb !="\u0050\u0061\u0067\u0065"{return nil ,_fda .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _dbab :=_ceaag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dbab !=nil {_dgaac .Parent =_dbab ;};if _fffdg :=_ceaag .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fffdg !=nil {_fbeda ,_bggca :=_aa .GetString (_fffdg );if !_bggca {return nil ,_fda .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_beeea ,_dgbgd :=NewPdfDate (_fbeda .Str ());if _dgbgd !=nil {return nil ,_dgbgd ;};_dgaac .LastModified =&_beeea ;};if _ababd :=_ceaag .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ababd !=nil &&!_aa .IsNullObject (_ababd ){_afcbd ,_bgfcc :=_aa .GetDict (_ababd );if !_bgfcc {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ababd );};var _gdggb error ;_dgaac .Resources ,_gdggb =NewPdfPageResourcesFromDict (_afcbd );if _gdggb !=nil {return nil ,_gdggb ;};}else {_dbgc ,_ggddf :=_dgaac .getParentResources ();if _ggddf !=nil {return nil ,_ggddf ;};if _dbgc ==nil {_dbgc =NewPdfPageResources ();};_dgaac .Resources =_dbgc ;};if _edda :=_ceaag .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_edda !=nil {_cffc ,_cccga :=_aa .GetArray (_edda );if !_cccga {return nil ,_fda .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fbdd error ;_dgaac .MediaBox ,_fbdd =NewPdfRectangle (*_cffc );if _fbdd !=nil {return nil ,_fbdd ;};};if _fbefb :=_ceaag .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fbefb !=nil {_bcbac ,_ddcec :=_aa .GetArray (_fbefb );if !_ddcec {return nil ,_fda .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _eggeg error ;_dgaac .CropBox ,_eggeg =NewPdfRectangle (*_bcbac );if _eggeg !=nil {return nil ,_eggeg ;};};if _dbegc :=_ceaag .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dbegc !=nil {_adbdf ,_ccbbc :=_aa .GetArray (_dbegc );if !_ccbbc {return nil ,_fda .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _beage error ;_dgaac .BleedBox ,_beage =NewPdfRectangle (*_adbdf );if _beage !=nil {return nil ,_beage ;};};if _gddcd :=_ceaag .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gddcd !=nil {_fccdd ,_cebf :=_aa .GetArray (_gddcd );if !_cebf {return nil ,_fda .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _egedd error ;_dgaac .TrimBox ,_egedd =NewPdfRectangle (*_fccdd );if _egedd !=nil {return nil ,_egedd ;};};if _gbccd :=_ceaag .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gbccd !=nil {_ggced ,_bbef :=_aa .GetArray (_gbccd );if !_bbef {return nil ,_fda .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _eafa error ;_dgaac .ArtBox ,_eafa =NewPdfRectangle (*_ggced );if _eafa !=nil {return nil ,_eafa ;};};if _gfcaa :=_ceaag .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_gfcaa !=nil {_dgaac .BoxColorInfo =_gfcaa ;};if _abeaa :=_ceaag .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_abeaa !=nil {_dgaac .Contents =_abeaa ;};if _geae :=_ceaag .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_geae !=nil {_fdgg ,_gcdg :=_aa .GetInt (_geae );if !_gcdg {return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_gdgd :=int64 (*_fdgg );_dgaac .Rotate =&_gdgd ;};if _effc :=_ceaag .Get ("\u0047\u0072\u006fu\u0070");_effc !=nil {_dgaac .Group =_effc ;};if _ddcdg :=_ceaag .Get ("\u0054\u0068\u0075m\u0062");_ddcdg !=nil {_dgaac .Thumb =_ddcdg ;};if _fbgcf :=_ceaag .Get ("\u0042");_fbgcf !=nil {_dgaac .B =_fbgcf ;};if _egfed :=_ceaag .Get ("\u0044\u0075\u0072");_egfed !=nil {_dgaac .Dur =_egfed ;};if _gafb :=_ceaag .Get ("\u0054\u0072\u0061n\u0073");_gafb !=nil {_dgaac .Trans =_gafb ;};if _dfbdg :=_ceaag .Get ("\u0041\u0041");_dfbdg !=nil {_dgaac .AA =_dfbdg ;};if _ceadd :=_ceaag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ceadd !=nil {_dgaac .Metadata =_ceadd ;};if _dfaa :=_ceaag .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dfaa !=nil {_dgaac .PieceInfo =_dfaa ;};if _gabfc :=_ceaag .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gabfc !=nil {_dgaac .StructParents =_gabfc ;};if _aecdd :=_ceaag .Get ("\u0049\u0044");_aecdd !=nil {_dgaac .ID =_aecdd ;};if _fbda :=_ceaag .Get ("\u0050\u005a");_fbda !=nil {_dgaac .PZ =_fbda ;};if _dbcad :=_ceaag .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_dbcad !=nil {_dgaac .SeparationInfo =_dbcad ;};if _gggc :=_ceaag .Get ("\u0054\u0061\u0062\u0073");_gggc !=nil {_dgaac .Tabs =_gggc ;};if _cgaed :=_ceaag .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_cgaed !=nil {_dgaac .TemplateInstantiated =_cgaed ;};if _edeeg :=_ceaag .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_edeeg !=nil {_dgaac .PresSteps =_edeeg ;};if _dcda :=_ceaag .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dcda !=nil {_dgaac .UserUnit =_dcda ;};if _gfggg :=_ceaag .Get ("\u0056\u0050");_gfggg !=nil {_dgaac .VP =_gfggg ;};if _dcae :=_ceaag .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_dcae !=nil {_dgaac .Annots =_dcae ;};_dgaac ._cdecc =_ddcea ;return _dgaac ,nil ;};func _eefd (_febe _aa .PdfObject )(*PdfColorspaceICCBased ,error ){_fcac :=&PdfColorspaceICCBased {};if _ffed ,_dgcg :=_febe .(*_aa .PdfIndirectObject );_dgcg {_fcac ._gaec =_ffed ;};_febe =_aa .TraceToDirectObject (_febe );_daedb ,_ecae :=_febe .(*_aa .PdfObjectArray );if !_ecae {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _daedb .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_febe =_aa .TraceToDirectObject (_daedb .Get (0));_gaag ,_ecae :=_febe .(*_aa .PdfObjectName );if !_ecae {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_gaag !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_febe =_daedb .Get (1);_gced ,_ecae :=_aa .GetStream (_febe );if !_ecae {_ba .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_febe );return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fag :=_gced .PdfObjectDictionary ;_gfad ,_ecae :=_fag .Get ("\u004e").(*_aa .PdfObjectInteger );if !_ecae {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_gfad !=1&&*_gfad !=3&&*_gfad !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_fcac .N =int (*_gfad );if _bacf :=_fag .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_bacf !=nil {_fbbc ,_dcdg :=NewPdfColorspaceFromPdfObject (_bacf );if _dcdg !=nil {return nil ,_dcdg ;};_fcac .Alternate =_fbbc ;};if _baccg :=_fag .Get ("\u0052\u0061\u006eg\u0065");_baccg !=nil {_baccg =_aa .TraceToDirectObject (_baccg );_gdafe ,_bgdb :=_baccg .(*_aa .PdfObjectArray );if !_bgdb {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _gdafe .Len ()!=2*_fcac .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_daga ,_ddd :=_gdafe .GetAsFloat64Slice ();if _ddd !=nil {return nil ,_ddd ;};_fcac .Range =_daga ;}else {_fcac .Range =make ([]float64 ,2*_fcac .N );for _dcba :=0;_dcba < _fcac .N ;_dcba ++{_fcac .Range [2*_dcba ]=0.0;_fcac .Range [2*_dcba +1]=1.0;};};if _cgf :=_fag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cgf !=nil {_ggfgg ,_ecag :=_cgf .(*_aa .PdfObjectStream );if !_ecag {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_fcac .Metadata =_ggfgg ;};_gdegcd ,_agab :=_aa .DecodeStream (_gced );if _agab !=nil {return nil ,_agab ;};_fcac .Data =_gdegcd ;_fcac ._ggdf =_gced ;return _fcac ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_aed *PdfAnnotationLink )SetAction (action *PdfAction ){_aed ._ggb =action ;if action ==nil {_aed .A =nil ;};};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ecfc *PdfAnnotation )GetContext ()PdfModel {if _ecfc ==nil {return nil ;};return _ecfc ._dbdc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_bfaf *PdfColorspaceLab )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gage ,_dgcb :=_aa .GetNumbersAsFloat (objects );if _dgcb !=nil {return nil ,_dgcb ;};return _bfaf .ColorFromFloats (_gage );};func (_dfaac *PdfReader )lookupPageByObject (_fceg _aa .PdfObject )(*PdfPage ,error ){return nil ,_fda .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_aa .PdfObjectDictionary )(*PdfPageResources ,error ){_bbbe :=NewPdfPageResources ();if _dbbe :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_dbbe !=nil {_bbbe .ExtGState =_dbbe ;};if _bgffc :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_bgffc !=nil &&!_aa .IsNullObject (_bgffc ){_bbbe .ColorSpace =_bgffc ;};if _eebad :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_eebad !=nil {_bbbe .Pattern =_eebad ;};if _gebcf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_gebcf !=nil {_bbbe .Shading =_gebcf ;};if _bgef :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bgef !=nil {_bbbe .XObject =_bgef ;};if _dcgbc :=_aa .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_dcgbc !=nil {_bbbe .Font =_dcgbc ;};if _egeab :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_egeab !=nil {_bbbe .ProcSet =_egeab ;};if _ffgeb :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ffgeb !=nil {_bbbe .Properties =_ffgeb ;};return _bbbe ,nil ;};func (_afa *PdfReader )newPdfAnnotationWidgetFromDict (_bgfg *_aa .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_bfeg :=PdfAnnotationWidget {};_bfeg .H =_bgfg .Get ("\u0048");_bfeg .MK =_bgfg .Get ("\u004d\u004b");_bfeg .A =_bgfg .Get ("\u0041");_bfeg .AA =_bgfg .Get ("\u0041\u0041");_bfeg .BS =_bgfg .Get ("\u0042\u0053");_bfeg .Parent =_bgfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_bfeg ,nil ;};func (_fdea *PdfReader )newPdfAnnotationUnderlineFromDict (_ega *_aa .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fdd :=PdfAnnotationUnderline {};_eedge ,_fbed :=_fdea .newPdfAnnotationMarkupFromDict (_ega );if _fbed !=nil {return nil ,_fbed ;};_fdd .PdfAnnotationMarkup =_eedge ;_fdd .QuadPoints =_ega .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fdd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aeaf *PdfAnnotationProjection )ToPdfObject ()_aa .PdfObject {_aeaf .PdfAnnotation .ToPdfObject ();_ebef :=_aeaf ._dde ;_dcfg :=_ebef .PdfObject .(*_aa .PdfObjectDictionary );_aeaf .PdfAnnotationMarkup .appendToPdfDictionary (_dcfg );return _ebef ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_fbgfa []_aa .PdfObject )([]_aa .PdfObject ,error );};func (_efag *PdfReader )newPdfFieldFromIndirectObject (_acdc *_aa .PdfIndirectObject ,_ecgga *PdfField )(*PdfField ,error ){if _deba ,_cbggg :=_efag ._cgaeff .GetModelFromPrimitive (_acdc ).(*PdfField );_cbggg {return _deba ,nil ;};_egaa ,_bbdbf :=_aa .GetDict (_acdc );if !_bbdbf {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gbaa :=NewPdfField ();_gbaa ._ebabe =_acdc ;_gbaa ._ebabe .PdfObject =_egaa ;if _bgee ,_gaac :=_aa .GetName (_egaa .Get ("\u0046\u0054"));_gaac {_gbaa .FT =_bgee ;};if _ecgga !=nil {_gbaa .Parent =_ecgga ;};_gbaa .T ,_ =_egaa .Get ("\u0054").(*_aa .PdfObjectString );_gbaa .TU ,_ =_egaa .Get ("\u0054\u0055").(*_aa .PdfObjectString );_gbaa .TM ,_ =_egaa .Get ("\u0054\u004d").(*_aa .PdfObjectString );_gbaa .Ff ,_ =_egaa .Get ("\u0046\u0066").(*_aa .PdfObjectInteger );_gbaa .V =_egaa .Get ("\u0056");_gbaa .DV =_egaa .Get ("\u0044\u0056");_gbaa .AA =_egaa .Get ("\u0041\u0041");_dbdfd :=_gbaa .FT ;if _dbdfd ==nil &&_ecgga !=nil {_dbdfd =_ecgga .FT ;};if _dbdfd !=nil {switch *_dbdfd {case "\u0054\u0078":_acgg ,_dbgba :=_bdced (_egaa );if _dbgba !=nil {return nil ,_dbgba ;};_acgg .PdfField =_gbaa ;_gbaa ._afdff =_acgg ;case "\u0043\u0068":_edeec ,_badb :=_ababe (_egaa );if _badb !=nil {return nil ,_badb ;};_edeec .PdfField =_gbaa ;_gbaa ._afdff =_edeec ;case "\u0042\u0074\u006e":_bggfg ,_ddfb :=_ccbb (_egaa );if _ddfb !=nil {return nil ,_ddfb ;};_bggfg .PdfField =_gbaa ;_gbaa ._afdff =_bggfg ;case "\u0053\u0069\u0067":_fddc ,_eedcg :=_efag .newPdfFieldSignatureFromDict (_egaa );if _eedcg !=nil {return nil ,_eedcg ;};_fddc .PdfField =_gbaa ;_gbaa ._afdff =_fddc ;default:_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gbaa .FT );return nil ,_fda .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _agaca ,_adbag :=_aa .GetName (_egaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_adbag {if *_agaca =="\u0057\u0069\u0064\u0067\u0065\u0074"{_fbefe ,_gegc :=_efag .newPdfAnnotationFromIndirectObject (_acdc );if _gegc !=nil {return nil ,_gegc ;};_fdcg ,_fdcea :=_fbefe .GetContext ().(*PdfAnnotationWidget );if !_fdcea {return nil ,_fda .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_fdcg ._eagf =_gbaa ;_fdcg .Parent =_gbaa ._ebabe ;_gbaa .Annotations =append (_gbaa .Annotations ,_fdcg );return _gbaa ,nil ;};};_bfce :=true ;if _eadb ,_adebd :=_aa .GetArray (_egaa .Get ("\u004b\u0069\u0064\u0073"));_adebd {_befb :=make ([]*_aa .PdfIndirectObject ,0,_eadb .Len ());for _ ,_dgbbe :=range _eadb .Elements (){_dcgdc ,_ddgbb :=_aa .GetIndirect (_dgbbe );if !_ddgbb {_dfdaf ,_cgbdc :=_aa .GetStream (_dgbbe );if _cgbdc &&_dfdaf .PdfObjectDictionary !=nil {_degca ,_ffabd :=_aa .GetNameVal (_dfdaf .Get ("\u0054\u0079\u0070\u0065"));if _ffabd &&_degca =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ba .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_fda .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cgdd ,_efge :=_aa .GetDict (_dcgdc );if !_efge {return nil ,ErrTypeCheck ;};if _bfce {_bfce =!_afff (_cgdd );};_befb =append (_befb ,_dcgdc );};for _ ,_dbad :=range _befb {if _bfce {_abcbb ,_efdbd :=_efag .newPdfAnnotationFromIndirectObject (_dbad );if _efdbd !=nil {_ba .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_efdbd );return nil ,_efdbd ;};_cfdbg ,_gegcf :=_abcbb ._dbdc .(*PdfAnnotationWidget );if !_gegcf {return nil ,ErrTypeCheck ;};_cfdbg ._eagf =_gbaa ;_gbaa .Annotations =append (_gbaa .Annotations ,_cfdbg );}else {_fgaa ,_cgcfb :=_efag .newPdfFieldFromIndirectObject (_dbad ,_gbaa );if _cgcfb !=nil {_ba .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cgcfb );return nil ,_cgcfb ;};_gbaa .Kids =append (_gbaa .Kids ,_fgaa );};};};return _gbaa ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_beea .Lock ();defer _beea .Unlock ();_gcgfg =creator };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ecbf *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ecbf .Alternate ==nil {_ba .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _ecbf .N ==1{_ba .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_deaa :=NewPdfColorspaceDeviceGray ();return _deaa .ImageToRGB (img );}else if _ecbf .N ==3{_ba .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _ecbf .N ==4{_ba .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_aeeaf :=NewPdfColorspaceDeviceCMYK ();return _aeeaf .ImageToRGB (img );}else {return img ,_fda .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ba .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ecbf );_fged ,_bfbcd :=_ecbf .Alternate .ImageToRGB (img );_ba .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ba .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_fged );return _fged ,_bfbcd ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_daa :=NewPdfAnnotation ();_ade :=&PdfAnnotationInk {};_ade .PdfAnnotation =_daa ;_ade .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daa .SetContext (_ade );return _ade ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_dfeeb :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_dfeeb .N =N ;return _dfeeb ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aa .PdfObject ;IC _aa .PdfObject ;BE _aa .PdfObject ;RD _aa .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgdegd *PdfShadingType6 )ToPdfObject ()_aa .PdfObject {_cgdegd .PdfShading .ToPdfObject ();_cfcdg ,_ddfad :=_cgdegd .getShadingDict ();if _ddfad !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cgdegd .BitsPerCoordinate !=nil {_cfcdg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgdegd .BitsPerCoordinate );};if _cgdegd .BitsPerComponent !=nil {_cfcdg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgdegd .BitsPerComponent );};if _cgdegd .BitsPerFlag !=nil {_cfcdg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cgdegd .BitsPerFlag );};if _cgdegd .Decode !=nil {_cfcdg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgdegd .Decode );};if _cgdegd .Function !=nil {if len (_cgdegd .Function )==1{_cfcdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgdegd .Function [0].ToPdfObject ());}else {_efbcbf :=_aa .MakeArray ();for _ ,_cefc :=range _cgdegd .Function {_efbcbf .Append (_cefc .ToPdfObject ());};_cfcdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efbcbf );};};return _cgdegd ._fbdfa ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dccb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dccb ._adfea .(*PdfShadingPattern );};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func _dbaea (_cecaf *PdfField ,_fcaa _aa .PdfObject )error {switch _cecaf .GetContext ().(type ){case *PdfFieldText :switch _edbb :=_fcaa .(type ){case *_aa .PdfObjectName :_ffgdb :=_edbb ;_ba .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ffgdb .String ());_cecaf .V =_aa .MakeEncodedString (_edbb .String (),true );case *_aa .PdfObjectString :_cecaf .V =_aa .MakeEncodedString (_edbb .String (),true );default:_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_edbb ,_edbb );};case *PdfFieldButton :switch _fcaa .(type ){case *_aa .PdfObjectName :if len (_fcaa .String ())> 0{_cecaf .V =_fcaa ;_cgec (_cecaf ,_fcaa );};case *_aa .PdfObjectString :if len (_fcaa .String ())> 0{_cecaf .V =_aa .MakeName (_fcaa .String ());_cgec (_cecaf ,_cecaf .V );};default:_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cecaf .PartialName (),_fcaa );_cecaf .V =_fcaa ;};case *PdfFieldChoice :switch _fcaa .(type ){case *_aa .PdfObjectName :if len (_fcaa .String ())> 0{_cecaf .V =_aa .MakeString (_fcaa .String ());_cgec (_cecaf ,_fcaa );};case *_aa .PdfObjectString :if len (_fcaa .String ())> 0{_cecaf .V =_fcaa ;_cgec (_cecaf ,_aa .MakeName (_fcaa .String ()));};default:_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cecaf .PartialName (),_fcaa );_cecaf .V =_fcaa ;};case *PdfFieldSignature :_ba .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cecaf .PartialName (),_fcaa );};return nil ;};

// String returns the name of the colorspace (DeviceN).
func (_fgedc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_faaca *PdfReader )GetPageLabels ()(_aa .PdfObject ,error ){_bbgcb :=_aa .ResolveReference (_faaca ._fbdcg .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bbgcb ==nil {return nil ,nil ;};if !_faaca ._edef {_eebbbb :=_faaca .traverseObjectData (_bbgcb );if _eebbbb !=nil {return nil ,_eebbbb ;};};return _bbgcb ,nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _aa .StreamEncoder ;Intent _aa .PdfObject ;ImageMask _aa .PdfObject ;Mask _aa .PdfObject ;Matte _aa .PdfObject ;Decode _aa .PdfObject ;Interpolate _aa .PdfObject ;Alternatives _aa .PdfObject ;SMask _aa .PdfObject ;SMaskInData _aa .PdfObject ;Name _aa .PdfObject ;StructParent _aa .PdfObject ;ID _aa .PdfObject ;OPI _aa .PdfObject ;Metadata _aa .PdfObject ;OC _aa .PdfObject ;Stream []byte ;_fcbac *_aa .PdfObjectStream ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_fcge :=NewPdfAnnotation ();_adf :=&PdfAnnotationRedact {};_adf .PdfAnnotation =_fcge ;_adf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcge .SetContext (_adf );return _adf ;};func (_afeab *PdfReader )newPdfAnnotationSquigglyFromDict (_fbgf *_aa .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bgge :=PdfAnnotationSquiggly {};_adb ,_agce :=_afeab .newPdfAnnotationMarkupFromDict (_fbgf );if _agce !=nil {return nil ,_agce ;};_bgge .PdfAnnotationMarkup =_adb ;_bgge .QuadPoints =_fbgf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bgge ,nil ;};

// AddImageResource adds an image to the XObject resources.
func (_abdbb *PdfPage )AddImageResource (name _aa .PdfObjectName ,ximg *XObjectImage )error {var _gbag *_aa .PdfObjectDictionary ;if _abdbb .Resources .XObject ==nil {_gbag =_aa .MakeDict ();_abdbb .Resources .XObject =_gbag ;}else {var _fggcc bool ;_gbag ,_fggcc =(_abdbb .Resources .XObject ).(*_aa .PdfObjectDictionary );if !_fggcc {return _fda .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gbag .Set (name ,ximg .ToPdfObject ());return nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_cgdc *DSS )ToPdfObject ()_aa .PdfObject {_ffdg :=_cgdc ._cffd .PdfObject .(*_aa .PdfObjectDictionary );_ffdg .Clear ();_bdff :=_aa .MakeDict ();for _cgcg ,_fgadf :=range _cgdc .VRI {_bdff .Set (*_aa .MakeName (_cgcg ),_fgadf .ToPdfObject ());};_ffdg .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_gbegg (_cgdc .Certs ));_ffdg .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_gbegg (_cgdc .OCSPs ));_ffdg .SetIfNotNil ("\u0043\u0052\u004c\u0073",_gbegg (_cgdc .CRLs ));_ffdg .Set ("\u0056\u0052\u0049",_bdff );return _cgdc ._cffd ;};func _facd (_fbace string )(string ,error ){var _bdfbb _dc .Buffer ;_bdfbb .WriteString (_fbace );_cdcg :=make ([]byte ,8+16);_dbee :=_ab .Now ().UTC ().UnixNano ();_ae .BigEndian .PutUint64 (_cdcg ,uint64 (_dbee ));_ ,_afdcd :=_g .Read (_cdcg [8:]);if _afdcd !=nil {return "",_afdcd ;};_bdfbb .WriteString (_b .EncodeToString (_cdcg ));return _bdfbb .String (),nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _aa .PdfObject ;MK _aa .PdfObject ;A _aa .PdfObject ;AA _aa .PdfObject ;BS _aa .PdfObject ;Parent _aa .PdfObject ;_eagf *PdfField ;_abbf bool ;};

// GetPdfInfo returns the PDF info dictionary.
func (_egbd *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_becfb :=PdfInfo {};_gcdff ,_fgfa :=_egbd .GetTrailer ();if _fgfa !=nil {return nil ,_fgfa ;};var _beagc *_aa .PdfObjectDictionary ;_faebe :=_gcdff .Get ("\u0049\u006e\u0066\u006f");switch _bcad :=_faebe .(type ){case *_aa .PdfObjectReference :_cbbbb :=_bcad ;_faebe ,_fgfa =_egbd .GetIndirectObjectByNumber (int (_cbbbb .ObjectNumber ));_faebe =_aa .TraceToDirectObject (_faebe );if _fgfa !=nil {return nil ,_fgfa ;};_beagc ,_ =_faebe .(*_aa .PdfObjectDictionary );case *_aa .PdfObjectDictionary :_beagc =_bcad ;};if _beagc ==nil {return nil ,_fda .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_egdbb :=range _beagc .Keys (){switch _egdbb {case "\u0054\u0069\u0074l\u0065":_becfb .Title ,_ =_aa .GetString (_beagc .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_becfb .Author ,_ =_aa .GetString (_beagc .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_becfb .Subject ,_ =_aa .GetString (_beagc .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_becfb .Keywords ,_ =_aa .GetString (_beagc .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_becfb .Creator ,_ =_aa .GetString (_beagc .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_becfb .Producer ,_ =_aa .GetString (_beagc .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_becfb .Trapped ,_ =_aa .GetName (_beagc .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _bgdbf ,_cebge :=_aa .GetString (_beagc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_cebge &&_bgdbf .String ()!=""{_fbefg ,_cbfda :=NewPdfDate (_bgdbf .String ());if _cbfda !=nil {return nil ,_cbfda ;};_becfb .CreationDate =&_fbefg ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _dfcgda ,_bbegb :=_aa .GetString (_beagc .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bbegb &&_dfcgda .String ()!=""{_bbgdf ,_gedcaa :=NewPdfDate (_dfcgda .String ());if _gedcaa !=nil {return nil ,_gedcaa ;};_becfb .ModifiedDate =&_bbgdf ;};default:_adead ,_ :=_aa .GetString (_beagc .Get (_egdbb ));if _becfb ._gaef ==nil {_becfb ._gaef =_aa .MakeDict ();};_becfb ._gaef .Set (_egdbb ,_adead );};};return &_becfb ,nil ;};func _afaec (_cacebe _aa .PdfObject )(string ,error ){_cacebe =_aa .TraceToDirectObject (_cacebe );switch _gddf :=_cacebe .(type ){case *_aa .PdfObjectString :return _gddf .Str (),nil ;case *_aa .PdfObjectStream :_ggba ,_fgace :=_aa .DecodeStream (_gddf );if _fgace !=nil {return "",_fgace ;};return string (_ggba ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cacebe );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_efga *PdfColorspaceSpecialSeparation )ToPdfObject ()_aa .PdfObject {_fggf :=_aa .MakeArray (_aa .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fggf .Append (_efga .ColorantName );_fggf .Append (_efga .AlternateSpace .ToPdfObject ());_fggf .Append (_efga .TintTransform .ToPdfObject ());if _efga ._cccc !=nil {_efga ._cccc .PdfObject =_fggf ;return _efga ._cccc ;};return _fggf ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_fgbgef *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_aa .StreamEncoder ,error ){_cdfb ,_agggg :=_fgbgef ._dedae .(*_aa .PdfObjectStream );if !_agggg {_ba .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgbgef ._dedae );return nil ,nil ,_aa .ErrTypeError ;};_eafeb ,_fefde :=_aa .DecodeStream (_cdfb );if _fefde !=nil {_ba .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_fefde );return nil ,nil ,_fefde ;};_gffd ,_fefde :=_aa .NewEncoderFromStream (_cdfb );if _fefde !=nil {_ba .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fefde );return nil ,nil ,_fefde ;};return _eafeb ,_gffd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_eeef *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_fgfg fontCommon )asPdfObjectDictionary (_eecfb string )*_aa .PdfObjectDictionary {if _eecfb !=""&&_fgfg ._cbae !=""&&_eecfb !=_fgfg ._cbae {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_eecfb ,_fgfg );}else if _eecfb ==""&&_fgfg ._cbae ==""{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgfg );}else if _fgfg ._cbae ==""{_fgfg ._cbae =_eecfb ;};_ffcc :=_aa .MakeDict ();_ffcc .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0046\u006f\u006e\u0074"));_ffcc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_aa .MakeName (_fgfg ._debe ));_ffcc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName (_fgfg ._cbae ));if _fgfg ._edga !=nil {_ffcc .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_fgfg ._edga .ToPdfObject ());};if _fgfg ._bgdfb !=nil {_ffcc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fgfg ._bgdfb );}else if _fgfg ._dbacb !=nil {_gcad ,_bgeg :=_fgfg ._dbacb .Stream ();if _bgeg !=nil {_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bgeg );}else {_ffcc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gcad );};};return _ffcc ;};func (_bfcfc *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// Write writes out the PDF.
func (_daecg *PdfWriter )Write (writer _gb .Writer )error {_ba .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_gaafgb :=_aee .GetLicenseKey ();if (_gaafgb ==nil ||!_gaafgb .IsLicensed ())&&!_ddaec {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _fda .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _daecg ._ggfaf !=nil {_ba .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_daecg ._ggfaf );_dbaeg :=_daecg ._ggfaf .ToPdfObject ();_ba .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_dbaeg ,_dbaeg ,_dbaeg );_daecg ._gbcg .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_dbaeg );_fefgf :=_daecg .addObjects (_dbaeg );if _fefgf !=nil {return _fefgf ;};};if _daecg ._eaee !=nil {_ba .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_agdgb :=_daecg ._eaee .ToPdfObject ();_ba .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_agdgb );_daecg ._gbcg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_agdgb );_edecg :=_daecg .addObjects (_agdgb );if _edecg !=nil {return _edecg ;};};for _fdegb ,_acbcb :=range _daecg ._bfdb {if !_daecg .hasObject (_fdegb ){_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_fdegb ,_fdegb ,_fdegb );for _ ,_gegea :=range _acbcb {for _ ,_ggffg :=range _gegea .Keys (){_cafcc :=_gegea .Get (_ggffg );if _cafcc ==_fdegb {_ba .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_gegea .Set (_ggffg ,_aa .MakeNull ());break ;};};};};};_daecg ._gbcg .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_aa .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_daecg ._abeac ,_daecg ._ccdd )));_daecg .copyObjects ();if _daecg ._bggeg !=nil {var _dcca error ;_daecg ._gecd ,_dcca =_daecg ._bggeg .Optimize (_daecg ._gecd );if _dcca !=nil {return _dcca ;};_ecdc :=make (map[_aa .PdfObject ]struct{},len (_daecg ._gecd ));for _ ,_fdbed :=range _daecg ._gecd {_ecdc [_fdbed ]=struct{}{};};_daecg ._faceg =_ecdc ;};_daecg ._gaafg =_daecg ._bfaeg ;_daecg ._cegff =_a .NewWriter (writer );_cdbba :=_daecg ._abeac > 1||(_daecg ._abeac ==1&&_daecg ._ccdd > 4);if _daecg ._acgbd !=nil {_cdbba =*_daecg ._acgbd ;};_ddbgf :=make (map[_aa .PdfObject ]bool );for _ ,_dcgba :=range _daecg ._gecd {if _bbcea ,_cabdg :=_dcgba .(*_aa .PdfObjectStreams );_cabdg {_cdbba =true ;for _ ,_fcgda :=range _bbcea .Elements (){_ddbgf [_fcgda ]=true ;if _eaefa ,_gcbeb :=_fcgda .(*_aa .PdfIndirectObject );_gcbeb {_ddbgf [_eaefa .PdfObject ]=true ;};};};};if _cdbba &&_daecg ._abeac ==1&&_daecg ._ccdd < 5{_daecg ._ccdd =5;};if _daecg ._dgfbd {_daecg .writeString ("\u000a");}else {_daecg .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_daecg ._abeac ,_daecg ._ccdd ));_daecg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_daecg .updateObjectNumbers ();_ba .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_daecg ._gecd ));_daecg ._bfeb =make (map[int ]crossReference );_daecg ._bfeb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _daecg ._deedd .ObjectMap !=nil {for _bggge ,_aaggd :=range _daecg ._deedd .ObjectMap {if _bggge ==0{continue ;};if _aaggd .XType ==_aa .XrefTypeObjectStream {_daefg :=crossReference {Type :2,ObjectNumber :_aaggd .OsObjNumber ,Index :_aaggd .OsObjIndex };_daecg ._bfeb [_bggge ]=_daefg ;};if _aaggd .XType ==_aa .XrefTypeTableEntry {_gaeggd :=crossReference {Type :1,ObjectNumber :_aaggd .ObjectNumber ,Offset :_aaggd .Offset };_daecg ._bfeb [_bggge ]=_gaeggd ;};};};for _ ,_eadde :=range _daecg ._gecd {if _cgfdf :=_ddbgf [_eadde ];_cgfdf {continue ;};_bcdff :=int64 (0);switch _dgbgde :=_eadde .(type ){case *_aa .PdfIndirectObject :_bcdff =_dgbgde .ObjectNumber ;case *_aa .PdfObjectStream :_bcdff =_dgbgde .ObjectNumber ;case *_aa .PdfObjectStreams :_bcdff =_dgbgde .ObjectNumber ;default:_ba .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_eadde );return ErrTypeCheck ;};if _daecg ._fdaab !=nil &&_eadde !=_daecg ._ccfdce {_bfcba :=_daecg ._fdaab .Encrypt (_eadde ,_bcdff ,0);if _bfcba !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bfcba );return _bfcba ;};};_daecg .writeObject (int (_bcdff ),_eadde );};_afddef :=_daecg ._gaafg ;var _ffbee int ;for _acbce :=range _daecg ._bfeb {if _acbce > _ffbee {_ffbee =_acbce ;};};if _cdbba {_aaggf :=_ffbee +1;_daecg ._bfeb [_aaggf ]=crossReference {Type :1,ObjectNumber :_aaggf ,Offset :_afddef };_fafffgd :=_dc .NewBuffer (nil );_cacfg :=_aa .MakeArray ();for _gaeeb :=0;_gaeeb <=_ffbee ;{for ;_gaeeb <=_ffbee ;_gaeeb ++{_gcccc ,_eegdg :=_daecg ._bfeb [_gaeeb ];if _eegdg &&(!_daecg ._dgfbd ||_daecg ._dgfbd &&(_gcccc .Type ==1&&_gcccc .Offset >=_daecg ._gfbdgb ||_gcccc .Type ==0)){break ;};};var _abffc int ;for _abffc =_gaeeb +1;_abffc <=_ffbee ;_abffc ++{_cbcgdbc ,_dafbg :=_daecg ._bfeb [_abffc ];if _dafbg &&(!_daecg ._dgfbd ||_daecg ._dgfbd &&(_cbcgdbc .Type ==1&&_cbcgdbc .Offset > _daecg ._gfbdgb )){continue ;};break ;};_cacfg .Append (_aa .MakeInteger (int64 (_gaeeb )),_aa .MakeInteger (int64 (_abffc -_gaeeb )));for _affcc :=_gaeeb ;_affcc < _abffc ;_affcc ++{_bggfgd :=_daecg ._bfeb [_affcc ];switch _bggfgd .Type {case 0:_ae .Write (_fafffgd ,_ae .BigEndian ,byte (0));_ae .Write (_fafffgd ,_ae .BigEndian ,uint32 (0));_ae .Write (_fafffgd ,_ae .BigEndian ,uint16 (0xFFFF));case 1:_ae .Write (_fafffgd ,_ae .BigEndian ,byte (1));_ae .Write (_fafffgd ,_ae .BigEndian ,uint32 (_bggfgd .Offset ));_ae .Write (_fafffgd ,_ae .BigEndian ,uint16 (_bggfgd .Generation ));case 2:_ae .Write (_fafffgd ,_ae .BigEndian ,byte (2));_ae .Write (_fafffgd ,_ae .BigEndian ,uint32 (_bggfgd .ObjectNumber ));_ae .Write (_fafffgd ,_ae .BigEndian ,uint16 (_bggfgd .Index ));};};_gaeeb =_abffc +1;};_begga ,_bbbcc :=_aa .MakeStream (_fafffgd .Bytes (),_aa .NewFlateEncoder ());if _bbbcc !=nil {return _bbbcc ;};_begga .ObjectNumber =int64 (_aaggf );_begga .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0058\u0052\u0065\u0066"));_begga .PdfObjectDictionary .Set ("\u0057",_aa .MakeArray (_aa .MakeInteger (1),_aa .MakeInteger (4),_aa .MakeInteger (2)));_begga .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cacfg );_begga .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_aa .MakeInteger (int64 (_aaggf +1)));_begga .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_daecg ._fgeca );_begga .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_daecg ._cdff );if _daecg ._dgfbd &&_daecg ._gdde > 0{_begga .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_aa .MakeInteger (_daecg ._gdde ));};if _daecg ._fdaab !=nil {_begga .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_daecg ._ccfdce );_begga .Set ("\u0049\u0044",_daecg ._eegbf );_ba .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_daecg ._eegbf );};_daecg .writeObject (int (_begga .ObjectNumber ),_begga );}else {_daecg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _cgafd :=0;_cgafd <=_ffbee ;{for ;_cgafd <=_ffbee ;_cgafd ++{_bdfcdd ,_dfffa :=_daecg ._bfeb [_cgafd ];if _dfffa &&(!_daecg ._dgfbd ||_daecg ._dgfbd &&(_bdfcdd .Type ==1&&_bdfcdd .Offset >=_daecg ._gfbdgb ||_bdfcdd .Type ==0)){break ;};};var _ebcb int ;for _ebcb =_cgafd +1;_ebcb <=_ffbee ;_ebcb ++{_bdbc ,_egegd :=_daecg ._bfeb [_ebcb ];if _egegd &&(!_daecg ._dgfbd ||_daecg ._dgfbd &&(_bdbc .Type ==1&&_bdbc .Offset > _daecg ._gfbdgb )){continue ;};break ;};_dcgcf :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cgafd ,_ebcb -_cgafd );_daecg .writeString (_dcgcf );for _gacfa :=_cgafd ;_gacfa < _ebcb ;_gacfa ++{_ggbcg :=_daecg ._bfeb [_gacfa ];switch _ggbcg .Type {case 0:_dcgcf =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_daecg .writeString (_dcgcf );case 1:_dcgcf =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_ggbcg .Offset ,0);_daecg .writeString (_dcgcf );};};_cgafd =_ebcb +1;};_ecfbf :=_aa .MakeDict ();_ecfbf .Set ("\u0049\u006e\u0066\u006f",_daecg ._fgeca );_ecfbf .Set ("\u0052\u006f\u006f\u0074",_daecg ._cdff );_ecfbf .Set ("\u0053\u0069\u007a\u0065",_aa .MakeInteger (int64 (_ffbee +1)));if _daecg ._dgfbd &&_daecg ._gdde > 0{_ecfbf .Set ("\u0050\u0072\u0065\u0076",_aa .MakeInteger (_daecg ._gdde ));};if _daecg ._fdaab !=nil {_ecfbf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_daecg ._ccfdce );_ecfbf .Set ("\u0049\u0044",_daecg ._eegbf );_ba .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_daecg ._eegbf );};_daecg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_daecg .writeString (_ecfbf .WriteString ());_daecg .writeString ("\u000a");};_dbaec :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_afddef );_daecg .writeString (_dbaec );_daecg .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _daecg ._gcdgc ==nil {_daecg ._gcdgc =_daecg ._cegff .Flush ();};return _daecg ._gcdgc ;};

// ToPdfObject implements interface PdfModel.
func (_fbe *PdfActionJavaScript )ToPdfObject ()_aa .PdfObject {_fbe .PdfAction .ToPdfObject ();_cgd :=_fbe ._bg ;_fdac :=_cgd .PdfObject .(*_aa .PdfObjectDictionary );_fdac .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeJavaScript )));_fdac .SetIfNotNil ("\u004a\u0053",_fbe .JS );return _cgd ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
type PageCallback func (_cgfae int ,_aedac *PdfPage );

// GetNumComponents returns the number of color components (1 for Indexed).
func (_cagd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ab .Time ){_beea .Lock ();defer _beea .Unlock ();_affbfb =modifiedDate ;};type modelManager struct{_ebcfa map[PdfModel ]_aa .PdfObject ;_faed map[_aa .PdfObject ]PdfModel ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bfaff *PdfPage )AddContentStreamByString (contentStr string )error {_bbdda ,_agcdf :=_aa .MakeStream ([]byte (contentStr ),_aa .NewFlateEncoder ());if _agcdf !=nil {return _agcdf ;};if _bfaff .Contents ==nil {_bfaff .Contents =_bbdda ;}else {_bdfe :=_aa .TraceToDirectObject (_bfaff .Contents );_bcfc ,_aefcc :=_bdfe .(*_aa .PdfObjectArray );if !_aefcc {_bcfc =_aa .MakeArray (_bdfe );};_bcfc .Append (_bbdda );_bfaff .Contents =_bcfc ;};return nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _aa .PdfObject ;Dest _aa .PdfObject ;H _aa .PdfObject ;PA _aa .PdfObject ;QuadPoints _aa .PdfObject ;BS _aa .PdfObject ;_ggb *PdfAction ;_dgb *PdfReader ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_caeff interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_fbaa :=&PdfOutline {_aagc :_aa .MakeIndirectObject (_aa .MakeDict ())};_fbaa ._caeff =_fbaa ;return _fbaa ;};

// ToPdfObject implements interface PdfModel.
func (_cad *PdfAnnotationStamp )ToPdfObject ()_aa .PdfObject {_cad .PdfAnnotation .ToPdfObject ();_acb :=_cad ._dde ;_degc :=_acb .PdfObject .(*_aa .PdfObjectDictionary );_cad .PdfAnnotationMarkup .appendToPdfDictionary (_degc );_degc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0053\u0074\u0061m\u0070"));_degc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cad .Name );return _acb ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cbddg *LTV )EnableAll (extraCerts []*_ca .Certificate )error {_eagac :=_cbddg ._ddfaa ._edc .AcroForm ;for _ ,_bbced :=range _eagac .AllFields (){_aebg ,_ :=_bbced .GetContext ().(*PdfFieldSignature );if _aebg ==nil {continue ;};_ffadc :=_aebg .V ;if _fffd :=_cbddg .validateSig (_ffadc );_fffd !=nil {_ba .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fffd );};if _eegc :=_cbddg .Enable (_ffadc ,extraCerts );_eegc !=nil {return _eegc ;};};return nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_cddga *PdfReader )CheckAccessRights (password []byte )(bool ,_bc .Permissions ,error ){return _cddga ._gbacd .CheckAccessRights (password );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_deec *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_dbgbf *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _dbgbf ._gbacd .GetCrypter ()!=nil &&!_dbgbf ._gbacd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_efeae :=_dbgbf ._fbdcg ;_dggad :=_efeae .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dggad ==nil {return nil ,nil ;};_ba .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_eebdb :=_aa .ResolveReference (_dggad );_ba .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_eebdb );if _cbbbc :=_aa .IsNullObject (_eebdb );_cbbbc {_ba .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_adafge ,_cfgga :=_eebdb .(*_aa .PdfIndirectObject );if !_cfgga {if _ ,_ffcef :=_aa .GetDict (_eebdb );!_ffcef {_ba .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_ba .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_adafge =_aa .MakeIndirectObject (_eebdb );};_eccb ,_cfgga :=_adafge .PdfObject .(*_aa .PdfObjectDictionary );if !_cfgga {return nil ,_fda .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_ba .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_eccb );_feccg ,_ ,_ccacdc :=_dbgbf .buildOutlineTree (_adafge ,nil ,nil ,nil );if _ccacdc !=nil {return nil ,_ccacdc ;};_ba .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_feccg );return _feccg ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _aa .PdfObjectName ;};

// AllFields returns a flattened list of all fields in the form.
func (_cbecg *PdfAcroForm )AllFields ()[]*PdfField {if _cbecg ==nil {return nil ;};var _ecba []*PdfField ;if _cbecg .Fields !=nil {for _ ,_bfdga :=range *_cbecg .Fields {_ecba =append (_ecba ,_bfgaa (_bfdga )...);};};return _ecba ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_eddbb *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// IsCID returns true if the underlying font is CID.
func (_agdb *PdfFont )IsCID ()bool {return _agdb .baseFields ().isCIDFont ()};func _caegfd (_ccccg _aa .PdfObject ,_defed bool )(*PdfFont ,error ){_acdff ,_gbbgf ,_fgbf :=_cgbdcb (_ccccg );if _fgbf !=nil {if _fgbf ==ErrType3FontNotSupported ||_fgbf ==ErrType1CFontNotSupported {_efbc ,_accfgg :=_bfab (_acdff ,_gbbgf ,nil );if _accfgg !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gbbgf ,_accfgg );return nil ,_fgbf ;};return &PdfFont {_acdfa :_efbc },_fgbf ;};return nil ,_fgbf ;};_dacb :=&PdfFont {};switch _gbbgf ._cbae {case "\u0054\u0079\u0070e\u0030":if !_defed {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gbbgf );return nil ,_fda .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dfdbg ,_abeab :=_cafba (_acdff ,_gbbgf );if _abeab !=nil {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gbbgf ,_abeab );return nil ,_abeab ;};_dacb ._acdfa =_dfdbg ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ebca *pdfFontSimple ;_aced ,_efac :=_fa .NewStdFontByName (_fa .StdFontName (_gbbgf ._debe ));if _efac {_ebdg :=_facg (_aced );_dacb ._acdfa =&_ebdg ;_becfc :=_aa .TraceToDirectObject (_ebdg .ToPdfObject ());_ccfe ,_cbda ,_bfcagf :=_cgbdcb (_becfc );if _bfcagf !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gbbgf ,_ebdg );return nil ,_bfcagf ;};for _ ,_agef :=range _acdff .Keys (){_ccfe .Set (_agef ,_acdff .Get (_agef ));};_ebca ,_bfcagf =_bfab (_ccfe ,_cbda ,_ebdg ._dcfgf );if _bfcagf !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gbbgf ,_ebdg );return nil ,_bfcagf ;};_ebca ._ccga =_ebdg ._ccga ;_ebca ._dege =_ebdg ._dege ;}else {_ebca ,_fgbf =_bfab (_acdff ,_gbbgf ,nil );if _fgbf !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gbbgf ,_fgbf );return nil ,_fgbf ;};};_fgbf =_ebca .addEncoding ();if _fgbf !=nil {return nil ,_fgbf ;};if _efac {_ebca .updateStandard14Font ();};if _efac &&_ebca ._ddbeg ==nil &&_ebca ._dcfgf ==nil {_ba .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebca );_ba .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_aced );};if len (_ebca ._ccga )==0{_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ebca );};_dacb ._acdfa =_ebca ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fbea ,_dacf :=_fbgb (_acdff ,_gbbgf );if _dacf !=nil {_ba .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dacf );return nil ,_dacf ;};_dacb ._acdfa =_fbea ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_affadg ,_dcgff :=_bgec (_acdff ,_gbbgf );if _dcgff !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gbbgf ,_dcgff );return nil ,_dcgff ;};_dacb ._acdfa =_affadg ;default:_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_gbbgf );return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gbbgf );};return _dacb ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _aa .PdfObject ;B _aa .PdfObject ;};

// SetImage updates XObject Image with new image data.
func (_bddcd *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_bddcd .Filter .UpdateParams (img .GetParamsDict ());_bdag ,_beeac :=_bddcd .Filter .EncodeBytes (img .Data );if _beeac !=nil {return _beeac ;};_bddcd .Stream =_bdag ;_ccfdf :=img .Width ;_bddcd .Width =&_ccfdf ;_aeged :=img .Height ;_bddcd .Height =&_aeged ;_beceg :=img .BitsPerComponent ;_bddcd .BitsPerComponent =&_beceg ;if cs ==nil {if img .ColorComponents ==1{_bddcd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_bddcd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_bddcd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fda .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bddcd .ColorSpace =cs ;};return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gede *PdfColorspaceCalRGB )ToPdfObject ()_aa .PdfObject {_gfdg :=&_aa .PdfObjectArray {};_gfdg .Append (_aa .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fgba :=_aa .MakeDict ();if _gede .WhitePoint !=nil {_affbf :=_aa .MakeArray (_aa .MakeFloat (_gede .WhitePoint [0]),_aa .MakeFloat (_gede .WhitePoint [1]),_aa .MakeFloat (_gede .WhitePoint [2]));_fgba .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_affbf );}else {_ba .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gede .BlackPoint !=nil {_cgcaf :=_aa .MakeArray (_aa .MakeFloat (_gede .BlackPoint [0]),_aa .MakeFloat (_gede .BlackPoint [1]),_aa .MakeFloat (_gede .BlackPoint [2]));_fgba .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cgcaf );};if _gede .Gamma !=nil {_gdgf :=_aa .MakeArray (_aa .MakeFloat (_gede .Gamma [0]),_aa .MakeFloat (_gede .Gamma [1]),_aa .MakeFloat (_gede .Gamma [2]));_fgba .Set ("\u0047\u0061\u006dm\u0061",_gdgf );};if _gede .Matrix !=nil {_dfce :=_aa .MakeArray (_aa .MakeFloat (_gede .Matrix [0]),_aa .MakeFloat (_gede .Matrix [1]),_aa .MakeFloat (_gede .Matrix [2]),_aa .MakeFloat (_gede .Matrix [3]),_aa .MakeFloat (_gede .Matrix [4]),_aa .MakeFloat (_gede .Matrix [5]),_aa .MakeFloat (_gede .Matrix [6]),_aa .MakeFloat (_gede .Matrix [7]),_aa .MakeFloat (_gede .Matrix [8]));_fgba .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfce );};_gfdg .Append (_fgba );if _gede ._bfbdf !=nil {_gede ._bfbdf .PdfObject =_gfdg ;return _gede ._bfbdf ;};return _gfdg ;};func (_ecbbf *PdfWriter )hasObject (_badee _aa .PdfObject )bool {_ ,_dadae :=_ecbbf ._faceg [_badee ];return _dadae ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_deabd *PdfPage )GetPageDict ()*_aa .PdfObjectDictionary {_gefeb :=_deabd ._bebd ;_gefeb .Clear ();_gefeb .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0050\u0061\u0067\u0065"));_gefeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_deabd .Parent );if _deabd .LastModified !=nil {_gefeb .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_deabd .LastModified .ToPdfObject ());};if _deabd .Resources !=nil {_gefeb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_deabd .Resources .ToPdfObject ());};if _deabd .CropBox !=nil {_gefeb .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_deabd .CropBox .ToPdfObject ());};if _deabd .MediaBox !=nil {_gefeb .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_deabd .MediaBox .ToPdfObject ());};if _deabd .BleedBox !=nil {_gefeb .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_deabd .BleedBox .ToPdfObject ());};if _deabd .TrimBox !=nil {_gefeb .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_deabd .TrimBox .ToPdfObject ());};if _deabd .ArtBox !=nil {_gefeb .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_deabd .ArtBox .ToPdfObject ());};_gefeb .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_deabd .BoxColorInfo );_gefeb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_deabd .Contents );if _deabd .Rotate !=nil {_gefeb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_aa .MakeInteger (*_deabd .Rotate ));};_gefeb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_deabd .Group );_gefeb .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_deabd .Thumb );_gefeb .SetIfNotNil ("\u0042",_deabd .B );_gefeb .SetIfNotNil ("\u0044\u0075\u0072",_deabd .Dur );_gefeb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_deabd .Trans );_gefeb .SetIfNotNil ("\u0041\u0041",_deabd .AA );_gefeb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_deabd .Metadata );_gefeb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_deabd .PieceInfo );_gefeb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_deabd .StructParents );_gefeb .SetIfNotNil ("\u0049\u0044",_deabd .ID );_gefeb .SetIfNotNil ("\u0050\u005a",_deabd .PZ );_gefeb .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_deabd .SeparationInfo );_gefeb .SetIfNotNil ("\u0054\u0061\u0062\u0073",_deabd .Tabs );_gefeb .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_deabd .TemplateInstantiated );_gefeb .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_deabd .PresSteps );_gefeb .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_deabd .UserUnit );_gefeb .SetIfNotNil ("\u0056\u0050",_deabd .VP );if _deabd ._ecgde !=nil {_efde :=_aa .MakeArray ();for _ ,_afccd :=range _deabd ._ecgde {if _bffag :=_afccd .GetContext ();_bffag !=nil {_efde .Append (_bffag .ToPdfObject ());}else {_efde .Append (_afccd .ToPdfObject ());};};if _efde .Len ()> 0{_gefeb .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_efde );};}else if _deabd .Annots !=nil {_gefeb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_deabd .Annots );};return _gefeb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ggdgg *PdfShadingType5 )ToPdfObject ()_aa .PdfObject {_ggdgg .PdfShading .ToPdfObject ();_gaace ,_bceeb :=_ggdgg .getShadingDict ();if _bceeb !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ggdgg .BitsPerCoordinate !=nil {_gaace .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ggdgg .BitsPerCoordinate );};if _ggdgg .BitsPerComponent !=nil {_gaace .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ggdgg .BitsPerComponent );};if _ggdgg .VerticesPerRow !=nil {_gaace .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_ggdgg .VerticesPerRow );};if _ggdgg .Decode !=nil {_gaace .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ggdgg .Decode );};if _ggdgg .Function !=nil {if len (_ggdgg .Function )==1{_gaace .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggdgg .Function [0].ToPdfObject ());}else {_adeca :=_aa .MakeArray ();for _ ,_bbacc :=range _ggdgg .Function {_adeca .Append (_bbacc .ToPdfObject ());};_gaace .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adeca );};};return _ggdgg ._fbdfa ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_adgcb *PdfPageResources )HasFontByName (keyName _aa .PdfObjectName )bool {_ ,_cdcff :=_adgcb .GetFontByName (keyName );return _cdcff ;};

// ToPdfObject implements interface PdfModel.
func (_fgf *PdfActionSound )ToPdfObject ()_aa .PdfObject {_fgf .PdfAction .ToPdfObject ();_eaf :=_fgf ._bg ;_affc :=_eaf .PdfObject .(*_aa .PdfObjectDictionary );_affc .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeSound )));_affc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fgf .Sound );_affc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fgf .Volume );_affc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fgf .Synchronous );_affc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fgf .Repeat );_affc .SetIfNotNil ("\u004d\u0069\u0078",_fgf .Mix );return _eaf ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_faf :=NewPdfAction ();_dgf :=&PdfActionThread {};_dgf .PdfAction =_faf ;_faf .SetContext (_dgf );return _dgf ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_aa .PdfObjectBool ;SigFlags *_aa .PdfObjectInteger ;CO *_aa .PdfObjectArray ;DR *PdfPageResources ;DA *_aa .PdfObjectString ;Q *_aa .PdfObjectInteger ;XFA _aa .PdfObject ;_acba *_aa .PdfIndirectObject ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_ddgfb *PdfShading )GetContainingPdfObject ()_aa .PdfObject {return _ddgfb ._fbdfa };

// GetTrailer returns the PDF's trailer dictionary.
func (_efbec *PdfReader )GetTrailer ()(*_aa .PdfObjectDictionary ,error ){_bcdef :=_efbec ._gbacd .GetTrailer ();if _bcdef ==nil {return nil ,_fda .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bcdef ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _aa .PdfObject ;};

// B returns the value of the B component of the color.
func (_aged *PdfColorCalRGB )B ()float64 {return _aged [1]};

// String returns a string that describes `base`.
func (_dffe fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dffe .coreString ());};func (_ffb *PdfReader )newPdfActionFromIndirectObject (_ffg *_aa .PdfIndirectObject )(*PdfAction ,error ){_dae ,_dgfe :=_ffg .PdfObject .(*_aa .PdfObjectDictionary );if !_dgfe {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_ffb ._cgaeff .GetModelFromPrimitive (_dae );model !=nil {_fcbe ,_cec :=model .(*PdfAction );if !_cec {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _fcbe ,nil ;};_gaa :=&PdfAction {};_gaa ._bg =_ffg ;_ffb ._cgaeff .Register (_dae ,_gaa );if _fea :=_dae .Get ("\u0054\u0079\u0070\u0065");_fea !=nil {_fbb ,_egg :=_fea .(*_aa .PdfObjectName );if !_egg {_ba .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fea );}else {if *_fbb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ba .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_fbb );};_gaa .Type =_fbb ;};};if _dgfa :=_dae .Get ("\u004e\u0065\u0078\u0074");_dgfa !=nil {_gaa .Next =_dgfa ;};if _gcfd :=_dae .Get ("\u0053");_gcfd !=nil {_gaa .S =_gcfd ;};_bad ,_eae :=_gaa .S .(*_aa .PdfObjectName );if !_eae {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gaa .S );return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gaa .S );};_gbb :=PdfActionType (_bad .String ());switch _gbb {case ActionTypeGoTo :_bbb ,_caf :=_ffb .newPdfActionGotoFromDict (_dae );if _caf !=nil {return nil ,_caf ;};_bbb .PdfAction =_gaa ;_gaa ._ac =_bbb ;return _gaa ,nil ;case ActionTypeGoToR :_fcg ,_cdd :=_ffb .newPdfActionGotoRFromDict (_dae );if _cdd !=nil {return nil ,_cdd ;};_fcg .PdfAction =_gaa ;_gaa ._ac =_fcg ;return _gaa ,nil ;case ActionTypeGoToE :_gfc ,_abg :=_ffb .newPdfActionGotoEFromDict (_dae );if _abg !=nil {return nil ,_abg ;};_gfc .PdfAction =_gaa ;_gaa ._ac =_gfc ;return _gaa ,nil ;case ActionTypeLaunch :_fdgb ,_agcf :=_ffb .newPdfActionLaunchFromDict (_dae );if _agcf !=nil {return nil ,_agcf ;};_fdgb .PdfAction =_gaa ;_gaa ._ac =_fdgb ;return _gaa ,nil ;case ActionTypeThread :_eda ,_ede :=_ffb .newPdfActionThreadFromDict (_dae );if _ede !=nil {return nil ,_ede ;};_eda .PdfAction =_gaa ;_gaa ._ac =_eda ;return _gaa ,nil ;case ActionTypeURI :_bda ,_aag :=_ffb .newPdfActionURIFromDict (_dae );if _aag !=nil {return nil ,_aag ;};_bda .PdfAction =_gaa ;_gaa ._ac =_bda ;return _gaa ,nil ;case ActionTypeSound :_faa ,_ffd :=_ffb .newPdfActionSoundFromDict (_dae );if _ffd !=nil {return nil ,_ffd ;};_faa .PdfAction =_gaa ;_gaa ._ac =_faa ;return _gaa ,nil ;case ActionTypeMovie :_gdb ,_ggd :=_ffb .newPdfActionMovieFromDict (_dae );if _ggd !=nil {return nil ,_ggd ;};_gdb .PdfAction =_gaa ;_gaa ._ac =_gdb ;return _gaa ,nil ;case ActionTypeHide :_ffgb ,_cab :=_ffb .newPdfActionHideFromDict (_dae );if _cab !=nil {return nil ,_cab ;};_ffgb .PdfAction =_gaa ;_gaa ._ac =_ffgb ;return _gaa ,nil ;case ActionTypeNamed :_bgb ,_bfbd :=_ffb .newPdfActionNamedFromDict (_dae );if _bfbd !=nil {return nil ,_bfbd ;};_bgb .PdfAction =_gaa ;_gaa ._ac =_bgb ;return _gaa ,nil ;case ActionTypeSubmitForm :_ceac ,_eee :=_ffb .newPdfActionSubmitFormFromDict (_dae );if _eee !=nil {return nil ,_eee ;};_ceac .PdfAction =_gaa ;_gaa ._ac =_ceac ;return _gaa ,nil ;case ActionTypeResetForm :_eeeg ,_gaf :=_ffb .newPdfActionResetFormFromDict (_dae );if _gaf !=nil {return nil ,_gaf ;};_eeeg .PdfAction =_gaa ;_gaa ._ac =_eeeg ;return _gaa ,nil ;case ActionTypeImportData :_bga ,_cfc :=_ffb .newPdfActionImportDataFromDict (_dae );if _cfc !=nil {return nil ,_cfc ;};_bga .PdfAction =_gaa ;_gaa ._ac =_bga ;return _gaa ,nil ;case ActionTypeSetOCGState :_fga ,_cfb :=_ffb .newPdfActionSetOCGStateFromDict (_dae );if _cfb !=nil {return nil ,_cfb ;};_fga .PdfAction =_gaa ;_gaa ._ac =_fga ;return _gaa ,nil ;case ActionTypeRendition :_bfe ,_gae :=_ffb .newPdfActionRenditionFromDict (_dae );if _gae !=nil {return nil ,_gae ;};_bfe .PdfAction =_gaa ;_gaa ._ac =_bfe ;return _gaa ,nil ;case ActionTypeTrans :_bfec ,_cae :=_ffb .newPdfActionTransFromDict (_dae );if _cae !=nil {return nil ,_cae ;};_bfec .PdfAction =_gaa ;_gaa ._ac =_bfec ;return _gaa ,nil ;case ActionTypeGoTo3DView :_gbba ,_dee :=_ffb .newPdfActionGoTo3DViewFromDict (_dae );if _dee !=nil {return nil ,_dee ;};_gbba .PdfAction =_gaa ;_gaa ._ac =_gbba ;return _gaa ,nil ;case ActionTypeJavaScript :_ggc ,_gbe :=_ffb .newPdfActionJavaScriptFromDict (_dae );if _gbe !=nil {return nil ,_gbe ;};_ggc .PdfAction =_gaa ;_gaa ._ac =_ggc ;return _gaa ,nil ;};_ba .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gbb );return nil ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ceg :=&PdfAction {};_ceg ._bg =_aa .MakeIndirectObject (_aa .MakeDict ());return _ceg ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func (_fcdb *LTV )validateSig (_fggdc *PdfSignature )error {if _fggdc ==nil ||_fggdc .Contents ==nil ||len (_fggdc .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fggdc );};return nil ;};func (_ccdf *PdfReader )newPdfAnnotationScreenFromDict (_ecef *_aa .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_daag :=PdfAnnotationScreen {};_daag .T =_ecef .Get ("\u0054");_daag .MK =_ecef .Get ("\u004d\u004b");_daag .A =_ecef .Get ("\u0041");_daag .AA =_ecef .Get ("\u0041\u0041");return &_daag ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gbg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if _gbg .Alternate ==nil {if _gbg .N ==1{_gefe :=NewPdfColorspaceDeviceGray ();return _gefe .ColorFromPdfObjects (objects );}else if _gbg .N ==3{_dgdda :=NewPdfColorspaceDeviceRGB ();return _dgdda .ColorFromPdfObjects (objects );}else if _gbg .N ==4{_dbeb :=NewPdfColorspaceDeviceCMYK ();return _dbeb .ColorFromPdfObjects (objects );}else {return nil ,_fda .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gbg .Alternate .ColorFromPdfObjects (objects );};func _gdece (_befa _aa .PdfObject )(*PdfPageResourcesColorspaces ,error ){_ddaad :=&PdfPageResourcesColorspaces {};if _geeda ,_caddg :=_befa .(*_aa .PdfIndirectObject );_caddg {_ddaad ._ebdd =_geeda ;_befa =_geeda .PdfObject ;};_bdaage ,_dfeca :=_aa .GetDict (_befa );if !_dfeca {return nil ,_fda .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ddaad .Names =[]string {};_ddaad .Colorspaces =map[string ]PdfColorspace {};for _ ,_gcfc :=range _bdaage .Keys (){_cece :=_bdaage .Get (_gcfc );_ddaad .Names =append (_ddaad .Names ,string (_gcfc ));_aaeca ,_edcd :=NewPdfColorspaceFromPdfObject (_cece );if _edcd !=nil {return nil ,_edcd ;};_ddaad .Colorspaces [string (_gcfc )]=_aaeca ;};return _ddaad ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_aefg *PdfFont )ToPdfObject ()_aa .PdfObject {if _aefg ._acdfa ==nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _aa .MakeNull ();};return _aefg ._acdfa .ToPdfObject ();};func (_eeda *PdfReader )newPdfActionNamedFromDict (_eceg *_aa .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_eceg .Get ("\u004e")},nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aa .PdfObject ;IC _aa .PdfObject ;BE _aa .PdfObject ;RD _aa .PdfObject ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_gfga :=NewPdfAnnotation ();_bgab :=&PdfAnnotationSound {};_bgab .PdfAnnotation =_gfga ;_bgab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfga .SetContext (_bgab );return _bgab ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ecdbb *PdfPage )GetContainingPdfObject ()_aa .PdfObject {return _ecdbb ._gacge };

// GetAction returns the PDF action for the annotation link.
func (_dba *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _dba ._ggb !=nil {return _dba ._ggb ,nil ;};if _dba .A ==nil {return nil ,nil ;};if _dba ._dgb ==nil {return nil ,nil ;};_cdb ,_dcb :=_dba ._dgb .loadAction (_dba .A );if _dcb !=nil {return nil ,_dcb ;};_dba ._ggb =_cdb ;return _dba ._ggb ,nil ;};func _bdced (_bdfd *_aa .PdfObjectDictionary )(*PdfFieldText ,error ){_eaafda :=&PdfFieldText {};_eaafda .DA ,_ =_aa .GetString (_bdfd .Get ("\u0044\u0041"));_eaafda .Q ,_ =_aa .GetInt (_bdfd .Get ("\u0051"));_eaafda .DS ,_ =_aa .GetString (_bdfd .Get ("\u0044\u0053"));_eaafda .RV =_bdfd .Get ("\u0052\u0056");_eaafda .MaxLen ,_ =_aa .GetInt (_bdfd .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _eaafda ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efe *PdfAnnotationSquiggly )ToPdfObject ()_aa .PdfObject {_efe .PdfAnnotation .ToPdfObject ();_gaba :=_efe ._dde ;_ccfd :=_gaba .PdfObject .(*_aa .PdfObjectDictionary );_efe .PdfAnnotationMarkup .appendToPdfDictionary (_ccfd );_ccfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_ccfd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_efe .QuadPoints );return _gaba ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bffee DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func _bbgdb ()string {_beea .Lock ();defer _beea .Unlock ();return _bdegd };

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _aa .PdfObject ;Movie _aa .PdfObject ;A _aa .PdfObject ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_ededc DefaultImageHandler )NewImageFromGoImage (goimg _fe .Image )(*Image ,error ){_bebg ,_bafg :=_ff .FromGoImage (goimg );if _bafg !=nil {return nil ,_bafg ;};_dgbgbe :=_bdaag (_bebg .Base ());return &_dgbgbe ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_fgaf *PdfFieldChoice )ToPdfObject ()_aa .PdfObject {_fgaf .PdfField .ToPdfObject ();_accb :=_fgaf ._ebabe ;_cecfc :=_accb .PdfObject .(*_aa .PdfObjectDictionary );_cecfc .Set ("\u0046\u0054",_aa .MakeName ("\u0043\u0068"));if _fgaf .Opt !=nil {_cecfc .Set ("\u004f\u0070\u0074",_fgaf .Opt );};if _fgaf .TI !=nil {_cecfc .Set ("\u0054\u0049",_fgaf .TI );};if _fgaf .I !=nil {_cecfc .Set ("\u0049",_fgaf .I );};return _accb ;};func (_ceee *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ceee ._edga };

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aa .PdfObject ;LE _aa .PdfObject ;BS _aa .PdfObject ;IC _aa .PdfObject ;BE _aa .PdfObject ;IT _aa .PdfObject ;Measure _aa .PdfObject ;};func (_dbdfg *PdfReader )newPdfSignatureFromIndirect (_bgcagf *_aa .PdfIndirectObject )(*PdfSignature ,error ){_bfff ,_cfada :=_bgcagf .PdfObject .(*_aa .PdfObjectDictionary );if !_cfada {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _ebcd ,_afadca :=_dbdfg ._cgaeff .GetModelFromPrimitive (_bgcagf ).(*PdfSignature );_afadca {return _ebcd ,nil ;};_fdbfd :=&PdfSignature {};_fdbfd ._bfbeb =_bgcagf ;_fdbfd .Type ,_ =_aa .GetName (_bfff .Get ("\u0054\u0079\u0070\u0065"));_fdbfd .Filter ,_cfada =_aa .GetName (_bfff .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cfada {_ba .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_fdbfd .SubFilter ,_ =_aa .GetName (_bfff .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_fdbfd .Contents ,_cfada =_aa .GetString (_bfff .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cfada {_ba .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_fdbfd .Cert =_bfff .Get ("\u0043\u0065\u0072\u0074");_fdbfd .ByteRange ,_ =_aa .GetArray (_bfff .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_fdbfd .Reference ,_ =_aa .GetArray (_bfff .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_fdbfd .Changes ,_ =_aa .GetArray (_bfff .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_fdbfd .Name ,_ =_aa .GetString (_bfff .Get ("\u004e\u0061\u006d\u0065"));_fdbfd .M ,_ =_aa .GetString (_bfff .Get ("\u004d"));_fdbfd .Location ,_ =_aa .GetString (_bfff .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_fdbfd .Reason ,_ =_aa .GetString (_bfff .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_fdbfd .ContactInfo ,_ =_aa .GetString (_bfff .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_fdbfd .R ,_ =_aa .GetInt (_bfff .Get ("\u0052"));_fdbfd .V ,_ =_aa .GetInt (_bfff .Get ("\u0056"));_fdbfd .PropBuild ,_ =_aa .GetDict (_bfff .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_fdbfd .PropAuthTime ,_ =_aa .GetInt (_bfff .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_fdbfd .PropAuthType ,_ =_aa .GetName (_bfff .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _fdbfd ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cdbcbf *PdfPattern )SetContext (ctx PdfModel ){_cdbcbf ._adfea =ctx };var _ pdfFont =(*pdfCIDFontType0 )(nil );func (_bgbg *pdfFontType0 )subsetRegistered ()error {_aegcc ,_efec :=_bgbg .DescendantFont ._acdfa .(*pdfCIDFontType2 );if !_efec {_ba .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bgbg .DescendantFont );return nil ;};if _aegcc ==nil {return nil ;};if _aegcc ._edga ==nil {_ba .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bgbg ._adgba ==nil {_ba .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_ecgdg ,_efec :=_aa .GetStream (_aegcc ._edga .FontFile2 );if !_efec {_ba .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _fda .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_adbc ,_abaad :=_aa .DecodeStream (_ecgdg );if _abaad !=nil {_ba .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_abaad );return _abaad ;};_agbc ,_abaad :=_bd .Parse (_dc .NewReader (_adbc ));if _abaad !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_ecgdg .Stream ));return _abaad ;};var _dcgc []rune ;var _dcedf *_bd .Font ;switch _aecg :=_bgbg ._adgba .(type ){case *_af .TrueTypeFontEncoder :_dcgc =_aecg .RegisteredRunes ();_dcedf ,_abaad =_agbc .SubsetKeepRunes (_dcgc );if _abaad !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abaad );return _abaad ;};_aecg .SubsetRegistered ();case *_af .IdentityEncoder :_dcgc =_aecg .RegisteredRunes ();_ebcc :=make ([]_bd .GlyphIndex ,len (_dcgc ));for _adbd ,_bgbgg :=range _dcgc {_ebcc [_adbd ]=_bd .GlyphIndex (_bgbgg );};_dcedf ,_abaad =_agbc .SubsetKeepIndices (_ebcc );if _abaad !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abaad );return _abaad ;};case _af .SimpleEncoder :_dfcg :=_aecg .Charcodes ();for _ ,_eebeb :=range _dfcg {_agde ,_cfea :=_aecg .CharcodeToRune (_eebeb );if !_cfea {_ba .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_eebeb );continue ;};_dcgc =append (_dcgc ,_agde );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bgbg ._adgba );};var _fgbcd _dc .Buffer ;_abaad =_dcedf .Write (&_fgbcd );if _abaad !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abaad );return _abaad ;};if _bgbg ._dbacb !=nil {_fdda :=make (map[_dgg .CharCode ]rune ,len (_dcgc ));for _ ,_abcgf :=range _dcgc {_fedc ,_bcgfd :=_bgbg ._adgba .RuneToCharcode (_abcgf );if !_bcgfd {continue ;};_fdda [_dgg .CharCode (_fedc )]=_abcgf ;};_bgbg ._dbacb =_dgg .NewToUnicodeCMap (_fdda );};_ecgdg ,_abaad =_aa .MakeStream (_fgbcd .Bytes (),_aa .NewFlateEncoder ());if _abaad !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abaad );return _abaad ;};_ecgdg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aa .MakeInteger (int64 (_fgbcd .Len ())));if _cggcg ,_daebe :=_aa .GetStream (_aegcc ._edga .FontFile2 );_daebe {*_cggcg =*_ecgdg ;}else {_aegcc ._edga .FontFile2 =_ecgdg ;};_gebcb :=_gecgf ();if len (_bgbg ._debe )> 0{_bgbg ._debe =_ccdfa (_bgbg ._debe ,_gebcb );};if len (_aegcc ._debe )> 0{_aegcc ._debe =_ccdfa (_aegcc ._debe ,_gebcb );};if len (_bgbg ._caaca )> 0{_bgbg ._caaca =_ccdfa (_bgbg ._caaca ,_gebcb );};if _aegcc ._edga !=nil {_ebbd ,_ddae :=_aa .GetName (_aegcc ._edga .FontName );if _ddae &&len (_ebbd .String ())> 0{_gfdffa :=_ccdfa (_ebbd .String (),_gebcb );_aegcc ._edga .FontName =_aa .MakeName (_gfdffa );};};return nil ;};func _afade (_aabca _aa .PdfObject )(*PdfFunctionType3 ,error ){_ffcf :=&PdfFunctionType3 {};var _aggg *_aa .PdfObjectDictionary ;if _eecea ,_ggdfc :=_aabca .(*_aa .PdfIndirectObject );_ggdfc {_bgdgc ,_dbeaa :=_eecea .PdfObject .(*_aa .PdfObjectDictionary );if !_dbeaa {return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffcf ._gdad =_eecea ;_aggg =_bgdgc ;}else if _deafb ,_cbbde :=_aabca .(*_aa .PdfObjectDictionary );_cbbde {_aggg =_deafb ;}else {return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfagc ,_dcgdf :=_aa .TraceToDirectObject (_aggg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aa .PdfObjectArray );if !_dcgdf {_ba .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dfagc .Len ()!=2{_ba .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fda .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fgcdc ,_cead :=_dfagc .ToFloat64Array ();if _cead !=nil {return nil ,_cead ;};_ffcf .Domain =_fgcdc ;_dfagc ,_dcgdf =_aa .TraceToDirectObject (_aggg .Get ("\u0052\u0061\u006eg\u0065")).(*_aa .PdfObjectArray );if _dcgdf {if _dfagc .Len ()< 0||_dfagc .Len ()%2!=0{return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fbabc ,_bffb :=_dfagc .ToFloat64Array ();if _bffb !=nil {return nil ,_bffb ;};_ffcf .Range =_fbabc ;};_dfagc ,_dcgdf =_aa .TraceToDirectObject (_aggg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_aa .PdfObjectArray );if !_dcgdf {_ba .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ffcf .Functions =[]PdfFunction {};for _ ,_cfgg :=range _dfagc .Elements (){_fabdc ,_decff :=_dccg (_cfgg );if _decff !=nil {return nil ,_decff ;};_ffcf .Functions =append (_ffcf .Functions ,_fabdc );};_dfagc ,_dcgdf =_aa .TraceToDirectObject (_aggg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_aa .PdfObjectArray );if !_dcgdf {_ba .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gfgf ,_cead :=_dfagc .ToFloat64Array ();if _cead !=nil {return nil ,_cead ;};_ffcf .Bounds =_gfgf ;if len (_ffcf .Bounds )!=len (_ffcf .Functions )-1{_ba .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ffcf .Bounds ),len (_ffcf .Functions ));return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfagc ,_dcgdf =_aa .TraceToDirectObject (_aggg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aa .PdfObjectArray );if !_dcgdf {_ba .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cdbcb ,_cead :=_dfagc .ToFloat64Array ();if _cead !=nil {return nil ,_cead ;};_ffcf .Encode =_cdbcb ;if len (_ffcf .Encode )!=2*len (_ffcf .Functions ){_ba .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ffcf .Encode ),len (_ffcf .Functions ));return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ffcf ,nil ;};

// C returns the value of the C component of the color.
func (_bfea *PdfColorCalRGB )C ()float64 {return _bfea [2]};func _cafba (_dcbe *_aa .PdfObjectDictionary ,_bebf *fontCommon )(*pdfFontType0 ,error ){_agccc ,_ddaf :=_aa .GetArray (_dcbe .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_ddaf {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_bebf );return nil ,_aa .ErrRangeError ;};if _agccc .Len ()!=1{_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_agccc .Len ());return nil ,_aa .ErrRangeError ;};_aeda ,_cdf :=_caegfd (_agccc .Get (0),false );if _cdf !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cdf ,_bebf );return nil ,_cdf ;};_ggca :=_bdcgbf (_bebf );_ggca .DescendantFont =_aeda ;_degf ,_ddaf :=_aa .GetNameVal (_dcbe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ddaf {if _degf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_degf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_ggca ._adgba =_af .NewIdentityTextEncoder (_degf );}else if _dgg .IsPredefinedCMap (_degf ){_ggca ._cdbc ,_cdf =_dgg .LoadPredefinedCMap (_degf );if _cdf !=nil {_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_degf ,_cdf );};}else {_ba .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_degf );};};if _bafcd :=_aeda .baseFields ()._dbacb ;_bafcd !=nil {if _dcgdg :=_bafcd .Name ();_dcgdg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dcgdg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dcgdg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dcgdg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_ggca ._adgba =_af .NewCMapEncoder (_degf ,_ggca ._cdbc ,_bafcd );};};return _ggca ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fagf *PdfShadingType7 )ToPdfObject ()_aa .PdfObject {_fagf .PdfShading .ToPdfObject ();_fefge ,_bfgcb :=_fagf .getShadingDict ();if _bfgcb !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fagf .BitsPerCoordinate !=nil {_fefge .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fagf .BitsPerCoordinate );};if _fagf .BitsPerComponent !=nil {_fefge .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fagf .BitsPerComponent );};if _fagf .BitsPerFlag !=nil {_fefge .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fagf .BitsPerFlag );};if _fagf .Decode !=nil {_fefge .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fagf .Decode );};if _fagf .Function !=nil {if len (_fagf .Function )==1{_fefge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fagf .Function [0].ToPdfObject ());}else {_fedba :=_aa .MakeArray ();for _ ,_bbbc :=range _fagf .Function {_fedba .Append (_bbbc .ToPdfObject ());};_fefge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fedba );};};return _fagf ._fbdfa ;};type pdfCIDFontType2 struct{fontCommon ;_fbgc *_aa .PdfIndirectObject ;_baegd _af .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_aa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aa .PdfObject ;W _aa .PdfObject ;DW2 _aa .PdfObject ;W2 _aa .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _aa .PdfObject ;_dbaee map[_af .CharCode ]float64 ;_ddeec float64 ;_cddaf map[rune ]int ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_agfb pdfFontSimple )GetRuneMetrics (r rune )(_fa .CharMetrics ,bool ){if _agfb ._dege !=nil {_cafg ,_dffac :=_agfb ._dege [r ];if _dffac {return _cafg ,true ;};};_bgede :=_agfb .Encoder ();if _bgede ==nil {_ba .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_agfb );return _fa .CharMetrics {},false ;};_bgce ,_eaabc :=_bgede .RuneToCharcode (r );if !_eaabc {if r !=' '{_ba .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_agfb );};return _fa .CharMetrics {},false ;};_bdgc ,_abeef :=_agfb .GetCharMetrics (_bgce );return _bdgc ,_abeef ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};var _gfbe =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// SetName sets the `Name` field of the signature.
func (_gdfd *PdfSignature )SetName (name string ){_gdfd .Name =_aa .MakeString (name )};func (_efdb *PdfReader )newPdfAnnotationHighlightFromDict (_ddea *_aa .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_dgdd :=PdfAnnotationHighlight {};_ebgf ,_edd :=_efdb .newPdfAnnotationMarkupFromDict (_ddea );if _edd !=nil {return nil ,_edd ;};_dgdd .PdfAnnotationMarkup =_ebgf ;_dgdd .QuadPoints =_ddea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dgdd ,nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func _cbaa (_baece *XObjectImage )error {if _baece .SMask ==nil {return nil ;};_gcaff ,_bccd :=_baece .SMask .(*_aa .PdfObjectStream );if !_bccd {_ba .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _aa .ErrTypeError ;};_bcdgbe :=_gcaff .PdfObjectDictionary ;_cbdaf :=_bcdgbe .Get ("\u004d\u0061\u0074t\u0065");if _cbdaf ==nil {return nil ;};_feefc ,_abgbeb :=_aedf (_cbdaf .(*_aa .PdfObjectArray ));if _abgbeb !=nil {return _abgbeb ;};_gcfb :=_aa .MakeArrayFromFloats ([]float64 {_feefc });_bcdgbe .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gcfb );return nil ;};func (_dbgg PdfFont )actualFont ()pdfFont {if _dbgg ._acdfa ==nil {_ba .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbgg );};return _dbgg ._acdfa ;};func _fffa (_caaa *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_caaa }};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_abbe :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_abbe ;};

// Width returns the width of `rect`.
func (_eaeg *PdfRectangle )Width ()float64 {return _ag .Abs (_eaeg .Urx -_eaeg .Llx )};func (_ecbb *PdfReader )newPdfAnnotationProjectionFromDict (_fegd *_aa .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_ggbg :=&PdfAnnotationProjection {};_gdfb ,_ccacf :=_ecbb .newPdfAnnotationMarkupFromDict (_fegd );if _ccacf !=nil {return nil ,_ccacf ;};_ggbg .PdfAnnotationMarkup =_gdfb ;return _ggbg ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_eaea :=NewPdfAnnotation ();_bae :=&PdfAnnotationRichMedia {};_bae .PdfAnnotation =_eaea ;_eaea .SetContext (_bae );return _bae ;};var _ddaec =false ;

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_fdbfc *PdfFieldButton )IsCheckbox ()bool {return _fdbfc .GetType ()==ButtonTypeCheckbox };

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_af .SimpleEncoder ,error ){_ececfb ,_dgbg :=_ddcc (basefont );if _dgbg !=nil {return nil ,nil ,_dgbg ;};_faae ,_eccf :=_ececfb .Encoder ().(_af .SimpleEncoder );if !_eccf {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ececfb .Encoder ());};_egee :=make (map[rune ]_af .GlyphName );for _fcgd :=range alphabet {if _ ,_ccbae :=_faae .RuneToCharcode (_fcgd );!_ccbae {_ ,_eedce :=_ececfb ._dege [_fcgd ];if !_eedce {_ba .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_fcgd ,_fcgd );continue ;};_efab ,_eedce :=_af .RuneToGlyph (_fcgd );if !_eedce {_ba .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_fcgd ,_fcgd );continue ;};if len (_egee )>=255{return nil ,nil ,_fda .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_egee [_fcgd ]=_efab ;};};var (_aefd []_af .CharCode ;_aaag []_af .CharCode ;);for _aeed :=_af .CharCode (1);_aeed <=0xff;_aeed ++{_deab ,_bafb :=_faae .CharcodeToRune (_aeed );if !_bafb {_aefd =append (_aefd ,_aeed );continue ;};if _ ,_bafb =alphabet [_deab ];!_bafb {_aaag =append (_aaag ,_aeed );};};_bcdg :=append (_aefd ,_aaag ...);if len (_bcdg )< len (_egee ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_egee ),len (_bcdg ));};_dbcbg :=make ([]rune ,0,len (_egee ));for _adcfc :=range _egee {_dbcbg =append (_dbcbg ,_adcfc );};_fg .Slice (_dbcbg ,func (_gecag ,_gcacc int )bool {return _dbcbg [_gecag ]< _dbcbg [_gcacc ]});_gefc :=make (map[_af .CharCode ]_af .GlyphName ,len (_dbcbg ));for _ ,_cgcafb :=range _dbcbg {_cbbe :=_bcdg [0];_bcdg =_bcdg [1:];_gefc [_cbbe ]=_egee [_cgcafb ];};_faae =_af .ApplyDifferences (_faae ,_gefc );_ececfb .SetEncoder (_faae );return &PdfFont {_acdfa :&_ececfb },_faae ,nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_aa .PdfObjectInteger ;BitsPerComponent *_aa .PdfObjectInteger ;VerticesPerRow *_aa .PdfObjectInteger ;Decode *_aa .PdfObjectArray ;Function []PdfFunction ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _aa .PdfObject ;Flags _aa .PdfObject ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// Register registers (caches) a model to primitive object relationship.
func (_bdbb *modelManager )Register (primitive _aa .PdfObject ,model PdfModel ){_bdbb ._ebcfa [model ]=primitive ;_bdbb ._faed [primitive ]=model ;};func (_agbf fontCommon )fontFlags ()int {if _agbf ._edga ==nil {return 0;};return _agbf ._edga ._befeg ;};func _acgb (_beecc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_abga ,_aadbg :=_aa .GetDict (_beecc .AP );if !_aadbg {return nil ,nil ,_fda .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _abga ==nil {return nil ,nil ,nil ;};_cgdda ,_aadbg :=_aa .GetArray (_beecc .Rect );if !_aadbg ||_cgdda .Len ()!=4{return nil ,nil ,_fda .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dbge ,_aadbe :=NewPdfRectangle (*_cgdda );if _aadbe !=nil {return nil ,nil ,_aadbe ;};_ffede :=_aa .TraceToDirectObject (_abga .Get ("\u004e"));switch _eccg :=_ffede .(type ){case *_aa .PdfObjectStream :_becb :=_eccg ;_dcdf ,_edcb :=NewXObjectFormFromStream (_becb );return _dcdf ,_dbge ,_edcb ;case *_aa .PdfObjectDictionary :_eagca :=_eccg ;_afae ,_bbaga :=_aa .GetName (_beecc .AS );if !_bbaga {return nil ,nil ,nil ;};if _eagca .Get (*_afae )==nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_efbee ,_bbaga :=_aa .GetStream (_eagca .Get (*_afae ));if !_bbaga {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_afae );return nil ,nil ,_fda .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fbga ,_bfga :=NewXObjectFormFromStream (_efbee );return _fbga ,_dbge ,_bfga ;};_ba .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ffede );return nil ,nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_eabf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_eabf .ToPdfOutline ().PdfOutlineTreeNode ;};func (_dfd *PdfReader )newPdfActionSoundFromDict (_abb *_aa .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_abb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_abb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_abb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_abb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_abb .Get ("\u004d\u0069\u0078")},nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_age :=NewPdfAction ();_db :=&PdfActionMovie {};_db .PdfAction =_age ;_age .SetContext (_db );return _db ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_bdeb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _fggfd []_af .TextEncoder ;var _bfdfb _af .CMapEncoder ;if _daaa :=_bdeb .baseFields ()._dbacb ;_daaa !=nil {_bfdfb =_af .NewCMapEncoder ("",nil ,_daaa );};_cfcdb :=_bdeb .Encoder ();if _cfcdb !=nil {switch _bagdb :=_cfcdb .(type ){case _af .SimpleEncoder :_cgfd :=_bagdb .BaseName ();if _ ,_caedc :=_bcee [_cgfd ];_caedc {_fggfd =append (_fggfd ,_cfcdb );};};};if len (_fggfd )==0{if _bdeb .baseFields ()._dbacb !=nil {_fggfd =append (_fggfd ,_bfdfb );};if _cfcdb !=nil {_fggfd =append (_fggfd ,_cfcdb );};};var _bdad _dc .Buffer ;var _eaga int ;for _ ,_gafe :=range data {var _feca bool ;for _ ,_cggc :=range _fggfd {if _fbeca :=_cggc .Encode (string (_gafe ));len (_fbeca )> 0{_bdad .Write (_fbeca );_feca =true ;break ;};};if !_feca {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_gafe );_eaga ++;};};if _eaga !=0{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_eaga ,_bdeb ,_fggfd );};return _bdad .Bytes (),_eaga ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_abbfc *_aa .PdfIndirectObject ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject implements interface PdfModel.
func (_ffgc *PdfAnnotationWidget )ToPdfObject ()_aa .PdfObject {_ffgc .PdfAnnotation .ToPdfObject ();_eacf :=_ffgc ._dde ;_adcdg :=_eacf .PdfObject .(*_aa .PdfObjectDictionary );if _ffgc ._abbf {return _eacf ;};_ffgc ._abbf =true ;_adcdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_adcdg .SetIfNotNil ("\u0048",_ffgc .H );_adcdg .SetIfNotNil ("\u004d\u004b",_ffgc .MK );_adcdg .SetIfNotNil ("\u0041",_ffgc .A );_adcdg .SetIfNotNil ("\u0041\u0041",_ffgc .AA );_adcdg .SetIfNotNil ("\u0042\u0053",_ffgc .BS );_cfe :=_ffgc .Parent ;if _ffgc ._eagf !=nil {if _ffgc ._eagf ._ebabe ==_ffgc ._dde {_ffgc ._eagf .ToPdfObject ();};_cfe =_ffgc ._eagf .GetContainingPdfObject ();};if _cfe !=_eacf {_adcdg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cfe );};_ffgc ._abbf =false ;return _eacf ;};func (_fbd *PdfReader )newPdfActionImportDataFromDict (_dbd *_aa .PdfObjectDictionary )(*PdfActionImportData ,error ){_fdb ,_aege :=_caed (_dbd .Get ("\u0046"));if _aege !=nil {return nil ,_aege ;};return &PdfActionImportData {F :_fdb },nil ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_aa .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _aa .PdfObject ;A _aa .PdfObject ;SE _aa .PdfObject ;C _aa .PdfObject ;F _aa .PdfObject ;_bfeac *_aa .PdfIndirectObject ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_gab :=NewPdfAction ();_deg :=&PdfActionGoTo3DView {};_deg .PdfAction =_gab ;_gab .SetContext (_deg );return _deg ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_agfa *PdfFont )BytesToCharcodes (data []byte )[]_af .CharCode {_ba .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _dgda ,_gfgbc :=_agfa ._acdfa .(*pdfFontType0 );_gfgbc &&_dgda ._cdbc !=nil {if _efgd ,_gdbbce :=_dgda .bytesToCharcodes (data );_gdbbce {return _efgd ;};};_abbc :=make ([]_af .CharCode ,0,len (data )+len (data )%2);if _agfa .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _bcfa :=0;_bcfa < len (data );_bcfa +=2{_gecc :=uint16 (data [_bcfa ])<<8|uint16 (data [_bcfa +1]);_abbc =append (_abbc ,_af .CharCode (_gecc ));};}else {for _ ,_cfgc :=range data {_abbc =append (_abbc ,_af .CharCode (_cfgc ));};};return _abbc ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_babb :=&PdfColorspaceLab {};_babb .BlackPoint =[]float64 {0.0,0.0,0.0};_babb .Range =[]float64 {-100,100,-100,100};return _babb ;};

// ToPdfObject implements interface PdfModel.
func (_abaa *PdfAnnotationCaret )ToPdfObject ()_aa .PdfObject {_abaa .PdfAnnotation .ToPdfObject ();_eef :=_abaa ._dde ;_dfab :=_eef .PdfObject .(*_aa .PdfObjectDictionary );_abaa .PdfAnnotationMarkup .appendToPdfDictionary (_dfab );_dfab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0043\u0061\u0072e\u0074"));_dfab .SetIfNotNil ("\u0052\u0044",_abaa .RD );_dfab .SetIfNotNil ("\u0053\u0079",_abaa .Sy );return _eef ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_fegbc *PdfOutline )GetContainingPdfObject ()_aa .PdfObject {return _fegbc ._aagc };func _ebgead (_egdec *_aa .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dfdffg :=PdfShadingType7 {};_bcafc :=_egdec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bcafc ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_bbeab ,_abbce :=_bcafc .(*_aa .PdfObjectInteger );if !_abbce {_ba .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcafc );return nil ,_aa .ErrTypeError ;};_dfdffg .BitsPerCoordinate =_bbeab ;_bcafc =_egdec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bcafc ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_bbeab ,_abbce =_bcafc .(*_aa .PdfObjectInteger );if !_abbce {_ba .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bcafc );return nil ,_aa .ErrTypeError ;};_dfdffg .BitsPerComponent =_bbeab ;_bcafc =_egdec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bcafc ==nil {_ba .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_bbeab ,_abbce =_bcafc .(*_aa .PdfObjectInteger );if !_abbce {_ba .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bcafc );return nil ,_aa .ErrTypeError ;};_dfdffg .BitsPerComponent =_bbeab ;_bcafc =_egdec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bcafc ==nil {_ba .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_eaccf ,_abbce :=_bcafc .(*_aa .PdfObjectArray );if !_abbce {_ba .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcafc );return nil ,_aa .ErrTypeError ;};_dfdffg .Decode =_eaccf ;if _gfdge :=_egdec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gfdge !=nil {_dfdffg .Function =[]PdfFunction {};if _ggecd ,_gafbc :=_gfdge .(*_aa .PdfObjectArray );_gafbc {for _ ,_dgegc :=range _ggecd .Elements (){_ccdgfc ,_ggbgd :=_dccg (_dgegc );if _ggbgd !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggbgd );return nil ,_ggbgd ;};_dfdffg .Function =append (_dfdffg .Function ,_ccdgfc );};}else {_gddbd ,_bbdge :=_dccg (_gfdge );if _bbdge !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbdge );return nil ,_bbdge ;};_dfdffg .Function =append (_dfdffg .Function ,_gddbd );};};return &_dfdffg ,nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_fgbb :=PdfColorCalRGB {a ,b ,c };return &_fgbb ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gfec OutlineDest )ToPdfObject ()_aa .PdfObject {if (_gfec .PageObj ==nil &&_gfec .Page < 0)||_gfec .Mode ==""{return _aa .MakeNull ();};_daffb :=_aa .MakeArray ();if _gfec .PageObj !=nil {_daffb .Append (_gfec .PageObj );}else {_daffb .Append (_aa .MakeInteger (_gfec .Page ));};_daffb .Append (_aa .MakeName (_gfec .Mode ));switch _gfec .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_daffb .Append (_aa .MakeFloat (_gfec .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_daffb .Append (_aa .MakeFloat (_gfec .X ));case "\u0058\u0059\u005a":_daffb .Append (_aa .MakeFloat (_gfec .X ));_daffb .Append (_aa .MakeFloat (_gfec .Y ));_daffb .Append (_aa .MakeFloat (_gfec .Zoom ));default:_daffb .Set (1,_aa .MakeName ("\u0046\u0069\u0074"));};return _daffb ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_fffbd *PdfPageResources )GetContainingPdfObject ()_aa .PdfObject {return _fffbd ._dcgg };type pdfFontSimple struct{fontCommon ;_ceaf *_aa .PdfIndirectObject ;_ccga map[_af .CharCode ]float64 ;_ddbeg _af .TextEncoder ;_dcfgf _af .TextEncoder ;_aebb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _aa .PdfObject ;LastChar _aa .PdfObject ;Widths _aa .PdfObject ;Encoding _aa .PdfObject ;_dege map[rune ]_fa .CharMetrics ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_aa .PdfObjectInteger ;BitsPerComponent *_aa .PdfObjectInteger ;BitsPerFlag *_aa .PdfObjectInteger ;Decode *_aa .PdfObjectArray ;Function []PdfFunction ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_eaefc *PdfPageResources )AddExtGState (gsName _aa .PdfObjectName ,gsDict _aa .PdfObject )error {if _eaefc .ExtGState ==nil {_eaefc .ExtGState =_aa .MakeDict ();};_bdae :=_eaefc .ExtGState ;_ggde ,_eeeed :=_aa .TraceToDirectObject (_bdae ).(*_aa .PdfObjectDictionary );if !_eeeed {_ba .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bdae ,_aa .TraceToDirectObject (_bdae ));return _aa .ErrTypeError ;};_ggde .Set (gsName ,gsDict );return nil ;};

// SetForms sets the Acroform for a PDF file.
func (_bcfe *PdfWriter )SetForms (form *PdfAcroForm )error {_bcfe ._eaee =form ;return nil };

// SetFontByName sets the font specified by keyName to the given object.
func (_fcacb *PdfPageResources )SetFontByName (keyName _aa .PdfObjectName ,obj _aa .PdfObject )error {if _fcacb .Font ==nil {_fcacb .Font =_aa .MakeDict ();};_dfaeb ,_bgbff :=_aa .TraceToDirectObject (_fcacb .Font ).(*_aa .PdfObjectDictionary );if !_bgbff {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aa .TraceToDirectObject (_fcacb .Font ));return _aa .ErrTypeError ;};_dfaeb .Set (keyName ,obj );return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fgge *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbca ,_bgfaa :=_aa .GetNumbersAsFloat (objects );if _bgfaa !=nil {return nil ,_bgfaa ;};return _fgge .ColorFromFloats (_bbca );};

// ToInteger convert to an integer format.
func (_fbab *PdfColorCalGray )ToInteger (bits int )uint32 {_gaaa :=_ag .Pow (2,float64 (bits ))-1;return uint32 (_gaaa *_fbab .Val ());};func (_fdeb *PdfReader )newPdfActionURIFromDict (_cga *_aa .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cga .Get ("\u0055\u0052\u0049"),IsMap :_cga .Get ("\u0049\u0073\u004da\u0070")},nil ;};func (_cefbf Image )getBase ()_ff .ImageBase {return _ff .NewImageBase (int (_cefbf .Width ),int (_cefbf .Height ),int (_cefbf .BitsPerComponent ),_cefbf .ColorComponents ,_cefbf .Data ,_cefbf ._eecd ,_cefbf ._ddfac );};var _bcee =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_aca :=NewPdfAction ();_bea :=&PdfActionNamed {};_bea .PdfAction =_aca ;_aca .SetContext (_bea );return _bea ;};

// ToInteger convert to an integer format.
func (_bacc *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gbea :=_ag .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gbea *_bacc .R ()),uint32 (_gbea *_bacc .G ()),uint32 (_gbea *_bacc .B ())};};

// Encrypt encrypts the output file with a specified user/owner password.
func (_baeeb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_aedef :=RC4_128bit ;if options !=nil {_aedef =options .Algorithm ;};_gfbac :=_bc .PermOwner ;if options !=nil {_gfbac =options .Permissions ;};var _febaf _dd .Filter ;switch _aedef {case RC4_128bit :_febaf =_dd .NewFilterV2 (16);case AES_128bit :_febaf =_dd .NewFilterAESV2 ();case AES_256bit :_febaf =_dd .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_acccaa ,_adfed ,_affbdd :=_aa .PdfCryptNewEncrypt (_febaf ,userPass ,ownerPass ,_gfbac );if _affbdd !=nil {return _affbdd ;};_baeeb ._fdaab =_acccaa ;if _adfed .Major !=0{_baeeb .SetVersion (_adfed .Major ,_adfed .Minor );};_baeeb ._dadf =_adfed .Encrypt ;_baeeb ._eegbf =_aa .MakeArray (_aa .MakeHexString (_adfed .ID0 ),_aa .MakeHexString (_adfed .ID1 ));_deaab :=_aa .MakeIndirectObject (_adfed .Encrypt );_baeeb ._ccfdce =_deaab ;_baeeb .addObject (_deaab );return nil ;};

// Add appends an outline item as a child of the current outline item.
func (_deeg *OutlineItem )Add (item *OutlineItem ){_deeg .Entries =append (_deeg .Entries ,item )};

// RemovePage removes a page by number.
func (_bdda *PdfAppender )RemovePage (pageNum int ){_dbegg :=pageNum -1;_bdda ._fdcc =append (_bdda ._fdcc [0:_dbegg ],_bdda ._fdcc [pageNum :]...);};func (_cgbd *PdfReader )newPdfActionSubmitFormFromDict (_fgb *_aa .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gafa ,_bbd :=_caed (_fgb .Get ("\u0046"));if _bbd !=nil {return nil ,_bbd ;};return &PdfActionSubmitForm {F :_gafa ,Fields :_fgb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fgb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func (_adec *PdfReader )newPdfAnnotationRedactFromDict (_edg *_aa .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_dgdf :=PdfAnnotationRedact {};_adbg ,_fgcd :=_adec .newPdfAnnotationMarkupFromDict (_edg );if _fgcd !=nil {return nil ,_fgcd ;};_dgdf .PdfAnnotationMarkup =_adbg ;_dgdf .QuadPoints =_edg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_dgdf .IC =_edg .Get ("\u0049\u0043");_dgdf .RO =_edg .Get ("\u0052\u004f");_dgdf .OverlayText =_edg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_dgdf .Repeat =_edg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_dgdf .DA =_edg .Get ("\u0044\u0041");_dgdf .Q =_edg .Get ("\u0051");return &_dgdf ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ecdf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfcc ,_daadf :=_aa .GetNumbersAsFloat (objects );if _daadf !=nil {return nil ,_daadf ;};return _ecdf .ColorFromFloats (_cfcc );};func (_fedd *PdfSignature )extractChainFromPKCS7 ()([]*_ca .Certificate ,error ){_afbab ,_gefga :=_fb .Parse (_fedd .Contents .Bytes ());if _gefga !=nil {return nil ,_gefga ;};return _afbab .Certificates ,nil ;};var _baea =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};func _eade ()_ab .Time {_beea .Lock ();defer _beea .Unlock ();return _deae };func _babe ()string {_beea .Lock ();defer _beea .Unlock ();return _bdddbe };func (_ggea *LTV )getOCSPs (_gabgd []*_ca .Certificate ,_addg map[string ]*_ca .Certificate )([][]byte ,error ){_fdfe :=make ([][]byte ,0,len (_gabgd ));for _ ,_ccacc :=range _gabgd {for _ ,_edcf :=range _ccacc .OCSPServer {if _ggea .CertClient .IsCA (_ccacc ){continue ;};_bgdge ,_aaebg :=_addg [_ccacc .Issuer .CommonName ];if !_aaebg {_ba .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_eagaf ,_eabdb :=_ggea .OCSPClient .MakeRequest (_edcf ,_ccacc ,_bgdge );if _eabdb !=nil {_ba .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_eabdb );continue ;};_fdfe =append (_fdfe ,_eagaf );};};return _fdfe ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cdbaa *PdfPageResources )GetPatternByName (keyName _aa .PdfObjectName )(*PdfPattern ,bool ){if _cdbaa .Pattern ==nil {return nil ,false ;};_gaafea ,_gdecd :=_aa .TraceToDirectObject (_cdbaa .Pattern ).(*_aa .PdfObjectDictionary );if !_gdecd {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdbaa .Pattern );return nil ,false ;};if _aecgd :=_gaafea .Get (keyName );_aecgd !=nil {_ccged ,_gagad :=_deafe (_aecgd );if _gagad !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gagad );return nil ,false ;};return _ccged ,true ;};return nil ,false ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_gdad *_aa .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_cgga *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbb ,_fgbe :=_aa .GetNumbersAsFloat (objects );if _fgbe !=nil {return nil ,_fgbe ;};return _cgga .ColorFromFloats (_bfbb );};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bcab *PdfFieldButton )GetType ()ButtonType {_gaaad :=ButtonTypeCheckbox ;if _bcab .Ff !=nil {if (uint32 (*_bcab .Ff )&FieldFlagPushbutton .Mask ())> 0{_gaaad =ButtonTypePush ;}else if (uint32 (*_bcab .Ff )&FieldFlagRadio .Mask ())> 0{_gaaad =ButtonTypeRadio ;};};return _gaaad ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_cbdedg :=&XObjectImage {};_gfgc :=&_aa .PdfObjectStream {};_gfgc .PdfObjectDictionary =_aa .MakeDict ();_cbdedg ._fcbac =_gfgc ;return _cbdedg ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fdefc *PdfPageResourcesColorspaces )Set (key _aa .PdfObjectName ,val PdfColorspace ){if _ ,_bfdff :=_fdefc .Colorspaces [string (key )];!_bfdff {_fdefc .Names =append (_fdefc .Names ,string (key ));};_fdefc .Colorspaces [string (key )]=val ;};func _feab (_bgdbb _aa .PdfObject )[]*_aa .PdfObjectStream {if _bgdbb ==nil {return nil ;};_debgb ,_ggbgf :=_aa .GetArray (_bgdbb );if !_ggbgf ||_debgb .Len ()==0{return nil ;};_fcadff :=make ([]*_aa .PdfObjectStream ,0,_debgb .Len ());for _ ,_cbgca :=range _debgb .Elements (){if _fabag ,_ecbd :=_aa .GetStream (_cbgca );_ecbd {_fcadff =append (_fcadff ,_fabag );};};return _fcadff ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_efdf *PdfPage )SetContentStreams (cStreams []string ,encoder _aa .StreamEncoder )error {if len (cStreams )==0{_efdf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_aa .NewRawEncoder ();};var _babbd []*_aa .PdfObjectStream ;for _ ,_geaef :=range cStreams {_dadcf :=&_aa .PdfObjectStream {};_aaca :=encoder .MakeStreamDict ();_ddaba ,_dbbd :=encoder .EncodeBytes ([]byte (_geaef ));if _dbbd !=nil {return _dbbd ;};_aaca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aa .MakeInteger (int64 (len (_ddaba ))));_dadcf .PdfObjectDictionary =_aaca ;_dadcf .Stream =_ddaba ;_babbd =append (_babbd ,_dadcf );};if len (_babbd )==1{_efdf .Contents =_babbd [0];}else {_ddfedc :=_aa .MakeArray ();for _ ,_adaba :=range _babbd {_ddfedc .Append (_adaba );};_efdf .Contents =_ddfedc ;};return nil ;};

// C returns the value of the cyan component of the color.
func (_fbdb *PdfColorDeviceCMYK )C ()float64 {return _fbdb [0]};func (_dcaa *PdfAcroForm )filteredFields (_cfcg FieldFilterFunc ,_bgeaf bool )[]*PdfField {if _dcaa ==nil {return nil ;};return _fdee (_dcaa .Fields ,_cfcg ,_bgeaf );};

// ToPdfObject implements interface PdfModel.
func (_gcf *PdfActionHide )ToPdfObject ()_aa .PdfObject {_gcf .PdfAction .ToPdfObject ();_agc :=_gcf ._bg ;_cgg :=_agc .PdfObject .(*_aa .PdfObjectDictionary );_cgg .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeHide )));_cgg .SetIfNotNil ("\u0054",_gcf .T );_cgg .SetIfNotNil ("\u0048",_gcf .H );return _agc ;};func (_dfacb *PdfWriter )addObjects (_dfbde _aa .PdfObject )error {_ba .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _eafg ,_defbf :=_dfbde .(*_aa .PdfIndirectObject );_defbf {_ba .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ba .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_dfbde ,_eafg );_ba .Log .Trace ("\u002d\u0020\u0025\u0073",_eafg .PdfObject );if _dfacb .addObject (_eafg ){_fbaf :=_dfacb .addObjects (_eafg .PdfObject );if _fbaf !=nil {return _fbaf ;};};return nil ;};if _aagg ,_afcbda :=_dfbde .(*_aa .PdfObjectStream );_afcbda {_ba .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ba .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_dfbde ,_dfbde );if _dfacb .addObject (_aagg ){_fefga :=_dfacb .addObjects (_aagg .PdfObjectDictionary );if _fefga !=nil {return _fefga ;};};return nil ;};if _gcbff ,_cadgd :=_dfbde .(*_aa .PdfObjectDictionary );_cadgd {_ba .Log .Trace ("\u0044\u0069\u0063\u0074");_ba .Log .Trace ("\u002d\u0020\u0025\u0073",_dfbde );for _ ,_dadba :=range _gcbff .Keys (){_cbegff :=_gcbff .Get (_dadba );if _ffgbe ,_bbbbfa :=_cbegff .(*_aa .PdfObjectReference );_bbbbfa {_cbegff =_ffgbe .Resolve ();_gcbff .Set (_dadba ,_cbegff );};if _dadba !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _gafgf :=_dfacb .addObjects (_cbegff );_gafgf !=nil {return _gafgf ;};}else {if _ ,_edcdd :=_cbegff .(*_aa .PdfObjectNull );_edcdd {continue ;};if _ecgac :=_dfacb .hasObject (_cbegff );!_ecgac {_ba .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cbegff ,_cbegff ,_cbegff );_dfacb ._bfdb [_cbegff ]=append (_dfacb ._bfdb [_cbegff ],_gcbff );};};};return nil ;};if _begdg ,_fbbbc :=_dfbde .(*_aa .PdfObjectArray );_fbbbc {_ba .Log .Trace ("\u0041\u0072\u0072a\u0079");_ba .Log .Trace ("\u002d\u0020\u0025\u0073",_dfbde );if _begdg ==nil {return _fda .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _gdddc ,_fbcgag :=range _begdg .Elements (){if _daaad ,_fade :=_fbcgag .(*_aa .PdfObjectReference );_fade {_fbcgag =_daaad .Resolve ();_begdg .Set (_gdddc ,_fbcgag );};if _ebed :=_dfacb .addObjects (_fbcgag );_ebed !=nil {return _ebed ;};};return nil ;};if _ ,_gfdc :=_dfbde .(*_aa .PdfObjectReference );_gfdc {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_dfbde );return _fda .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bgabcc *PdfColorspaceDeviceNAttributes )ToPdfObject ()_aa .PdfObject {_fabd :=_aa .MakeDict ();if _bgabcc .Subtype !=nil {_fabd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgabcc .Subtype );};_fabd .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bgabcc .Colorants );_fabd .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bgabcc .Process );_fabd .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bgabcc .MixingHints );if _bgabcc ._gfeaf !=nil {_bgabcc ._gfeaf .PdfObject =_fabd ;return _bgabcc ._gfeaf ;};return _fabd ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_edbbd *PdfShadingPattern )ToPdfObject ()_aa .PdfObject {_edbbd .PdfPattern .ToPdfObject ();_bbed :=_edbbd .getDict ();if _edbbd .Shading !=nil {_bbed .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_edbbd .Shading .ToPdfObject ());};if _edbbd .Matrix !=nil {_bbed .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_edbbd .Matrix );};if _edbbd .ExtGState !=nil {_bbed .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_edbbd .ExtGState );};return _edbbd ._dedae ;};func (_aegb *PdfAppender )updateObjectsDeep (_bafc _aa .PdfObject ,_bggg map[_aa .PdfObject ]struct{}){if _bggg ==nil {_bggg =map[_aa .PdfObject ]struct{}{};};if _ ,_fcgef :=_bggg [_bafc ];_fcgef ||_bafc ==nil {return ;};_bggg [_bafc ]=struct{}{};_dbeg :=_aa .ResolveReferencesDeep (_bafc ,_aegb ._fdce );if _dbeg !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeg );};switch _faecf :=_bafc .(type ){case *_aa .PdfIndirectObject :switch {case _faecf .GetParser ()==_aegb ._edc ._gbacd :return ;case _faecf .GetParser ()==_aegb .Reader ._gbacd :_fgff ,_ :=_aegb ._edc .GetIndirectObjectByNumber (int (_faecf .ObjectNumber ));_ddbde ,_cabf :=_fgff .(*_aa .PdfIndirectObject );if _cabf &&_ddbde !=nil {if _ddbde .PdfObject !=_faecf .PdfObject &&_ddbde .PdfObject .WriteString ()!=_faecf .PdfObject .WriteString (){_aegb .addNewObject (_bafc );_aegb ._dcbb [_bafc ]=_faecf .ObjectNumber ;};};default:_aegb .addNewObject (_bafc );};_aegb .updateObjectsDeep (_faecf .PdfObject ,_bggg );case *_aa .PdfObjectArray :for _ ,_cdg :=range _faecf .Elements (){_aegb .updateObjectsDeep (_cdg ,_bggg );};case *_aa .PdfObjectDictionary :for _ ,_fegfb :=range _faecf .Keys (){_aegb .updateObjectsDeep (_faecf .Get (_fegfb ),_bggg );};case *_aa .PdfObjectStreams :if _faecf .GetParser ()!=_aegb ._edc ._gbacd {for _ ,_faad :=range _faecf .Elements (){_aegb .updateObjectsDeep (_faad ,_bggg );};};case *_aa .PdfObjectStream :switch {case _faecf .GetParser ()==_aegb ._edc ._gbacd :return ;case _faecf .GetParser ()==_aegb .Reader ._gbacd :if _gdce ,_ddge :=_aegb ._edc ._gbacd .LookupByReference (_faecf .PdfObjectReference );_ddge ==nil {var _caea bool ;if _fbgde ,_baec :=_aa .GetStream (_gdce );_baec &&_dc .Equal (_fbgde .Stream ,_faecf .Stream ){_caea =true ;};if _fgdf ,_gdegc :=_aa .GetDict (_gdce );_caea &&_gdegc {_caea =_fgdf .WriteString ()==_faecf .PdfObjectDictionary .WriteString ();};if _caea {return ;};};if _faecf .ObjectNumber !=0{_aegb ._dcbb [_bafc ]=_faecf .ObjectNumber ;};default:if _ ,_begd :=_aegb ._badf [_bafc ];!_begd {_aegb .addNewObject (_bafc );};};_aegb .updateObjectsDeep (_faecf .PdfObjectDictionary ,_bggg );};};func _accbc (_bdfccf *_aa .PdfObjectStream )(*PdfFunctionType4 ,error ){_egbfb :=&PdfFunctionType4 {};_egbfb ._abgf =_bdfccf ;_gaedb :=_bdfccf .PdfObjectDictionary ;_abgbe ,_bfgdd :=_aa .TraceToDirectObject (_gaedb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aa .PdfObjectArray );if !_bfgdd {_ba .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _abgbe .Len ()%2!=0{_ba .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fda .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gaafe ,_aggde :=_abgbe .ToFloat64Array ();if _aggde !=nil {return nil ,_aggde ;};_egbfb .Domain =_gaafe ;_abgbe ,_bfgdd =_aa .TraceToDirectObject (_gaedb .Get ("\u0052\u0061\u006eg\u0065")).(*_aa .PdfObjectArray );if _bfgdd {if _abgbe .Len ()< 0||_abgbe .Len ()%2!=0{return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aebbc ,_fccda :=_abgbe .ToFloat64Array ();if _fccda !=nil {return nil ,_fccda ;};_egbfb .Range =_aebbc ;};_adbee ,_aggde :=_aa .DecodeStream (_bdfccf );if _aggde !=nil {return nil ,_aggde ;};_egbfb ._bade =_adbee ;_efdd :=_bag .NewPSParser (_adbee );_gdfbb ,_aggde :=_efdd .Parse ();if _aggde !=nil {return nil ,_aggde ;};_egbfb .Program =_gdfbb ;return _egbfb ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_deefc *PdfPage )GetPageAsIndirectObject ()*_aa .PdfIndirectObject {return _deefc ._gacge };

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gdbd ,_dbgbg :=_bf .Open (filePath );if _dbgbg !=nil {_ba .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dbgbg );return nil ,_dbgbg ;};defer _gdbd .Close ();return NewCompositePdfFontFromTTF (_gdbd );};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_eagfb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegd ,_fdeg :=_aa .GetNumbersAsFloat (objects );if _fdeg !=nil {return nil ,_fdeg ;};return _eagfb .ColorFromFloats (_gegd );};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cfbe *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fda .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_efaf ,_aef :=_ff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eecd ,img ._ddfac );if _aef !=nil {return img ,_aef ;};_abad ,_aef :=_ff .NRGBAConverter .Convert (_efaf );if _aef !=nil {return img ,_aef ;};_aadae :=_bdaag (_abad .Base ());_ba .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ba .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ba .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_aadae .Data );_ba .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_aadae );return _aadae ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_caac *PdfColorspaceDeviceN )GetNumComponents ()int {return _caac .ColorantNames .Len ()};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_egdd *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_aa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caggg ,_dfaca :=_aa .GetNumbersAsFloat (objects );if _dfaca !=nil {return nil ,_dfaca ;};return _egdd .ColorFromFloats (_caggg );};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_feec :=&PdfPageResourcesColorspaces {};_feec .Names =[]string {};_feec .Colorspaces =map[string ]PdfColorspace {};_feec ._ebdd =&_aa .PdfIndirectObject {};return _feec ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_eddc *PdfPage )AppendContentStream (contentStr string )error {_dbgdb ,_becdb :=_eddc .GetContentStreams ();if _becdb !=nil {return _becdb ;};if len (_dbgdb )==0{_dbgdb =[]string {contentStr };return _eddc .SetContentStreams (_dbgdb ,_aa .NewFlateEncoder ());};var _fgfda _dc .Buffer ;_fgfda .WriteString (_dbgdb [len (_dbgdb )-1]);_fgfda .WriteString ("\u000a");_fgfda .WriteString (contentStr );_dbgdb [len (_dbgdb )-1]=_fgfda .String ();return _eddc .SetContentStreams (_dbgdb ,_aa .NewFlateEncoder ());};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_febf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_cbadf :=func (_ebdab float64 )float64 {if _ebdab >=6.0/29{return _ebdab *_ebdab *_ebdab ;};return 108.0/841*(_ebdab -4/29);};_abcg :=img ._ddfac ;if len (_abcg )!=6{_ba .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_abcg =_febf .DecodeArray ();};_acbg :=_fdg .NewReader (img .getBase ());_dbbg :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._eecd ,img ._ddfac );_dfdfd :=_fdg .NewWriter (_dbbg );_faecd :=_ag .Pow (2,float64 (img .BitsPerComponent ))-1;_bcaf :=make ([]uint32 ,3);var (_defd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_aaed ,_egba ,_efea float64 ;);for {_defd =_acbg .ReadSamples (_bcaf );if _defd ==_gb .EOF {break ;}else if _defd !=nil {return img ,_defd ;};Ls =float64 (_bcaf [0])/_faecd ;As =float64 (_bcaf [1])/_faecd ;Bs =float64 (_bcaf [2])/_faecd ;Ls =_ff .LinearInterpolate (Ls ,0.0,1.0,_abcg [0],_abcg [1]);As =_ff .LinearInterpolate (As ,0.0,1.0,_abcg [2],_abcg [3]);Bs =_ff .LinearInterpolate (Bs ,0.0,1.0,_abcg [4],_abcg [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_febf .WhitePoint [0]*_cbadf (L );Y =_febf .WhitePoint [1]*_cbadf (M );Z =_febf .WhitePoint [2]*_cbadf (N );_aaed =3.240479*X +-1.537150*Y +-0.498535*Z ;_egba =-0.969256*X +1.875992*Y +0.041556*Z ;_efea =0.055648*X +-0.204043*Y +1.057311*Z ;_aaed =_ag .Min (_ag .Max (_aaed ,0),1.0);_egba =_ag .Min (_ag .Max (_egba ,0),1.0);_efea =_ag .Min (_ag .Max (_efea ,0),1.0);_bcaf [0]=uint32 (_aaed *_faecd );_bcaf [1]=uint32 (_egba *_faecd );_bcaf [2]=uint32 (_efea *_faecd );if _defd =_dfdfd .WriteSamples (_bcaf );_defd !=nil {return img ,_defd ;};};return _bdaag (&_dbbg ),nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_dagd *_aa .PdfIndirectObject ;};type pdfCIDFontType0 struct{fontCommon ;_ddee *_aa .PdfIndirectObject ;_fccd _af .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_aa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aa .PdfObject ;W _aa .PdfObject ;DW2 _aa .PdfObject ;W2 _aa .PdfObject ;_fdca map[_af .CharCode ]float64 ;_fbbb float64 ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cgee FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cgee .Mask ()|fl .Mask ())};func (_feea *LTV )getCRLs (_egeec []*_ca .Certificate )([][]byte ,error ){_gace :=make ([][]byte ,0,len (_egeec ));for _ ,_gecad :=range _egeec {for _ ,_gbceg :=range _gecad .CRLDistributionPoints {if _feea .CertClient .IsCA (_gecad ){continue ;};_cbee ,_ggad :=_feea .CRLClient .MakeRequest (_gbceg ,_gecad );if _ggad !=nil {_ba .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ggad );continue ;};_gace =append (_gace ,_cbee );};};return _gace ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ee :=NewPdfAction ();_fec :=&PdfActionGoToE {};_fec .PdfAction =_ee ;_ee .SetContext (_fec );return _fec ;};

// ToPdfObject implements interface PdfModel.
func (_adgc *PdfAnnotationFileAttachment )ToPdfObject ()_aa .PdfObject {_adgc .PdfAnnotation .ToPdfObject ();_faag :=_adgc ._dde ;_bgcb :=_faag .PdfObject .(*_aa .PdfObjectDictionary );_adgc .PdfAnnotationMarkup .appendToPdfDictionary (_bgcb );_bgcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_bgcb .SetIfNotNil ("\u0046\u0053",_adgc .FS );_bgcb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_adgc .Name );return _faag ;};func (_fgbg *PdfAnnotation )String ()string {_gfg :="";_gagb ,_fgd :=_fgbg .ToPdfObject ().(*_aa .PdfIndirectObject );if _fgd {_gfg =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fgbg ._dbdc ,_gagb .PdfObject .String ());};return _gfg ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_dfdae *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_baeff ,_aefaa :=_aa .GetDict (_dfdae ._gbcg .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_aefaa {_baeff =_aa .MakeDict ();_dfdae ._gbcg .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_baeff );};_dcdfa ,_aefaa :=_aa .GetDict (_baeff .Get (_aa .PdfObjectName (extName )));if !_aefaa {_dcdfa =_aa .MakeDict ();_baeff .Set (_aa .PdfObjectName (extName ),_dcdfa );};if _fgfba ,_ :=_aa .GetNameVal (_dcdfa .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_fgfba !=baseVersion {_dcdfa .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_aa .MakeName (baseVersion ));};if _gcada ,_ :=_aa .GetIntVal (_dcdfa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_gcada !=extLevel {_dcdfa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_aa .MakeInteger (int64 (extLevel )));};};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _aa .PdfObject ;Volume _aa .PdfObject ;Synchronous _aa .PdfObject ;Repeat _aa .PdfObject ;Mix _aa .PdfObject ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_aeea :=NewPdfAnnotation ();_dcde :=&PdfAnnotationWidget {};_dcde .PdfAnnotation =_aeea ;_aeea .SetContext (_dcde );return _dcde ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ebgg *PdfColorspaceLab )GetNumComponents ()int {return 3};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ccfaa *OutlineItem )Insert (index uint ,item *OutlineItem ){_aabdf :=uint (len (_ccfaa .Entries ));if index > _aabdf {index =_aabdf ;};_ccfaa .Entries =append (_ccfaa .Entries [:index ],append ([]*OutlineItem {item },_ccfaa .Entries [index :]...)...);};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_fefg *PdfPageResources )GetFontByName (keyName _aa .PdfObjectName )(_aa .PdfObject ,bool ){if _fefg .Font ==nil {return nil ,false ;};_fcffb ,_gaefg :=_aa .TraceToDirectObject (_fefg .Font ).(*_aa .PdfObjectDictionary );if !_gaefg {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aa .TraceToDirectObject (_fefg .Font ));return nil ,false ;};if _babfe :=_fcffb .Get (keyName );_babfe !=nil {return _babfe ,true ;};return nil ,false ;};func (_ddc *PdfReader )newPdfActionTransFromDict (_ccc *_aa .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ccc .Get ("\u0054\u0072\u0061n\u0073")},nil ;};func (_fgffb *PdfReader )loadAnnotations (_fcbfa _aa .PdfObject )([]*PdfAnnotation ,error ){_bdcdc ,_eabede :=_aa .GetArray (_fcbfa );if !_eabede {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _agegf []*PdfAnnotation ;for _ ,_gdfbfd :=range _bdcdc .Elements (){_gdfbfd =_aa .ResolveReference (_gdfbfd );if _ ,_eebc :=_gdfbfd .(*_aa .PdfObjectNull );_eebc {continue ;};_bdcaf ,_cafbb :=_gdfbfd .(*_aa .PdfObjectDictionary );_acfcd ,_adbca :=_gdfbfd .(*_aa .PdfIndirectObject );if _cafbb {_acfcd =&_aa .PdfIndirectObject {};_acfcd .PdfObject =_bdcaf ;}else {if !_adbca {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_feaaa ,_geacf :=_fgffb .newPdfAnnotationFromIndirectObject (_acfcd );if _geacf !=nil {return nil ,_geacf ;};switch _afebc :=_feaaa .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_bdee :=range _fgffb .AcroForm .AllFields (){if _bdee ._ebabe ==_afebc .Parent {_afebc ._eagf =_bdee ;break ;};};};if _feaaa !=nil {_agegf =append (_agegf ,_feaaa );};};return _agegf ,nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ab .Time ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _aa .StreamEncoder ;FormType _aa .PdfObject ;BBox _aa .PdfObject ;Matrix _aa .PdfObject ;Resources *PdfPageResources ;Group _aa .PdfObject ;Ref _aa .PdfObject ;MetaData _aa .PdfObject ;PieceInfo _aa .PdfObject ;LastModified _aa .PdfObject ;StructParent _aa .PdfObject ;StructParents _aa .PdfObject ;OPI _aa .PdfObject ;OC _aa .PdfObject ;Name _aa .PdfObject ;

// Stream data.
Stream []byte ;_affbc *_aa .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_fbdg *PdfAnnotation )ToPdfObject ()_aa .PdfObject {_fbgd :=_fbdg ._dde ;_eeea :=_fbgd .PdfObject .(*_aa .PdfObjectDictionary );_eeea .Clear ();_eeea .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0041\u006e\u006eo\u0074"));_eeea .SetIfNotNil ("\u0052\u0065\u0063\u0074",_fbdg .Rect );_eeea .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fbdg .Contents );_eeea .SetIfNotNil ("\u0050",_fbdg .P );_eeea .SetIfNotNil ("\u004e\u004d",_fbdg .NM );_eeea .SetIfNotNil ("\u004d",_fbdg .M );_eeea .SetIfNotNil ("\u0046",_fbdg .F );_eeea .SetIfNotNil ("\u0041\u0050",_fbdg .AP );_eeea .SetIfNotNil ("\u0041\u0053",_fbdg .AS );_eeea .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_fbdg .Border );_eeea .SetIfNotNil ("\u0043",_fbdg .C );_eeea .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fbdg .StructParent );_eeea .SetIfNotNil ("\u004f\u0043",_fbdg .OC );return _fbgd ;};func _ccbb (_eaead *_aa .PdfObjectDictionary )(*PdfFieldButton ,error ){_aega :=&PdfFieldButton {};_aega .Opt ,_ =_aa .GetArray (_eaead .Get ("\u004f\u0070\u0074"));return _aega ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_fgbca *PdfReader )PageFromIndirectObject (ind *_aa .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_fgbca .PageList )!=len (_fgbca ._abfgd ){return nil ,0,_fda .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _cfbgf ,_aafaa :=range _fgbca ._abfgd {if _aafaa ==ind {return _fgbca .PageList [_cfbgf ],_cfbgf +1,nil ;};};return nil ,0,_fda .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_ddcb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _ddcb ._edga ==nil &&_ddcb .DescendantFont !=nil {return _ddcb .DescendantFont .FontDescriptor ();};return _ddcb ._edga ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_gfaf *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_gfaf .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_gfaf ._cabd =acroForm ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bgd :=NewPdfAction ();_cd :=&PdfActionRendition {};_cd .PdfAction =_bgd ;_bgd .SetContext (_cd );return _cd ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_dbdcd *PdfRectangle )Normalize (){if _dbdcd .Llx > _dbdcd .Urx {_dbdcd .Llx ,_dbdcd .Urx =_dbdcd .Urx ,_dbdcd .Llx ;};if _dbdcd .Lly > _dbdcd .Ury {_dbdcd .Lly ,_dbdcd .Ury =_dbdcd .Ury ,_dbdcd .Lly ;};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _aa .PdfObject ;FS _aa .PdfObject ;F _aa .PdfObject ;UF _aa .PdfObject ;DOS _aa .PdfObject ;Mac _aa .PdfObject ;Unix _aa .PdfObject ;ID _aa .PdfObject ;V _aa .PdfObject ;EF _aa .PdfObject ;RF _aa .PdfObject ;Desc _aa .PdfObject ;CI _aa .PdfObject ;_bfeff _aa .PdfObject ;};var _cfbg =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_dce :=NewPdfAnnotation ();_ebde :=&PdfAnnotationLink {};_ebde .PdfAnnotation =_dce ;_dce .SetContext (_ebde );return _ebde ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _aa .PdfObject ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_agfc *PdfAppender )UpdateObject (obj _aa .PdfObject ){_agfc .replaceObject (obj ,obj );if _ ,_dcea :=_agfc ._badf [obj ];!_dcea {_agfc ._dbae =append (_agfc ._dbae ,obj );_agfc ._badf [obj ]=struct{}{};};};func _caed (_dgd _aa .PdfObject )(*PdfFilespec ,error ){if _dgd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_dgd );};func _bbgcc (_cgefd _aa .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_eaca :=&PdfColorspaceDeviceNAttributes {};var _bgda *_aa .PdfObjectDictionary ;if _aeeb ,_eadd :=_cgefd .(*_aa .PdfIndirectObject );_eadd {_eaca ._gfeaf =_aeeb ;var _cbagd bool ;_bgda ,_cbagd =_aeeb .PdfObject .(*_aa .PdfObjectDictionary );if !_cbagd {_ba .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fda .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _ececf ,_dfeg :=_cgefd .(*_aa .PdfObjectDictionary );_dfeg {_bgda =_ececf ;}else {_ba .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fda .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adfec :=_bgda .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_adfec !=nil {_agcd ,_cdaf :=_aa .TraceToDirectObject (_adfec ).(*_aa .PdfObjectName );if !_cdaf {_ba .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_fda .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_eaca .Subtype =_agcd ;};if _abea :=_bgda .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_abea !=nil {_eaca .Colorants =_abea ;};if _ffad :=_bgda .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_ffad !=nil {_eaca .Process =_ffad ;};if _dfdb :=_bgda .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dfdb !=nil {_eaca .MixingHints =_dfdb ;};return _eaca ,nil ;};func (_begf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _begf ._edga };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ab .Time )(PdfDate ,error ){_beef :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_dgaeb ,_ :=_dg .ParseInt (_beef [1:3],10,32);_gbfba ,_ :=_dg .ParseInt (_beef [4:6],10,32);return PdfDate {_bfegad :int64 (timeObj .Year ()),_ddbbg :int64 (timeObj .Month ()),_efdea :int64 (timeObj .Day ()),_gcga :int64 (timeObj .Hour ()),_ecca :int64 (timeObj .Minute ()),_ddgce :int64 (timeObj .Second ()),_gaad :_beef [0],_bcgbe :_dgaeb ,_affda :_gbfba },nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgab *PdfShadingType3 )ToPdfObject ()_aa .PdfObject {_fgab .PdfShading .ToPdfObject ();_dcbad ,_geged :=_fgab .getShadingDict ();if _geged !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fgab .Coords !=nil {_dcbad .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fgab .Coords );};if _fgab .Domain !=nil {_dcbad .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgab .Domain );};if _fgab .Function !=nil {if len (_fgab .Function )==1{_dcbad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgab .Function [0].ToPdfObject ());}else {_agecb :=_aa .MakeArray ();for _ ,_adabc :=range _fgab .Function {_agecb .Append (_adabc .ToPdfObject ());};_dcbad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agecb );};};if _fgab .Extend !=nil {_dcbad .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fgab .Extend );};return _fgab ._fbdfa ;};func _bdaag (_fdaf *_ff .ImageBase )(_fcgfc Image ){_fcgfc .Width =int64 (_fdaf .Width );_fcgfc .Height =int64 (_fdaf .Height );_fcgfc .BitsPerComponent =int64 (_fdaf .BitsPerComponent );_fcgfc .ColorComponents =_fdaf .ColorComponents ;_fcgfc .Data =_fdaf .Data ;_fcgfc ._ddfac =_fdaf .Decode ;_fcgfc ._eecd =_fdaf .Alpha ;return _fcgfc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gdge *PdfColorspaceDeviceRGB )ToPdfObject ()_aa .PdfObject {return _aa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dbcg *_aa .PdfIndirectObject ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_edfdd *Image )ToJBIG2Image ()(*_aa .JBIG2Image ,error ){_gegg ,_faada :=_edfdd .ToGoImage ();if _faada !=nil {return nil ,_faada ;};return _aa .GoImageToJBIG2 (_gegg ,_aa .JB2ImageAutoThreshold );};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_aa .PdfObjectInteger ;BitsPerComponent *_aa .PdfObjectInteger ;BitsPerFlag *_aa .PdfObjectInteger ;Decode *_aa .PdfObjectArray ;Function []PdfFunction ;};func _bfgaa (_afffc *PdfField )[]*PdfField {_fbedee :=[]*PdfField {_afffc };for _ ,_aeegc :=range _afffc .Kids {_fbedee =append (_fbedee ,_bfgaa (_aeegc )...);};return _fbedee ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_efdc *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject convert PdfInfo to pdf object.
func (_caeb *PdfInfo )ToPdfObject ()_aa .PdfObject {_gege :=_aa .MakeDict ();_gege .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_caeb .Title );_gege .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_caeb .Author );_gege .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_caeb .Subject );_gege .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_caeb .Keywords );_gege .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_caeb .Creator );_gege .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_caeb .Producer );_gege .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_caeb .Trapped );if _caeb .CreationDate !=nil {_gege .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_caeb .CreationDate .ToPdfObject ());};if _caeb .ModifiedDate !=nil {_gege .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_caeb .ModifiedDate .ToPdfObject ());};for _ ,_gbcff :=range _caeb ._gaef .Keys (){_gege .SetIfNotNil (_gbcff ,_caeb ._gaef .Get (_gbcff ));};return _gege ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dbaa *PdfPage )GetContentStreamObjs ()[]_aa .PdfObject {if _dbaa .Contents ==nil {return nil ;};_dcebc :=_aa .TraceToDirectObject (_dbaa .Contents );if _edada ,_bdfg :=_dcebc .(*_aa .PdfObjectArray );_bdfg {return _edada .Elements ();};return []_aa .PdfObject {_dcebc };};func (_gec *PdfReader )newPdfActionThreadFromDict (_bfgg *_aa .PdfObjectDictionary )(*PdfActionThread ,error ){_dad ,_affca :=_caed (_bfgg .Get ("\u0046"));if _affca !=nil {return nil ,_affca ;};return &PdfActionThread {D :_bfgg .Get ("\u0044"),B :_bfgg .Get ("\u0042"),F :_dad },nil ;};func (_bfegc *LTV )getCerts (_aeaab []*_ca .Certificate )([][]byte ,error ){_cegcd :=make ([][]byte ,0,len (_aeaab ));for _ ,_dgfg :=range _aeaab {_cegcd =append (_cegcd ,_dgfg .Raw );};return _cegcd ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_ffbd :=NewPdfAnnotation ();_agec :=&PdfAnnotationMovie {};_agec .PdfAnnotation =_ffbd ;_ffbd .SetContext (_agec );return _agec ;};func _deafe (_cbeea _aa .PdfObject )(*PdfPattern ,error ){_cegee :=&PdfPattern {};var _fdbef *_aa .PdfObjectDictionary ;if _gaaed ,_gaaaf :=_aa .GetIndirect (_cbeea );_gaaaf {_cegee ._dedae =_gaaed ;_ceadc ,_fabf :=_gaaed .PdfObject .(*_aa .PdfObjectDictionary );if !_fabf {_ba .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_gaaed .PdfObject );return nil ,_aa .ErrTypeError ;};_fdbef =_ceadc ;}else if _eadc ,_cfab :=_aa .GetStream (_cbeea );_cfab {_cegee ._dedae =_eadc ;_fdbef =_eadc .PdfObjectDictionary ;}else {_ba .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_cbeea );return nil ,_aa .ErrTypeError ;};_beaed :=_fdbef .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _beaed ==nil {_ba .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_adafb ,_fccdf :=_beaed .(*_aa .PdfObjectInteger );if !_fccdf {_ba .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_beaed );return nil ,_aa .ErrTypeError ;};if *_adafb !=1&&*_adafb !=2{_ba .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_adafb );return nil ,_aa .ErrRangeError ;};_cegee .PatternType =int64 (*_adafb );switch *_adafb {case 1:_geaefb ,_eaaef :=_gdcg (_fdbef );if _eaaef !=nil {return nil ,_eaaef ;};_geaefb .PdfPattern =_cegee ;_cegee ._adfea =_geaefb ;return _cegee ,nil ;case 2:_ggbd ,_debfa :=_fdfgd (_fdbef );if _debfa !=nil {return nil ,_debfa ;};_ggbd .PdfPattern =_cegee ;_cegee ._adfea =_ggbd ;return _cegee ,nil ;};return nil ,_fda .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// GetNumComponents returns the number of color components.
func (_cfdb *PdfColorspaceICCBased )GetNumComponents ()int {return _cfdb .N };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_fcdf *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebbc :=vals [0];if _ebbc < 0.0||_ebbc > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfgf :=vals [1];if _bfgf < 0.0||_bfgf > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_defa :=vals [2];if _defa < 0.0||_defa > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdfbf :=vals [3];if _gdfbf < 0.0||_gdfbf > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bega :=NewPdfColorDeviceCMYK (_ebbc ,_bfgf ,_defa ,_gdfbf );return _bega ,nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_eeeec *Image )ConvertToBinary ()error {if _eeeec .ColorComponents ==1&&_eeeec .BitsPerComponent ==1{return nil ;};_abfb ,_cfddg :=_eeeec .ToGoImage ();if _cfddg !=nil {return _cfddg ;};_ddab ,_cfddg :=_ff .MonochromeConverter .Convert (_abfb );if _cfddg !=nil {return _cfddg ;};_eeeec .Data =_ddab .Base ().Data ;_eeeec ._eecd ,_cfddg =_ff .ScaleAlphaToMonochrome (_eeeec ._eecd ,int (_eeeec .Width ),int (_eeeec .Height ));if _cfddg !=nil {return _cfddg ;};_eeeec .BitsPerComponent =1;_eeeec .ColorComponents =1;_eeeec ._ddfac =nil ;return nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _aa .PdfObject ;H _aa .PdfObject ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _aa .PdfObject ;NewWindow _aa .PdfObject ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_bcdab *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _aa .GetNumberAsFloat (_bcdab .Descent );};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bdabd pdfFontType0 )GetRuneMetrics (r rune )(_fa .CharMetrics ,bool ){if _bdabd .DescendantFont ==nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bdabd );return _fa .CharMetrics {},false ;};return _bdabd .DescendantFont .GetRuneMetrics (r );};

// SetBorderWidth sets the style's border width.
func (_fab *PdfBorderStyle )SetBorderWidth (width float64 ){_fab .W =&width };

// String returns a string that describes `font`.
func (_cddag *PdfFont )String ()string {_gafd :="";if _cddag ._acdfa .Encoder ()!=nil {_gafd =_cddag ._acdfa .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_cddag ._acdfa ,_cddag .baseFields ().coreString (),_gafd );};func (_dafg *PdfReader )loadStructure ()error {if _dafg ._gbacd .GetCrypter ()!=nil &&!_dafg ._gbacd .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_accfef :=_dafg ._gbacd .GetTrailer ();if _accfef ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_edebc ,_cggaa :=_accfef .Get ("\u0052\u006f\u006f\u0074").(*_aa .PdfObjectReference );if !_cggaa {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_accfef );};_gbbfa ,_dgbfg :=_dafg ._gbacd .LookupByReference (*_edebc );if _dgbfg !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dgbfg );return _dgbfg ;};_edac ,_cggaa :=_gbbfa .(*_aa .PdfIndirectObject );if !_cggaa {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gbbfa ,*_accfef );return _fda .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bbba ,_cggaa :=(*_edac ).PdfObject .(*_aa .PdfObjectDictionary );if !_cggaa {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_edac .PdfObject );return _fda .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ba .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bbba );_dgdga ,_cggaa :=_bbba .Get ("\u0050\u0061\u0067e\u0073").(*_aa .PdfObjectReference );if !_cggaa {return _fda .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_dgebe ,_dgbfg :=_dafg ._gbacd .LookupByReference (*_dgdga );if _dgbfg !=nil {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dgbfg ;};_ddafe ,_cggaa :=_dgebe .(*_aa .PdfIndirectObject );if !_cggaa {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_ba .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ddafe );return _fda .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gcffa ,_cggaa :=_ddafe .PdfObject .(*_aa .PdfObjectDictionary );if !_cggaa {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ddafe );return _fda .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dcdac ,_cggaa :=_aa .GetInt (_gcffa .Get ("\u0043\u006f\u0075n\u0074"));if !_cggaa {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _fda .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cggaa =_aa .GetName (_gcffa .Get ("\u0054\u0079\u0070\u0065"));!_cggaa {_ba .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_gcffa .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0050\u0061\u0067e\u0073"));};_dafg ._fafb =_edebc ;_dafg ._fbdcg =_bbba ;_dafg ._gabffc =_gcffa ;_dafg ._gbef =_ddafe ;_dafg ._bded =int (*_dcdac );_dafg ._abfgd =[]*_aa .PdfIndirectObject {};_gbbb :=map[_aa .PdfObject ]struct{}{};_dgbfg =_dafg .buildPageList (_ddafe ,nil ,_gbbb );if _dgbfg !=nil {return _dgbfg ;};_ba .Log .Trace ("\u002d\u002d\u002d");_ba .Log .Trace ("\u0054\u004f\u0043");_ba .Log .Trace ("\u0050\u0061\u0067e\u0073");_ba .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_dafg ._abfgd ),_dafg ._abfgd );_dafg ._eadba ,_dgbfg =_dafg .loadOutlines ();if _dgbfg !=nil {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dgbfg );return _dgbfg ;};_dafg .AcroForm ,_dgbfg =_dafg .loadForms ();if _dgbfg !=nil {return _dgbfg ;};_dafg .DSS ,_dgbfg =_dafg .loadDSS ();if _dgbfg !=nil {return _dgbfg ;};return nil ;};func (_daca *PdfAppender )addNewObject (_ebdcf _aa .PdfObject ){if _ ,_faba :=_daca ._badf [_ebdcf ];!_faba {_daca ._dbae =append (_daca ._dbae ,_ebdcf );_daca ._badf [_ebdcf ]=struct{}{};};};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gg :=NewPdfAction ();_cg :=&PdfActionHide {};_cg .PdfAction =_gg ;_gg .SetContext (_cg );return _cg ;};

// SetLocation sets the `Location` field of the signature.
func (_adedf *PdfSignature )SetLocation (location string ){_adedf .Location =_aa .MakeString (location )};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_bgadc *pdfFontSimple )ToPdfObject ()_aa .PdfObject {if _bgadc ._ceaf ==nil {_bgadc ._ceaf =&_aa .PdfIndirectObject {};};_aaee :=_bgadc .baseFields ().asPdfObjectDictionary ("");_bgadc ._ceaf .PdfObject =_aaee ;if _bgadc .FirstChar !=nil {_aaee .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bgadc .FirstChar );};if _bgadc .LastChar !=nil {_aaee .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bgadc .LastChar );};if _bgadc .Widths !=nil {_aaee .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bgadc .Widths );};if _bgadc .Encoding !=nil {_aaee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bgadc .Encoding );}else if _bgadc ._ddbeg !=nil {_gfcf :=_bgadc ._ddbeg .ToPdfObject ();if _gfcf !=nil {_aaee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfcf );};};return _bgadc ._ceaf ;};func (_badabg SignatureValidationResult )String ()string {var _gbbeb _dc .Buffer ;_gbbeb .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_badabg .Name ));if _badabg .Date ._bfegad > 0{_gbbeb .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_badabg .Date .ToGoTime ().String ()));}else {_gbbeb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_badabg .Reason )> 0{_gbbeb .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_badabg .Reason ));}else {_gbbeb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_badabg .Location )> 0{_gbbeb .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_badabg .Location ));}else {_gbbeb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_badabg .ContactInfo )> 0{_gbbeb .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_badabg .ContactInfo ));}else {_gbbeb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_gbbeb .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_badabg .Fields )));if _badabg .IsSigned {_gbbeb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_gbbeb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _badabg .IsVerified {_gbbeb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_gbbeb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _badabg .IsTrusted {_gbbeb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_gbbeb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_badabg .GeneralizedTime .IsZero (){_gbbeb .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_badabg .GeneralizedTime .String ()));};return _gbbeb .String ();};

// ToPdfObject implements interface PdfModel.
func (_bdd *PdfBorderStyle )ToPdfObject ()_aa .PdfObject {_abff :=_aa .MakeDict ();if _bdd ._cdba !=nil {if _dfe ,_dgba :=_bdd ._cdba .(*_aa .PdfIndirectObject );_dgba {_dfe .PdfObject =_abff ;};};_abff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _bdd .W !=nil {_abff .Set ("\u0057",_aa .MakeFloat (*_bdd .W ));};if _bdd .S !=nil {_abff .Set ("\u0053",_aa .MakeName (_bdd .S .GetPdfName ()));};if _bdd .D !=nil {_abff .Set ("\u0044",_aa .MakeArrayFromIntegers (*_bdd .D ));};if _bdd ._cdba !=nil {return _bdd ._cdba ;};return _abff ;};func (_caaf *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_aa .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_aa .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_aa .PdfObjectBool ;_dafgg PdfModel ;_fbdfa _aa .PdfObject ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_feede *PdfOutlineTreeNode )GetContext ()PdfModel {if _facac ,_bcabf :=_feede ._caeff .(*PdfOutline );_bcabf {return _facac ;};if _cbcce ,_dgead :=_feede ._caeff .(*PdfOutlineItem );_dgead {return _cbcce ;};_ba .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// String returns a string describing the font descriptor.
func (_bgegc *PdfFontDescriptor )String ()string {var _bedcb []string ;if _bgegc .FontName !=nil {_bedcb =append (_bedcb ,_bgegc .FontName .String ());};if _bgegc .FontFamily !=nil {_bedcb =append (_bedcb ,_bgegc .FontFamily .String ());};if _bgegc .fontFile !=nil {_bedcb =append (_bedcb ,_bgegc .fontFile .String ());};if _bgegc ._bedb !=nil {_bedcb =append (_bedcb ,_bgegc ._bedb .String ());};_bedcb =append (_bedcb ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bgegc .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ga .Join (_bedcb ,"\u002c\u0020"));};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cbd *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_ggbc :=_fdg .NewReader (img .getBase ());_cfba :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fgffe :=_fdg .NewWriter (_cfba );_fgbc :=_ag .Pow (2,float64 (img .BitsPerComponent ))-1;_fafg :=make ([]uint32 ,3);var (_bfcd uint32 ;ANorm ,X ,Y ,Z ,_aacc ,_ggebc ,_gce float64 ;_dff error ;);for {_bfcd ,_dff =_ggbc .ReadSample ();if _dff ==_gb .EOF {break ;}else if _dff !=nil {return img ,_dff ;};ANorm =float64 (_bfcd )/_fgbc ;X =_cbd .WhitePoint [0]*_ag .Pow (ANorm ,_cbd .Gamma );Y =_cbd .WhitePoint [1]*_ag .Pow (ANorm ,_cbd .Gamma );Z =_cbd .WhitePoint [2]*_ag .Pow (ANorm ,_cbd .Gamma );_aacc =3.240479*X +-1.537150*Y +-0.498535*Z ;_ggebc =-0.969256*X +1.875992*Y +0.041556*Z ;_gce =0.055648*X +-0.204043*Y +1.057311*Z ;_aacc =_ag .Min (_ag .Max (_aacc ,0),1.0);_ggebc =_ag .Min (_ag .Max (_ggebc ,0),1.0);_gce =_ag .Min (_ag .Max (_gce ,0),1.0);_fafg [0]=uint32 (_aacc *_fgbc );_fafg [1]=uint32 (_ggebc *_fgbc );_fafg [2]=uint32 (_gce *_fgbc );if _dff =_fgffe .WriteSamples (_fafg );_dff !=nil {return img ,_dff ;};};return _bdaag (&_cfba ),nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_feeg pdfCIDFontType0 )GetRuneMetrics (r rune )(_fa .CharMetrics ,bool ){return _fa .CharMetrics {Wx :_feeg ._fbbb },true ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fcacc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fcacc .flattenFieldsWithOpts (false ,appgen ,opts );};func _gdcg (_ebfga *_aa .PdfObjectDictionary )(*PdfTilingPattern ,error ){_eafdg :=&PdfTilingPattern {};_ecdfd :=_ebfga .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ecdfd ==nil {_ba .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eadfd ,_dedgd :=_ecdfd .(*_aa .PdfObjectInteger );if !_dedgd {_ba .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ecdfd );return nil ,_aa .ErrTypeError ;};_eafdg .PaintType =_eadfd ;_ecdfd =_ebfga .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ecdfd ==nil {_ba .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccebb ,_dedgd :=_ecdfd .(*_aa .PdfObjectInteger );if !_dedgd {_ba .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecdfd );return nil ,_aa .ErrTypeError ;};_eafdg .TilingType =_ccebb ;_ecdfd =_ebfga .Get ("\u0042\u0042\u006f\u0078");if _ecdfd ==nil {_ba .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ecdfd =_aa .TraceToDirectObject (_ecdfd );_fggfda ,_dedgd :=_ecdfd .(*_aa .PdfObjectArray );if !_dedgd {_ba .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecdfd );return nil ,_aa .ErrTypeError ;};_ffga ,_dbfc :=NewPdfRectangle (*_fggfda );if _dbfc !=nil {_ba .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dbfc );return nil ,_dbfc ;};_eafdg .BBox =_ffga ;_ecdfd =_ebfga .Get ("\u0058\u0053\u0074e\u0070");if _ecdfd ==nil {_ba .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_afcf ,_dbfc :=_aa .GetNumberAsFloat (_ecdfd );if _dbfc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_afcf );return nil ,_dbfc ;};_eafdg .XStep =_aa .MakeFloat (_afcf );_ecdfd =_ebfga .Get ("\u0059\u0053\u0074e\u0070");if _ecdfd ==nil {_ba .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfbd ,_dbfc :=_aa .GetNumberAsFloat (_ecdfd );if _dbfc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cfbd );return nil ,_dbfc ;};_eafdg .YStep =_aa .MakeFloat (_cfbd );_ecdfd =_ebfga .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ecdfd ==nil {_ba .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ebfga ,_dedgd =_aa .TraceToDirectObject (_ecdfd ).(*_aa .PdfObjectDictionary );if !_dedgd {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ecdfd );};_bacef ,_dbfc :=NewPdfPageResourcesFromDict (_ebfga );if _dbfc !=nil {return nil ,_dbfc ;};_eafdg .Resources =_bacef ;if _cedc :=_ebfga .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cedc !=nil {_efefa ,_gdegg :=_cedc .(*_aa .PdfObjectArray );if !_gdegg {_ba .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cedc );return nil ,_aa .ErrTypeError ;};_eafdg .Matrix =_efefa ;};return _eafdg ,nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ecd :=NewPdfAnnotation ();_dda :=&PdfAnnotationSquiggly {};_dda .PdfAnnotation =_ecd ;_dda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecd .SetContext (_dda );return _dda ;};

// L returns the value of the L component of the color.
func (_aedeg *PdfColorLab )L ()float64 {return _aedeg [0]};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_beea .Lock ();defer _beea .Unlock ();_efcaa =producer };

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_aa .PdfObjectStream ;OCSP []*_aa .PdfObjectStream ;CRL []*_aa .PdfObjectStream ;TU *_aa .PdfObjectString ;TS *_aa .PdfObjectString ;};

// ImageToRGB convert an indexed image to RGB.
func (_dfabg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_dfabg .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_ccb :=_ff .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._eecd ,img ._ddfac );_cefae :=_fdg .NewReader (img .getBase ());_adcf :=_fdg .NewWriter (_ccb );var (_adbb uint32 ;_dggg int ;_gbecg error ;);for {_adbb ,_gbecg =_cefae .ReadSample ();if _gbecg ==_gb .EOF {break ;}else if _gbecg !=nil {return img ,_gbecg ;};_dggg =int (_adbb );_ba .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_dggg ,N ,len (_dfabg ._bdea ));if (_dggg +1)*N > len (_dfabg ._bdea ){_dggg =len (_dfabg ._bdea )/N -1;_ba .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_dggg );if _dggg < 0{_ba .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _gdffc :=_dggg *N ;_gdffc < (_dggg +1)*N ;_gdffc ++{if _gbecg =_adcf .WriteSample (uint32 (_dfabg ._bdea [_gdffc ]));_gbecg !=nil {return img ,_gbecg ;};};};return _dfabg .Base .ImageToRGB (_bdaag (&_ccb ));};func (_ecec *PdfReader )newPdfAnnotationSquareFromDict (_ccac *_aa .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fafe :=PdfAnnotationSquare {};_gccb ,_cafd :=_ecec .newPdfAnnotationMarkupFromDict (_ccac );if _cafd !=nil {return nil ,_cafd ;};_fafe .PdfAnnotationMarkup =_gccb ;_fafe .BS =_ccac .Get ("\u0042\u0053");_fafe .IC =_ccac .Get ("\u0049\u0043");_fafe .BE =_ccac .Get ("\u0042\u0045");_fafe .RD =_ccac .Get ("\u0052\u0044");return &_fafe ,nil ;};func _affbd (_acgbe _aa .PdfObject )(*PdfFontDescriptor ,error ){_dafd :=&PdfFontDescriptor {};_acgbe =_aa .ResolveReference (_acgbe );if _bdggd ,_addea :=_acgbe .(*_aa .PdfIndirectObject );_addea {_dafd ._gegcg =_bdggd ;_acgbe =_bdggd .PdfObject ;};_cbeg ,_cgad :=_aa .GetDict (_acgbe );if !_cgad {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_acgbe );return nil ,_aa .ErrTypeError ;};if _gcee :=_cbeg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gcee !=nil {_dafd .FontName =_gcee ;}else {_ba .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_faac ,_ :=_aa .GetName (_dafd .FontName );if _fecd :=_cbeg .Get ("\u0054\u0079\u0070\u0065");_fecd !=nil {_cdgeg ,_abeb :=_fecd .(*_aa .PdfObjectName );if !_abeb ||string (*_cdgeg )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ba .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fecd ,_faac ,_dafd .FontName );};}else {_ba .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_faac ,_dafd .FontName );};_dafd .FontFamily =_cbeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_dafd .FontStretch =_cbeg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_dafd .FontWeight =_cbeg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_dafd .Flags =_cbeg .Get ("\u0046\u006c\u0061g\u0073");_dafd .FontBBox =_cbeg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_dafd .ItalicAngle =_cbeg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_dafd .Ascent =_cbeg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_dafd .Descent =_cbeg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_dafd .Leading =_cbeg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_dafd .CapHeight =_cbeg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_dafd .XHeight =_cbeg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_dafd .StemV =_cbeg .Get ("\u0053\u0074\u0065m\u0056");_dafd .StemH =_cbeg .Get ("\u0053\u0074\u0065m\u0048");_dafd .AvgWidth =_cbeg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_dafd .MaxWidth =_cbeg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_dafd .MissingWidth =_cbeg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_dafd .FontFile =_cbeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_dafd .FontFile2 =_cbeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_dafd .FontFile3 =_cbeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_dafd .CharSet =_cbeg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_dafd .Style =_cbeg .Get ("\u0053\u0074\u0079l\u0065");_dafd .Lang =_cbeg .Get ("\u004c\u0061\u006e\u0067");_dafd .FD =_cbeg .Get ("\u0046\u0044");_dafd .CIDSet =_cbeg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _dafd .Flags !=nil {if _fdfc ,_dafba :=_aa .GetIntVal (_dafd .Flags );_dafba {_dafd ._befeg =_fdfc ;};};if _dafd .MissingWidth !=nil {if _ecaeb ,_geag :=_aa .GetNumberAsFloat (_dafd .MissingWidth );_geag ==nil {_dafd ._gdfg =_ecaeb ;};};if _dafd .FontFile !=nil {_adfeg ,_fcdc :=_ggga (_dafd .FontFile );if _fcdc !=nil {return _dafd ,_fcdc ;};_ba .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_adfeg );_dafd .fontFile =_adfeg ;};if _dafd .FontFile2 !=nil {_acdcf ,_caeba :=_fa .NewFontFile2FromPdfObject (_dafd .FontFile2 );if _caeba !=nil {return _dafd ,_caeba ;};_ba .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_acdcf .String ());_dafd ._bedb =&_acdcf ;};return _dafd ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_acee *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_aa .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_adcg *_aa .PdfIndirectObject ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_aggbb :=&PdfSignature {Type :_aa .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bgccbb :=&pdfSignDictionary {PdfObjectDictionary :_aa .MakeDict (),_fefa :&handler ,_gcgf :_aggbb };_aggbb ._bfbeb =_aa .MakeIndirectObject (_bgccbb );return _aggbb ;};func (_bdgf *Image )samplesAddPadding (_cgfb []uint32 )[]uint32 {_gfbd :=_ff .BytesPerLine (int (_bdgf .Width ),int (_bdgf .BitsPerComponent ),_bdgf .ColorComponents )*(8/int (_bdgf .BitsPerComponent ));_fdbad :=_gfbd *int (_bdgf .Height );if len (_cgfb )==_fdbad {return _cgfb ;};_afcee :=make ([]uint32 ,_fdbad );_efca :=int (_bdgf .Width )*_bdgf .ColorComponents ;for _ebgb :=0;_ebgb < int (_bdgf .Height );_ebgb ++{_geac :=_ebgb *int (_bdgf .Width );_bggcg :=_ebgb *_gfbd ;for _bafgf :=0;_bafgf < _efca ;_bafgf ++{_afcee [_bggcg +_bafgf ]=_cgfb [_geac +_bafgf ];};};return _afcee ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_aa .PdfObjectName ;Colorants _aa .PdfObject ;Process _aa .PdfObject ;MixingHints _aa .PdfObject ;_gfeaf *_aa .PdfIndirectObject ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_eagc :=NewPdfAnnotation ();_egb :=&PdfAnnotationTrapNet {};_egb .PdfAnnotation =_eagc ;_eagc .SetContext (_egb );return _egb ;};func _acde (_aaff _aa .PdfObject )(*PdfColorspaceCalRGB ,error ){_eaag :=NewPdfColorspaceCalRGB ();if _aaba ,_fbef :=_aaff .(*_aa .PdfIndirectObject );_fbef {_eaag ._bfbdf =_aaba ;};_aaff =_aa .TraceToDirectObject (_aaff );_bdbgf ,_acec :=_aaff .(*_aa .PdfObjectArray );if !_acec {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bdbgf .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_aaff =_aa .TraceToDirectObject (_bdbgf .Get (0));_ffaf ,_acec :=_aaff .(*_aa .PdfObjectName );if !_acec {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_ffaf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_aaff =_aa .TraceToDirectObject (_bdbgf .Get (1));_abec ,_acec :=_aaff .(*_aa .PdfObjectDictionary );if !_acec {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_aaff =_abec .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aaff =_aa .TraceToDirectObject (_aaff );_eaab ,_acec :=_aaff .(*_aa .PdfObjectArray );if !_acec {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _eaab .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ecgdb ,_ccfbd :=_eaab .GetAsFloat64Slice ();if _ccfbd !=nil {return nil ,_ccfbd ;};_eaag .WhitePoint =_ecgdb ;_aaff =_abec .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aaff !=nil {_aaff =_aa .TraceToDirectObject (_aaff );_ddgc ,_adfa :=_aaff .(*_aa .PdfObjectArray );if !_adfa {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _ddgc .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gfafe ,_bdfb :=_ddgc .GetAsFloat64Slice ();if _bdfb !=nil {return nil ,_bdfb ;};_eaag .BlackPoint =_gfafe ;};_aaff =_abec .Get ("\u0047\u0061\u006dm\u0061");if _aaff !=nil {_aaff =_aa .TraceToDirectObject (_aaff );_dfff ,_cgagc :=_aaff .(*_aa .PdfObjectArray );if !_cgagc {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _dfff .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_egfa ,_cceg :=_dfff .GetAsFloat64Slice ();if _cceg !=nil {return nil ,_cceg ;};_eaag .Gamma =_egfa ;};_aaff =_abec .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _aaff !=nil {_aaff =_aa .TraceToDirectObject (_aaff );_edfe ,_adab :=_aaff .(*_aa .PdfObjectArray );if !_adab {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _edfe .Len ()!=9{_ba .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_edfe .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_gdae ,_dbbf :=_edfe .GetAsFloat64Slice ();if _dbbf !=nil {return nil ,_dbbf ;};_eaag .Matrix =_gdae ;};return _eaag ,nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_eedc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _afeade []float64 ;for _ccebe :=0;_ccebe < _eedc .GetNumComponents ();_ccebe ++{_afeade =append (_afeade ,0.0,1.0);};return _afeade ;};func (_afaa *fontFile )parseASCIIPart (_daadc []byte )error {if len (_daadc )< 2||string (_daadc [:2])!="\u0025\u0021"{return _fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_bdgcc ,_dffb ,_ceeg :=_fcbgb (_daadc );if _ceeg !=nil {return _ceeg ;};_deag :=_faabg (_bdgcc );_afaa ._ecga =_deag ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _afaa ._ecga ==""{_ba .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _dffb !=""{_fcbbe ,_fafac :=_afbdd (_dffb );if _fafac !=nil {return _fafac ;};_feadg ,_fafac :=_af .NewCustomSimpleTextEncoder (_fcbbe ,nil );if _fafac !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_fafac );return nil ;};_afaa ._ffbg =_feadg ;};return nil ;};

// Encoder returns the font's text encoder.
func (_dbcc pdfCIDFontType0 )Encoder ()_af .TextEncoder {return _dbcc ._fccd };

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gbacd *_aa .PdfParser ;_fafb _aa .PdfObject ;_gbef *_aa .PdfIndirectObject ;_gabffc *_aa .PdfObjectDictionary ;_abfgd []*_aa .PdfIndirectObject ;PageList []*PdfPage ;_bded int ;_fbdcg *_aa .PdfObjectDictionary ;_eadba *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_cgaeff *modelManager ;_edef bool ;_fdaec map[_aa .PdfObject ]struct{};_bgbae _gb .ReadSeeker ;_gaeb string ;};func _ababe (_ccdb *_aa .PdfObjectDictionary )(*PdfFieldChoice ,error ){_ffafa :=&PdfFieldChoice {};_ffafa .Opt ,_ =_aa .GetArray (_ccdb .Get ("\u004f\u0070\u0074"));_ffafa .TI ,_ =_aa .GetInt (_ccdb .Get ("\u0054\u0049"));_ffafa .I ,_ =_aa .GetArray (_ccdb .Get ("\u0049"));return _ffafa ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_cgeg *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ebda :=pageNum -1;var _gfcg *PdfPage ;for _gagd ,_egcg :=range _cgeg ._fdcc {if _gagd ==_ebda {_gfcg =_egcg ;};};if _gfcg ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _gfcg ._gacge !=nil &&_gfcg ._gacge .GetParser ()==_cgeg ._edc ._gbacd {_gfcg =_gfcg .Duplicate ();_cgeg ._fdcc [_ebda ]=_gfcg ;};page =page .Duplicate ();_egbc (page );_agea :=_acfc (_gfcg );_afaf :=_acfc (page );_fcgb :=make (map[_aa .PdfObjectName ]_aa .PdfObjectName );for _gfgd :=range _afaf {if _ ,_agag :=_agea [_gfgd ];_agag {for _ecfa :=1;true ;_ecfa ++{_eadf :=_aa .PdfObjectName (string (_gfgd )+_dg .Itoa (_ecfa ));if _ ,_ddba :=_agea [_eadf ];!_ddba {_fcgb [_gfgd ]=_eadf ;break ;};};};};_eggg ,_gccbe :=page .GetContentStreams ();if _gccbe !=nil {return _gccbe ;};_faeg ,_gccbe :=_gfcg .GetContentStreams ();if _gccbe !=nil {return _gccbe ;};for _bdf ,_affb :=range _eggg {for _abac ,_eabe :=range _fcgb {_affb =_ga .Replace (_affb ,"\u002f"+string (_abac ),"\u002f"+string (_eabe ),-1);};_eggg [_bdf ]=_affb ;};_faeg =append (_faeg ,_eggg ...);if _ccg :=_gfcg .SetContentStreams (_faeg ,_aa .NewFlateEncoder ());_ccg !=nil {return _ccg ;};_gfcg ._ecgde =append (_gfcg ._ecgde ,page ._ecgde ...);if _gfcg .Resources ==nil {_gfcg .Resources =NewPdfPageResources ();};if page .Resources !=nil {_gfcg .Resources .Font =_cgeg .mergeResources (_gfcg .Resources .Font ,page .Resources .Font ,_fcgb );_gfcg .Resources .XObject =_cgeg .mergeResources (_gfcg .Resources .XObject ,page .Resources .XObject ,_fcgb );_gfcg .Resources .Properties =_cgeg .mergeResources (_gfcg .Resources .Properties ,page .Resources .Properties ,_fcgb );if _gfcg .Resources .ProcSet ==nil {_gfcg .Resources .ProcSet =page .Resources .ProcSet ;};_gfcg .Resources .Shading =_cgeg .mergeResources (_gfcg .Resources .Shading ,page .Resources .Shading ,_fcgb );_gfcg .Resources .ExtGState =_cgeg .mergeResources (_gfcg .Resources .ExtGState ,page .Resources .ExtGState ,_fcgb );};_gadd ,_gccbe :=_gfcg .GetMediaBox ();if _gccbe !=nil {return _gccbe ;};_ecdd ,_gccbe :=page .GetMediaBox ();if _gccbe !=nil {return _gccbe ;};var _cfcd bool ;if _gadd .Llx > _ecdd .Llx {_gadd .Llx =_ecdd .Llx ;_cfcd =true ;};if _gadd .Lly > _ecdd .Lly {_gadd .Lly =_ecdd .Lly ;_cfcd =true ;};if _gadd .Urx < _ecdd .Urx {_gadd .Urx =_ecdd .Urx ;_cfcd =true ;};if _gadd .Ury < _ecdd .Ury {_gadd .Ury =_ecdd .Ury ;_cfcd =true ;};if _cfcd {_gfcg .MediaBox =_gadd ;};return nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _aa .PdfObject ;};func (_bfag *PdfReader )buildPageList (_cbcgd *_aa .PdfIndirectObject ,_gagc *_aa .PdfIndirectObject ,_cgbbf map[_aa .PdfObject ]struct{})error {if _cbcgd ==nil {return nil ;};if _ ,_aabf :=_cgbbf [_cbcgd ];_aabf {_ba .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cbcgd .ObjectNumber );return nil ;};_cgbbf [_cbcgd ]=struct{}{};_fdgfb ,_afadc :=_cbcgd .PdfObject .(*_aa .PdfObjectDictionary );if !_afadc {return _fda .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_abdf ,_afadc :=(*_fdgfb ).Get ("\u0054\u0079\u0070\u0065").(*_aa .PdfObjectName );if !_afadc {if _fdgfb .Get ("\u004b\u0069\u0064\u0073")==nil {return _fda .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ba .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_abdf =_aa .MakeName ("\u0050\u0061\u0067e\u0073");_fdgfb .Set ("\u0054\u0079\u0070\u0065",_abdf );};_ba .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_abdf ,_cbcgd );if *_abdf =="\u0050\u0061\u0067\u0065"{_afdc ,_bebec :=_bfag .newPdfPageFromDict (_fdgfb );if _bebec !=nil {return _bebec ;};_afdc .setContainer (_cbcgd );if _gagc !=nil {_fdgfb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gagc );};_bfag ._abfgd =append (_bfag ._abfgd ,_cbcgd );_bfag .PageList =append (_bfag .PageList ,_afdc );return nil ;};if *_abdf !="\u0050\u0061\u0067e\u0073"{_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_abdf );return _fda .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _gagc !=nil {_fdgfb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gagc );};if !_bfag ._edef {_cefd :=_bfag .traverseObjectData (_cbcgd );if _cefd !=nil {return _cefd ;};};_fffea ,_acgf :=_bfag ._gbacd .Resolve (_fdgfb .Get ("\u004b\u0069\u0064\u0073"));if _acgf !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _acgf ;};var _effd *_aa .PdfObjectArray ;_effd ,_afadc =_fffea .(*_aa .PdfObjectArray );if !_afadc {_bgebc ,_faebg :=_fffea .(*_aa .PdfIndirectObject );if !_faebg {return _fda .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_effd ,_afadc =_bgebc .PdfObject .(*_aa .PdfObjectArray );if !_afadc {return _fda .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ba .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_effd );for _aadbec ,_cgddd :=range _effd .Elements (){_cgfe ,_daaab :=_aa .GetIndirect (_cgddd );if !_daaab {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cgfe );return _fda .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_effd .Set (_aadbec ,_cgfe );_acgf =_bfag .buildPageList (_cgfe ,_cbcgd ,_cgbbf );if _acgf !=nil {return _acgf ;};};return nil ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bbfdc ,_gfagb :=_bf .Open (filePath );if _gfagb !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gfagb );return nil ,_gfagb ;};defer _bbfdc .Close ();return NewPdfFontFromTTF (_bbfdc );};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_acba :_aa .MakeIndirectObject (_aa .MakeDict ())};};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_bcgdg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _bcgdg ._eage !=nil {return _bcgdg ._eage ,nil ;};if _bcgdg .ColorSpace ==nil {return nil ,nil ;};_ggegg ,_efad :=_gdece (_bcgdg .ColorSpace );if _efad !=nil {return nil ,_efad ;};_bcgdg ._eage =_ggegg ;return _bcgdg ._eage ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_efdca *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_ggge *PdfPage )setContainer (_ccfeg *_aa .PdfIndirectObject ){_ccfeg .PdfObject =_ggge ._bebd ;_ggge ._gacge =_ccfeg ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_egebb *Image )ColorAt (x ,y int )(_f .Color ,error ){_bbcgc :=_ff .BytesPerLine (int (_egebb .Width ),int (_egebb .BitsPerComponent ),_egebb .ColorComponents );switch _egebb .ColorComponents {case 1:return _ff .ColorAtGrayscale (x ,y ,int (_egebb .BitsPerComponent ),_bbcgc ,_egebb .Data ,_egebb ._ddfac );case 3:return _ff .ColorAtNRGBA (x ,y ,int (_egebb .Width ),_bbcgc ,int (_egebb .BitsPerComponent ),_egebb .Data ,_egebb ._eecd ,_egebb ._ddfac );case 4:return _ff .ColorAtCMYK (x ,y ,int (_egebb .Width ),_egebb .Data ,_egebb ._ddfac );};_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_egebb .ColorComponents ,_egebb .BitsPerComponent );return nil ,_fda .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_dfcd *PdfReader )loadDSS ()(*DSS ,error ){if _dfcd ._gbacd .GetCrypter ()!=nil &&!_dfcd ._gbacd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_aceg :=_dfcd ._fbdcg .Get ("\u0044\u0053\u0053");if _aceg ==nil {return nil ,nil ;};_beaede ,_ :=_aa .GetIndirect (_aceg );_aceg =_aa .TraceToDirectObject (_aceg );switch _ebefa :=_aceg .(type ){case *_aa .PdfObjectNull :return nil ,nil ;case *_aa .PdfObjectDictionary :return _baddc (_beaede ,_ebefa );};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_aceg );};func _ddcc (_ccgf StdFontName )(pdfFontSimple ,error ){_beddc ,_bdcfc :=_fa .NewStdFontByName (_ccgf );if !_bdcfc {return pdfFontSimple {},ErrFontNotSupported ;};_gcacb :=_facg (_beddc );return _gcacb ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cgdcc *PdfFilespec )GetContainingPdfObject ()_aa .PdfObject {return _cgdcc ._bfeff };

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_dedc *PdfPattern )GetContainingPdfObject ()_aa .PdfObject {return _dedc ._dedae };

// Val returns the value of the color.
func (_cbad *PdfColorCalGray )Val ()float64 {return float64 (*_cbad )};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_ggdg *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_dfgc ,_ ,_fbec :=_ggdg .CharcodesToUnicodeWithStats (_ggdg .BytesToCharcodes (data ));_aaea :=_af .ExpandLigatures (_dfgc );return _aaea ,_be .RuneCountInString (_aaea ),_fbec ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ffba *PdfColorspaceSpecialIndexed )ToPdfObject ()_aa .PdfObject {_fbfc :=_aa .MakeArray (_aa .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_fbfc .Append (_ffba .Base .ToPdfObject ());_fbfc .Append (_aa .MakeInteger (int64 (_ffba .HiVal )));_fbfc .Append (_ffba .Lookup );if _ffba ._dfcb !=nil {_ffba ._dfcb .PdfObject =_fbfc ;return _ffba ._dfcb ;};return _fbfc ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _aa .PdfObject )(*PdfFilespec ,error ){_gegfa :=&PdfFilespec {};var _adea *_aa .PdfObjectDictionary ;if _gfafee ,_faff :=_aa .GetIndirect (obj );_faff {_gegfa ._bfeff =_gfafee ;_ccba ,_cfadg :=_aa .GetDict (_gfafee .PdfObject );if !_cfadg {_ba .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aa .ErrTypeError ;};_adea =_ccba ;}else if _cgde ,_eebab :=_aa .GetDict (obj );_eebab {_gegfa ._bfeff =_cgde ;_adea =_cgde ;}else {_ba .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_aa .ErrTypeError ;};if _adea ==nil {_ba .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fda .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _aafb :=_adea .Get ("\u0054\u0079\u0070\u0065");_aafb !=nil {_dfcc ,_dfgf :=_aafb .(*_aa .PdfObjectName );if !_dfgf {_ba .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aafb );}else {if *_dfcc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ba .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_dfcc );};};};if _efagg :=_adea .Get ("\u0046\u0053");_efagg !=nil {_gegfa .FS =_efagg ;};if _eddd :=_adea .Get ("\u0046");_eddd !=nil {_gegfa .F =_eddd ;};if _eeee :=_adea .Get ("\u0055\u0046");_eeee !=nil {_gegfa .UF =_eeee ;};if _cada :=_adea .Get ("\u0044\u004f\u0053");_cada !=nil {_gegfa .DOS =_cada ;};if _effg :=_adea .Get ("\u004d\u0061\u0063");_effg !=nil {_gegfa .Mac =_effg ;};if _eebe :=_adea .Get ("\u0055\u006e\u0069\u0078");_eebe !=nil {_gegfa .Unix =_eebe ;};if _ffgd :=_adea .Get ("\u0049\u0044");_ffgd !=nil {_gegfa .ID =_ffgd ;};if _gdba :=_adea .Get ("\u0056");_gdba !=nil {_gegfa .V =_gdba ;};if _ggda :=_adea .Get ("\u0045\u0046");_ggda !=nil {_gegfa .EF =_ggda ;};if _ebac :=_adea .Get ("\u0052\u0046");_ebac !=nil {_gegfa .RF =_ebac ;};if _gddb :=_adea .Get ("\u0044\u0065\u0073\u0063");_gddb !=nil {_gegfa .Desc =_gddb ;};if _bacca :=_adea .Get ("\u0043\u0049");_bacca !=nil {_gegfa .CI =_bacca ;};return _gegfa ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_feff *PdfTilingPattern )ToPdfObject ()_aa .PdfObject {_feff .PdfPattern .ToPdfObject ();_cdaa :=_feff .getDict ();if _feff .PaintType !=nil {_cdaa .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_feff .PaintType );};if _feff .TilingType !=nil {_cdaa .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_feff .TilingType );};if _feff .BBox !=nil {_cdaa .Set ("\u0042\u0042\u006f\u0078",_feff .BBox .ToPdfObject ());};if _feff .XStep !=nil {_cdaa .Set ("\u0058\u0053\u0074e\u0070",_feff .XStep );};if _feff .YStep !=nil {_cdaa .Set ("\u0059\u0053\u0074e\u0070",_feff .YStep );};if _feff .Resources !=nil {_cdaa .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_feff .Resources .ToPdfObject ());};if _feff .Matrix !=nil {_cdaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_feff .Matrix );};return _feff ._dedae ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_gebd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _fbbd []*PdfField ;_geebb :=map[*_aa .PdfIndirectObject ]struct{}{};for _ ,_cbcdf :=range _gebd .PageList {_dcdb ,_edcc :=_cbcdf .GetAnnotations ();if _edcc !=nil {return _edcc ;};for _ ,_bfaae :=range _dcdb {var _fefe *PdfField ;switch _gfcaf :=_bfaae .GetContext ().(type ){case *PdfAnnotationWidget :if _gfcaf ._eagf !=nil {_fefe =_gfcaf ._eagf ;break ;};if _defb ,_ffcdf :=_aa .GetIndirect (_gfcaf .Parent );_ffcdf {_fefe ,_edcc =_gebd .newPdfFieldFromIndirectObject (_defb ,nil );if _edcc ==nil {break ;};_ba .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_defb ,_edcc );};if _gfcaf ._dde !=nil {_fefe ,_edcc =_gebd .newPdfFieldFromIndirectObject (_gfcaf ._dde ,nil );if _edcc ==nil {break ;};_ba .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_gfcaf ._dde ,_edcc );};};if _fefe ==nil {continue ;};if _ ,_bbcaf :=_geebb [_fefe ._ebabe ];_bbcaf {continue ;};_geebb [_fefe ._ebabe ]=struct{}{};_fbbd =append (_fbbd ,_fefe );};};if len (_fbbd )==0{return nil ;};if _gebd .AcroForm ==nil {_gebd .AcroForm =NewPdfAcroForm ();};_gebd .AcroForm .Fields =&_fbbd ;return nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_abcfc *XObjectForm )GetContentStream ()([]byte ,error ){_egdeb ,_bdgad :=_aa .DecodeStream (_abcfc ._affbc );if _bdgad !=nil {return nil ,_bdgad ;};return _egdeb ,nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// SetFlag sets the flag for the field.
func (_eabcd *PdfField )SetFlag (flag FieldFlag ){_eabcd .Ff =_aa .MakeInteger (int64 (flag ))};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func (_dedg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_aa .PdfIndirectObject ;SV *_aa .PdfIndirectObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_cbag *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_gcedg *PdfPageResources )SetXObjectFormByName (keyName _aa .PdfObjectName ,xform *XObjectForm )error {_cfag :=xform .ToPdfObject ().(*_aa .PdfObjectStream );_gcabf :=_gcedg .SetXObjectByName (keyName ,_cfag );return _gcabf ;};func (_ebdc *PdfReader )newPdfAnnotationInkFromDict (_def *_aa .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_edec :=PdfAnnotationInk {};_aeaa ,_dfcf :=_ebdc .newPdfAnnotationMarkupFromDict (_def );if _dfcf !=nil {return nil ,_dfcf ;};_edec .PdfAnnotationMarkup =_aeaa ;_edec .InkList =_def .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_edec .BS =_def .Get ("\u0042\u0053");return &_edec ,nil ;};func _bfcdg (_dcfc []rune ,_gcag map[rune ]int ,_gdcb map[rune ]_fa .GID )*_aa .PdfObjectArray {_abfebc :=&_aa .PdfObjectArray {};for _bgfea :=0;_bgfea < len (_dcfc );{_cgcb :=_gcag [_dcfc [_bgfea ]];_bbeg :=_bgfea ;for _acef :=_bgfea +1;_acef < len (_dcfc );_acef ++{_adgg :=_gcag [_dcfc [_acef ]];if _cgcb ==_adgg {_bbeg =_acef ;}else {break ;};};_effe :=_gdcb [_dcfc [_bgfea ]];_bfaa :=_gdcb [_dcfc [_bbeg ]];_abfebc .Append (_aa .MakeInteger (int64 (_effe )));_abfebc .Append (_aa .MakeInteger (int64 (_bfaa )));_abfebc .Append (_aa .MakeInteger (int64 (_cgcb )));_bgfea =_bbeg +1;};return _abfebc ;};

// SetDecode sets the decode image float slice.
func (_bggc *Image )SetDecode (decode []float64 ){_bggc ._ddfac =decode };

// GetContentStreams returns the content stream as an array of strings.
func (_geded *PdfPage )GetContentStreams ()([]string ,error ){_ggggb :=_geded .GetContentStreamObjs ();var _eeeff []string ;for _ ,_bgccb :=range _ggggb {_gdbba ,_egfea :=_afaec (_bgccb );if _egfea !=nil {return nil ,_egfea ;};_eeeff =append (_eeeff ,_gdbba );};return _eeeff ,nil ;};func (_degd *pdfCIDFontType2 )baseFields ()*fontCommon {return &_degd .fontCommon };

// GetCharMetrics returns the char metrics for character code `code`.
func (_gfgae pdfCIDFontType0 )GetCharMetrics (code _af .CharCode )(_fa .CharMetrics ,bool ){_dcdff :=_gfgae ._fbbb ;if _eggdf ,_agad :=_gfgae ._fdca [code ];_agad {_dcdff =_eggdf ;};return _fa .CharMetrics {Wx :_dcdff },true ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;var _gfbdg =_ce .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");func _eegdc (_affba *_aa .PdfObjectDictionary )(*PdfShadingType2 ,error ){_addge :=PdfShadingType2 {};_adbaga :=_affba .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _adbaga ==nil {_ba .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_acdcg ,_ddaag :=_adbaga .(*_aa .PdfObjectArray );if !_ddaag {_ba .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adbaga );return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _acdcg .Len ()!=4{_ba .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acdcg .Len ());return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_addge .Coords =_acdcg ;if _abaab :=_affba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_abaab !=nil {_abaab =_aa .TraceToDirectObject (_abaab );_bcac ,_fgadb :=_abaab .(*_aa .PdfObjectArray );if !_fgadb {_ba .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abaab );return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_addge .Domain =_bcac ;};_adbaga =_affba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _adbaga ==nil {_ba .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_addge .Function =[]PdfFunction {};if _adafgg ,_ddaac :=_adbaga .(*_aa .PdfObjectArray );_ddaac {for _ ,_cagag :=range _adafgg .Elements (){_ccgec ,_cdfc :=_dccg (_cagag );if _cdfc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdfc );return nil ,_cdfc ;};_addge .Function =append (_addge .Function ,_ccgec );};}else {_agcga ,_dgbfc :=_dccg (_adbaga );if _dgbfc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgbfc );return nil ,_dgbfc ;};_addge .Function =append (_addge .Function ,_agcga );};if _eeggg :=_affba .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eeggg !=nil {_eeggg =_aa .TraceToDirectObject (_eeggg );_dcdfc ,_fbgfaa :=_eeggg .(*_aa .PdfObjectArray );if !_fbgfaa {_ba .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeggg );return nil ,_aa .ErrTypeError ;};if _dcdfc .Len ()!=2{_ba .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dcdfc .Len ());return nil ,ErrInvalidAttribute ;};_addge .Extend =_dcdfc ;};return &_addge ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_egbf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gdeb *PdfPageResources )HasXObjectByName (keyName _aa .PdfObjectName )bool {_eddg ,_ :=_gdeb .GetXObjectByName (keyName );return _eddg !=nil ;};func (_ccfb *PdfReader )newPdfAnnotationTrapNetFromDict (_adgb *_aa .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bbbb :=PdfAnnotationTrapNet {};return &_bbbb ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_bfcf *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gfca :=_fdg .NewReader (img .getBase ());_cfae :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bgfgb :=_fdg .NewWriter (_cfae );_edfed :=_ag .Pow (2,float64 (img .BitsPerComponent ))-1;_fcbd :=make ([]uint32 ,3);var (_fbdbb error ;_feaf ,_aegbb ,_cecf ,_eaebf ,_gddc ,_bdfa float64 ;);for {_fbdbb =_gfca .ReadSamples (_fcbd );if _fbdbb ==_gb .EOF {break ;}else if _fbdbb !=nil {return img ,_fbdbb ;};_feaf =float64 (_fcbd [0])/_edfed ;_aegbb =float64 (_fcbd [1])/_edfed ;_cecf =float64 (_fcbd [2])/_edfed ;_eaebf =_bfcf .Matrix [0]*_ag .Pow (_feaf ,_bfcf .Gamma [0])+_bfcf .Matrix [3]*_ag .Pow (_aegbb ,_bfcf .Gamma [1])+_bfcf .Matrix [6]*_ag .Pow (_cecf ,_bfcf .Gamma [2]);_gddc =_bfcf .Matrix [1]*_ag .Pow (_feaf ,_bfcf .Gamma [0])+_bfcf .Matrix [4]*_ag .Pow (_aegbb ,_bfcf .Gamma [1])+_bfcf .Matrix [7]*_ag .Pow (_cecf ,_bfcf .Gamma [2]);_bdfa =_bfcf .Matrix [2]*_ag .Pow (_feaf ,_bfcf .Gamma [0])+_bfcf .Matrix [5]*_ag .Pow (_aegbb ,_bfcf .Gamma [1])+_bfcf .Matrix [8]*_ag .Pow (_cecf ,_bfcf .Gamma [2]);_feaf =3.240479*_eaebf +-1.537150*_gddc +-0.498535*_bdfa ;_aegbb =-0.969256*_eaebf +1.875992*_gddc +0.041556*_bdfa ;_cecf =0.055648*_eaebf +-0.204043*_gddc +1.057311*_bdfa ;_feaf =_ag .Min (_ag .Max (_feaf ,0),1.0);_aegbb =_ag .Min (_ag .Max (_aegbb ,0),1.0);_cecf =_ag .Min (_ag .Max (_cecf ,0),1.0);_fcbd [0]=uint32 (_feaf *_edfed );_fcbd [1]=uint32 (_aegbb *_edfed );_fcbd [2]=uint32 (_cecf *_edfed );if _fbdbb =_bgfgb .WriteSamples (_fcbd );_fbdbb !=nil {return img ,_fbdbb ;};};return _bdaag (&_cfae ),nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_afgac *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _afgac .MediaBox !=nil {return _afgac .MediaBox ,nil ;};_dada :=_afgac .Parent ;for _dada !=nil {_bgbfb ,_afgca :=_aa .GetDict (_dada );if !_afgca {return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _faecc :=_bgbfb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_faecc !=nil {_cbbca ,_faade :=_aa .GetArray (_faecc );if !_faade {return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_abacg ,_feee :=NewPdfRectangle (*_cbbca );if _feee !=nil {return nil ,_feee ;};return _abacg ,nil ;};_dada =_bgbfb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fda .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// AddAnnotation appends `annot` to the list of page annotations.
func (_acdae *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _acdae ._ecgde ==nil {_acdae .GetAnnotations ();};_acdae ._ecgde =append (_acdae ._ecgde ,annot );};

// Height returns the height of `rect`.
func (_bcbga *PdfRectangle )Height ()float64 {return _ag .Abs (_bcbga .Ury -_bcbga .Lly )};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fgced FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fgced .Mask ()&^fl .Mask ())};func _acfc (_bdg *PdfPage )map[_aa .PdfObjectName ]_aa .PdfObject {_eeec :=make (map[_aa .PdfObjectName ]_aa .PdfObject );if _bdg .Resources ==nil {return _eeec ;};if _bdg .Resources .Font !=nil {if _beeb ,_gccf :=_aa .GetDict (_bdg .Resources .Font );_gccf {for _ ,_bdb :=range _beeb .Keys (){_eeec [_bdb ]=_beeb .Get (_bdb );};};};if _bdg .Resources .ExtGState !=nil {if _cdec ,_ggdd :=_aa .GetDict (_bdg .Resources .ExtGState );_ggdd {for _ ,_ageb :=range _cdec .Keys (){_eeec [_ageb ]=_cdec .Get (_ageb );};};};if _bdg .Resources .XObject !=nil {if _bcd ,_cabe :=_aa .GetDict (_bdg .Resources .XObject );_cabe {for _ ,_egga :=range _bcd .Keys (){_eeec [_egga ]=_bcd .Get (_egga );};};};if _bdg .Resources .Pattern !=nil {if _bdgd ,_gdd :=_aa .GetDict (_bdg .Resources .Pattern );_gdd {for _ ,_gee :=range _bdgd .Keys (){_eeec [_gee ]=_bdgd .Get (_gee );};};};if _bdg .Resources .Shading !=nil {if _eace ,_bfac :=_aa .GetDict (_bdg .Resources .Shading );_bfac {for _ ,_cbgd :=range _eace .Keys (){_eeec [_cbgd ]=_eace .Get (_cbgd );};};};if _bdg .Resources .ProcSet !=nil {if _geef ,_bbg :=_aa .GetDict (_bdg .Resources .ProcSet );_bbg {for _ ,_feade :=range _geef .Keys (){_eeec [_feade ]=_geef .Get (_feade );};};};if _bdg .Resources .Properties !=nil {if _add ,_ffce :=_aa .GetDict (_bdg .Resources .Properties );_ffce {for _ ,_bcce :=range _add .Keys (){_eeec [_bcce ]=_add .Get (_bcce );};};};return _eeec ;};var _ pdfFont =(*pdfFontSimple )(nil );

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _aa .PdfObject ;Name _aa .PdfObject ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _aa .PdfObject )(PdfColorspace ,error ){var _ebfg *_aa .PdfIndirectObject ;var _cebd *_aa .PdfObjectName ;var _eecg *_aa .PdfObjectArray ;if _debgc ,_ggg :=obj .(*_aa .PdfIndirectObject );_ggg {_ebfg =_debgc ;};obj =_aa .TraceToDirectObject (obj );switch _gedd :=obj .(type ){case *_aa .PdfObjectArray :_eecg =_gedd ;case *_aa .PdfObjectName :_cebd =_gedd ;};if _cebd !=nil {switch *_cebd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_ba .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cebd );return nil ,_bddd ;};};if _eecg !=nil &&_eecg .Len ()> 0{var _egde _aa .PdfObject =_ebfg ;if _ebfg ==nil {_egde =_eecg ;};if _edf ,_gbfd :=_aa .GetName (_eecg .Get (0));_gbfd {switch _edf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _eecg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _eecg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _eecg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _cfdc (_egde );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _acde (_egde );case "\u004c\u0061\u0062":return _cacbc (_egde );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _eefd (_egde );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bdbf (_egde );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _cfbee (_egde );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _acdf (_egde );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _aaeg (_egde );default:_ba .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_edf );};};};_ba .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// Y returns the value of the yellow component of the color.
func (_bec *PdfColorDeviceCMYK )Y ()float64 {return _bec [2]};var (_dffcg =_ce .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_eeaa =_ce .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_eagg =_ce .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_fcbf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_cgba ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_eedaa ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);func (_gfgba *PdfReader )newPdfAnnotationPolygonFromDict (_ead *_aa .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fdfa :=PdfAnnotationPolygon {};_ace ,_bgg :=_gfgba .newPdfAnnotationMarkupFromDict (_ead );if _bgg !=nil {return nil ,_bgg ;};_fdfa .PdfAnnotationMarkup =_ace ;_fdfa .Vertices =_ead .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fdfa .LE =_ead .Get ("\u004c\u0045");_fdfa .BS =_ead .Get ("\u0042\u0053");_fdfa .IC =_ead .Get ("\u0049\u0043");_fdfa .BE =_ead .Get ("\u0042\u0045");_fdfa .IT =_ead .Get ("\u0049\u0054");_fdfa .Measure =_ead .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fdfa ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_defff *PdfReader )GetIndirectObjectByNumber (number int )(_aa .PdfObject ,error ){_cbdac ,_bgbce :=_defff ._gbacd .LookupByNumber (number );return _cbdac ,_bgbce ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _aa .PdfObject ;BS _aa .PdfObject ;LE _aa .PdfObject ;IC _aa .PdfObject ;LL _aa .PdfObject ;LLE _aa .PdfObject ;Cap _aa .PdfObject ;IT _aa .PdfObject ;LLO _aa .PdfObject ;CP _aa .PdfObject ;Measure _aa .PdfObject ;CO _aa .PdfObject ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gea *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_cdbb :=0.3*_gea .R ()+0.59*_gea .G ()+0.11*_gea .B ();_cdbb =_ag .Min (_ag .Max (_cdbb ,0.0),1.0);return NewPdfColorDeviceGray (_cdbb );};

// ToPdfObject returns a stream object.
func (_eaebg *XObjectImage )ToPdfObject ()_aa .PdfObject {_cgcfa :=_eaebg ._fcbac ;_cbadc :=_cgcfa .PdfObjectDictionary ;if _eaebg .Filter !=nil {_cbadc =_eaebg .Filter .MakeStreamDict ();_cgcfa .PdfObjectDictionary =_cbadc ;};_cbadc .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_cbadc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0049\u006d\u0061g\u0065"));_cbadc .Set ("\u0057\u0069\u0064t\u0068",_aa .MakeInteger (*(_eaebg .Width )));_cbadc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aa .MakeInteger (*(_eaebg .Height )));if _eaebg .BitsPerComponent !=nil {_cbadc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aa .MakeInteger (*(_eaebg .BitsPerComponent )));};if _eaebg .ColorSpace !=nil {_cbadc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eaebg .ColorSpace .ToPdfObject ());};_cbadc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_eaebg .Intent );_cbadc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_eaebg .ImageMask );_cbadc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_eaebg .Mask );_gbdb :=_cbadc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _eaebg .Decode ==nil &&_gbdb {_cbadc .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _eaebg .Decode !=nil {_cbadc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eaebg .Decode );};_cbadc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_eaebg .Interpolate );_cbadc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_eaebg .Alternatives );_cbadc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_eaebg .SMask );_cbadc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_eaebg .SMaskInData );_cbadc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_eaebg .Matte );_cbadc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eaebg .Name );_cbadc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eaebg .StructParent );_cbadc .SetIfNotNil ("\u0049\u0044",_eaebg .ID );_cbadc .SetIfNotNil ("\u004f\u0050\u0049",_eaebg .OPI );_cbadc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eaebg .Metadata );_cbadc .SetIfNotNil ("\u004f\u0043",_eaebg .OC );_cbadc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aa .MakeInteger (int64 (len (_eaebg .Stream ))));_cgcfa .Stream =_eaebg .Stream ;return _cgcfa ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_eecd []byte ;_ddfac []float64 ;};

// SetDate sets the `M` field of the signature.
func (_cbage *PdfSignature )SetDate (date _ab .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_cbage .M =_aa .MakeString (date .Format (format ));};type fontFile struct{_ecga string ;_gagac string ;_ffbg _af .SimpleEncoder ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _aa .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _aa .PdfObject ;Contents _aa .PdfObject ;Rotate *int64 ;Group _aa .PdfObject ;Thumb _aa .PdfObject ;B _aa .PdfObject ;Dur _aa .PdfObject ;Trans _aa .PdfObject ;AA _aa .PdfObject ;Metadata _aa .PdfObject ;PieceInfo _aa .PdfObject ;StructParents _aa .PdfObject ;ID _aa .PdfObject ;PZ _aa .PdfObject ;SeparationInfo _aa .PdfObject ;Tabs _aa .PdfObject ;TemplateInstantiated _aa .PdfObject ;PresSteps _aa .PdfObject ;UserUnit _aa .PdfObject ;VP _aa .PdfObject ;Annots _aa .PdfObject ;_ecgde []*PdfAnnotation ;_bebd *_aa .PdfObjectDictionary ;_gacge *_aa .PdfIndirectObject ;_cdecc *PdfReader ;};func (_gdg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_eaed *PdfAnnotationMarkup )appendToPdfDictionary (_eaaf *_aa .PdfObjectDictionary ){_eaaf .SetIfNotNil ("\u0054",_eaed .T );if _eaed .Popup !=nil {_eaaf .Set ("\u0050\u006f\u0070u\u0070",_eaed .Popup .ToPdfObject ());};_eaaf .SetIfNotNil ("\u0043\u0041",_eaed .CA );_eaaf .SetIfNotNil ("\u0052\u0043",_eaed .RC );_eaaf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eaed .CreationDate );_eaaf .SetIfNotNil ("\u0049\u0052\u0054",_eaed .IRT );_eaaf .SetIfNotNil ("\u0053\u0075\u0062\u006a",_eaed .Subj );_eaaf .SetIfNotNil ("\u0052\u0054",_eaed .RT );_eaaf .SetIfNotNil ("\u0049\u0054",_eaed .IT );_eaaf .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_eaed .ExData );};

// ToInteger convert to an integer format.
func (_bbfa *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_fdbd :=_ag .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fdbd *_bbfa .A ()),uint32 (_fdbd *_bbfa .B ()),uint32 (_fdbd *_bbfa .C ())};};func (_affae *PdfAppender )replaceObject (_agaf ,_adgf _aa .PdfObject ){switch _cecg :=_agaf .(type ){case *_aa .PdfIndirectObject :_affae ._dcbb [_adgf ]=_cecg .ObjectNumber ;case *_aa .PdfObjectStream :_affae ._dcbb [_adgf ]=_cecg .ObjectNumber ;};};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cccae :=&PdfPageResources {};_cccae ._dcgg =_aa .MakeDict ();return _cccae ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_cacfb ,_feba :=_fa .NewStdFontByName (HelveticaName );if !_feba {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_efgae :=_facg (_cacfb );return &PdfFont {_acdfa :&_efgae };};func _abcce (_fbgfg *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fbgfg }};

// ToPdfObject implements interface PdfModel.
func (_cggg *PdfFilespec )ToPdfObject ()_aa .PdfObject {_acdag :=_cggg .getDict ();_acdag .Clear ();_acdag .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_acdag .SetIfNotNil ("\u0046\u0053",_cggg .FS );_acdag .SetIfNotNil ("\u0046",_cggg .F );_acdag .SetIfNotNil ("\u0055\u0046",_cggg .UF );_acdag .SetIfNotNil ("\u0044\u004f\u0053",_cggg .DOS );_acdag .SetIfNotNil ("\u004d\u0061\u0063",_cggg .Mac );_acdag .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cggg .Unix );_acdag .SetIfNotNil ("\u0049\u0044",_cggg .ID );_acdag .SetIfNotNil ("\u0056",_cggg .V );_acdag .SetIfNotNil ("\u0045\u0046",_cggg .EF );_acdag .SetIfNotNil ("\u0052\u0046",_cggg .RF );_acdag .SetIfNotNil ("\u0044\u0065\u0073\u0063",_cggg .Desc );_acdag .SetIfNotNil ("\u0043\u0049",_cggg .CI );return _cggg ._bfeff ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gdfbbg *PdfOutline )ToPdfObject ()_aa .PdfObject {_ddce :=_gdfbbg ._aagc ;_bacd :=_ddce .PdfObject .(*_aa .PdfObjectDictionary );_bacd .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _gdfbbg .First !=nil {_bacd .Set ("\u0046\u0069\u0072s\u0074",_gdfbbg .First .ToPdfObject ());};if _gdfbbg .Last !=nil {_bacd .Set ("\u004c\u0061\u0073\u0074",_gdfbbg .Last .GetContext ().GetContainingPdfObject ());};if _gdfbbg .Parent !=nil {_bacd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdfbbg .Parent .GetContext ().GetContainingPdfObject ());};if _gdfbbg .Count !=nil {_bacd .Set ("\u0043\u006f\u0075n\u0074",_aa .MakeInteger (*_gdfbbg .Count ));};return _ddce ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_dabdc *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _dabdc .RunesToCharcodeBytes ([]rune (str ));};

// ToPdfObject implements interface PdfModel.
func (_bdcg *PdfActionLaunch )ToPdfObject ()_aa .PdfObject {_bdcg .PdfAction .ToPdfObject ();_aga :=_bdcg ._bg ;_ebd :=_aga .PdfObject .(*_aa .PdfObjectDictionary );_ebd .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeLaunch )));if _bdcg .F !=nil {_ebd .Set ("\u0046",_bdcg .F .ToPdfObject ());};_ebd .SetIfNotNil ("\u0057\u0069\u006e",_bdcg .Win );_ebd .SetIfNotNil ("\u004d\u0061\u0063",_bdcg .Mac );_ebd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bdcg .Unix );_ebd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bdcg .NewWindow );return _aga ;};

// WriteToFile writes the output PDF to file.
func (_ggeac *PdfWriter )WriteToFile (outputFilePath string )error {_bdcda ,_gegfdb :=_bf .Create (outputFilePath );if _gegfdb !=nil {return _gegfdb ;};defer _bdcda .Close ();return _ggeac .Write (_bdcda );};

// String returns a human readable description of `fontfile`.
func (_cagf *fontFile )String ()string {_gcbe :="\u005b\u004e\u006f\u006e\u0065\u005d";if _cagf ._ffbg !=nil {_gcbe =_cagf ._ffbg .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_cagf ._ecga ,_gcbe );};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_beab :=PdfColorCalGray (grayVal );return &_beab ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_aagea *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _aagea .UnderlyingCS ==nil {return nil ,_fda .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _aagea .UnderlyingCS .ColorFromFloats (vals );};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_bdaf *PdfReader )GetEncryptionMethod ()string {_ddcbc :=_bdaf ._gbacd .GetCrypter ();return _ddcbc .String ();};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_aa .PdfObjectArray ;Domain *_aa .PdfObjectArray ;Function []PdfFunction ;Extend *_aa .PdfObjectArray ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fcacag *PdfOutlineTreeNode )GetContainingPdfObject ()_aa .PdfObject {return _fcacag .GetContext ().GetContainingPdfObject ();};

// ToPdfObject returns the PDF representation of the page resources.
func (_cgfbf *PdfPageResources )ToPdfObject ()_aa .PdfObject {_ffcfa :=_cgfbf ._dcgg ;_ffcfa .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cgfbf .ExtGState );if _cgfbf ._eage !=nil {_cgfbf .ColorSpace =_cgfbf ._eage .ToPdfObject ();};_ffcfa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cgfbf .ColorSpace );_ffcfa .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_cgfbf .Pattern );_ffcfa .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cgfbf .Shading );_ffcfa .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_cgfbf .XObject );_ffcfa .SetIfNotNil ("\u0046\u006f\u006e\u0074",_cgfbf .Font );_ffcfa .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_cgfbf .ProcSet );_ffcfa .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_cgfbf .Properties );return _ffcfa ;};func _fabebb ()string {_beea .Lock ();defer _beea .Unlock ();_gaegg :=_aee .GetLicenseKey ();if len (_efcaa )> 0&&(_gaegg .IsLicensed ()||_ddaec ){return _efcaa ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_abgag (),_gaegg .TypeToString ());};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _aa .PdfObject ;T _aa .PdfObject ;Operation _aa .PdfObject ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_bbbg :=NewPdfAnnotation ();_ecb :=&PdfAnnotationFileAttachment {};_ecb .PdfAnnotation =_bbbg ;_ecb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbbg .SetContext (_ecb );return _ecb ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bgedd *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gfdff :=_bgedd .actualFont ();if _gfdff ==nil {_ba .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bgedd ._acdfa );return _fa .CharMetrics {},false ;};if _aegeb ,_fbcg :=_gfdff .GetRuneMetrics (r );_fbcg {return _aegeb ,true ;};if _dbdfde ,_gbgb :=_bgedd .GetFontDescriptor ();_gbgb ==nil &&_dbdfde !=nil {return _fa .CharMetrics {Wx :_dbdfde ._gdfg },true ;};_ba .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bgedd );return _fa .CharMetrics {},false ;};

// WriteToFile writes the Appender output to file specified by path.
func (_eada *PdfAppender )WriteToFile (outputPath string )error {_cbec ,_cgdg :=_bf .Create (outputPath );if _cgdg !=nil {return _cgdg ;};defer _cbec .Close ();return _eada .Write (_cbec );};

// Encoder returns the font's text encoder.
func (_dabc *pdfFontSimple )Encoder ()_af .TextEncoder {if _dabc ._ddbeg !=nil {return _dabc ._ddbeg ;};if _dabc ._dcfgf !=nil {return _dabc ._dcfgf ;};_edfd ,_ :=_af .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _edfd ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_bcgb *PdfReader )Inspect ()(map[string ]int ,error ){return _bcgb ._gbacd .Inspect ()};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdgecd *PdfShadingType4 )ToPdfObject ()_aa .PdfObject {_gdgecd .PdfShading .ToPdfObject ();_decfb ,_bbagg :=_gdgecd .getShadingDict ();if _bbagg !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gdgecd .BitsPerCoordinate !=nil {_decfb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gdgecd .BitsPerCoordinate );};if _gdgecd .BitsPerComponent !=nil {_decfb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gdgecd .BitsPerComponent );};if _gdgecd .BitsPerFlag !=nil {_decfb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gdgecd .BitsPerFlag );};if _gdgecd .Decode !=nil {_decfb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gdgecd .Decode );};if _gdgecd .Function !=nil {if len (_gdgecd .Function )==1{_decfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdgecd .Function [0].ToPdfObject ());}else {_febgdf :=_aa .MakeArray ();for _ ,_ebfc :=range _gdgecd .Function {_febgdf .Append (_ebfc .ToPdfObject ());};_decfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_febgdf );};};return _gdgecd ._fbdfa ;};

// ToPdfObject implements interface PdfModel.
func (_ed *PdfActionURI )ToPdfObject ()_aa .PdfObject {_ed .PdfAction .ToPdfObject ();_gge :=_ed ._bg ;_ec :=_gge .PdfObject .(*_aa .PdfObjectDictionary );_ec .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeURI )));_ec .SetIfNotNil ("\u0055\u0052\u0049",_ed .URI );_ec .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ed .IsMap );return _gge ;};

// G returns the value of the green component of the color.
func (_bgea *PdfColorDeviceRGB )G ()float64 {return _bgea [1]};

// HasExtGState checks if ExtGState name is available.
func (_gaafb *PdfPage )HasExtGState (name _aa .PdfObjectName )bool {if _gaafb .Resources ==nil {return false ;};if _gaafb .Resources .ExtGState ==nil {return false ;};_deddd ,_eeefa :=_aa .TraceToDirectObject (_gaafb .Resources .ExtGState ).(*_aa .PdfObjectDictionary );if !_eeefa {_ba .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aa .TraceToDirectObject (_gaafb .Resources .ExtGState ));return false ;};_egbfe :=_deddd .Get (name );_ddec :=_egbfe !=nil ;return _ddec ;};func (_daeaf *PdfReader )newPdfAnnotationWatermarkFromDict (_cfg *_aa .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_gafc :=PdfAnnotationWatermark {};_gafc .FixedPrint =_cfg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_gafc ,nil ;};

// String returns a string representation of the field.
func (_adabe *PdfField )String ()string {if _fecgb ,_cbbd :=_adabe .ToPdfObject ().(*_aa .PdfIndirectObject );_cbbd {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_adabe ._afdff ,_fecgb .PdfObject .String ());};return "";};func (_dgaf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func (_efgb *PdfReader )flattenFieldsWithOpts (_geed bool ,_fdgf FieldAppearanceGenerator ,_bfacd *FieldFlattenOpts )error {if _bfacd ==nil {_bfacd =&FieldFlattenOpts {};};var _egdae bool ;_fdab :=map[*PdfAnnotation ]bool {};{var _febee []*PdfField ;_fcgf :=_efgb .AcroForm ;if _fcgf !=nil {if _bfacd .FilterFunc !=nil {_febee =_fcgf .filteredFields (_bfacd .FilterFunc ,true );_egdae =_fcgf .Fields !=nil &&len (*_fcgf .Fields )> 0;}else {_febee =_fcgf .AllFields ();};};for _ ,_cged :=range _febee {for _ ,_bfde :=range _cged .Annotations {_fdab [_bfde .PdfAnnotation ]=_cged .V !=nil ;if _fdgf !=nil {_cdafg ,_bfcdd :=_fdgf .GenerateAppearanceDict (_fcgf ,_cged ,_bfde );if _bfcdd !=nil {return _bfcdd ;};_bfde .AP =_cdafg ;};};};};if _geed {for _ ,_fcec :=range _efgb .PageList {_ddaa ,_bead :=_fcec .GetAnnotations ();if _bead !=nil {return _bead ;};for _ ,_abged :=range _ddaa {_fdab [_abged ]=true ;};};};for _ ,_dfgg :=range _efgb .PageList {var _dcadb []*PdfAnnotation ;if _fdgf !=nil {if _gcce :=_fdgf .WrapContentStream (_dfgg );_gcce !=nil {return _gcce ;};};_afbb ,_agcdb :=_dfgg .GetAnnotations ();if _agcdb !=nil {return _agcdb ;};for _ ,_gccff :=range _afbb {_gfeg ,_ddaae :=_fdab [_gccff ];if !_ddaae &&_bfacd .AnnotFilterFunc !=nil {if _ ,_cbgdg :=_gccff .GetContext ().(*PdfAnnotationWidget );!_cbgdg {_ddaae =_bfacd .AnnotFilterFunc (_gccff );};};if !_ddaae {_dcadb =append (_dcadb ,_gccff );continue ;};switch _gccff .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_bbcb ,_dbed ,_gfaec :=_acgb (_gccff );if _gfaec !=nil {if !_gfeg {_ba .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_gfaec );continue ;};if _bbcb ==nil {continue ;};_bddbe :=_dfgg .Resources .GenerateXObjectName ();_dfgg .Resources .SetXObjectFormByName (_bddbe ,_bbcb );_bebc :=_ag .Min (_dbed .Llx ,_dbed .Urx );_dfcef :=_ag .Min (_dbed .Lly ,_dbed .Ury );var _bgeb []string ;_bgeb =append (_bgeb ,"\u0071");_bgeb =append (_bgeb ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_bebc ,_dfcef ));_bgeb =append (_bgeb ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bddbe .String ()));_bgeb =append (_bgeb ,"\u0051");_fdcge :=_ga .Join (_bgeb ,"\u000a");_gfaec =_dfgg .AppendContentStream (_fdcge );if _gfaec !=nil {return _gfaec ;};if _bbcb .Resources !=nil {_baab ,_cdcbe :=_aa .GetDict (_bbcb .Resources .Font );if _cdcbe {for _ ,_acdbd :=range _baab .Keys (){if !_dfgg .Resources .HasFontByName (_acdbd ){_dfgg .Resources .SetFontByName (_acdbd ,_baab .Get (_acdbd ));};};};};};if len (_dcadb )> 0{_dfgg ._ecgde =_dcadb ;}else {_dfgg ._ecgde =[]*PdfAnnotation {};};};if !_egdae {_efgb .AcroForm =nil ;};return nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _aa .PdfObject ;T3DV _aa .PdfObject ;T3DA _aa .PdfObject ;T3DI _aa .PdfObject ;T3DB _aa .PdfObject ;};var _bgggc =_ce .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_ggfd *DSS )addCerts (_ddcg [][]byte )([]*_aa .PdfObjectStream ,error ){return _ggfd .add (&_ggfd .Certs ,_ggfd ._dbcf ,_ddcg );};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_eedgb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _aa .GetNumberAsFloat (_eedgb .CapHeight );};func (_dbb *PdfAppender )mergeResources (_dbef ,_adde _aa .PdfObject ,_ccff map[_aa .PdfObjectName ]_aa .PdfObjectName )_aa .PdfObject {if _adde ==nil &&_dbef ==nil {return nil ;};if _adde ==nil {return _dbef ;};_aagfg ,_dece :=_aa .GetDict (_adde );if !_dece {return _dbef ;};if _dbef ==nil {_cabb :=_aa .MakeDict ();_cabb .Merge (_aagfg );return _adde ;};_bfca ,_dece :=_aa .GetDict (_dbef );if !_dece {_ba .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_bfca =_aa .MakeDict ();};for _ ,_caeg :=range _aagfg .Keys (){if _cgaa ,_gbbgc :=_ccff [_caeg ];_gbbgc {_bfca .Set (_cgaa ,_aagfg .Get (_caeg ));}else {_bfca .Set (_caeg ,_aagfg .Get (_caeg ));};};return _bfca ;};func (_ccagc *PdfWriter )updateObjectNumbers (){_bbad :=_ccagc .ObjNumOffset ;_fecde :=0;for _ ,_cbece :=range _ccagc ._gecd {_bbde :=int64 (_fecde +1+_bbad );_bcceg :=true ;if _ccagc ._dgfbd {if _aafce ,_faffb :=_ccagc ._edff [_cbece ];_faffb {_bbde =_aafce ;_bcceg =false ;};};switch _ceag :=_cbece .(type ){case *_aa .PdfIndirectObject :_ceag .ObjectNumber =_bbde ;_ceag .GenerationNumber =0;case *_aa .PdfObjectStream :_ceag .ObjectNumber =_bbde ;_ceag .GenerationNumber =0;case *_aa .PdfObjectStreams :_ceag .ObjectNumber =_bbde ;_ceag .GenerationNumber =0;default:_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ceag );continue ;};if _bcceg {_fecde ++;};};_ddgef :=func (_aadad _aa .PdfObject )int64 {switch _gcge :=_aadad .(type ){case *_aa .PdfIndirectObject :return _gcge .ObjectNumber ;case *_aa .PdfObjectStream :return _gcge .ObjectNumber ;case *_aa .PdfObjectStreams :return _gcge .ObjectNumber ;};return 0;};_fg .SliceStable (_ccagc ._gecd ,func (_aeace ,_cgfc int )bool {return _ddgef (_ccagc ._gecd [_aeace ])< _ddgef (_ccagc ._gecd [_cgfc ])});};

// ToPdfObject implements interface PdfModel.
func (_gcgc *PdfAnnotationScreen )ToPdfObject ()_aa .PdfObject {_gcgc .PdfAnnotation .ToPdfObject ();_acd :=_gcgc ._dde ;_bceg :=_acd .PdfObject .(*_aa .PdfObjectDictionary );_bceg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_bceg .SetIfNotNil ("\u0054",_gcgc .T );_bceg .SetIfNotNil ("\u004d\u004b",_gcgc .MK );_bceg .SetIfNotNil ("\u0041",_gcgc .A );_bceg .SetIfNotNil ("\u0041\u0041",_gcgc .AA );return _acd ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aa .PdfObject ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _aa .PdfObject ;V _aa .PdfObject ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_fdfb _gb .ReadSeeker ;_gdeg *_aa .PdfParser ;_edc *PdfReader ;Reader *PdfReader ;_fdcc []*PdfPage ;_cabd *PdfAcroForm ;_ddca *DSS ;_eddb _aa .XrefTable ;_gcd int64 ;_afad int ;_dbae []_aa .PdfObject ;_badf map[_aa .PdfObject ]struct{};_dcbb map[_aa .PdfObject ]int64 ;_dfag map[_aa .PdfObject ]struct{};_fdce map[_aa .PdfObject ]struct{};_fdef int64 ;_gcfdc bool ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ebegc *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ba .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_fda .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_bggd *PdfAppender )UpdatePage (page *PdfPage ){_bggd .updateObjectsDeep (page .ToPdfObject (),nil )};func (_gde *PdfReader )newPdfAnnotationRichMediaFromDict (_agd *_aa .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_agcb :=&PdfAnnotationRichMedia {};_agcb .RichMediaSettings =_agd .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_agcb .RichMediaContent =_agd .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _agcb ,nil ;};func (_ccd *PdfReader )newPdfActionHideFromDict (_cff *_aa .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cff .Get ("\u0054"),H :_cff .Get ("\u0048")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_egad *PdfAnnotationFreeText )ToPdfObject ()_aa .PdfObject {_egad .PdfAnnotation .ToPdfObject ();_aegc :=_egad ._dde ;_cde :=_aegc .PdfObject .(*_aa .PdfObjectDictionary );_egad .PdfAnnotationMarkup .appendToPdfDictionary (_cde );_cde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_cde .SetIfNotNil ("\u0044\u0041",_egad .DA );_cde .SetIfNotNil ("\u0051",_egad .Q );_cde .SetIfNotNil ("\u0052\u0043",_egad .RC );_cde .SetIfNotNil ("\u0044\u0053",_egad .DS );_cde .SetIfNotNil ("\u0043\u004c",_egad .CL );_cde .SetIfNotNil ("\u0049\u0054",_egad .IT );_cde .SetIfNotNil ("\u0042\u0045",_egad .BE );_cde .SetIfNotNil ("\u0052\u0044",_egad .RD );_cde .SetIfNotNil ("\u0042\u0053",_egad .BS );_cde .SetIfNotNil ("\u004c\u0045",_egad .LE );return _aegc ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _aa .PdfObject ;IsMap _aa .PdfObject ;};func _aedc (_bbaca *_aa .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ecgdee :=PdfShadingType1 {};if _abgfg :=_bbaca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_abgfg !=nil {_abgfg =_aa .TraceToDirectObject (_abgfg );_baede ,_gfcgf :=_abgfg .(*_aa .PdfObjectArray );if !_gfcgf {_ba .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abgfg );return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecgdee .Domain =_baede ;};if _gdfc :=_bbaca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gdfc !=nil {_gdfc =_aa .TraceToDirectObject (_gdfc );_gfagf ,_bdaba :=_gdfc .(*_aa .PdfObjectArray );if !_bdaba {_ba .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdfc );return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecgdee .Matrix =_gfagf ;};_gadde :=_bbaca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gadde ==nil {_ba .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_ecgdee .Function =[]PdfFunction {};if _beaga ,_ggfb :=_gadde .(*_aa .PdfObjectArray );_ggfb {for _ ,_dcbdd :=range _beaga .Elements (){_dccd ,_gafdd :=_dccg (_dcbdd );if _gafdd !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gafdd );return nil ,_gafdd ;};_ecgdee .Function =append (_ecgdee .Function ,_dccd );};}else {_adgde ,_acbf :=_dccg (_gadde );if _acbf !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acbf );return nil ,_acbf ;};_ecgdee .Function =append (_ecgdee .Function ,_adgde );};return &_ecgdee ,nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gb .ReadSeeker )(*PdfFont ,error ){_cede ,_bdeg :=_fd .ReadAll (r );if _bdeg !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bdeg );return nil ,_bdeg ;};_dgbdb ,_bdeg :=_fa .TtfParse (_dc .NewReader (_cede ));if _bdeg !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bdeg );return nil ,_bdeg ;};_fgdaf :=&pdfCIDFontType2 {fontCommon :fontCommon {_cbae :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_aa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_cddb :=make ([]rune ,0,len (_dgbdb .Chars ));for _ebdf :=range _dgbdb .Chars {_cddb =append (_cddb ,_ebdf );};_fg .Slice (_cddb ,func (_dcdcg ,_dead int )bool {return _cddb [_dcdcg ]< _cddb [_dead ]});_cggea :=1000.0/float64 (_dgbdb .UnitsPerEm );if len (_dgbdb .Widths )<=0{return nil ,_fda .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_gcadd :=_cggea *float64 (_dgbdb .Widths [0]);_gacg :=make (map[rune ]int );for _ ,_geddc :=range _cddb {_bgcg :=_dgbdb .Chars [_geddc ];_ccaa :=_cggea *float64 (_dgbdb .Widths [_bgcg ]);_gacg [_geddc ]=int (_ccaa );};_fgdaf ._cddaf =_gacg ;_fgdaf .DW =_aa .MakeInteger (int64 (_gcadd ));_fggc :=_bfcdg (_cddb ,_gacg ,_dgbdb .Chars );_fgdaf .W =_aa .MakeIndirectObject (_fggc );_fcaca :=_aa .MakeDict ();_fcaca .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_aa .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_fcaca .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_aa .MakeString ("\u0041\u0064\u006fb\u0065"));_fcaca .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_aa .MakeInteger (0));_fgdaf .CIDSystemInfo =_fcaca ;_eeebb :=&PdfFontDescriptor {FontName :_aa .MakeName (_dgbdb .PostScriptName ),Ascent :_aa .MakeFloat (_cggea *float64 (_dgbdb .TypoAscender )),Descent :_aa .MakeFloat (_cggea *float64 (_dgbdb .TypoDescender )),CapHeight :_aa .MakeFloat (_cggea *float64 (_dgbdb .CapHeight )),FontBBox :_aa .MakeArrayFromFloats ([]float64 {_cggea *float64 (_dgbdb .Xmin ),_cggea *float64 (_dgbdb .Ymin ),_cggea *float64 (_dgbdb .Xmax ),_cggea *float64 (_dgbdb .Ymax )}),ItalicAngle :_aa .MakeFloat (_dgbdb .ItalicAngle ),MissingWidth :_aa .MakeFloat (_cggea *float64 (_dgbdb .Widths [0]))};_cbdab ,_bdeg :=_aa .MakeStream (_cede ,_aa .NewFlateEncoder ());if _bdeg !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bdeg );return nil ,_bdeg ;};_cbdab .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aa .MakeInteger (int64 (len (_cede ))));_eeebb .FontFile2 =_cbdab ;if _dgbdb .Bold {_eeebb .StemV =_aa .MakeInteger (120);}else {_eeebb .StemV =_aa .MakeInteger (70);};_aceaa :=_bafcb ;if _dgbdb .IsFixedPitch {_aceaa |=_acbb ;};if _dgbdb .ItalicAngle !=0{_aceaa |=_cbded ;};_eeebb .Flags =_aa .MakeInteger (int64 (_aceaa ));_fgdaf ._debe =_dgbdb .PostScriptName ;_fgdaf ._edga =_eeebb ;_agfd :=pdfFontType0 {fontCommon :fontCommon {_cbae :"\u0054\u0079\u0070e\u0030",_debe :_dgbdb .PostScriptName },DescendantFont :&PdfFont {_acdfa :_fgdaf },Encoding :_aa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_adgba :_dgbdb .NewEncoder ()};if len (_dgbdb .Chars )> 0{_cabda :=make (map[_dgg .CharCode ]rune ,len (_dgbdb .Chars ));for _eabb ,_gefeg :=range _dgbdb .Chars {_ccfbb :=_dgg .CharCode (_gefeg );if _caffa ,_bbfg :=_cabda [_ccfbb ];!_bbfg ||(_bbfg &&_caffa > _eabb ){_cabda [_ccfbb ]=_eabb ;};};_agfd ._dbacb =_dgg .NewToUnicodeCMap (_cabda );};_defgd :=PdfFont {_acdfa :&_agfd };return &_defgd ,nil ;};func _ggga (_ggebf _aa .PdfObject )(*fontFile ,error ){_ba .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ggebf );_caace :=&fontFile {};_ggebf =_aa .TraceToDirectObject (_ggebf );_gafafb ,_bedf :=_ggebf .(*_aa .PdfObjectStream );if !_bedf {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ggebf );return nil ,_aa .ErrTypeError ;};_bgaf :=_gafafb .PdfObjectDictionary ;_eefgg ,_eead :=_aa .DecodeStream (_gafafb );if _eead !=nil {return nil ,_eead ;};_ecbef ,_bedf :=_aa .GetNameVal (_bgaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bedf {_caace ._gagac =_ecbef ;if _ecbef =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ba .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_cfgd ,_ :=_aa .GetIntVal (_bgaf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_gcgb ,_ :=_aa .GetIntVal (_bgaf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cfgd > len (_eefgg ){_cfgd =len (_eefgg );};if _cfgd +_gcgb > len (_eefgg ){_gcgb =len (_eefgg )-_cfgd ;};_ebgea :=_eefgg [:_cfgd ];var _dgbab []byte ;if _gcgb > 0{_dgbab =_eefgg [_cfgd :_cfgd +_gcgb ];};if _cfgd > 0&&_gcgb > 0{_geba :=_caace .loadFromSegments (_ebgea ,_dgbab );if _geba !=nil {return nil ,_geba ;};};return _caace ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_aa .PdfObject ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _aa .PdfObject )(_aa .PdfObjectName ,error ){var _abeg *_aa .PdfObjectName ;var _caaef *_aa .PdfObjectArray ;if _gfead ,_gcgce :=obj .(*_aa .PdfIndirectObject );_gcgce {if _fgdgg ,_gfbf :=_gfead .PdfObject .(*_aa .PdfObjectArray );_gfbf {_caaef =_fgdgg ;}else if _caegg ,_egea :=_gfead .PdfObject .(*_aa .PdfObjectName );_egea {_abeg =_caegg ;};}else if _ecfcd ,_aadd :=obj .(*_aa .PdfObjectArray );_aadd {_caaef =_ecfcd ;}else if _aage ,_dcfa :=obj .(*_aa .PdfObjectName );_dcfa {_abeg =_aage ;};if _abeg !=nil {switch *_abeg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_abeg ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_abeg ,nil ;};};if _caaef !=nil &&_caaef .Len ()> 0{if _abfe ,_fgda :=_caaef .Get (0).(*_aa .PdfObjectName );_fgda {switch *_abfe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _caaef .Len ()==1{return *_abfe ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_abfe ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_abfe ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_abfe ,nil ;};};};return "",nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_dgeg :=NewPdfAnnotation ();_gdbf :=&PdfAnnotationText {};_gdbf .PdfAnnotation =_dgeg ;_gdbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgeg .SetContext (_gdbf );return _gdbf ;};func _ebcab (_eecff *_aa .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dbcfc :=PdfShadingType5 {};_dbbgg :=_eecff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dbbgg ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_dbabb ,_fbgba :=_dbbgg .(*_aa .PdfObjectInteger );if !_fbgba {_ba .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbbgg );return nil ,_aa .ErrTypeError ;};_dbcfc .BitsPerCoordinate =_dbabb ;_dbbgg =_eecff .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dbbgg ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_dbabb ,_fbgba =_dbbgg .(*_aa .PdfObjectInteger );if !_fbgba {_ba .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dbbgg );return nil ,_aa .ErrTypeError ;};_dbcfc .BitsPerComponent =_dbabb ;_dbbgg =_eecff .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _dbbgg ==nil {_ba .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_dbabb ,_fbgba =_dbbgg .(*_aa .PdfObjectInteger );if !_fbgba {_ba .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dbbgg );return nil ,_aa .ErrTypeError ;};_dbcfc .VerticesPerRow =_dbabb ;_dbbgg =_eecff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dbbgg ==nil {_ba .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_bacbc ,_fbgba :=_dbbgg .(*_aa .PdfObjectArray );if !_fbgba {_ba .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbbgg );return nil ,_aa .ErrTypeError ;};_dbcfc .Decode =_bacbc ;if _bdgdg :=_eecff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bdgdg !=nil {_dbcfc .Function =[]PdfFunction {};if _ecff ,_fgbag :=_bdgdg .(*_aa .PdfObjectArray );_fgbag {for _ ,_ffbda :=range _ecff .Elements (){_aagba ,_faaeb :=_dccg (_ffbda );if _faaeb !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_faaeb );return nil ,_faaeb ;};_dbcfc .Function =append (_dbcfc .Function ,_aagba );};}else {_gbdge ,_ggead :=_dccg (_bdgdg );if _ggead !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggead );return nil ,_ggead ;};_dbcfc .Function =append (_dbcfc .Function ,_gbdge );};};return &_dbcfc ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_fa .StdFontName ;

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_ccge *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _ccge .fill (provider ,appGen );};type fontCommon struct{_debe string ;_cbae string ;_caaca string ;_bgdfb _aa .PdfObject ;_dbacb *_dgg .CMap ;_edga *PdfFontDescriptor ;_baeg int64 ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_fa .CharMetrics ;

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ggebe *pdfCIDFontType0 )ToPdfObject ()_aa .PdfObject {return _aa .MakeNull ()};type pdfFont interface{_fa .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_aa .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};var (_beea _c .Mutex ;_bdegd ="";_deae _ab .Time ;_gcgfg ="";_bdddbe ="";_affbfb _ab .Time ;_efcaa ="";_adafa ="";_ebefac ="";);

// ToPdfObject returns the PDF representation of the colorspace.
func (_egdcb *PdfPageResourcesColorspaces )ToPdfObject ()_aa .PdfObject {_ddfee :=_aa .MakeDict ();for _ ,_gfafff :=range _egdcb .Names {_ddfee .Set (_aa .PdfObjectName (_gfafff ),_egdcb .Colorspaces [_gfafff ].ToPdfObject ());};if _egdcb ._ebdd !=nil {_egdcb ._ebdd .PdfObject =_ddfee ;return _egdcb ._ebdd ;};return _ddfee ;};func (_bgcc *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// IsEncrypted returns true if the PDF file is encrypted.
func (_decebc *PdfReader )IsEncrypted ()(bool ,error ){return _decebc ._gbacd .IsEncrypted ()};func _gbegg (_bafcf []*_aa .PdfObjectStream )*_aa .PdfObjectArray {if len (_bafcf )==0{return nil ;};_dddd :=make ([]_aa .PdfObject ,0,len (_bafcf ));for _ ,_fcfae :=range _bafcf {_dddd =append (_dddd ,_fcfae );};return _aa .MakeArray (_dddd ...);};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dfeef *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _beeaa ()string {_beea .Lock ();defer _beea .Unlock ();return _ebefac };func _ebcg ()string {_beea .Lock ();defer _beea .Unlock ();if len (_gcgfg )> 0{return _gcgfg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func _cgaef (_cdgd *_aa .PdfIndirectObject )(*PdfOutline ,error ){_cbfd ,_feded :=_cdgd .PdfObject .(*_aa .PdfObjectDictionary );if !_feded {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fgac :=NewPdfOutline ();if _dedda :=_cbfd .Get ("\u0054\u0079\u0070\u0065");_dedda !=nil {_bgfef ,_ddccae :=_dedda .(*_aa .PdfObjectName );if _ddccae {if *_bgfef !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_bgfef );};};};if _geaa :=_cbfd .Get ("\u0043\u006f\u0075n\u0074");_geaa !=nil {_fgbfbf ,_ddbb :=_aa .GetNumberAsInt64 (_geaa );if _ddbb !=nil {return nil ,_ddbb ;};_fgac .Count =&_fgbfbf ;};return _fgac ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _aa .PdfObject ;};func (_efd *PdfReader )newPdfActionGotoFromDict (_gfe *_aa .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_gfe .Get ("\u0044")},nil ;};func _fdee (_cefag *[]*PdfField ,_fcaeb FieldFilterFunc ,_afedb bool )[]*PdfField {if _cefag ==nil {return nil ;};_gdgg :=*_cefag ;if len (*_cefag )==0{return nil ;};_dggfd :=_gdgg [:0];if _fcaeb ==nil {_fcaeb =func (*PdfField )bool {return true };};var _fagba []*PdfField ;for _ ,_agdbg :=range _gdgg {_abaca :=_fcaeb (_agdbg );if _abaca {_fagba =append (_fagba ,_agdbg );if len (_agdbg .Kids )> 0{_fagba =append (_fagba ,_fdee (&_agdbg .Kids ,_fcaeb ,_afedb )...);};};if !_afedb ||!_abaca ||len (_agdbg .Kids )> 0{_dggfd =append (_dggfd ,_agdbg );};};*_cefag =_dggfd ;return _fagba ;};func (_dbeag *PdfReader )traverseObjectData (_cgff _aa .PdfObject )error {return _aa .ResolveReferencesDeep (_cgff ,_dbeag ._fdaec );};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bdddb *PdfPageResources )GetXObjectByName (keyName _aa .PdfObjectName )(*_aa .PdfObjectStream ,XObjectType ){if _bdddb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_gedda ,_fgdff :=_aa .TraceToDirectObject (_bdddb .XObject ).(*_aa .PdfObjectDictionary );if !_fgdff {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aa .TraceToDirectObject (_bdddb .XObject ));return nil ,XObjectTypeUndefined ;};if _bddcfd :=_gedda .Get (keyName );_bddcfd !=nil {_bbbf ,_afca :=_aa .GetStream (_bddcfd );if !_afca {_ba .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_bddcfd );return nil ,XObjectTypeUndefined ;};_fegcg :=_bbbf .PdfObjectDictionary ;_gbgd ,_afca :=_aa .TraceToDirectObject (_fegcg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_aa .PdfObjectName );if !_afca {_ba .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fegcg .String ());return nil ,XObjectTypeUndefined ;};if *_gbgd =="\u0049\u006d\u0061g\u0065"{return _bbbf ,XObjectTypeImage ;}else if *_gbgd =="\u0046\u006f\u0072\u006d"{return _bbbf ,XObjectTypeForm ;}else if *_gbgd =="\u0050\u0053"{return _bbbf ,XObjectTypePS ;}else {_ba .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_gbgd );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _aa .PdfObject ;AN _aa .PdfObject ;OP _aa .PdfObject ;JS _aa .PdfObject ;};func (_gcdf *DSS )generateHashMap (_gfge []*_aa .PdfObjectStream )(map[string ]*_aa .PdfObjectStream ,error ){_eedea :=map[string ]*_aa .PdfObjectStream {};for _ ,_eadff :=range _gfge {_acgc ,_dceb :=_aa .DecodeStream (_eadff );if _dceb !=nil {return nil ,_dceb ;};_dbcb ,_dceb :=_degbd (_acgc );if _dceb !=nil {return nil ,_dceb ;};_eedea [string (_dbcb )]=_eadff ;};return _eedea ,nil ;};func (_bbefa *PdfReader )buildOutlineTree (_cdggf _aa .PdfObject ,_eaba *PdfOutlineTreeNode ,_bfbbe *PdfOutlineTreeNode ,_ecega map[_aa .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ecega ==nil {_ecega =map[_aa .PdfObject ]struct{}{};};_ecega [_cdggf ]=struct{}{};_aaac ,_eaccb :=_cdggf .(*_aa .PdfIndirectObject );if !_eaccb {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cdggf );};_dcceb ,_fbcga :=_aaac .PdfObject .(*_aa .PdfObjectDictionary );if !_fbcga {return nil ,nil ,_fda .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ba .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_dcceb ,_aaac ,_aaac );if _afbgc :=_dcceb .Get ("\u0054\u0069\u0074l\u0065");_afbgc !=nil {_fccg ,_gfbgc :=_bbefa .newPdfOutlineItemFromIndirectObject (_aaac );if _gfbgc !=nil {return nil ,nil ,_gfbgc ;};_fccg .Parent =_eaba ;_fccg .Prev =_bfbbe ;_cfgb :=_aa .ResolveReference (_dcceb .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_gadf :=_ecega [_cfgb ];_cfgb !=nil &&_cfgb !=_aaac &&!_gadf {if !_aa .IsNullObject (_cfgb ){_ecbbg ,_aeebf ,_aafd :=_bbefa .buildOutlineTree (_cfgb ,&_fccg .PdfOutlineTreeNode ,nil ,_ecega );if _aafd !=nil {_ba .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_aafd );}else {_fccg .First =_ecbbg ;_fccg .Last =_aeebf ;};};};_feafb :=_aa .ResolveReference (_dcceb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_gbdg :=_ecega [_feafb ];_feafb !=nil &&_feafb !=_aaac &&!_gbdg {if !_aa .IsNullObject (_feafb ){_aefbd ,_cggdf ,_efeab :=_bbefa .buildOutlineTree (_feafb ,_eaba ,&_fccg .PdfOutlineTreeNode ,_ecega );if _efeab !=nil {_ba .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_efeab );}else {_fccg .Next =_aefbd ;return &_fccg .PdfOutlineTreeNode ,_cggdf ,nil ;};};};return &_fccg .PdfOutlineTreeNode ,&_fccg .PdfOutlineTreeNode ,nil ;};_eacfd ,_babf :=_cgaef (_aaac );if _babf !=nil {return nil ,nil ,_babf ;};_eacfd .Parent =_eaba ;if _egdb :=_dcceb .Get ("\u0046\u0069\u0072s\u0074");_egdb !=nil {_egdb =_aa .ResolveReference (_egdb );if _ ,_ebbee :=_ecega [_egdb ];_egdb !=nil &&_egdb !=_aaac &&!_ebbee {_ddgf :=_aa .TraceToDirectObject (_egdb );if _ ,_fbcgaf :=_ddgf .(*_aa .PdfObjectNull );!_fbcgaf &&_ddgf !=nil {_gfadf ,_eedf ,_cdadc :=_bbefa .buildOutlineTree (_egdb ,&_eacfd .PdfOutlineTreeNode ,nil ,_ecega );if _cdadc !=nil {_ba .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_cdadc );}else {_eacfd .First =_gfadf ;_eacfd .Last =_eedf ;};};};};return &_eacfd .PdfOutlineTreeNode ,&_eacfd .PdfOutlineTreeNode ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_eegb pdfFontSimple )GetCharMetrics (code _af .CharCode )(_fa .CharMetrics ,bool ){if _beabg ,_cdcba :=_eegb ._ccga [code ];_cdcba {return _fa .CharMetrics {Wx :_beabg },true ;};if _fa .IsStdFont (_fa .StdFontName (_eegb ._debe )){return _fa .CharMetrics {Wx :250},true ;};return _fa .CharMetrics {},false ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_gadec *PdfField )SetContext (ctx PdfModel ){_gadec ._afdff =ctx };

// ToPdfObject implements interface PdfModel.
func (_eeb *PdfAnnotationPolygon )ToPdfObject ()_aa .PdfObject {_eeb .PdfAnnotation .ToPdfObject ();_afgc :=_eeb ._dde ;_gdff :=_afgc .PdfObject .(*_aa .PdfObjectDictionary );_eeb .PdfAnnotationMarkup .appendToPdfDictionary (_gdff );_gdff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_gdff .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_eeb .Vertices );_gdff .SetIfNotNil ("\u004c\u0045",_eeb .LE );_gdff .SetIfNotNil ("\u0042\u0053",_eeb .BS );_gdff .SetIfNotNil ("\u0049\u0043",_eeb .IC );_gdff .SetIfNotNil ("\u0042\u0045",_eeb .BE );_gdff .SetIfNotNil ("\u0049\u0054",_eeb .IT );_gdff .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_eeb .Measure );return _afgc ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_abag *PdfFont )SubsetRegistered ()error {switch _fbfa :=_abag ._acdfa .(type ){case *pdfFontType0 :_ababf :=_fbfa .subsetRegistered ();if _ababf !=nil {_ba .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ababf );return _ababf ;};if _fbfa ._dgge !=nil {if _fbfa ._adgba !=nil {_fbfa ._adgba .ToPdfObject ();};_fbfa .ToPdfObject ();};default:_ba .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_fbfa );};return nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_aa .PdfObjectInteger ;TilingType *_aa .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_aa .PdfObjectFloat ;YStep *_aa .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_aa .PdfObjectArray ;};

// GetOutlineTree returns the outline tree.
func (_ababc *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _ababc ._eadba };

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_bbae *Image )Resample (targetBitsPerComponent int64 ){if _bbae .BitsPerComponent ==targetBitsPerComponent {return ;};_cadg :=_bbae .GetSamples ();if targetBitsPerComponent < _bbae .BitsPerComponent {_aagbb :=_bbae .BitsPerComponent -targetBitsPerComponent ;for _ccef :=range _cadg {_cadg [_ccef ]>>=uint (_aagbb );};}else if targetBitsPerComponent > _bbae .BitsPerComponent {_bgcgf :=targetBitsPerComponent -_bbae .BitsPerComponent ;for _dadc :=range _cadg {_cadg [_dadc ]<<=uint (_bgcgf );};};_bbae .BitsPerComponent =targetBitsPerComponent ;if _bbae .BitsPerComponent < 8{_bbae .resampleLowBits (_cadg );return ;};_gefb :=_ff .BytesPerLine (int (_bbae .Width ),int (_bbae .BitsPerComponent ),_bbae .ColorComponents );_cddeb :=make ([]byte ,_gefb *int (_bbae .Height ));var (_bcega ,_caebb ,_eebf ,_eabd int ;_dfgbe uint32 ;);for _eebf =0;_eebf < int (_bbae .Height );_eebf ++{_bcega =_eebf *_gefb ;_caebb =(_eebf +1)*_gefb -1;_cfbc :=_fdg .ResampleUint32 (_cadg [_bcega :_caebb ],int (targetBitsPerComponent ),8);for _eabd ,_dfgbe =range _cfbc {_cddeb [_eabd +_bcega ]=byte (_dfgbe );};};_bbae .Data =_cddeb ;};func _cfdc (_gdbcb _aa .PdfObject )(*PdfColorspaceCalGray ,error ){_ffe :=NewPdfColorspaceCalGray ();if _acea ,_gada :=_gdbcb .(*_aa .PdfIndirectObject );_gada {_ffe ._abbfc =_acea ;};_gdbcb =_aa .TraceToDirectObject (_gdbcb );_ggfc ,_bdba :=_gdbcb .(*_aa .PdfObjectArray );if !_bdba {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ggfc .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gdbcb =_aa .TraceToDirectObject (_ggfc .Get (0));_bdaa ,_bdba :=_gdbcb .(*_aa .PdfObjectName );if !_bdba {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_bdaa !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gdbcb =_aa .TraceToDirectObject (_ggfc .Get (1));_deceb ,_bdba :=_gdbcb .(*_aa .PdfObjectDictionary );if !_bdba {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_gdbcb =_deceb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gdbcb =_aa .TraceToDirectObject (_gdbcb );_gbbf ,_bdba :=_gdbcb .(*_aa .PdfObjectArray );if !_bdba {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _gbbf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bbgc ,_fbede :=_gbbf .GetAsFloat64Slice ();if _fbede !=nil {return nil ,_fbede ;};_ffe .WhitePoint =_bbgc ;_gdbcb =_deceb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gdbcb !=nil {_gdbcb =_aa .TraceToDirectObject (_gdbcb );_ecad ,_fbae :=_gdbcb .(*_aa .PdfObjectArray );if !_fbae {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _ecad .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_degg ,_cefa :=_ecad .GetAsFloat64Slice ();if _cefa !=nil {return nil ,_cefa ;};_ffe .BlackPoint =_degg ;};_gdbcb =_deceb .Get ("\u0047\u0061\u006dm\u0061");if _gdbcb !=nil {_gdbcb =_aa .TraceToDirectObject (_gdbcb );_cdge ,_eeecg :=_aa .GetNumberAsFloat (_gdbcb );if _eeecg !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ffe .Gamma =_cdge ;};return _ffe ,nil ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_dcgd *PdfFieldButton )SetType (btype ButtonType ){_cfadf :=uint32 (0);if _dcgd .Ff !=nil {_cfadf =uint32 (*_dcgd .Ff );};switch btype {case ButtonTypePush :_cfadf |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_cfadf |=FieldFlagRadio .Mask ();};_dcgd .Ff =_aa .MakeInteger (int64 (_cfadf ));};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dcbd *PdfFieldButton )IsPush ()bool {return _dcbd .GetType ()==ButtonTypePush };

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_dbdad *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _dbdad .Range };

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gabd *PdfPageResources )SetXObjectImageByName (keyName _aa .PdfObjectName ,ximg *XObjectImage )error {_fabeb :=ximg .ToPdfObject ().(*_aa .PdfObjectStream );_bcbae :=_gabd .SetXObjectByName (keyName ,_fabeb );return _bcbae ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cdcbeg *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_fggab :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_cffeg ,_aeeea :=_cdcbeg .GetNumPages ();if _aeeea !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aeeea );return nil ,_aeeea ;};for _cgaee :=1;_cgaee <=_cffeg ;_cgaee ++{_fbceg ,_fabb :=_cdcbeg .GetPage (_cgaee );if _fabb !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fabb );return nil ,_fabb ;};if opts .PageCallback !=nil {opts .PageCallback (_cgaee ,_fbceg );};_fabb =_fggab .AddPage (_fbceg );if _fabb !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fabb );return nil ,_fabb ;};};_fggab ._abeac =_cdcbeg .PdfVersion ().Major ;_fggab ._ccdd =_cdcbeg .PdfVersion ().Minor ;if !opts .SkipInfo {_addgf ,_bece :=_cdcbeg .GetPdfInfo ();if _bece !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bece );}else {_fggab ._fgeca .PdfObject =_addgf .ToPdfObject ();};};if !opts .SkipAcroForm {_ddgg :=_fggab .SetForms (_cdcbeg .AcroForm );if _ddgg !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddgg );return nil ,_ddgg ;};};if !opts .SkipOutlines {_fggab .AddOutlineTree (_cdcbeg .GetOutlineTree ());};if !opts .SkipOCProperties {_dceeg ,_fdccc :=_cdcbeg .GetOCProperties ();if _fdccc !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdccc );}else {_fdccc =_fggab .SetOCProperties (_dceeg );if _fdccc !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdccc );};};};if !opts .SkipPageLabels {_adcc ,_dagde :=_cdcbeg .GetPageLabels ();if _dagde !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dagde );}else {_dagde =_fggab .SetPageLabels (_adcc );if _dagde !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dagde );};};};if !opts .SkipNamedDests {_ggag ,_fddcd :=_cdcbeg .GetNamedDestinations ();if _fddcd !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fddcd );}else {_fddcd =_fggab .SetNamedDestinations (_ggag );if _fddcd !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fddcd );};};};return &_fggab ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_fde :=NewPdfAction ();_cea :=&PdfActionSetOCGState {};_cea .PdfAction =_fde ;_fde .SetContext (_cea );return _cea ;};var _ pdfFont =(*pdfFontType0 )(nil );

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bdffg *PdfReader )GetOutlines ()(*Outline ,error ){if _bdffg ==nil {return nil ,_fda .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_gegfd :=_bdffg .GetOutlineTree ();if _gegfd ==nil {return nil ,_fda .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _ddcde func (_cgfde *PdfOutlineTreeNode ,_dgfgb *[]*OutlineItem );_ddcde =func (_fbff *PdfOutlineTreeNode ,_dafdf *[]*OutlineItem ){if _fbff ==nil {return ;};if _fbff ._caeff ==nil {_ba .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _cacab *OutlineItem ;if _cffab ,_aabe :=_fbff ._caeff .(*PdfOutlineItem );_aabe {_gaggc :=_cffab .Dest ;if (_gaggc ==nil ||_aa .IsNullObject (_gaggc ))&&_cffab .A !=nil {if _ffdff ,_fabee :=_aa .GetDict (_cffab .A );_fabee {_gaggc ,_ =_aa .GetArray (_ffdff .Get ("\u0044"));};};var _adedbg OutlineDest ;if _gaggc !=nil &&!_aa .IsNullObject (_gaggc ){if _aadf ,_eebbb :=_fdcf (_gaggc ,_bdffg );_eebbb ==nil {_adedbg =*_aadf ;}else {_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gaggc ,_eebbb );};};_cacab =NewOutlineItem (_cffab .Title .Decoded (),_adedbg );*_dafdf =append (*_dafdf ,_cacab );if _cffab .Next !=nil {_ddcde (_cffab .Next ,_dafdf );};};if _fbff .First !=nil {if _cacab !=nil {_dafdf =&_cacab .Entries ;};_ddcde (_fbff .First ,_dafdf );};};_ecfadg :=NewOutline ();_ddcde (_gegfd ,&_ecfadg .Entries );return _ecfadg ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eebb *PdfOutlineItem )ToPdfObject ()_aa .PdfObject {_dbfd :=_eebb ._bfeac ;_dggd :=_dbfd .PdfObject .(*_aa .PdfObjectDictionary );_dggd .Set ("\u0054\u0069\u0074l\u0065",_eebb .Title );if _eebb .A !=nil {_dggd .Set ("\u0041",_eebb .A );};if _bagg :=_dggd .Get ("\u0053\u0045");_bagg !=nil {_dggd .Remove ("\u0053\u0045");};if _eebb .C !=nil {_dggd .Set ("\u0043",_eebb .C );};if _eebb .Dest !=nil {_dggd .Set ("\u0044\u0065\u0073\u0074",_eebb .Dest );};if _eebb .F !=nil {_dggd .Set ("\u0046",_eebb .F );};if _eebb .Count !=nil {_dggd .Set ("\u0043\u006f\u0075n\u0074",_aa .MakeInteger (*_eebb .Count ));};if _eebb .Next !=nil {_dggd .Set ("\u004e\u0065\u0078\u0074",_eebb .Next .ToPdfObject ());};if _eebb .First !=nil {_dggd .Set ("\u0046\u0069\u0072s\u0074",_eebb .First .ToPdfObject ());};if _eebb .Prev !=nil {_dggd .Set ("\u0050\u0072\u0065\u0076",_eebb .Prev .GetContext ().GetContainingPdfObject ());};if _eebb .Last !=nil {_dggd .Set ("\u004c\u0061\u0073\u0074",_eebb .Last .GetContext ().GetContainingPdfObject ());};if _eebb .Parent !=nil {_dggd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eebb .Parent .GetContext ().GetContainingPdfObject ());};return _dbfd ;};

// SetOCProperties sets the optional content properties.
func (_ggfea *PdfWriter )SetOCProperties (ocProperties _aa .PdfObject )error {_dcaee :=_ggfea ._gbcg ;if ocProperties !=nil {_ba .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_dcaee .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _ggfea .addObjects (ocProperties );};return nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _aa .PdfObject ;Q _aa .PdfObject ;RC _aa .PdfObject ;DS _aa .PdfObject ;CL _aa .PdfObject ;IT _aa .PdfObject ;BE _aa .PdfObject ;RD _aa .PdfObject ;BS _aa .PdfObject ;LE _aa .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bffa *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bffa .Base .GetNumComponents ();_ebdbf :=int (vals [0])*N ;if _ebdbf < 0||(_ebdbf +N -1)>=len (_bffa ._bdea ){return nil ,_fda .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_bfbce :=_bffa ._bdea [_ebdbf :_ebdbf +N ];var _bcff []float64 ;for _ ,_eecb :=range _bfbce {_bcff =append (_bcff ,float64 (_eecb )/255.0);};_dafb ,_eeeb :=_bffa .Base .ColorFromFloats (_bcff );if _eeeb !=nil {return nil ,_eeeb ;};return _dafb ,nil ;};func _egbc (_fadeb *PdfPage ){_agbeb :=_aee .GetLicenseKey ();if _agbeb !=nil &&_agbeb .IsLicensed (){return ;};_cefbg :=_aa .PdfObjectName ("\u0055\u0046\u0031");if !_fadeb .Resources .HasFontByName (_cefbg ){_fadeb .Resources .SetFontByName (_cefbg ,DefaultFont ().ToPdfObject ());};var _egbab []string ;_egbab =append (_egbab ,"\u0071");_egbab =append (_egbab ,"\u0042\u0054");_egbab =append (_egbab ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_cefbg .String ()));_egbab =append (_egbab ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_egbab =append (_egbab ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_bggba :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_egbab =append (_egbab ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_bggba ));_egbab =append (_egbab ,"\u0045\u0054");_egbab =append (_egbab ,"\u0051");_eegfg :=_ga .Join (_egbab ,"\u000a");_fadeb .AddContentStreamByString (_eegfg );_fadeb .ToPdfObject ();};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_aa .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_ggcea *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_ggcea ._eage =colorspace ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_aa .PdfObjectStream )(*XObjectImage ,error ){_geff :=&XObjectImage {};_geff ._fcbac =stream ;_gbeea :=*(stream .PdfObjectDictionary );_dffgc ,_abbda :=_aa .NewEncoderFromStream (stream );if _abbda !=nil {return nil ,_abbda ;};_geff .Filter =_dffgc ;if _bdfdf :=_aa .TraceToDirectObject (_gbeea .Get ("\u0057\u0069\u0064t\u0068"));_bdfdf !=nil {_efgab ,_gbfc :=_bdfdf .(*_aa .PdfObjectInteger );if !_gbfc {return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_gaebc :=int64 (*_efgab );_geff .Width =&_gaebc ;}else {return nil ,_fda .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ddbc :=_aa .TraceToDirectObject (_gbeea .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_ddbc !=nil {_aaga ,_ggceb :=_ddbc .(*_aa .PdfObjectInteger );if !_ggceb {return nil ,_fda .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gffc :=int64 (*_aaga );_geff .Height =&_gffc ;}else {return nil ,_fda .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _egedb :=_aa .TraceToDirectObject (_gbeea .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_egedb !=nil {_bdafc ,_eggf :=NewPdfColorspaceFromPdfObject (_egedb );if _eggf !=nil {return nil ,_eggf ;};_geff .ColorSpace =_bdafc ;}else {_ba .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_geff .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fbacd :=_aa .TraceToDirectObject (_gbeea .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fbacd !=nil {_agegb ,_dfaga :=_fbacd .(*_aa .PdfObjectInteger );if !_dfaga {return nil ,_fda .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ccdbe :=int64 (*_agegb );_geff .BitsPerComponent =&_ccdbe ;};_geff .Intent =_gbeea .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_geff .ImageMask =_gbeea .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_geff .Mask =_gbeea .Get ("\u004d\u0061\u0073\u006b");_geff .Decode =_gbeea .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_geff .Interpolate =_gbeea .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_geff .Alternatives =_gbeea .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_geff .SMask =_gbeea .Get ("\u0053\u004d\u0061s\u006b");_geff .SMaskInData =_gbeea .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_geff .Matte =_gbeea .Get ("\u004d\u0061\u0074t\u0065");_geff .Name =_gbeea .Get ("\u004e\u0061\u006d\u0065");_geff .StructParent =_gbeea .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_geff .ID =_gbeea .Get ("\u0049\u0044");_geff .OPI =_gbeea .Get ("\u004f\u0050\u0049");_geff .Metadata =_gbeea .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_geff .OC =_gbeea .Get ("\u004f\u0043");_geff .Stream =stream .Stream ;return _geff ,nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cdgac *PdfPage )GetAllContentStreams ()(string ,error ){_fgadd ,_ggdc :=_cdgac .GetContentStreams ();if _ggdc !=nil {return "",_ggdc ;};return _ga .Join (_fgadd ,"\u0020"),nil ;};

// Items returns all children outline items.
func (_edgac *Outline )Items ()[]*OutlineItem {return _edgac .Entries };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_cgabd *PdfPageResources )SetColorspaceByName (keyName _aa .PdfObjectName ,cs PdfColorspace )error {_fbgdb ,_ddfef :=_cgabd .GetColorspaces ();if _ddfef !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ddfef );return _ddfef ;};if _fbgdb ==nil {_fbgdb =NewPdfPageResourcesColorspaces ();_cgabd .SetColorSpace (_fbgdb );};_fbgdb .Set (keyName ,cs );return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cced *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dagf :=vals [0];if _dagf < 0.0||_dagf > 100.0{_ba .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dagf );return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edgf :=vals [1];_ffacd :=float64 (-100);_ebfa :=float64 (100);if len (_cced .Range )> 1{_ffacd =_cced .Range [0];_ebfa =_cced .Range [1];};if _edgf < _ffacd ||_edgf > _ebfa {_ba .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_edgf ,_ffacd ,_ebfa );return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgdg :=vals [2];_caee :=float64 (-100);_gbegf :=float64 (100);if len (_cced .Range )> 3{_caee =_cced .Range [2];_gbegf =_cced .Range [3];};if _bgdg < _caee ||_bgdg > _gbegf {_ba .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bgdg ,_caee ,_gbegf );return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcde :=NewPdfColorLab (_dagf ,_edgf ,_bgdg );return _fcde ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aa .PdfObject ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_cbfab *Image )GetSamples ()[]uint32 {_ggfef :=_fdg .ResampleBytes (_cbfab .Data ,int (_cbfab .BitsPerComponent ));if _cbfab .BitsPerComponent < 8{_ggfef =_cbfab .samplesTrimPadding (_ggfef );};_bcbfb :=int (_cbfab .Width )*int (_cbfab .Height )*_cbfab .ColorComponents ;if len (_ggfef )< _bcbfb {_ba .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ggfef ),_bcbfb );return _ggfef ;}else if len (_ggfef )> _bcbfb {_ba .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ggfef ),_bcbfb );_ggfef =_ggfef [:_bcbfb ];};return _ggfef ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_eegcd *LTV )EnableChain (chain []*_ca .Certificate )error {return _eegcd .enable (nil ,chain ,"")};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _aa .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_aa .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_gbae ,_gcbce :=encoder .EncodeBytes (img .Data );if _gcbce !=nil {_ba .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gcbce );return nil ,_gcbce ;};_egdgd :=NewXObjectImage ();_agfba :=img .Width ;_ffabg :=img .Height ;_egdgd .Width =&_agfba ;_egdgd .Height =&_ffabg ;_dacg :=img .BitsPerComponent ;_egdgd .BitsPerComponent =&_dacg ;_egdgd .Filter =encoder ;_egdgd .Stream =_gbae ;if cs ==nil {if img .ColorComponents ==1{_egdgd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_egdgd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_egdgd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fda .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_egdgd .ColorSpace =cs ;};if len (img ._eecd )!=0{_bdgeb :=NewXObjectImage ();_bdgeb .Filter =encoder ;_aedbf ,_cbdad :=encoder .EncodeBytes (img ._eecd );if _cbdad !=nil {_ba .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cbdad );return nil ,_cbdad ;};_bdgeb .Stream =_aedbf ;_bdgeb .BitsPerComponent =_egdgd .BitsPerComponent ;_bdgeb .Width =&img .Width ;_bdgeb .Height =&img .Height ;_bdgeb .ColorSpace =NewPdfColorspaceDeviceGray ();_egdgd .SMask =_bdgeb .ToPdfObject ();}else {_egdgd .SMask =xobjIn .SMask ;_egdgd .ImageMask =xobjIn .ImageMask ;if _egdgd .ColorSpace .GetNumComponents ()==1{_cbaa (_egdgd );};};return _egdgd ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bege *PdfColorspaceICCBased )ToPdfObject ()_aa .PdfObject {_beb :=&_aa .PdfObjectArray {};_beb .Append (_aa .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _fgec *_aa .PdfObjectStream ;if _bege ._ggdf !=nil {_fgec =_bege ._ggdf ;}else {_fgec =&_aa .PdfObjectStream {};};_gdcf :=_aa .MakeDict ();_gdcf .Set ("\u004e",_aa .MakeInteger (int64 (_bege .N )));if _bege .Alternate !=nil {_gdcf .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bege .Alternate .ToPdfObject ());};if _bege .Metadata !=nil {_gdcf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bege .Metadata );};if _bege .Range !=nil {var _ccca []_aa .PdfObject ;for _ ,_deef :=range _bege .Range {_ccca =append (_ccca ,_aa .MakeFloat (_deef ));};_gdcf .Set ("\u0052\u0061\u006eg\u0065",_aa .MakeArray (_ccca ...));};_gdcf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aa .MakeInteger (int64 (len (_bege .Data ))));_fgec .Stream =_bege .Data ;_fgec .PdfObjectDictionary =_gdcf ;_beb .Append (_fgec );if _bege ._gaec !=nil {_bege ._gaec .PdfObject =_beb ;return _bege ._gaec ;};return _beb ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _aa .PdfObject ;Sy _aa .PdfObject ;};func (_gggcc *PdfShading )getShadingDict ()(*_aa .PdfObjectDictionary ,error ){_fdegc :=_gggcc ._fbdfa ;if _fcbc ,_afcbf :=_fdegc .(*_aa .PdfIndirectObject );_afcbf {_bcaea ,_ceec :=_fcbc .PdfObject .(*_aa .PdfObjectDictionary );if !_ceec {return nil ,_aa .ErrTypeError ;};return _bcaea ,nil ;}else if _ggffa ,_afgdd :=_fdegc .(*_aa .PdfObjectStream );_afgdd {return _ggffa .PdfObjectDictionary ,nil ;}else if _ffbed ,_afba :=_fdegc .(*_aa .PdfObjectDictionary );_afba {return _ffbed ,nil ;}else {_ba .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_aa .ErrTypeError ;};};

// ToPdfObject implements interface PdfModel.
func (_dfg *PdfActionSetOCGState )ToPdfObject ()_aa .PdfObject {_dfg .PdfAction .ToPdfObject ();_ffc :=_dfg ._bg ;_cggb :=_ffc .PdfObject .(*_aa .PdfObjectDictionary );_cggb .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeSetOCGState )));_cggb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dfg .State );_cggb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_dfg .PreserveRB );return _ffc ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_acede *PdfPageResources )GetExtGState (keyName _aa .PdfObjectName )(_aa .PdfObject ,bool ){if _acede .ExtGState ==nil {return nil ,false ;};_agae ,_dded :=_aa .TraceToDirectObject (_acede .ExtGState ).(*_aa .PdfObjectDictionary );if !_dded {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acede .ExtGState );return nil ,false ;};if _cdgef :=_agae .Get (keyName );_cdgef !=nil {return _cdgef ,true ;};return nil ,false ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_caede byte )byte ;

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_ggbb *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _ggbb .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_abcc *PdfPage )error ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bgfee *PdfShadingType1 )ToPdfObject ()_aa .PdfObject {_bgfee .PdfShading .ToPdfObject ();_gefgf ,_bgaae :=_bgfee .getShadingDict ();if _bgaae !=nil {_ba .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bgfee .Domain !=nil {_gefgf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgfee .Domain );};if _bgfee .Matrix !=nil {_gefgf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgfee .Matrix );};if _bgfee .Function !=nil {if len (_bgfee .Function )==1{_gefgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgfee .Function [0].ToPdfObject ());}else {_ffeb :=_aa .MakeArray ();for _ ,_gddab :=range _bgfee .Function {_ffeb .Append (_gddab .ToPdfObject ());};_gefgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffeb );};};return _bgfee ._fbdfa ;};func (_dagcc *PdfSignature )extractChainFromCert ()([]*_ca .Certificate ,error ){var _ffcee *_aa .PdfObjectArray ;switch _dcgcd :=_dagcc .Cert .(type ){case *_aa .PdfObjectString :_ffcee =_aa .MakeArray (_dcgcd );case *_aa .PdfObjectArray :_ffcee =_dcgcd ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dcgcd );};var _caab _dc .Buffer ;for _ ,_bdbe :=range _ffcee .Elements (){_dgfda ,_ddabf :=_aa .GetString (_bdbe );if !_ddabf {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_bdbe );};if _ ,_ddabag :=_caab .Write (_dgfda .Bytes ());_ddabag !=nil {return nil ,_ddabag ;};};return _ca .ParseCertificates (_caab .Bytes ());};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_adeda DefaultImageHandler )Read (reader _gb .Reader )(*Image ,error ){_feed ,_ ,_fabc :=_fe .Decode (reader );if _fabc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_fabc );return nil ,_fabc ;};return _adeda .NewImageFromGoImage (_feed );};func _fcbgb (_gdbab []byte )(_gccg ,_efee string ,_ffcb error ){_ba .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gdbab ));_eeadc :=_dffcg .FindIndex (_gdbab );if _eeadc ==nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_aa .ErrTypeError ;};_gabff :=_eeadc [1];_bdcef :=_ga .Index (string (_gdbab [_gabff :]),_fcbf );if _bdcef < 0{_gccg =string (_gdbab [_gabff :]);return _gccg ,"",nil ;};_fgffg :=_gabff +_bdcef ;_gccg =string (_gdbab [_gabff :_fgffg ]);_eacag :=_fgffg ;_bdcef =_ga .Index (string (_gdbab [_eacag :]),_cgba );if _bdcef < 0{_ba .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffcb );return "","",_aa .ErrTypeError ;};_cdee :=_eacag +_bdcef ;_efee =string (_gdbab [_eacag :_cdee ]);return _gccg ,_efee ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_cfgf *PdfRectangle )ToPdfObject ()_aa .PdfObject {return _aa .MakeArray (_aa .MakeFloat (_cfgf .Llx ),_aa .MakeFloat (_cfgf .Lly ),_aa .MakeFloat (_cfgf .Urx ),_aa .MakeFloat (_cfgf .Ury ));};

// ToPdfObject implements interface PdfModel.
func (_bde *PdfAnnotationPolyLine )ToPdfObject ()_aa .PdfObject {_bde .PdfAnnotation .ToPdfObject ();_ccaga :=_bde ._dde ;_gfce :=_ccaga .PdfObject .(*_aa .PdfObjectDictionary );_bde .PdfAnnotationMarkup .appendToPdfDictionary (_gfce );_gfce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_gfce .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bde .Vertices );_gfce .SetIfNotNil ("\u004c\u0045",_bde .LE );_gfce .SetIfNotNil ("\u0042\u0053",_bde .BS );_gfce .SetIfNotNil ("\u0049\u0043",_bde .IC );_gfce .SetIfNotNil ("\u0042\u0045",_bde .BE );_gfce .SetIfNotNil ("\u0049\u0054",_bde .IT );_gfce .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bde .Measure );return _ccaga ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bcfba :=PdfWriter {};_bcfba ._faceg =map[_aa .PdfObject ]struct{}{};_bcfba ._gecd =[]_aa .PdfObject {};_bcfba ._bfdb =map[_aa .PdfObject ][]*_aa .PdfObjectDictionary {};_bcfba ._debc =map[_aa .PdfObject ]struct{}{};_bcfba ._abeac =1;_bcfba ._ccdd =3;_gbfa :=_aa .MakeDict ();_cddde :=[]struct{_bdeeb _aa .PdfObjectName ;_cafa string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fabebb ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_ebcg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_bbgdb ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_agfe ()},{"\u0054\u0069\u0074l\u0065",_beeaa ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_babe ()}};for _ ,_fbedf :=range _cddde {if _fbedf ._cafa !=""{_gbfa .Set (_fbedf ._bdeeb ,_aa .MakeString (_fbedf ._cafa ));};};if _cfeb :=_eade ();!_cfeb .IsZero (){if _dgfcee ,_bffedc :=NewPdfDateFromTime (_cfeb );_bffedc ==nil {_gbfa .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dgfcee .ToPdfObject ());};};if _effa :=_egeee ();!_effa .IsZero (){if _bgffe ,_fadba :=NewPdfDateFromTime (_effa );_fadba ==nil {_gbfa .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bgffe .ToPdfObject ());};};_ebabb :=_aa .PdfIndirectObject {};_ebabb .PdfObject =_gbfa ;_bcfba ._fgeca =&_ebabb ;_bcfba .addObject (&_ebabb );_agdeb :=_aa .PdfIndirectObject {};_cgcbdc :=_aa .MakeDict ();_cgcbdc .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_agdeb .PdfObject =_cgcbdc ;_bcfba ._cdff =&_agdeb ;_bcfba .addObject (_bcfba ._cdff );_eeag ,_daage :=_facd ("\u0077");if _daage !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daage );};_bcfba ._ecdeg =_eeag ;_gcbda :=_aa .PdfIndirectObject {};_aebbg :=_aa .MakeDict ();_aebbg .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0050\u0061\u0067e\u0073"));_ddbab :=_aa .PdfObjectArray {};_aebbg .Set ("\u004b\u0069\u0064\u0073",&_ddbab );_aebbg .Set ("\u0043\u006f\u0075n\u0074",_aa .MakeInteger (0));_gcbda .PdfObject =_aebbg ;_bcfba ._bfbdg =&_gcbda ;_bcfba ._agfeg =map[_aa .PdfObject ]struct{}{};_bcfba .addObject (_bcfba ._bfbdg );_cgcbdc .Set ("\u0050\u0061\u0067e\u0073",&_gcbda );_bcfba ._gbcg =_cgcbdc ;_ba .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_agdeb );return _bcfba ;};

// ToPdfObject implements interface PdfModel.
func (_cgb *PdfActionResetForm )ToPdfObject ()_aa .PdfObject {_cgb .PdfAction .ToPdfObject ();_ece :=_cgb ._bg ;_aeeg :=_ece .PdfObject .(*_aa .PdfObjectDictionary );_aeeg .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeResetForm )));_aeeg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cgb .Fields );_aeeg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cgb .Flags );return _ece ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ffdbb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ffdbb .AlternateSpace ==nil {return nil ,_fda .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _ffdbb .AlternateSpace .ColorToRGB (color );};func (_dgdgb *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bfcab :=_dgdgb .Parent ;for _bfcab !=nil {_gecgfa ,_bcdgb :=_aa .GetDict (_bfcab );if !_bcdgb {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fda .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _bdabf :=_gecgfa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bdabf !=nil {_bagf ,_faeba :=_aa .GetDict (_bdabf );if !_faeba {return nil ,_fda .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bacfa ,_afeg :=NewPdfPageResourcesFromDict (_bagf );if _afeg !=nil {return nil ,_afeg ;};return _bacfa ,nil ;};_bfcab =_gecgfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_gdgef *PdfWriter )copyObject (_ggggbe _aa .PdfObject ,_bdgbf map[_aa .PdfObject ]_aa .PdfObject ,_efcg map[_aa .PdfObject ]struct{},_bebb bool )_aa .PdfObject {_faceb :=!_gdgef ._dgfbd &&_efcg !=nil ;if _ggfdb ,_faefc :=_bdgbf [_ggggbe ];_faefc {if _faceb &&!_bebb {delete (_efcg ,_ggggbe );};return _ggfdb ;};_fgfb :=_ggggbe ;switch _gdfbbe :=_ggggbe .(type ){case *_aa .PdfObjectArray :_bcfag :=_aa .MakeArray ();_fgfb =_bcfag ;_bdgbf [_ggggbe ]=_fgfb ;for _ ,_aeggb :=range _gdfbbe .Elements (){_bcfag .Append (_gdgef .copyObject (_aeggb ,_bdgbf ,_efcg ,_bebb ));};case *_aa .PdfObjectStreams :_gbcde :=&_aa .PdfObjectStreams {PdfObjectReference :_gdfbbe .PdfObjectReference };_fgfb =_gbcde ;_bdgbf [_ggggbe ]=_fgfb ;for _ ,_ccagg :=range _gdfbbe .Elements (){_gbcde .Append (_gdgef .copyObject (_ccagg ,_bdgbf ,_efcg ,_bebb ));};case *_aa .PdfObjectStream :_ggcbb :=&_aa .PdfObjectStream {Stream :_gdfbbe .Stream ,PdfObjectReference :_gdfbbe .PdfObjectReference };_fgfb =_ggcbb ;_bdgbf [_ggggbe ]=_fgfb ;_ggcbb .PdfObjectDictionary =_gdgef .copyObject (_gdfbbe .PdfObjectDictionary ,_bdgbf ,_efcg ,_bebb ).(*_aa .PdfObjectDictionary );case *_aa .PdfObjectDictionary :var _defeda bool ;if _faceb &&!_bebb {if _afaab ,_ :=_aa .GetNameVal (_gdfbbe .Get ("\u0054\u0079\u0070\u0065"));_afaab =="\u0050\u0061\u0067\u0065"{_ ,_cbdeb :=_gdgef ._agfeg [_gdfbbe ];_bebb =!_cbdeb ;_defeda =_bebb ;};};_fbaag :=_aa .MakeDict ();_fgfb =_fbaag ;_bdgbf [_ggggbe ]=_fgfb ;for _ ,_gbfdg :=range _gdfbbe .Keys (){_fbaag .Set (_gbfdg ,_gdgef .copyObject (_gdfbbe .Get (_gbfdg ),_bdgbf ,_efcg ,_bebb ));};if _defeda {_fgfb =_aa .MakeNull ();_bebb =false ;};case *_aa .PdfIndirectObject :_gaee :=&_aa .PdfIndirectObject {PdfObjectReference :_gdfbbe .PdfObjectReference };_fgfb =_gaee ;_bdgbf [_ggggbe ]=_fgfb ;_gaee .PdfObject =_gdgef .copyObject (_gdfbbe .PdfObject ,_bdgbf ,_efcg ,_bebb );case *_aa .PdfObjectString :_edcff :=*_gdfbbe ;_fgfb =&_edcff ;_bdgbf [_ggggbe ]=_fgfb ;case *_aa .PdfObjectName :_gcbg :=*_gdfbbe ;_fgfb =&_gcbg ;_bdgbf [_ggggbe ]=_fgfb ;case *_aa .PdfObjectNull :_fgfb =_aa .MakeNull ();_bdgbf [_ggggbe ]=_fgfb ;case *_aa .PdfObjectInteger :_fgee :=*_gdfbbe ;_fgfb =&_fgee ;_bdgbf [_ggggbe ]=_fgfb ;case *_aa .PdfObjectReference :_edbc :=*_gdfbbe ;_fgfb =&_edbc ;_bdgbf [_ggggbe ]=_fgfb ;case *_aa .PdfObjectFloat :_gddff :=*_gdfbbe ;_fgfb =&_gddff ;_bdgbf [_ggggbe ]=_fgfb ;case *_aa .PdfObjectBool :_faga :=*_gdfbbe ;_fgfb =&_faga ;_bdgbf [_ggggbe ]=_fgfb ;case *pdfSignDictionary :_ebbed :=&pdfSignDictionary {PdfObjectDictionary :_aa .MakeDict (),_fefa :_gdfbbe ._fefa ,_gcgf :_gdfbbe ._gcgf };_fgfb =_ebbed ;_bdgbf [_ggggbe ]=_fgfb ;for _ ,_cbbce :=range _gdfbbe .Keys (){_ebbed .Set (_cbbce ,_gdgef .copyObject (_gdfbbe .Get (_cbbce ),_bdgbf ,_efcg ,_bebb ));};default:_ba .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ggggbe );};if _faceb &&_bebb {_efcg [_ggggbe ]=struct{}{};};return _fgfb ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_edgd *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _edgd ._cffdf ==nil {_edgd ._cffdf =_bag .NewPSExecutor (_edgd .Program );};var _cfdfab []_bag .PSObject ;for _ ,_adfbd :=range xVec {_cfdfab =append (_cfdfab ,_bag .MakeReal (_adfbd ));};_cebgb ,_ffcd :=_edgd ._cffdf .Execute (_cfdfab );if _ffcd !=nil {return nil ,_ffcd ;};_gfegd ,_ffcd :=_bag .PSObjectArrayToFloat64Array (_cebgb );if _ffcd !=nil {return nil ,_ffcd ;};return _gfegd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gag *PdfActionNamed )ToPdfObject ()_aa .PdfObject {_gag .PdfAction .ToPdfObject ();_cc :=_gag ._bg ;_gac :=_cc .PdfObject .(*_aa .PdfObjectDictionary );_gac .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeNamed )));_gac .SetIfNotNil ("\u004e",_gag .N );return _cc ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_bdc :=NewPdfAction ();_aff :=&PdfActionGoTo {};_aff .PdfAction =_bdc ;_bdc .SetContext (_aff );return _aff ;};

// IsShading specifies if the pattern is a shading pattern.
func (_daba *PdfPattern )IsShading ()bool {return _daba .PatternType ==2};

// ToPdfObject implements interface PdfModel.
func (_egda *PdfAnnotationMovie )ToPdfObject ()_aa .PdfObject {_egda .PdfAnnotation .ToPdfObject ();_afd :=_egda ._dde ;_cbfa :=_afd .PdfObject .(*_aa .PdfObjectDictionary );_cbfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u004d\u006f\u0076i\u0065"));_cbfa .SetIfNotNil ("\u0054",_egda .T );_cbfa .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_egda .Movie );_cbfa .SetIfNotNil ("\u0041",_egda .A );return _afd ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dcac *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gdffa ,_cbfb :=color .(*PdfColorPattern );if !_cbfb {_ba .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _gdffa .Color ==nil {return color ,nil ;};if _dcac .UnderlyingCS ==nil {return nil ,_fda .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _dcac .UnderlyingCS .ColorToRGB (_gdffa .Color );};func _fbgb (_fgdag *_aa .PdfObjectDictionary ,_dffae *fontCommon )(*pdfCIDFontType0 ,error ){if _dffae ._cbae !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ba .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dffae );return nil ,_aa .ErrRangeError ;};_cgdeg :=_fffa (_dffae );_ababec ,_fbfb :=_aa .GetDict (_fgdag .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fbfb {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dffae );return nil ,ErrRequiredAttributeMissing ;};_cgdeg .CIDSystemInfo =_ababec ;_cgdeg .DW =_fgdag .Get ("\u0044\u0057");_cgdeg .W =_fgdag .Get ("\u0057");_cgdeg .DW2 =_fgdag .Get ("\u0044\u0057\u0032");_cgdeg .W2 =_fgdag .Get ("\u0057\u0032");_cgdeg ._fbbb =1000.0;if _aggf ,_efagc :=_aa .GetNumberAsFloat (_cgdeg .DW );_efagc ==nil {_cgdeg ._fbbb =_aggf ;};_afdd ,_eaad :=_caef (_cgdeg .W );if _eaad !=nil {return nil ,_eaad ;};if _afdd ==nil {_afdd =map[_af .CharCode ]float64 {};};_cgdeg ._fdca =_afdd ;return _cgdeg ,nil ;};func _facg (_dcged _fa .StdFont )pdfFontSimple {_fcce :=_dcged .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_cbae :"\u0054\u0079\u0070e\u0031",_debe :_dcged .Name ()},_dege :_dcged .GetMetricsTable (),_aebb :&PdfFontDescriptor {FontName :_aa .MakeName (string (_fcce .Name )),FontFamily :_aa .MakeName (_fcce .Family ),FontWeight :_aa .MakeFloat (float64 (_fcce .Weight )),Flags :_aa .MakeInteger (int64 (_fcce .Flags )),FontBBox :_aa .MakeArrayFromFloats (_fcce .BBox [:]),ItalicAngle :_aa .MakeFloat (_fcce .ItalicAngle ),Ascent :_aa .MakeFloat (_fcce .Ascent ),Descent :_aa .MakeFloat (_fcce .Descent ),CapHeight :_aa .MakeFloat (_fcce .CapHeight ),XHeight :_aa .MakeFloat (_fcce .XHeight ),StemV :_aa .MakeFloat (_fcce .StemV ),StemH :_aa .MakeFloat (_fcce .StemH )},_dcfgf :_dcged .Encoder ()};};func (_aeede *fontFile )loadFromSegments (_gdgb ,_ddcca []byte )error {_ba .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gdgb ),len (_ddcca ));_fcaea :=_aeede .parseASCIIPart (_gdgb );if _fcaea !=nil {return _fcaea ;};_ba .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aeede );if len (_ddcca )==0{return nil ;};_ba .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aeede );return nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_cffd *_aa .PdfIndirectObject ;Certs []*_aa .PdfObjectStream ;OCSPs []*_aa .PdfObjectStream ;CRLs []*_aa .PdfObjectStream ;VRI map[string ]*VRI ;_dbcf map[string ]*_aa .PdfObjectStream ;_ccdee map[string ]*_aa .PdfObjectStream ;_dbbfb map[string ]*_aa .PdfObjectStream ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_bdecac *PdfPattern )GetContext ()PdfModel {return _bdecac ._adfea };

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ebabe :_aa .MakeIndirectObject (_aa .MakeDict ())}};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gb .ReadSeeker )(*PdfReader ,error ){const _befae ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";_fdccgec :=&PdfReader {_bgbae :rs ,_fdaec :map[_aa .PdfObject ]struct{}{},_cgaeff :_bfeag (),_edef :false };_afee ,_fcecf :=_facd ("\u0072");if _fcecf !=nil {return nil ,_fcecf ;};_fcecf =_aee .Track (_afee ,_befae );if _fcecf !=nil {return nil ,_fcecf ;};_fdccgec ._gaeb =_afee ;_gbbag ,_fcecf :=_aa .NewParser (rs );if _fcecf !=nil {return nil ,_fcecf ;};_fdccgec ._gbacd =_gbbag ;_adbgdd ,_fcecf :=_fdccgec .IsEncrypted ();if _fcecf !=nil {return nil ,_fcecf ;};if !_adbgdd {_fcecf =_fdccgec .loadStructure ();if _fcecf !=nil {return nil ,_fcecf ;};};return _fdccgec ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gacgc *PdfFunctionType2 )ToPdfObject ()_aa .PdfObject {_gabg :=_aa .MakeDict ();_gabg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aa .MakeInteger (2));_feaa :=&_aa .PdfObjectArray {};for _ ,_abcag :=range _gacgc .Domain {_feaa .Append (_aa .MakeFloat (_abcag ));};_gabg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_feaa );if _gacgc .Range !=nil {_deda :=&_aa .PdfObjectArray {};for _ ,_ffgdbg :=range _gacgc .Range {_deda .Append (_aa .MakeFloat (_ffgdbg ));};_gabg .Set ("\u0052\u0061\u006eg\u0065",_deda );};if _gacgc .C0 !=nil {_aaeed :=&_aa .PdfObjectArray {};for _ ,_dafae :=range _gacgc .C0 {_aaeed .Append (_aa .MakeFloat (_dafae ));};_gabg .Set ("\u0043\u0030",_aaeed );};if _gacgc .C1 !=nil {_afgde :=&_aa .PdfObjectArray {};for _ ,_bfdgd :=range _gacgc .C1 {_afgde .Append (_aa .MakeFloat (_bfdgd ));};_gabg .Set ("\u0043\u0031",_afgde );};_gabg .Set ("\u004e",_aa .MakeFloat (_gacgc .N ));if _gacgc ._dagd !=nil {_gacgc ._dagd .PdfObject =_gabg ;return _gacgc ._dagd ;};return _gabg ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gb .ReadSeeker )(*PdfFont ,error ){const _afgdbf =_af .CharCode (32);const _ebcce =_af .CharCode (255);_cgede ,_abcaf :=_fd .ReadAll (r );if _abcaf !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_abcaf );return nil ,_abcaf ;};_fgbfb ,_abcaf :=_fa .TtfParse (_dc .NewReader (_cgede ));if _abcaf !=nil {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_abcaf );return nil ,_abcaf ;};_dgab :=&pdfFontSimple {_ccga :make (map[_af .CharCode ]float64 ),fontCommon :fontCommon {_cbae :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_dgab ._ddbeg =_af .NewWinAnsiEncoder ();_dgab ._debe =_fgbfb .PostScriptName ;_dgab .FirstChar =_aa .MakeInteger (int64 (_afgdbf ));_dgab .LastChar =_aa .MakeInteger (int64 (_ebcce ));_dbdb :=1000.0/float64 (_fgbfb .UnitsPerEm );if len (_fgbfb .Widths )<=0{return nil ,_fda .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_ebagc :=_dbdb *float64 (_fgbfb .Widths [0]);_eaac :=make ([]float64 ,0,_ebcce -_afgdbf +1);for _fdada :=_afgdbf ;_fdada <=_ebcce ;_fdada ++{_fbgee ,_gccbg :=_dgab .Encoder ().CharcodeToRune (_fdada );if !_gccbg {_ba .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fdada );_eaac =append (_eaac ,_ebagc );continue ;};_eegda ,_fabe :=_fgbfb .Chars [_fbgee ];if !_fabe {_ba .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_eaac =append (_eaac ,_ebagc );continue ;};_fggd :=_dbdb *float64 (_fgbfb .Widths [_eegda ]);_eaac =append (_eaac ,_fggd );};_dgab .Widths =_aa .MakeIndirectObject (_aa .MakeArrayFromFloats (_eaac ));if len (_eaac )< int (_ebcce -_afgdbf +1){_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_eaac ),255-32+1);return nil ,_aa .ErrRangeError ;};for _dfbd :=_afgdbf ;_dfbd <=_ebcce ;_dfbd ++{_dgab ._ccga [_dfbd ]=_eaac [_dfbd -_afgdbf ];};_dgab .Encoding =_aa .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_cfade :=&PdfFontDescriptor {};_cfade .FontName =_aa .MakeName (_fgbfb .PostScriptName );_cfade .Ascent =_aa .MakeFloat (_dbdb *float64 (_fgbfb .TypoAscender ));_cfade .Descent =_aa .MakeFloat (_dbdb *float64 (_fgbfb .TypoDescender ));_cfade .CapHeight =_aa .MakeFloat (_dbdb *float64 (_fgbfb .CapHeight ));_cfade .FontBBox =_aa .MakeArrayFromFloats ([]float64 {_dbdb *float64 (_fgbfb .Xmin ),_dbdb *float64 (_fgbfb .Ymin ),_dbdb *float64 (_fgbfb .Xmax ),_dbdb *float64 (_fgbfb .Ymax )});_cfade .ItalicAngle =_aa .MakeFloat (_fgbfb .ItalicAngle );_cfade .MissingWidth =_aa .MakeFloat (_dbdb *float64 (_fgbfb .Widths [0]));_ccfa ,_abcaf :=_aa .MakeStream (_cgede ,_aa .NewFlateEncoder ());if _abcaf !=nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_abcaf );return nil ,_abcaf ;};_ccfa .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aa .MakeInteger (int64 (len (_cgede ))));_cfade .FontFile2 =_ccfa ;if _fgbfb .Bold {_cfade .StemV =_aa .MakeInteger (120);}else {_cfade .StemV =_aa .MakeInteger (70);};_adef :=_geea ;if _fgbfb .IsFixedPitch {_adef |=_acbb ;};if _fgbfb .ItalicAngle !=0{_adef |=_cbded ;};_cfade .Flags =_aa .MakeInteger (int64 (_adef ));_dgab ._edga =_cfade ;_gegb :=&PdfFont {_acdfa :_dgab };return _gegb ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_aa .PdfObjectArray ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fbfee *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fbfee .NumInputs {_ba .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_fda .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fbfee ._bbeb ==nil {_dgefd :=_fbfee .processSamples ();if _dgefd !=nil {return nil ,_dgefd ;};};_efcc :=_fbfee .Encode ;if _efcc ==nil {_efcc =[]float64 {};for _ecfe :=0;_ecfe < len (_fbfee .Size );_ecfe ++{_efcc =append (_efcc ,0);_efcc =append (_efcc ,float64 (_fbfee .Size [_ecfe ]-1));};};_agafb :=_fbfee .Decode ;if _agafb ==nil {_agafb =_fbfee .Range ;};_bffed :=make ([]int ,len (x ));for _ddgca :=0;_ddgca < len (x );_ddgca ++{_gbegd :=x [_ddgca ];_ggbeg :=_ag .Min (_ag .Max (_gbegd ,_fbfee .Domain [2*_ddgca ]),_fbfee .Domain [2*_ddgca +1]);_abdbc :=_ff .LinearInterpolate (_ggbeg ,_fbfee .Domain [2*_ddgca ],_fbfee .Domain [2*_ddgca +1],_efcc [2*_ddgca ],_efcc [2*_ddgca +1]);_cbfg :=_ag .Min (_ag .Max (_abdbc ,0),float64 (_fbfee .Size [_ddgca ]-1));_afeaac :=int (_ag .Floor (_cbfg +0.5));if _afeaac < 0{_afeaac =0;}else if _afeaac > _fbfee .Size [_ddgca ]{_afeaac =_fbfee .Size [_ddgca ]-1;};_bffed [_ddgca ]=_afeaac ;};_fffe :=_bffed [0];for _dedb :=1;_dedb < _fbfee .NumInputs ;_dedb ++{_aeec :=_bffed [_dedb ];for _ccebc :=0;_ccebc < _dedb ;_ccebc ++{_aeec *=_fbfee .Size [_ccebc ];};_fffe +=_aeec ;};_fffe *=_fbfee .NumOutputs ;var _debb []float64 ;for _ebae :=0;_ebae < _fbfee .NumOutputs ;_ebae ++{_ddfd :=_fffe +_ebae ;if _ddfd >=len (_fbfee ._bbeb ){_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_fbdce :=_fbfee ._bbeb [_ddfd ];_cded :=_ff .LinearInterpolate (float64 (_fbdce ),0,_ag .Pow (2,float64 (_fbfee .BitsPerSample )),_agafb [2*_ebae ],_agafb [2*_ebae +1]);_cgdf :=_ag .Min (_ag .Max (_cded ,_fbfee .Range [2*_ebae ]),_fbfee .Range [2*_ebae +1]);_debb =append (_debb ,_cgdf );};return _debb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_decf *PdfAnnotationSquare )ToPdfObject ()_aa .PdfObject {_decf .PdfAnnotation .ToPdfObject ();_egec :=_decf ._dde ;_dab :=_egec .PdfObject .(*_aa .PdfObjectDictionary );if _decf .PdfAnnotationMarkup !=nil {_decf .PdfAnnotationMarkup .appendToPdfDictionary (_dab );};_dab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_dab .SetIfNotNil ("\u0042\u0053",_decf .BS );_dab .SetIfNotNil ("\u0049\u0043",_decf .IC );_dab .SetIfNotNil ("\u0042\u0045",_decf .BE );_dab .SetIfNotNil ("\u0052\u0044",_decf .RD );return _egec ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bdcbb *XObjectImage )SetFilter (encoder _aa .StreamEncoder )error {_daace :=_bdcbb .Stream ;_eefcg ,_eedefb :=_bdcbb .Filter .DecodeBytes (_daace );if _eedefb !=nil {return _eedefb ;};_bdcbb .Filter =encoder ;encoder .UpdateParams (_bdcbb .getParamsDict ());_daace ,_eedefb =encoder .EncodeBytes (_eefcg );if _eedefb !=nil {return _eedefb ;};_bdcbb .Stream =_daace ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_abce *PdfAnnotationHighlight )ToPdfObject ()_aa .PdfObject {_abce .PdfAnnotation .ToPdfObject ();_fba :=_abce ._dde ;_fac :=_fba .PdfObject .(*_aa .PdfObjectDictionary );_abce .PdfAnnotationMarkup .appendToPdfDictionary (_fac );_fac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_fac .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_abce .QuadPoints );return _fba ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _aa .PdfObject ;_bdea []byte ;_dfcb *_aa .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_affad *PdfColorspaceDeviceGray )ToPdfObject ()_aa .PdfObject {return _aa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_abfa *PdfReader )newPdfAnnotationSoundFromDict (_eacb *_aa .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_cddc :=PdfAnnotationSound {};_acac ,_aada :=_abfa .newPdfAnnotationMarkupFromDict (_eacb );if _aada !=nil {return nil ,_aada ;};_cddc .PdfAnnotationMarkup =_acac ;_cddc .Name =_eacb .Get ("\u004e\u0061\u006d\u0065");_cddc .Sound =_eacb .Get ("\u0053\u006f\u0075n\u0064");return &_cddc ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dca *PdfAction )GetContainingPdfObject ()_aa .PdfObject {return _dca ._bg };func (_eegdf *PdfFunctionType0 )processSamples ()error {_cbegf :=_fdg .ResampleBytes (_eegdf ._gfdfd ,_eegdf .BitsPerSample );_eegdf ._bbeb =_cbegf ;return nil ;};func (_accc *PdfFilespec )getDict ()*_aa .PdfObjectDictionary {if _gaga ,_bbddg :=_accc ._bfeff .(*_aa .PdfIndirectObject );_bbddg {_eabgc ,_edfef :=_gaga .PdfObject .(*_aa .PdfObjectDictionary );if !_edfef {return nil ;};return _eabgc ;}else if _ggdfb ,_bgfbd :=_accc ._bfeff .(*_aa .PdfObjectDictionary );_bgfbd {return _ggdfb ;}else {_ba .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_accc ._bfeff );return nil ;};};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fcab *PdfFont )ToUnicode ()string {if _fcab .baseFields ()._dbacb ==nil {return "";};return _fcab .baseFields ()._dbacb .Name ();};

// ReplacePage replaces the original page to a new page.
func (_baae *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_fdfbb :=pageNum -1;for _gbf :=range _baae ._fdcc {if _gbf ==_fdfbb {_eebgf :=page .Duplicate ();_egbc (_eebgf );_baae ._fdcc [_gbf ]=_eebgf ;};};};

// GetCerts returns the signature certificate chain.
func (_gefcaf *PdfSignature )GetCerts ()([]*_ca .Certificate ,error ){var _bccc []func ()([]*_ca .Certificate ,error );switch _ddeg ,_ :=_aa .GetNameVal (_gefcaf .SubFilter );_ddeg {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bccc =append (_bccc ,_gefcaf .extractChainFromPKCS7 ,_gefcaf .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bccc =append (_bccc ,_gefcaf .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bccc =append (_bccc ,_gefcaf .extractChainFromPKCS7 );default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_ddeg );};for _ ,_eacg :=range _bccc {_bddfd ,_gfgfe :=_eacg ();if _gfgfe !=nil {return nil ,_gfgfe ;};if len (_bddfd )> 0{return _bddfd ,nil ;};};return nil ,ErrSignNoCertificates ;};

// B returns the value of the B component of the color.
func (_gdgec *PdfColorLab )B ()float64 {return _gdgec [2]};func (_bdbga *PdfFont )baseFields ()*fontCommon {if _bdbga ._acdfa ==nil {_ba .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _bdbga ._acdfa .baseFields ();};

// ToPdfObject implements interface PdfModel.
func (_dfacf *PdfAnnotationRedact )ToPdfObject ()_aa .PdfObject {_dfacf .PdfAnnotation .ToPdfObject ();_defe :=_dfacf ._dde ;_gfea :=_defe .PdfObject .(*_aa .PdfObjectDictionary );_dfacf .PdfAnnotationMarkup .appendToPdfDictionary (_gfea );_gfea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_gfea .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfacf .QuadPoints );_gfea .SetIfNotNil ("\u0049\u0043",_dfacf .IC );_gfea .SetIfNotNil ("\u0052\u004f",_dfacf .RO );_gfea .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dfacf .OverlayText );_gfea .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dfacf .Repeat );_gfea .SetIfNotNil ("\u0044\u0041",_dfacf .DA );_gfea .SetIfNotNil ("\u0051",_dfacf .Q );return _defe ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToInteger convert to an integer format.
func (_gafaf *PdfColorDeviceGray )ToInteger (bits int )uint32 {_fcae :=_ag .Pow (2,float64 (bits ))-1;return uint32 (_fcae *_gafaf .Val ());};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_deff *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_deff .updateObjectsDeep (dss .ToPdfObject (),nil );};_deff ._ddca =dss ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_gefg *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_fedb ,_ffbde :=color .(*PdfColorDeviceCMYK );if !_ffbde {_ba .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bada :=_fedb .C ();_becf :=_fedb .M ();_adbeg :=_fedb .Y ();_fbedb :=_fedb .K ();_bada =_bada *(1-_fbedb )+_fbedb ;_becf =_becf *(1-_fbedb )+_fbedb ;_adbeg =_adbeg *(1-_fbedb )+_fbedb ;_bddaf :=1-_bada ;_ccgd :=1-_becf ;_cdcd :=1-_adbeg ;return NewPdfColorDeviceRGB (_bddaf ,_ccgd ,_cdcd ),nil ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_ageae *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_adgd :=_ageae .GetContentStreamObjs ();wrapContents =wrapContents &&len (_adgd )> 0;_adebb :=_aa .NewFlateEncoder ();_fecc :=_aa .MakeArray ();if wrapContents {_cadeg ,_ggffe :=_aa .MakeStream ([]byte ("\u0071\u000a"),_adebb );if _ggffe !=nil {return _ggffe ;};_fecc .Append (_cadeg );};_fecc .Append (_adgd ...);if wrapContents {_eadbe ,_gfdb :=_aa .MakeStream ([]byte ("\u000a\u0051\u000a"),_adebb );if _gfdb !=nil {return _gfdb ;};_fecc .Append (_eadbe );};_gaedf ,_fdag :=_aa .MakeStream (cs ,_adebb );if _fdag !=nil {return _fdag ;};_fecc .Append (_gaedf );_ageae .Contents =_fecc ;return nil ;};

// Items returns all children outline items.
func (_cedg *OutlineItem )Items ()[]*OutlineItem {return _cedg .Entries };

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_gece *PdfAppender )Write (w _gb .Writer )error {if _gece ._gcfdc {return _fda .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_gdee :=NewPdfWriter ();_aaf ,_gdab :=_aa .GetDict (_gdee ._bfbdg );if !_gdab {return _fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_dfgb ,_gdab :=_aaf .Get ("\u004b\u0069\u0064\u0073").(*_aa .PdfObjectArray );if !_gdab {return _fda .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_ffgcb ,_gdab :=_aaf .Get ("\u0043\u006f\u0075n\u0074").(*_aa .PdfObjectInteger );if !_gdab {return _fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_afbg :=_gece ._edc ._gbacd ;_aeba :=_afbg .GetTrailer ();if _aeba ==nil {return _fda .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bcb ,_gdab :=_aa .GetIndirect (_aeba .Get ("\u0052\u006f\u006f\u0074"));if !_gdab {return _fda .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_aede ,_gdab :=_aa .GetDict (_bcb );if !_gdab {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bcb ,*_aeba );return _fda .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_dfcfb :=range _aede .Keys (){if _gdee ._gbcg .Get (_dfcfb )==nil {_fgce :=_aede .Get (_dfcfb );_gdee ._gbcg .Set (_dfcfb ,_fgce );};};if _gece ._cabd !=nil {_gdee ._gbcg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gece ._cabd .ToPdfObject ());_gece .updateObjectsDeep (_gece ._cabd .ToPdfObject (),nil );};if _gece ._ddca !=nil {_gece .updateObjectsDeep (_gece ._ddca .ToPdfObject (),nil );_gdee ._gbcg .Set ("\u0044\u0053\u0053",_gece ._ddca .GetContainingPdfObject ());};if _gdee ._abeac < 2{_gdee .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_gdee .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_gece .addNewObject (_gdee ._fgeca );_gece .addNewObject (_gdee ._cdff );_bgba :=false ;if len (_gece ._edc .PageList )!=len (_gece ._fdcc ){_bgba =true ;}else {for _afbd :=range _gece ._edc .PageList {switch {case _gece ._fdcc [_afbd ]==_gece ._edc .PageList [_afbd ]:case _gece ._fdcc [_afbd ]==_gece .Reader .PageList [_afbd ]:default:_bgba =true ;};if _bgba {break ;};};};if _bgba {_gece .updateObjectsDeep (_gdee ._bfbdg ,nil );}else {_gece ._dfag [_gdee ._bfbdg ]=struct{}{};};_gdee ._bfbdg .ObjectNumber =_gece .Reader ._gbef .ObjectNumber ;_gece ._dcbb [_gdee ._bfbdg ]=_gece .Reader ._gbef .ObjectNumber ;_eeg :=[]_aa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_afac :=range _gece ._fdcc {_adbe :=_afac .ToPdfObject ();*_ffgcb =*_ffgcb +1;if _degcc ,_dgcf :=_adbe .(*_aa .PdfIndirectObject );_dgcf &&_degcc .GetParser ()==_gece ._edc ._gbacd {_dfgb .Append (&_degcc .PdfObjectReference );continue ;};if _cege ,_ggec :=_aa .GetDict (_adbe );_ggec {_aadb ,_dgbb :=_cege .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aa .PdfIndirectObject );for _dgbb {_ba .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aadb );_dbac ,_adecc :=_aadb .PdfObject .(*_aa .PdfObjectDictionary );if !_adecc {return _fda .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_feadb :=range _eeg {_ba .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_feadb );if _cege .Get (_feadb )!=nil {_ba .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _fcad :=_dbac .Get (_feadb );_fcad !=nil {_ba .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_feadb );_cege .Set (_feadb ,_fcad );};};_aadb ,_dgbb =_dbac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aa .PdfIndirectObject );_ba .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dbac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_cege .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdee ._bfbdg );};_gece .updateObjectsDeep (_adbe ,nil );_dfgb .Append (_adbe );};if _ ,_bgfa :=_gece ._fdfb .Seek (0,_gb .SeekStart );_bgfa !=nil {return _bgfa ;};_daebd :=make (map[SignatureHandler ]_gb .Writer );_gfae :=_aa .MakeArray ();for _ ,_cebb :=range _gece ._dbae {if _badd ,_bge :=_aa .GetIndirect (_cebb );_bge {if _eecf ,_adfe :=_badd .PdfObject .(*pdfSignDictionary );_adfe {_afcg :=*_eecf ._fefa ;var _ebc error ;_daebd [_afcg ],_ebc =_afcg .NewDigest (_eecf ._gcgf );if _ebc !=nil {return _ebc ;};_gfae .Append (_aa .MakeInteger (0xfffff),_aa .MakeInteger (0xfffff));};};};if _gfae .Len ()> 0{_gfae .Append (_aa .MakeInteger (0xfffff),_aa .MakeInteger (0xfffff));};for _ ,_cacf :=range _gece ._dbae {if _dfdff ,_bbga :=_aa .GetIndirect (_cacf );_bbga {if _fada ,_cceb :=_dfdff .PdfObject .(*pdfSignDictionary );_cceb {_fada .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gfae );};};};_efa :=len (_daebd )> 0;var _cgda _gb .Reader =_gece ._fdfb ;if _efa {_bed :=make ([]_gb .Writer ,0,len (_daebd ));for _ ,_fegg :=range _daebd {_bed =append (_bed ,_fegg );};_cgda =_gb .TeeReader (_gece ._fdfb ,_gb .MultiWriter (_bed ...));};_cgcd ,_adgbf :=_gb .Copy (w ,_cgda );if _adgbf !=nil {return _adgbf ;};if len (_gece ._dbae )==0{return nil ;};_gdee ._bfaeg =_cgcd ;_gdee .ObjNumOffset =_gece ._afad ;_gdee ._dgfbd =true ;_gdee ._deedd =_gece ._eddb ;_gdee ._gdde =_gece ._gcd ;_gdee ._gfbdgb =_gece ._fdef ;_gdee ._ccdd =_gece ._edc .PdfVersion ().Minor ;_gdee ._edff =_gece ._dcbb ;_cfad :=_gece ._gdeg .GetXrefType ();if _cfad !=nil {_adba :=*_cfad ==_aa .XrefTypeObjectStream ;_gdee ._acgbd =&_adba ;};_gdee ._faceg =map[_aa .PdfObject ]struct{}{};_gdee ._gecd =[]_aa .PdfObject {};for _ ,_bbdd :=range _gece ._dbae {if _ ,_acfd :=_gece ._dfag [_bbdd ];_acfd {continue ;};_gdee .addObject (_bbdd );};_agacd :=w ;if _efa {_agacd =_dc .NewBuffer (nil );};if _fgg :=_gdee .Write (_agacd );_fgg !=nil {return _fgg ;};if _efa {_dgfebg :=_agacd .(*_dc .Buffer ).Bytes ();_eabc :=_aa .MakeArray ();var _ddgb []*pdfSignDictionary ;var _cgbe int64 ;for _ ,_cdbae :=range _gdee ._gecd {if _agaff ,_baad :=_aa .GetIndirect (_cdbae );_baad {if _gbdc ,_bgcf :=_agaff .PdfObject .(*pdfSignDictionary );_bgcf {_ddgb =append (_ddgb ,_gbdc );_agcbc :=_gbdc ._bdaaf +int64 (_gbdc ._ebaad );_eabc .Append (_aa .MakeInteger (_cgbe ),_aa .MakeInteger (_agcbc -_cgbe ));_cgbe =_gbdc ._bdaaf +int64 (_gbdc ._acbe );};};};_eabc .Append (_aa .MakeInteger (_cgbe ),_aa .MakeInteger (_cgcd +int64 (len (_dgfebg ))-_cgbe ));_gfeb :=[]byte (_eabc .WriteString ());for _ ,_cecad :=range _ddgb {_faab :=int (_cecad ._bdaaf -_cgcd );for _eecfd :=_cecad ._dfga ;_eecfd < _cecad ._baceb ;_eecfd ++{_dgfebg [_faab +_eecfd ]=' ';};_caae :=_dgfebg [_faab +_cecad ._dfga :_faab +_cecad ._baceb ];copy (_caae ,_gfeb );};var _gdbc int ;for _ ,_gdbbc :=range _ddgb {_adbaf :=int (_gdbbc ._bdaaf -_cgcd );_bbcc :=_dgfebg [_gdbc :_adbaf +_gdbbc ._ebaad ];_gaddb :=*_gdbbc ._fefa ;_daebd [_gaddb ].Write (_bbcc );_gdbc =_adbaf +_gdbbc ._acbe ;};for _ ,_gbce :=range _ddgb {_eeege :=_dgfebg [_gdbc :];_gbca :=*_gbce ._fefa ;_daebd [_gbca ].Write (_eeege );};for _ ,_dged :=range _ddgb {_bged :=int (_dged ._bdaaf -_cgcd );_cfaaa :=*_dged ._fefa ;_dgcc :=_daebd [_cfaaa ];if _ecaa :=_cfaaa .Sign (_dged ._gcgf ,_dgcc );_ecaa !=nil {return _ecaa ;};_dged ._gcgf .ByteRange =_eabc ;_ddac :=[]byte (_dged ._gcgf .Contents .WriteString ());for _feggc :=_dged ._dfga ;_feggc < _dged ._baceb ;_feggc ++{_dgfebg [_bged +_feggc ]=' ';};for _aeac :=_dged ._ebaad ;_aeac < _dged ._acbe ;_aeac ++{_dgfebg [_bged +_aeac ]=' ';};_gafce :=_dgfebg [_bged +_dged ._dfga :_bged +_dged ._baceb ];copy (_gafce ,_gfeb );_gafce =_dgfebg [_bged +_dged ._ebaad :_bged +_dged ._acbe ];copy (_gafce ,_ddac );};_gbeg :=_dc .NewBuffer (_dgfebg );_ ,_adgbf =_gb .Copy (w ,_gbeg );if _adgbf !=nil {return _adgbf ;};};_gece ._gcfdc =true ;return nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fgbac *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gefca []*PdfField ;if _fgbac .AcroForm !=nil {_gefca =_fgbac .AcroForm .AllFields ();};_ddbege :=make (map[*PdfField ]struct{},len (_gefca ));for _ ,_fegdb :=range _gefca {_ddbege [_fegdb ]=struct{}{};};for _ ,_acdd :=range _fgbac .PageList {_dfeea ,_cafde :=_acdd .GetAnnotations ();if _cafde !=nil {return false ,_cafde ;};for _ ,_bbfce :=range _dfeea {_acebd ,_eddf :=_bbfce .GetContext ().(*PdfAnnotationWidget );if !_eddf {continue ;};_acbbc :=_acebd .Field ();if _acbbc ==nil {return true ,nil ;};if _ ,_fgcf :=_ddbege [_acbbc ];!_fgcf {return true ,nil ;};};};return false ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_baefae *PdfTilingPattern )SetContentStream (content []byte ,encoder _aa .StreamEncoder )error {_ecfad ,_becdbe :=_baefae ._dedae .(*_aa .PdfObjectStream );if !_becdbe {_ba .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_baefae ._dedae );return _aa .ErrTypeError ;};if encoder ==nil {encoder =_aa .NewRawEncoder ();};_ggbf :=_ecfad .PdfObjectDictionary ;_bdegf :=encoder .MakeStreamDict ();_ggbf .Merge (_bdegf );_gaecd ,_cegeg :=encoder .EncodeBytes (content );if _cegeg !=nil {return _cegeg ;};_ggbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aa .MakeInteger (int64 (len (_gaecd ))));_ecfad .Stream =_gaecd ;return nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_acaa :=&PdfColorspaceSpecialSeparation {};return _acaa ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_adcgb *PdfAcroForm )GetContainingPdfObject ()_aa .PdfObject {return _adcgb ._acba };func _fbfg (_ggbcb []byte )[]byte {const _feag =52845;const _bbfec =22719;_ceged :=55665;for _ ,_bace :=range _ggbcb [:4]{_ceged =(int (_bace )+_ceged )*_feag +_bbfec ;};_deade :=make ([]byte ,len (_ggbcb )-4);for _gfefg ,_ebbe :=range _ggbcb [4:]{_deade [_gfefg ]=byte (int (_ebbe )^_ceged >>8);_ceged =(int (_ebbe )+_ceged )*_feag +_bbfec ;};return _deade ;};func (_gbec *PdfReader )newPdfAnnotationMovieFromDict (_gccd *_aa .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_fgcg :=PdfAnnotationMovie {};_fgcg .T =_gccd .Get ("\u0054");_fgcg .Movie =_gccd .Get ("\u004d\u006f\u0076i\u0065");_fgcg .A =_gccd .Get ("\u0041");return &_fgcg ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_cgeb :=&PdfFieldSignature {};_cgeb .PdfField =NewPdfField ();_cgeb .PdfField .SetContext (_cgeb );_cgeb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_cgeb .PdfAnnotationWidget .SetContext (_cgeb );_cgeb .PdfAnnotationWidget ._dde =_cgeb .PdfField ._ebabe ;_cgeb .T =_aa .MakeString ("");_cgeb .F =_aa .MakeInteger (132);_cgeb .V =signature ;return _cgeb ;};func _bfeag ()*modelManager {_dfdd :=modelManager {};_dfdd ._ebcfa =map[PdfModel ]_aa .PdfObject {};_dfdd ._faed =map[_aa .PdfObject ]PdfModel {};return &_dfdd ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_accfe *PdfColorspaceCalGray )ToPdfObject ()_aa .PdfObject {_aafc :=&_aa .PdfObjectArray {};_aafc .Append (_aa .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_beffc :=_aa .MakeDict ();if _accfe .WhitePoint !=nil {_beffc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_aa .MakeArray (_aa .MakeFloat (_accfe .WhitePoint [0]),_aa .MakeFloat (_accfe .WhitePoint [1]),_aa .MakeFloat (_accfe .WhitePoint [2])));}else {_ba .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _accfe .BlackPoint !=nil {_beffc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aa .MakeArray (_aa .MakeFloat (_accfe .BlackPoint [0]),_aa .MakeFloat (_accfe .BlackPoint [1]),_aa .MakeFloat (_accfe .BlackPoint [2])));};_beffc .Set ("\u0047\u0061\u006dm\u0061",_aa .MakeFloat (_accfe .Gamma ));_aafc .Append (_beffc );if _accfe ._abbfc !=nil {_accfe ._abbfc .PdfObject =_aafc ;return _accfe ._abbfc ;};return _aafc ;};

// ToPdfObject implements interface PdfModel.
func (_ecf *PdfActionSubmitForm )ToPdfObject ()_aa .PdfObject {_ecf .PdfAction .ToPdfObject ();_aac :=_ecf ._bg ;_baf :=_aac .PdfObject .(*_aa .PdfObjectDictionary );_baf .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeSubmitForm )));if _ecf .F !=nil {_baf .Set ("\u0046",_ecf .F .ToPdfObject ());};_baf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ecf .Fields );_baf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ecf .Flags );return _aac ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_ddbg FieldFlag )Mask ()uint32 {return uint32 (_ddbg )};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_dcd :=NewPdfAnnotation ();_ged :=&PdfAnnotationFreeText {};_ged .PdfAnnotation =_dcd ;_ged .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcd .SetContext (_ged );return _ged ;};

// ToPdfObject implements interface PdfModel.
func (_aeg *PdfActionGoToR )ToPdfObject ()_aa .PdfObject {_aeg .PdfAction .ToPdfObject ();_gd :=_aeg ._bg ;_aec :=_gd .PdfObject .(*_aa .PdfObjectDictionary );_aec .SetIfNotNil ("\u0053",_aa .MakeName (string (ActionTypeGoToR )));if _aeg .F !=nil {_aec .Set ("\u0046",_aeg .F .ToPdfObject ());};_aec .SetIfNotNil ("\u0044",_aeg .D );_aec .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_aeg .NewWindow );return _gd ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_beea .Lock ();defer _beea .Unlock ();_bdddbe =keywords };

// ToPdfObject implements interface PdfModel.
func (_efef *PdfAnnotationInk )ToPdfObject ()_aa .PdfObject {_efef .PdfAnnotation .ToPdfObject ();_aecd :=_efef ._dde ;_dcge :=_aecd .PdfObject .(*_aa .PdfObjectDictionary );_efef .PdfAnnotationMarkup .appendToPdfDictionary (_dcge );_dcge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0049\u006e\u006b"));_dcge .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_efef .InkList );_dcge .SetIfNotNil ("\u0042\u0053",_efef .BS );return _aecd ;};

// ToPdfObject implements interface PdfModel.
func (_fdbfa *PdfAnnotationText )ToPdfObject ()_aa .PdfObject {_fdbfa .PdfAnnotation .ToPdfObject ();_gdbb :=_fdbfa ._dde ;_gdfe :=_gdbb .PdfObject .(*_aa .PdfObjectDictionary );if _fdbfa .PdfAnnotationMarkup !=nil {_fdbfa .PdfAnnotationMarkup .appendToPdfDictionary (_gdfe );};_gdfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0054\u0065\u0078\u0074"));_gdfe .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fdbfa .Open );_gdfe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fdbfa .Name );_gdfe .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fdbfa .State );_gdfe .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fdbfa .StateModel );return _gdbb ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_beea .Lock ();defer _beea .Unlock ();_adafa =subject };func (_efaa *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _efgea :=_efaa ._edga ;_efgea !=nil {return _efgea ;};return _efaa ._aebb ;};

// ToPdfObject returns the PDF representation of the function.
func (_ggcgf *PdfFunctionType3 )ToPdfObject ()_aa .PdfObject {_bedca :=_aa .MakeDict ();_bedca .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aa .MakeInteger (3));_fgbad :=&_aa .PdfObjectArray {};for _ ,_fgbbf :=range _ggcgf .Domain {_fgbad .Append (_aa .MakeFloat (_fgbbf ));};_bedca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgbad );if _ggcgf .Range !=nil {_dfceb :=&_aa .PdfObjectArray {};for _ ,_dgaa :=range _ggcgf .Range {_dfceb .Append (_aa .MakeFloat (_dgaa ));};_bedca .Set ("\u0052\u0061\u006eg\u0065",_dfceb );};if _ggcgf .Functions !=nil {_afag :=&_aa .PdfObjectArray {};for _ ,_aefgc :=range _ggcgf .Functions {_afag .Append (_aefgc .ToPdfObject ());};_bedca .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_afag );};if _ggcgf .Bounds !=nil {_egbg :=&_aa .PdfObjectArray {};for _ ,_eebga :=range _ggcgf .Bounds {_egbg .Append (_aa .MakeFloat (_eebga ));};_bedca .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_egbg );};if _ggcgf .Encode !=nil {_cfac :=&_aa .PdfObjectArray {};for _ ,_aacb :=range _ggcgf .Encode {_cfac .Append (_aa .MakeFloat (_aacb ));};_bedca .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_cfac );};if _ggcgf ._gdad !=nil {_ggcgf ._gdad .PdfObject =_bedca ;return _ggcgf ._gdad ;};return _bedca ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ebegb *pdfFontSimple )SetEncoder (encoder _af .TextEncoder ){_ebegb ._ddbeg =encoder };func _ecgb (_adbafe []byte )bool {if len (_adbafe )< 4{return true ;};for _cbgb :=range _adbafe [:4]{_fbdc :=rune (_cbgb );if !_cag .Is (_cag .ASCII_Hex_Digit ,_fbdc )&&!_cag .IsSpace (_fbdc ){return true ;};};return false ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gbc :=NewPdfAction ();_baa :=&PdfActionGoToR {};_baa .PdfAction =_gbc ;_gbc .SetContext (_baa );return _baa ;};func (_ebg *PdfReader )newPdfAnnotationLineFromDict (_beff *_aa .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cacb :=PdfAnnotationLine {};_ccad ,_dec :=_ebg .newPdfAnnotationMarkupFromDict (_beff );if _dec !=nil {return nil ,_dec ;};_cacb .PdfAnnotationMarkup =_ccad ;_cacb .L =_beff .Get ("\u004c");_cacb .BS =_beff .Get ("\u0042\u0053");_cacb .LE =_beff .Get ("\u004c\u0045");_cacb .IC =_beff .Get ("\u0049\u0043");_cacb .LL =_beff .Get ("\u004c\u004c");_cacb .LLE =_beff .Get ("\u004c\u004c\u0045");_cacb .Cap =_beff .Get ("\u0043\u0061\u0070");_cacb .IT =_beff .Get ("\u0049\u0054");_cacb .LLO =_beff .Get ("\u004c\u004c\u004f");_cacb .CP =_beff .Get ("\u0043\u0050");_cacb .Measure =_beff .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_cacb .CO =_beff .Get ("\u0043\u004f");return &_cacb ,nil ;};func (_gbcd *pdfFontSimple )getFontEncoding ()(_aebag string ,_abagb map[_af .CharCode ]_af .GlyphName ,_ffbb error ){_aebag ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _beba ,_cgaf :=_gfbe [_gbcd ._debe ];_cgaf {_aebag =_beba ;}else if _gbcd .fontFlags ()&_bafcb !=0{for _efbdg ,_ecaec :=range _gfbe {if _ga .Contains (_gbcd ._debe ,_efbdg ){_aebag =_ecaec ;break ;};};};if _gbcd .Encoding ==nil {return _aebag ,nil ,nil ;};switch _eedad :=_gbcd .Encoding .(type ){case *_aa .PdfObjectName :return string (*_eedad ),nil ,nil ;case *_aa .PdfObjectDictionary :_bdbgfd ,_ebbf :=_aa .GetName (_eedad .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ebbf {_aebag =_bdbgfd .String ();};if _cffg :=_eedad .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_cffg !=nil {_bgcec ,_gaacc :=_aa .GetArray (_cffg );if !_gaacc {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_eedad ,_eedad .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_aa .ErrTypeError ;};_abagb ,_ffbb =_af .FromFontDifferences (_bgcec );};return _aebag ,_abagb ,_ffbb ;default:_ba .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gbcd .Encoding ,_gbcd .Encoding );return "",nil ,_aa .ErrTypeError ;};};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cf :=NewPdfAction ();_eg :=&PdfActionSound {};_eg .PdfAction =_cf ;_cf .SetContext (_eg );return _eg ;};var _ _aa .PdfObject =&pdfSignDictionary {};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_efeb :=PdfColorDeviceRGB {r ,g ,b };return &_efeb ;};

// ToPdfObject converts date to a PDF string object.
func (_ddfbb *PdfDate )ToPdfObject ()_aa .PdfObject {_bcegc :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ddfbb ._bfegad ,_ddfbb ._ddbbg ,_ddfbb ._efdea ,_ddfbb ._gcga ,_ddfbb ._ecca ,_ddfbb ._ddgce ,_ddfbb ._gaad ,_ddfbb ._bcgbe ,_ddfbb ._affda );return _aa .MakeString (_bcegc );};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bedec *Image )GetParamsDict ()*_aa .PdfObjectDictionary {_fded :=_aa .MakeDict ();_fded .Set ("\u0057\u0069\u0064t\u0068",_aa .MakeInteger (_bedec .Width ));_fded .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aa .MakeInteger (_bedec .Height ));_fded .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aa .MakeInteger (int64 (_bedec .ColorComponents )));_fded .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aa .MakeInteger (_bedec .BitsPerComponent ));return _fded ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_aa .PdfObjectStream )(*XObjectForm ,error ){_gafec :=&XObjectForm {};_gafec ._affbc =stream ;_ceeed :=*(stream .PdfObjectDictionary );_cfcbc ,_deeff :=_aa .NewEncoderFromStream (stream );if _deeff !=nil {return nil ,_deeff ;};_gafec .Filter =_cfcbc ;if _gfegb :=_ceeed .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gfegb !=nil {_bdabb ,_bdfea :=_gfegb .(*_aa .PdfObjectName );if !_bdfea {return nil ,_fda .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_bdabb !="\u0046\u006f\u0072\u006d"{_ba .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fda .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _adcde :=_ceeed .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_adcde !=nil {_gafec .FormType =_adcde ;};if _cceaf :=_ceeed .Get ("\u0042\u0042\u006f\u0078");_cceaf !=nil {_gafec .BBox =_cceaf ;};if _dafddg :=_ceeed .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dafddg !=nil {_gafec .Matrix =_dafddg ;};if _dafbb :=_ceeed .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dafbb !=nil {_dafbb =_aa .TraceToDirectObject (_dafbb );_ffgf ,_abfff :=_dafbb .(*_aa .PdfObjectDictionary );if !_abfff {_ba .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_aa .ErrTypeError ;};_fcafb ,_dfdeb :=NewPdfPageResourcesFromDict (_ffgf );if _dfdeb !=nil {_ba .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_dfdeb ;};_gafec .Resources =_fcafb ;_ba .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gafec .Resources );};_gafec .Group =_ceeed .Get ("\u0047\u0072\u006fu\u0070");_gafec .Ref =_ceeed .Get ("\u0052\u0065\u0066");_gafec .MetaData =_ceeed .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gafec .PieceInfo =_ceeed .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gafec .LastModified =_ceeed .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gafec .StructParent =_ceeed .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gafec .StructParents =_ceeed .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gafec .OPI =_ceeed .Get ("\u004f\u0050\u0049");_gafec .OC =_ceeed .Get ("\u004f\u0043");_gafec .Name =_ceeed .Get ("\u004e\u0061\u006d\u0065");_gafec .Stream =stream .Stream ;return _gafec ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_aedae *modelManager )GetModelFromPrimitive (primitive _aa .PdfObject )PdfModel {model ,_eefda :=_aedae ._faed [primitive ];if !_eefda {return nil ;};return model ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_adabf *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_adabf .GetNumComponents (){return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bacb ,_gcace :=_adabf .TintTransform .Evaluate (vals );if _gcace !=nil {return nil ,_gcace ;};_bafde ,_gcace :=_adabf .AlternateSpace .ColorFromFloats (_bacb );if _gcace !=nil {return nil ,_gcace ;};return _bafde ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aa .PdfObject ;LE _aa .PdfObject ;BS _aa .PdfObject ;IC _aa .PdfObject ;BE _aa .PdfObject ;IT _aa .PdfObject ;Measure _aa .PdfObject ;};func _bbacf (_eegdaa *_aa .PdfObjectStream )(*PdfFunctionType0 ,error ){_dgeff :=&PdfFunctionType0 {};_dgeff ._efgaf =_eegdaa ;_fddb :=_eegdaa .PdfObjectDictionary ;_dbgee ,_dbdfb :=_aa .TraceToDirectObject (_fddb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aa .PdfObjectArray );if !_dbdfb {_ba .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dbgee .Len ()< 0||_dbgee .Len ()%2!=0{_ba .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fda .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dgeff .NumInputs =_dbgee .Len ()/2;_gdegd ,_agaac :=_dbgee .ToFloat64Array ();if _agaac !=nil {return nil ,_agaac ;};_dgeff .Domain =_gdegd ;_dbgee ,_dbdfb =_aa .TraceToDirectObject (_fddb .Get ("\u0052\u0061\u006eg\u0065")).(*_aa .PdfObjectArray );if !_dbdfb {_ba .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dbgee .Len ()< 0||_dbgee .Len ()%2!=0{return nil ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dgeff .NumOutputs =_dbgee .Len ()/2;_eecfdf ,_agaac :=_dbgee .ToFloat64Array ();if _agaac !=nil {return nil ,_agaac ;};_dgeff .Range =_eecfdf ;_dbgee ,_dbdfb =_aa .TraceToDirectObject (_fddb .Get ("\u0053\u0069\u007a\u0065")).(*_aa .PdfObjectArray );if !_dbdfb {_ba .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_afgf ,_agaac :=_dbgee .ToIntegerArray ();if _agaac !=nil {return nil ,_agaac ;};if len (_afgf )!=_dgeff .NumInputs {_ba .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgeff .Size =_afgf ;_eedcf ,_dbdfb :=_aa .TraceToDirectObject (_fddb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_aa .PdfObjectInteger );if !_dbdfb {_ba .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fda .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_eedcf !=1&&*_eedcf !=2&&*_eedcf !=4&&*_eedcf !=8&&*_eedcf !=12&&*_eedcf !=16&&*_eedcf !=24&&*_eedcf !=32{_ba .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_eedcf );return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgeff .BitsPerSample =int (*_eedcf );_dgeff .Order =1;_bcbfa ,_dbdfb :=_aa .TraceToDirectObject (_fddb .Get ("\u004f\u0072\u0064e\u0072")).(*_aa .PdfObjectInteger );if _dbdfb {if *_bcbfa !=1&&*_bcbfa !=3{_ba .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_bcbfa );return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgeff .Order =int (*_bcbfa );};_dbgee ,_dbdfb =_aa .TraceToDirectObject (_fddb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aa .PdfObjectArray );if _dbdfb {_egfae ,_agcbe :=_dbgee .ToFloat64Array ();if _agcbe !=nil {return nil ,_agcbe ;};_dgeff .Encode =_egfae ;};_dbgee ,_dbdfb =_aa .TraceToDirectObject (_fddb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_aa .PdfObjectArray );if _dbdfb {_bceb ,_aceff :=_dbgee .ToFloat64Array ();if _aceff !=nil {return nil ,_aceff ;};_dgeff .Decode =_bceb ;};_eedb ,_agaac :=_aa .DecodeStream (_eegdaa );if _agaac !=nil {return nil ,_agaac ;};_dgeff ._gfdfd =_eedb ;return _dgeff ,nil ;};func _cdgbd (_egff _aa .PdfObject ,_cbea *fontCommon )(*_dgg .CMap ,error ){_bbaad ,_egeae :=_aa .GetStream (_egff );if !_egeae {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_egff );return nil ,_aa .ErrTypeError ;};_gecf ,_gbgf :=_aa .DecodeStream (_bbaad );if _gbgf !=nil {return nil ,_gbgf ;};_eggd ,_gbgf :=_dgg .LoadCmapFromData (_gecf ,!_cbea .isCIDFont ());if _gbgf !=nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_bbaad .ObjectNumber ,_gbgf );};return _eggd ,_gbgf ;};func _bbac (_dgfde *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_dgfde }};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eebgfd *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dffc :=vals [0];_ffee :=[]float64 {_dffc };_acbcg ,_fffc :=_eebgfd .TintTransform .Evaluate (_ffee );if _fffc !=nil {_ba .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_fffc );_ba .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eebgfd .TintTransform );return nil ,_fffc ;};_ba .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_acbcg ,_eebgfd .AlternateSpace );_fgga ,_fffc :=_eebgfd .AlternateSpace .ColorFromFloats (_acbcg );if _fffc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_fffc );return nil ,_fffc ;};return _fgga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bdca *PdfAnnotationUnderline )ToPdfObject ()_aa .PdfObject {_bdca .PdfAnnotation .ToPdfObject ();_dacc :=_bdca ._dde ;_beag :=_dacc .PdfObject .(*_aa .PdfObjectDictionary );_bdca .PdfAnnotationMarkup .appendToPdfDictionary (_beag );_beag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_beag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bdca .QuadPoints );return _dacc ;};

// GetNumPages returns the number of pages in the document.
func (_fegab *PdfReader )GetNumPages ()(int ,error ){if _fegab ._gbacd .GetCrypter ()!=nil &&!_fegab ._gbacd .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_fegab ._abfgd ),nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _aa .PdfObject ;ColorSpace _aa .PdfObject ;Pattern _aa .PdfObject ;Shading _aa .PdfObject ;XObject _aa .PdfObject ;Font _aa .PdfObject ;ProcSet _aa .PdfObject ;Properties _aa .PdfObject ;_dcgg *_aa .PdfObjectDictionary ;_eage *PdfPageResourcesColorspaces ;};func (_cade *pdfFontType0 )baseFields ()*fontCommon {return &_cade .fontCommon };

// ToGoTime returns the date in time.Time format.
func (_eebfe PdfDate )ToGoTime ()_ab .Time {_aagdf :=int (_eebfe ._bcgbe *60*60+_eebfe ._affda *60);switch _eebfe ._gaad {case '-':_aagdf =-_aagdf ;case 'Z':_aagdf =0;};_beded :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_eebfe ._gaad ,_eebfe ._bcgbe ,_eebfe ._affda );_cbac :=_ab .FixedZone (_beded ,_aagdf );return _ab .Date (int (_eebfe ._bfegad ),_ab .Month (_eebfe ._ddbbg ),int (_eebfe ._efdea ),int (_eebfe ._gcga ),int (_eebfe ._ecca ),int (_eebfe ._ddgce ),0,_cbac );};

// GetPage returns the PdfPage model for the specified page number.
func (_defaa *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _defaa ._gbacd .GetCrypter ()!=nil &&!_defaa ._gbacd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_defaa ._abfgd )< pageNumber {return nil ,_fda .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_gdcfg :=pageNumber -1;if _gdcfg < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_gddbb :=_defaa .PageList [_gdcfg ];return _gddbb ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_agge *PdfFieldButton )ToPdfObject ()_aa .PdfObject {_agge .PdfField .ToPdfObject ();_dbca :=_agge ._ebabe ;_bdga :=_dbca .PdfObject .(*_aa .PdfObjectDictionary );_bdga .Set ("\u0046\u0054",_aa .MakeName ("\u0042\u0074\u006e"));if _agge .Opt !=nil {_bdga .Set ("\u004f\u0070\u0074",_agge .Opt );};return _dbca ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ab .Time ){_beea .Lock ();defer _beea .Unlock ();_deae =creationDate ;};func (_eafea *PdfWriter )seekByName (_dabf _aa .PdfObject ,_befbg []string ,_edcda string )([]_aa .PdfObject ,error ){_ba .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_dabf );var _bbdf []_aa .PdfObject ;if _gbeag ,_eafdc :=_dabf .(*_aa .PdfIndirectObject );_eafdc {return _eafea .seekByName (_gbeag .PdfObject ,_befbg ,_edcda );};if _gffdd ,_dcbed :=_dabf .(*_aa .PdfObjectStream );_dcbed {return _eafea .seekByName (_gffdd .PdfObjectDictionary ,_befbg ,_edcda );};if _ddabab ,_bcafb :=_dabf .(*_aa .PdfObjectDictionary );_bcafb {_ba .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_efgf :=range _ddabab .Keys (){_baee :=_ddabab .Get (_efgf );if string (_efgf )==_edcda {_bbdf =append (_bbdf ,_baee );};for _ ,_eecda :=range _befbg {if string (_efgf )==_eecda {_ba .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_eecda );_ffcca ,_bccg :=_eafea .seekByName (_baee ,_befbg ,_edcda );if _bccg !=nil {return _bbdf ,_bccg ;};_bbdf =append (_bbdf ,_ffcca ...);break ;};};};return _bbdf ,nil ;};return _bbdf ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_aagb :=PdfColorDeviceGray (grayVal );return &_aagb ;};func (_egcb *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _egcb ._gbacd .GetCrypter ()!=nil &&!_egcb ._gbacd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_adfbf :=_egcb ._fbdcg ;_ebfb :=_adfbf .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _ebfb ==nil {return nil ,nil ;};_efccf ,_ :=_aa .GetIndirect (_ebfb );_ebfb =_aa .TraceToDirectObject (_ebfb );if _aa .IsNullObject (_ebfb ){_ba .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_caddf ,_dfcfa :=_aa .GetDict (_ebfb );if !_dfcfa {_ba .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ebfb );_ba .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ebfb );};_ba .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_ba .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_egcb ._edef {_agfbd :=_egcb .traverseObjectData (_caddf );if _agfbd !=nil {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_agfbd );return nil ,_agfbd ;};};_dcada ,_cfadfe :=_egcb .newPdfAcroFormFromDict (_efccf ,_caddf );if _cfadfe !=nil {return nil ,_cfadfe ;};return _dcada ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_ddga *PdfPageResources )SetPatternByName (keyName _aa .PdfObjectName ,pattern _aa .PdfObject )error {if _ddga .Pattern ==nil {_ddga .Pattern =_aa .MakeDict ();};_eefgd ,_cabfe :=_ddga .Pattern .(*_aa .PdfObjectDictionary );if !_cabfe {return _aa .ErrTypeError ;};_eefgd .Set (keyName ,pattern );return nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_cecfg *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _bcbc []*PdfOutlineTreeNode ;var _bedda []string ;var _dbdbf func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_dbdbf =func (_adca *PdfOutlineTreeNode ,_dabgd *[]*PdfOutlineTreeNode ,_dcab *[]string ,_cbfgag int ){if _adca ==nil {return ;};if _adca ._caeff ==nil {_ba .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_gfcda ,_cdgc :=_adca ._caeff .(*PdfOutlineItem );if _cdgc {*_dabgd =append (*_dabgd ,&_gfcda .PdfOutlineTreeNode );_ecaac :=_ga .Repeat ("\u0020",_cbfgag *2)+_gfcda .Title .Decoded ();*_dcab =append (*_dcab ,_ecaac );};if _adca .First !=nil {_bbea :=_ga .Repeat ("\u0020",_cbfgag *2)+"\u002b";*_dcab =append (*_dcab ,_bbea );_dbdbf (_adca .First ,_dabgd ,_dcab ,_cbfgag +1);};if _cdgc &&_gfcda .Next !=nil {_dbdbf (_gfcda .Next ,_dabgd ,_dcab ,_cbfgag );};};_dbdbf (_cecfg ._eadba ,&_bcbc ,&_bedda ,0);return _bcbc ,_bedda ,nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _aa .PdfObject ;BS _aa .PdfObject ;};

// ToPdfObject returns a stream object.
func (_gdfa *XObjectForm )ToPdfObject ()_aa .PdfObject {_fabfa :=_gdfa ._affbc ;_bdfbg :=_fabfa .PdfObjectDictionary ;if _gdfa .Filter !=nil {_bdfbg =_gdfa .Filter .MakeStreamDict ();_fabfa .PdfObjectDictionary =_bdfbg ;};_bdfbg .Set ("\u0054\u0079\u0070\u0065",_aa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_bdfbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0046\u006f\u0072\u006d"));_bdfbg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gdfa .FormType );_bdfbg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gdfa .BBox );_bdfbg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gdfa .Matrix );if _gdfa .Resources !=nil {_bdfbg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gdfa .Resources .ToPdfObject ());};_bdfbg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gdfa .Group );_bdfbg .SetIfNotNil ("\u0052\u0065\u0066",_gdfa .Ref );_bdfbg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gdfa .MetaData );_bdfbg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gdfa .PieceInfo );_bdfbg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gdfa .LastModified );_bdfbg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gdfa .StructParent );_bdfbg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gdfa .StructParents );_bdfbg .SetIfNotNil ("\u004f\u0050\u0049",_gdfa .OPI );_bdfbg .SetIfNotNil ("\u004f\u0043",_gdfa .OC );_bdfbg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gdfa .Name );_bdfbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aa .MakeInteger (int64 (len (_gdfa .Stream ))));_fabfa .Stream =_gdfa .Stream ;return _fabfa ;};

// ToPdfObject implements interface PdfModel.
func (_befc *PdfAnnotationLink )ToPdfObject ()_aa .PdfObject {_befc .PdfAnnotation .ToPdfObject ();_fdc :=_befc ._dde ;_gca :=_fdc .PdfObject .(*_aa .PdfObjectDictionary );_gca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u004c\u0069\u006e\u006b"));if _befc ._ggb !=nil &&_befc ._ggb ._ac !=nil {_gca .Set ("\u0041",_befc ._ggb ._ac .ToPdfObject ());}else if _befc .A !=nil {_gca .Set ("\u0041",_befc .A );};_gca .SetIfNotNil ("\u0044\u0065\u0073\u0074",_befc .Dest );_gca .SetIfNotNil ("\u0048",_befc .H );_gca .SetIfNotNil ("\u0050\u0041",_befc .PA );_gca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_befc .QuadPoints );_gca .SetIfNotNil ("\u0042\u0053",_befc .BS );return _fdc ;};

// Fill populates `form` with values provided by `provider`.
func (_dggf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _dggf .fill (provider ,nil )};func (_ffdf fontCommon )coreString ()string {_gcda :="";if _ffdf ._edga !=nil {_gcda =_ffdf ._edga .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ffdf ._cbae ,_ffdf ._debe ,_ffdf ._caaca ,_ffdf ._baeg ,_ffdf ._bgdfb !=nil ,_ffdf .fontFlags (),_gcda );};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dea *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_dfebg :=range pages {_dfebg =_dfebg .Duplicate ();_egbc (_dfebg );_dea ._fdcc =append (_dea ._fdcc ,_dfebg );};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_face pdfFontType0 )GetCharMetrics (code _af .CharCode )(_fa .CharMetrics ,bool ){if _face .DescendantFont ==nil {_ba .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_face );return _fa .CharMetrics {},false ;};return _face .DescendantFont .GetCharMetrics (code );};

// Initialize initializes the PdfSignature.
func (_decg *PdfSignature )Initialize ()error {if _decg .Handler ==nil {return _fda .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _decg .Handler .InitSignature (_decg );};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;PageCallback PageCallback ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_defec []byte )(_cfge int ,_ceeaf error );};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bccbf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_af .CharCode )(_egdf []rune ,_cdgb ,_abfeb int ){_befg ,_cdgb ,_abfeb :=_bccbf .CharcodesToStrings (charcodes );return []rune (_ga .Join (_befg ,"")),_cdgb ,_abfeb ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_accbg *XObjectForm )GetContainingPdfObject ()_aa .PdfObject {return _accbg ._affbc };

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_dabab *PdfPageResources )GenerateXObjectName ()_aa .PdfObjectName {_gdac :=1;for {_fcecff :=_aa .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_gdac ));if !_dabab .HasXObjectByName (*_fcecff ){return *_fcecff ;};_gdac ++;};};func _gfgef (_bfcgc *_aa .PdfObjectDictionary )(*PdfShadingType4 ,error ){_cdcda :=PdfShadingType4 {};_cagfb :=_bfcgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cagfb ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cgea ,_gedgd :=_cagfb .(*_aa .PdfObjectInteger );if !_gedgd {_ba .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cagfb );return nil ,_aa .ErrTypeError ;};_cdcda .BitsPerCoordinate =_cgea ;_cagfb =_bfcgc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cagfb ==nil {_ba .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cgea ,_gedgd =_cagfb .(*_aa .PdfObjectInteger );if !_gedgd {_ba .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cagfb );return nil ,_aa .ErrTypeError ;};_cdcda .BitsPerComponent =_cgea ;_cagfb =_bfcgc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cagfb ==nil {_ba .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cgea ,_gedgd =_cagfb .(*_aa .PdfObjectInteger );if !_gedgd {_ba .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cagfb );return nil ,_aa .ErrTypeError ;};_cdcda .BitsPerComponent =_cgea ;_cagfb =_bfcgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cagfb ==nil {_ba .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_daeac ,_gedgd :=_cagfb .(*_aa .PdfObjectArray );if !_gedgd {_ba .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cagfb );return nil ,_aa .ErrTypeError ;};_cdcda .Decode =_daeac ;_cagfb =_bfcgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cagfb ==nil {_ba .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cdcda .Function =[]PdfFunction {};if _gddcc ,_eafbf :=_cagfb .(*_aa .PdfObjectArray );_eafbf {for _ ,_bgde :=range _gddcc .Elements (){_ccgea ,_addad :=_dccg (_bgde );if _addad !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_addad );return nil ,_addad ;};_cdcda .Function =append (_cdcda .Function ,_ccgea );};}else {_bcgeb ,_ccfdc :=_dccg (_cagfb );if _ccfdc !=nil {_ba .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccfdc );return nil ,_ccfdc ;};_cdcda .Function =append (_cdcda .Function ,_bcgeb );};return &_cdcda ,nil ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_egdfc *Image )SetSamples (samples []uint32 ){if _egdfc .BitsPerComponent < 8{samples =_egdfc .samplesAddPadding (samples );};_fcade :=_fdg .ResampleUint32 (samples ,int (_egdfc .BitsPerComponent ),8);_egfb :=make ([]byte ,len (_fcade ));for _bbbbf ,_dcaca :=range _fcade {_egfb [_bbbbf ]=byte (_dcaca );};_egdfc .Data =_egfb ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_abee :=&PdfAppender {_fdfb :reader ._bgbae ,Reader :reader ,_gdeg :reader ._gbacd ,_fdce :reader ._fdaec };_cfaa ,_gfbg :=_abee ._fdfb .Seek (0,_gb .SeekEnd );if _gfbg !=nil {return nil ,_gfbg ;};_abee ._fdef =_cfaa ;if _ ,_gfbg =_abee ._fdfb .Seek (0,_gb .SeekStart );_gfbg !=nil {return nil ,_gfbg ;};_abee ._edc ,_gfbg =NewPdfReader (_abee ._fdfb );if _gfbg !=nil {return nil ,_gfbg ;};for _ ,_dfeb :=range _abee .Reader .GetObjectNums (){if _abee ._afad < _dfeb {_abee ._afad =_dfeb ;};};_abee ._eddb =_abee ._gdeg .GetXrefTable ();_abee ._gcd =_abee ._gdeg .GetXrefOffset ();_abee ._fdcc =append (_abee ._fdcc ,_abee ._edc .PageList ...);_abee ._badf =make (map[_aa .PdfObject ]struct{});_abee ._dcbb =make (map[_aa .PdfObject ]int64 );_abee ._dfag =make (map[_aa .PdfObject ]struct{});_abee ._cabd =_abee ._edc .AcroForm ;_abee ._ddca =_abee ._edc .DSS ;return _abee ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gedb *PdfOutlineTreeNode )ToPdfObject ()_aa .PdfObject {return _gedb .GetContext ().ToPdfObject ()};func _degbd (_fabg []byte )([]byte ,error ){_beecf :=_ad .New ();if _ ,_bbfea :=_gb .Copy (_beecf ,_dc .NewReader (_fabg ));_bbfea !=nil {return nil ,_bbfea ;};return _beecf .Sum (nil ),nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _aa .PdfObject ;Flags _aa .PdfObject ;};func _baddc (_gdbgc *_aa .PdfIndirectObject ,_fceeb *_aa .PdfObjectDictionary )(*DSS ,error ){if _gdbgc ==nil {_gdbgc =_aa .MakeIndirectObject (nil );};_gdbgc .PdfObject =_aa .MakeDict ();_begad :=map[string ]*VRI {};if _dcbab ,_bagd :=_aa .GetDict (_fceeb .Get ("\u0056\u0052\u0049"));_bagd {for _ ,_eeba :=range _dcbab .Keys (){if _ccdaa ,_cccf :=_aa .GetDict (_dcbab .Get (_eeba ));_cccf {_begad [_ga .ToUpper (_eeba .String ())]=_daae (_ccdaa );};};};return &DSS {Certs :_feab (_fceeb .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_feab (_fceeb .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_feab (_fceeb .Get ("\u0043\u0052\u004c\u0073")),VRI :_begad ,_cffd :_gdbgc },nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_eabeb pdfCIDFontType2 )GetCharMetrics (code _af .CharCode )(_fa .CharMetrics ,bool ){if _fbce ,_fcdd :=_eabeb ._dbaee [code ];_fcdd {return _fa .CharMetrics {Wx :_fbce },true ;};_bdcd :=rune (code );_aaec ,_bcgg :=_eabeb ._cddaf [_bdcd ];if !_bcgg {_aaec =int (_eabeb ._ddeec );};return _fa .CharMetrics {Wx :float64 (_aaec )},true ;};func _aaeg (_egbff _aa .PdfObject )(*PdfColorspaceDeviceN ,error ){_eced :=NewPdfColorspaceDeviceN ();if _fccca ,_egab :=_egbff .(*_aa .PdfIndirectObject );_egab {_eced ._adcg =_fccca ;};_egbff =_aa .TraceToDirectObject (_egbff );_bgdf ,_beae :=_egbff .(*_aa .PdfObjectArray );if !_beae {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _bgdf .Len ()!=4&&_bgdf .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_egbff =_bgdf .Get (0);_deca ,_beae :=_egbff .(*_aa .PdfObjectName );if !_beae {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_deca !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_egbff =_bgdf .Get (1);_egbff =_aa .TraceToDirectObject (_egbff );_edab ,_beae :=_egbff .(*_aa .PdfObjectArray );if !_beae {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_eced .ColorantNames =_edab ;_egbff =_bgdf .Get (2);_cfdfa ,_dffgg :=NewPdfColorspaceFromPdfObject (_egbff );if _dffgg !=nil {return nil ,_dffgg ;};_eced .AlternateSpace =_cfdfa ;_cbcd ,_dffgg :=_dccg (_bgdf .Get (3));if _dffgg !=nil {return nil ,_dffgg ;};_eced .TintTransform =_cbcd ;if _bgdf .Len ()==5{_bbgd ,_cecd :=_bbgcc (_bgdf .Get (4));if _cecd !=nil {return nil ,_cecd ;};_eced .Attributes =_bbgd ;};return _eced ,nil ;};

// PartialName returns the partial name of the field.
func (_bbag *PdfField )PartialName ()string {_abcbe :="";if _bbag .T !=nil {_abcbe =_bbag .T .Decoded ();}else {_ba .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _abcbe ;};type pdfSignDictionary struct{*_aa .PdfObjectDictionary ;_fefa *SignatureHandler ;_gcgf *PdfSignature ;_bdaaf int64 ;_ebaad int ;_acbe int ;_dfga int ;_baceb int ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_edfa :=NewPdfOutline ();_edfa ._caeff =&_edfa ;return _edfa };

// AddOutlineTree adds outlines to a PDF file.
func (_ebafg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_ebafg ._ggfaf =outlineTree };

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_fgad :=NewPdfAnnotation ();_dbde :=&PdfAnnotationStamp {};_dbde .PdfAnnotation =_fgad ;_dbde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgad .SetContext (_dbde );return _dbde ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_cffd :_aa .MakeIndirectObject (_aa .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gacf :=PdfDate {};_cefgc :=_gfbdg .FindAllStringSubmatch (dateStr ,1);if len (_cefgc )< 1{return _gacf ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_cefgc [0])!=10{return _gacf ,_fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_gacf ._bfegad ,_ =_dg .ParseInt (_cefgc [0][1],10,32);_gacf ._ddbbg ,_ =_dg .ParseInt (_cefgc [0][2],10,32);_gacf ._efdea ,_ =_dg .ParseInt (_cefgc [0][3],10,32);_gacf ._gcga ,_ =_dg .ParseInt (_cefgc [0][4],10,32);_gacf ._ecca ,_ =_dg .ParseInt (_cefgc [0][5],10,32);_gacf ._ddgce ,_ =_dg .ParseInt (_cefgc [0][6],10,32);if len (_cefgc [0][7])> 0{_gacf ._gaad =_cefgc [0][7][0];}else {_gacf ._gaad ='+';};if len (_cefgc [0][8])> 0{_gacf ._bcgbe ,_ =_dg .ParseInt (_cefgc [0][8],10,32);}else {_gacf ._bcgbe =0;};if len (_cefgc [0][9])> 0{_gacf ._affda ,_ =_dg .ParseInt (_cefgc [0][9],10,32);}else {_gacf ._affda =0;};return _gacf ,nil ;};

// K returns the value of the key component of the color.
func (_eefc *PdfColorDeviceCMYK )K ()float64 {return _eefc [3]};func (_fgbgde *PdfWriter )copyObjects (){_fdaag :=make (map[_aa .PdfObject ]_aa .PdfObject );_eebde :=make ([]_aa .PdfObject ,0,len (_fgbgde ._gecd ));_bggda :=make (map[_aa .PdfObject ]struct{},len (_fgbgde ._gecd ));_cagc :=make (map[_aa .PdfObject ]struct{});for _ ,_abdgga :=range _fgbgde ._gecd {_daebec :=_fgbgde .copyObject (_abdgga ,_fdaag ,_cagc ,false );if _ ,_dcebd :=_cagc [_abdgga ];_dcebd {continue ;};_eebde =append (_eebde ,_daebec );_bggda [_daebec ]=struct{}{};};_fgbgde ._gecd =_eebde ;_fgbgde ._faceg =_bggda ;_fgbgde ._fgeca =_fgbgde .copyObject (_fgbgde ._fgeca ,_fdaag ,nil ,false ).(*_aa .PdfIndirectObject );_fgbgde ._cdff =_fgbgde .copyObject (_fgbgde ._cdff ,_fdaag ,nil ,false ).(*_aa .PdfIndirectObject );if _fgbgde ._ccfdce !=nil {_fgbgde ._ccfdce =_fgbgde .copyObject (_fgbgde ._ccfdce ,_fdaag ,nil ,false ).(*_aa .PdfIndirectObject );};if _fgbgde ._dgfbd {_ecfg :=make (map[_aa .PdfObject ]int64 );for _dcag ,_ebabbc :=range _fgbgde ._edff {if _gcgg ,_fcaf :=_fdaag [_dcag ];_fcaf {_ecfg [_gcgg ]=_ebabbc ;}else {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_fgbgde ._edff =_ecfg ;};};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_dfage *PdfWriter )SetOptimizer (optimizer Optimizer ){_dfage ._bggeg =optimizer };

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_gfdfd []byte ;_bbeb []uint32 ;_efgaf *_aa .PdfObjectStream ;};

// Encoder returns the font's text encoder.
func (_dfcae *PdfFont )Encoder ()_af .TextEncoder {_gdeefg :=_dfcae .actualFont ();if _gdeefg ==nil {_ba .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dfcae ._acdfa );return nil ;};return _gdeefg .Encoder ();};

// AddExtGState adds a graphics state to the XObject resources.
func (_cdfea *PdfPage )AddExtGState (name _aa .PdfObjectName ,egs *_aa .PdfObjectDictionary )error {if _cdfea .Resources ==nil {_cdfea .Resources =NewPdfPageResources ();};if _cdfea .Resources .ExtGState ==nil {_cdfea .Resources .ExtGState =_aa .MakeDict ();};_bgcea ,_dabcg :=_aa .TraceToDirectObject (_cdfea .Resources .ExtGState ).(*_aa .PdfObjectDictionary );if !_dabcg {_ba .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aa .TraceToDirectObject (_cdfea .Resources .ExtGState ));return _fda .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgcea .Set (name ,egs );return nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_bdaca *PdfPageResources )SetShadingByName (keyName _aa .PdfObjectName ,shadingObj _aa .PdfObject )error {if _bdaca .Shading ==nil {_bdaca .Shading =_aa .MakeDict ();};_gefa ,_bbccef :=_bdaca .Shading .(*_aa .PdfObjectDictionary );if !_bbccef {return _aa .ErrTypeError ;};_gefa .Set (keyName ,shadingObj );return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_gagg *Image )SetAlpha (alpha []byte ){_gagg ._eecd =alpha };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _aa .PdfObject ;Mac _aa .PdfObject ;Unix _aa .PdfObject ;NewWindow _aa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ccce *PdfAnnotationRichMedia )ToPdfObject ()_aa .PdfObject {_ccce .PdfAnnotation .ToPdfObject ();_gcg :=_ccce ._dde ;_ecg :=_gcg .PdfObject .(*_aa .PdfObjectDictionary );_ecg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_ecg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_ccce .RichMediaSettings );_ecg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_ccce .RichMediaContent );return _gcg ;};

// ToPdfObject implements interface PdfModel.
func (_cbc *PdfAnnotationPrinterMark )ToPdfObject ()_aa .PdfObject {_cbc .PdfAnnotation .ToPdfObject ();_dcef :=_cbc ._dde ;_adaa :=_dcef .PdfObject .(*_aa .PdfObjectDictionary );_adaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_adaa .SetIfNotNil ("\u004d\u004e",_cbc .MN );return _dcef ;};func _bdcgbf (_adbgd *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_adbgd }};

// GetAscent returns the Ascent of the font `descriptor`.
func (_ccdfd *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _aa .GetNumberAsFloat (_ccdfd .Ascent );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_aa .PdfIndirectObject )*PdfOutlineItem {_cdfdf :=PdfOutlineItem {};_cdfdf ._caeff =&_cdfdf ;_cdfdf .Title =_aa .MakeString (title );_gedce :=_aa .MakeArray ();_gedce .Append (page );_gedce .Append (_aa .MakeName ("\u0046\u0069\u0074"));_cdfdf .Dest =_gedce ;return &_cdfdf ;};

// ToInteger convert to an integer format.
func (_fcea *PdfColorLab )ToInteger (bits int )[3]uint32 {_fbac :=_ag .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fbac *_fcea .L ()),uint32 (_fbac *_fcea .A ()),uint32 (_fbac *_fcea .B ())};};

// A returns the value of the A component of the color.
func (_afga *PdfColorLab )A ()float64 {return _afga [1]};func (_dgbge *pdfFontSimple )updateStandard14Font (){_fage ,_aeee :=_dgbge .Encoder ().(_af .SimpleEncoder );if !_aeee {_ba .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dgbge .Encoder (),_dgbge );return ;};_ffdgf :=_fage .Charcodes ();_dgbge ._ccga =make (map[_af .CharCode ]float64 ,len (_ffdgf ));for _ ,_fgeg :=range _ffdgf {_gebb ,_ :=_fage .CharcodeToRune (_fgeg );_dgbge ._ccga [_fgeg ]=_dgbge ._dege [_gebb ].Wx ;};};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ageg :=&PdfBorderStyle {};return _ageg };

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cgae :=NewPdfAnnotation ();_ccda :=&PdfAnnotationCaret {};_ccda .PdfAnnotation =_cgae ;_ccda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgae .SetContext (_ccda );return _ccda ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gaff *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggeb :=vals [0];if _ggeb < 0.0||_ggeb > 1.0{return nil ,_fda .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_defg :=NewPdfColorCalGray (_ggeb );return _defg ,nil ;};

// B returns the value of the blue component of the color.
func (_dccc *PdfColorDeviceRGB )B ()float64 {return _dccc [2]};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_aa .PdfObjectString ;Q *_aa .PdfObjectInteger ;DS *_aa .PdfObjectString ;RV _aa .PdfObject ;MaxLen *_aa .PdfObjectInteger ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_daea :=&PdfAnnotation {};_daea ._dde =_aa .MakeIndirectObject (_aa .MakeDict ());return _daea ;};

// String returns a string representation of what flags are set.
func (_bgbad FieldFlag )String ()string {_gdeef :="";if _bgbad ==FieldFlagClear {_gdeef ="\u0043\u006c\u0065a\u0072";return _gdeef ;};if _bgbad &FieldFlagReadOnly > 0{_gdeef +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bgbad &FieldFlagRequired > 0{_gdeef +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bgbad &FieldFlagNoExport > 0{_gdeef +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bgbad &FieldFlagNoToggleToOff > 0{_gdeef +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bgbad &FieldFlagRadio > 0{_gdeef +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _bgbad &FieldFlagPushbutton > 0{_gdeef +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bgbad &FieldFlagRadiosInUnision > 0{_gdeef +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _bgbad &FieldFlagMultiline > 0{_gdeef +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _bgbad &FieldFlagPassword > 0{_gdeef +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bgbad &FieldFlagFileSelect > 0{_gdeef +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _bgbad &FieldFlagDoNotScroll > 0{_gdeef +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _bgbad &FieldFlagComb > 0{_gdeef +="\u007c\u0043\u006fm\u0062";};if _bgbad &FieldFlagRichText > 0{_gdeef +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _bgbad &FieldFlagDoNotSpellCheck > 0{_gdeef +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _bgbad &FieldFlagCombo > 0{_gdeef +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bgbad &FieldFlagEdit > 0{_gdeef +="\u007c\u0045\u0064i\u0074";};if _bgbad &FieldFlagSort > 0{_gdeef +="\u007c\u0053\u006fr\u0074";};if _bgbad &FieldFlagMultiSelect > 0{_gdeef +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _bgbad &FieldFlagCommitOnSelChange > 0{_gdeef +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ga .Trim (_gdeef ,"\u007c");};func (_eddee *LTV )enable (_cega ,_dbdbd []*_ca .Certificate ,_abcfb string )error {_acfg ,_cfaec ,_beeeb :=_eddee .buildCertChain (_cega ,_dbdbd );if _beeeb !=nil {return _beeeb ;};_efbcb ,_beeeb :=_eddee .getCerts (_acfg );if _beeeb !=nil {return _beeeb ;};_fabcb ,_beeeb :=_eddee .getOCSPs (_acfg ,_cfaec );if _beeeb !=nil {return _beeeb ;};_bcdea ,_beeeb :=_eddee .getCRLs (_acfg );if _beeeb !=nil {return _beeeb ;};_ccebg :=_eddee ._afgfd ;_beggf ,_beeeb :=_ccebg .addCerts (_efbcb );if _beeeb !=nil {return _beeeb ;};_fcadd ,_beeeb :=_ccebg .addOCSPs (_fabcb );if _beeeb !=nil {return _beeeb ;};_bdbfg ,_beeeb :=_ccebg .addCRLs (_bcdea );if _beeeb !=nil {return _beeeb ;};if _abcfb !=""{_ccebg .VRI [_abcfb ]=&VRI {Cert :_beggf ,OCSP :_fcadd ,CRL :_bdbfg };};_eddee ._ddfaa .SetDSS (_ccebg );return nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _aa .PdfObject ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_ffddg *XObjectImage )ToImage ()(*Image ,error ){_deee :=&Image {};if _ffddg .Height ==nil {return nil ,_fda .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_deee .Height =*_ffddg .Height ;if _ffddg .Width ==nil {return nil ,_fda .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_deee .Width =*_ffddg .Width ;if _ffddg .BitsPerComponent ==nil {switch _ffddg .Filter .(type ){case *_aa .CCITTFaxEncoder ,*_aa .JBIG2Encoder :_deee .BitsPerComponent =1;case *_aa .LZWEncoder ,*_aa .RunLengthEncoder :_deee .BitsPerComponent =8;default:return nil ,_fda .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};}else {_deee .BitsPerComponent =*_ffddg .BitsPerComponent ;};_deee .ColorComponents =_ffddg .ColorSpace .GetNumComponents ();_ffddg ._fcbac .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aa .MakeInteger (int64 (_deee .ColorComponents )));_baefc ,_cagdd :=_aa .DecodeStream (_ffddg ._fcbac );if _cagdd !=nil {return nil ,_cagdd ;};_deee .Data =_baefc ;if _ffddg .Decode !=nil {_abbec ,_aefddb :=_ffddg .Decode .(*_aa .PdfObjectArray );if !_aefddb {_ba .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_fda .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_aegfe ,_deceg :=_abbec .ToFloat64Array ();if _deceg !=nil {return nil ,_deceg ;};_deee ._ddfac =_aegfe ;};return _deee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cedfc *PdfAnnotationTrapNet )ToPdfObject ()_aa .PdfObject {_cedfc .PdfAnnotation .ToPdfObject ();_cegc :=_cedfc ._dde ;_gef :=_cegc .PdfObject .(*_aa .PdfObjectDictionary );_gef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aa .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _cegc ;};func _caef (_dfba _aa .PdfObject )(map[_af .CharCode ]float64 ,error ){if _dfba ==nil {return nil ,nil ;};_eefa ,_cegd :=_aa .GetArray (_dfba );if !_cegd {return nil ,nil ;};_gbcfd :=map[_af .CharCode ]float64 {};_fdbg :=_eefa .Len ();for _ffddc :=0;_ffddc < _fdbg -1;_ffddc ++{_bdcdf :=_aa .TraceToDirectObject (_eefa .Get (_ffddc ));_cfddd ,_dgef :=_aa .GetIntVal (_bdcdf );if !_dgef {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ffddc ,_bdcdf );};_ffddc ++;if _ffddc > _fdbg -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_eefa );};_fefd :=_aa .TraceToDirectObject (_eefa .Get (_ffddc ));switch _fefd .(type ){case *_aa .PdfObjectArray :_acaec ,_ :=_aa .GetArray (_fefd );if _dcce ,_caaaa :=_acaec .ToFloat64Array ();_caaaa ==nil {for _ffge :=0;_ffge < len (_dcce );_ffge ++{_gbcfd [_af .CharCode (_cfddd +_ffge )]=_dcce [_ffge ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ffddc ,_fefd );};case *_aa .PdfObjectInteger :_ebefc ,_cbafb :=_aa .GetIntVal (_fefd );if !_cbafb {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ffddc ,_fefd );};_ffddc ++;if _ffddc > _fdbg -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_eefa );};_abcgc :=_eefa .Get (_ffddc );_eaef ,_bbfd :=_aa .GetNumberAsFloat (_abcgc );if _bbfd !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ffddc ,_abcgc );};for _egaf :=_cfddd ;_egaf <=_ebefc ;_egaf ++{_gbcfd [_af .CharCode (_egaf )]=_eaef ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ffddc ,_fefd );};};return _gbcfd ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_aagc *_aa .PdfIndirectObject ;};func (_aeb *PdfReader )newPdfAnnotationStrikeOut (_bggf *_aa .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fegf :=PdfAnnotationStrikeOut {};_bfa ,_badc :=_aeb .newPdfAnnotationMarkupFromDict (_bggf );if _badc !=nil {return nil ,_badc ;};_fegf .PdfAnnotationMarkup =_bfa ;_fegf .QuadPoints =_bggf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fegf ,nil ;};

// SetContext sets the sub action (context).
func (_beg *PdfAction )SetContext (ctx PdfModel ){_beg ._ac =ctx };func _aedf (_bffea *_aa .PdfObjectArray )(float64 ,error ){_edfgb ,_cadde :=_bffea .ToFloat64Array ();if _cadde !=nil {_ba .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bffea ,_cadde );};switch len (_edfgb ){case 1:return _edfgb [0],nil ;case 3:_bgeaa :=PdfColorspaceDeviceRGB {};_caefcc ,_gaffc :=_bgeaa .ColorFromFloats (_edfgb );if _gaffc !=nil {return 0.0,_gaffc ;};return _caefcc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_baac :=PdfColorspaceDeviceCMYK {};_baca ,_bfbbd :=_baac .ColorFromFloats (_edfgb );if _bfbbd !=nil {return 0.0,_bfbbd ;};_fcacd ,_bfbbd :=_baac .ColorToRGB (_baca .(*PdfColorDeviceCMYK ));if _bfbbd !=nil {return 0.0,_bfbbd ;};return _fcacd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cadde =_fda .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ba .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bffea ,_cadde );return 0.0,_cadde ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fcbcb *XObjectForm )SetContentStream (content []byte ,encoder _aa .StreamEncoder )error {_ecade :=content ;if encoder ==nil {if _fcbcb .Filter !=nil {encoder =_fcbcb .Filter ;}else {encoder =_aa .NewRawEncoder ();};};_bddg ,_dgeag :=encoder .EncodeBytes (_ecade );if _dgeag !=nil {return _dgeag ;};_ecade =_bddg ;_fcbcb .Stream =_ecade ;_fcbcb .Filter =encoder ;return nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_accca *PdfWriter )SetDocInfo (info *PdfInfo ){if _accca .hasObject (_accca ._fgeca ){delete (_accca ._faceg ,_accca ._fgeca );delete (_accca ._debc ,_accca ._fgeca );for _cgage ,_gcbad :=range _accca ._gecd {if _gcbad ==_accca ._fgeca {copy (_accca ._gecd [_cgage :],_accca ._gecd [_cgage +1:]);_accca ._gecd [len (_accca ._gecd )-1]=nil ;_accca ._gecd =_accca ._gecd [:len (_accca ._gecd )-1];break ;};};};_cbcb :=_aa .PdfIndirectObject {};_cbcb .PdfObject =info .ToPdfObject ();_accca ._fgeca =&_cbcb ;_accca .addObject (&_cbcb );};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bc .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ac PdfModel ;Type _aa .PdfObject ;S _aa .PdfObject ;Next _aa .PdfObject ;_bg *_aa .PdfIndirectObject ;};func (_eca *PdfReader )newPdfAnnotationPolyLineFromDict (_dage *_aa .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_gdafa :=PdfAnnotationPolyLine {};_edbg ,_ccag :=_eca .newPdfAnnotationMarkupFromDict (_dage );if _ccag !=nil {return nil ,_ccag ;};_gdafa .PdfAnnotationMarkup =_edbg ;_gdafa .Vertices =_dage .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gdafa .LE =_dage .Get ("\u004c\u0045");_gdafa .BS =_dage .Get ("\u0042\u0053");_gdafa .IC =_dage .Get ("\u0049\u0043");_gdafa .BE =_dage .Get ("\u0042\u0045");_gdafa .IT =_dage .Get ("\u0049\u0054");_gdafa .Measure =_dage .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gdafa ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_aa .PdfObjectArray ;Matrix *_aa .PdfObjectArray ;Function []PdfFunction ;};func _bfcfcd (_eacdd _aa .PdfObject )(*PdfShading ,error ){_facee :=&PdfShading {};var _adebg *_aa .PdfObjectDictionary ;if _caeea ,_ggac :=_aa .GetIndirect (_eacdd );_ggac {_facee ._fbdfa =_caeea ;_dcafa ,_abgef :=_caeea .PdfObject .(*_aa .PdfObjectDictionary );if !_abgef {_ba .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aa .ErrTypeError ;};_adebg =_dcafa ;}else if _bfcg ,_fgfc :=_aa .GetStream (_eacdd );_fgfc {_facee ._fbdfa =_bfcg ;_adebg =_bfcg .PdfObjectDictionary ;}else if _dcaag ,_gfcged :=_aa .GetDict (_eacdd );_gfcged {_facee ._fbdfa =_dcaag ;_adebg =_dcaag ;}else {_ba .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_eacdd );return nil ,_aa .ErrTypeError ;};if _adebg ==nil {_ba .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fda .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_eacdd =_adebg .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _eacdd ==nil {_ba .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eacdd =_aa .TraceToDirectObject (_eacdd );_fbdad ,_dgged :=_eacdd .(*_aa .PdfObjectInteger );if !_dgged {_ba .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eacdd );return nil ,_aa .ErrTypeError ;};if *_fbdad < 1||*_fbdad > 7{_ba .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fbdad );return nil ,_aa .ErrTypeError ;};_facee .ShadingType =_fbdad ;_eacdd =_adebg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _eacdd ==nil {_ba .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fgfae ,_eggef :=NewPdfColorspaceFromPdfObject (_eacdd );if _eggef !=nil {_ba .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_eggef );return nil ,_eggef ;};_facee .ColorSpace =_fgfae ;_eacdd =_adebg .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _eacdd !=nil {_eacdd =_aa .TraceToDirectObject (_eacdd );_abgfc ,_ebgfe :=_eacdd .(*_aa .PdfObjectArray );if !_ebgfe {_ba .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eacdd );return nil ,_aa .ErrTypeError ;};_facee .Background =_abgfc ;};_eacdd =_adebg .Get ("\u0042\u0042\u006f\u0078");if _eacdd !=nil {_eacdd =_aa .TraceToDirectObject (_eacdd );_gaebf ,_dcdaf :=_eacdd .(*_aa .PdfObjectArray );if !_dcdaf {_ba .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eacdd );return nil ,_aa .ErrTypeError ;};_bddbd ,_bffae :=NewPdfRectangle (*_gaebf );if _bffae !=nil {_ba .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bffae );return nil ,_bffae ;};_facee .BBox =_bddbd ;};_eacdd =_adebg .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _eacdd !=nil {_eacdd =_aa .TraceToDirectObject (_eacdd );_dbabd ,_agabd :=_eacdd .(*_aa .PdfObjectBool );if !_agabd {_ba .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eacdd );return nil ,_aa .ErrTypeError ;};_facee .AntiAlias =_dbabd ;};switch *_fbdad {case 1:_dcff ,_dabcge :=_aedc (_adebg );if _dabcge !=nil {return nil ,_dabcge ;};_dcff .PdfShading =_facee ;_facee ._dafgg =_dcff ;return _facee ,nil ;case 2:_gdcbg ,_cgfed :=_eegdc (_adebg );if _cgfed !=nil {return nil ,_cgfed ;};_gdcbg .PdfShading =_facee ;_facee ._dafgg =_gdcbg ;return _facee ,nil ;case 3:_dfgfb ,_cedag :=_eadca (_adebg );if _cedag !=nil {return nil ,_cedag ;};_dfgfb .PdfShading =_facee ;_facee ._dafgg =_dfgfb ;return _facee ,nil ;case 4:_ecbed ,_geegd :=_gfgef (_adebg );if _geegd !=nil {return nil ,_geegd ;};_ecbed .PdfShading =_facee ;_facee ._dafgg =_ecbed ;return _facee ,nil ;case 5:_daffc ,_fffdge :=_ebcab (_adebg );if _fffdge !=nil {return nil ,_fffdge ;};_daffc .PdfShading =_facee ;_facee ._dafgg =_daffc ;return _facee ,nil ;case 6:_eeabb ,_cdafe :=_bcbca (_adebg );if _cdafe !=nil {return nil ,_cdafe ;};_eeabb .PdfShading =_facee ;_facee ._dafgg =_eeabb ;return _facee ,nil ;case 7:_gefd ,_ebbdb :=_ebgead (_adebg );if _ebbdb !=nil {return nil ,_ebbdb ;};_gefd .PdfShading =_facee ;_facee ._dafgg =_gefd ;return _facee ,nil ;};return nil ,_fda .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func (_gaaeg *PdfReader )newPdfAnnotation3DFromDict (_fadb *_aa .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_bgfb :=PdfAnnotation3D {};_bgfb .T3DD =_fadb .Get ("\u0033\u0044\u0044");_bgfb .T3DV =_fadb .Get ("\u0033\u0044\u0056");_bgfb .T3DA =_fadb .Get ("\u0033\u0044\u0041");_bgfb .T3DI =_fadb .Get ("\u0033\u0044\u0049");_bgfb .T3DB =_fadb .Get ("\u0033\u0044\u0042");return &_bgfb ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gfaff DefaultImageHandler )NewGrayImageFromGoImage (goimg _fe .Image )(*Image ,error ){_bdeca :=goimg .Bounds ();_fbag :=&Image {Width :int64 (_bdeca .Dx ()),Height :int64 (_bdeca .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _cfdfg :=goimg .(type ){case *_fe .Gray :if len (_cfdfg .Pix )!=_bdeca .Dx ()*_bdeca .Dy (){_bbbbe ,_baef :=_ff .GrayConverter .Convert (goimg );if _baef !=nil {return nil ,_baef ;};_fbag .Data =_bbbbe .Pix ();}else {_fbag .Data =_cfdfg .Pix ;};case *_fe .Gray16 :_fbag .BitsPerComponent =16;if len (_cfdfg .Pix )!=_bdeca .Dx ()*_bdeca .Dy ()*2{_abecf ,_bbgca :=_ff .Gray16Converter .Convert (goimg );if _bbgca !=nil {return nil ,_bbgca ;};_fbag .Data =_abecf .Pix ();}else {_fbag .Data =_cfdfg .Pix ;};case _ff .Image :_eecac :=_cfdfg .Base ();if _eecac .ColorComponents ==1{_fbag .BitsPerComponent =int64 (_eecac .BitsPerComponent );_fbag .Data =_eecac .Data ;return _fbag ,nil ;};_abecfd ,_bdbgff :=_ff .GrayConverter .Convert (goimg );if _bdbgff !=nil {return nil ,_bdbgff ;};_fbag .Data =_abecfd .Pix ();default:_eefdf ,_fbgg :=_ff .GrayConverter .Convert (goimg );if _fbgg !=nil {return nil ,_fbgg ;};_fbag .Data =_eefdf .Pix ();};return _fbag ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dcafg FieldFlag )Has (fl FieldFlag )bool {return (_dcafg .Mask ()&fl .Mask ())> 0};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_edfda *Outline )ToPdfOutline ()*PdfOutline {_aaab :=NewPdfOutline ();var _fdeeb []*PdfOutlineItem ;var _ccdgf int64 ;var _egfd *PdfOutlineItem ;for _ ,_gfbb :=range _edfda .Entries {_cdae ,_bfbba :=_gfbb .ToPdfOutlineItem ();_cdae .Parent =&_aaab .PdfOutlineTreeNode ;if _egfd !=nil {_egfd .Next =&_cdae .PdfOutlineTreeNode ;_cdae .Prev =&_egfd .PdfOutlineTreeNode ;};_fdeeb =append (_fdeeb ,_cdae );_ccdgf +=_bfbba ;_egfd =_cdae ;};_dfdc :=int64 (len (_fdeeb ));_ccdgf +=_dfdc ;if _dfdc > 0{_aaab .First =&_fdeeb [0].PdfOutlineTreeNode ;_aaab .Last =&_fdeeb [_dfdc -1].PdfOutlineTreeNode ;_aaab .Count =&_ccdgf ;};return _aaab ;};func (_cge *PdfReader )newPdfAnnotationPrinterMarkFromDict (_egfc *_aa .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dcgf :=PdfAnnotationPrinterMark {};_dcgf .MN =_egfc .Get ("\u004d\u004e");return &_dcgf ,nil ;};func (_ccfac *PdfAcroForm )fill (_bgdd FieldValueProvider ,_fafec FieldAppearanceGenerator )error {if _ccfac ==nil {return nil ;};_cdfg ,_fcfga :=_bgdd .FieldValues ();if _fcfga !=nil {return _fcfga ;};for _ ,_gaaab :=range _ccfac .AllFields (){_egcd :=_gaaab .PartialName ();_cbgaa ,_afcdb :=_cdfg [_egcd ];if !_afcdb {if _fggaf ,_bfbe :=_gaaab .FullName ();_bfbe ==nil {_cbgaa ,_afcdb =_cdfg [_fggaf ];};};if !_afcdb {_ba .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_egcd );continue ;};if _bgbge :=_dbaea (_gaaab ,_cbgaa );_bgbge !=nil {return _bgbge ;};if _fafec ==nil {continue ;};for _ ,_acaca :=range _gaaab .Annotations {_bbcbe ,_ebaf :=_fafec .GenerateAppearanceDict (_ccfac ,_gaaab ,_acaca );if _ebaf !=nil {return _ebaf ;};_acaca .AP =_bbcbe ;_acaca .ToPdfObject ();};};return nil ;};func (_dgbf *pdfCIDFontType0 )baseFields ()*fontCommon {return &_dgbf .fontCommon };

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_cgcdc *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dcegg *PdfShading )GetContext ()PdfModel {return _dcegg ._dafgg };

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_agade *PdfWriter )AddPage (page *PdfPage )error {const _cgfbe ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_egbc (page );_ddeca :=page .ToPdfObject ();_ba .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_ba .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ddeca );_ccffc ,_cdage :=_aa .GetIndirect (_ddeca );if !_cdage {return _fda .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_ba .Log .Trace ("\u0025\u0073",_ccffc );_ba .Log .Trace ("\u0025\u0073",_ccffc .PdfObject );_edgg ,_cdage :=_aa .GetDict (_ccffc .PdfObject );if !_cdage {return _fda .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_baeag ,_cdage :=_aa .GetName (_edgg .Get ("\u0054\u0079\u0070\u0065"));if !_cdage {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_edgg .Get ("\u0054\u0079\u0070\u0065"));};if _baeag .String ()!="\u0050\u0061\u0067\u0065"{return _fda .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fbdbbd :=[]_aa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_ddcecf ,_fbgfaf :=_aa .GetIndirect (_edgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ba .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_edgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fbgfaf );for _fbgfaf {_ba .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ddcecf );_aeedb ,_eaaff :=_aa .GetDict (_ddcecf .PdfObject );if !_eaaff {return _fda .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_ceff :=range _fbdbbd {_ba .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ceff );if _edgg .Get (_ceff )!=nil {_ba .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _abffg :=_aeedb .Get (_ceff );_abffg !=nil {_ba .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ceff );_edgg .Set (_ceff ,_abffg );};};_ddcecf ,_fbgfaf =_aa .GetIndirect (_aeedb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ba .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aeedb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ba .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_edgg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agade ._bfbdg );_ccffc .PdfObject =_edgg ;_ebcfc ,_cdage :=_aa .GetDict (_agade ._bfbdg .PdfObject );if !_cdage {return _fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_bdgfc ,_cdage :=_aa .GetArray (_ebcfc .Get ("\u004b\u0069\u0064\u0073"));if !_cdage {return _fda .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_bdgfc .Append (_ccffc );_agade ._agfeg [_edgg ]=struct{}{};_bfcaa ,_cdage :=_aa .GetInt (_ebcfc .Get ("\u0043\u006f\u0075n\u0074"));if !_cdage {return _fda .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_bfcaa =*_bfcaa +1;if page ._cdecc ==nil {_gedbc :=_aee .Track (_agade ._ecdeg ,_cgfbe );if _gedbc !=nil {return _gedbc ;};}else {_feege :=_aee .Track (page ._cdecc ._gaeb ,_cgfbe );if _feege !=nil {return _feege ;};};_agade .addObject (_ccffc );_gfcgg :=_agade .addObjects (_edgg );if _gfcgg !=nil {return _gfcgg ;};return nil ;};