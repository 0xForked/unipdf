//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_bb "bytes";_fc "crypto/sha1";_be "crypto/x509";_f "encoding/binary";_cf "encoding/hex";_ee "errors";_b "fmt";_eg "github.com/unidoc/pkcs7";_fe "github.com/unidoc/unipdf/v3/common";_fa "github.com/unidoc/unipdf/v3/common/license";_aaa "github.com/unidoc/unipdf/v3/core";_cb "github.com/unidoc/unipdf/v3/core/security";_bba "github.com/unidoc/unipdf/v3/core/security/crypt";_eed "github.com/unidoc/unipdf/v3/internal/cmap";_bc "github.com/unidoc/unipdf/v3/internal/imageutil";_dgb "github.com/unidoc/unipdf/v3/internal/sampling";_aa "github.com/unidoc/unipdf/v3/internal/textencoding";_gf "github.com/unidoc/unipdf/v3/model/internal/fonts";_gg "github.com/unidoc/unipdf/v3/model/sigutil";_ad "github.com/unidoc/unipdf/v3/ps";_bg "github.com/unidoc/unitype";_dbe "golang.org/x/xerrors";_db "image";_fb "image/color";_ "image/gif";_ "image/png";_agb "io";_dc "io/ioutil";_dg "math";_ab "math/rand";_bef "os";_ag "regexp";_ae "sort";_ge "strconv";_af "strings";_e "sync";_g "time";_a "unicode";_gb "unicode/utf8";);

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_decb :=NewPdfAnnotation ();_agfee :=&PdfAnnotationPopup {};_agfee .PdfAnnotation =_decb ;_decb .SetContext (_agfee );return _agfee ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_dgcdb *PdfColorspaceLab )GetNumComponents ()int {return 3};func (_fcbg *PdfReader )newPdfAnnotationUnderlineFromDict (_ace *_aaa .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_egg :=PdfAnnotationUnderline {};_ede ,_abbed :=_fcbg .newPdfAnnotationMarkupFromDict (_ace );if _abbed !=nil {return nil ,_abbed ;};_egg .PdfAnnotationMarkup =_ede ;_egg .QuadPoints =_ace .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_egg ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_aaa .PdfObjectInteger ;TilingType *_aaa .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_aaa .PdfObjectFloat ;YStep *_aaa .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_aaa .PdfObjectArray ;};

// PdfVersion returns version of the PDF file.
func (_ddfgc *PdfReader )PdfVersion ()_aaa .Version {return _ddfgc ._gcee .PdfVersion ()};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_eggb .Lock ();defer _eggb .Unlock ();_bfdad =subject };

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_cecd *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ddgd :=_dgb .NewReader (img .getBase ());_fbfgb :=_bc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_caee :=_dgb .NewWriter (_fbfgb );_dgbb :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_affd :=make ([]uint32 ,3);var (_cbcb error ;_gacg ,_fgfa ,_eaec ,_eabbb ,_aeaa ,_aaebd float64 ;);for {_cbcb =_ddgd .ReadSamples (_affd );if _cbcb ==_agb .EOF {break ;}else if _cbcb !=nil {return img ,_cbcb ;};_gacg =float64 (_affd [0])/_dgbb ;_fgfa =float64 (_affd [1])/_dgbb ;_eaec =float64 (_affd [2])/_dgbb ;_eabbb =_cecd .Matrix [0]*_dg .Pow (_gacg ,_cecd .Gamma [0])+_cecd .Matrix [3]*_dg .Pow (_fgfa ,_cecd .Gamma [1])+_cecd .Matrix [6]*_dg .Pow (_eaec ,_cecd .Gamma [2]);_aeaa =_cecd .Matrix [1]*_dg .Pow (_gacg ,_cecd .Gamma [0])+_cecd .Matrix [4]*_dg .Pow (_fgfa ,_cecd .Gamma [1])+_cecd .Matrix [7]*_dg .Pow (_eaec ,_cecd .Gamma [2]);_aaebd =_cecd .Matrix [2]*_dg .Pow (_gacg ,_cecd .Gamma [0])+_cecd .Matrix [5]*_dg .Pow (_fgfa ,_cecd .Gamma [1])+_cecd .Matrix [8]*_dg .Pow (_eaec ,_cecd .Gamma [2]);_gacg =3.240479*_eabbb +-1.537150*_aeaa +-0.498535*_aaebd ;_fgfa =-0.969256*_eabbb +1.875992*_aeaa +0.041556*_aaebd ;_eaec =0.055648*_eabbb +-0.204043*_aeaa +1.057311*_aaebd ;_gacg =_dg .Min (_dg .Max (_gacg ,0),1.0);_fgfa =_dg .Min (_dg .Max (_fgfa ,0),1.0);_eaec =_dg .Min (_dg .Max (_eaec ,0),1.0);_affd [0]=uint32 (_gacg *_dgbb );_affd [1]=uint32 (_fgfa *_dgbb );_affd [2]=uint32 (_eaec *_dgbb );if _cbcb =_caee .WriteSamples (_affd );_cbcb !=nil {return img ,_cbcb ;};};return _caed (&_fbfgb ),nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _agb .ReadSeeker )(*PdfReader ,error ){_afbdb :=&PdfReader {_ggbee :rs ,_dabcd :map[_aaa .PdfObject ]struct{}{},_egba :_abgbc (),_bcade :false };_ebgb ,_cgegg :=_aaa .NewParser (rs );if _cgegg !=nil {return nil ,_cgegg ;};_afbdb ._gcee =_ebgb ;_edbbb ,_cgegg :=_afbdb .IsEncrypted ();if _cgegg !=nil {return nil ,_cgegg ;};if !_edbbb {_cgegg =_afbdb .loadStructure ();if _cgegg !=nil {return nil ,_cgegg ;};};return _afbdb ,nil ;};func (_cfg *PdfReader )newPdfActionSubmitFormFromDict (_fgf *_aaa .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_fbfg ,_beag :=_gcg (_fgf .Get ("\u0046"));if _beag !=nil {return nil ,_beag ;};return &PdfActionSubmitForm {F :_fbfg ,Fields :_fgf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fgf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ggdfd *pdfCIDFontType0 )ToPdfObject ()_aaa .PdfObject {return _aaa .MakeNull ()};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bgeb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dffd *PdfFieldText )ToPdfObject ()_aaa .PdfObject {_dffd .PdfField .ToPdfObject ();_dbgb :=_dffd ._badf ;_fggfc :=_dbgb .PdfObject .(*_aaa .PdfObjectDictionary );_fggfc .Set ("\u0046\u0054",_aaa .MakeName ("\u0054\u0078"));if _dffd .DA !=nil {_fggfc .Set ("\u0044\u0041",_dffd .DA );};if _dffd .Q !=nil {_fggfc .Set ("\u0051",_dffd .Q );};if _dffd .DS !=nil {_fggfc .Set ("\u0044\u0053",_dffd .DS );};if _dffd .RV !=nil {_fggfc .Set ("\u0052\u0056",_dffd .RV );};if _dffd .MaxLen !=nil {_fggfc .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dffd .MaxLen );};return _dbgb ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_facff *PdfPage )AddExtGState (name _aaa .PdfObjectName ,egs *_aaa .PdfObjectDictionary )error {if _facff .Resources ==nil {_facff .Resources =NewPdfPageResources ();};if _facff .Resources .ExtGState ==nil {_facff .Resources .ExtGState =_aaa .MakeDict ();};_gffaf ,_cffa :=_aaa .TraceToDirectObject (_facff .Resources .ExtGState ).(*_aaa .PdfObjectDictionary );if !_cffa {_fe .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aaa .TraceToDirectObject (_facff .Resources .ExtGState ));return _ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gffaf .Set (name ,egs );return nil ;};func _ageba (_aggee *PdfField ,_ecgb _aaa .PdfObject )error {switch _aggee .GetContext ().(type ){case *PdfFieldText :switch _badb :=_ecgb .(type ){case *_aaa .PdfObjectName :_bbef :=_badb ;_fe .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_bbef .String ());_aggee .V =_aaa .MakeEncodedString (_badb .String (),true );case *_aaa .PdfObjectString :_aggee .V =_aaa .MakeEncodedString (_badb .String (),true );default:_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_badb ,_badb );};case *PdfFieldButton :switch _ecgb .(type ){case *_aaa .PdfObjectName :if len (_ecgb .String ())> 0{_aggee .V =_ecgb ;_deeae (_aggee ,_ecgb );};case *_aaa .PdfObjectString :if len (_ecgb .String ())> 0{_aggee .V =_aaa .MakeName (_ecgb .String ());_deeae (_aggee ,_aggee .V );};default:_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aggee .PartialName (),_ecgb );_aggee .V =_ecgb ;};case *PdfFieldChoice :switch _ecgb .(type ){case *_aaa .PdfObjectName :if len (_ecgb .String ())> 0{_aggee .V =_aaa .MakeString (_ecgb .String ());_deeae (_aggee ,_ecgb );};case *_aaa .PdfObjectString :if len (_ecgb .String ())> 0{_aggee .V =_ecgb ;_deeae (_aggee ,_aaa .MakeName (_ecgb .String ()));};default:_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aggee .PartialName (),_ecgb );_aggee .V =_ecgb ;};case *PdfFieldSignature :_fe .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_aggee .PartialName (),_ecgb );};return nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_adbe PdfModel ;Rect _aaa .PdfObject ;Contents _aaa .PdfObject ;P _aaa .PdfObject ;NM _aaa .PdfObject ;M _aaa .PdfObject ;F _aaa .PdfObject ;AP _aaa .PdfObject ;AS _aaa .PdfObject ;Border _aaa .PdfObject ;C _aaa .PdfObject ;StructParent _aaa .PdfObject ;OC _aaa .PdfObject ;_fdd *_aaa .PdfIndirectObject ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_aaa .PdfObjectStream ;OCSP []*_aaa .PdfObjectStream ;CRL []*_aaa .PdfObjectStream ;TU *_aaa .PdfObjectString ;TS *_aaa .PdfObjectString ;};

// ReplacePage replaces the original page to a new page.
func (_eedee *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ddcf :=pageNum -1;for _badd :=range _eedee ._ebdea {if _badd ==_ddcf {_dbba :=page .Duplicate ();_fbacb (_dbba );_eedee ._ebdea [_badd ]=_dbba ;};};};func (_bcfa *PdfFunctionType0 )processSamples ()error {_gcaga :=_dgb .ResampleBytes (_bcfa ._aeceg ,_bcfa .BitsPerSample );_bcfa ._eaaef =_gcaga ;return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ddga *PdfSignature )GetContainingPdfObject ()_aaa .PdfObject {return _ddga ._ddbdc };

// ToInteger convert to an integer format.
func (_eeca *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_eaedb :=_dg .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_eaedb *_eeca .C ()),uint32 (_eaedb *_eeca .M ()),uint32 (_eaedb *_eeca .Y ()),uint32 (_eaedb *_eeca .K ())};};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_degdb *PdfFont )BytesToCharcodes (data []byte )[]_aa .CharCode {_fe .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _efgf ,_ffcd :=_degdb ._bbdc .(*pdfFontType0 );_ffcd &&_efgf ._ffbg !=nil {if _gdcdf ,_ecgc :=_efgf .bytesToCharcodes (data );_ecgc {return _gdcdf ;};};_cggdc :=make ([]_aa .CharCode ,0,len (data )+len (data )%2);if _degdb .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _agee :=0;_agee < len (data );_agee +=2{_gbcba :=uint16 (data [_agee ])<<8|uint16 (data [_agee +1]);_cggdc =append (_cggdc ,_aa .CharCode (_gbcba ));};}else {for _ ,_gagb :=range data {_cggdc =append (_cggdc ,_aa .CharCode (_gagb ));};};return _cggdc ;};

// ToInteger convert to an integer format.
func (_baeg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_ccdd :=_dg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ccdd *_baeg .R ()),uint32 (_ccdd *_baeg .G ()),uint32 (_ccdd *_baeg .B ())};};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_dbafad ,_aaffcg :=_deab (basefont );if _aaffcg !=nil {return nil ,_aaffcg ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_dbafad ._eggc =_aa .NewWinAnsiEncoder ();};return &PdfFont {_bbdc :&_dbafad },nil ;};func _eadfb (_effc string )(map[_aa .CharCode ]_aa .GlyphName ,error ){_dbafb :=_af .Split (_effc ,"\u000a");_fbgga :=make (map[_aa .CharCode ]_aa .GlyphName );for _ ,_facag :=range _dbafb {_adbgd :=_degca .FindStringSubmatch (_facag );if _adbgd ==nil {continue ;};_ffag ,_gbbbb :=_adbgd [1],_adbgd [2];_eafba ,_babdf :=_ge .Atoi (_ffag );if _babdf !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_facag );return nil ,_aaa .ErrTypeError ;};_fbgga [_aa .CharCode (_eafba )]=_aa .GlyphName (_gbbbb );};_fe .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_fbgga );return _fbgga ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_abab *PdfOutlineItem )GetContainingPdfObject ()_aaa .PdfObject {return _abab ._abeef };func (_accb *PdfReader )newPdfAnnotationMovieFromDict (_adf *_aaa .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_aacd :=PdfAnnotationMovie {};_aacd .T =_adf .Get ("\u0054");_aacd .Movie =_adf .Get ("\u004d\u006f\u0076i\u0065");_aacd .A =_adf .Get ("\u0041");return &_aacd ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_gcd *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_gcd .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_gcd ._abca =acroForm ;};

// ToInteger convert to an integer format.
func (_dedaa *PdfColorCalGray )ToInteger (bits int )uint32 {_aaffc :=_dg .Pow (2,float64 (bits ))-1;return uint32 (_aaffc *_dedaa .Val ());};func (_ffggfa *XObjectImage )getParamsDict ()*_aaa .PdfObjectDictionary {_gedcc :=_aaa .MakeDict ();_gedcc .Set ("\u0057\u0069\u0064t\u0068",_aaa .MakeInteger (*_ffggfa .Width ));_gedcc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aaa .MakeInteger (*_ffggfa .Height ));_gedcc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aaa .MakeInteger (int64 (_ffggfa .ColorSpace .GetNumComponents ())));_gedcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aaa .MakeInteger (*_ffggfa .BitsPerComponent ));return _gedcc ;};func (_caba *PdfShading )getShadingDict ()(*_aaa .PdfObjectDictionary ,error ){_ggdee :=_caba ._cfade ;if _fbdgc ,_gfec :=_ggdee .(*_aaa .PdfIndirectObject );_gfec {_dfccd ,_gegefb :=_fbdgc .PdfObject .(*_aaa .PdfObjectDictionary );if !_gegefb {return nil ,_aaa .ErrTypeError ;};return _dfccd ,nil ;}else if _ebcacg ,_bfff :=_ggdee .(*_aaa .PdfObjectStream );_bfff {return _ebcacg .PdfObjectDictionary ,nil ;}else if _gebb ,_fabd :=_ggdee .(*_aaa .PdfObjectDictionary );_fabd {return _gebb ,nil ;}else {_fe .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_aaa .ErrTypeError ;};};

// ToPdfObject returns the PDF representation of the pattern.
func (_dgae *PdfPattern )ToPdfObject ()_aaa .PdfObject {_geabb :=_dgae .getDict ();_geabb .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_geabb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_aaa .MakeInteger (_dgae .PatternType ));return _dgae ._eabbc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_effe *PdfFilespec )GetContainingPdfObject ()_aaa .PdfObject {return _effe ._affb };

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bbbc *PdfField )GetContext ()PdfModel {return _bbbc ._fbbd };func (_bbeeb *PdfReader )traverseObjectData (_eceac _aaa .PdfObject )error {return _aaa .ResolveReferencesDeep (_eceac ,_bbeeb ._dabcd );};

// ToInteger convert to an integer format.
func (_agac *PdfColorLab )ToInteger (bits int )[3]uint32 {_bdaad :=_dg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bdaad *_agac .L ()),uint32 (_bdaad *_agac .A ()),uint32 (_bdaad *_agac .B ())};};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_def :=NewPdfAction ();_gc :=&PdfActionGoTo {};_gc .PdfAction =_def ;_def .SetContext (_gc );return _gc ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_bgeg :=NewPdfAnnotation ();_ccc :=&PdfAnnotationRedact {};_ccc .PdfAnnotation =_bgeg ;_ccc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgeg .SetContext (_ccc );return _ccc ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_aaecg *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _bfbc []*PdfField ;if _aaecg .AcroForm !=nil {_bfbc =_aaecg .AcroForm .AllFields ();};_cecaf :=make (map[*PdfField ]struct{},len (_bfbc ));for _ ,_eagfd :=range _bfbc {_cecaf [_eagfd ]=struct{}{};};for _ ,_beeef :=range _aaecg .PageList {_bgdedf ,_dgfd :=_beeef .GetAnnotations ();if _dgfd !=nil {return false ,_dgfd ;};for _ ,_cgdfa :=range _bgdedf {_efbbd ,_eacba :=_cgdfa .GetContext ().(*PdfAnnotationWidget );if !_eacba {continue ;};_efbgd :=_efbbd .Field ();if _efbgd ==nil {return true ,nil ;};if _ ,_eefdcc :=_cecaf [_efbgd ];!_eefdcc {return true ,nil ;};};};return false ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dccd pdfFontType0 )GetCharMetrics (code _aa .CharCode )(_gf .CharMetrics ,bool ){if _dccd .DescendantFont ==nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dccd );return _gf .CharMetrics {},false ;};return _dccd .DescendantFont .GetCharMetrics (code );};func _fbdg (_bfba *PdfField )[]*PdfField {_acfd :=[]*PdfField {_bfba };for _ ,_dggb :=range _bfba .Kids {_acfd =append (_acfd ,_fbdg (_dggb )...);};return _acfd ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _g .Time )(PdfDate ,error ){_ebfa :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_daed ,_ :=_ge .ParseInt (_ebfa [1:3],10,32);_cfee ,_ :=_ge .ParseInt (_ebfa [4:6],10,32);return PdfDate {_dabbb :int64 (timeObj .Year ()),_ddfgec :int64 (timeObj .Month ()),_facec :int64 (timeObj .Day ()),_cbgfb :int64 (timeObj .Hour ()),_bceeb :int64 (timeObj .Minute ()),_faec :int64 (timeObj .Second ()),_daef :_ebfa [0],_fdecg :_daed ,_eaabg :_cfee },nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// HasFontByName checks if has font resource by name.
func (_febda *PdfPage )HasFontByName (name _aaa .PdfObjectName )bool {_cebab ,_edbf :=_febda .Resources .Font .(*_aaa .PdfObjectDictionary );if !_edbf {return false ;};if _eaacd :=_cebab .Get (name );_eaacd !=nil {return true ;};return false ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_cee :=NewPdfAction ();_bee :=&PdfActionRendition {};_bee .PdfAction =_cee ;_cee .SetContext (_bee );return _bee ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _aaa .PdfObject ;Mac _aaa .PdfObject ;Unix _aaa .PdfObject ;NewWindow _aaa .PdfObject ;};func (_ceebg *PdfAcroForm )fill (_bgdaa FieldValueProvider ,_ddbd FieldAppearanceGenerator )error {if _ceebg ==nil {return nil ;};_begdb ,_edeee :=_bgdaa .FieldValues ();if _edeee !=nil {return _edeee ;};for _ ,_becae :=range _ceebg .AllFields (){_cdba :=_becae .PartialName ();_afcef ,_ebacg :=_begdb [_cdba ];if !_ebacg {if _gbgg ,_dagd :=_becae .FullName ();_dagd ==nil {_afcef ,_ebacg =_begdb [_gbgg ];};};if !_ebacg {_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cdba );continue ;};if _bdfg :=_ageba (_becae ,_afcef );_bdfg !=nil {return _bdfg ;};if _ddbd ==nil {continue ;};for _ ,_gfaaf :=range _becae .Annotations {_babff ,_acfc :=_ddbd .GenerateAppearanceDict (_ceebg ,_becae ,_gfaaf );if _acfc !=nil {return _acfc ;};_gfaaf .AP =_babff ;_gfaaf .ToPdfObject ();};};return nil ;};func _fcdac (_bgd *_aaa .PdfIndirectObject ,_eccfa *_aaa .PdfObjectDictionary )(*DSS ,error ){if _bgd ==nil {_bgd =_aaa .MakeIndirectObject (nil );};_bgd .PdfObject =_aaa .MakeDict ();_gfde :=map[string ]*VRI {};if _cbag ,_feed :=_aaa .GetDict (_eccfa .Get ("\u0056\u0052\u0049"));_feed {for _ ,_fecbd :=range _cbag .Keys (){if _befa ,_adce :=_aaa .GetDict (_cbag .Get (_fecbd ));_adce {_gfde [_af .ToUpper (_fecbd .String ())]=_fdbgg (_befa );};};};return &DSS {Certs :_daegg (_eccfa .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_daegg (_eccfa .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_daegg (_eccfa .Get ("\u0043\u0052\u004c\u0073")),VRI :_gfde ,_egfac :_bgd },nil ;};func (_ebad *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dagc *_aaa .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_cfc :=PdfAnnotationPrinterMark {};_cfc .MN =_dagc .Get ("\u004d\u004e");return &_cfc ,nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fccf *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ee .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_ggfd ,_faab :=_bc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._agebab ,img ._ggcd );if _faab !=nil {return img ,_faab ;};_gabg ,_faab :=_bc .GrayConverter .Convert (_ggfd );if _faab !=nil {return img ,_faab ;};return _caed (_gabg .Base ()),nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aaa .PdfObject ;IC _aaa .PdfObject ;BE _aaa .PdfObject ;RD _aaa .PdfObject ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aaa .PdfObject ;LE _aaa .PdfObject ;BS _aaa .PdfObject ;IC _aaa .PdfObject ;BE _aaa .PdfObject ;IT _aaa .PdfObject ;Measure _aaa .PdfObject ;};var _ecdfb =_ag .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ade :=NewPdfAction ();_bge :=&PdfActionThread {};_bge .PdfAction =_ade ;_ade .SetContext (_bge );return _bge ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_egfac *_aaa .PdfIndirectObject ;Certs []*_aaa .PdfObjectStream ;OCSPs []*_aaa .PdfObjectStream ;CRLs []*_aaa .PdfObjectStream ;VRI map[string ]*VRI ;_agegc map[string ]*_aaa .PdfObjectStream ;_cdgd map[string ]*_aaa .PdfObjectStream ;_gbcce map[string ]*_aaa .PdfObjectStream ;};func _abbbc (_bbaac []*_aaa .PdfObjectStream )*_aaa .PdfObjectArray {if len (_bbaac )==0{return nil ;};_fcegb :=make ([]_aaa .PdfObject ,0,len (_bbaac ));for _ ,_efbgbb :=range _bbaac {_fcegb =append (_fcegb ,_efbgbb );};return _aaa .MakeArray (_fcegb ...);};

// ToPdfObject implements interface PdfModel.
func (_fec *PdfAnnotationCircle )ToPdfObject ()_aaa .PdfObject {_fec .PdfAnnotation .ToPdfObject ();_ffec :=_fec ._fdd ;_eaba :=_ffec .PdfObject .(*_aaa .PdfObjectDictionary );_fec .PdfAnnotationMarkup .appendToPdfDictionary (_eaba );_eaba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_eaba .SetIfNotNil ("\u0042\u0053",_fec .BS );_eaba .SetIfNotNil ("\u0049\u0043",_fec .IC );_eaba .SetIfNotNil ("\u0042\u0045",_fec .BE );_eaba .SetIfNotNil ("\u0052\u0044",_fec .RD );return _ffec ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_cdgca FieldFlag )Has (fl FieldFlag )bool {return (_cdgca .Mask ()&fl .Mask ())> 0};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cfge *PdfPageResourcesColorspaces )Set (key _aaa .PdfObjectName ,val PdfColorspace ){if _ ,_aabga :=_cfge .Colorspaces [string (key )];!_aabga {_cfge .Names =append (_cfge .Names ,string (key ));};_cfge .Colorspaces [string (key )]=val ;};func (_daaa *PdfReader )newPdfAnnotationTextFromDict (_dedg *_aaa .PdfObjectDictionary )(*PdfAnnotationText ,error ){_bdge :=PdfAnnotationText {};_aefc ,_ddc :=_daaa .newPdfAnnotationMarkupFromDict (_dedg );if _ddc !=nil {return nil ,_ddc ;};_bdge .PdfAnnotationMarkup =_aefc ;_bdge .Open =_dedg .Get ("\u004f\u0070\u0065\u006e");_bdge .Name =_dedg .Get ("\u004e\u0061\u006d\u0065");_bdge .State =_dedg .Get ("\u0053\u0074\u0061t\u0065");_bdge .StateModel =_dedg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_bdge ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _aaa .PdfObject ;FS _aaa .PdfObject ;F _aaa .PdfObject ;UF _aaa .PdfObject ;DOS _aaa .PdfObject ;Mac _aaa .PdfObject ;Unix _aaa .PdfObject ;ID _aaa .PdfObject ;V _aaa .PdfObject ;EF _aaa .PdfObject ;RF _aaa .PdfObject ;Desc _aaa .PdfObject ;CI _aaa .PdfObject ;_affb _aaa .PdfObject ;};func _bdeda (_cgcbc *_aaa .PdfObjectDictionary )(*PdfFieldButton ,error ){_gbff :=&PdfFieldButton {};_gbff .Opt ,_ =_aaa .GetArray (_cgcbc .Get ("\u004f\u0070\u0074"));return _gbff ,nil ;};func (_eaa *PdfReader )newPdfActionMovieFromDict (_fcc *_aaa .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_fcc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_fcc .Get ("\u0054"),Operation :_fcc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbgf *PdfAnnotationPopup )ToPdfObject ()_aaa .PdfObject {_fbgf .PdfAnnotation .ToPdfObject ();_bdca :=_fbgf ._fdd ;_faaf :=_bdca .PdfObject .(*_aaa .PdfObjectDictionary );_faaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0050\u006f\u0070u\u0070"));_faaf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbgf .Parent );_faaf .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fbgf .Open );return _bdca ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_caabd *PdfPage )ToPdfObject ()_aaa .PdfObject {_cdffc :=_caabd ._beecaf ;_caabd .GetPageDict ();return _cdffc ;};func (_cgdegg *PdfSignature )extractChainFromCert ()([]*_be .Certificate ,error ){var _afgfb *_aaa .PdfObjectArray ;switch _dfec :=_cgdegg .Cert .(type ){case *_aaa .PdfObjectString :_afgfb =_aaa .MakeArray (_dfec );case *_aaa .PdfObjectArray :_afgfb =_dfec ;default:return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dfec );};var _fceac _bb .Buffer ;for _ ,_cdcdd :=range _afgfb .Elements (){_ddge ,_bcgfc :=_aaa .GetString (_cdcdd );if !_bcgfc {return nil ,_b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_cdcdd );};if _ ,_cceae :=_fceac .Write (_ddge .Bytes ());_cceae !=nil {return nil ,_cceae ;};};return _be .ParseCertificates (_fceac .Bytes ());};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ggfgf :=NewPdfAnnotation ();_daeg :=&PdfAnnotationWatermark {};_daeg .PdfAnnotation =_ggfgf ;_ggfgf .SetContext (_daeg );return _daeg ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_afce pdfCIDFontType0 )GetCharMetrics (code _aa .CharCode )(_gf .CharMetrics ,bool ){_bdfc :=_afce ._ddgfb ;if _gagc ,_fbbb :=_afce ._gffa [code ];_fbbb {_bdfc =_gagc ;};return _gf .CharMetrics {Wx :_bdfc },true ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_dccce *PdfReader )GetNamedDestinations ()(_aaa .PdfObject ,error ){_bgafa :=_aaa .ResolveReference (_dccce ._gdbc .Get ("\u004e\u0061\u006de\u0073"));if _bgafa ==nil {return nil ,nil ;};if !_dccce ._bcade {_bdaaa :=_dccce .traverseObjectData (_bgafa );if _bdaaa !=nil {return nil ,_bdaaa ;};};return _bgafa ,nil ;};type pdfCIDFontType0 struct{fontCommon ;_fgbf *_aaa .PdfIndirectObject ;_bfcfd _aa .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_aaa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aaa .PdfObject ;W _aaa .PdfObject ;DW2 _aaa .PdfObject ;W2 _aaa .PdfObject ;_gffa map[_aa .CharCode ]float64 ;_ddgfb float64 ;};

// R returns the value of the red component of the color.
func (_gbcg *PdfColorDeviceRGB )R ()float64 {return _gbcg [0]};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aaa .PdfObject ;LE _aaa .PdfObject ;BS _aaa .PdfObject ;IC _aaa .PdfObject ;BE _aaa .PdfObject ;IT _aaa .PdfObject ;Measure _aaa .PdfObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _aaa .PdfObject ;_efff []byte ;_ceeb *_aaa .PdfIndirectObject ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_bcd *PdfAnnotation )GetContext ()PdfModel {if _bcd ==nil {return nil ;};return _bcd ._adbe ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_aa .SimpleEncoder ,error ){_befga ,_badgc :=_deab (basefont );if _badgc !=nil {return nil ,nil ,_badgc ;};_fdgd ,_eegg :=_befga .Encoder ().(_aa .SimpleEncoder );if !_eegg {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_befga .Encoder ());};_gcba :=make (map[rune ]_aa .GlyphName );for _egfed :=range alphabet {if _ ,_gdgf :=_fdgd .RuneToCharcode (_egfed );!_gdgf {_ ,_gfdc :=_befga ._fddd [_egfed ];if !_gfdc {_fe .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_egfed ,_egfed );continue ;};_gcadf ,_gfdc :=_aa .RuneToGlyph (_egfed );if !_gfdc {_fe .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_egfed ,_egfed );continue ;};if len (_gcba )>=255{return nil ,nil ,_ee .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_gcba [_egfed ]=_gcadf ;};};var (_ceaff []_aa .CharCode ;_dgfcd []_aa .CharCode ;);for _gcdfb :=_aa .CharCode (1);_gcdfb <=0xff;_gcdfb ++{_cfcf ,_fbbab :=_fdgd .CharcodeToRune (_gcdfb );if !_fbbab {_ceaff =append (_ceaff ,_gcdfb );continue ;};if _ ,_fbbab =alphabet [_cfcf ];!_fbbab {_dgfcd =append (_dgfcd ,_gcdfb );};};_becgg :=append (_ceaff ,_dgfcd ...);if len (_becgg )< len (_gcba ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gcba ),len (_becgg ));};_dagca :=make ([]rune ,0,len (_gcba ));for _efad :=range _gcba {_dagca =append (_dagca ,_efad );};_ae .Slice (_dagca ,func (_dedd ,_bdbda int )bool {return _dagca [_dedd ]< _dagca [_bdbda ]});_dcgf :=make (map[_aa .CharCode ]_aa .GlyphName ,len (_dagca ));for _ ,_cabbd :=range _dagca {_fbce :=_becgg [0];_becgg =_becgg [1:];_dcgf [_fbce ]=_gcba [_cabbd ];};_fdgd =_aa .ApplyDifferences (_fdgd ,_dcgf );_befga .SetEncoder (_fdgd );return &PdfFont {_bbdc :&_befga },_fdgd ,nil ;};

// SetOCProperties sets the optional content properties.
func (_cfddde *PdfWriter )SetOCProperties (ocProperties _aaa .PdfObject )error {_gcdef :=_cfddde ._fbfbc ;if ocProperties !=nil {_fe .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_gcdef .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cfddde .addObjects (ocProperties );};return nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_bddbea *PdfReader )GetEncryptionMethod ()string {_gefa :=_bddbea ._gcee .GetCrypter ();return _gefa .String ();};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// GetCharMetrics returns the char metrics for character code `code`.
func (_afcc pdfCIDFontType2 )GetCharMetrics (code _aa .CharCode )(_gf .CharMetrics ,bool ){if _faafed ,_egeba :=_afcc ._ffcfa [code ];_egeba {return _gf .CharMetrics {Wx :_faafed },true ;};_gbfgg :=rune (code );_fccg ,_cccb :=_afcc ._fgagc [_gbfgg ];if !_cccb {_fccg =int (_afcc ._ffcg );};return _gf .CharMetrics {Wx :float64 (_fccg )},true ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _aaa .PdfObject ;BS _aaa .PdfObject ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ggddf *_aaa .PdfIndirectObject ;};

// WriteToFile writes the Appender output to file specified by path.
func (_baced *PdfAppender )WriteToFile (outputPath string )error {_gfaa ,_cdfa :=_bef .Create (outputPath );if _cdfa !=nil {return _cdfa ;};defer _gfaa .Close ();return _baced .Write (_gfaa );};func _bacg (_dfce _aaa .PdfObject )(*PdfColorspaceCalRGB ,error ){_bdef :=NewPdfColorspaceCalRGB ();if _deee ,_ffdcf :=_dfce .(*_aaa .PdfIndirectObject );_ffdcf {_bdef ._bddbe =_deee ;};_dfce =_aaa .TraceToDirectObject (_dfce );_dgfe ,_gbddc :=_dfce .(*_aaa .PdfObjectArray );if !_gbddc {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgfe .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_dfce =_aaa .TraceToDirectObject (_dgfe .Get (0));_bdbf ,_gbddc :=_dfce .(*_aaa .PdfObjectName );if !_gbddc {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_bdbf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dfce =_aaa .TraceToDirectObject (_dgfe .Get (1));_bfdd ,_gbddc :=_dfce .(*_aaa .PdfObjectDictionary );if !_gbddc {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_dfce =_bfdd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dfce =_aaa .TraceToDirectObject (_dfce );_cbdf ,_gbddc :=_dfce .(*_aaa .PdfObjectArray );if !_gbddc {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _cbdf .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ffaaa ,_dgefc :=_cbdf .GetAsFloat64Slice ();if _dgefc !=nil {return nil ,_dgefc ;};_bdef .WhitePoint =_ffaaa ;_dfce =_bfdd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dfce !=nil {_dfce =_aaa .TraceToDirectObject (_dfce );_deaa ,_bdag :=_dfce .(*_aaa .PdfObjectArray );if !_bdag {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _deaa .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_agdg ,_cdge :=_deaa .GetAsFloat64Slice ();if _cdge !=nil {return nil ,_cdge ;};_bdef .BlackPoint =_agdg ;};_dfce =_bfdd .Get ("\u0047\u0061\u006dm\u0061");if _dfce !=nil {_dfce =_aaa .TraceToDirectObject (_dfce );_ddgf ,_fabb :=_dfce .(*_aaa .PdfObjectArray );if !_fabb {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _ddgf .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_fbgg ,_bccgd :=_ddgf .GetAsFloat64Slice ();if _bccgd !=nil {return nil ,_bccgd ;};_bdef .Gamma =_fbgg ;};_dfce =_bfdd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _dfce !=nil {_dfce =_aaa .TraceToDirectObject (_dfce );_eeed ,_fgff :=_dfce .(*_aaa .PdfObjectArray );if !_fgff {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _eeed .Len ()!=9{_fe .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_eeed .String ());return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_eefgg ,_cgag :=_eeed .GetAsFloat64Slice ();if _cgag !=nil {return nil ,_cgag ;};_bdef .Matrix =_eefgg ;};return _bdef ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fbdf *PdfColorspaceDeviceCMYK )ToPdfObject ()_aaa .PdfObject {return _aaa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_fccgf *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_aaa .StreamEncoder ,error ){_aede ,_gaefd :=_fccgf ._eabbc .(*_aaa .PdfObjectStream );if !_gaefd {_fe .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fccgf ._eabbc );return nil ,nil ,_aaa .ErrTypeError ;};_gccad ,_eccadd :=_aaa .DecodeStream (_aede );if _eccadd !=nil {_fe .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_eccadd );return nil ,nil ,_eccadd ;};_eeegac ,_eccadd :=_aaa .NewEncoderFromStream (_aede );if _eccadd !=nil {_fe .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_eccadd );return nil ,nil ,_eccadd ;};return _gccad ,_eeegac ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _aaa .PdfObject ;MK _aaa .PdfObject ;A _aaa .PdfObject ;AA _aaa .PdfObject ;};

// SetForms sets the Acroform for a PDF file.
func (_afgbb *PdfWriter )SetForms (form *PdfAcroForm )error {_afgbb ._dfgce =form ;return nil };

// String returns a string representation of what flags are set.
func (_gdcf FieldFlag )String ()string {_cbgg :="";if _gdcf ==FieldFlagClear {_cbgg ="\u0043\u006c\u0065a\u0072";return _cbgg ;};if _gdcf &FieldFlagReadOnly > 0{_cbgg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gdcf &FieldFlagRequired > 0{_cbgg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gdcf &FieldFlagNoExport > 0{_cbgg +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _gdcf &FieldFlagNoToggleToOff > 0{_cbgg +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _gdcf &FieldFlagRadio > 0{_cbgg +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _gdcf &FieldFlagPushbutton > 0{_cbgg +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _gdcf &FieldFlagRadiosInUnision > 0{_cbgg +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _gdcf &FieldFlagMultiline > 0{_cbgg +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _gdcf &FieldFlagPassword > 0{_cbgg +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _gdcf &FieldFlagFileSelect > 0{_cbgg +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _gdcf &FieldFlagDoNotScroll > 0{_cbgg +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _gdcf &FieldFlagComb > 0{_cbgg +="\u007c\u0043\u006fm\u0062";};if _gdcf &FieldFlagRichText > 0{_cbgg +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _gdcf &FieldFlagDoNotSpellCheck > 0{_cbgg +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _gdcf &FieldFlagCombo > 0{_cbgg +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _gdcf &FieldFlagEdit > 0{_cbgg +="\u007c\u0045\u0064i\u0074";};if _gdcf &FieldFlagSort > 0{_cbgg +="\u007c\u0053\u006fr\u0074";};if _gdcf &FieldFlagMultiSelect > 0{_cbgg +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _gdcf &FieldFlagCommitOnSelChange > 0{_cbgg +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _af .Trim (_cbgg ,"\u007c");};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_bgdg *PdfFont )ToUnicode ()string {if _bgdg .baseFields ()._fgcf ==nil {return "";};return _bgdg .baseFields ()._fgcf .Name ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_bfdc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efef :=vals [0];if _efef < 0.0||_efef > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdcg :=vals [1];if _fdcg < 0.0||_fdcg > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gged :=vals [2];if _gged < 0.0||_gged > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgcb :=NewPdfColorCalRGB (_efef ,_fdcg ,_gged );return _cgcb ,nil ;};func (_fbf *PdfReader )newPdfActionGotoFromDict (_eacd *_aaa .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_eacd .Get ("\u0044")},nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_caaeb *PdfReader )GetObjectNums ()[]int {return _caaeb ._gcee .GetObjectNums ()};func (_cef *PdfReader )newPdfActionJavaScriptFromDict (_gcb *_aaa .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_gcb .Get ("\u004a\u0053")},nil ;};func _ecfgd (_adgcaf _aaa .PdfObject ){_fe .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_adgcaf ,_adgcaf .String ());if _aebaaf ,_baagc :=_adgcaf .(*_aaa .PdfObjectStream );_baagc {_eagg ,_acfac :=_aaa .DecodeStream (_aebaaf );if _acfac !=nil {_fe .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_acfac );return ;};_fe .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_eagg );}else if _gcecc ,_fcfaa :=_adgcaf .(*_aaa .PdfIndirectObject );_fcfaa {_fe .Log .Debug ("\u0025\u0054\u0020%\u0076",_gcecc .PdfObject ,_gcecc .PdfObject );_fe .Log .Debug ("\u0025\u0073",_gcecc .PdfObject .String ());};};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetBorderWidth returns the border style's width.
func (_aedd *PdfBorderStyle )GetBorderWidth ()float64 {if _aedd .W ==nil {return 1;};return *_aedd .W ;};

// IsCID returns true if the underlying font is CID.
func (_bbdd *PdfFont )IsCID ()bool {return _bbdd .baseFields ().isCIDFont ()};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_ddb :=NewPdfAnnotation ();_bdga :=&PdfAnnotationRichMedia {};_bdga .PdfAnnotation =_ddb ;_ddb .SetContext (_bdga );return _bdga ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dadb :=NewPdfAnnotation ();_fad :=&PdfAnnotationPolyLine {};_fad .PdfAnnotation =_dadb ;_fad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dadb .SetContext (_fad );return _fad ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_eabcg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_eabcg .Mask ()|fl .Mask ())};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_fcfe *pdfFontSimple )SetEncoder (encoder _aa .TextEncoder ){_fcfe ._eggc =encoder };

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _aaa .PdfObject ;Name _aaa .PdfObject ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _aaa .PdfObject )(*PdfFont ,error ){return _addb (fontObj ,true )};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cfabe *PdfField )Flags ()FieldFlag {var _dcfb FieldFlag ;_aaae ,_ggde :=_cfabe .inherit (func (_cfda *PdfField )bool {if _cfda .Ff !=nil {_dcfb =FieldFlag (*_cfabe .Ff );return true ;};return false ;});if _ggde !=nil {_fe .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ggde );};if !_aaae {_fe .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _dcfb ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_cadf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// AddFont adds a font dictionary to the Font resources.
func (_ffbca *PdfPage )AddFont (name _aaa .PdfObjectName ,font _aaa .PdfObject )error {if _ffbca .Resources ==nil {_ffbca .Resources =NewPdfPageResources ();};if _ffbca .Resources .Font ==nil {_ffbca .Resources .Font =_aaa .MakeDict ();};_gdcbg ,_afgg :=_aaa .TraceToDirectObject (_ffbca .Resources .Font ).(*_aaa .PdfObjectDictionary );if !_afgg {_fe .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_aaa .TraceToDirectObject (_ffbca .Resources .Font ));return _ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdcbg .Set (name ,font );return nil ;};func _dgfecc (_cbffa *_aaa .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ebfee :=PdfShadingType5 {};_acea :=_cbffa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _acea ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_befaf ,_acgca :=_acea .(*_aaa .PdfObjectInteger );if !_acgca {_fe .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acea );return nil ,_aaa .ErrTypeError ;};_ebfee .BitsPerCoordinate =_befaf ;_acea =_cbffa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _acea ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_befaf ,_acgca =_acea .(*_aaa .PdfObjectInteger );if !_acgca {_fe .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_acea );return nil ,_aaa .ErrTypeError ;};_ebfee .BitsPerComponent =_befaf ;_acea =_cbffa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _acea ==nil {_fe .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_befaf ,_acgca =_acea .(*_aaa .PdfObjectInteger );if !_acgca {_fe .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_acea );return nil ,_aaa .ErrTypeError ;};_ebfee .VerticesPerRow =_befaf ;_acea =_cbffa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _acea ==nil {_fe .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_fegfc ,_acgca :=_acea .(*_aaa .PdfObjectArray );if !_acgca {_fe .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acea );return nil ,_aaa .ErrTypeError ;};_ebfee .Decode =_fegfc ;if _eeeea :=_cbffa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eeeea !=nil {_ebfee .Function =[]PdfFunction {};if _ceab ,_cfdde :=_eeeea .(*_aaa .PdfObjectArray );_cfdde {for _ ,_bbafb :=range _ceab .Elements (){_ddfabf ,_ddeag :=_dbec (_bbafb );if _ddeag !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddeag );return nil ,_ddeag ;};_ebfee .Function =append (_ebfee .Function ,_ddfabf );};}else {_effdcb ,_feaag :=_dbec (_eeeea );if _feaag !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_feaag );return nil ,_feaag ;};_ebfee .Function =append (_ebfee .Function ,_effdcb );};};return &_ebfee ,nil ;};func (_gabe *LTV )enable (_dceg ,_gfded []*_be .Certificate ,_ebadd string )error {_fggde ,_befgb ,_ecabe :=_gabe .buildCertChain (_dceg ,_gfded );if _ecabe !=nil {return _ecabe ;};_egcgc ,_ecabe :=_gabe .getCerts (_fggde );if _ecabe !=nil {return _ecabe ;};_afaa ,_ecabe :=_gabe .getOCSPs (_fggde ,_befgb );if _ecabe !=nil {return _ecabe ;};_fcfge ,_ecabe :=_gabe .getCRLs (_fggde );if _ecabe !=nil {return _ecabe ;};_ddabb :=_gabe ._edada ;_efac ,_ecabe :=_ddabb .addCerts (_egcgc );if _ecabe !=nil {return _ecabe ;};_gbaba ,_ecabe :=_ddabb .addOCSPs (_afaa );if _ecabe !=nil {return _ecabe ;};_baga ,_ecabe :=_ddabb .addCRLs (_fcfge );if _ecabe !=nil {return _ecabe ;};if _ebadd !=""{_ddabb .VRI [_ebadd ]=&VRI {Cert :_efac ,OCSP :_gbaba ,CRL :_baga };};_gabe ._gbedb .SetDSS (_ddabb );return nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_bbdc pdfFont };

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_dbge *DSS )addCerts (_dcf [][]byte )([]*_aaa .PdfObjectStream ,error ){return _dbge .add (&_dbge .Certs ,_dbge ._agegc ,_dcf );};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_faebd *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_faebd .GetNumComponents (){return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gadac ,_fgcdf :=_faebd .TintTransform .Evaluate (vals );if _fgcdf !=nil {return nil ,_fgcdf ;};_ecbb ,_fgcdf :=_faebd .AlternateSpace .ColorFromFloats (_gadac );if _fgcdf !=nil {return nil ,_fgcdf ;};return _ecbb ,nil ;};func (_eecac *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _eecac ._ebcac };

// GetNumComponents returns the number of color components (1 for Separation).
func (_ffcf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_babd ,_dbedff :=_bef .Open (filePath );if _dbedff !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dbedff );return nil ,_dbedff ;};defer _babd .Close ();return NewPdfFontFromTTF (_babd );};func (_gcae PdfFont )actualFont ()pdfFont {if _gcae ._bbdc ==nil {_fe .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcae );};return _gcae ._bbdc ;};func (_aeab *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_ebaaa PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_aaa .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_dcdb []_aaa .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bdbg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_gggb *PdfReader )newPdfAnnotationCaretFromDict (_bgae *_aaa .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_fdea :=PdfAnnotationCaret {};_abf ,_dbf :=_gggb .newPdfAnnotationMarkupFromDict (_bgae );if _dbf !=nil {return nil ,_dbf ;};_fdea .PdfAnnotationMarkup =_abf ;_fdea .RD =_bgae .Get ("\u0052\u0044");_fdea .Sy =_bgae .Get ("\u0053\u0079");return &_fdea ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ggb :=NewPdfAnnotation ();_acf :=&PdfAnnotationCircle {};_acf .PdfAnnotation =_ggb ;_acf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggb .SetContext (_acf );return _acf ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_aaa .PdfObject ;GetContainingPdfObject ()_aaa .PdfObject ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_bcb :=NewPdfAnnotation ();_cabc :=&PdfAnnotation3D {};_cabc .PdfAnnotation =_bcb ;_bcb .SetContext (_cabc );return _cabc ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_accd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_adfd ,_gdcd :=color .(*PdfColorDeviceGray );if !_gdcd {_fe .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_adfd ),float64 (*_adfd ),float64 (*_adfd )),nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ToPdfObject implements interface PdfModel.
func (_ggdc *PdfAnnotationSquare )ToPdfObject ()_aaa .PdfObject {_ggdc .PdfAnnotation .ToPdfObject ();_cfac :=_ggdc ._fdd ;_dcdc :=_cfac .PdfObject .(*_aaa .PdfObjectDictionary );if _ggdc .PdfAnnotationMarkup !=nil {_ggdc .PdfAnnotationMarkup .appendToPdfDictionary (_dcdc );};_dcdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_dcdc .SetIfNotNil ("\u0042\u0053",_ggdc .BS );_dcdc .SetIfNotNil ("\u0049\u0043",_ggdc .IC );_dcdc .SetIfNotNil ("\u0042\u0045",_ggdc .BE );_dcdc .SetIfNotNil ("\u0052\u0044",_ggdc .RD );return _cfac ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_cbcg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_gdgc :=_dgb .NewReader (img .getBase ());_aafa :=_bc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._agebab ,img ._ggcd );_bebbd :=_dgb .NewWriter (_aafa );_cgac :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_abcea :=_cbcg .GetNumComponents ();_gbce :=make ([]uint32 ,_abcea );_cebba :=make ([]float64 ,_abcea );for {_bebc :=_gdgc .ReadSamples (_gbce );if _bebc ==_agb .EOF {break ;}else if _bebc !=nil {return img ,_bebc ;};for _ccaeb :=0;_ccaeb < _abcea ;_ccaeb ++{_cgagc :=float64 (_gbce [_ccaeb ])/_cgac ;_cebba [_ccaeb ]=_cgagc ;};_efccg ,_bebc :=_cbcg .TintTransform .Evaluate (_cebba );if _bebc !=nil {return img ,_bebc ;};for _ ,_bdea :=range _efccg {_bdea =_dg .Min (_dg .Max (0,_bdea ),1.0);if _bebc =_bebbd .WriteSample (uint32 (_bdea *_cgac ));_bebc !=nil {return img ,_bebc ;};};};return _cbcg .AlternateSpace .ImageToRGB (_caed (&_aafa ));};func (_gbae *PdfReader )newPdfAnnotationWidgetFromDict (_eeae *_aaa .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_eff :=PdfAnnotationWidget {};_eff .H =_eeae .Get ("\u0048");_eff .MK =_eeae .Get ("\u004d\u004b");_eff .A =_eeae .Get ("\u0041");_eff .AA =_eeae .Get ("\u0041\u0041");_eff .BS =_eeae .Get ("\u0042\u0053");_eff .Parent =_eeae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_eff ,nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _aaa .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _aaa .PdfObject ;Contents _aaa .PdfObject ;Rotate *int64 ;Group _aaa .PdfObject ;Thumb _aaa .PdfObject ;B _aaa .PdfObject ;Dur _aaa .PdfObject ;Trans _aaa .PdfObject ;AA _aaa .PdfObject ;Metadata _aaa .PdfObject ;PieceInfo _aaa .PdfObject ;StructParents _aaa .PdfObject ;ID _aaa .PdfObject ;PZ _aaa .PdfObject ;SeparationInfo _aaa .PdfObject ;Tabs _aaa .PdfObject ;TemplateInstantiated _aaa .PdfObject ;PresSteps _aaa .PdfObject ;UserUnit _aaa .PdfObject ;VP _aaa .PdfObject ;Annots _aaa .PdfObject ;_edebg []*PdfAnnotation ;_afaag *_aaa .PdfObjectDictionary ;_beecaf *_aaa .PdfIndirectObject ;_cgcge *PdfReader ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ToPdfObject implements interface PdfModel.
func (_agfe *PdfActionGoToR )ToPdfObject ()_aaa .PdfObject {_agfe .PdfAction .ToPdfObject ();_acb :=_agfe ._afe ;_bebb :=_acb .PdfObject .(*_aaa .PdfObjectDictionary );_bebb .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeGoToR )));if _agfe .F !=nil {_bebb .Set ("\u0046",_agfe .F .ToPdfObject ());};_bebb .SetIfNotNil ("\u0044",_agfe .D );_bebb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_agfe .NewWindow );return _acb ;};

// SetImage updates XObject Image with new image data.
func (_facd *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_facd .Filter .UpdateParams (img .GetParamsDict ());_ddfee ,_fagbd :=_facd .Filter .EncodeBytes (img .Data );if _fagbd !=nil {return _fagbd ;};_facd .Stream =_ddfee ;_dfccg :=img .Width ;_facd .Width =&_dfccg ;_bgcee :=img .Height ;_facd .Height =&_bgcee ;_cbdda :=img .BitsPerComponent ;_facd .BitsPerComponent =&_cbdda ;if cs ==nil {if img .ColorComponents ==1{_facd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_facd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_facd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ee .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_facd .ColorSpace =cs ;};return nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _aaa .PdfObject ;};func (_efe *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_fcee *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func (_dge *PdfReader )newPdfAnnotationCircleFromDict (_dfg *_aaa .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_cebd :=PdfAnnotationCircle {};_efgg ,_egfe :=_dge .newPdfAnnotationMarkupFromDict (_dfg );if _egfe !=nil {return nil ,_egfe ;};_cebd .PdfAnnotationMarkup =_efgg ;_cebd .BS =_dfg .Get ("\u0042\u0053");_cebd .IC =_dfg .Get ("\u0049\u0043");_cebd .BE =_dfg .Get ("\u0042\u0045");_cebd .RD =_dfg .Get ("\u0052\u0044");return &_cebd ,nil ;};func (_abfa *pdfFontSimple )updateStandard14Font (){_ffcbe ,_decfa :=_abfa .Encoder ().(_aa .SimpleEncoder );if !_decfa {_fe .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_abfa .Encoder (),_abfa );return ;};_bebfg :=_ffcbe .Charcodes ();_abfa ._dgdff =make (map[_aa .CharCode ]float64 ,len (_bebfg ));for _ ,_ecaed :=range _bebfg {_bfde ,_ :=_ffcbe .CharcodeToRune (_ecaed );_abfa ._dgdff [_ecaed ]=_abfa ._fddd [_bfde ].Wx ;};};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_aaa .PdfObject ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_abc :=NewPdfAction ();_beb :=&PdfActionTrans {};_beb .PdfAction =_abc ;_abc .SetContext (_beb );return _beb ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_aage *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gadc :=_dgb .NewReader (img .getBase ());_deccc :=_bc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_agd :=_dgb .NewWriter (_deccc );_ecba :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_gefeb :=make ([]uint32 ,3);var (_fbgc uint32 ;ANorm ,X ,Y ,Z ,_afcb ,_gege ,_fdead float64 ;_ffed error ;);for {_fbgc ,_ffed =_gadc .ReadSample ();if _ffed ==_agb .EOF {break ;}else if _ffed !=nil {return img ,_ffed ;};ANorm =float64 (_fbgc )/_ecba ;X =_aage .WhitePoint [0]*_dg .Pow (ANorm ,_aage .Gamma );Y =_aage .WhitePoint [1]*_dg .Pow (ANorm ,_aage .Gamma );Z =_aage .WhitePoint [2]*_dg .Pow (ANorm ,_aage .Gamma );_afcb =3.240479*X +-1.537150*Y +-0.498535*Z ;_gege =-0.969256*X +1.875992*Y +0.041556*Z ;_fdead =0.055648*X +-0.204043*Y +1.057311*Z ;_afcb =_dg .Min (_dg .Max (_afcb ,0),1.0);_gege =_dg .Min (_dg .Max (_gege ,0),1.0);_fdead =_dg .Min (_dg .Max (_fdead ,0),1.0);_gefeb [0]=uint32 (_afcb *_ecba );_gefeb [1]=uint32 (_gege *_ecba );_gefeb [2]=uint32 (_fdead *_ecba );if _ffed =_agd .WriteSamples (_gefeb );_ffed !=nil {return img ,_ffed ;};};return _caed (&_deccc ),nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_dcage *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _aaa .GetNumberAsFloat (_dcage .Ascent );};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fcbgd *PdfField )FullName ()(string ,error ){var _bffa _bb .Buffer ;_bcdgd :=[]string {};if _fcbgd .T !=nil {_bcdgd =append (_bcdgd ,_fcbgd .T .Decoded ());};_cdcdf :=map[*PdfField ]bool {};_cdcdf [_fcbgd ]=true ;_daea :=_fcbgd .Parent ;for _daea !=nil {if _ ,_eefdc :=_cdcdf [_daea ];_eefdc {return _bffa .String (),_ee .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _daea .T ==nil {return _bffa .String (),_ee .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_bcdgd =append (_bcdgd ,_daea .T .Decoded ());_cdcdf [_daea ]=true ;_daea =_daea .Parent ;};for _bfgfc :=len (_bcdgd )-1;_bfgfc >=0;_bfgfc --{_bffa .WriteString (_bcdgd [_bfgfc ]);if _bfgfc > 0{_bffa .WriteString ("\u002e");};};return _bffa .String (),nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _aaa .PdfObject ;Open _aaa .PdfObject ;};

// SetLocation sets the `Location` field of the signature.
func (_faadd *PdfSignature )SetLocation (location string ){_faadd .Location =_aaa .MakeString (location )};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ecdeb *PdfPage )GetContainingPdfObject ()_aaa .PdfObject {return _ecdeb ._beecaf };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gecc *PdfShadingType3 )ToPdfObject ()_aaa .PdfObject {_gecc .PdfShading .ToPdfObject ();_defcf ,_eddd :=_gecc .getShadingDict ();if _eddd !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gecc .Coords !=nil {_defcf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gecc .Coords );};if _gecc .Domain !=nil {_defcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gecc .Domain );};if _gecc .Function !=nil {if len (_gecc .Function )==1{_defcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gecc .Function [0].ToPdfObject ());}else {_adbf :=_aaa .MakeArray ();for _ ,_cddgf :=range _gecc .Function {_adbf .Append (_cddgf .ToPdfObject ());};_defcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adbf );};};if _gecc .Extend !=nil {_defcf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gecc .Extend );};return _gecc ._cfade ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _aaa .PdfObject ;T _aaa .PdfObject ;Operation _aaa .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cddd *PdfColorspaceSpecialPattern )ToPdfObject ()_aaa .PdfObject {if _cddd .UnderlyingCS ==nil {return _aaa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cfddf :=_aaa .MakeArray (_aaa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cfddf .Append (_cddd .UnderlyingCS .ToPdfObject ());if _cddd ._ccee !=nil {_cddd ._ccee .PdfObject =_cfddf ;return _cddd ._ccee ;};return _cfddf ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fgfeg *Image )Resample (targetBitsPerComponent int64 ){if _fgfeg .BitsPerComponent ==targetBitsPerComponent {return ;};_eefeb :=_fgfeg .GetSamples ();if targetBitsPerComponent < _fgfeg .BitsPerComponent {_gcaba :=_fgfeg .BitsPerComponent -targetBitsPerComponent ;for _fbbbb :=range _eefeb {_eefeb [_fbbbb ]>>=uint (_gcaba );};}else if targetBitsPerComponent > _fgfeg .BitsPerComponent {_bgcae :=targetBitsPerComponent -_fgfeg .BitsPerComponent ;for _bbcga :=range _eefeb {_eefeb [_bbcga ]<<=uint (_bgcae );};};_fgfeg .BitsPerComponent =targetBitsPerComponent ;if _fgfeg .BitsPerComponent < 8{_fgfeg .resampleLowBits (_eefeb );return ;};_fdfac :=_bc .BytesPerLine (int (_fgfeg .Width ),int (_fgfeg .BitsPerComponent ),_fgfeg .ColorComponents );_gbcbeg :=make ([]byte ,_fdfac *int (_fgfeg .Height ));var (_feaeg ,_fbebg ,_abcg ,_aadgbg int ;_gadeg uint32 ;);for _abcg =0;_abcg < int (_fgfeg .Height );_abcg ++{_feaeg =_abcg *_fdfac ;_fbebg =(_abcg +1)*_fdfac -1;_acdbd :=_dgb .ResampleUint32 (_eefeb [_feaeg :_fbebg ],int (targetBitsPerComponent ),8);for _aadgbg ,_gadeg =range _acdbd {_gbcbeg [_aadgbg +_feaeg ]=byte (_gadeg );};};_fgfeg .Data =_gbcbeg ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aaa .PdfObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_efag *PdfFont )SubsetRegistered ()error {switch _bacf :=_efag ._bbdc .(type ){case *pdfFontType0 :_fafdd :=_bacf .subsetRegistered ();if _fafdd !=nil {_fe .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fafdd );return _fafdd ;};if _bacf ._dfcg !=nil {if _bacf ._gedd !=nil {_bacf ._gedd .ToPdfObject ();};_bacf .ToPdfObject ();};default:_fe .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bacf );};return nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_dgggb *PdfPageResources )GetExtGState (keyName _aaa .PdfObjectName )(_aaa .PdfObject ,bool ){if _dgggb .ExtGState ==nil {return nil ,false ;};_deba ,_ageeg :=_aaa .TraceToDirectObject (_dgggb .ExtGState ).(*_aaa .PdfObjectDictionary );if !_ageeg {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgggb .ExtGState );return nil ,false ;};if _dfgd :=_deba .Get (keyName );_dfgd !=nil {return _dfgd ,true ;};return nil ,false ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_cddda *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _cddda ._edebg !=nil {return _cddda ._edebg ,nil ;};if _cddda .Annots ==nil {_cddda ._edebg =[]*PdfAnnotation {};return nil ,nil ;};if _cddda ._cgcge ==nil {_cddda ._edebg =[]*PdfAnnotation {};return nil ,nil ;};_aaggc ,_fbecb :=_cddda ._cgcge .loadAnnotations (_cddda .Annots );if _fbecb !=nil {return nil ,_fbecb ;};if _aaggc ==nil {_cddda ._edebg =[]*PdfAnnotation {};};_cddda ._edebg =_aaggc ;return _cddda ._edebg ,nil ;};func _eadg (_gbgac _aaa .PdfObject )(*PdfColorspaceLab ,error ){_debdb :=NewPdfColorspaceLab ();if _ffac ,_dceed :=_gbgac .(*_aaa .PdfIndirectObject );_dceed {_debdb ._faafe =_ffac ;};_gbgac =_aaa .TraceToDirectObject (_gbgac );_aegb ,_effbe :=_gbgac .(*_aaa .PdfObjectArray );if !_effbe {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aegb .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_gbgac =_aaa .TraceToDirectObject (_aegb .Get (0));_cabd ,_effbe :=_gbgac .(*_aaa .PdfObjectName );if !_effbe {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_cabd !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gbgac =_aaa .TraceToDirectObject (_aegb .Get (1));_cace ,_effbe :=_gbgac .(*_aaa .PdfObjectDictionary );if !_effbe {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gbgac =_cace .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gbgac =_aaa .TraceToDirectObject (_gbgac );_afdd ,_effbe :=_gbgac .(*_aaa .PdfObjectArray );if !_effbe {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _afdd .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fbaf ,_efba :=_afdd .GetAsFloat64Slice ();if _efba !=nil {return nil ,_efba ;};_debdb .WhitePoint =_fbaf ;_gbgac =_cace .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gbgac !=nil {_gbgac =_aaa .TraceToDirectObject (_gbgac );_cdcg ,_cead :=_gbgac .(*_aaa .PdfObjectArray );if !_cead {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _cdcg .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_acdc ,_aadd :=_cdcg .GetAsFloat64Slice ();if _aadd !=nil {return nil ,_aadd ;};_debdb .BlackPoint =_acdc ;};_gbgac =_cace .Get ("\u0052\u0061\u006eg\u0065");if _gbgac !=nil {_gbgac =_aaa .TraceToDirectObject (_gbgac );_aadb ,_cdgf :=_gbgac .(*_aaa .PdfObjectArray );if !_cdgf {_fe .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aadb .Len ()!=4{_fe .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_aeddd ,_fgfg :=_aadb .GetAsFloat64Slice ();if _fgfg !=nil {return nil ,_fgfg ;};_debdb .Range =_aeddd ;};return _debdb ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_agcf *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ecec ,_ ,_cfddd :=_agcf .CharcodesToUnicodeWithStats (_agcf .BytesToCharcodes (data ));_eebcg :=_aa .ExpandLigatures (_ecec );return _eebcg ,_gb .RuneCountInString (_eebcg ),_cfddd ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gac :=NewPdfAnnotation ();_adga :=&PdfAnnotationCaret {};_adga .PdfAnnotation =_gac ;_adga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gac .SetContext (_adga );return _adga ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_eefag :=&PdfColorspaceLab {};_eefag .BlackPoint =[]float64 {0.0,0.0,0.0};_eefag .Range =[]float64 {-100,100,-100,100};return _eefag ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_fcgc DefaultImageHandler )Read (reader _agb .Reader )(*Image ,error ){_begg ,_ ,_gccbg :=_db .Decode (reader );if _gccbg !=nil {_fe .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gccbg );return nil ,_gccbg ;};return _fcgc .NewImageFromGoImage (_begg );};func _fgeg (_dcgda _aaa .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_bada :=&PdfColorspaceDeviceNAttributes {};var _aabc *_aaa .PdfObjectDictionary ;if _abdd ,_cbfd :=_dcgda .(*_aaa .PdfIndirectObject );_cbfd {_bada ._fegee =_abdd ;var _dagb bool ;_aabc ,_dagb =_abdd .PdfObject .(*_aaa .PdfObjectDictionary );if !_dagb {_fe .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _cddb ,_dggg :=_dcgda .(*_aaa .PdfObjectDictionary );_dggg {_aabc =_cddb ;}else {_fe .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffccf :=_aabc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ffccf !=nil {_adgg ,_aaeaf :=_aaa .TraceToDirectObject (_ffccf ).(*_aaa .PdfObjectName );if !_aaeaf {_fe .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bada .Subtype =_adgg ;};if _eacg :=_aabc .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_eacg !=nil {_bada .Colorants =_eacg ;};if _aafe :=_aabc .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_aafe !=nil {_bada .Process =_aafe ;};if _dedge :=_aabc .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dedge !=nil {_bada .MixingHints =_dedge ;};return _bada ,nil ;};func _eabb (_afefe *PdfPage )map[_aaa .PdfObjectName ]_aaa .PdfObject {_acbf :=make (map[_aaa .PdfObjectName ]_aaa .PdfObject );if _afefe .Resources ==nil {return _acbf ;};if _afefe .Resources .Font !=nil {if _ddae ,_aad :=_aaa .GetDict (_afefe .Resources .Font );_aad {for _ ,_dcdd :=range _ddae .Keys (){_acbf [_dcdd ]=_ddae .Get (_dcdd );};};};if _afefe .Resources .ExtGState !=nil {if _edfb ,_eda :=_aaa .GetDict (_afefe .Resources .ExtGState );_eda {for _ ,_efda :=range _edfb .Keys (){_acbf [_efda ]=_edfb .Get (_efda );};};};if _afefe .Resources .XObject !=nil {if _bcde ,_abac :=_aaa .GetDict (_afefe .Resources .XObject );_abac {for _ ,_ddd :=range _bcde .Keys (){_acbf [_ddd ]=_bcde .Get (_ddd );};};};if _afefe .Resources .Pattern !=nil {if _dcc ,_effd :=_aaa .GetDict (_afefe .Resources .Pattern );_effd {for _ ,_fcbe :=range _dcc .Keys (){_acbf [_fcbe ]=_dcc .Get (_fcbe );};};};if _afefe .Resources .Shading !=nil {if _agc ,_fgbgg :=_aaa .GetDict (_afefe .Resources .Shading );_fgbgg {for _ ,_befd :=range _agc .Keys (){_acbf [_befd ]=_agc .Get (_befd );};};};if _afefe .Resources .ProcSet !=nil {if _ebfg ,_eced :=_aaa .GetDict (_afefe .Resources .ProcSet );_eced {for _ ,_afdf :=range _ebfg .Keys (){_acbf [_afdf ]=_ebfg .Get (_afdf );};};};if _afefe .Resources .Properties !=nil {if _dgeeb ,_fecb :=_aaa .GetDict (_afefe .Resources .Properties );_fecb {for _ ,_fgfb :=range _dgeeb .Keys (){_acbf [_fgfb ]=_dgeeb .Get (_fgfb );};};};return _acbf ;};

// L returns the value of the L component of the color.
func (_ccbga *PdfColorLab )L ()float64 {return _ccbga [0]};func (_edbe *DSS )generateHashMaps ()error {_agge ,_bbcf :=_edbe .generateHashMap (_edbe .Certs );if _bbcf !=nil {return _bbcf ;};_adbd ,_bbcf :=_edbe .generateHashMap (_edbe .OCSPs );if _bbcf !=nil {return _bbcf ;};_fggc ,_bbcf :=_edbe .generateHashMap (_edbe .CRLs );if _bbcf !=nil {return _bbcf ;};_edbe ._agegc =_agge ;_edbe ._cdgd =_adbd ;_edbe ._gbcce =_fggc ;return nil ;};

// String returns a string that describes `base`.
func (_ecdg fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ecdg .coreString ());};func (_ffce *PdfAnnotationMarkup )appendToPdfDictionary (_eeeb *_aaa .PdfObjectDictionary ){_eeeb .SetIfNotNil ("\u0054",_ffce .T );if _ffce .Popup !=nil {_eeeb .Set ("\u0050\u006f\u0070u\u0070",_ffce .Popup .ToPdfObject ());};_eeeb .SetIfNotNil ("\u0043\u0041",_ffce .CA );_eeeb .SetIfNotNil ("\u0052\u0043",_ffce .RC );_eeeb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffce .CreationDate );_eeeb .SetIfNotNil ("\u0049\u0052\u0054",_ffce .IRT );_eeeb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ffce .Subj );_eeeb .SetIfNotNil ("\u0052\u0054",_ffce .RT );_eeeb .SetIfNotNil ("\u0049\u0054",_ffce .IT );_eeeb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ffce .ExData );};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_egfca *PdfFieldButton )IsPush ()bool {return _egfca .GetType ()==ButtonTypePush };

// ToPdfObject implements interface PdfModel.
func (_gad *PdfActionResetForm )ToPdfObject ()_aaa .PdfObject {_gad .PdfAction .ToPdfObject ();_eedb :=_gad ._afe ;_fea :=_eedb .PdfObject .(*_aaa .PdfObjectDictionary );_fea .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeResetForm )));_fea .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gad .Fields );_fea .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gad .Flags );return _eedb ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _aaa .StreamEncoder ;Intent _aaa .PdfObject ;ImageMask _aaa .PdfObject ;Mask _aaa .PdfObject ;Matte _aaa .PdfObject ;Decode _aaa .PdfObject ;Interpolate _aaa .PdfObject ;Alternatives _aaa .PdfObject ;SMask _aaa .PdfObject ;SMaskInData _aaa .PdfObject ;Name _aaa .PdfObject ;StructParent _aaa .PdfObject ;ID _aaa .PdfObject ;OPI _aaa .PdfObject ;Metadata _aaa .PdfObject ;OC _aaa .PdfObject ;Stream []byte ;_eaea *_aaa .PdfObjectStream ;};

// M returns the value of the magenta component of the color.
func (_gbga *PdfColorDeviceCMYK )M ()float64 {return _gbga [1]};

// ToPdfObject implements interface PdfModel.
func (_gaeg *PdfAnnotationRichMedia )ToPdfObject ()_aaa .PdfObject {_gaeg .PdfAnnotation .ToPdfObject ();_ceec :=_gaeg ._fdd ;_baab :=_ceec .PdfObject .(*_aaa .PdfObjectDictionary );_baab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_baab .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gaeg .RichMediaSettings );_baab .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gaeg .RichMediaContent );return _ceec ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gecaf :=&PdfOutlineItem {_abeef :_aaa .MakeIndirectObject (_aaa .MakeDict ())};_gecaf ._egceg =_gecaf ;return _gecaf ;};func _abce (_abceg _aaa .PdfObject )(*PdfBorderStyle ,error ){_bccg :=&PdfBorderStyle {};_bccg ._adda =_abceg ;var _eagd *_aaa .PdfObjectDictionary ;_abceg =_aaa .TraceToDirectObject (_abceg );_eagd ,_ecdb :=_abceg .(*_aaa .PdfObjectDictionary );if !_ecdb {return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _bagg :=_eagd .Get ("\u0054\u0079\u0070\u0065");_bagg !=nil {_fce ,_ffa :=_bagg .(*_aaa .PdfObjectName );if !_ffa {_fe .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bagg );}else {if *_fce !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fe .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_fce );};};};if _bfcf :=_eagd .Get ("\u0057");_bfcf !=nil {_daaef ,_dbbdb :=_aaa .GetNumberAsFloat (_bfcf );if _dbbdb !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_dbbdb );return nil ,_dbbdb ;};_bccg .W =&_daaef ;};if _ebdeb :=_eagd .Get ("\u0053");_ebdeb !=nil {_gdcec ,_fcdab :=_ebdeb .(*_aaa .PdfObjectName );if !_fcdab {return nil ,_ee .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _feeg BorderStyle ;switch *_gdcec {case "\u0053":_feeg =BorderStyleSolid ;case "\u0044":_feeg =BorderStyleDashed ;case "\u0042":_feeg =BorderStyleBeveled ;case "\u0049":_feeg =BorderStyleInset ;case "\u0055":_feeg =BorderStyleUnderline ;default:_fe .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gdcec );return nil ,_ee .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_bccg .S =&_feeg ;};if _gddc :=_eagd .Get ("\u0044");_gddc !=nil {_afef ,_addac :=_gddc .(*_aaa .PdfObjectArray );if !_addac {_fe .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_gddc );return nil ,_ee .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_cdfde ,_gdaa :=_afef .ToIntegerArray ();if _gdaa !=nil {_fe .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_gdaa );return nil ,_gdaa ;};_bccg .D =&_cdfde ;};return _bccg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bfab *PdfAnnotationScreen )ToPdfObject ()_aaa .PdfObject {_bfab .PdfAnnotation .ToPdfObject ();_gabf :=_bfab ._fdd ;_aba :=_gabf .PdfObject .(*_aaa .PdfObjectDictionary );_aba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_aba .SetIfNotNil ("\u0054",_bfab .T );_aba .SetIfNotNil ("\u004d\u004b",_bfab .MK );_aba .SetIfNotNil ("\u0041",_bfab .A );_aba .SetIfNotNil ("\u0041\u0041",_bfab .AA );return _gabf ;};func _faaad (_dded _aaa .PdfObject )(*PdfPattern ,error ){_dccc :=&PdfPattern {};var _abbfdb *_aaa .PdfObjectDictionary ;if _eebag ,_eacbb :=_aaa .GetIndirect (_dded );_eacbb {_dccc ._eabbc =_eebag ;_daaab ,_ceea :=_eebag .PdfObject .(*_aaa .PdfObjectDictionary );if !_ceea {_fe .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_eebag .PdfObject );return nil ,_aaa .ErrTypeError ;};_abbfdb =_daaab ;}else if _fegdc ,_gaeb :=_aaa .GetStream (_dded );_gaeb {_dccc ._eabbc =_fegdc ;_abbfdb =_fegdc .PdfObjectDictionary ;}else {_fe .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dded );return nil ,_aaa .ErrTypeError ;};_aacdc :=_abbfdb .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _aacdc ==nil {_fe .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_cffba ,_cbbe :=_aacdc .(*_aaa .PdfObjectInteger );if !_cbbe {_fe .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aacdc );return nil ,_aaa .ErrTypeError ;};if *_cffba !=1&&*_cffba !=2{_fe .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_cffba );return nil ,_aaa .ErrRangeError ;};_dccc .PatternType =int64 (*_cffba );switch *_cffba {case 1:_fabab ,_bedg :=_abcc (_abbfdb );if _bedg !=nil {return nil ,_bedg ;};_fabab .PdfPattern =_dccc ;_dccc ._dgbgf =_fabab ;return _dccc ,nil ;case 2:_dcfcb ,_fgbed :=_cgdaf (_abbfdb );if _fgbed !=nil {return nil ,_fgbed ;};_dcfcb .PdfPattern =_dccc ;_dccc ._dgbgf =_dcfcb ;return _dccc ,nil ;};return nil ,_ee .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _aaa .PdfObject ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_febb *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afda ,_ccfg :=_aaa .GetNumbersAsFloat (objects );if _ccfg !=nil {return nil ,_ccfg ;};return _febb .ColorFromFloats (_afda );};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bgfg *PdfColorspaceCalRGB )ToPdfObject ()_aaa .PdfObject {_agde :=&_aaa .PdfObjectArray {};_agde .Append (_aaa .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cbdg :=_aaa .MakeDict ();if _bgfg .WhitePoint !=nil {_fedb :=_aaa .MakeArray (_aaa .MakeFloat (_bgfg .WhitePoint [0]),_aaa .MakeFloat (_bgfg .WhitePoint [1]),_aaa .MakeFloat (_bgfg .WhitePoint [2]));_cbdg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fedb );}else {_fe .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bgfg .BlackPoint !=nil {_aeca :=_aaa .MakeArray (_aaa .MakeFloat (_bgfg .BlackPoint [0]),_aaa .MakeFloat (_bgfg .BlackPoint [1]),_aaa .MakeFloat (_bgfg .BlackPoint [2]));_cbdg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aeca );};if _bgfg .Gamma !=nil {_dgcf :=_aaa .MakeArray (_aaa .MakeFloat (_bgfg .Gamma [0]),_aaa .MakeFloat (_bgfg .Gamma [1]),_aaa .MakeFloat (_bgfg .Gamma [2]));_cbdg .Set ("\u0047\u0061\u006dm\u0061",_dgcf );};if _bgfg .Matrix !=nil {_eadb :=_aaa .MakeArray (_aaa .MakeFloat (_bgfg .Matrix [0]),_aaa .MakeFloat (_bgfg .Matrix [1]),_aaa .MakeFloat (_bgfg .Matrix [2]),_aaa .MakeFloat (_bgfg .Matrix [3]),_aaa .MakeFloat (_bgfg .Matrix [4]),_aaa .MakeFloat (_bgfg .Matrix [5]),_aaa .MakeFloat (_bgfg .Matrix [6]),_aaa .MakeFloat (_bgfg .Matrix [7]),_aaa .MakeFloat (_bgfg .Matrix [8]));_cbdg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eadb );};_agde .Append (_cbdg );if _bgfg ._bddbe !=nil {_bgfg ._bddbe .PdfObject =_agde ;return _bgfg ._bddbe ;};return _agde ;};type pdfSignDictionary struct{*_aaa .PdfObjectDictionary ;_edcdg *SignatureHandler ;_cdcdg *PdfSignature ;_abda int64 ;_eafd int ;_dfaa int ;_fgcec int ;_eacag int ;};

// MergePageWith appends page content to source Pdf file page content.
func (_ebaa *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ccde :=pageNum -1;var _ecge *PdfPage ;for _fccbc ,_fcagg :=range _ebaa ._ebdea {if _fccbc ==_ccde {_ecge =_fcagg ;};};if _ecge ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _ecge ._beecaf !=nil &&_ecge ._beecaf .GetParser ()==_ebaa ._efcg ._gcee {_ecge =_ecge .Duplicate ();_ebaa ._ebdea [_ccde ]=_ecge ;};page =page .Duplicate ();_fbacb (page );_dbed :=_eabb (_ecge );_fafb :=_eabb (page );_faad :=make (map[_aaa .PdfObjectName ]_aaa .PdfObjectName );for _bced :=range _fafb {if _ ,_abff :=_dbed [_bced ];_abff {for _ccdf :=1;true ;_ccdf ++{_gefe :=_aaa .PdfObjectName (string (_bced )+_ge .Itoa (_ccdf ));if _ ,_becc :=_dbed [_gefe ];!_becc {_faad [_bced ]=_gefe ;break ;};};};};_dfda ,_cdbb :=page .GetContentStreams ();if _cdbb !=nil {return _cdbb ;};_gcca ,_cdbb :=_ecge .GetContentStreams ();if _cdbb !=nil {return _cdbb ;};for _ggce ,_bacd :=range _dfda {for _decd ,_cebb :=range _faad {_bacd =_af .Replace (_bacd ,"\u002f"+string (_decd ),"\u002f"+string (_cebb ),-1);};_dfda [_ggce ]=_bacd ;};_gcca =append (_gcca ,_dfda ...);if _eeaa :=_ecge .SetContentStreams (_gcca ,_aaa .NewFlateEncoder ());_eeaa !=nil {return _eeaa ;};_ecge ._edebg =append (_ecge ._edebg ,page ._edebg ...);if _ecge .Resources ==nil {_ecge .Resources =NewPdfPageResources ();};if page .Resources !=nil {_ecge .Resources .Font =_ebaa .mergeResources (_ecge .Resources .Font ,page .Resources .Font ,_faad );_ecge .Resources .XObject =_ebaa .mergeResources (_ecge .Resources .XObject ,page .Resources .XObject ,_faad );_ecge .Resources .Properties =_ebaa .mergeResources (_ecge .Resources .Properties ,page .Resources .Properties ,_faad );if _ecge .Resources .ProcSet ==nil {_ecge .Resources .ProcSet =page .Resources .ProcSet ;};_ecge .Resources .Shading =_ebaa .mergeResources (_ecge .Resources .Shading ,page .Resources .Shading ,_faad );_ecge .Resources .ExtGState =_ebaa .mergeResources (_ecge .Resources .ExtGState ,page .Resources .ExtGState ,_faad );};_ddda ,_cdbb :=_ecge .GetMediaBox ();if _cdbb !=nil {return _cdbb ;};_bcbb ,_cdbb :=page .GetMediaBox ();if _cdbb !=nil {return _cdbb ;};var _cfea bool ;if _ddda .Llx > _bcbb .Llx {_ddda .Llx =_bcbb .Llx ;_cfea =true ;};if _ddda .Lly > _bcbb .Lly {_ddda .Lly =_bcbb .Lly ;_cfea =true ;};if _ddda .Urx < _bcbb .Urx {_ddda .Urx =_bcbb .Urx ;_cfea =true ;};if _ddda .Ury < _bcbb .Ury {_ddda .Ury =_bcbb .Ury ;_cfea =true ;};if _cfea {_ecge .MediaBox =_ddda ;};return nil ;};func (_ebd *PdfReader )newPdfAnnotationSquareFromDict (_dfd *_aaa .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gaef :=PdfAnnotationSquare {};_bege ,_bcf :=_ebd .newPdfAnnotationMarkupFromDict (_dfd );if _bcf !=nil {return nil ,_bcf ;};_gaef .PdfAnnotationMarkup =_bege ;_gaef .BS =_dfd .Get ("\u0042\u0053");_gaef .IC =_dfd .Get ("\u0049\u0043");_gaef .BE =_dfd .Get ("\u0042\u0045");_gaef .RD =_dfd .Get ("\u0052\u0044");return &_gaef ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ebga :=NewPdfAnnotation ();_afa :=&PdfAnnotationWidget {};_afa .PdfAnnotation =_ebga ;_ebga .SetContext (_afa );return _afa ;};

// SetContext set the sub annotation (context).
func (_eadef *PdfShading )SetContext (ctx PdfModel ){_eadef ._bgcdf =ctx };

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_dgbe *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bfed :=_dgbe .actualFont ();if _bfed ==nil {_fe .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dgbe ._bbdc );return _gf .CharMetrics {},false ;};if _bagb ,_cabe :=_bfed .GetRuneMetrics (r );_cabe {return _bagb ,true ;};if _gdfd ,_gdgge :=_dgbe .GetFontDescriptor ();_gdgge ==nil &&_gdfd !=nil {return _gf .CharMetrics {Wx :_gdfd ._bffg },true ;};_fe .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgbe );return _gf .CharMetrics {},false ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_aaaff *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aaaff .AlternateSpace ==nil {return nil ,_ee .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _aaaff .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_deffb *PdfAnnotationWatermark )ToPdfObject ()_aaa .PdfObject {_deffb .PdfAnnotation .ToPdfObject ();_baca :=_deffb ._fdd ;_fgbg :=_baca .PdfObject .(*_aaa .PdfObjectDictionary );_fgbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_fgbg .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_deffb .FixedPrint );return _baca ;};

// B returns the value of the B component of the color.
func (_fbca *PdfColorCalRGB )B ()float64 {return _fbca [1]};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _aaa .PdfObject ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func _daddf (_fcfadb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ddfd ,_dcbc :=_aaa .GetDict (_fcfadb .AP );if !_dcbc {return nil ,nil ,_ee .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _ddfd ==nil {return nil ,nil ,nil ;};_dgbga ,_dcbc :=_aaa .GetArray (_fcfadb .Rect );if !_dcbc ||_dgbga .Len ()!=4{return nil ,nil ,_ee .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ecfg ,_gcgg :=NewPdfRectangle (*_dgbga );if _gcgg !=nil {return nil ,nil ,_gcgg ;};_fedcc :=_aaa .TraceToDirectObject (_ddfd .Get ("\u004e"));switch _fefd :=_fedcc .(type ){case *_aaa .PdfObjectStream :_ecccca :=_fefd ;_gdebg ,_ggge :=NewXObjectFormFromStream (_ecccca );return _gdebg ,_ecfg ,_ggge ;case *_aaa .PdfObjectDictionary :_edff :=_fefd ;_ebfdc ,_ddcage :=_aaa .GetName (_fcfadb .AS );if !_ddcage {return nil ,nil ,nil ;};if _edff .Get (*_ebfdc )==nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_gcaa ,_ddcage :=_aaa .GetStream (_edff .Get (*_ebfdc ));if !_ddcage {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ebfdc );return nil ,nil ,_ee .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fcgf ,_aeeba :=NewXObjectFormFromStream (_gcaa );return _fcgf ,_ecfg ,_aeeba ;};_fe .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fedcc );return nil ,nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_eedbc :=PdfColorLab {l ,a ,b };return &_eedbc };

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_egfac :_aaa .MakeIndirectObject (_aaa .MakeDict ()),VRI :map[string ]*VRI {}};};type fontCommon struct{_edee string ;_fbeb string ;_eabbf string ;_bdae _aaa .PdfObject ;_fgcf *_eed .CMap ;_ebcac *PdfFontDescriptor ;_cbfg int64 ;};

// ToPdfObject implements interface PdfModel.
func (_fcgb *PdfActionJavaScript )ToPdfObject ()_aaa .PdfObject {_fcgb .PdfAction .ToPdfObject ();_gae :=_fcgb ._afe ;_dgdf :=_gae .PdfObject .(*_aaa .PdfObjectDictionary );_dgdf .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeJavaScript )));_dgdf .SetIfNotNil ("\u004a\u0053",_fcgb .JS );return _gae ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ac PdfModel ;Type _aaa .PdfObject ;S _aaa .PdfObject ;Next _aaa .PdfObject ;_afe *_aaa .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abaad *PdfShading )ToPdfObject ()_aaa .PdfObject {_deca :=_abaad ._cfade ;_ddcd ,_afec :=_abaad .getShadingDict ();if _afec !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _abaad .ShadingType !=nil {_ddcd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_abaad .ShadingType );};if _abaad .ColorSpace !=nil {_ddcd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_abaad .ColorSpace .ToPdfObject ());};if _abaad .Background !=nil {_ddcd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_abaad .Background );};if _abaad .BBox !=nil {_ddcd .Set ("\u0042\u0042\u006f\u0078",_abaad .BBox .ToPdfObject ());};if _abaad .AntiAlias !=nil {_ddcd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_abaad .AntiAlias );};return _deca ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_dgd :=NewPdfAction ();_bda :=&PdfActionMovie {};_bda .PdfAction =_dgd ;_dgd .SetContext (_bda );return _bda ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gaegc *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dccb ,_efcef :=_aaa .GetNumbersAsFloat (objects );if _efcef !=nil {return nil ,_efcef ;};return _gaegc .ColorFromFloats (_dccb );};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gfgf *PdfOutlineItem )ToPdfObject ()_aaa .PdfObject {_dabc :=_gfgf ._abeef ;_cfcg :=_dabc .PdfObject .(*_aaa .PdfObjectDictionary );_cfcg .Set ("\u0054\u0069\u0074l\u0065",_gfgf .Title );if _gfgf .A !=nil {_cfcg .Set ("\u0041",_gfgf .A );};if _eggce :=_cfcg .Get ("\u0053\u0045");_eggce !=nil {_cfcg .Remove ("\u0053\u0045");};if _gfgf .C !=nil {_cfcg .Set ("\u0043",_gfgf .C );};if _gfgf .Dest !=nil {_cfcg .Set ("\u0044\u0065\u0073\u0074",_gfgf .Dest );};if _gfgf .F !=nil {_cfcg .Set ("\u0046",_gfgf .F );};if _gfgf .Count !=nil {_cfcg .Set ("\u0043\u006f\u0075n\u0074",_aaa .MakeInteger (*_gfgf .Count ));};if _gfgf .Next !=nil {_cfcg .Set ("\u004e\u0065\u0078\u0074",_gfgf .Next .ToPdfObject ());};if _gfgf .First !=nil {_cfcg .Set ("\u0046\u0069\u0072s\u0074",_gfgf .First .ToPdfObject ());};if _gfgf .Prev !=nil {_cfcg .Set ("\u0050\u0072\u0065\u0076",_gfgf .Prev .GetContext ().GetContainingPdfObject ());};if _gfgf .Last !=nil {_cfcg .Set ("\u004c\u0061\u0073\u0074",_gfgf .Last .GetContext ().GetContainingPdfObject ());};if _gfgf .Parent !=nil {_cfcg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfgf .Parent .GetContext ().GetContainingPdfObject ());};return _dabc ;};func (_ddca *PdfReader )newPdfAnnotationFileAttachmentFromDict (_cga *_aaa .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gfae :=PdfAnnotationFileAttachment {};_ffb ,_fga :=_ddca .newPdfAnnotationMarkupFromDict (_cga );if _fga !=nil {return nil ,_fga ;};_gfae .PdfAnnotationMarkup =_ffb ;_gfae .FS =_cga .Get ("\u0046\u0053");_gfae .Name =_cga .Get ("\u004e\u0061\u006d\u0065");return &_gfae ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _aaa .PdfObject )(*PdfFilespec ,error ){_dcde :=&PdfFilespec {};var _faaa *_aaa .PdfObjectDictionary ;if _ccfc ,_ebgee :=_aaa .GetIndirect (obj );_ebgee {_dcde ._affb =_ccfc ;_bbbb ,_ffgfe :=_aaa .GetDict (_ccfc .PdfObject );if !_ffgfe {_fe .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aaa .ErrTypeError ;};_faaa =_bbbb ;}else if _cgedg ,_abcd :=_aaa .GetDict (obj );_abcd {_dcde ._affb =_cgedg ;_faaa =_cgedg ;}else {_fe .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_aaa .ErrTypeError ;};if _faaa ==nil {_fe .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ee .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cagca :=_faaa .Get ("\u0054\u0079\u0070\u0065");_cagca !=nil {_dabd ,_gbaag :=_cagca .(*_aaa .PdfObjectName );if !_gbaag {_fe .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cagca );}else {if *_dabd !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fe .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_dabd );};};};if _eeac :=_faaa .Get ("\u0046\u0053");_eeac !=nil {_dcde .FS =_eeac ;};if _cgde :=_faaa .Get ("\u0046");_cgde !=nil {_dcde .F =_cgde ;};if _fdfb :=_faaa .Get ("\u0055\u0046");_fdfb !=nil {_dcde .UF =_fdfb ;};if _edad :=_faaa .Get ("\u0044\u004f\u0053");_edad !=nil {_dcde .DOS =_edad ;};if _fcad :=_faaa .Get ("\u004d\u0061\u0063");_fcad !=nil {_dcde .Mac =_fcad ;};if _degd :=_faaa .Get ("\u0055\u006e\u0069\u0078");_degd !=nil {_dcde .Unix =_degd ;};if _eeaab :=_faaa .Get ("\u0049\u0044");_eeaab !=nil {_dcde .ID =_eeaab ;};if _beadf :=_faaa .Get ("\u0056");_beadf !=nil {_dcde .V =_beadf ;};if _ffece :=_faaa .Get ("\u0045\u0046");_ffece !=nil {_dcde .EF =_ffece ;};if _ffeca :=_faaa .Get ("\u0052\u0046");_ffeca !=nil {_dcde .RF =_ffeca ;};if _defef :=_faaa .Get ("\u0044\u0065\u0073\u0063");_defef !=nil {_dcde .Desc =_defef ;};if _gagg :=_faaa .Get ("\u0043\u0049");_gagg !=nil {_dcde .CI =_gagg ;};return _dcde ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_acfbe :=&PdfSignature {Type :_aaa .MakeName ("\u0053\u0069\u0067"),Handler :handler };_aceff :=&pdfSignDictionary {PdfObjectDictionary :_aaa .MakeDict (),_edcdg :&handler ,_cdcdg :_acfbe };_acfbe ._ddbdc =_aaa .MakeIndirectObject (_aceff );return _acfbe ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aaa .PdfObject ;};func (_cgdb *PdfReader )newPdfAnnotationPolygonFromDict (_geef *_aaa .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_ecf :=PdfAnnotationPolygon {};_geea ,_fca :=_cgdb .newPdfAnnotationMarkupFromDict (_geef );if _fca !=nil {return nil ,_fca ;};_ecf .PdfAnnotationMarkup =_geea ;_ecf .Vertices =_geef .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ecf .LE =_geef .Get ("\u004c\u0045");_ecf .BS =_geef .Get ("\u0042\u0053");_ecf .IC =_geef .Get ("\u0049\u0043");_ecf .BE =_geef .Get ("\u0042\u0045");_ecf .IT =_geef .Get ("\u0049\u0054");_ecf .Measure =_geef .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ecf ,nil ;};

// String returns a string that describes `font`.
func (_caeg *PdfFont )String ()string {_gccc :="";if _caeg ._bbdc .Encoder ()!=nil {_gccc =_caeg ._bbdc .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_caeg ._bbdc ,_caeg .baseFields ().coreString (),_gccc );};

// ToPdfObject implements interface PdfModel.
func (_ggff *PdfAnnotationProjection )ToPdfObject ()_aaa .PdfObject {_ggff .PdfAnnotation .ToPdfObject ();_dfde :=_ggff ._fdd ;_gcf :=_dfde .PdfObject .(*_aaa .PdfObjectDictionary );_ggff .PdfAnnotationMarkup .appendToPdfDictionary (_gcf );return _dfde ;};

// RemovePage removes a page by number.
func (_dccg *PdfAppender )RemovePage (pageNum int ){_aedf :=pageNum -1;_dccg ._ebdea =append (_dccg ._ebdea [0:_aedf ],_dccg ._ebdea [pageNum :]...);};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_dadcf *PdfFont )ToPdfObject ()_aaa .PdfObject {if _dadcf ._bbdc ==nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _aaa .MakeNull ();};return _dadcf ._bbdc .ToPdfObject ();};func (_dgdb *PdfReader )newPdfAnnotationHighlightFromDict (_bged *_aaa .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fbdb :=PdfAnnotationHighlight {};_bbf ,_feaeb :=_dgdb .newPdfAnnotationMarkupFromDict (_bged );if _feaeb !=nil {return nil ,_feaeb ;};_fbdb .PdfAnnotationMarkup =_bbf ;_fbdb .QuadPoints =_bged .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fbdb ,nil ;};func (_ddfb *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _aaa .PdfObjectName ;};func (_gdgg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_acgef *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgb :=vals [0];if _afgb < 0.0||_afgb > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edcb :=vals [1];if _edcb < 0.0||_edcb > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgdbb :=vals [2];if _dgdbb < 0.0||_dgdbb > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbdbd :=vals [3];if _cbdbd < 0.0||_cbdbd > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgcf :=NewPdfColorDeviceCMYK (_afgb ,_edcb ,_dgdbb ,_cbdbd );return _cgcf ,nil ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_gdfg *PdfFieldButton )SetType (btype ButtonType ){_bgeec :=uint32 (0);if _gdfg .Ff !=nil {_bgeec =uint32 (*_gdfg .Ff );};switch btype {case ButtonTypePush :_bgeec |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_bgeec |=FieldFlagRadio .Mask ();};_gdfg .Ff =_aaa .MakeInteger (int64 (_bgeec ));};

// Encoder returns the font's text encoder.
func (_deage pdfCIDFontType2 )Encoder ()_aa .TextEncoder {return _deage ._agabc };

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _aaa .PdfObject ;PreserveRB _aaa .PdfObject ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_aaa .PdfObjectArray ;ExtGState _aaa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_debd *PdfActionMovie )ToPdfObject ()_aaa .PdfObject {_debd .PdfAction .ToPdfObject ();_bec :=_debd ._afe ;_egc :=_bec .PdfObject .(*_aaa .PdfObjectDictionary );_egc .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeMovie )));_egc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_debd .Annotation );_egc .SetIfNotNil ("\u0054",_debd .T );_egc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_debd .Operation );return _bec ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dadcfc *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dadcfc ._dgbgf .(*PdfTilingPattern );};

// ToPdfObject implements interface PdfModel.
func (_fdbg *PdfAnnotationFileAttachment )ToPdfObject ()_aaa .PdfObject {_fdbg .PdfAnnotation .ToPdfObject ();_dbbd :=_fdbg ._fdd ;_bfcb :=_dbbd .PdfObject .(*_aaa .PdfObjectDictionary );_fdbg .PdfAnnotationMarkup .appendToPdfDictionary (_bfcb );_bfcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_bfcb .SetIfNotNil ("\u0046\u0053",_fdbg .FS );_bfcb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fdbg .Name );return _dbbd ;};

// ToPdfObject implements interface PdfModel.
func (_acee *PdfAnnotationTrapNet )ToPdfObject ()_aaa .PdfObject {_acee .PdfAnnotation .ToPdfObject ();_ebc :=_acee ._fdd ;_gace :=_ebc .PdfObject .(*_aaa .PdfObjectDictionary );_gace .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _ebc ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_effdc *LTV )EnableByName (name string ,extraCerts []*_be .Certificate )error {_agad :=_effdc ._gbedb ._efcg .AcroForm ;for _ ,_gdcc :=range _agad .AllFields (){_cgdfb ,_ :=_gdcc .GetContext ().(*PdfFieldSignature );if _cgdfb ==nil {continue ;};if _bdde :=_cgdfb .PartialName ();_bdde !=name {continue ;};return _effdc .Enable (_cgdfb .V ,extraCerts );};return nil ;};func _bcdee (_fdga _aaa .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_ddad :=NewPdfColorspaceSpecialIndexed ();if _gbed ,_gdcb :=_fdga .(*_aaa .PdfIndirectObject );_gdcb {_ddad ._ceeb =_gbed ;};_fdga =_aaa .TraceToDirectObject (_fdga );_cfaf ,_gfce :=_fdga .(*_aaa .PdfObjectArray );if !_gfce {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfaf .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fdga =_cfaf .Get (0);_fadc ,_gfce :=_fdga .(*_aaa .PdfObjectName );if !_gfce {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_fadc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_fdga =_cfaf .Get (1);_eecaa ,_bcfga :=DetermineColorspaceNameFromPdfObject (_fdga );if _bcfga !=nil {return nil ,_bcfga ;};if _eecaa =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_eecaa =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fe .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_eecaa );return nil ,_cggb ;};_ggca ,_bcfga :=NewPdfColorspaceFromPdfObject (_fdga );if _bcfga !=nil {return nil ,_bcfga ;};_ddad .Base =_ggca ;_fdga =_cfaf .Get (2);_bggf ,_bcfga :=_aaa .GetNumberAsInt64 (_fdga );if _bcfga !=nil {return nil ,_bcfga ;};if _bggf > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_ddad .HiVal =int (_bggf );_fdga =_cfaf .Get (3);_ddad .Lookup =_fdga ;_fdga =_aaa .TraceToDirectObject (_fdga );var _ddbf []byte ;if _eabc ,_afdde :=_fdga .(*_aaa .PdfObjectString );_afdde {_ddbf =_eabc .Bytes ();_fe .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ddbf );}else if _acgc ,_gaga :=_fdga .(*_aaa .PdfObjectStream );_gaga {_fe .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_fdga .String ());_fe .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_acgc .Stream ),_acgc .Stream );_accg ,_agfed :=_aaa .DecodeStream (_acgc );if _agfed !=nil {return nil ,_agfed ;};_fe .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_accg ),_accg );_ddbf =_accg ;}else {_fe .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fdga );return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ddbf )< _ddad .Base .GetNumComponents ()*(_ddad .HiVal +1){_fe .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_fe .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ddbf ),_ddad .Base .GetNumComponents (),_ddad .HiVal );}else {_ddbf =_ddbf [:_ddad .Base .GetNumComponents ()*(_ddad .HiVal +1)];};_ddad ._efff =_ddbf ;return _ddad ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_adeg *PdfOutline )ToPdfObject ()_aaa .PdfObject {_edfaeb :=_adeg ._cdfac ;_aefeg :=_edfaeb .PdfObject .(*_aaa .PdfObjectDictionary );_aefeg .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _adeg .First !=nil {_aefeg .Set ("\u0046\u0069\u0072s\u0074",_adeg .First .ToPdfObject ());};if _adeg .Last !=nil {_aefeg .Set ("\u004c\u0061\u0073\u0074",_adeg .Last .GetContext ().GetContainingPdfObject ());};if _adeg .Parent !=nil {_aefeg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_adeg .Parent .GetContext ().GetContainingPdfObject ());};if _adeg .Count !=nil {_aefeg .Set ("\u0043\u006f\u0075n\u0074",_aaa .MakeInteger (*_adeg .Count ));};return _edfaeb ;};

// ToPdfObject implements interface PdfModel.
func (_ggf *PdfActionSound )ToPdfObject ()_aaa .PdfObject {_ggf .PdfAction .ToPdfObject ();_cdc :=_ggf ._afe ;_fegb :=_cdc .PdfObject .(*_aaa .PdfObjectDictionary );_fegb .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeSound )));_fegb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ggf .Sound );_fegb .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ggf .Volume );_fegb .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ggf .Synchronous );_fegb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ggf .Repeat );_fegb .SetIfNotNil ("\u004d\u0069\u0078",_ggf .Mix );return _cdc ;};func (_eadbb *PdfReader )resolveReference (_ccecc *_aaa .PdfObjectReference )(_aaa .PdfObject ,bool ,error ){_bbebf ,_agbca :=_eadbb ._gcee .ObjCache [int (_ccecc .ObjectNumber )];if !_agbca {_fe .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_ccecc );_gfgfac ,_ddeac :=_eadbb ._gcee .LookupByReference (*_ccecc );if _ddeac !=nil {return nil ,false ,_ddeac ;};_eadbb ._gcee .ObjCache [int (_ccecc .ObjectNumber )]=_gfgfac ;return _gfgfac ,false ,nil ;};return _bbebf ,true ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_fcf :=NewPdfAnnotation ();_dbdd :=&PdfAnnotationSquare {};_dbdd .PdfAnnotation =_fcf ;_dbdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcf .SetContext (_dbdd );return _dbdd ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_affc :=PdfColorDeviceGray (grayVal );return &_affc ;};func (_fbecg *PdfPage )setContainer (_eacfe *_aaa .PdfIndirectObject ){_eacfe .PdfObject =_fbecg ._afaag ;_fbecg ._beecaf =_eacfe ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_aaa .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_bbaec *PdfReader )PageFromIndirectObject (ind *_aaa .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_bbaec .PageList )!=len (_bbaec ._cfdf ){return nil ,0,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _dcbgd ,_gcaea :=range _bbaec ._cfdf {if _gcaea ==ind {return _bbaec .PageList [_dcbgd ],_dcbgd +1,nil ;};};return nil ,0,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// SetPatternByName sets a pattern resource specified by keyName.
func (_agbad *PdfPageResources )SetPatternByName (keyName _aaa .PdfObjectName ,pattern _aaa .PdfObject )error {if _agbad .Pattern ==nil {_agbad .Pattern =_aaa .MakeDict ();};_dbbce ,_cdbg :=_agbad .Pattern .(*_aaa .PdfObjectDictionary );if !_cdbg {return _aaa .ErrTypeError ;};_dbbce .Set (keyName ,pattern );return nil ;};

// Y returns the value of the yellow component of the color.
func (_cfd *PdfColorDeviceCMYK )Y ()float64 {return _cfd [2]};func (_ggdcb fontCommon )fontFlags ()int {if _ggdcb ._ebcac ==nil {return 0;};return _ggdcb ._ebcac ._gecbf ;};

// Add appends a top level outline item to the outline.
func (_bfabe *Outline )Add (item *OutlineItem ){_bfabe .Entries =append (_bfabe .Entries ,item )};func (_acdg *PdfWriter )updateObjectNumbers (){_bdbaa :=_acdg .ObjNumOffset ;_bgebg :=0;for _ ,_cadbd :=range _acdg ._dbbec {_ecadfe :=int64 (_bgebg +1+_bdbaa );_eaaga :=true ;if _acdg ._bbfdc {if _aeddg ,_dfceg :=_acdg ._babab [_cadbd ];_dfceg {_ecadfe =_aeddg ;_eaaga =false ;};};switch _dacga :=_cadbd .(type ){case *_aaa .PdfIndirectObject :_dacga .ObjectNumber =_ecadfe ;_dacga .GenerationNumber =0;case *_aaa .PdfObjectStream :_dacga .ObjectNumber =_ecadfe ;_dacga .GenerationNumber =0;case *_aaa .PdfObjectStreams :_dacga .ObjectNumber =_ecadfe ;_dacga .GenerationNumber =0;default:_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_dacga );continue ;};if _eaaga {_bgebg ++;};};_fadbd :=func (_debag _aaa .PdfObject )int64 {switch _aaefe :=_debag .(type ){case *_aaa .PdfIndirectObject :return _aaefe .ObjectNumber ;case *_aaa .PdfObjectStream :return _aaefe .ObjectNumber ;case *_aaa .PdfObjectStreams :return _aaefe .ObjectNumber ;};return 0;};_ae .SliceStable (_acdg ._dbbec ,func (_bgddf ,_ffded int )bool {return _fadbd (_acdg ._dbbec [_bgddf ])< _fadbd (_acdg ._dbbec [_ffded ])});};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_cae :=NewPdfAnnotation ();_fgb :=&PdfAnnotationHighlight {};_fgb .PdfAnnotation =_cae ;_fgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cae .SetContext (_fgb );return _fgb ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_eggb .Lock ();defer _eggb .Unlock ();_egag =producer };

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_abaaa *XObjectImage )SetFilter (encoder _aaa .StreamEncoder )error {_affcd :=_abaaa .Stream ;_edga ,_cdgbe :=_abaaa .Filter .DecodeBytes (_affcd );if _cdgbe !=nil {return _cdgbe ;};_abaaa .Filter =encoder ;encoder .UpdateParams (_abaaa .getParamsDict ());_affcd ,_cdgbe =encoder .EncodeBytes (_edga );if _cdgbe !=nil {return _cdgbe ;};_abaaa .Stream =_affcd ;return nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _aaa .PdfObject ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_gbd :=NewPdfAnnotation ();_daae :=&PdfAnnotationTrapNet {};_daae .PdfAnnotation =_gbd ;_gbd .SetContext (_daae );return _daae ;};func _aaac (_cgcbb _aaa .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_abaef :=NewPdfColorspaceSpecialSeparation ();if _daf ,_dedgb :=_cgcbb .(*_aaa .PdfIndirectObject );_dedgb {_abaef ._cfcab =_daf ;};_cgcbb =_aaa .TraceToDirectObject (_cgcbb );_geceb ,_beab :=_cgcbb .(*_aaa .PdfObjectArray );if !_beab {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _geceb .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_cgcbb =_geceb .Get (0);_ecbe ,_beab :=_cgcbb .(*_aaa .PdfObjectName );if !_beab {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_ecbe !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_cgcbb =_geceb .Get (1);_ecbe ,_beab =_cgcbb .(*_aaa .PdfObjectName );if !_beab {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_abaef .ColorantName =_ecbe ;_cgcbb =_geceb .Get (2);_feac ,_bgec :=NewPdfColorspaceFromPdfObject (_cgcbb );if _bgec !=nil {return nil ,_bgec ;};_abaef .AlternateSpace =_feac ;_ecdc ,_bgec :=_dbec (_geceb .Get (3));if _bgec !=nil {return nil ,_bgec ;};_abaef .TintTransform =_ecdc ;return _abaef ,nil ;};

// ToInteger convert to an integer format.
func (_cfae *PdfColorDeviceGray )ToInteger (bits int )uint32 {_fcgd :=_dg .Pow (2,float64 (bits ))-1;return uint32 (_fcgd *_cfae .Val ());};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_bcbgd *PdfPageResources )GetXObjectFormByName (keyName _aaa .PdfObjectName )(*XObjectForm ,error ){_bddbc ,_fbegfc :=_bcbgd .GetXObjectByName (keyName );if _bddbc ==nil {return nil ,nil ;};if _fbegfc !=XObjectTypeForm {return nil ,_ee .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_ebfb ,_fcffg :=NewXObjectFormFromStream (_bddbc );if _fcffg !=nil {return nil ,_fcffg ;};return _ebfb ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fafd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdcd ,_ggdfc :=color .(*PdfColorDeviceRGB );if !_ggdfc {_fe .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cdcd ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_gdef :=NewPdfAnnotation ();_ggbd :=&PdfAnnotationScreen {};_ggbd .PdfAnnotation =_gdef ;_gdef .SetContext (_ggbd );return _ggbd ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _aaa .PdfObject ;Q _aaa .PdfObject ;RC _aaa .PdfObject ;DS _aaa .PdfObject ;CL _aaa .PdfObject ;IT _aaa .PdfObject ;BE _aaa .PdfObject ;RD _aaa .PdfObject ;BS _aaa .PdfObject ;LE _aaa .PdfObject ;};func (_aefga *LTV )getCerts (_fadae []*_be .Certificate )([][]byte ,error ){_ebeb :=make ([][]byte ,0,len (_fadae ));for _ ,_fegdb :=range _fadae {_ebeb =append (_ebeb ,_fegdb .Raw );};return _ebeb ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_egdb *pdfFontType0 )ToPdfObject ()_aaa .PdfObject {if _egdb ._dfcg ==nil {_egdb ._dfcg =&_aaa .PdfIndirectObject {};};_fecf :=_egdb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_egdb ._dfcg .PdfObject =_fecf ;if _egdb .Encoding !=nil {_fecf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_egdb .Encoding );}else if _egdb ._gedd !=nil {_fecf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_egdb ._gedd .ToPdfObject ());};if _egdb .DescendantFont !=nil {_fecf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_aaa .MakeArray (_egdb .DescendantFont .ToPdfObject ()));};return _egdb ._dfcg ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_baad pdfCIDFontType2 )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){_eaceb ,_cbfbf :=_baad ._fgagc [r ];if !_cbfbf {_bgea ,_bbffd :=_aaa .GetInt (_baad .DW );if !_bbffd {return _gf .CharMetrics {},false ;};_eaceb =int (*_bgea );};return _gf .CharMetrics {Wx :float64 (_eaceb )},true ;};func _bccf (_decce ,_bcgdg string )string {if _af .Contains (_decce ,"\u002b"){_dafb :=_af .Split (_decce ,"\u002b");if len (_dafb )==2{_decce =_dafb [1];};};return _bcgdg +"\u002b"+_decce ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func _agbf (_gfdce _aaa .PdfObject )(*PdfFontDescriptor ,error ){_agef :=&PdfFontDescriptor {};_gfdce =_aaa .ResolveReference (_gfdce );if _fcdcf ,_bdgff :=_gfdce .(*_aaa .PdfIndirectObject );_bdgff {_agef ._fgcag =_fcdcf ;_gfdce =_fcdcf .PdfObject ;};_eadce ,_gedg :=_aaa .GetDict (_gfdce );if !_gedg {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gfdce );return nil ,_aaa .ErrTypeError ;};if _ccdgbg :=_eadce .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ccdgbg !=nil {_agef .FontName =_ccdgbg ;}else {_fe .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_dgfg ,_ :=_aaa .GetName (_agef .FontName );if _dbgd :=_eadce .Get ("\u0054\u0079\u0070\u0065");_dbgd !=nil {_cbgbe ,_bbbbb :=_dbgd .(*_aaa .PdfObjectName );if !_bbbbb ||string (*_cbgbe )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fe .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dbgd ,_dgfg ,_agef .FontName );};}else {_fe .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dgfg ,_agef .FontName );};_agef .FontFamily =_eadce .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_agef .FontStretch =_eadce .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_agef .FontWeight =_eadce .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_agef .Flags =_eadce .Get ("\u0046\u006c\u0061g\u0073");_agef .FontBBox =_eadce .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_agef .ItalicAngle =_eadce .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_agef .Ascent =_eadce .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_agef .Descent =_eadce .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_agef .Leading =_eadce .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_agef .CapHeight =_eadce .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_agef .XHeight =_eadce .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_agef .StemV =_eadce .Get ("\u0053\u0074\u0065m\u0056");_agef .StemH =_eadce .Get ("\u0053\u0074\u0065m\u0048");_agef .AvgWidth =_eadce .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_agef .MaxWidth =_eadce .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_agef .MissingWidth =_eadce .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_agef .FontFile =_eadce .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_agef .FontFile2 =_eadce .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_agef .FontFile3 =_eadce .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_agef .CharSet =_eadce .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_agef .Style =_eadce .Get ("\u0053\u0074\u0079l\u0065");_agef .Lang =_eadce .Get ("\u004c\u0061\u006e\u0067");_agef .FD =_eadce .Get ("\u0046\u0044");_agef .CIDSet =_eadce .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _agef .Flags !=nil {if _gbfa ,_fgffa :=_aaa .GetIntVal (_agef .Flags );_fgffa {_agef ._gecbf =_gbfa ;};};if _agef .MissingWidth !=nil {if _gbgaf ,_gdgfc :=_aaa .GetNumberAsFloat (_agef .MissingWidth );_gdgfc ==nil {_agef ._bffg =_gbgaf ;};};if _agef .FontFile !=nil {_egeg ,_ebcb :=_fgdfc (_agef .FontFile );if _ebcb !=nil {return _agef ,_ebcb ;};_fe .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_egeg );_agef .fontFile =_egeg ;};if _agef .FontFile2 !=nil {_gbgf ,_agcg :=_gf .NewFontFile2FromPdfObject (_agef .FontFile2 );if _agcg !=nil {return _agef ,_agcg ;};_fe .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_gbgf .String ());_agef ._gbebb =&_gbgf ;};return _agef ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _aaa .PdfObject ;Movie _aaa .PdfObject ;A _aaa .PdfObject ;};func _ggfdg (_dbdba *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_dbdba }};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dbbe *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_faafe *_aaa .PdfIndirectObject ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cffcf *PdfAcroForm ,_faebdf *PdfField ,_dfced *PdfAnnotationWidget )(*_aaa .PdfObjectDictionary ,error );};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_aaa .PdfObjectName ;Colorants _aaa .PdfObject ;Process _aaa .PdfObject ;MixingHints _aaa .PdfObject ;_fegee *_aaa .PdfIndirectObject ;};func (_fdgb *PdfAppender )updateObjectsDeep (_ggba _aaa .PdfObject ,_bce map[_aaa .PdfObject ]struct{}){if _bce ==nil {_bce =map[_aaa .PdfObject ]struct{}{};};if _ ,_dgbg :=_bce [_ggba ];_dgbg ||_ggba ==nil {return ;};_bce [_ggba ]=struct{}{};_bdgf :=_aaa .ResolveReferencesDeep (_ggba ,_fdgb ._cfgb );if _bdgf !=nil {_fe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdgf );};switch _eddf :=_ggba .(type ){case *_aaa .PdfIndirectObject :switch {case _eddf .GetParser ()==_fdgb ._efcg ._gcee :return ;case _eddf .GetParser ()==_fdgb .Reader ._gcee :_ecag ,_ :=_fdgb ._efcg .GetIndirectObjectByNumber (int (_eddf .ObjectNumber ));_bebac ,_fgeb :=_ecag .(*_aaa .PdfIndirectObject );if _fgeb &&_bebac !=nil {if _bebac .PdfObject !=_eddf .PdfObject &&_bebac .PdfObject .WriteString ()!=_eddf .PdfObject .WriteString (){_fdgb .addNewObject (_ggba );_fdgb ._baee [_ggba ]=_eddf .ObjectNumber ;};};default:_fdgb .addNewObject (_ggba );};_fdgb .updateObjectsDeep (_eddf .PdfObject ,_bce );case *_aaa .PdfObjectArray :for _ ,_ecfc :=range _eddf .Elements (){_fdgb .updateObjectsDeep (_ecfc ,_bce );};case *_aaa .PdfObjectDictionary :for _ ,_daaaf :=range _eddf .Keys (){_fdgb .updateObjectsDeep (_eddf .Get (_daaaf ),_bce );};case *_aaa .PdfObjectStreams :if _eddf .GetParser ()!=_fdgb ._efcg ._gcee {for _ ,_bgee :=range _eddf .Elements (){_fdgb .updateObjectsDeep (_bgee ,_bce );};};case *_aaa .PdfObjectStream :switch {case _eddf .GetParser ()==_fdgb ._efcg ._gcee :return ;case _eddf .GetParser ()==_fdgb .Reader ._gcee :if _bddb ,_afafe :=_fdgb ._efcg ._gcee .LookupByReference (_eddf .PdfObjectReference );_afafe ==nil {var _gdda bool ;if _aaec ,_eaaf :=_aaa .GetStream (_bddb );_eaaf &&_bb .Equal (_aaec .Stream ,_eddf .Stream ){_gdda =true ;};if _aefg ,_edgbd :=_aaa .GetDict (_bddb );_gdda &&_edgbd {_gdda =_aefg .WriteString ()==_eddf .PdfObjectDictionary .WriteString ();};if _gdda {return ;};};if _eddf .ObjectNumber !=0{_fdgb ._baee [_ggba ]=_eddf .ObjectNumber ;};default:if _ ,_eecd :=_fdgb ._eede [_ggba ];!_eecd {_fdgb .addNewObject (_ggba );};};_fdgb .updateObjectsDeep (_eddf .PdfObjectDictionary ,_bce );};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cgfd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cgfd .Alternate ==nil {if _cgfd .N ==1{_ffbd :=NewPdfColorspaceDeviceGray ();return _ffbd .ColorFromFloats (vals );}else if _cgfd .N ==3{_edea :=NewPdfColorspaceDeviceRGB ();return _edea .ColorFromFloats (vals );}else if _cgfd .N ==4{_agfg :=NewPdfColorspaceDeviceCMYK ();return _agfg .ColorFromFloats (vals );}else {return nil ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _cgfd .Alternate .ColorFromFloats (vals );};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _aaa .PdfObject ;V _aaa .PdfObject ;};

// ToInteger convert to an integer format.
func (_bceg *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_dfgf :=_dg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dfgf *_bceg .A ()),uint32 (_dfgf *_bceg .B ()),uint32 (_dfgf *_bceg .C ())};};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_aaa .PdfObjectStream ;Data []byte ;_dcae *_aaa .PdfIndirectObject ;_aabb *_aaa .PdfObjectStream ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dbfd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_baef ,_bfcbb :=color .(*PdfColorPattern );if !_bfcbb {_fe .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _baef .Color ==nil {return color ,nil ;};if _dbfd .UnderlyingCS ==nil {return nil ,_ee .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _dbfd .UnderlyingCS .ColorToRGB (_baef .Color );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fgge *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbdda :=vals [0];if _dbdda < 0.0||_dbdda > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cffc :=vals [1];if _cffc < 0.0||_cffc > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bccb :=vals [2];if _bccb < 0.0||_bccb > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dadd :=NewPdfColorDeviceRGB (_dbdda ,_cffc ,_bccb );return _dadd ,nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_cdf :=NewPdfAction ();_ceed :=&PdfActionJavaScript {};_ceed .PdfAction =_cdf ;_cdf .SetContext (_ceed );return _ceed ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_gfg :=&PdfAnnotation {};_gfg ._fdd =_aaa .MakeIndirectObject (_aaa .MakeDict ());return _gfg ;};func _dcef (_dbfba *XObjectImage )error {if _dbfba .SMask ==nil {return nil ;};_cfce ,_eccfd :=_dbfba .SMask .(*_aaa .PdfObjectStream );if !_eccfd {_fe .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _aaa .ErrTypeError ;};_ffagd :=_cfce .PdfObjectDictionary ;_befde :=_ffagd .Get ("\u004d\u0061\u0074t\u0065");if _befde ==nil {return nil ;};_gccef ,_afacg :=_gbgbca (_befde .(*_aaa .PdfObjectArray ));if _afacg !=nil {return _afacg ;};_bcgad :=_aaa .MakeArrayFromFloats ([]float64 {_gccef });_ffagd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bcgad );return nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_bbag pdfFontSimple )GetCharMetrics (code _aa .CharCode )(_gf .CharMetrics ,bool ){if _beef ,_dgeeg :=_bbag ._dgdff [code ];_dgeeg {return _gf .CharMetrics {Wx :_beef },true ;};if _gf .IsStdFont (_gf .StdFontName (_bbag ._edee )){return _gf .CharMetrics {Wx :250},true ;};return _gf .CharMetrics {},false ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_eecg *PdfPage )AddContentStreamByString (contentStr string )error {_fgfdc ,_gdbfcb :=_aaa .MakeStream ([]byte (contentStr ),_aaa .NewFlateEncoder ());if _gdbfcb !=nil {return _gdbfcb ;};if _eecg .Contents ==nil {_eecg .Contents =_fgfdc ;}else {_gbbc :=_aaa .TraceToDirectObject (_eecg .Contents );_acdde ,_bbea :=_gbbc .(*_aaa .PdfObjectArray );if !_bbea {_acdde =_aaa .MakeArray (_gbbc );};_acdde .Append (_fgfdc );_eecg .Contents =_acdde ;};return nil ;};

// K returns the value of the key component of the color.
func (_fdeg *PdfColorDeviceCMYK )K ()float64 {return _fdeg [3]};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _aaa .PdfObjectArray )(*PdfRectangle ,error ){_agdb :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _bggad error ;_agdb .Llx ,_bggad =_aaa .GetNumberAsFloat (arr .Get (0));if _bggad !=nil {return nil ,_bggad ;};_agdb .Lly ,_bggad =_aaa .GetNumberAsFloat (arr .Get (1));if _bggad !=nil {return nil ,_bggad ;};_agdb .Urx ,_bggad =_aaa .GetNumberAsFloat (arr .Get (2));if _bggad !=nil {return nil ,_bggad ;};_agdb .Ury ,_bggad =_aaa .GetNumberAsFloat (arr .Get (3));if _bggad !=nil {return nil ,_bggad ;};return &_agdb ,nil ;};func (_edadb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _edadb ._ebcac ==nil &&_edadb .DescendantFont !=nil {return _edadb .DescendantFont .FontDescriptor ();};return _edadb ._ebcac ;};

// HasExtGState checks if ExtGState name is available.
func (_ddea *PdfPage )HasExtGState (name _aaa .PdfObjectName )bool {if _ddea .Resources ==nil {return false ;};if _ddea .Resources .ExtGState ==nil {return false ;};_bcbcc ,_ggdb :=_aaa .TraceToDirectObject (_ddea .Resources .ExtGState ).(*_aaa .PdfObjectDictionary );if !_ggdb {_fe .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aaa .TraceToDirectObject (_ddea .Resources .ExtGState ));return false ;};_ebec :=_bcbcc .Get (name );_ggaeb :=_ebec !=nil ;return _ggaeb ;};func (_gdbf *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func (_edgb *PdfReader )newPdfActionURIFromDict (_gcaf *_aaa .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_gcaf .Get ("\u0055\u0052\u0049"),IsMap :_gcaf .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// GetOptimizer returns current PDF optimizer.
func (_dcggc *PdfWriter )GetOptimizer ()Optimizer {return _dcggc ._adfab };const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ToPdfObject implements interface PdfModel.
func (_cfa *PdfActionLaunch )ToPdfObject ()_aaa .PdfObject {_cfa .PdfAction .ToPdfObject ();_bfa :=_cfa ._afe ;_dgf :=_bfa .PdfObject .(*_aaa .PdfObjectDictionary );_dgf .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeLaunch )));if _cfa .F !=nil {_dgf .Set ("\u0046",_cfa .F .ToPdfObject ());};_dgf .SetIfNotNil ("\u0057\u0069\u006e",_cfa .Win );_dgf .SetIfNotNil ("\u004d\u0061\u0063",_cfa .Mac );_dgf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cfa .Unix );_dgf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cfa .NewWindow );return _bfa ;};

// BaseFont returns the font's "BaseFont" field.
func (_feabc *PdfFont )BaseFont ()string {return _feabc .baseFields ()._edee };func _fcdaf (_dgbc []byte )[]byte {const _ggad =52845;const _badgb =22719;_dgecb :=55665;for _ ,_ddaee :=range _dgbc [:4]{_dgecb =(int (_ddaee )+_dgecb )*_ggad +_badgb ;};_bacb :=make ([]byte ,len (_dgbc )-4);for _gdca ,_facc :=range _dgbc [4:]{_bacb [_gdca ]=byte (int (_facc )^_dgecb >>8);_dgecb =(int (_facc )+_dgecb )*_ggad +_badgb ;};return _bacb ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ffcb *PdfField )GetContainingPdfObject ()_aaa .PdfObject {return _ffcb ._badf };

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_eac :=NewPdfAction ();_agf :=&PdfActionSetOCGState {};_agf .PdfAction =_eac ;_eac .SetContext (_agf );return _agf ;};func (_cffdf *DSS )add (_bdbd *[]*_aaa .PdfObjectStream ,_bagc map[string ]*_aaa .PdfObjectStream ,_agdaf [][]byte )([]*_aaa .PdfObjectStream ,error ){_gccfc :=make ([]*_aaa .PdfObjectStream ,0,len (_agdaf ));for _ ,_eebbd :=range _agdaf {_bcdbb ,_cged :=_agcc (_eebbd );if _cged !=nil {return nil ,_cged ;};_adab ,_ecdca :=_bagc [string (_bcdbb )];if !_ecdca {_adab ,_cged =_aaa .MakeStream (_eebbd ,_aaa .NewRawEncoder ());if _cged !=nil {return nil ,_cged ;};_bagc [string (_bcdbb )]=_adab ;*_bdbd =append (*_bdbd ,_adab );};_gccfc =append (_gccfc ,_adab );};return _gccfc ,nil ;};func (_ccd *PdfReader )newPdfAnnotationFromIndirectObject (_decg *_aaa .PdfIndirectObject )(*PdfAnnotation ,error ){_dcea ,_dgba :=_decg .PdfObject .(*_aaa .PdfObjectDictionary );if !_dgba {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_ccd ._egba .GetModelFromPrimitive (_dcea );model !=nil {_dbb ,_bag :=model .(*PdfAnnotation );if !_bag {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _dbb ,nil ;};_bedf :=&PdfAnnotation {};_bedf ._fdd =_decg ;_ccd ._egba .Register (_dcea ,_bedf );if _ccb :=_dcea .Get ("\u0054\u0079\u0070\u0065");_ccb !=nil {_df ,_bcda :=_ccb .(*_aaa .PdfObjectName );if !_bcda {_fe .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ccb );}else {if *_df !="\u0041\u006e\u006eo\u0074"{_fe .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_df );};};};if _efc :=_dcea .Get ("\u0052\u0065\u0063\u0074");_efc !=nil {_bedf .Rect =_efc ;};if _dab :=_dcea .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_dab !=nil {_bedf .Contents =_dab ;};if _eedd :=_dcea .Get ("\u0050");_eedd !=nil {_bedf .P =_eedd ;};if _ffde :=_dcea .Get ("\u004e\u004d");_ffde !=nil {_bedf .NM =_ffde ;};if _gadg :=_dcea .Get ("\u004d");_gadg !=nil {_bedf .M =_gadg ;};if _cdd :=_dcea .Get ("\u0046");_cdd !=nil {_bedf .F =_cdd ;};if _fead :=_dcea .Get ("\u0041\u0050");_fead !=nil {_bedf .AP =_fead ;};if _geb :=_dcea .Get ("\u0041\u0053");_geb !=nil {_bedf .AS =_geb ;};if _egb :=_dcea .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_egb !=nil {_bedf .Border =_egb ;};if _eec :=_dcea .Get ("\u0043");_eec !=nil {_bedf .C =_eec ;};if _cbab :=_dcea .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cbab !=nil {_bedf .StructParent =_cbab ;};if _feb :=_dcea .Get ("\u004f\u0043");_feb !=nil {_bedf .OC =_feb ;};_gcad :=_dcea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gcad ==nil {_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_bedf ._adbe =nil ;return _bedf ,nil ;};_cgd ,_gfbb :=_gcad .(*_aaa .PdfObjectName );if !_gfbb {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gcad );return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_gcad );};switch *_cgd {case "\u0054\u0065\u0078\u0074":_fgc ,_eeaf :=_ccd .newPdfAnnotationTextFromDict (_dcea );if _eeaf !=nil {return nil ,_eeaf ;};_fgc .PdfAnnotation =_bedf ;_bedf ._adbe =_fgc ;return _bedf ,nil ;case "\u004c\u0069\u006e\u006b":_fgcd ,_caga :=_ccd .newPdfAnnotationLinkFromDict (_dcea );if _caga !=nil {return nil ,_caga ;};_fgcd .PdfAnnotation =_bedf ;_bedf ._adbe =_fgcd ;return _bedf ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_baa ,_gecb :=_ccd .newPdfAnnotationFreeTextFromDict (_dcea );if _gecb !=nil {return nil ,_gecb ;};_baa .PdfAnnotation =_bedf ;_bedf ._adbe =_baa ;return _bedf ,nil ;case "\u004c\u0069\u006e\u0065":_dga ,_adbb :=_ccd .newPdfAnnotationLineFromDict (_dcea );if _adbb !=nil {return nil ,_adbb ;};_dga .PdfAnnotation =_bedf ;_bedf ._adbe =_dga ;_fe .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bedf ,_bedf );_fe .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dga ,_dga );_fe .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dga .PdfAnnotationMarkup ,_dga .PdfAnnotationMarkup );return _bedf ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_ceff ,_ebb :=_ccd .newPdfAnnotationSquareFromDict (_dcea );if _ebb !=nil {return nil ,_ebb ;};_ceff .PdfAnnotation =_bedf ;_bedf ._adbe =_ceff ;return _bedf ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cefc ,_bcgd :=_ccd .newPdfAnnotationCircleFromDict (_dcea );if _bcgd !=nil {return nil ,_bcgd ;};_cefc .PdfAnnotation =_bedf ;_bedf ._adbe =_cefc ;return _bedf ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_eaeg ,_bbcg :=_ccd .newPdfAnnotationPolygonFromDict (_dcea );if _bbcg !=nil {return nil ,_bbcg ;};_eaeg .PdfAnnotation =_bedf ;_bedf ._adbe =_eaeg ;return _bedf ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bga ,_gdd :=_ccd .newPdfAnnotationPolyLineFromDict (_dcea );if _gdd !=nil {return nil ,_gdd ;};_bga .PdfAnnotation =_bedf ;_bedf ._adbe =_bga ;return _bedf ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_cfeg ,_fac :=_ccd .newPdfAnnotationHighlightFromDict (_dcea );if _fac !=nil {return nil ,_fac ;};_cfeg .PdfAnnotation =_bedf ;_bedf ._adbe =_cfeg ;return _bedf ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_edb ,_cddg :=_ccd .newPdfAnnotationUnderlineFromDict (_dcea );if _cddg !=nil {return nil ,_cddg ;};_edb .PdfAnnotation =_bedf ;_bedf ._adbe =_edb ;return _bedf ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_ded ,_cebe :=_ccd .newPdfAnnotationSquigglyFromDict (_dcea );if _cebe !=nil {return nil ,_cebe ;};_ded .PdfAnnotation =_bedf ;_bedf ._adbe =_ded ;return _bedf ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ecg ,_agba :=_ccd .newPdfAnnotationStrikeOut (_dcea );if _agba !=nil {return nil ,_agba ;};_ecg .PdfAnnotation =_bedf ;_bedf ._adbe =_ecg ;return _bedf ,nil ;case "\u0043\u0061\u0072e\u0074":_gdg ,_bgb :=_ccd .newPdfAnnotationCaretFromDict (_dcea );if _bgb !=nil {return nil ,_bgb ;};_gdg .PdfAnnotation =_bedf ;_bedf ._adbe =_gdg ;return _bedf ,nil ;case "\u0053\u0074\u0061m\u0070":_fcda ,_fde :=_ccd .newPdfAnnotationStampFromDict (_dcea );if _fde !=nil {return nil ,_fde ;};_fcda .PdfAnnotation =_bedf ;_bedf ._adbe =_fcda ;return _bedf ,nil ;case "\u0049\u006e\u006b":_bgegf ,_aecg :=_ccd .newPdfAnnotationInkFromDict (_dcea );if _aecg !=nil {return nil ,_aecg ;};_bgegf .PdfAnnotation =_bedf ;_bedf ._adbe =_bgegf ;return _bedf ,nil ;case "\u0050\u006f\u0070u\u0070":_dca ,_dag :=_ccd .newPdfAnnotationPopupFromDict (_dcea );if _dag !=nil {return nil ,_dag ;};_dca .PdfAnnotation =_bedf ;_bedf ._adbe =_dca ;return _bedf ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_bab ,_fegbe :=_ccd .newPdfAnnotationFileAttachmentFromDict (_dcea );if _fegbe !=nil {return nil ,_fegbe ;};_bab .PdfAnnotation =_bedf ;_bedf ._adbe =_bab ;return _bedf ,nil ;case "\u0053\u006f\u0075n\u0064":_gddg ,_bfgf :=_ccd .newPdfAnnotationSoundFromDict (_dcea );if _bfgf !=nil {return nil ,_bfgf ;};_gddg .PdfAnnotation =_bedf ;_bedf ._adbe =_gddg ;return _bedf ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_acbd ,_beg :=_ccd .newPdfAnnotationRichMediaFromDict (_dcea );if _beg !=nil {return nil ,_beg ;};_acbd .PdfAnnotation =_bedf ;_bedf ._adbe =_acbd ;return _bedf ,nil ;case "\u004d\u006f\u0076i\u0065":_gff ,_gdga :=_ccd .newPdfAnnotationMovieFromDict (_dcea );if _gdga !=nil {return nil ,_gdga ;};_gff .PdfAnnotation =_bedf ;_bedf ._adbe =_gff ;return _bedf ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bgc ,_beeca :=_ccd .newPdfAnnotationScreenFromDict (_dcea );if _beeca !=nil {return nil ,_beeca ;};_bgc .PdfAnnotation =_bedf ;_bedf ._adbe =_bgc ;return _bedf ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_afd ,_gfa :=_ccd .newPdfAnnotationWidgetFromDict (_dcea );if _gfa !=nil {return nil ,_gfa ;};_afd .PdfAnnotation =_bedf ;_bedf ._adbe =_afd ;return _bedf ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_dfe ,_dgcd :=_ccd .newPdfAnnotationPrinterMarkFromDict (_dcea );if _dgcd !=nil {return nil ,_dgcd ;};_dfe .PdfAnnotation =_bedf ;_bedf ._adbe =_dfe ;return _bedf ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_efbc ,_ffc :=_ccd .newPdfAnnotationTrapNetFromDict (_dcea );if _ffc !=nil {return nil ,_ffc ;};_efbc .PdfAnnotation =_bedf ;_bedf ._adbe =_efbc ;return _bedf ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_edc ,_cca :=_ccd .newPdfAnnotationWatermarkFromDict (_dcea );if _cca !=nil {return nil ,_cca ;};_edc .PdfAnnotation =_bedf ;_bedf ._adbe =_edc ;return _bedf ,nil ;case "\u0033\u0044":_acg ,_gbe :=_ccd .newPdfAnnotation3DFromDict (_dcea );if _gbe !=nil {return nil ,_gbe ;};_acg .PdfAnnotation =_bedf ;_bedf ._adbe =_acg ;return _bedf ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_dcd ,_edcc :=_ccd .newPdfAnnotationProjectionFromDict (_dcea );if _edcc !=nil {return nil ,_edcc ;};_dcd .PdfAnnotation =_bedf ;_bedf ._adbe =_dcd ;return _bedf ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_adea ,_bead :=_ccd .newPdfAnnotationRedactFromDict (_dcea );if _bead !=nil {return nil ,_bead ;};_adea .PdfAnnotation =_bedf ;_bedf ._adbe =_adea ;return _bedf ,nil ;};_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cgd );return nil ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_acbc *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _acbc .RunesToCharcodeBytes ([]rune (str ));};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_aaa .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_cfcab *_aaa .PdfIndirectObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_efgc *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _efgc .Base ==nil {return nil ,_ee .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _efgc .Base .ColorToRGB (color );};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _aaa .PdfObject ;AN _aaa .PdfObject ;OP _aaa .PdfObject ;JS _aaa .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcffe *PdfShadingType4 )ToPdfObject ()_aaa .PdfObject {_fcffe .PdfShading .ToPdfObject ();_ffga ,_cbcgg :=_fcffe .getShadingDict ();if _cbcgg !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fcffe .BitsPerCoordinate !=nil {_ffga .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fcffe .BitsPerCoordinate );};if _fcffe .BitsPerComponent !=nil {_ffga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fcffe .BitsPerComponent );};if _fcffe .BitsPerFlag !=nil {_ffga .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fcffe .BitsPerFlag );};if _fcffe .Decode !=nil {_ffga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fcffe .Decode );};if _fcffe .Function !=nil {if len (_fcffe .Function )==1{_ffga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcffe .Function [0].ToPdfObject ());}else {_ffabb :=_aaa .MakeArray ();for _ ,_cedb :=range _fcffe .Function {_ffabb .Append (_cedb .ToPdfObject ());};_ffga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffabb );};};return _fcffe ._cfade ;};type pdfCIDFontType2 struct{fontCommon ;_gbdg *_aaa .PdfIndirectObject ;_agabc _aa .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_aaa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aaa .PdfObject ;W _aaa .PdfObject ;DW2 _aaa .PdfObject ;W2 _aaa .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _aaa .PdfObject ;_ffcfa map[_aa .CharCode ]float64 ;_ffcg float64 ;_fgagc map[rune ]int ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_caeb *PdfAcroForm )ToPdfObject ()_aaa .PdfObject {_bcagc :=_caeb ._efab ;_cdbd :=_bcagc .PdfObject .(*_aaa .PdfObjectDictionary );if _caeb .Fields !=nil {_dcfg :=_aaa .PdfObjectArray {};for _ ,_fdbd :=range *_caeb .Fields {_aaaeb :=_fdbd .GetContext ();if _aaaeb !=nil {_dcfg .Append (_aaaeb .ToPdfObject ());}else {_dcfg .Append (_fdbd .ToPdfObject ());};};_cdbd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dcfg );};if _caeb .NeedAppearances !=nil {_cdbd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_caeb .NeedAppearances );};if _caeb .SigFlags !=nil {_cdbd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_caeb .SigFlags );};if _caeb .CO !=nil {_cdbd .Set ("\u0043\u004f",_caeb .CO );};if _caeb .DR !=nil {_cdbd .Set ("\u0044\u0052",_caeb .DR .ToPdfObject ());};if _caeb .DA !=nil {_cdbd .Set ("\u0044\u0041",_caeb .DA );};if _caeb .Q !=nil {_cdbd .Set ("\u0051",_caeb .Q );};if _caeb .XFA !=nil {_cdbd .Set ("\u0058\u0046\u0041",_caeb .XFA );};return _bcagc ;};func (_cfaed *pdfFontType0 )bytesToCharcodes (_agab []byte )([]_aa .CharCode ,bool ){if _cfaed ._ffbg ==nil {return nil ,false ;};_cagac ,_cegdc :=_cfaed ._ffbg .BytesToCharcodes (_agab );if !_cegdc {return nil ,false ;};_facg :=make ([]_aa .CharCode ,len (_cagac ));for _cbfba ,_fcdd :=range _cagac {_facg [_cbfba ]=_aa .CharCode (_fcdd );};return _facg ,true ;};func (_eefdb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _eefdb ._gcee .GetCrypter ()!=nil &&!_eefdb ._gcee .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_acgdf :=_eefdb ._gdbc ;_dagdf :=_acgdf .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dagdf ==nil {return nil ,nil ;};_fe .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ebcd :=_aaa .ResolveReference (_dagdf );_fe .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ebcd );if _ddfge :=_aaa .IsNullObject (_ebcd );_ddfge {_fe .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_acdecf ,_fbaag :=_ebcd .(*_aaa .PdfIndirectObject );if !_fbaag {if _ ,_ddcea :=_aaa .GetDict (_ebcd );!_ddcea {_fe .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_fe .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_acdecf =_aaa .MakeIndirectObject (_ebcd );};_fcdf ,_fbaag :=_acdecf .PdfObject .(*_aaa .PdfObjectDictionary );if !_fbaag {return nil ,_ee .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_fe .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fcdf );_feea ,_ ,_feabg :=_eefdb .buildOutlineTree (_acdecf ,nil ,nil ,nil );if _feabg !=nil {return nil ,_feabg ;};_fe .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_feea );return _feea ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bgceg *PdfColorspaceICCBased )ToPdfObject ()_aaa .PdfObject {_gbf :=&_aaa .PdfObjectArray {};_gbf .Append (_aaa .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _efcea *_aaa .PdfObjectStream ;if _bgceg ._aabb !=nil {_efcea =_bgceg ._aabb ;}else {_efcea =&_aaa .PdfObjectStream {};};_gdgaf :=_aaa .MakeDict ();_gdgaf .Set ("\u004e",_aaa .MakeInteger (int64 (_bgceg .N )));if _bgceg .Alternate !=nil {_gdgaf .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bgceg .Alternate .ToPdfObject ());};if _bgceg .Metadata !=nil {_gdgaf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgceg .Metadata );};if _bgceg .Range !=nil {var _cgccc []_aaa .PdfObject ;for _ ,_fegegb :=range _bgceg .Range {_cgccc =append (_cgccc ,_aaa .MakeFloat (_fegegb ));};_gdgaf .Set ("\u0052\u0061\u006eg\u0065",_aaa .MakeArray (_cgccc ...));};_gdgaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aaa .MakeInteger (int64 (len (_bgceg .Data ))));_efcea .Stream =_bgceg .Data ;_efcea .PdfObjectDictionary =_gdgaf ;_gbf .Append (_efcea );if _bgceg ._dcae !=nil {_bgceg ._dcae .PdfObject =_gbf ;return _bgceg ._dcae ;};return _gbf ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_fdca :=&PdfPageResources {};_fdca ._gbcaa =_aaa .MakeDict ();return _fdca ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _aaa .StreamEncoder ;FormType _aaa .PdfObject ;BBox _aaa .PdfObject ;Matrix _aaa .PdfObject ;Resources *PdfPageResources ;Group _aaa .PdfObject ;Ref _aaa .PdfObject ;MetaData _aaa .PdfObject ;PieceInfo _aaa .PdfObject ;LastModified _aaa .PdfObject ;StructParent _aaa .PdfObject ;StructParents _aaa .PdfObject ;OPI _aaa .PdfObject ;OC _aaa .PdfObject ;Name _aaa .PdfObject ;

// Stream data.
Stream []byte ;_deggf *_aaa .PdfObjectStream ;};func (_abb *PdfReader )newPdfActionImportDataFromDict (_ggac *_aaa .PdfObjectDictionary )(*PdfActionImportData ,error ){_fefe ,_bac :=_gcg (_ggac .Get ("\u0046"));if _bac !=nil {return nil ,_bac ;};return &PdfActionImportData {F :_fefe },nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bbbe *PdfColorspaceLab )ToPdfObject ()_aaa .PdfObject {_aecf :=_aaa .MakeArray ();_aecf .Append (_aaa .MakeName ("\u004c\u0061\u0062"));_bagf :=_aaa .MakeDict ();if _bbbe .WhitePoint !=nil {_bgbb :=_aaa .MakeArray (_aaa .MakeFloat (_bbbe .WhitePoint [0]),_aaa .MakeFloat (_bbbe .WhitePoint [1]),_aaa .MakeFloat (_bbbe .WhitePoint [2]));_bagf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bgbb );}else {_fe .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _bbbe .BlackPoint !=nil {_bebf :=_aaa .MakeArray (_aaa .MakeFloat (_bbbe .BlackPoint [0]),_aaa .MakeFloat (_bbbe .BlackPoint [1]),_aaa .MakeFloat (_bbbe .BlackPoint [2]));_bagf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bebf );};if _bbbe .Range !=nil {_dede :=_aaa .MakeArray (_aaa .MakeFloat (_bbbe .Range [0]),_aaa .MakeFloat (_bbbe .Range [1]),_aaa .MakeFloat (_bbbe .Range [2]),_aaa .MakeFloat (_bbbe .Range [3]));_bagf .Set ("\u0052\u0061\u006eg\u0065",_dede );};_aecf .Append (_bagf );if _bbbe ._faafe !=nil {_bbbe ._faafe .PdfObject =_aecf ;return _bbbe ._faafe ;};return _aecf ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _aaa .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_aaa .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_acbgg ,_cabba :=encoder .EncodeBytes (img .Data );if _cabba !=nil {_fe .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cabba );return nil ,_cabba ;};_dddae :=NewXObjectImage ();_dcgde :=img .Width ;_ddeacc :=img .Height ;_dddae .Width =&_dcgde ;_dddae .Height =&_ddeacc ;_aegfe :=img .BitsPerComponent ;_dddae .BitsPerComponent =&_aegfe ;_dddae .Filter =encoder ;_dddae .Stream =_acbgg ;if cs ==nil {if img .ColorComponents ==1{_dddae .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dddae .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dddae .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ee .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dddae .ColorSpace =cs ;};if len (img ._agebab )!=0{_cggfe :=NewXObjectImage ();_cggfe .Filter =encoder ;_bfcfa ,_cbaaf :=encoder .EncodeBytes (img ._agebab );if _cbaaf !=nil {_fe .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cbaaf );return nil ,_cbaaf ;};_cggfe .Stream =_bfcfa ;_cggfe .BitsPerComponent =_dddae .BitsPerComponent ;_cggfe .Width =&img .Width ;_cggfe .Height =&img .Height ;_cggfe .ColorSpace =NewPdfColorspaceDeviceGray ();_dddae .SMask =_cggfe .ToPdfObject ();}else {_dddae .SMask =xobjIn .SMask ;_dddae .ImageMask =xobjIn .ImageMask ;if _dddae .ColorSpace .GetNumComponents ()==1{_dcef (_dddae );};};return _dddae ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dfdd *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_caeee :=&PdfOutline {_cdfac :_aaa .MakeIndirectObject (_aaa .MakeDict ())};_caeee ._egceg =_caeee ;return _caeee ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_gcege FieldFlag )Mask ()uint32 {return uint32 (_gcege )};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fecd *PdfFontDescriptor )ToPdfObject ()_aaa .PdfObject {_eagca :=_aaa .MakeDict ();if _fecd ._fgcag ==nil {_fecd ._fgcag =&_aaa .PdfIndirectObject {};};_fecd ._fgcag .PdfObject =_eagca ;_eagca .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _fecd .FontName !=nil {_eagca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fecd .FontName );};if _fecd .FontFamily !=nil {_eagca .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fecd .FontFamily );};if _fecd .FontStretch !=nil {_eagca .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fecd .FontStretch );};if _fecd .FontWeight !=nil {_eagca .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fecd .FontWeight );};if _fecd .Flags !=nil {_eagca .Set ("\u0046\u006c\u0061g\u0073",_fecd .Flags );};if _fecd .FontBBox !=nil {_eagca .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fecd .FontBBox );};if _fecd .ItalicAngle !=nil {_eagca .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fecd .ItalicAngle );};if _fecd .Ascent !=nil {_eagca .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fecd .Ascent );};if _fecd .Descent !=nil {_eagca .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fecd .Descent );};if _fecd .Leading !=nil {_eagca .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fecd .Leading );};if _fecd .CapHeight !=nil {_eagca .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fecd .CapHeight );};if _fecd .XHeight !=nil {_eagca .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fecd .XHeight );};if _fecd .StemV !=nil {_eagca .Set ("\u0053\u0074\u0065m\u0056",_fecd .StemV );};if _fecd .StemH !=nil {_eagca .Set ("\u0053\u0074\u0065m\u0048",_fecd .StemH );};if _fecd .AvgWidth !=nil {_eagca .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fecd .AvgWidth );};if _fecd .MaxWidth !=nil {_eagca .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fecd .MaxWidth );};if _fecd .MissingWidth !=nil {_eagca .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fecd .MissingWidth );};if _fecd .FontFile !=nil {_eagca .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fecd .FontFile );};if _fecd .FontFile2 !=nil {_eagca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fecd .FontFile2 );};if _fecd .FontFile3 !=nil {_eagca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fecd .FontFile3 );};if _fecd .CharSet !=nil {_eagca .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fecd .CharSet );};if _fecd .Style !=nil {_eagca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fecd .FontName );};if _fecd .Lang !=nil {_eagca .Set ("\u004c\u0061\u006e\u0067",_fecd .Lang );};if _fecd .FD !=nil {_eagca .Set ("\u0046\u0044",_fecd .FD );};if _fecd .CIDSet !=nil {_eagca .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fecd .CIDSet );};return _fecd ._fgcag ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_eggb .Lock ();defer _eggb .Unlock ();_fecca =title };

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_gffeg *PdfColorspaceDeviceN )GetNumComponents ()int {return _gffeg .ColorantNames .Len ()};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eebg *PdfPageResourcesColorspaces )ToPdfObject ()_aaa .PdfObject {_eabg :=_aaa .MakeDict ();for _ ,_cgef :=range _eebg .Names {_eabg .Set (_aaa .PdfObjectName (_cgef ),_eebg .Colorspaces [_cgef ].ToPdfObject ());};if _eebg ._ggddf !=nil {_eebg ._ggddf .PdfObject =_eabg ;return _eebg ._ggddf ;};return _eabg ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _aaa .PdfObject ;};

// ImageToRGB convert an indexed image to RGB.
func (_gded *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_gded .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_cddf :=_bc .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._agebab ,img ._ggcd );_fdee :=_dgb .NewReader (img .getBase ());_afgfa :=_dgb .NewWriter (_cddf );var (_cbea uint32 ;_faff int ;_babb error ;);for {_cbea ,_babb =_fdee .ReadSample ();if _babb ==_agb .EOF {break ;}else if _babb !=nil {return img ,_babb ;};_faff =int (_cbea );_fe .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_faff ,N ,len (_gded ._efff ));if (_faff +1)*N > len (_gded ._efff ){_faff =len (_gded ._efff )/N -1;_fe .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_faff );if _faff < 0{_fe .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _edgba :=_faff *N ;_edgba < (_faff +1)*N ;_edgba ++{if _babb =_afgfa .WriteSample (uint32 (_gded ._efff [_edgba ]));_babb !=nil {return img ,_babb ;};};};return _gded .Base .ImageToRGB (_caed (&_cddf ));};func (_cgc *PdfReader )newPdfAnnotationRichMediaFromDict (_fdg *_aaa .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_fdda :=&PdfAnnotationRichMedia {};_fdda .RichMediaSettings =_fdg .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_fdda .RichMediaContent =_fdg .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _fdda ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_geba *PdfReader )GetIndirectObjectByNumber (number int )(_aaa .PdfObject ,error ){_defgc ,_gbgd :=_geba ._gcee .LookupByNumber (number );return _defgc ,_gbgd ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_dfgad :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_dfgad .N =N ;return _dfgad ,nil ;};func (_cadbb *fontFile )parseASCIIPart (_efbb []byte )error {if len (_efbb )< 2||string (_efbb [:2])!="\u0025\u0021"{return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_dgdfd ,_fgdea ,_ggbeb :=_fefb (_efbb );if _ggbeb !=nil {return _ggbeb ;};_dfbe :=_fedcf (_dgdfd );_cadbb ._ccdeg =_dfbe ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cadbb ._ccdeg ==""{_fe .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _fgdea !=""{_defb ,_dedb :=_eadfb (_fgdea );if _dedb !=nil {return _dedb ;};_ddbg ,_dedb :=_aa .NewCustomSimpleTextEncoder (_defb ,nil );if _dedb !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dedb );return nil ;};_cadbb ._fdcgf =_ddbg ;};return nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_gageg *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_fffcg :=PdfInfo {};_cbdd ,_adgab :=_gageg .GetTrailer ();if _adgab !=nil {return nil ,_adgab ;};var _efaf *_aaa .PdfObjectDictionary ;_cefde :=_cbdd .Get ("\u0049\u006e\u0066\u006f");switch _affdd :=_cefde .(type ){case *_aaa .PdfObjectReference :_cffe :=_affdd ;_cefde ,_adgab =_gageg .GetIndirectObjectByNumber (int (_cffe .ObjectNumber ));_cefde =_aaa .TraceToDirectObject (_cefde );if _adgab !=nil {return nil ,_adgab ;};_efaf ,_ =_cefde .(*_aaa .PdfObjectDictionary );case *_aaa .PdfObjectDictionary :_efaf =_affdd ;};if _efaf ==nil {return nil ,_ee .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_fffcg .Title ,_ =_aaa .GetString (_efaf .Get ("\u0054\u0069\u0074l\u0065"));_fffcg .Author ,_ =_aaa .GetString (_efaf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));_fffcg .Subject ,_ =_aaa .GetString (_efaf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));_fffcg .Keywords ,_ =_aaa .GetString (_efaf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));_fffcg .Creator ,_ =_aaa .GetString (_efaf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));_fffcg .Producer ,_ =_aaa .GetString (_efaf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));_fffcg .Trapped ,_ =_aaa .GetName (_efaf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));if _fgfae ,_cbffe :=_efaf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065").(*_aaa .PdfObjectString );_cbffe {_dbcef ,_cfbb :=NewPdfDate (_fgfae .String ());if _cfbb !=nil {return nil ,_cfbb ;};_fffcg .CreationDate =&_dbcef ;};if _bcfbc ,_aaeg :=_efaf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065").(*_aaa .PdfObjectString );_aaeg {_dbddg ,_dgacf :=NewPdfDate (_bcfbc .String ());if _dgacf !=nil {return nil ,_dgacf ;};_fffcg .ModifiedDate =&_dbddg ;};return &_fffcg ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_deb :=NewPdfAction ();_fgd :=&PdfActionGoToE {};_fgd .PdfAction =_deb ;_deb .SetContext (_fgd );return _fgd ;};func (_becd *PdfAppender )replaceObject (_ggacg ,_cabb _aaa .PdfObject ){switch _dgeb :=_ggacg .(type ){case *_aaa .PdfIndirectObject :_becd ._baee [_cabb ]=_dgeb .ObjectNumber ;case *_aaa .PdfObjectStream :_becd ._baee [_cabb ]=_dgeb .ObjectNumber ;};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_adeaa *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_adeaa .Base .GetNumComponents ();_adcc :=int (vals [0])*N ;if _adcc < 0||(_adcc +N -1)>=len (_adeaa ._efff ){return nil ,_ee .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_geeea :=_adeaa ._efff [_adcc :_adcc +N ];var _bdfd []float64 ;for _ ,_cccfe :=range _geeea {_bdfd =append (_bdfd ,float64 (_cccfe )/255.0);};_edef ,_fece :=_adeaa .Base .ColorFromFloats (_bdfd );if _fece !=nil {return nil ,_fece ;};return _edef ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ebge *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// SetDecode sets the decode image float slice.
func (_dcgb *Image )SetDecode (decode []float64 ){_dcgb ._ggcd =decode };

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_ffgc *PdfFont )CharcodesToUnicode (charcodes []_aa .CharCode )[]rune {_geag ,_ ,_ :=_ffgc .CharcodesToUnicodeWithStats (charcodes );return _geag ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_egcc *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_afab ,_adace :=color .(*PdfColorDeviceCMYK );if !_adace {_fe .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fceg :=_afab .C ();_edab :=_afab .M ();_fegd :=_afab .Y ();_fgag :=_afab .K ();_fceg =_fceg *(1-_fgag )+_fgag ;_edab =_edab *(1-_fgag )+_fgag ;_fegd =_fegd *(1-_fgag )+_fgag ;_fcfd :=1-_fceg ;_efcba :=1-_edab ;_bbda :=1-_fegd ;return NewPdfColorDeviceRGB (_fcfd ,_efcba ,_bbda ),nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fd :=&PdfAction {};_fd ._afe =_aaa .MakeIndirectObject (_aaa .MakeDict ());return _fd ;};const (_geefc =0x00001;_ddcfe =0x00002;_dbbcf =0x00004;_decbe =0x00008;_cedee =0x00020;_edgc =0x00040;_bbbf =0x10000;_feega =0x20000;_bbff =0x40000;);func _dbfab ()string {return _fe .Version };

// Width returns the width of `rect`.
func (_bcgcc *PdfRectangle )Width ()float64 {return _dg .Abs (_bcgcc .Urx -_bcgcc .Llx )};

// GetContentStream returns the pattern cell's content stream
func (_gddgf *PdfTilingPattern )GetContentStream ()([]byte ,error ){_fgbgd ,_ ,_gdcgb :=_gddgf .GetContentStreamWithEncoder ();return _fgbgd ,_gdcgb ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gcee *_aaa .PdfParser ;_gcge _aaa .PdfObject ;_eeagd *_aaa .PdfIndirectObject ;_bdbde *_aaa .PdfObjectDictionary ;_cfdf []*_aaa .PdfIndirectObject ;PageList []*PdfPage ;_baaa int ;_gdbc *_aaa .PdfObjectDictionary ;_afag *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_egba *modelManager ;_bcade bool ;_dabcd map[_aaa .PdfObject ]struct{};_ggbee _agb .ReadSeeker ;};

// ToPdfObject returns a stream object.
func (_gebe *XObjectForm )ToPdfObject ()_aaa .PdfObject {_eeea :=_gebe ._deggf ;_gefbe :=_eeea .PdfObjectDictionary ;if _gebe .Filter !=nil {_gefbe =_gebe .Filter .MakeStreamDict ();_eeea .PdfObjectDictionary =_gefbe ;};_gefbe .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_gefbe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0046\u006f\u0072\u006d"));_gefbe .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gebe .FormType );_gefbe .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gebe .BBox );_gefbe .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gebe .Matrix );if _gebe .Resources !=nil {_gefbe .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gebe .Resources .ToPdfObject ());};_gefbe .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gebe .Group );_gefbe .SetIfNotNil ("\u0052\u0065\u0066",_gebe .Ref );_gefbe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gebe .MetaData );_gefbe .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gebe .PieceInfo );_gefbe .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gebe .LastModified );_gefbe .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gebe .StructParent );_gefbe .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gebe .StructParents );_gefbe .SetIfNotNil ("\u004f\u0050\u0049",_gebe .OPI );_gefbe .SetIfNotNil ("\u004f\u0043",_gebe .OC );_gefbe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gebe .Name );_gefbe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aaa .MakeInteger (int64 (len (_gebe .Stream ))));_eeea .Stream =_gebe .Stream ;return _eeea ;};type fontFile struct{_ccdeg string ;_dgda string ;_fdcgf _aa .SimpleEncoder ;};

// SetVersion sets the PDF version of the output file.
func (_fedf *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fedf ._fabf =majorVersion ;_fedf ._gbgcf =minorVersion ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_acfba *PdfPageResources )GetXObjectByName (keyName _aaa .PdfObjectName )(*_aaa .PdfObjectStream ,XObjectType ){if _acfba .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cafag ,_adfg :=_aaa .TraceToDirectObject (_acfba .XObject ).(*_aaa .PdfObjectDictionary );if !_adfg {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaa .TraceToDirectObject (_acfba .XObject ));return nil ,XObjectTypeUndefined ;};if _gefgb :=_cafag .Get (keyName );_gefgb !=nil {_gdcgf ,_adebf :=_aaa .GetStream (_gefgb );if !_adebf {_fe .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_gefgb );return nil ,XObjectTypeUndefined ;};_aagb :=_gdcgf .PdfObjectDictionary ;_gagcc ,_adebf :=_aaa .TraceToDirectObject (_aagb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_aaa .PdfObjectName );if !_adebf {_fe .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_aagb .String ());return nil ,XObjectTypeUndefined ;};if *_gagcc =="\u0049\u006d\u0061g\u0065"{return _gdcgf ,XObjectTypeImage ;}else if *_gagcc =="\u0046\u006f\u0072\u006d"{return _gdcgf ,XObjectTypeForm ;}else if *_gagcc =="\u0050\u0053"{return _gdcgf ,XObjectTypePS ;}else {_fe .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_gagcc );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};func _ccef (_gcbc _aaa .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fe .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gcbc .String (),_gcbc );_edfcb :=NewPdfColorspaceSpecialPattern ();if _cfdd ,_abee :=_gcbc .(*_aaa .PdfIndirectObject );_abee {_edfcb ._ccee =_cfdd ;};_gcbc =_aaa .TraceToDirectObject (_gcbc );if _gcbcf ,_baaf :=_gcbc .(*_aaa .PdfObjectName );_baaf {if *_gcbcf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _edfcb ,nil ;};_bcbba ,_febg :=_gcbc .(*_aaa .PdfObjectArray );if !_febg {_fe .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gcbc );return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bcbba .Len ()!=1&&_bcbba .Len ()!=2{_fe .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bcbba );return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gcbc =_bcbba .Get (0);if _bfge ,_bfda :=_gcbc .(*_aaa .PdfObjectName );_bfda {if *_bfge !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fe .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bfge );return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bcbba .Len ()> 1{_gcbc =_bcbba .Get (1);_gcbc =_aaa .TraceToDirectObject (_gcbc );_bbgc ,_ccff :=NewPdfColorspaceFromPdfObject (_gcbc );if _ccff !=nil {return nil ,_ccff ;};_edfcb .UnderlyingCS =_bbgc ;};_fe .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_edfcb .UnderlyingCS );return _edfcb ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_egbcf *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _aaa .GetNumberAsFloat (_egbcf .CapHeight );};

// SetShadingByName sets a shading resource specified by keyName.
func (_aecb *PdfPageResources )SetShadingByName (keyName _aaa .PdfObjectName ,shadingObj _aaa .PdfObject )error {if _aecb .Shading ==nil {_aecb .Shading =_aaa .MakeDict ();};_fbebf ,_deggc :=_aecb .Shading .(*_aaa .PdfObjectDictionary );if !_deggc {return _aaa .ErrTypeError ;};_fbebf .Set (keyName ,shadingObj );return nil ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ddbdc *_aaa .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_aaa .PdfObjectName ;Filter *_aaa .PdfObjectName ;SubFilter *_aaa .PdfObjectName ;Contents *_aaa .PdfObjectString ;Cert _aaa .PdfObject ;ByteRange *_aaa .PdfObjectArray ;Reference *_aaa .PdfObjectArray ;Changes *_aaa .PdfObjectArray ;Name *_aaa .PdfObjectString ;M *_aaa .PdfObjectString ;Location *_aaa .PdfObjectString ;Reason *_aaa .PdfObjectString ;ContactInfo *_aaa .PdfObjectString ;R *_aaa .PdfObjectInteger ;V *_aaa .PdfObjectInteger ;PropBuild *_aaa .PdfObjectDictionary ;PropAuthTime *_aaa .PdfObjectInteger ;PropAuthType *_aaa .PdfObjectName ;};func _dbfbd (_feacc []byte )bool {if len (_feacc )< 4{return true ;};for _gcafe :=range _feacc [:4]{_aecc :=rune (_gcafe );if !_a .Is (_a .ASCII_Hex_Digit ,_aecc )&&!_a .IsSpace (_aecc ){return true ;};};return false ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_fgda *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_adcec *PdfPageResources )SetXObjectByName (keyName _aaa .PdfObjectName ,stream *_aaa .PdfObjectStream )error {if _adcec .XObject ==nil {_adcec .XObject =_aaa .MakeDict ();};_dbega :=_aaa .TraceToDirectObject (_adcec .XObject );_effbg ,_gdgb :=_dbega .(*_aaa .PdfObjectDictionary );if !_gdgb {_fe .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_adcec .XObject ,_dbega );return _ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_effbg .Set (keyName ,stream );return nil ;};func _egfab (_ffbdc _aaa .PdfObject )(*PdfFunctionType3 ,error ){_bdce :=&PdfFunctionType3 {};var _bfgdf *_aaa .PdfObjectDictionary ;if _eaab ,_cgb :=_ffbdc .(*_aaa .PdfIndirectObject );_cgb {_ggedf ,_egdcc :=_eaab .PdfObject .(*_aaa .PdfObjectDictionary );if !_egdcc {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdce ._ddbe =_eaab ;_bfgdf =_ggedf ;}else if _bfac ,_badge :=_ffbdc .(*_aaa .PdfObjectDictionary );_badge {_bfgdf =_bfac ;}else {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffafd ,_edbd :=_aaa .TraceToDirectObject (_bfgdf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aaa .PdfObjectArray );if !_edbd {_fe .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ffafd .Len ()!=2{_fe .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ddbfe ,_fgfcf :=_ffafd .ToFloat64Array ();if _fgfcf !=nil {return nil ,_fgfcf ;};_bdce .Domain =_ddbfe ;_ffafd ,_edbd =_aaa .TraceToDirectObject (_bfgdf .Get ("\u0052\u0061\u006eg\u0065")).(*_aaa .PdfObjectArray );if _edbd {if _ffafd .Len ()< 0||_ffafd .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ecfaf ,_bgbdf :=_ffafd .ToFloat64Array ();if _bgbdf !=nil {return nil ,_bgbdf ;};_bdce .Range =_ecfaf ;};_ffafd ,_edbd =_aaa .TraceToDirectObject (_bfgdf .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_aaa .PdfObjectArray );if !_edbd {_fe .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bdce .Functions =[]PdfFunction {};for _ ,_fdaec :=range _ffafd .Elements (){_bbced ,_ffcfee :=_dbec (_fdaec );if _ffcfee !=nil {return nil ,_ffcfee ;};_bdce .Functions =append (_bdce .Functions ,_bbced );};_ffafd ,_edbd =_aaa .TraceToDirectObject (_bfgdf .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_aaa .PdfObjectArray );if !_edbd {_fe .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dgffb ,_fgfcf :=_ffafd .ToFloat64Array ();if _fgfcf !=nil {return nil ,_fgfcf ;};_bdce .Bounds =_dgffb ;if len (_bdce .Bounds )!=len (_bdce .Functions )-1{_fe .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_bdce .Bounds ),len (_bdce .Functions ));return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffafd ,_edbd =_aaa .TraceToDirectObject (_bfgdf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aaa .PdfObjectArray );if !_edbd {_fe .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aebb ,_fgfcf :=_ffafd .ToFloat64Array ();if _fgfcf !=nil {return nil ,_fgfcf ;};_bdce .Encode =_aebb ;if len (_bdce .Encode )!=2*len (_bdce .Functions ){_fe .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_bdce .Encode ),len (_bdce .Functions ));return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _bdce ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _aaa .PdfObject ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_gea :=NewPdfAction ();_ced :=&PdfActionURI {};_ced .PdfAction =_gea ;_gea .SetContext (_ced );return _ced ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cfcd *LTV )EnableAll (extraCerts []*_be .Certificate )error {_ddaa :=_cfcd ._gbedb ._efcg .AcroForm ;for _ ,_fgfad :=range _ddaa .AllFields (){_cgce ,_ :=_fgfad .GetContext ().(*PdfFieldSignature );if _cgce ==nil {continue ;};_bacabe :=_cgce .V ;if _ccbdc :=_cfcd .validateSig (_bacabe );_ccbdc !=nil {_fe .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ccbdc );};if _fbgfd :=_cfcd .Enable (_bacabe ,extraCerts );_fbgfd !=nil {return _fbgfd ;};};return nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_bffd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _bffd .AcroForm ==nil {return nil ,nil ;};if _bffd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ebfgg *PdfSignature ;_ccfbc *PdfField ;_gaae SignatureHandler ;};var _daff []*sigFieldPair ;for _ ,_dfag :=range _bffd .AcroForm .AllFields (){if _dfag .V ==nil {continue ;};if _dcdg ,_gcga :=_aaa .GetDict (_dfag .V );_gcga {if _feaccc ,_ddagae :=_aaa .GetNameVal (_dcdg .Get ("\u0054\u0079\u0070\u0065"));_ddagae &&_feaccc =="\u0053\u0069\u0067"{_dgbgc ,_eaad :=_aaa .GetIndirect (_dfag .V );if !_eaad {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_eafeg ,_fbgce :=_bffd .newPdfSignatureFromIndirect (_dgbgc );if _fbgce !=nil {return nil ,_fbgce ;};var _gfaag SignatureHandler ;for _ ,_aabbg :=range handlers {if _aabbg .IsApplicable (_eafeg ){_gfaag =_aabbg ;break ;};};_daff =append (_daff ,&sigFieldPair {_ebfgg :_eafeg ,_ccfbc :_dfag ,_gaae :_gfaag });};};};var _fbbec []SignatureValidationResult ;for _ ,_dfgbd :=range _daff {_fgcbe :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_dfgbd ._ccfbc }};if _dfgbd ._gaae ==nil {_fgcbe .Errors =append (_fgcbe .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_fbbec =append (_fbbec ,_fgcbe );continue ;};_cddaa ,_gdbca :=_dfgbd ._gaae .NewDigest (_dfgbd ._ebfgg );if _gdbca !=nil {_fgcbe .Errors =append (_fgcbe .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gdbca .Error ());_fbbec =append (_fbbec ,_fgcbe );continue ;};_fegff :=_dfgbd ._ebfgg .ByteRange ;if _fegff ==nil {_fgcbe .Errors =append (_fgcbe .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_fbbec =append (_fbbec ,_fgcbe );continue ;};for _ccffb :=0;_ccffb < _fegff .Len ();_ccffb =_ccffb +2{_dbae ,_ :=_aaa .GetNumberAsInt64 (_fegff .Get (_ccffb ));_bfede ,_ :=_aaa .GetIntVal (_fegff .Get (_ccffb +1));if _ ,_eecde :=_bffd ._ggbee .Seek (_dbae ,_agb .SeekStart );_eecde !=nil {return nil ,_eecde ;};_effbef :=make ([]byte ,_bfede );if _ ,_bdeb :=_bffd ._ggbee .Read (_effbef );_bdeb !=nil {return nil ,_bdeb ;};_cddaa .Write (_effbef );};_efbfa ,_gdbca :=_dfgbd ._gaae .Validate (_dfgbd ._ebfgg ,_cddaa );if _gdbca !=nil {return nil ,_gdbca ;};_efbfa .Name =_dfgbd ._ebfgg .Name .Decoded ();_efbfa .Reason =_dfgbd ._ebfgg .Reason .Decoded ();if _dfgbd ._ebfgg .M !=nil {_gebaf ,_gdffd :=NewPdfDate (_dfgbd ._ebfgg .M .String ());if _gdffd !=nil {_efbfa .Errors =append (_efbfa .Errors ,_gdffd .Error ());continue ;};_efbfa .Date =_gebaf ;};_efbfa .ContactInfo =_dfgbd ._ebfgg .ContactInfo .Decoded ();_efbfa .Location =_dfgbd ._ebfgg .Location .Decoded ();_efbfa .Fields =_fgcbe .Fields ;_fbbec =append (_fbbec ,_efbfa );};return _fbbec ,nil ;};func _ecfaa ()string {_eggb .Lock ();defer _eggb .Unlock ();if len (_bgcea )> 0{return _bgcea ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ToPdfObject implements interface PdfModel.
func (_bcgf *PdfAnnotationHighlight )ToPdfObject ()_aaa .PdfObject {_bcgf .PdfAnnotation .ToPdfObject ();_adgb :=_bcgf ._fdd ;_dfeg :=_adgb .PdfObject .(*_aaa .PdfObjectDictionary );_bcgf .PdfAnnotationMarkup .appendToPdfDictionary (_dfeg );_dfeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_dfeg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bcgf .QuadPoints );return _adgb ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_eace *PdfFieldButton )IsRadio ()bool {return _eace .GetType ()==ButtonTypeRadio };

// ToPdfObject implements interface PdfModel.
func (_eca *PdfActionThread )ToPdfObject ()_aaa .PdfObject {_eca .PdfAction .ToPdfObject ();_daa :=_eca ._afe ;_eb :=_daa .PdfObject .(*_aaa .PdfObjectDictionary );_eb .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeThread )));if _eca .F !=nil {_eb .Set ("\u0046",_eca .F .ToPdfObject ());};_eb .SetIfNotNil ("\u0044",_eca .D );_eb .SetIfNotNil ("\u0042",_eca .B );return _daa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gbfg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if _gbfg .Alternate ==nil {if _gbfg .N ==1{_dfb :=NewPdfColorspaceDeviceGray ();return _dfb .ColorFromPdfObjects (objects );}else if _gbfg .N ==3{_adff :=NewPdfColorspaceDeviceRGB ();return _adff .ColorFromPdfObjects (objects );}else if _gbfg .N ==4{_dddd :=NewPdfColorspaceDeviceCMYK ();return _dddd .ColorFromPdfObjects (objects );}else {return nil ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gbfg .Alternate .ColorFromPdfObjects (objects );};

// Encrypt encrypts the output file with a specified user/owner password.
func (_badfd *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_ccfdb :=RC4_128bit ;if options !=nil {_ccfdb =options .Algorithm ;};_bfdg :=_cb .PermOwner ;if options !=nil {_bfdg =options .Permissions ;};var _gbdaa _bba .Filter ;switch _ccfdb {case RC4_128bit :_gbdaa =_bba .NewFilterV2 (16);case AES_128bit :_gbdaa =_bba .NewFilterAESV2 ();case AES_256bit :_gbdaa =_bba .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_egcbc ,_daebc ,_bggab :=_aaa .PdfCryptNewEncrypt (_gbdaa ,userPass ,ownerPass ,_bfdg );if _bggab !=nil {return _bggab ;};_badfd ._acfad =_egcbc ;if _daebc .Major !=0{_badfd .SetVersion (_daebc .Major ,_daebc .Minor );};_badfd ._debea =_daebc .Encrypt ;_badfd ._ggaca =_aaa .MakeArray (_aaa .MakeHexString (_daebc .ID0 ),_aaa .MakeHexString (_daebc .ID1 ));_agccd :=_aaa .MakeIndirectObject (_daebc .Encrypt );_badfd ._eafdg =_agccd ;_badfd .addObject (_agccd );return nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ccce ,_gggbb :=_bef .Open (filePath );if _gggbb !=nil {_fe .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gggbb );return nil ,_gggbb ;};defer _ccce .Close ();return NewCompositePdfFontFromTTF (_ccce );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gaaf *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffeg ,_fdaea :=_aaa .GetNumbersAsFloat (objects );if _fdaea !=nil {return nil ,_fdaea ;};return _gaaf .ColorFromFloats (_ffeg );};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bbbfd *modelManager )GetModelFromPrimitive (primitive _aaa .PdfObject )PdfModel {model ,_bdedf :=_bbbfd ._adbdb [primitive ];if !_bdedf {return nil ;};return model ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_beedg *PdfWriter )AddPage (page *PdfPage )error {_fbacb (page );_feda :=page .ToPdfObject ();_fe .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_fe .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_feda );_bcagb ,_fbfag :=_aaa .GetIndirect (_feda );if !_fbfag {return _ee .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_fe .Log .Trace ("\u0025\u0073",_bcagb );_fe .Log .Trace ("\u0025\u0073",_bcagb .PdfObject );_cgeb ,_fbfag :=_aaa .GetDict (_bcagb .PdfObject );if !_fbfag {return _ee .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cgdfc ,_fbfag :=_aaa .GetName (_cgeb .Get ("\u0054\u0079\u0070\u0065"));if !_fbfag {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_cgeb .Get ("\u0054\u0079\u0070\u0065"));};if _cgdfc .String ()!="\u0050\u0061\u0067\u0065"{return _ee .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_bcbdg :=[]_aaa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_gbbcc ,_babcd :=_aaa .GetIndirect (_cgeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fe .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_cgeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_babcd );for _babcd {_fe .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbbcc );_eegef ,_fbbgf :=_aaa .GetDict (_gbbcc .PdfObject );if !_fbbgf {return _ee .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_bbcgc :=range _bcbdg {_fe .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bbcgc );if _cgeb .Get (_bbcgc )!=nil {_fe .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _dcdbb :=_eegef .Get (_bbcgc );_dcdbb !=nil {_fe .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bbcgc );_cgeb .Set (_bbcgc ,_dcdbb );};};_gbbcc ,_babcd =_aaa .GetIndirect (_eegef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fe .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eegef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fe .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_cgeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_beedg ._ffgad );_bcagb .PdfObject =_cgeb ;_cbbge ,_fbfag :=_aaa .GetDict (_beedg ._ffgad .PdfObject );if !_fbfag {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_daaaec ,_fbfag :=_aaa .GetArray (_cbbge .Get ("\u004b\u0069\u0064\u0073"));if !_fbfag {return _ee .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_daaaec .Append (_bcagb );_beedg ._ageec [_cgeb ]=struct{}{};_bdaae ,_fbfag :=_aaa .GetInt (_cbbge .Get ("\u0043\u006f\u0075n\u0074"));if !_fbfag {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_bdaae =*_bdaae +1;_beedg .addObject (_bcagb );_baacd :=_beedg .addObjects (_cgeb );if _baacd !=nil {return _baacd ;};return nil ;};func _deagb (_efbab []rune ,_ecac map[rune ]int ,_edcdc map[rune ]_gf .GID )*_aaa .PdfObjectArray {_adaca :=&_aaa .PdfObjectArray {};for _eeeeg :=0;_eeeeg < len (_efbab );{_dface :=_ecac [_efbab [_eeeeg ]];_becbb :=_eeeeg ;for _affea :=_eeeeg +1;_affea < len (_efbab );_affea ++{_gfced :=_ecac [_efbab [_affea ]];if _dface ==_gfced {_becbb =_affea ;}else {break ;};};_ccac :=_edcdc [_efbab [_eeeeg ]];_dcagc :=_edcdc [_efbab [_becbb ]];_adaca .Append (_aaa .MakeInteger (int64 (_ccac )));_adaca .Append (_aaa .MakeInteger (int64 (_dcagc )));_adaca .Append (_aaa .MakeInteger (int64 (_dface )));_eeeeg =_becbb +1;};return _adaca ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_fagdf *PdfPageResources )GetContainingPdfObject ()_aaa .PdfObject {return _fagdf ._gbcaa };

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aaa .PdfObject ;IC _aaa .PdfObject ;BE _aaa .PdfObject ;RD _aaa .PdfObject ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_dgbfg *PdfPage )error ;};

// ToPdfObject implements interface PdfModel.
func (_ebde *PdfAnnotationPrinterMark )ToPdfObject ()_aaa .PdfObject {_ebde .PdfAnnotation .ToPdfObject ();_ddg :=_ebde ._fdd ;_gbc :=_ddg .PdfObject .(*_aaa .PdfObjectDictionary );_gbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_gbc .SetIfNotNil ("\u004d\u004e",_ebde .MN );return _ddg ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_ebeab *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ddgb ,_bbcfe :=_aaa .GetDict (_ebeab ._fbfbc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_bbcfe {_ddgb =_aaa .MakeDict ();_ebeab ._fbfbc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ddgb );};_eedga ,_bbcfe :=_aaa .GetDict (_ddgb .Get (_aaa .PdfObjectName (extName )));if !_bbcfe {_eedga =_aaa .MakeDict ();_ddgb .Set (_aaa .PdfObjectName (extName ),_eedga );};if _cfgca ,_ :=_aaa .GetNameVal (_eedga .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_cfgca !=baseVersion {_eedga .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_aaa .MakeName (baseVersion ));};if _dbecb ,_ :=_aaa .GetIntVal (_eedga .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_dbecb !=extLevel {_eedga .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_aaa .MakeInteger (int64 (extLevel )));};};func (_aedg *PdfReader )newPdfAnnotationMarkupFromDict (_efae *_aaa .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_egdc :=&PdfAnnotationMarkup {};if _ecd :=_efae .Get ("\u0054");_ecd !=nil {_egdc .T =_ecd ;};if _ead :=_efae .Get ("\u0050\u006f\u0070u\u0070");_ead !=nil {_aef ,_afaf :=_ead .(*_aaa .PdfIndirectObject );if !_afaf {if _ ,_gfbf :=_ead .(*_aaa .PdfObjectNull );!_gfbf {return nil ,_ee .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_bfd ,_gda :=_aedg .newPdfAnnotationFromIndirectObject (_aef );if _gda !=nil {return nil ,_gda ;};if _bfd !=nil {_dabb ,_ebf :=_bfd ._adbe .(*PdfAnnotationPopup );if !_ebf {return nil ,_ee .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_egdc .Popup =_dabb ;};};};if _bgce :=_efae .Get ("\u0043\u0041");_bgce !=nil {_egdc .CA =_bgce ;};if _efce :=_efae .Get ("\u0052\u0043");_efce !=nil {_egdc .RC =_efce ;};if _cdfd :=_efae .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_cdfd !=nil {_egdc .CreationDate =_cdfd ;};if _bbad :=_efae .Get ("\u0049\u0052\u0054");_bbad !=nil {_egdc .IRT =_bbad ;};if _aeb :=_efae .Get ("\u0053\u0075\u0062\u006a");_aeb !=nil {_egdc .Subj =_aeb ;};if _bae :=_efae .Get ("\u0052\u0054");_bae !=nil {_egdc .RT =_bae ;};if _aae :=_efae .Get ("\u0049\u0054");_aae !=nil {_egdc .IT =_aae ;};if _efg :=_efae .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_efg !=nil {_egdc .ExData =_efg ;};return _egdc ,nil ;};func _edcec (_bfeeg _aaa .PdfObject ,_ecca *fontCommon )(*_eed .CMap ,error ){_aeebg ,_daabc :=_aaa .GetStream (_bfeeg );if !_daabc {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_bfeeg );return nil ,_aaa .ErrTypeError ;};_cbcba ,_feedc :=_aaa .DecodeStream (_aeebg );if _feedc !=nil {return nil ,_feedc ;};_dcddf ,_feedc :=_eed .LoadCmapFromData (_cbcba ,!_ecca .isCIDFont ());if _feedc !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_aeebg .ObjectNumber ,_feedc );};return _dcddf ,_feedc ;};func _abgbc ()*modelManager {_ccdbf :=modelManager {};_ccdbf ._dggf =map[PdfModel ]_aaa .PdfObject {};_ccdbf ._adbdb =map[_aaa .PdfObject ]PdfModel {};return &_ccdbf ;};func _gcef (_eaece *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_eaece }};

// Subtype returns the font's "Subtype" field.
func (_adee *PdfFont )Subtype ()string {_fgdef :=_adee .baseFields ()._fbeb ;if _feeba ,_cfafa :=_adee ._bbdc .(*pdfFontType0 );_cfafa {_fgdef =_fgdef +"\u003a"+_feeba .DescendantFont .Subtype ();};return _fgdef ;};var _gaf =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfActionGoTo )ToPdfObject ()_aaa .PdfObject {_fcg .PdfAction .ToPdfObject ();_faf :=_fcg ._afe ;_fag :=_faf .PdfObject .(*_aaa .PdfObjectDictionary );_fag .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeGoTo )));_fag .SetIfNotNil ("\u0044",_fcg .D );return _faf ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_dabcd :map[_aaa .PdfObject ]struct{}{},_egba :_abgbc (),_gcee :_aaa .NewParserFromString (txt )};};

// SetContext sets the sub annotation (context).
func (_eccf *PdfAnnotation )SetContext (ctx PdfModel ){_eccf ._adbe =ctx };func (_deaf *PdfReader )newPdfAnnotationLineFromDict (_egbg *_aaa .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_eaeb :=PdfAnnotationLine {};_afdg ,_egbc :=_deaf .newPdfAnnotationMarkupFromDict (_egbg );if _egbc !=nil {return nil ,_egbc ;};_eaeb .PdfAnnotationMarkup =_afdg ;_eaeb .L =_egbg .Get ("\u004c");_eaeb .BS =_egbg .Get ("\u0042\u0053");_eaeb .LE =_egbg .Get ("\u004c\u0045");_eaeb .IC =_egbg .Get ("\u0049\u0043");_eaeb .LL =_egbg .Get ("\u004c\u004c");_eaeb .LLE =_egbg .Get ("\u004c\u004c\u0045");_eaeb .Cap =_egbg .Get ("\u0043\u0061\u0070");_eaeb .IT =_egbg .Get ("\u0049\u0054");_eaeb .LLO =_egbg .Get ("\u004c\u004c\u004f");_eaeb .CP =_egbg .Get ("\u0043\u0050");_eaeb .Measure =_egbg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_eaeb .CO =_egbg .Get ("\u0043\u004f");return &_eaeb ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fafdde DefaultImageHandler )NewGrayImageFromGoImage (goimg _db .Image )(*Image ,error ){_eccg :=goimg .Bounds ();_facee :=&Image {Width :int64 (_eccg .Dx ()),Height :int64 (_eccg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fgeff :=goimg .(type ){case *_db .Gray :if len (_fgeff .Pix )!=_eccg .Dx ()*_eccg .Dy (){_gebga ,_adabe :=_bc .GrayConverter .Convert (goimg );if _adabe !=nil {return nil ,_adabe ;};_facee .Data =_gebga .Pix ();}else {_facee .Data =_fgeff .Pix ;};case *_db .Gray16 :_facee .BitsPerComponent =16;if len (_fgeff .Pix )!=_eccg .Dx ()*_eccg .Dy ()*2{_gfdb ,_fdec :=_bc .Gray16Converter .Convert (goimg );if _fdec !=nil {return nil ,_fdec ;};_facee .Data =_gfdb .Pix ();}else {_facee .Data =_fgeff .Pix ;};default:_aegbd ,_cgbc :=_bc .GrayConverter .Convert (goimg );if _cgbc !=nil {return nil ,_cgbc ;};_facee .Data =_aegbd .Pix ();};return _facee ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ffeb *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fe .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffab :=[]float64 {0.0};if _ffeb .C0 !=nil {_ffab =_ffeb .C0 ;};_fdeb :=[]float64 {1.0};if _ffeb .C1 !=nil {_fdeb =_ffeb .C1 ;};var _efgb []float64 ;for _cbffb :=0;_cbffb < len (_ffab );_cbffb ++{_dedaf :=_ffab [_cbffb ]+_dg .Pow (x [0],_ffeb .N )*(_fdeb [_cbffb ]-_ffab [_cbffb ]);_efgb =append (_efgb ,_dedaf );};return _efgb ,nil ;};func (_gdec *PdfReader )newPdfFieldFromIndirectObject (_dbcf *_aaa .PdfIndirectObject ,_fgee *PdfField )(*PdfField ,error ){if _acae ,_cgdbg :=_gdec ._egba .GetModelFromPrimitive (_dbcf ).(*PdfField );_cgdbg {return _acae ,nil ;};_fefed ,_dcb :=_aaa .GetDict (_dbcf );if !_dcb {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_feag :=NewPdfField ();_feag ._badf =_dbcf ;_feag ._badf .PdfObject =_fefed ;if _aeed ,_dafa :=_aaa .GetName (_fefed .Get ("\u0046\u0054"));_dafa {_feag .FT =_aeed ;};if _fgee !=nil {_feag .Parent =_fgee ;};_feag .T ,_ =_fefed .Get ("\u0054").(*_aaa .PdfObjectString );_feag .TU ,_ =_fefed .Get ("\u0054\u0055").(*_aaa .PdfObjectString );_feag .TM ,_ =_fefed .Get ("\u0054\u004d").(*_aaa .PdfObjectString );_feag .Ff ,_ =_fefed .Get ("\u0046\u0066").(*_aaa .PdfObjectInteger );_feag .V =_fefed .Get ("\u0056");_feag .DV =_fefed .Get ("\u0044\u0056");_feag .AA =_fefed .Get ("\u0041\u0041");_ebcab :=_feag .FT ;if _ebcab ==nil &&_fgee !=nil {_ebcab =_fgee .FT ;};if _ebcab !=nil {switch *_ebcab {case "\u0054\u0078":_babf ,_eegd :=_eadgc (_fefed );if _eegd !=nil {return nil ,_eegd ;};_babf .PdfField =_feag ;_feag ._fbbd =_babf ;case "\u0043\u0068":_bdba ,_eecag :=_cggd (_fefed );if _eecag !=nil {return nil ,_eecag ;};_bdba .PdfField =_feag ;_feag ._fbbd =_bdba ;case "\u0042\u0074\u006e":_bfeff ,_ggdca :=_bdeda (_fefed );if _ggdca !=nil {return nil ,_ggdca ;};_bfeff .PdfField =_feag ;_feag ._fbbd =_bfeff ;case "\u0053\u0069\u0067":_eada ,_fbaa :=_gdec .newPdfFieldSignatureFromDict (_fefed );if _fbaa !=nil {return nil ,_fbaa ;};_eada .PdfField =_feag ;_feag ._fbbd =_eada ;default:_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_feag .FT );return nil ,_ee .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _ecccc ,_fgga :=_aaa .GetName (_fefed .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_fgga {if *_ecccc =="\u0057\u0069\u0064\u0067\u0065\u0074"{_ecdd ,_afcf :=_gdec .newPdfAnnotationFromIndirectObject (_dbcf );if _afcf !=nil {return nil ,_afcf ;};_daaaa ,_abdf :=_ecdd .GetContext ().(*PdfAnnotationWidget );if !_abdf {return nil ,_ee .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_daaaa ._bcg =_feag ;_daaaa .Parent =_feag ._badf ;_feag .Annotations =append (_feag .Annotations ,_daaaa );return _feag ,nil ;};};_gcbd :=true ;if _dbag ,_egcgg :=_aaa .GetArray (_fefed .Get ("\u004b\u0069\u0064\u0073"));_egcgg {_ffdg :=make ([]*_aaa .PdfIndirectObject ,0,_dbag .Len ());for _ ,_abcac :=range _dbag .Elements (){_eefe ,_bbga :=_aaa .GetIndirect (_abcac );if !_bbga {_bbcff ,_ceaf :=_aaa .GetStream (_abcac );if _ceaf &&_bbcff .PdfObjectDictionary !=nil {_dgag ,_cebf :=_aaa .GetNameVal (_bbcff .Get ("\u0054\u0079\u0070\u0065"));if _cebf &&_dgag =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fe .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_ee .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cebdd ,_deeac :=_aaa .GetDict (_eefe );if !_deeac {return nil ,ErrTypeCheck ;};if _gcbd {_gcbd =!_ebdb (_cebdd );};_ffdg =append (_ffdg ,_eefe );};for _ ,_faffc :=range _ffdg {if _gcbd {_efdb ,_fbcc :=_gdec .newPdfAnnotationFromIndirectObject (_faffc );if _fbcc !=nil {_fe .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fbcc );return nil ,_fbcc ;};_egce ,_aeeb :=_efdb ._adbe .(*PdfAnnotationWidget );if !_aeeb {return nil ,ErrTypeCheck ;};_egce ._bcg =_feag ;_feag .Annotations =append (_feag .Annotations ,_egce );}else {_edeg ,_gbda :=_gdec .newPdfFieldFromIndirectObject (_faffc ,_feag );if _gbda !=nil {_fe .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_gbda );return nil ,_gbda ;};_feag .Kids =append (_feag .Kids ,_edeg );};};};return _feag ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_eade *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _eade .UnderlyingCS .GetNumComponents ();};func _gdeg (_bbgcb _aaa .PdfObject )(*_aaa .PdfObjectDictionary ,*fontCommon ,error ){_dcag :=&fontCommon {};if _eccce ,_bebe :=_bbgcb .(*_aaa .PdfIndirectObject );_bebe {_dcag ._cbfg =_eccce .ObjectNumber ;};_dcge ,_bgdf :=_aaa .GetDict (_bbgcb );if !_bgdf {_fe .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bbgcb );return nil ,nil ,ErrFontNotSupported ;};_abaae ,_bgdf :=_aaa .GetNameVal (_dcge .Get ("\u0054\u0079\u0070\u0065"));if !_bgdf {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _abaae !="\u0046\u006f\u006e\u0074"{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_abaae ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_aaa .ErrTypeError ;};_efde ,_bgdf :=_aaa .GetNameVal (_dcge .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bgdf {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_dcag ._fbeb =_efde ;_gddf ,_bgdf :=_aaa .GetNameVal (_dcge .Get ("\u004e\u0061\u006d\u0065"));if _bgdf {_dcag ._eabbf =_gddf ;};if _efde =="\u0054\u0079\u0070e\u0033"{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_dcge );return _dcge ,_dcag ,ErrType3FontNotSupported ;};_efffd ,_bgdf :=_aaa .GetNameVal (_dcge .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bgdf {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _dcge ,_dcag ,ErrRequiredAttributeMissing ;};_dcag ._edee =_efffd ;_ebfdcf :=_dcge .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _ebfdcf !=nil {_gaedc ,_cbgb :=_agbf (_ebfdcf );if _cbgb !=nil {_fe .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbgb );return _dcge ,_dcag ,_cbgb ;};_dcag ._ebcac =_gaedc ;};_beafe :=_dcge .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _beafe !=nil {_dcag ._bdae =_aaa .TraceToDirectObject (_beafe );_dedde ,_ebbb :=_edcec (_dcag ._bdae ,_dcag );if _ebbb !=nil {return _dcge ,_dcag ,_ebbb ;};_dcag ._fgcf =_dedde ;}else if _efde =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_efde =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fgebc ,_ddfbf :=_eed .NewCIDSystemInfo (_dcge .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _ddfbf !=nil {return _dcge ,_dcag ,_ddfbf ;};_ecebg :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fgebc .Registry ,_fgebc .Ordering );if _eed .IsPredefinedCMap (_ecebg ){_dcag ._fgcf ,_ddfbf =_eed .LoadPredefinedCMap (_ecebg );if _ddfbf !=nil {_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ecebg ,_ddfbf );};};};return _dcge ,_dcag ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_aaa .PdfObjectArray ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_dda :=NewPdfAnnotation ();_fcd :=&PdfAnnotationStrikeOut {};_fcd .PdfAnnotation =_dda ;_fcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dda .SetContext (_fcd );return _fcd ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_baac *pdfFontSimple )ToPdfObject ()_aaa .PdfObject {if _baac ._afbga ==nil {_baac ._afbga =&_aaa .PdfIndirectObject {};};_fcafg :=_baac .baseFields ().asPdfObjectDictionary ("");_baac ._afbga .PdfObject =_fcafg ;if _baac .FirstChar !=nil {_fcafg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_baac .FirstChar );};if _baac .LastChar !=nil {_fcafg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_baac .LastChar );};if _baac .Widths !=nil {_fcafg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_baac .Widths );};if _baac .Encoding !=nil {_fcafg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baac .Encoding );}else if _baac ._eggc !=nil {_efga :=_baac ._eggc .ToPdfObject ();if _efga !=nil {_fcafg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efga );};};return _baac ._afbga ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_eebbda _agb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_aedaf _db .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_eacga _db .Image )(*Image ,error );

// Compress an image.
Compress (_eddg *Image ,_fbbe int64 )(*Image ,error );};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_aadbe *_aaa .PdfIndirectObject ;};func (_acdd *PdfReader )newPdfActionNamedFromDict (_aac *_aaa .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_aac .Get ("\u004e")},nil ;};

// ToGoTime returns the date in time.Time format.
func (_abaefe PdfDate )ToGoTime ()_g .Time {_abfae :=int (_abaefe ._fdecg *60*60+_abaefe ._eaabg *60);switch _abaefe ._daef {case '-':_abfae =-_abfae ;case 'Z':_abfae =0;};_egfb :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_abaefe ._daef ,_abaefe ._fdecg ,_abaefe ._eaabg );_gaceb :=_g .FixedZone (_egfb ,_abfae );return _g .Date (int (_abaefe ._dabbb ),_g .Month (_abaefe ._ddfgec ),int (_abaefe ._facec ),int (_abaefe ._cbgfb ),int (_abaefe ._bceeb ),int (_abaefe ._faec ),0,_gaceb );};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_bgecd *PdfPageResources )HasFontByName (keyName _aaa .PdfObjectName )bool {_ ,_bafc :=_bgecd .GetFontByName (keyName );return _bafc ;};type modelManager struct{_dggf map[PdfModel ]_aaa .PdfObject ;_adbdb map[_aaa .PdfObject ]PdfModel ;};func (_cacee *Image )samplesTrimPadding (_fdafa []uint32 )[]uint32 {_cdde :=_cacee .ColorComponents *int (_cacee .Width )*int (_cacee .Height );if len (_fdafa )==_cdde {return _fdafa ;};_agbec :=make ([]uint32 ,_cdde );_cdec :=int (_cacee .Width )*_cacee .ColorComponents ;var _bgcf ,_begdg ,_eaee ,_gegbb int ;_efed :=_bc .BytesPerLine (int (_cacee .Width ),int (_cacee .BitsPerComponent ),_cacee .ColorComponents );for _bgcf =0;_bgcf < int (_cacee .Height );_bgcf ++{_begdg =_bgcf *int (_cacee .Width );_eaee =_bgcf *_efed ;for _gegbb =0;_gegbb < _cdec ;_gegbb ++{_agbec [_begdg +_gegbb ]=_fdafa [_eaee +_gegbb ];};};return _agbec ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_gedgg *PdfPageResources )SetFontByName (keyName _aaa .PdfObjectName ,obj _aaa .PdfObject )error {if _gedgg .Font ==nil {_gedgg .Font =_aaa .MakeDict ();};_feaegg ,_acefa :=_aaa .TraceToDirectObject (_gedgg .Font ).(*_aaa .PdfObjectDictionary );if !_acefa {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aaa .TraceToDirectObject (_gedgg .Font ));return _aaa .ErrTypeError ;};_feaegg .Set (keyName ,obj );return nil ;};func (_gceb *PdfReader )loadStructure ()error {if _gceb ._gcee .GetCrypter ()!=nil &&!_gceb ._gcee .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_affad :=_gceb ._gcee .GetTrailer ();if _affad ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_aagcca ,_cadd :=_affad .Get ("\u0052\u006f\u006f\u0074").(*_aaa .PdfObjectReference );if !_cadd {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_affad );};_abeg ,_gbbge :=_gceb ._gcee .LookupByReference (*_aagcca );if _gbbge !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gbbge );return _gbbge ;};_ffea ,_cadd :=_abeg .(*_aaa .PdfIndirectObject );if !_cadd {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_abeg ,*_affad );return _ee .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gccfg ,_cadd :=(*_ffea ).PdfObject .(*_aaa .PdfObjectDictionary );if !_cadd {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ffea .PdfObject );return _ee .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fe .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gccfg );_abeed ,_cadd :=_gccfg .Get ("\u0050\u0061\u0067e\u0073").(*_aaa .PdfObjectReference );if !_cadd {return _ee .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cacab ,_gbbge :=_gceb ._gcee .LookupByReference (*_abeed );if _gbbge !=nil {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _gbbge ;};_cadfd ,_cadd :=_cacab .(*_aaa .PdfIndirectObject );if !_cadd {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_fe .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_cadfd );return _ee .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ccgd ,_cadd :=_cadfd .PdfObject .(*_aaa .PdfObjectDictionary );if !_cadd {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_cadfd );return _ee .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ddcfg ,_cadd :=_aaa .GetInt (_ccgd .Get ("\u0043\u006f\u0075n\u0074"));if !_cadd {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _ee .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cadd =_aaa .GetName (_ccgd .Get ("\u0054\u0079\u0070\u0065"));!_cadd {_fe .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_ccgd .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0050\u0061\u0067e\u0073"));};_gceb ._gcge =_aagcca ;_gceb ._gdbc =_gccfg ;_gceb ._bdbde =_ccgd ;_gceb ._eeagd =_cadfd ;_gceb ._baaa =int (*_ddcfg );_gceb ._cfdf =[]*_aaa .PdfIndirectObject {};_efdd :=map[_aaa .PdfObject ]struct{}{};_gbbge =_gceb .buildPageList (_cadfd ,nil ,_efdd );if _gbbge !=nil {return _gbbge ;};_fe .Log .Trace ("\u002d\u002d\u002d");_fe .Log .Trace ("\u0054\u004f\u0043");_fe .Log .Trace ("\u0050\u0061\u0067e\u0073");_fe .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_gceb ._cfdf ),_gceb ._cfdf );_gceb ._afag ,_gbbge =_gceb .loadOutlines ();if _gbbge !=nil {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_gbbge );return _gbbge ;};_gceb .AcroForm ,_gbbge =_gceb .loadForms ();if _gbbge !=nil {return _gbbge ;};_gceb .DSS ,_gbbge =_gceb .loadDSS ();if _gbbge !=nil {return _gbbge ;};return nil ;};

// SetAnnotations sets the annotations list.
func (_gaeebd *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gaeebd ._edebg =annotations };func (_ggdg *PdfReader )newPdfActionGotoEFromDict (_gdb *_aaa .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dce ,_edg :=_gcg (_gdb .Get ("\u0046"));if _edg !=nil {return nil ,_edg ;};return &PdfActionGoToE {D :_gdb .Get ("\u0044"),NewWindow :_gdb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gdb .Get ("\u0054"),F :_dce },nil ;};func (_daad *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _daad ._gcee .GetCrypter ()!=nil &&!_daad ._gcee .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_ccffg :=_daad ._gdbc ;_adag :=_ccffg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _adag ==nil {return nil ,nil ;};_fbef ,_ :=_aaa .GetIndirect (_adag );_adag =_aaa .TraceToDirectObject (_adag );if _aaa .IsNullObject (_adag ){_fe .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_abbca ,_aedac :=_aaa .GetDict (_adag );if !_aedac {_fe .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_adag );_fe .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_adag );};_fe .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_fe .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_daad ._bcade {_gdaee :=_daad .traverseObjectData (_abbca );if _gdaee !=nil {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gdaee );return nil ,_gdaee ;};};_eecaac ,_ccfe :=_daad .newPdfAcroFormFromDict (_fbef ,_abbca );if _ccfe !=nil {return nil ,_ccfe ;};return _eecaac ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_eggf *OutlineItem )Add (item *OutlineItem ){_eggf .Entries =append (_eggf .Entries ,item )};func (_aaee *pdfFontSimple )addEncoding ()error {var (_fcfg string ;_gffc map[_aa .CharCode ]_aa .GlyphName ;_adcba _aa .SimpleEncoder ;);if _aaee .Encoder ()!=nil {_cgdeg ,_dbbaa :=_aaee .Encoder ().(_aa .SimpleEncoder );if _dbbaa &&_cgdeg !=nil {_fcfg =_cgdeg .BaseName ();};};if _aaee .Encoding !=nil {_ggbfa ,_fdac ,_fddb :=_aaee .getFontEncoding ();if _fddb !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aaee ._edee ,_aaee ._fbeb ,_aaee .Encoding ,_aaee .Encoding ,_fddb );return _fddb ;};if _ggbfa !=""{_fcfg =_ggbfa ;};_gffc =_fdac ;_adcba ,_fddb =_aa .NewSimpleTextEncoder (_fcfg ,_gffc );if _fddb !=nil {return _fddb ;};};if _adcba ==nil {_fgdfb :=_aaee ._ebcac ;if _fgdfb !=nil {switch _aaee ._fbeb {case "\u0054\u0079\u0070e\u0031":if _fgdfb .fontFile !=nil &&_fgdfb .fontFile ._fdcgf !=nil {_fe .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_adcba =_fgdfb .fontFile ._fdcgf ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fgdfb ._gbebb !=nil {_fe .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_caceg ,_eccfe :=_fgdfb ._gbebb .MakeEncoder ();if _eccfe ==nil {_adcba =_caceg ;};};};};};if _adcba !=nil {if _gffc !=nil {_fe .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gffc ,_aaee .baseFields ());_adcba =_aa .ApplyDifferences (_adcba ,_gffc );};_aaee .SetEncoder (_adcba );};return nil ;};var (CourierName =_gf .CourierName ;CourierBoldName =_gf .CourierBoldName ;CourierObliqueName =_gf .CourierObliqueName ;CourierBoldObliqueName =_gf .CourierBoldObliqueName ;HelveticaName =_gf .HelveticaName ;HelveticaBoldName =_gf .HelveticaBoldName ;HelveticaObliqueName =_gf .HelveticaObliqueName ;HelveticaBoldObliqueName =_gf .HelveticaBoldObliqueName ;SymbolName =_gf .SymbolName ;ZapfDingbatsName =_gf .ZapfDingbatsName ;TimesRomanName =_gf .TimesRomanName ;TimesBoldName =_gf .TimesBoldName ;TimesItalicName =_gf .TimesItalicName ;TimesBoldItalicName =_gf .TimesBoldItalicName ;);

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_eece *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_dgef :=0.3*_eece .R ()+0.59*_eece .G ()+0.11*_eece .B ();_dgef =_dg .Min (_dg .Max (_dgef ,0.0),1.0);return NewPdfColorDeviceGray (_dgef );};

// String returns the name of the colorspace (DeviceN).
func (_cddfd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_efeea *PdfPattern )GetContext ()PdfModel {return _efeea ._dgbgf };

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bfdb *Outline )Insert (index uint ,item *OutlineItem ){_bcdbe :=uint (len (_bfdb .Entries ));if index > _bcdbe {index =_bcdbe ;};_bfdb .Entries =append (_bfdb .Entries [:index ],append ([]*OutlineItem {item },_bfdb .Entries [index :]...)...);};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _aaa .PdfObject ;NewWindow _aaa .PdfObject ;T _aaa .PdfObject ;};

// Encoder returns the font's text encoder.
func (_ccgea pdfFontType0 )Encoder ()_aa .TextEncoder {return _ccgea ._gedd };

// ColorToRGB converts a CalGray color to an RGB color.
func (_feeb *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_edce ,_effb :=color .(*PdfColorCalGray );if !_effb {_fe .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_edce .Val ();X :=_feeb .WhitePoint [0]*_dg .Pow (ANorm ,_feeb .Gamma );Y :=_feeb .WhitePoint [1]*_dg .Pow (ANorm ,_feeb .Gamma );Z :=_feeb .WhitePoint [2]*_dg .Pow (ANorm ,_feeb .Gamma );_gag :=3.240479*X +-1.537150*Y +-0.498535*Z ;_aaba :=-0.969256*X +1.875992*Y +0.041556*Z ;_egaec :=0.055648*X +-0.204043*Y +1.057311*Z ;_gag =_dg .Min (_dg .Max (_gag ,0),1.0);_aaba =_dg .Min (_dg .Max (_aaba ,0),1.0);_egaec =_dg .Min (_dg .Max (_egaec ,0),1.0);return NewPdfColorDeviceRGB (_gag ,_aaba ,_egaec ),nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_gcbce *PdfAcroForm )AllFields ()[]*PdfField {if _gcbce ==nil {return nil ;};var _cadcc []*PdfField ;if _gcbce .Fields !=nil {for _ ,_dcfc :=range *_gcbce .Fields {_cadcc =append (_cadcc ,_fbdg (_dcfc )...);};};return _cadcc ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ebae *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ebae .Range };func _adfb (_gdggea *_aaa .PdfObjectDictionary ,_edeb *fontCommon )(*pdfCIDFontType0 ,error ){if _edeb ._fbeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fe .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_edeb );return nil ,_aaa .ErrRangeError ;};_aagc :=_gcef (_edeb );_gdddc ,_befb :=_aaa .GetDict (_gdggea .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_befb {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_edeb );return nil ,ErrRequiredAttributeMissing ;};_aagc .CIDSystemInfo =_gdddc ;_aagc .DW =_gdggea .Get ("\u0044\u0057");_aagc .W =_gdggea .Get ("\u0057");_aagc .DW2 =_gdggea .Get ("\u0044\u0057\u0032");_aagc .W2 =_gdggea .Get ("\u0057\u0032");_aagc ._ddgfb =1000.0;if _degc ,_edfae :=_aaa .GetNumberAsFloat (_aagc .DW );_edfae ==nil {_aagc ._ddgfb =_degc ;};_edcda ,_egbd :=_afcga (_aagc .W );if _egbd !=nil {return nil ,_egbd ;};if _edcda ==nil {_edcda =map[_aa .CharCode ]float64 {};};_aagc ._gffa =_edcda ;return _aagc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_agbg *PdfAnnotationMovie )ToPdfObject ()_aaa .PdfObject {_agbg .PdfAnnotation .ToPdfObject ();_dfc :=_agbg ._fdd ;_aab :=_dfc .PdfObject .(*_aaa .PdfObjectDictionary );_aab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u004d\u006f\u0076i\u0065"));_aab .SetIfNotNil ("\u0054",_agbg .T );_aab .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_agbg .Movie );_aab .SetIfNotNil ("\u0041",_agbg .A );return _dfc ;};func (_fefc *PdfField )inherit (_fbgb func (*PdfField )bool )(bool ,error ){_bded :=map[*PdfField ]bool {};_gfag :=false ;_adbec :=_fefc ;for _adbec !=nil {if _ ,_bdee :=_bded [_adbec ];_bdee {return false ,_ee .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_bggff :=_fbgb (_adbec );if _bggff {_gfag =true ;break ;};_bded [_adbec ]=true ;_adbec =_adbec .Parent ;};return _gfag ,nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_badf :_aaa .MakeIndirectObject (_aaa .MakeDict ())}};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfce *PdfShadingType6 )ToPdfObject ()_aaa .PdfObject {_bfce .PdfShading .ToPdfObject ();_gagd ,_fbbge :=_bfce .getShadingDict ();if _fbbge !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bfce .BitsPerCoordinate !=nil {_gagd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bfce .BitsPerCoordinate );};if _bfce .BitsPerComponent !=nil {_gagd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfce .BitsPerComponent );};if _bfce .BitsPerFlag !=nil {_gagd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bfce .BitsPerFlag );};if _bfce .Decode !=nil {_gagd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfce .Decode );};if _bfce .Function !=nil {if len (_bfce .Function )==1{_gagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfce .Function [0].ToPdfObject ());}else {_bdcea :=_aaa .MakeArray ();for _ ,_adgae :=range _bfce .Function {_bdcea .Append (_adgae .ToPdfObject ());};_gagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdcea );};};return _bfce ._cfade ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_aega *OutlineItem )ToPdfObject ()_aaa .PdfObject {_bccc ,_ :=_aega .ToPdfOutlineItem ();return _bccc .ToPdfObject ();};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_defgb *PdfPageResources )SetXObjectFormByName (keyName _aaa .PdfObjectName ,xform *XObjectForm )error {_ccfgd :=xform .ToPdfObject ().(*_aaa .PdfObjectStream );_gafcd :=_defgb .SetXObjectByName (keyName ,_ccfgd );return _gafcd ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_eeg *PdfReader )newPdfActionResetFormFromDict (_gee *_aaa .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gee .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gee .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ege *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ege .updateObjectsDeep (dss .ToPdfObject (),nil );};_ege ._bad =dss ;};func (_efdfa *PdfWriter )writeObject (_caaeg int ,_dagfg _aaa .PdfObject ){_fe .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_caaeg );if _gbbd ,_daafb :=_dagfg .(*_aaa .PdfIndirectObject );_daafb {_efdfa ._cdaec [_caaeg ]=crossReference {Type :1,Offset :_efdfa ._ddec ,Generation :_gbbd .GenerationNumber };_fdcc :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_caaeg );if _dddea ,_aggc :=_gbbd .PdfObject .(*pdfSignDictionary );_aggc {_dddea ._abda =_efdfa ._ddec +int64 (len (_fdcc ));};if _gbbd .PdfObject ==nil {_fe .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_gbbd .PdfObject =_aaa .MakeNull ();};_fdcc +=_gbbd .PdfObject .WriteString ();_fdcc +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_efdfa .writeString (_fdcc );return ;};if _dffdge ,_bdgae :=_dagfg .(*_aaa .PdfObjectStream );_bdgae {_efdfa ._cdaec [_caaeg ]=crossReference {Type :1,Offset :_efdfa ._ddec ,Generation :_dffdge .GenerationNumber };_dbedb :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_caaeg );_dbedb +=_dffdge .PdfObjectDictionary .WriteString ();_dbedb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_efdfa .writeString (_dbedb );_efdfa .writeBytes (_dffdge .Stream );_efdfa .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fafe ,_aace :=_dagfg .(*_aaa .PdfObjectStreams );_aace {_efdfa ._cdaec [_caaeg ]=crossReference {Type :1,Offset :_efdfa ._ddec ,Generation :_fafe .GenerationNumber };_efabb :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_caaeg );var _fabc []string ;var _cfbcg string ;var _cbfeb int64 ;for _fdaegc ,_afbae :=range _fafe .Elements (){_gggfaa ,_ggfde :=_afbae .(*_aaa .PdfIndirectObject );if !_ggfde {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_caaeg ,_afbae );continue ;};_bcfbf :=_gggfaa .PdfObject .WriteString ()+"\u0020";_cfbcg =_cfbcg +_bcfbf ;_fabc =append (_fabc ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_gggfaa .ObjectNumber ,_cbfeb ));_efdfa ._cdaec [int (_gggfaa .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_caaeg ,Index :_fdaegc };_cbfeb =_cbfeb +int64 (len ([]byte (_bcfbf )));};_addbe :=_af .Join (_fabc ,"\u0020")+"\u0020";_afafb :=_aaa .NewFlateEncoder ();_cbbc :=_afafb .MakeStreamDict ();_cbbc .Set (_aaa .PdfObjectName ("\u0054\u0079\u0070\u0065"),_aaa .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_gggde :=int64 (_fafe .Len ());_cbbc .Set (_aaa .PdfObjectName ("\u004e"),_aaa .MakeInteger (_gggde ));_babedg :=int64 (len (_addbe ));_cbbc .Set (_aaa .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_aaa .MakeInteger (_babedg ));_aggcc ,_ :=_afafb .EncodeBytes ([]byte (_addbe +_cfbcg ));_afeag :=int64 (len (_aggcc ));_cbbc .Set (_aaa .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_aaa .MakeInteger (_afeag ));_efabb +=_cbbc .WriteString ();_efabb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_efdfa .writeString (_efabb );_efdfa .writeBytes (_aggcc );_efdfa .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_efdfa .writeString (_dagfg .WriteString ());};

// ToPdfObject returns a PDF object representation of the outline.
func (_aced *Outline )ToPdfObject ()_aaa .PdfObject {return _aced .ToPdfOutline ().ToPdfObject ()};

// Val returns the color value.
func (_efcce *PdfColorDeviceGray )Val ()float64 {return float64 (*_efcce )};func _bfada (_affa _aaa .PdfObject )(*PdfPageResourcesColorspaces ,error ){_dffec :=&PdfPageResourcesColorspaces {};if _bddeb ,_dgfbb :=_affa .(*_aaa .PdfIndirectObject );_dgfbb {_dffec ._ggddf =_bddeb ;_affa =_bddeb .PdfObject ;};_aagdg ,_cgdba :=_aaa .GetDict (_affa );if !_cgdba {return nil ,_ee .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dffec .Names =[]string {};_dffec .Colorspaces =map[string ]PdfColorspace {};for _ ,_eeaff :=range _aagdg .Keys (){_adfac :=_aagdg .Get (_eeaff );_dffec .Names =append (_dffec .Names ,string (_eeaff ));_cceca ,_fgbcc :=NewPdfColorspaceFromPdfObject (_adfac );if _fgbcc !=nil {return nil ,_fgbcc ;};_dffec .Colorspaces [string (_eeaff )]=_cceca ;};return _dffec ,nil ;};func (_ggdcd *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _aeba []*PdfFieldSignature ;for _ ,_fbdag :=range _ggdcd .AllFields (){switch _ddagc :=_fbdag .GetContext ().(type ){case *PdfFieldSignature :_addea :=_ddagc ;_aeba =append (_aeba ,_addea );};};return _aeba ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_fbbd PdfModel ;_badf *_aaa .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_aaa .PdfObjectName ;T *_aaa .PdfObjectString ;TU *_aaa .PdfObjectString ;TM *_aaa .PdfObjectString ;Ff *_aaa .PdfObjectInteger ;V _aaa .PdfObject ;DV _aaa .PdfObject ;AA _aaa .PdfObject ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_aaa .PdfObjectInteger ;BitsPerComponent *_aaa .PdfObjectInteger ;BitsPerFlag *_aaa .PdfObjectInteger ;Decode *_aaa .PdfObjectArray ;Function []PdfFunction ;};var (_gaeeg =_ag .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_cgegf =_ag .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_degca =_ag .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_edegf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_cgfdd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gebc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// ToPdfObject implements interface PdfModel.
func (_cadgf *PdfAnnotationSquiggly )ToPdfObject ()_aaa .PdfObject {_cadgf .PdfAnnotation .ToPdfObject ();_fdc :=_cadgf ._fdd ;_aedb :=_fdc .PdfObject .(*_aaa .PdfObjectDictionary );_cadgf .PdfAnnotationMarkup .appendToPdfDictionary (_aedb );_aedb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_aedb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cadgf .QuadPoints );return _fdc ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_edfa *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// G returns the value of the green component of the color.
func (_baae *PdfColorDeviceRGB )G ()float64 {return _baae [1]};func (_cebag *PdfReader )newPdfAnnotationTrapNetFromDict (_ggbe *_aaa .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bdf :=PdfAnnotationTrapNet {};return &_bdf ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_aaa .PdfObjectInteger ;BitsPerComponent *_aaa .PdfObjectInteger ;BitsPerFlag *_aaa .PdfObjectInteger ;Decode *_aaa .PdfObjectArray ;Function []PdfFunction ;};func _cggd (_dcfe *_aaa .PdfObjectDictionary )(*PdfFieldChoice ,error ){_ecff :=&PdfFieldChoice {};_ecff .Opt ,_ =_aaa .GetArray (_dcfe .Get ("\u004f\u0070\u0074"));_ecff .TI ,_ =_aaa .GetInt (_dcfe .Get ("\u0054\u0049"));_ecff .I ,_ =_aaa .GetArray (_dcfe .Get ("\u0049"));return _ecff ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cbdeg *Image )ToGoImage ()(_db .Image ,error ){_fe .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_fdbe ,_aageb :=_bc .NewImage (int (_cbdeg .Width ),int (_cbdeg .Height ),int (_cbdeg .BitsPerComponent ),_cbdeg .ColorComponents ,_cbdeg .Data ,_cbdeg ._agebab ,_cbdeg ._ggcd );if _aageb !=nil {return nil ,_aageb ;};return _fdbe ,nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gbg :=NewPdfAction ();_agbb :=&PdfActionSound {};_agbb .PdfAction =_gbg ;_gbg .SetContext (_agbb );return _agbb ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_acfg pdfFontSimple )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){if _acfg ._fddd !=nil {_dffg ,_dfba :=_acfg ._fddd [r ];if _dfba {return _dffg ,true ;};};_dfdega :=_acfg .Encoder ();if _dfdega ==nil {_fe .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_acfg );return _gf .CharMetrics {},false ;};_bdbc ,_deabf :=_dfdega .RuneToCharcode (r );if !_deabf {if r !=' '{_fe .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_acfg );};return _gf .CharMetrics {},false ;};_cccg ,_ffaf :=_acfg .GetCharMetrics (_bdbc );return _cccg ,_ffaf ;};func (_deae *LTV )getCRLs (_bgab []*_be .Certificate )([][]byte ,error ){_fbee :=make ([][]byte ,0,len (_bgab ));for _ ,_ddfe :=range _bgab {for _ ,_cdga :=range _ddfe .CRLDistributionPoints {if _deae .CertClient .IsCA (_ddfe ){continue ;};_fbeee ,_fgdce :=_deae .CRLClient .MakeRequest (_cdga ,_ddfe );if _fgdce !=nil {_fe .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fgdce );continue ;};_fbee =append (_fbee ,_fbeee );};};return _fbee ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_ggbcf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _ggbcf ._bbdc .getFontDescriptor (),nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_dgefcf *PdfPage )AppendContentStream (contentStr string )error {_eebbf ,_badgfa :=_dgefcf .GetContentStreams ();if _badgfa !=nil {return _badgfa ;};if len (_eebbf )==0{_eebbf =[]string {contentStr };return _dgefcf .SetContentStreams (_eebbf ,_aaa .NewFlateEncoder ());};var _begc _bb .Buffer ;_begc .WriteString (_eebbf [len (_eebbf )-1]);_begc .WriteString ("\u000a");_begc .WriteString (contentStr );_eebbf [len (_eebbf )-1]=_begc .String ();return _dgefcf .SetContentStreams (_eebbf ,_aaa .NewFlateEncoder ());};func _dgfba (_gecf *_aaa .PdfObjectDictionary )(*PdfShadingType6 ,error ){_bgfef :=PdfShadingType6 {};_dfgdf :=_gecf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dfgdf ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cedf ,_fedd :=_dfgdf .(*_aaa .PdfObjectInteger );if !_fedd {_fe .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfgdf );return nil ,_aaa .ErrTypeError ;};_bgfef .BitsPerCoordinate =_cedf ;_dfgdf =_gecf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dfgdf ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cedf ,_fedd =_dfgdf .(*_aaa .PdfObjectInteger );if !_fedd {_fe .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dfgdf );return nil ,_aaa .ErrTypeError ;};_bgfef .BitsPerComponent =_cedf ;_dfgdf =_gecf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dfgdf ==nil {_fe .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cedf ,_fedd =_dfgdf .(*_aaa .PdfObjectInteger );if !_fedd {_fe .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dfgdf );return nil ,_aaa .ErrTypeError ;};_bgfef .BitsPerComponent =_cedf ;_dfgdf =_gecf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dfgdf ==nil {_fe .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_egfcab ,_fedd :=_dfgdf .(*_aaa .PdfObjectArray );if !_fedd {_fe .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfgdf );return nil ,_aaa .ErrTypeError ;};_bgfef .Decode =_egfcab ;if _ddcgef :=_gecf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ddcgef !=nil {_bgfef .Function =[]PdfFunction {};if _effbf ,_cded :=_ddcgef .(*_aaa .PdfObjectArray );_cded {for _ ,_dffdc :=range _effbf .Elements (){_ggdba ,_fbabc :=_dbec (_dffdc );if _fbabc !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbabc );return nil ,_fbabc ;};_bgfef .Function =append (_bgfef .Function ,_ggdba );};}else {_beeecb ,_dbgbb :=_dbec (_ddcgef );if _dbgbb !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbgbb );return nil ,_dbgbb ;};_bgfef .Function =append (_bgfef .Function ,_beeecb );};};return &_bgfef ,nil ;};func _cafad (_fbdff _aaa .PdfObject )(*PdfShading ,error ){_fagdd :=&PdfShading {};var _bdcfb *_aaa .PdfObjectDictionary ;if _dbedgg ,_bcea :=_aaa .GetIndirect (_fbdff );_bcea {_fagdd ._cfade =_dbedgg ;_eeafb ,_gfegc :=_dbedgg .PdfObject .(*_aaa .PdfObjectDictionary );if !_gfegc {_fe .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aaa .ErrTypeError ;};_bdcfb =_eeafb ;}else if _fffbd ,_ggaef :=_aaa .GetStream (_fbdff );_ggaef {_fagdd ._cfade =_fffbd ;_bdcfb =_fffbd .PdfObjectDictionary ;}else if _agcabb ,_fgaeb :=_aaa .GetDict (_fbdff );_fgaeb {_fagdd ._cfade =_agcabb ;_bdcfb =_agcabb ;}else {_fe .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_fbdff );return nil ,_aaa .ErrTypeError ;};if _bdcfb ==nil {_fe .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ee .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fbdff =_bdcfb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fbdff ==nil {_fe .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbdff =_aaa .TraceToDirectObject (_fbdff );_dgeba ,_degff :=_fbdff .(*_aaa .PdfObjectInteger );if !_degff {_fe .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fbdff );return nil ,_aaa .ErrTypeError ;};if *_dgeba < 1||*_dgeba > 7{_fe .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_dgeba );return nil ,_aaa .ErrTypeError ;};_fagdd .ShadingType =_dgeba ;_fbdff =_bdcfb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _fbdff ==nil {_fe .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aadfa ,_fdfcf :=NewPdfColorspaceFromPdfObject (_fbdff );if _fdfcf !=nil {_fe .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_fdfcf );return nil ,_fdfcf ;};_fagdd .ColorSpace =_aadfa ;_fbdff =_bdcfb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _fbdff !=nil {_fbdff =_aaa .TraceToDirectObject (_fbdff );_cfccf ,_gggce :=_fbdff .(*_aaa .PdfObjectArray );if !_gggce {_fe .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fbdff );return nil ,_aaa .ErrTypeError ;};_fagdd .Background =_cfccf ;};_fbdff =_bdcfb .Get ("\u0042\u0042\u006f\u0078");if _fbdff !=nil {_fbdff =_aaa .TraceToDirectObject (_fbdff );_baddeb ,_gfadc :=_fbdff .(*_aaa .PdfObjectArray );if !_gfadc {_fe .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fbdff );return nil ,_aaa .ErrTypeError ;};_acedf ,_bdedb :=NewPdfRectangle (*_baddeb );if _bdedb !=nil {_fe .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bdedb );return nil ,_bdedb ;};_fagdd .BBox =_acedf ;};_fbdff =_bdcfb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _fbdff !=nil {_fbdff =_aaa .TraceToDirectObject (_fbdff );_cccec ,_fagab :=_fbdff .(*_aaa .PdfObjectBool );if !_fagab {_fe .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbdff );return nil ,_aaa .ErrTypeError ;};_fagdd .AntiAlias =_cccec ;};switch *_dgeba {case 1:_acdcd ,_cbfe :=_befce (_bdcfb );if _cbfe !=nil {return nil ,_cbfe ;};_acdcd .PdfShading =_fagdd ;_fagdd ._bgcdf =_acdcd ;return _fagdd ,nil ;case 2:_fbab ,_ebaed :=_gaba (_bdcfb );if _ebaed !=nil {return nil ,_ebaed ;};_fbab .PdfShading =_fagdd ;_fagdd ._bgcdf =_fbab ;return _fagdd ,nil ;case 3:_agbbe ,_afca :=_gdag (_bdcfb );if _afca !=nil {return nil ,_afca ;};_agbbe .PdfShading =_fagdd ;_fagdd ._bgcdf =_agbbe ;return _fagdd ,nil ;case 4:_gcdg ,_fbdc :=_bbeaa (_bdcfb );if _fbdc !=nil {return nil ,_fbdc ;};_gcdg .PdfShading =_fagdd ;_fagdd ._bgcdf =_gcdg ;return _fagdd ,nil ;case 5:_geaa ,_dffb :=_dgfecc (_bdcfb );if _dffb !=nil {return nil ,_dffb ;};_geaa .PdfShading =_fagdd ;_fagdd ._bgcdf =_geaa ;return _fagdd ,nil ;case 6:_dgddd ,_gbcab :=_dgfba (_bdcfb );if _gbcab !=nil {return nil ,_gbcab ;};_dgddd .PdfShading =_fagdd ;_fagdd ._bgcdf =_dgddd ;return _fagdd ,nil ;case 7:_babed ,_daadd :=_cdfda (_bdcfb );if _daadd !=nil {return nil ,_daadd ;};_babed .PdfShading =_fagdd ;_fagdd ._bgcdf =_babed ;return _fagdd ,nil ;};return nil ,_ee .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _aaa .PdfObject ;T3DV _aaa .PdfObject ;T3DA _aaa .PdfObject ;T3DI _aaa .PdfObject ;T3DB _aaa .PdfObject ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dgde *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fgaaf ,_ddcg :=color .(*PdfColorCalRGB );if !_ddcg {_fe .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afgf :=_fgaaf .A ();_dfgeb :=_fgaaf .B ();_bfee :=_fgaaf .C ();X :=_dgde .Matrix [0]*_dg .Pow (_afgf ,_dgde .Gamma [0])+_dgde .Matrix [3]*_dg .Pow (_dfgeb ,_dgde .Gamma [1])+_dgde .Matrix [6]*_dg .Pow (_bfee ,_dgde .Gamma [2]);Y :=_dgde .Matrix [1]*_dg .Pow (_afgf ,_dgde .Gamma [0])+_dgde .Matrix [4]*_dg .Pow (_dfgeb ,_dgde .Gamma [1])+_dgde .Matrix [7]*_dg .Pow (_bfee ,_dgde .Gamma [2]);Z :=_dgde .Matrix [2]*_dg .Pow (_afgf ,_dgde .Gamma [0])+_dgde .Matrix [5]*_dg .Pow (_dfgeb ,_dgde .Gamma [1])+_dgde .Matrix [8]*_dg .Pow (_bfee ,_dgde .Gamma [2]);_cbc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bcee :=-0.969256*X +1.875992*Y +0.041556*Z ;_aacc :=0.055648*X +-0.204043*Y +1.057311*Z ;_cbc =_dg .Min (_dg .Max (_cbc ,0),1.0);_bcee =_dg .Min (_dg .Max (_bcee ,0),1.0);_aacc =_dg .Min (_dg .Max (_aacc ,0),1.0);return NewPdfColorDeviceRGB (_cbc ,_bcee ,_aacc ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecab *PdfAnnotationFreeText )ToPdfObject ()_aaa .PdfObject {_ecab .PdfAnnotation .ToPdfObject ();_dbbc :=_ecab ._fdd ;_afg :=_dbbc .PdfObject .(*_aaa .PdfObjectDictionary );_ecab .PdfAnnotationMarkup .appendToPdfDictionary (_afg );_afg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_afg .SetIfNotNil ("\u0044\u0041",_ecab .DA );_afg .SetIfNotNil ("\u0051",_ecab .Q );_afg .SetIfNotNil ("\u0052\u0043",_ecab .RC );_afg .SetIfNotNil ("\u0044\u0053",_ecab .DS );_afg .SetIfNotNil ("\u0043\u004c",_ecab .CL );_afg .SetIfNotNil ("\u0049\u0054",_ecab .IT );_afg .SetIfNotNil ("\u0042\u0045",_ecab .BE );_afg .SetIfNotNil ("\u0052\u0044",_ecab .RD );_afg .SetIfNotNil ("\u0042\u0053",_ecab .BS );_afg .SetIfNotNil ("\u004c\u0045",_ecab .LE );return _dbbc ;};

// GetSubFilter returns SubFilter value or empty string.
func (_acedc *pdfSignDictionary )GetSubFilter ()string {_dbfa :=_acedc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dbfa ==nil {return "";};if _gddggc ,_fbde :=_aaa .GetNameVal (_dbfa );_fbde {return _gddggc ;};return "";};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gaaa *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fe .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_ee .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_aed *PdfReader )newPdfActionRenditionFromDict (_gcc *_aaa .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gcc .Get ("\u0052"),AN :_gcc .Get ("\u0041\u004e"),OP :_gcc .Get ("\u004f\u0050"),JS :_gcc .Get ("\u004a\u0053")},nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_cfgcg *PdfTilingPattern )ToPdfObject ()_aaa .PdfObject {_cfgcg .PdfPattern .ToPdfObject ();_adbda :=_cfgcg .getDict ();if _cfgcg .PaintType !=nil {_adbda .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_cfgcg .PaintType );};if _cfgcg .TilingType !=nil {_adbda .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cfgcg .TilingType );};if _cfgcg .BBox !=nil {_adbda .Set ("\u0042\u0042\u006f\u0078",_cfgcg .BBox .ToPdfObject ());};if _cfgcg .XStep !=nil {_adbda .Set ("\u0058\u0053\u0074e\u0070",_cfgcg .XStep );};if _cfgcg .YStep !=nil {_adbda .Set ("\u0059\u0053\u0074e\u0070",_cfgcg .YStep );};if _cfgcg .Resources !=nil {_adbda .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cfgcg .Resources .ToPdfObject ());};if _cfgcg .Matrix !=nil {_adbda .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cfgcg .Matrix );};return _cfgcg ._eabbc ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_cggf *PdfFieldSignature )ToPdfObject ()_aaa .PdfObject {if _cggf .PdfAnnotationWidget !=nil {_cggf .PdfAnnotationWidget .ToPdfObject ();};_cggf .PdfField .ToPdfObject ();_faadg :=_cggf ._badf ;_egca :=_faadg .PdfObject .(*_aaa .PdfObjectDictionary );_egca .SetIfNotNil ("\u0046\u0054",_aaa .MakeName ("\u0053\u0069\u0067"));_egca .SetIfNotNil ("\u004c\u006f\u0063\u006b",_cggf .Lock );_egca .SetIfNotNil ("\u0053\u0056",_cggf .SV );if _cggf .V !=nil {_egca .SetIfNotNil ("\u0056",_cggf .V .ToPdfObject ());};return _faadg ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_dbbb :=&PdfFieldSignature {};_dbbb .PdfField =NewPdfField ();_dbbb .PdfField .SetContext (_dbbb );_dbbb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_dbbb .PdfAnnotationWidget .SetContext (_dbbb );_dbbb .PdfAnnotationWidget ._fdd =_dbbb .PdfField ._badf ;_dbbb .T =_aaa .MakeString ("");_dbbb .F =_aaa .MakeInteger (132);_dbbb .V =signature ;return _dbbb ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_eeee *PdfFont )CharcodesToStrings (charcodes []_aa .CharCode )([]string ,int ,int ){_bbge :=_eeee .baseFields ();_fecc :=make ([]string ,0,len (charcodes ));_eeedf :=0;for _ ,_fagg :=range charcodes {if _bbge ._fgcf !=nil {if _efdf ,_dafab :=_bbge ._fgcf .CharcodeToUnicode (_eed .CharCode (_fagg ));_dafab {_fecc =append (_fecc ,_efdf );continue ;};};_aebe :=_eeee .Encoder ();if _aebe !=nil {if _ebacd ,_ccfgb :=_aebe .CharcodeToRune (_fagg );_ccfgb {_fecc =append (_fecc ,string (_ebacd ));continue ;};};_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fagg ,charcodes ,_bbge .isCIDFont (),_eeee ,_aebe );_eeedf ++;_fecc =append (_fecc ,_eed .MissingCodeString );};if _eeedf !=0{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_eeedf ,_eeee );};return _fecc ,len (_fecc ),_eeedf ;};

// GetPage returns the PdfPage model for the specified page number.
func (_cedd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cedd ._gcee .GetCrypter ()!=nil &&!_cedd ._gcee .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_cedd ._cfdf )< pageNumber {return nil ,_ee .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_ebbg :=pageNumber -1;if _ebbg < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_dabgc :=_cedd .PageList [_ebbg ];return _dabgc ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_dbbdbg ,_deffd :=_gf .NewStdFontByName (HelveticaName );if !_deffd {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_bdcc :=_gbgb (_dbbdbg );return &PdfFont {_bbdc :&_bdcc };};

// ToPdfObject returns the PDF representation of the function.
func (_abgg *PdfFunctionType2 )ToPdfObject ()_aaa .PdfObject {_fdgf :=_aaa .MakeDict ();_fdgf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aaa .MakeInteger (2));_gbdc :=&_aaa .PdfObjectArray {};for _ ,_dbdbd :=range _abgg .Domain {_gbdc .Append (_aaa .MakeFloat (_dbdbd ));};_fdgf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbdc );if _abgg .Range !=nil {_dfeeab :=&_aaa .PdfObjectArray {};for _ ,_defc :=range _abgg .Range {_dfeeab .Append (_aaa .MakeFloat (_defc ));};_fdgf .Set ("\u0052\u0061\u006eg\u0065",_dfeeab );};if _abgg .C0 !=nil {_dagcf :=&_aaa .PdfObjectArray {};for _ ,_fgade :=range _abgg .C0 {_dagcf .Append (_aaa .MakeFloat (_fgade ));};_fdgf .Set ("\u0043\u0030",_dagcf );};if _abgg .C1 !=nil {_faabf :=&_aaa .PdfObjectArray {};for _ ,_bbbda :=range _abgg .C1 {_faabf .Append (_aaa .MakeFloat (_bbbda ));};_fdgf .Set ("\u0043\u0031",_faabf );};_fdgf .Set ("\u004e",_aaa .MakeFloat (_abgg .N ));if _abgg ._aadbe !=nil {_abgg ._aadbe .PdfObject =_fdgf ;return _abgg ._aadbe ;};return _fdgf ;};

// ToPdfObject implements interface PdfModel.
func (_deff *PdfActionHide )ToPdfObject ()_aaa .PdfObject {_deff .PdfAction .ToPdfObject ();_aec :=_deff ._afe ;_gge :=_aec .PdfObject .(*_aaa .PdfObjectDictionary );_gge .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeHide )));_gge .SetIfNotNil ("\u0054",_deff .T );_gge .SetIfNotNil ("\u0048",_deff .H );return _aec ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_aagf *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _aagf ._dgbgf .(*PdfShadingPattern );};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func _caed (_becag *_bc .ImageBase )(_edfaa Image ){_edfaa .Width =int64 (_becag .Width );_edfaa .Height =int64 (_becag .Height );_edfaa .BitsPerComponent =int64 (_becag .BitsPerComponent );_edfaa .ColorComponents =_becag .ColorComponents ;_edfaa .Data =_becag .Data ;_edfaa ._ggcd =_becag .Decode ;_edfaa ._agebab =_becag .Alpha ;return _edfaa ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_aebga *PdfFont )GetCharMetrics (code _aa .CharCode )(CharMetrics ,bool ){var _gcbdc _gf .CharMetrics ;switch _aeaaf :=_aebga ._bbdc .(type ){case *pdfFontSimple :if _cdae ,_cabcg :=_aeaaf .GetCharMetrics (code );_cabcg {return _cdae ,_cabcg ;};case *pdfFontType0 :if _afcd ,_aeae :=_aeaaf .GetCharMetrics (code );_aeae {return _afcd ,_aeae ;};case *pdfCIDFontType0 :if _ecdf ,_bedc :=_aeaaf .GetCharMetrics (code );_bedc {return _ecdf ,_bedc ;};case *pdfCIDFontType2 :if _geeee ,_ccec :=_aeaaf .GetCharMetrics (code );_ccec {return _geeee ,_ccec ;};default:_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_aebga ._bbdc );return _gcbdc ,false ;};if _caaba ,_gdfc :=_aebga .GetFontDescriptor ();_gdfc ==nil &&_caaba !=nil {return _gf .CharMetrics {Wx :_caaba ._bffg },true ;};_fe .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_aebga );return _gcbdc ,false ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _g .Time ){_eggb .Lock ();defer _eggb .Unlock ();_eegbf =creationDate ;};

// ToPdfObject implements interface PdfModel.
func (_efd *PdfAnnotationStrikeOut )ToPdfObject ()_aaa .PdfObject {_efd .PdfAnnotation .ToPdfObject ();_cgcc :=_efd ._fdd ;_gceg :=_cgcc .PdfObject .(*_aaa .PdfObjectDictionary );_efd .PdfAnnotationMarkup .appendToPdfDictionary (_gceg );_gceg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_gceg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_efd .QuadPoints );return _cgcc ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_beaae *PdfOutlineTreeNode )ToPdfObject ()_aaa .PdfObject {return _beaae .GetContext ().ToPdfObject ();};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _g .Time ){_eggb .Lock ();defer _eggb .Unlock ();_cdaeb =modifiedDate ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _aaa .StreamEncoder )(*XObjectImage ,error ){_ddgcg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ddgcg ,img ,cs ,encoder );};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gagf *DSS )ToPdfObject ()_aaa .PdfObject {_gfcdf :=_gagf ._egfac .PdfObject .(*_aaa .PdfObjectDictionary );_gfcdf .Clear ();_dbbcd :=_aaa .MakeDict ();for _dadbf ,_eacc :=range _gagf .VRI {_dbbcd .Set (*_aaa .MakeName (_dadbf ),_eacc .ToPdfObject ());};_gfcdf .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_abbbc (_gagf .Certs ));_gfcdf .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_abbbc (_gagf .OCSPs ));_gfcdf .SetIfNotNil ("\u0043\u0052\u004c\u0073",_abbbc (_gagf .CRLs ));_gfcdf .Set ("\u0056\u0052\u0049",_dbbcd );return _gagf ._egfac ;};func (_cfcag *pdfFontType0 )subsetRegistered ()error {_degdf ,_fdbgf :=_cfcag .DescendantFont ._bbdc .(*pdfCIDFontType2 );if !_fdbgf {_fe .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_cfcag .DescendantFont );return nil ;};if _degdf ==nil {return nil ;};if _degdf ._ebcac ==nil {_fe .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _cfcag ._gedd ==nil {_fe .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_ecfa ,_fdbgf :=_aaa .GetStream (_degdf ._ebcac .FontFile2 );if !_fdbgf {_fe .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _ee .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_abbfd ,_feaf :=_aaa .DecodeStream (_ecfa );if _feaf !=nil {_fe .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_feaf );return _feaf ;};_gaag ,_feaf :=_bg .Parse (_bb .NewReader (_abbfd ));if _feaf !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_ecfa .Stream ));return _feaf ;};var _edaee []rune ;var _fcbdf *_bg .Font ;switch _fbgeg :=_cfcag ._gedd .(type ){case *_aa .TrueTypeFontEncoder :_edaee =_fbgeg .RegisteredRunes ();_fcbdf ,_feaf =_gaag .SubsetKeepRunes (_edaee );if _feaf !=nil {_fe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feaf );return _feaf ;};_fbgeg .SubsetRegistered ();case *_aa .IdentityEncoder :_edaee =_fbgeg .RegisteredRunes ();_effa :=make ([]_bg .GlyphIndex ,len (_edaee ));for _cfef ,_cbge :=range _edaee {_effa [_cfef ]=_bg .GlyphIndex (_cbge );};_fcbdf ,_feaf =_gaag .SubsetKeepIndices (_effa );if _feaf !=nil {_fe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feaf );return _feaf ;};case _aa .SimpleEncoder :_cgdaa :=_fbgeg .Charcodes ();for _ ,_dfcf :=range _cgdaa {_gffed ,_ecbg :=_fbgeg .CharcodeToRune (_dfcf );if !_ecbg {_fe .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_dfcf );continue ;};_edaee =append (_edaee ,_gffed );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_cfcag ._gedd );};var _efcf _bb .Buffer ;_feaf =_fcbdf .Write (&_efcf );if _feaf !=nil {_fe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feaf );return _feaf ;};if _cfcag ._fgcf !=nil {_edaec :=make (map[_eed .CharCode ]rune ,len (_edaee ));for _ ,_bbcgg :=range _edaee {_gcabd ,_cceb :=_cfcag ._gedd .RuneToCharcode (_bbcgg );if !_cceb {continue ;};_edaec [_eed .CharCode (_gcabd )]=_bbcgg ;};_cfcag ._fgcf =_eed .NewToUnicodeCMap (_edaec );};_ecfa ,_feaf =_aaa .MakeStream (_efcf .Bytes (),_aaa .NewFlateEncoder ());if _feaf !=nil {_fe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feaf );return _feaf ;};_ecfa .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aaa .MakeInteger (int64 (_efcf .Len ())));if _dgebd ,_gcafd :=_aaa .GetStream (_degdf ._ebcac .FontFile2 );_gcafd {*_dgebd =*_ecfa ;}else {_degdf ._ebcac .FontFile2 =_ecfa ;};_cfdg :=_abcb ();if len (_cfcag ._edee )> 0{_cfcag ._edee =_bccf (_cfcag ._edee ,_cfdg );};if len (_degdf ._edee )> 0{_degdf ._edee =_bccf (_degdf ._edee ,_cfdg );};if len (_cfcag ._eabbf )> 0{_cfcag ._eabbf =_bccf (_cfcag ._eabbf ,_cfdg );};if _degdf ._ebcac !=nil {_fbceb ,_ebef :=_aaa .GetName (_degdf ._ebcac .FontName );if _ebef &&len (_fbceb .String ())> 0{_cdfagd :=_bccf (_fbceb .String (),_cfdg );_degdf ._ebcac .FontName =_aaa .MakeName (_cdfagd );};};return nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _aaa .PdfObject ;Flags _aaa .PdfObject ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_aeea *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gdeab *PdfAppender )UpdateObject (obj _aaa .PdfObject ){_gdeab .replaceObject (obj ,obj );if _ ,_bcfg :=_gdeab ._eede [obj ];!_bcfg {_gdeab ._cgcd =append (_gdeab ._cgcd ,obj );_gdeab ._eede [obj ]=struct{}{};};};

// String implements interface PdfObject.
func (_bbaf *PdfAction )String ()string {_adb ,_aff :=_bbaf .ToPdfObject ().(*_aaa .PdfIndirectObject );if _aff {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bbaf ._ac ,_adb .PdfObject .String ());};return "";};func (_afc *PdfAnnotation )String ()string {_cdff :="";_bca ,_fega :=_afc .ToPdfObject ().(*_aaa .PdfIndirectObject );if _fega {_cdff =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_afc ._adbe ,_bca .PdfObject .String ());};return _cdff ;};func _abgbb ()string {_eggb .Lock ();defer _eggb .Unlock ();return _bfdad };

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_cbde *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=_cbde .GetNumComponents (){return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbfa ,_bgfaf :=_aaa .GetNumbersAsFloat (objects );if _bgfaf !=nil {return nil ,_bgfaf ;};return _cbde .ColorFromFloats (_bbfa );};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_aaa .PdfObjectDictionary )(*PdfPageResources ,error ){_bgfce :=NewPdfPageResources ();if _acegd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_acegd !=nil {_bgfce .ExtGState =_acegd ;};if _fcdb :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_fcdb !=nil &&!_aaa .IsNullObject (_fcdb ){_bgfce .ColorSpace =_fcdb ;};if _abad :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_abad !=nil {_bgfce .Pattern =_abad ;};if _ceadg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_ceadg !=nil {_bgfce .Shading =_ceadg ;};if _eadaf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_eadaf !=nil {_bgfce .XObject =_eadaf ;};if _adcg :=_aaa .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_adcg !=nil {_bgfce .Font =_adcg ;};if _babeef :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_babeef !=nil {_bgfce .ProcSet =_babeef ;};if _bfccb :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bfccb !=nil {_bgfce .Properties =_bfccb ;};return _bgfce ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_eeega *OutlineItem )Insert (index uint ,item *OutlineItem ){_cccbc :=uint (len (_eeega .Entries ));if index > _cccbc {index =_cccbc ;};_eeega .Entries =append (_eeega .Entries [:index ],append ([]*OutlineItem {item },_eeega .Entries [index :]...)...);};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cefcb *PdfFieldButton )IsCheckbox ()bool {return _cefcb .GetType ()==ButtonTypeCheckbox };

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_afecg :=&XObjectImage {};_ababa :=&_aaa .PdfObjectStream {};_ababa .PdfObjectDictionary =_aaa .MakeDict ();_afecg ._eaea =_ababa ;return _afecg ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_aaa .PdfIndirectObject ;SV *_aaa .PdfIndirectObject ;};

// SetContentStream sets the pattern cell's content stream.
func (_adbga *PdfTilingPattern )SetContentStream (content []byte ,encoder _aaa .StreamEncoder )error {_agece ,_bagfg :=_adbga ._eabbc .(*_aaa .PdfObjectStream );if !_bagfg {_fe .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adbga ._eabbc );return _aaa .ErrTypeError ;};if encoder ==nil {encoder =_aaa .NewRawEncoder ();};_fcea :=_agece .PdfObjectDictionary ;_cefg :=encoder .MakeStreamDict ();_fcea .Merge (_cefg );_cgfg ,_dbffa :=encoder .EncodeBytes (content );if _dbffa !=nil {return _dbffa ;};_fcea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aaa .MakeInteger (int64 (len (_cgfg ))));_agece .Stream =_cgfg ;return nil ;};var _eccfb =_ag .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// ToPdfObject implements interface PdfModel.
func (_defa *PdfActionNamed )ToPdfObject ()_aaa .PdfObject {_defa .PdfAction .ToPdfObject ();_fagf :=_defa ._afe ;_gec :=_fagf .PdfObject .(*_aaa .PdfObjectDictionary );_gec .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeNamed )));_gec .SetIfNotNil ("\u004e",_defa .N );return _fagf ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_bcdg :=NewPdfAnnotation ();_bed :=&PdfAnnotationStamp {};_bed .PdfAnnotation =_bcdg ;_bed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcdg .SetContext (_bed );return _bed ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_dbab :=NewPdfAnnotation ();_afea :=&PdfAnnotationMovie {};_afea .PdfAnnotation =_dbab ;_dbab .SetContext (_afea );return _afea ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _aaa .PdfObject ;Name _aaa .PdfObject ;};func _acage ()string {_eggb .Lock ();defer _eggb .Unlock ();_aaacg :=_fa .GetLicenseKey ();if len (_egag )> 0&&(_aaacg .IsLicensed ()||_cdbae ){return _egag ;};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_dbfab (),_aaacg .TypeToString ());};func _afcga (_acbg _aaa .PdfObject )(map[_aa .CharCode ]float64 ,error ){if _acbg ==nil {return nil ,nil ;};_bgbf ,_bdeg :=_aaa .GetArray (_acbg );if !_bdeg {return nil ,nil ;};_gdff :=map[_aa .CharCode ]float64 {};_eceg :=_bgbf .Len ();for _gdba :=0;_gdba < _eceg -1;_gdba ++{_dcgea :=_aaa .TraceToDirectObject (_bgbf .Get (_gdba ));_dfeed ,_aaef :=_aaa .GetIntVal (_dcgea );if !_aaef {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gdba ,_dcgea );};_gdba ++;if _gdba > _eceg -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bgbf );};_gafb :=_aaa .TraceToDirectObject (_bgbf .Get (_gdba ));switch _gafb .(type ){case *_aaa .PdfObjectArray :_fgfd ,_ :=_aaa .GetArray (_gafb );if _gcggc ,_acaf :=_fgfd .ToFloat64Array ();_acaf ==nil {for _eagf :=0;_eagf < len (_gcggc );_eagf ++{_gdff [_aa .CharCode (_dfeed +_eagf )]=_gcggc [_eagf ];};}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gdba ,_gafb );};case *_aaa .PdfObjectInteger :_eaffd ,_ecae :=_aaa .GetIntVal (_gafb );if !_ecae {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gdba ,_gafb );};_gdba ++;if _gdba > _eceg -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bgbf );};_dfgag :=_bgbf .Get (_gdba );_afcdg ,_abbec :=_aaa .GetNumberAsFloat (_dfgag );if _abbec !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gdba ,_dfgag );};for _fdef :=_dfeed ;_fdef <=_eaffd ;_fdef ++{_gdff [_aa .CharCode (_fdef )]=_afcdg ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gdba ,_gafb );};};return _gdff ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fddaa :=PdfColorDeviceRGB {r ,g ,b };return &_fddaa ;};func (_gdegg *PdfReader )loadDSS ()(*DSS ,error ){if _gdegg ._gcee .GetCrypter ()!=nil &&!_gdegg ._gcee .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_eggd :=_gdegg ._gdbc .Get ("\u0044\u0053\u0053");if _eggd ==nil {return nil ,nil ;};_bbdgca ,_ :=_aaa .GetIndirect (_eggd );_eggd =_aaa .TraceToDirectObject (_eggd );switch _daaag :=_eggd .(type ){case *_aaa .PdfObjectNull :return nil ,nil ;case *_aaa .PdfObjectDictionary :return _fcdac (_bbdgca ,_daaag );};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_eggd );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bgfe *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dece ,_becb :=_aaa .GetNumbersAsFloat (objects );if _becb !=nil {return nil ,_becb ;};return _bgfe .ColorFromFloats (_dece );};func _ebdb (_cegd *_aaa .PdfObjectDictionary )bool {for _ ,_gcbcd :=range _cegd .Keys (){if _ ,_bdbdg :=_gaf [_gcbcd .String ()];_bdbdg {return true ;};};return false ;};func (_eaacc *Image )samplesAddPadding (_cbdgf []uint32 )[]uint32 {_dgecc :=_bc .BytesPerLine (int (_eaacc .Width ),int (_eaacc .BitsPerComponent ),_eaacc .ColorComponents )*(8/int (_eaacc .BitsPerComponent ));_dbgeg :=_dgecc *int (_eaacc .Height );if len (_cbdgf )==_dbgeg {return _cbdgf ;};_dcbbe :=make ([]uint32 ,_dbgeg );_eefc :=int (_eaacc .Width )*_eaacc .ColorComponents ;for _afdefg :=0;_afdefg < int (_eaacc .Height );_afdefg ++{_ecadg :=_afdefg *int (_eaacc .Width );_ecea :=_afdefg *_dgecc ;for _gfeg :=0;_gfeg < _eefc ;_gfeg ++{_dcbbe [_ecea +_gfeg ]=_cbdgf [_ecadg +_gfeg ];};};return _dcbbe ;};type pdfFontType0 struct{fontCommon ;_dfcg *_aaa .PdfIndirectObject ;_gedd _aa .TextEncoder ;Encoding _aaa .PdfObject ;DescendantFont *PdfFont ;_ffbg *_eed .CMap ;};type pdfFont interface{_gf .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_aaa .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// SetBorderWidth sets the style's border width.
func (_bbdfa *PdfBorderStyle )SetBorderWidth (width float64 ){_bbdfa .W =&width };

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_abba *PdfPageResources )GetColorspaceByName (keyName _aaa .PdfObjectName )(PdfColorspace ,bool ){_cdbc ,_dcdda :=_abba .GetColorspaces ();if _dcdda !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dcdda );return nil ,false ;};if _cdbc ==nil {return nil ,false ;};_dafgb ,_ffgb :=_cdbc .Colorspaces [string (keyName )];if !_ffgb {return nil ,false ;};return _dafgb ,true ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bbddg *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bbddg .baseFields ()._ebcac !=nil {return _bbddg .baseFields ()._ebcac ;};if _edcd :=_bbddg ._bbdc .getFontDescriptor ();_edcd !=nil {return _edcd ;};_fe .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bbddg );return nil ;};func (_beff *PdfReader )newPdfAnnotationRedactFromDict (_ddf *_aaa .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_efaa :=PdfAnnotationRedact {};_edfc ,_bega :=_beff .newPdfAnnotationMarkupFromDict (_ddf );if _bega !=nil {return nil ,_bega ;};_efaa .PdfAnnotationMarkup =_edfc ;_efaa .QuadPoints =_ddf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_efaa .IC =_ddf .Get ("\u0049\u0043");_efaa .RO =_ddf .Get ("\u0052\u004f");_efaa .OverlayText =_ddf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_efaa .Repeat =_ddf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_efaa .DA =_ddf .Get ("\u0044\u0041");_efaa .Q =_ddf .Get ("\u0051");return &_efaa ,nil ;};func (_gga *PdfReader )newPdfActionLaunchFromDict (_beec *_aaa .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fbff ,_dcg :=_gcg (_beec .Get ("\u0046"));if _dcg !=nil {return nil ,_dcg ;};return &PdfActionLaunch {Win :_beec .Get ("\u0057\u0069\u006e"),Mac :_beec .Get ("\u004d\u0061\u0063"),Unix :_beec .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_beec .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fbff },nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_dedeg *VRI )ToPdfObject ()*_aaa .PdfObjectDictionary {_dgeff :=_aaa .MakeDict ();_dgeff .SetIfNotNil (_aaa .PdfObjectName ("\u0043\u0065\u0072\u0074"),_abbbc (_dedeg .Cert ));_dgeff .SetIfNotNil (_aaa .PdfObjectName ("\u004f\u0043\u0053\u0050"),_abbbc (_dedeg .OCSP ));_dgeff .SetIfNotNil (_aaa .PdfObjectName ("\u0043\u0052\u004c"),_abbbc (_dedeg .CRL ));_dgeff .SetIfNotNil ("\u0054\u0055",_dedeg .TU );_dgeff .SetIfNotNil ("\u0054\u0053",_dedeg .TS );return _dgeff ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_acfcc *Image )GetParamsDict ()*_aaa .PdfObjectDictionary {_ebgg :=_aaa .MakeDict ();_ebgg .Set ("\u0057\u0069\u0064t\u0068",_aaa .MakeInteger (_acfcc .Width ));_ebgg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aaa .MakeInteger (_acfcc .Height ));_ebgg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aaa .MakeInteger (int64 (_acfcc .ColorComponents )));_ebgg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aaa .MakeInteger (_acfcc .BitsPerComponent ));return _ebgg ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_bdgac []_aaa .PdfObject )([]_aaa .PdfObject ,error );};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gedec *PdfRectangle )Normalize (){if _gedec .Llx > _gedec .Urx {_gedec .Llx ,_gedec .Urx =_gedec .Urx ,_gedec .Llx ;};if _gedec .Lly > _gedec .Ury {_gedec .Lly ,_gedec .Ury =_gedec .Ury ,_gedec .Lly ;};};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fdege :=&PdfColorspaceCalRGB {};_fdege .BlackPoint =[]float64 {0.0,0.0,0.0};_fdege .Gamma =[]float64 {1.0,1.0,1.0};_fdege .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fdege ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_gf .CharMetrics ;

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fggf :=NewPdfAnnotation ();_edf :=&PdfAnnotationPrinterMark {};_edf .PdfAnnotation =_fggf ;_fggf .SetContext (_edf );return _edf ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_babe *Image )AlphaMap (mapFunc AlphaMapFunc ){for _ggacd ,_dcecc :=range _babe ._agebab {_babe ._agebab [_ggacd ]=mapFunc (_dcecc );};};func (_fcgbg *PdfReader )newPdfActionTransFromDict (_fbe *_aaa .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_fbe .Get ("\u0054\u0072\u0061n\u0073")},nil ;};var (_eggb _e .Mutex ;_afggb ="";_eegbf _g .Time ;_bgcea ="";_bbgd ="";_cdaeb _g .Time ;_egag ="";_bfdad ="";_fecca ="";);

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _aaa .PdfObject ;Dest _aaa .PdfObject ;H _aaa .PdfObject ;PA _aaa .PdfObject ;QuadPoints _aaa .PdfObject ;BS _aaa .PdfObject ;_efa *PdfAction ;_cbf *PdfReader ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_aaa .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_eafb *_aaa .PdfIndirectObject ;};func _fefb (_bgfca []byte )(_ddfa ,_fafda string ,_cbaf error ){_fe .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bgfca ));_gdgd :=_gaeeg .FindIndex (_bgfca );if _gdgd ==nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_aaa .ErrTypeError ;};_dgff :=_gdgd [1];_aeag :=_af .Index (string (_bgfca [_dgff :]),_edegf );if _aeag < 0{_ddfa =string (_bgfca [_dgff :]);return _ddfa ,"",nil ;};_bcgfd :=_dgff +_aeag ;_ddfa =string (_bgfca [_dgff :_bcgfd ]);_dfdedb :=_bcgfd ;_aeag =_af .Index (string (_bgfca [_dfdedb :]),_cgfdd );if _aeag < 0{_fe .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbaf );return "","",_aaa .ErrTypeError ;};_fbfa :=_dfdedb +_aeag ;_fafda =string (_bgfca [_dfdedb :_fbfa ]);return _ddfa ,_fafda ,nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bfefbe *PdfPageResources )GenerateXObjectName ()_aaa .PdfObjectName {_cgbee :=1;for {_ddbga :=_aaa .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_cgbee ));if !_bfefbe .HasXObjectByName (*_ddbga ){return *_ddbga ;};_cgbee ++;};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dgfcb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfaba ,_eaafb :=_aaa .GetNumbersAsFloat (objects );if _eaafb !=nil {return nil ,_eaafb ;};return _dgfcb .ColorFromFloats (_dfaba );};func _fbccd (_eefbc _aaa .PdfObject ,_dgdfb *PdfReader )(*OutlineDest ,error ){_eege ,_badca :=_aaa .GetArray (_eefbc );if !_badca {return nil ,_ee .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_ddfef :=_eege .Len ();if _ddfef < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ddfef );};_dfgb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_egbee :=_eege .Get (0);if _gbfc ,_abaag :=_aaa .GetIndirect (_egbee );_abaag {if _ ,_ggfag ,_edbcg :=_dgdfb .PageFromIndirectObject (_gbfc );_edbcg ==nil {_dfgb .Page =int64 (_ggfag -1);}else {_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_gbfc );};_dfgb .PageObj =_gbfc ;}else if _cffbe ,_gadfg :=_aaa .GetIntVal (_egbee );_gadfg {if _cffbe >=0&&_cffbe < len (_dgdfb .PageList ){_dfgb .PageObj =_dgdfb .PageList [_cffbe ].GetPageAsIndirectObject ();}else {_fe .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_cffbe );};_dfgb .Page =int64 (_cffbe );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_egbee );};_cbaff ,_badca :=_aaa .GetNameVal (_eege .Get (1));if !_badca {_fe .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_eege .Get (1));return _dfgb ,nil ;};switch _cbaff {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ddfef > 2{_dfgb .Y ,_ =_aaa .GetNumberAsFloat (_aaa .TraceToDirectObject (_eege .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ddfef > 2{_dfgb .X ,_ =_aaa .GetNumberAsFloat (_aaa .TraceToDirectObject (_eege .Get (2)));};case "\u0058\u0059\u005a":if _ddfef > 4{_dfgb .X ,_ =_aaa .GetNumberAsFloat (_aaa .TraceToDirectObject (_eege .Get (2)));_dfgb .Y ,_ =_aaa .GetNumberAsFloat (_aaa .TraceToDirectObject (_eege .Get (3)));_dfgb .Zoom ,_ =_aaa .GetNumberAsFloat (_aaa .TraceToDirectObject (_eege .Get (4)));};default:_cbaff ="\u0046\u0069\u0074";};_dfgb .Mode =_cbaff ;return _dfgb ,nil ;};func (_gdcdc *pdfFontType0 )baseFields ()*fontCommon {return &_gdcdc .fontCommon };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_acad *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_acad .ToPdfOutline ().PdfOutlineTreeNode ;};func (_gbb *PdfReader )newPdfAnnotation3DFromDict (_dfdc *_aaa .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_gcec :=PdfAnnotation3D {};_gcec .T3DD =_dfdc .Get ("\u0033\u0044\u0044");_gcec .T3DV =_dfdc .Get ("\u0033\u0044\u0056");_gcec .T3DA =_dfdc .Get ("\u0033\u0044\u0041");_gcec .T3DI =_dfdc .Get ("\u0033\u0044\u0049");_gcec .T3DB =_dfdc .Get ("\u0033\u0044\u0042");return &_gcec ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );func (_agfa *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gdedb *Image )GetSamples ()[]uint32 {_acgd :=_dgb .ResampleBytes (_gdedb .Data ,int (_gdedb .BitsPerComponent ));if _gdedb .BitsPerComponent < 8{_acgd =_gdedb .samplesTrimPadding (_acgd );};_dbccg :=int (_gdedb .Width )*int (_gdedb .Height )*_gdedb .ColorComponents ;if len (_acgd )< _dbccg {_fe .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_acgd ),_dbccg );return _acgd ;}else if len (_acgd )> _dbccg {_fe .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_acgd ),_dbccg );_acgd =_acgd [:_dbccg ];};return _acgd ;};func _gcg (_eba _aaa .PdfObject )(*PdfFilespec ,error ){if _eba ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_eba );};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bggfa *PdfOutline )GetContainingPdfObject ()_aaa .PdfObject {return _bggfa ._cdfac };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aaa .PdfObject ;IC _aaa .PdfObject ;RO _aaa .PdfObject ;OverlayText _aaa .PdfObject ;Repeat _aaa .PdfObject ;DA _aaa .PdfObject ;Q _aaa .PdfObject ;};func _bafa (_eeaec *_aaa .PdfObjectDictionary ,_eeag *fontCommon )(*pdfCIDFontType2 ,error ){if _eeag ._fbeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fe .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_eeag );return nil ,_aaa .ErrRangeError ;};_dfac :=_ggfdg (_eeag );_fdbc ,_ddcge :=_aaa .GetDict (_eeaec .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ddcge {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eeag );return nil ,ErrRequiredAttributeMissing ;};_dfac .CIDSystemInfo =_fdbc ;_dfac .DW =_eeaec .Get ("\u0044\u0057");_dfac .W =_eeaec .Get ("\u0057");_dfac .DW2 =_eeaec .Get ("\u0044\u0057\u0032");_dfac .W2 =_eeaec .Get ("\u0057\u0032");_dfac .CIDToGIDMap =_eeaec .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_dfac ._ffcg =1000.0;if _fdabe ,_bedbb :=_aaa .GetNumberAsFloat (_dfac .DW );_bedbb ==nil {_dfac ._ffcg =_fdabe ;};_ggfa ,_gcce :=_afcga (_dfac .W );if _gcce !=nil {return nil ,_gcce ;};if _ggfa ==nil {_ggfa =map[_aa .CharCode ]float64 {};};_dfac ._ffcfa =_ggfa ;return _dfac ,nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bf :=NewPdfAction ();_feg :=&PdfActionHide {};_feg .PdfAction =_bf ;_bf .SetContext (_feg );return _feg ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_gdac *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _gdac ._edebg ==nil {_gdac .GetAnnotations ();};_gdac ._edebg =append (_gdac ._edebg ,annot );};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dgfcf *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// Items returns all children outline items.
func (_ffebb *Outline )Items ()[]*OutlineItem {return _ffebb .Entries };

// ToPdfObject implements interface PdfModel.
func (_ceg *PdfAnnotationLink )ToPdfObject ()_aaa .PdfObject {_ceg .PdfAnnotation .ToPdfObject ();_abe :=_ceg ._fdd ;_decga :=_abe .PdfObject .(*_aaa .PdfObjectDictionary );_decga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u004c\u0069\u006e\u006b"));if _ceg ._efa !=nil &&_ceg ._efa ._ac !=nil {_decga .Set ("\u0041",_ceg ._efa ._ac .ToPdfObject ());}else if _ceg .A !=nil {_decga .Set ("\u0041",_ceg .A );};_decga .SetIfNotNil ("\u0044\u0065\u0073\u0074",_ceg .Dest );_decga .SetIfNotNil ("\u0048",_ceg .H );_decga .SetIfNotNil ("\u0050\u0041",_ceg .PA );_decga .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ceg .QuadPoints );_decga .SetIfNotNil ("\u0042\u0053",_ceg .BS );return _abe ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_ddbe *_aaa .PdfIndirectObject ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_cag :=NewPdfAnnotation ();_ceba :=&PdfAnnotationFreeText {};_ceba .PdfAnnotation =_cag ;_ceba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cag .SetContext (_ceba );return _ceba ;};func (_cce *PdfReader )newPdfActionThreadFromDict (_cbd *_aaa .PdfObjectDictionary )(*PdfActionThread ,error ){_gfb ,_dbga :=_gcg (_cbd .Get ("\u0046"));if _dbga !=nil {return nil ,_dbga ;};return &PdfActionThread {D :_cbd .Get ("\u0044"),B :_cbd .Get ("\u0042"),F :_gfb },nil ;};

// SetAction sets the PDF action for the annotation link.
func (_bfc *PdfAnnotationLink )SetAction (action *PdfAction ){_bfc ._efa =action ;if action ==nil {_bfc .A =nil ;};};func (_ecfe *DSS )addCRLs (_acfa [][]byte )([]*_aaa .PdfObjectStream ,error ){return _ecfe .add (&_ecfe .CRLs ,_ecfe ._gbcce ,_acfa );};func (_baegc *PdfWriter )addObject (_aedae _aaa .PdfObject )bool {_ebfeb :=_baegc .hasObject (_aedae );if !_ebfeb {_fafad :=_aaa .ResolveReferencesDeep (_aedae ,_baegc ._aaefc );if _fafad !=nil {_fe .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_fafad );};_baegc ._dbbec =append (_baegc ._dbbec ,_aedae );_baegc ._gfggg [_aedae ]=struct{}{};return true ;};return false ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_ffcc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_ccdg :=&PdfColorPattern {};_ageg ,_cdfad :=objects [len (objects )-1].(*_aaa .PdfObjectName );if !_cdfad {_fe .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_ccdg .PatternName =*_ageg ;if len (objects )> 1{_dbgf :=objects [0:len (objects )-1];if _ffcc .UnderlyingCS ==nil {_fe .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_ee .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_aceg ,_acfe :=_ffcc .UnderlyingCS .ColorFromPdfObjects (_dbgf );if _acfe !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_acfe );return nil ,_acfe ;};_ccdg .Color =_aceg ;};return _ccdg ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_aaaf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cffd :=func (_fdde float64 )float64 {if _fdde >=6.0/29{return _fdde *_fdde *_fdde ;};return 108.0/841*(_fdde -4/29);};_eacb ,_defaf :=color .(*PdfColorLab );if !_defaf {_fe .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_eacb .L ();AStar :=_eacb .A ();BStar :=_eacb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_aaaf .WhitePoint [0]*_cffd (L );Y :=_aaaf .WhitePoint [1]*_cffd (M );Z :=_aaaf .WhitePoint [2]*_cffd (N );_gddgc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dagcg :=-0.969256*X +1.875992*Y +0.041556*Z ;_gdbg :=0.055648*X +-0.204043*Y +1.057311*Z ;_gddgc =_dg .Min (_dg .Max (_gddgc ,0),1.0);_dagcg =_dg .Min (_dg .Max (_dagcg ,0),1.0);_gdbg =_dg .Min (_dg .Max (_gdbg ,0),1.0);return NewPdfColorDeviceRGB (_gddgc ,_dagcg ,_gdbg ),nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fddc *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _gegba []*PdfField ;_eaged :=map[*_aaa .PdfIndirectObject ]struct{}{};for _ ,_cceff :=range _fddc .PageList {_cecdg ,_bcff :=_cceff .GetAnnotations ();if _bcff !=nil {return _bcff ;};for _ ,_cbeag :=range _cecdg {var _aaebc *PdfField ;switch _ecbee :=_cbeag .GetContext ().(type ){case *PdfAnnotationWidget :if _ecbee ._bcg !=nil {_aaebc =_ecbee ._bcg ;break ;};if _cgacc ,_dbgea :=_aaa .GetIndirect (_ecbee .Parent );_dbgea {_aaebc ,_bcff =_fddc .newPdfFieldFromIndirectObject (_cgacc ,nil );if _bcff ==nil {break ;};_fe .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cgacc ,_bcff );};if _ecbee ._fdd !=nil {_aaebc ,_bcff =_fddc .newPdfFieldFromIndirectObject (_ecbee ._fdd ,nil );if _bcff ==nil {break ;};_fe .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecbee ._fdd ,_bcff );};};if _aaebc ==nil {continue ;};if _ ,_cdaa :=_eaged [_aaebc ._badf ];_cdaa {continue ;};_eaged [_aaebc ._badf ]=struct{}{};_gegba =append (_gegba ,_aaebc );};};if len (_gegba )==0{return nil ;};if _fddc .AcroForm ==nil {_fddc .AcroForm =NewPdfAcroForm ();};_fddc .AcroForm .Fields =&_gegba ;return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bgbgg *PdfFunctionType3 )ToPdfObject ()_aaa .PdfObject {_gbcbg :=_aaa .MakeDict ();_gbcbg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aaa .MakeInteger (3));_badgf :=&_aaa .PdfObjectArray {};for _ ,_bddf :=range _bgbgg .Domain {_badgf .Append (_aaa .MakeFloat (_bddf ));};_gbcbg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_badgf );if _bgbgg .Range !=nil {_ddff :=&_aaa .PdfObjectArray {};for _ ,_fbaac :=range _bgbgg .Range {_ddff .Append (_aaa .MakeFloat (_fbaac ));};_gbcbg .Set ("\u0052\u0061\u006eg\u0065",_ddff );};if _bgbgg .Functions !=nil {_edcbg :=&_aaa .PdfObjectArray {};for _ ,_fgffe :=range _bgbgg .Functions {_edcbg .Append (_fgffe .ToPdfObject ());};_gbcbg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_edcbg );};if _bgbgg .Bounds !=nil {_gfbd :=&_aaa .PdfObjectArray {};for _ ,_dgcff :=range _bgbgg .Bounds {_gfbd .Append (_aaa .MakeFloat (_dgcff ));};_gbcbg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_gfbd );};if _bgbgg .Encode !=nil {_aeabe :=&_aaa .PdfObjectArray {};for _ ,_dgdba :=range _bgbgg .Encode {_aeabe .Append (_aaa .MakeFloat (_dgdba ));};_gbcbg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_aeabe );};if _bgbgg ._ddbe !=nil {_bgbgg ._ddbe .PdfObject =_gbcbg ;return _bgbgg ._ddbe ;};return _gbcbg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ef *PdfAction )GetContainingPdfObject ()_aaa .PdfObject {return _ef ._afe };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fccbf *PdfShadingType7 )ToPdfObject ()_aaa .PdfObject {_fccbf .PdfShading .ToPdfObject ();_eagbg ,_dcgeg :=_fccbf .getShadingDict ();if _dcgeg !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fccbf .BitsPerCoordinate !=nil {_eagbg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fccbf .BitsPerCoordinate );};if _fccbf .BitsPerComponent !=nil {_eagbg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fccbf .BitsPerComponent );};if _fccbf .BitsPerFlag !=nil {_eagbg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fccbf .BitsPerFlag );};if _fccbf .Decode !=nil {_eagbg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fccbf .Decode );};if _fccbf .Function !=nil {if len (_fccbf .Function )==1{_eagbg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fccbf .Function [0].ToPdfObject ());}else {_bcgdc :=_aaa .MakeArray ();for _ ,_ggaba :=range _fccbf .Function {_bcgdc .Append (_ggaba .ToPdfObject ());};_eagbg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcgdc );};};return _fccbf ._cfade ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dgbgf PdfModel ;_eabbc _aaa .PdfObject ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cfbg *Image )ConvertToBinary ()error {if _cfbg .ColorComponents ==1&&_cfbg .BitsPerComponent ==1{return nil ;};_gedda ,_ecdgd :=_cfbg .ToGoImage ();if _ecdgd !=nil {return _ecdgd ;};_dbgde ,_ecdgd :=_bc .MonochromeConverter .Convert (_gedda );if _ecdgd !=nil {return _ecdgd ;};_cfbg .BitsPerComponent =1;_cfbg .ColorComponents =1;_cfbg .Data =_dbgde .Base ().Data ;return nil ;};func (_degf *PdfReader )newPdfAnnotationSquigglyFromDict (_cadb *_aaa .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gbdd :=PdfAnnotationSquiggly {};_faga ,_gadf :=_degf .newPdfAnnotationMarkupFromDict (_cadb );if _gadf !=nil {return nil ,_gadf ;};_gbdd .PdfAnnotationMarkup =_faga ;_gbdd .QuadPoints =_cadb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gbdd ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ebgc *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _gdcg []_aa .TextEncoder ;if _fcdc :=_ebgc .baseFields ()._fgcf ;_fcdc !=nil {_gdcg =append (_gdcg ,_aa .NewCMapEncoder ("",nil ,_fcdc ));};if _bgff :=_ebgc .Encoder ();_bgff !=nil {_gdcg =append (_gdcg ,_bgff );};var _ffecf _bb .Buffer ;var _gaed int ;for _ ,_dbdc :=range data {var _adcb bool ;for _ ,_aaeca :=range _gdcg {if _acag :=_aaeca .Encode (string (_dbdc ));len (_acag )> 0{_ffecf .Write (_acag );_adcb =true ;break ;};};if !_adcb {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dbdc );_gaed ++;};};if _gaed !=0{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_gaed ,_ebgc ,_gdcg );};return _ffecf .Bytes (),_gaed ;};

// ToPdfObject implements interface PdfModel.
func (_cgae *PdfAnnotationPolyLine )ToPdfObject ()_aaa .PdfObject {_cgae .PdfAnnotation .ToPdfObject ();_bfef :=_cgae ._fdd ;_dgbaa :=_bfef .PdfObject .(*_aaa .PdfObjectDictionary );_cgae .PdfAnnotationMarkup .appendToPdfDictionary (_dgbaa );_dgbaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_dgbaa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cgae .Vertices );_dgbaa .SetIfNotNil ("\u004c\u0045",_cgae .LE );_dgbaa .SetIfNotNil ("\u0042\u0053",_cgae .BS );_dgbaa .SetIfNotNil ("\u0049\u0043",_cgae .IC );_dgbaa .SetIfNotNil ("\u0042\u0045",_cgae .BE );_dgbaa .SetIfNotNil ("\u0049\u0054",_cgae .IT );_dgbaa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cgae .Measure );return _bfef ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_ddde *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fe .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fe .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_fe .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fe .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_fdfc ,_dgaf :=_bc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._agebab ,img ._ggcd );if _dgaf !=nil {return Image {},_dgaf ;};_gcgc ,_dgaf :=_bc .NRGBAConverter .Convert (_fdfc );if _dgaf !=nil {return Image {},_dgaf ;};return _caed (_gcgc .Base ()),nil ;};func (_eee *PdfReader )newPdfAnnotationPopupFromDict (_cgdf *_aaa .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_geee :=PdfAnnotationPopup {};_geee .Parent =_cgdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_geee .Open =_cgdf .Get ("\u004f\u0070\u0065\u006e");return &_geee ,nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cfab *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the colorspace.
func (_efdc *PdfColorspaceSpecialSeparation )ToPdfObject ()_aaa .PdfObject {_fagbc :=_aaa .MakeArray (_aaa .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fagbc .Append (_efdc .ColorantName );_fagbc .Append (_efdc .AlternateSpace .ToPdfObject ());_fagbc .Append (_efdc .TintTransform .ToPdfObject ());if _efdc ._cfcab !=nil {_efdc ._cfcab .PdfObject =_fagbc ;return _efdc ._cfcab ;};return _fagbc ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_daadg *PdfReader )GetOCProperties ()(_aaa .PdfObject ,error ){_adad :=_daadg ._gdbc ;_dfdegac :=_adad .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dfdegac =_aaa .ResolveReference (_dfdegac );if !_daadg ._bcade {_beeb :=_daadg .traverseObjectData (_dfdegac );if _beeb !=nil {return nil ,_beeb ;};};return _dfdegac ,nil ;};func (_begd *pdfFontSimple )getFontEncoding ()(_eadgd string ,_cagf map[_aa .CharCode ]_aa .GlyphName ,_baefc error ){_eadgd ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _bfged ,_ffbe :=_dfbae [_begd ._edee ];_ffbe {_eadgd =_bfged ;}else if _begd .fontFlags ()&_dbbcf !=0{for _ebace ,_egcfe :=range _dfbae {if _af .Contains (_begd ._edee ,_ebace ){_eadgd =_egcfe ;break ;};};};if _begd .Encoding ==nil {return _eadgd ,nil ,nil ;};switch _fgdfe :=_begd .Encoding .(type ){case *_aaa .PdfObjectName :return string (*_fgdfe ),nil ,nil ;case *_aaa .PdfObjectDictionary :_dcec ,_gdeaa :=_aaa .GetName (_fgdfe .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gdeaa {_eadgd =_dcec .String ();};if _aabg :=_fgdfe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_aabg !=nil {_dbbeg ,_feaa :=_aaa .GetArray (_aabg );if !_feaa {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fgdfe ,_fgdfe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_aaa .ErrTypeError ;};_cagf ,_baefc =_aa .FromFontDifferences (_dbbeg );};return _eadgd ,_cagf ,_baefc ;default:_fe .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_begd .Encoding ,_begd .Encoding );return "",nil ,_aaa .ErrTypeError ;};};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ebdfd *PdfPageResources )SetXObjectImageByName (keyName _aaa .PdfObjectName ,ximg *XObjectImage )error {_bfca :=ximg .ToPdfObject ().(*_aaa .PdfObjectStream );_fabbd :=_ebdfd .SetXObjectByName (keyName ,_bfca );return _fabbd ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ad .PSProgram ;_ecfb *_ad .PSExecutor ;_fbeg []byte ;_eaga *_aaa .PdfObjectStream ;};

// Items returns all children outline items.
func (_ccged *OutlineItem )Items ()[]*OutlineItem {return _ccged .Entries };

// C returns the value of the cyan component of the color.
func (_fagfc *PdfColorDeviceCMYK )C ()float64 {return _fagfc [0]};

// ToPdfObject implements interface PdfModel.
func (_fdba *PdfAnnotationUnderline )ToPdfObject ()_aaa .PdfObject {_fdba .PdfAnnotation .ToPdfObject ();_adc :=_fdba ._fdd ;_cccc :=_adc .PdfObject .(*_aaa .PdfObjectDictionary );_fdba .PdfAnnotationMarkup .appendToPdfDictionary (_cccc );_cccc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_cccc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fdba .QuadPoints );return _adc ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_baeeg *PdfInfo )ToPdfObject ()_aaa .PdfObject {_ceca :=_aaa .MakeDict ();_ceca .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_baeeg .Title );_ceca .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_baeeg .Author );_ceca .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_baeeg .Subject );_ceca .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_baeeg .Keywords );_ceca .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_baeeg .Creator );_ceca .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_baeeg .Producer );_ceca .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_baeeg .Trapped );if _baeeg .CreationDate !=nil {_ceca .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_baeeg .CreationDate .ToPdfObject ());};if _baeeg .ModifiedDate !=nil {_ceca .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_baeeg .ModifiedDate .ToPdfObject ());};return _ceca ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ged *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ged .Alternate ==nil {_fe .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _ged .N ==1{_fe .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_affe :=NewPdfColorspaceDeviceGray ();return _affe .ImageToRGB (img );}else if _ged .N ==3{_fe .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _ged .N ==4{_fe .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_gfcd :=NewPdfColorspaceDeviceCMYK ();return _gfcd .ImageToRGB (img );}else {return img ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_fe .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ged );_becgc ,_bbae :=_ged .Alternate .ImageToRGB (img );_fe .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fe .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_becgc );return _becgc ,_bbae ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dgeag *XObjectImage )GetContainingPdfObject ()_aaa .PdfObject {return _dgeag ._eaea };func (_eaf *PdfReader )newPdfActionFromIndirectObject (_cba *_aaa .PdfIndirectObject )(*PdfAction ,error ){_bfg ,_cc :=_cba .PdfObject .(*_aaa .PdfObjectDictionary );if !_cc {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_eaf ._egba .GetModelFromPrimitive (_bfg );model !=nil {_dgfc ,_eef :=model .(*PdfAction );if !_eef {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _dgfc ,nil ;};_cfe :=&PdfAction {};_cfe ._afe =_cba ;_eaf ._egba .Register (_bfg ,_cfe );if _eea :=_bfg .Get ("\u0054\u0079\u0070\u0065");_eea !=nil {_cad ,_aee :=_eea .(*_aaa .PdfObjectName );if !_aee {_fe .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eea );}else {if *_cad !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fe .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_cad );};_cfe .Type =_cad ;};};if _ebg :=_bfg .Get ("\u004e\u0065\u0078\u0074");_ebg !=nil {_cfe .Next =_ebg ;};if _fafa :=_bfg .Get ("\u0053");_fafa !=nil {_cfe .S =_fafa ;};_cec ,_cede :=_cfe .S .(*_aaa .PdfObjectName );if !_cede {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cfe .S );return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cfe .S );};_cbe :=PdfActionType (_cec .String ());switch _cbe {case ActionTypeGoTo :_addg ,_fge :=_eaf .newPdfActionGotoFromDict (_bfg );if _fge !=nil {return nil ,_fge ;};_addg .PdfAction =_cfe ;_cfe ._ac =_addg ;return _cfe ,nil ;case ActionTypeGoToR :_bfga ,_eaff :=_eaf .newPdfActionGotoRFromDict (_bfg );if _eaff !=nil {return nil ,_eaff ;};_bfga .PdfAction =_cfe ;_cfe ._ac =_bfga ;return _cfe ,nil ;case ActionTypeGoToE :_ggdf ,_bfaf :=_eaf .newPdfActionGotoEFromDict (_bfg );if _bfaf !=nil {return nil ,_bfaf ;};_ggdf .PdfAction =_cfe ;_cfe ._ac =_ggdf ;return _cfe ,nil ;case ActionTypeLaunch :_fbd ,_dba :=_eaf .newPdfActionLaunchFromDict (_bfg );if _dba !=nil {return nil ,_dba ;};_fbd .PdfAction =_cfe ;_cfe ._ac =_fbd ;return _cfe ,nil ;case ActionTypeThread :_aag ,_fff :=_eaf .newPdfActionThreadFromDict (_bfg );if _fff !=nil {return nil ,_fff ;};_aag .PdfAction =_cfe ;_cfe ._ac =_aag ;return _cfe ,nil ;case ActionTypeURI :_fgg ,_ada :=_eaf .newPdfActionURIFromDict (_bfg );if _ada !=nil {return nil ,_ada ;};_fgg .PdfAction =_cfe ;_cfe ._ac =_fgg ;return _cfe ,nil ;case ActionTypeSound :_gd ,_fege :=_eaf .newPdfActionSoundFromDict (_bfg );if _fege !=nil {return nil ,_fege ;};_gd .PdfAction =_cfe ;_cfe ._ac =_gd ;return _cfe ,nil ;case ActionTypeMovie :_adae ,_dae :=_eaf .newPdfActionMovieFromDict (_bfg );if _dae !=nil {return nil ,_dae ;};_adae .PdfAction =_cfe ;_cfe ._ac =_adae ;return _cfe ,nil ;case ActionTypeHide :_gefg ,_fegeg :=_eaf .newPdfActionHideFromDict (_bfg );if _fegeg !=nil {return nil ,_fegeg ;};_gefg .PdfAction =_cfe ;_cfe ._ac =_gefg ;return _cfe ,nil ;case ActionTypeNamed :_cadg ,_fcb :=_eaf .newPdfActionNamedFromDict (_bfg );if _fcb !=nil {return nil ,_fcb ;};_cadg .PdfAction =_cfe ;_cfe ._ac =_cadg ;return _cfe ,nil ;case ActionTypeSubmitForm :_dbg ,_dad :=_eaf .newPdfActionSubmitFormFromDict (_bfg );if _dad !=nil {return nil ,_dad ;};_dbg .PdfAction =_cfe ;_cfe ._ac =_dbg ;return _cfe ,nil ;case ActionTypeResetForm :_dea ,_bdd :=_eaf .newPdfActionResetFormFromDict (_bfg );if _bdd !=nil {return nil ,_bdd ;};_dea .PdfAction =_cfe ;_cfe ._ac =_dea ;return _cfe ,nil ;case ActionTypeImportData :_cab ,_acd :=_eaf .newPdfActionImportDataFromDict (_bfg );if _acd !=nil {return nil ,_acd ;};_cab .PdfAction =_cfe ;_cfe ._ac =_cab ;return _cfe ,nil ;case ActionTypeSetOCGState :_ed ,_gde :=_eaf .newPdfActionSetOCGStateFromDict (_bfg );if _gde !=nil {return nil ,_gde ;};_ed .PdfAction =_cfe ;_cfe ._ac =_ed ;return _cfe ,nil ;case ActionTypeRendition :_adge ,_edd :=_eaf .newPdfActionRenditionFromDict (_bfg );if _edd !=nil {return nil ,_edd ;};_adge .PdfAction =_cfe ;_cfe ._ac =_adge ;return _cfe ,nil ;case ActionTypeTrans :_fef ,_faa :=_eaf .newPdfActionTransFromDict (_bfg );if _faa !=nil {return nil ,_faa ;};_fef .PdfAction =_cfe ;_cfe ._ac =_fef ;return _cfe ,nil ;case ActionTypeGoTo3DView :_dbc ,_age :=_eaf .newPdfActionGoTo3DViewFromDict (_bfg );if _age !=nil {return nil ,_age ;};_dbc .PdfAction =_cfe ;_cfe ._ac =_dbc ;return _cfe ,nil ;case ActionTypeJavaScript :_bbaa ,_dbca :=_eaf .newPdfActionJavaScriptFromDict (_bfg );if _dbca !=nil {return nil ,_dbca ;};_bbaa .PdfAction =_cfe ;_cfe ._ac =_bbaa ;return _cfe ,nil ;};_fe .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_cbe );return nil ,nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// AddOutlineTree adds outlines to a PDF file.
func (_fdaef *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fdaef ._fbage =outlineTree };

// String returns a string representation of the field.
func (_feebe *PdfField )String ()string {if _cabca ,_ggdd :=_feebe .ToPdfObject ().(*_aaa .PdfIndirectObject );_ggdd {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_feebe ._fbbd ,_cabca .PdfObject .String ());};return "";};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _aaa .PdfObject ;H _aaa .PdfObject ;};func (_dbfgb *PdfWriter )copyObject (_efdea _aaa .PdfObject ,_cfgbd map[_aaa .PdfObject ]_aaa .PdfObject ,_dggbg map[_aaa .PdfObject ]struct{},_dfgdfc bool )_aaa .PdfObject {_dggba :=!_dbfgb ._bbfdc &&_dggbg !=nil ;if _cgcgc ,_gcggf :=_cfgbd [_efdea ];_gcggf {if _dggba &&!_dfgdfc {delete (_dggbg ,_efdea );};return _cgcgc ;};_dfgbde :=_efdea ;switch _feebc :=_efdea .(type ){case *_aaa .PdfObjectArray :_cacb :=_aaa .MakeArray ();_dfgbde =_cacb ;_cfgbd [_efdea ]=_dfgbde ;for _ ,_faebbe :=range _feebc .Elements (){_cacb .Append (_dbfgb .copyObject (_faebbe ,_cfgbd ,_dggbg ,_dfgdfc ));};case *_aaa .PdfObjectStreams :_gabb :=&_aaa .PdfObjectStreams {PdfObjectReference :_feebc .PdfObjectReference };_dfgbde =_gabb ;_cfgbd [_efdea ]=_dfgbde ;for _ ,_ddffg :=range _feebc .Elements (){_gabb .Append (_dbfgb .copyObject (_ddffg ,_cfgbd ,_dggbg ,_dfgdfc ));};case *_aaa .PdfObjectStream :_dcbeg :=&_aaa .PdfObjectStream {Stream :_feebc .Stream ,PdfObjectReference :_feebc .PdfObjectReference };_dfgbde =_dcbeg ;_cfgbd [_efdea ]=_dfgbde ;_dcbeg .PdfObjectDictionary =_dbfgb .copyObject (_feebc .PdfObjectDictionary ,_cfgbd ,_dggbg ,_dfgdfc ).(*_aaa .PdfObjectDictionary );case *_aaa .PdfObjectDictionary :var _gdfge bool ;if _dggba &&!_dfgdfc {if _cedc ,_ :=_aaa .GetNameVal (_feebc .Get ("\u0054\u0079\u0070\u0065"));_cedc =="\u0050\u0061\u0067\u0065"{_ ,_bgcga :=_dbfgb ._ageec [_feebc ];_dfgdfc =!_bgcga ;_gdfge =_dfgdfc ;};};_adgfe :=_aaa .MakeDict ();_dfgbde =_adgfe ;_cfgbd [_efdea ]=_dfgbde ;for _ ,_aaggf :=range _feebc .Keys (){_adgfe .Set (_aaggf ,_dbfgb .copyObject (_feebc .Get (_aaggf ),_cfgbd ,_dggbg ,_dfgdfc ));};if _gdfge {_dfgbde =_aaa .MakeNull ();_dfgdfc =false ;};case *_aaa .PdfIndirectObject :_cecf :=&_aaa .PdfIndirectObject {PdfObjectReference :_feebc .PdfObjectReference };_dfgbde =_cecf ;_cfgbd [_efdea ]=_dfgbde ;_cecf .PdfObject =_dbfgb .copyObject (_feebc .PdfObject ,_cfgbd ,_dggbg ,_dfgdfc );case *_aaa .PdfObjectString :_fbgbd :=*_feebc ;_dfgbde =&_fbgbd ;_cfgbd [_efdea ]=_dfgbde ;case *_aaa .PdfObjectName :_cgbf :=*_feebc ;_dfgbde =&_cgbf ;_cfgbd [_efdea ]=_dfgbde ;case *_aaa .PdfObjectNull :_dfgbde =_aaa .MakeNull ();_cfgbd [_efdea ]=_dfgbde ;case *_aaa .PdfObjectInteger :_caaca :=*_feebc ;_dfgbde =&_caaca ;_cfgbd [_efdea ]=_dfgbde ;case *_aaa .PdfObjectReference :_cdbgg :=*_feebc ;_dfgbde =&_cdbgg ;_cfgbd [_efdea ]=_dfgbde ;case *_aaa .PdfObjectFloat :_ceae :=*_feebc ;_dfgbde =&_ceae ;_cfgbd [_efdea ]=_dfgbde ;case *_aaa .PdfObjectBool :_ddddd :=*_feebc ;_dfgbde =&_ddddd ;_cfgbd [_efdea ]=_dfgbde ;case *pdfSignDictionary :_cfgeb :=&pdfSignDictionary {PdfObjectDictionary :_aaa .MakeDict (),_edcdg :_feebc ._edcdg ,_cdcdg :_feebc ._cdcdg };_dfgbde =_cfgeb ;_cfgbd [_efdea ]=_dfgbde ;for _ ,_cbbfd :=range _feebc .Keys (){_cfgeb .Set (_cbbfd ,_dbfgb .copyObject (_feebc .Get (_cbbfd ),_cfgbd ,_dggbg ,_dfgdfc ));};default:_fe .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_efdea );};if _dggba &&_dfgdfc {_dggbg [_efdea ]=struct{}{};};return _dfgbde ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_aaa .PdfObjectStream )(*XObjectImage ,error ){_aacdbc :=&XObjectImage {};_aacdbc ._eaea =stream ;_cfaae :=*(stream .PdfObjectDictionary );_egege ,_gbabd :=_aaa .NewEncoderFromStream (stream );if _gbabd !=nil {return nil ,_gbabd ;};_aacdbc .Filter =_egege ;if _daege :=_aaa .TraceToDirectObject (_cfaae .Get ("\u0057\u0069\u0064t\u0068"));_daege !=nil {_gbdce ,_ccfbca :=_daege .(*_aaa .PdfObjectInteger );if !_ccfbca {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_edfaed :=int64 (*_gbdce );_aacdbc .Width =&_edfaed ;}else {return nil ,_ee .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ffgcb :=_aaa .TraceToDirectObject (_cfaae .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_ffgcb !=nil {_gadb ,_bafadc :=_ffgcb .(*_aaa .PdfObjectInteger );if !_bafadc {return nil ,_ee .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cfeae :=int64 (*_gadb );_aacdbc .Height =&_cfeae ;}else {return nil ,_ee .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _efcd :=_aaa .TraceToDirectObject (_cfaae .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_efcd !=nil {_eebbe ,_dgga :=NewPdfColorspaceFromPdfObject (_efcd );if _dgga !=nil {return nil ,_dgga ;};_aacdbc .ColorSpace =_eebbe ;}else {_fe .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_aacdbc .ColorSpace =NewPdfColorspaceDeviceGray ();};if _caggb :=_aaa .TraceToDirectObject (_cfaae .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_caggb !=nil {_egaaf ,_befed :=_caggb .(*_aaa .PdfObjectInteger );if !_befed {return nil ,_ee .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fgbd :=int64 (*_egaaf );_aacdbc .BitsPerComponent =&_fgbd ;};_aacdbc .Intent =_cfaae .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_aacdbc .ImageMask =_cfaae .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_aacdbc .Mask =_cfaae .Get ("\u004d\u0061\u0073\u006b");_aacdbc .Decode =_cfaae .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_aacdbc .Interpolate =_cfaae .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_aacdbc .Alternatives =_cfaae .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_aacdbc .SMask =_cfaae .Get ("\u0053\u004d\u0061s\u006b");_aacdbc .SMaskInData =_cfaae .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_aacdbc .Matte =_cfaae .Get ("\u004d\u0061\u0074t\u0065");_aacdbc .Name =_cfaae .Get ("\u004e\u0061\u006d\u0065");_aacdbc .StructParent =_cfaae .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_aacdbc .ID =_cfaae .Get ("\u0049\u0044");_aacdbc .OPI =_cfaae .Get ("\u004f\u0050\u0049");_aacdbc .Metadata =_cfaae .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_aacdbc .OC =_cfaae .Get ("\u004f\u0043");_aacdbc .Stream =stream .Stream ;return _aacdbc ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_caff *modelManager )GetPrimitiveFromModel (model PdfModel )_aaa .PdfObject {_gfada ,_ffafa :=_caff ._dggf [model ];if !_ffafa {return nil ;};return _gfada ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_feagg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _feagg .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_caeaf []byte )(_adeac int ,_abfd error );};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_dfegg *_aaa .PdfObjectDictionary ;_bddbe *_aaa .PdfIndirectObject ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ecfcca *Outline )ToPdfOutline ()*PdfOutline {_bcdbef :=NewPdfOutline ();var _fbegf []*PdfOutlineItem ;var _gebcc int64 ;var _dbegd *PdfOutlineItem ;for _ ,_fbgba :=range _ecfcca .Entries {_dbgbg ,_ddeb :=_fbgba .ToPdfOutlineItem ();_dbgbg .Parent =&_bcdbef .PdfOutlineTreeNode ;if _dbegd !=nil {_dbegd .Next =&_dbgbg .PdfOutlineTreeNode ;_dbgbg .Prev =&_dbegd .PdfOutlineTreeNode ;};_fbegf =append (_fbegf ,_dbgbg );_gebcc +=_ddeb ;_dbegd =_dbgbg ;};_fbbg :=int64 (len (_fbegf ));_gebcc +=_fbbg ;if _fbbg > 0{_bcdbef .First =&_fbegf [0].PdfOutlineTreeNode ;_bcdbef .Last =&_fbegf [_fbbg -1].PdfOutlineTreeNode ;_bcdbef .Count =&_gebcc ;};return _bcdbef ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_afbe *PdfOutlineTreeNode )GetContainingPdfObject ()_aaa .PdfObject {return _afbe .GetContext ().GetContainingPdfObject ();};func _ffggbf (_gceag _aaa .PdfObject )(*PdfFunctionType2 ,error ){_dgbef :=&PdfFunctionType2 {};var _gbbfe *_aaa .PdfObjectDictionary ;if _babgf ,_beaggf :=_gceag .(*_aaa .PdfIndirectObject );_beaggf {_cadfc ,_aebeg :=_babgf .PdfObject .(*_aaa .PdfObjectDictionary );if !_aebeg {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgbef ._aadbe =_babgf ;_gbbfe =_cadfc ;}else if _afefb ,_egbe :=_gceag .(*_aaa .PdfObjectDictionary );_egbe {_gbbfe =_afefb ;}else {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fe .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gbbfe .String ());_aebaa ,_eefdd :=_aaa .TraceToDirectObject (_gbbfe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aaa .PdfObjectArray );if !_eefdd {_fe .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aebaa .Len ()< 0||_aebaa .Len ()%2!=0{_fe .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bfcc ,_cabg :=_aebaa .ToFloat64Array ();if _cabg !=nil {return nil ,_cabg ;};_dgbef .Domain =_bfcc ;_aebaa ,_eefdd =_aaa .TraceToDirectObject (_gbbfe .Get ("\u0052\u0061\u006eg\u0065")).(*_aaa .PdfObjectArray );if _eefdd {if _aebaa .Len ()< 0||_aebaa .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gbcfc ,_ecgf :=_aebaa .ToFloat64Array ();if _ecgf !=nil {return nil ,_ecgf ;};_dgbef .Range =_gbcfc ;};_aebaa ,_eefdd =_aaa .TraceToDirectObject (_gbbfe .Get ("\u0043\u0030")).(*_aaa .PdfObjectArray );if _eefdd {_eagbc ,_gbca :=_aebaa .ToFloat64Array ();if _gbca !=nil {return nil ,_gbca ;};_dgbef .C0 =_eagbc ;};_aebaa ,_eefdd =_aaa .TraceToDirectObject (_gbbfe .Get ("\u0043\u0031")).(*_aaa .PdfObjectArray );if _eefdd {_gfacb ,_ggcbg :=_aebaa .ToFloat64Array ();if _ggcbg !=nil {return nil ,_ggcbg ;};_dgbef .C1 =_gfacb ;};if len (_dgbef .C0 )!=len (_dgbef .C1 ){_fe .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_aaa .ErrRangeError ;};N ,_cabg :=_aaa .GetNumberAsFloat (_aaa .TraceToDirectObject (_gbbfe .Get ("\u004e")));if _cabg !=nil {_fe .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gbbfe .String ());return nil ,_cabg ;};_dgbef .N =N ;return _dgbef ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cdg :=NewPdfAction ();_egd :=&PdfActionImportData {};_egd .PdfAction =_cdg ;_cdg .SetContext (_egd );return _egd ;};

// ToPdfObject implements interface PdfModel.
func (_geca *PdfAnnotationText )ToPdfObject ()_aaa .PdfObject {_geca .PdfAnnotation .ToPdfObject ();_fded :=_geca ._fdd ;_fbge :=_fded .PdfObject .(*_aaa .PdfObjectDictionary );if _geca .PdfAnnotationMarkup !=nil {_geca .PdfAnnotationMarkup .appendToPdfDictionary (_fbge );};_fbge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0054\u0065\u0078\u0074"));_fbge .SetIfNotNil ("\u004f\u0070\u0065\u006e",_geca .Open );_fbge .SetIfNotNil ("\u004e\u0061\u006d\u0065",_geca .Name );_fbge .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_geca .State );_fbge .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_geca .StateModel );return _fded ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_aaa .PdfIndirectObject )*PdfOutlineItem {_eeec :=PdfOutlineItem {};_eeec ._egceg =&_eeec ;_eeec .Title =_aaa .MakeString (title );_dbedg :=_aaa .MakeArray ();_dbedg .Append (page );_dbedg .Append (_aaa .MakeName ("\u0046\u0069\u0074"));_eeec .Dest =_dbedg ;return &_eeec ;};func _bgde (_fddaaa *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_fddaaa }};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_adba *PdfFieldButton )ToPdfObject ()_aaa .PdfObject {_adba .PdfField .ToPdfObject ();_cbcbd :=_adba ._badf ;_agec :=_cbcbd .PdfObject .(*_aaa .PdfObjectDictionary );_agec .Set ("\u0046\u0054",_aaa .MakeName ("\u0042\u0074\u006e"));if _adba .Opt !=nil {_agec .Set ("\u004f\u0070\u0074",_adba .Opt );};return _cbcbd ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_bceea *PdfSignature )bool ;Validate (_ddggc *PdfSignature ,_bgcg Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_ffggf *PdfSignature )(Hasher ,error );Sign (_adaf *PdfSignature ,_becad Hasher )error ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ffege *Image )ToJBIG2Image ()(*_aaa .JBIG2Image ,error ){_edaa ,_feede :=_ffege .ToGoImage ();if _feede !=nil {return nil ,_feede ;};return _aaa .GoImageToJBIG2 (_edaa ,_aaa .JB2ImageAutoThreshold );};

// WriteString outputs the object as it is to be written to file.
func (_ccga *pdfSignDictionary )WriteString ()string {_ccga ._eafd =0;_ccga ._dfaa =0;_ccga ._fgcec =0;_ccga ._eacag =0;_gecg :=_bb .NewBuffer (nil );_gecg .WriteString ("\u003c\u003c");for _ ,_fefbf :=range _ccga .Keys (){_dfef :=_ccga .Get (_fefbf );switch _fefbf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gecg .WriteString (_fefbf .WriteString ());_gecg .WriteString ("\u0020");_ccga ._fgcec =_gecg .Len ();_gecg .WriteString (_dfef .WriteString ());_gecg .WriteString ("\u0020");_ccga ._eacag =_gecg .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gecg .WriteString (_fefbf .WriteString ());_gecg .WriteString ("\u0020");_ccga ._eafd =_gecg .Len ();_gecg .WriteString (_dfef .WriteString ());_gecg .WriteString ("\u0020");_ccga ._dfaa =_gecg .Len ()-1;default:_gecg .WriteString (_fefbf .WriteString ());_gecg .WriteString ("\u0020");_gecg .WriteString (_dfef .WriteString ());};};_gecg .WriteString ("\u003e\u003e");return _gecg .String ();};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_ceee *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_eagb :=&PdfBorderStyle {};return _eagb };

// Height returns the height of `rect`.
func (_agdf *PdfRectangle )Height ()float64 {return _dg .Abs (_agdf .Ury -_agdf .Lly )};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_fdafe *PdfPage )GetContentStreamObjs ()[]_aaa .PdfObject {if _fdafe .Contents ==nil {return nil ;};_dfcac :=_aaa .TraceToDirectObject (_fdafe .Contents );if _acadf ,_gggcc :=_dfcac .(*_aaa .PdfObjectArray );_gggcc {return _acadf .Elements ();};return []_aaa .PdfObject {_dfcac };};func (_aefb *DSS )addOCSPs (_agcb [][]byte )([]*_aaa .PdfObjectStream ,error ){return _aefb .add (&_aefb .OCSPs ,_aefb ._cdgd ,_agcb );};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_abbe :=NewPdfAnnotation ();_bgef :=&PdfAnnotationInk {};_bgef .PdfAnnotation =_abbe ;_bgef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abbe .SetContext (_bgef );return _bgef ;};func (_aeef fontCommon )asPdfObjectDictionary (_deaag string )*_aaa .PdfObjectDictionary {if _deaag !=""&&_aeef ._fbeb !=""&&_deaag !=_aeef ._fbeb {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_deaag ,_aeef );}else if _deaag ==""&&_aeef ._fbeb ==""{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_aeef );}else if _aeef ._fbeb ==""{_aeef ._fbeb =_deaag ;};_eecdf :=_aaa .MakeDict ();_eecdf .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0046\u006f\u006e\u0074"));_eecdf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_aaa .MakeName (_aeef ._edee ));_eecdf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName (_aeef ._fbeb ));if _aeef ._ebcac !=nil {_eecdf .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_aeef ._ebcac .ToPdfObject ());};if _aeef ._bdae !=nil {_eecdf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_aeef ._bdae );}else if _aeef ._fgcf !=nil {_gdedc ,_aeec :=_aeef ._fgcf .Stream ();if _aeec !=nil {_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_aeec );}else {_eecdf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gdedc );};};return _eecdf ;};

// GetNumPages returns the number of pages in the document.
func (_fdabd *PdfReader )GetNumPages ()(int ,error ){if _fdabd ._gcee .GetCrypter ()!=nil &&!_fdabd ._gcee .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_fdabd ._cfdf ),nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_deeeb *PdfPage )Duplicate ()*PdfPage {_cada :=*_deeeb ;_cada ._afaag =_aaa .MakeDict ();_cada ._beecaf =_aaa .MakeIndirectObject (_cada ._afaag );return &_cada ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ffdge *PdfPageResources )SetColorspaceByName (keyName _aaa .PdfObjectName ,cs PdfColorspace )error {_ccag ,_fffba :=_ffdge .GetColorspaces ();if _fffba !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fffba );return _fffba ;};if _ccag ==nil {_ccag =NewPdfPageResourcesColorspaces ();_ffdge .SetColorSpace (_ccag );};_ccag .Set (keyName ,cs );return nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ggcc *PdfField )SetContext (ctx PdfModel ){_ggcc ._fbbd =ctx };

// DecodeArray returns the component range values for the Separation colorspace.
func (_fffc *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gcabf :=appender .Reader .DSS ;if _gcabf ==nil {_gcabf =NewDSS ();};if _adfa :=_gcabf .generateHashMaps ();_adfa !=nil {return nil ,_adfa ;};return &LTV {CertClient :_gg .NewCertClient (),OCSPClient :_gg .NewOCSPClient (),CRLClient :_gg .NewCRLClient (),SkipExisting :true ,_gbedb :appender ,_edada :_gcabf },nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fedcg *PdfPageResources )GetShadingByName (keyName _aaa .PdfObjectName )(*PdfShading ,bool ){if _fedcg .Shading ==nil {return nil ,false ;};_edge ,_eccd :=_aaa .TraceToDirectObject (_fedcg .Shading ).(*_aaa .PdfObjectDictionary );if !_eccd {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fedcg .Shading );return nil ,false ;};if _eafc :=_edge .Get (keyName );_eafc !=nil {_cafc ,_dege :=_cafad (_eafc );if _dege !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_dege );return nil ,false ;};return _cafc ,true ;};return nil ,false ;};

// ToPdfObject converts date to a PDF string object.
func (_ggcg *PdfDate )ToPdfObject ()_aaa .PdfObject {_gceaa :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ggcg ._dabbb ,_ggcg ._ddfgec ,_ggcg ._facec ,_ggcg ._cbgfb ,_ggcg ._bceeb ,_ggcg ._faec ,_ggcg ._daef ,_ggcg ._fdecg ,_ggcg ._eaabg );return _aaa .MakeString (_gceaa );};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_egdgf *PdfAppender )Write (w _agb .Writer )error {if _egdgf ._fgbc {return _ee .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_fedc :=NewPdfWriter ();_eedc ,_ddgc :=_aaa .GetDict (_fedc ._ffgad );if !_ddgc {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_aebg ,_ddgc :=_eedc .Get ("\u004b\u0069\u0064\u0073").(*_aaa .PdfObjectArray );if !_ddgc {return _ee .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_ebe ,_ddgc :=_eedc .Get ("\u0043\u006f\u0075n\u0074").(*_aaa .PdfObjectInteger );if !_ddgc {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_fab :=_egdgf ._efcg ._gcee ;_dcee :=_fab .GetTrailer ();if _dcee ==nil {return _ee .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fabg ,_ddgc :=_aaa .GetIndirect (_dcee .Get ("\u0052\u006f\u006f\u0074"));if !_ddgc {return _ee .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_caa ,_ddgc :=_aaa .GetDict (_fabg );if !_ddgc {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fabg ,*_dcee );return _ee .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_fdae :=range _caa .Keys (){if _fedc ._fbfbc .Get (_fdae )==nil {_ffecd :=_caa .Get (_fdae );_fedc ._fbfbc .Set (_fdae ,_ffecd );};};if _egdgf ._abca !=nil {_fedc ._fbfbc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_egdgf ._abca .ToPdfObject ());_egdgf .updateObjectsDeep (_egdgf ._abca .ToPdfObject (),nil );};if _egdgf ._bad !=nil {_egdgf .updateObjectsDeep (_egdgf ._bad .ToPdfObject (),nil );_fedc ._fbfbc .Set ("\u0044\u0053\u0053",_egdgf ._bad .GetContainingPdfObject ());};if _fedc ._fabf < 2{_fedc .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_fedc .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_egdgf .addNewObject (_fedc ._agadg );_egdgf .addNewObject (_fedc ._fadafa );_abfge :=false ;if len (_egdgf ._efcg .PageList )!=len (_egdgf ._ebdea ){_abfge =true ;}else {for _eacf :=range _egdgf ._efcg .PageList {switch {case _egdgf ._ebdea [_eacf ]==_egdgf ._efcg .PageList [_eacf ]:case _egdgf ._ebdea [_eacf ]==_egdgf .Reader .PageList [_eacf ]:default:_abfge =true ;};if _abfge {break ;};};};if _abfge {_egdgf .updateObjectsDeep (_fedc ._ffgad ,nil );}else {_egdgf ._bagd [_fedc ._ffgad ]=struct{}{};};_fedc ._ffgad .ObjectNumber =_egdgf .Reader ._eeagd .ObjectNumber ;_egdgf ._baee [_fedc ._ffgad ]=_egdgf .Reader ._eeagd .ObjectNumber ;_gbac :=[]_aaa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ebdf :=range _egdgf ._ebdea {_aece :=_ebdf .ToPdfObject ();*_ebe =*_ebe +1;if _abbf ,_dcaa :=_aece .(*_aaa .PdfIndirectObject );_dcaa &&_abbf .GetParser ()==_egdgf ._efcg ._gcee {_aebg .Append (&_abbf .PdfObjectReference );continue ;};if _fbfd ,_gece :=_aaa .GetDict (_aece );_gece {_abeb ,_fcbgg :=_fbfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aaa .PdfIndirectObject );for _fcbgg {_fe .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_abeb );_bfgg ,_beea :=_abeb .PdfObject .(*_aaa .PdfObjectDictionary );if !_beea {return _ee .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_ggcb :=range _gbac {_fe .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ggcb );if _fbfd .Get (_ggcb )!=nil {_fe .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _gbbb :=_bfgg .Get (_ggcb );_gbbb !=nil {_fe .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ggcb );_fbfd .Set (_ggcb ,_gbbb );};};_abeb ,_fcbgg =_bfgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aaa .PdfIndirectObject );_fe .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fbfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fedc ._ffgad );};_egdgf .updateObjectsDeep (_aece ,nil );_aebg .Append (_aece );};if _ ,_dbff :=_egdgf ._bcgca .Seek (0,_agb .SeekStart );_dbff !=nil {return _dbff ;};_bebd :=make (map[SignatureHandler ]_agb .Writer );_ccf :=_aaa .MakeArray ();for _ ,_ebed :=range _egdgf ._cgcd {if _dbef ,_ggda :=_aaa .GetIndirect (_ebed );_ggda {if _aaf ,_caaa :=_dbef .PdfObject .(*pdfSignDictionary );_caaa {_dee :=*_aaf ._edcdg ;var _fcbd error ;_bebd [_dee ],_fcbd =_dee .NewDigest (_aaf ._cdcdg );if _fcbd !=nil {return _fcbd ;};_ccf .Append (_aaa .MakeInteger (0xfffff),_aaa .MakeInteger (0xfffff));};};};if _ccf .Len ()> 0{_ccf .Append (_aaa .MakeInteger (0xfffff),_aaa .MakeInteger (0xfffff));};for _ ,_bcbc :=range _egdgf ._cgcd {if _gfbg ,_bgca :=_aaa .GetIndirect (_bcbc );_bgca {if _dcgg ,_cdfg :=_gfbg .PdfObject .(*pdfSignDictionary );_cdfg {_dcgg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ccf );};};};_befg :=len (_bebd )> 0;var _fbgd _agb .Reader =_egdgf ._bcgca ;if _befg {_gcegb :=make ([]_agb .Writer ,0,len (_bebd ));for _ ,_bagga :=range _bebd {_gcegb =append (_gcegb ,_bagga );};_fbgd =_agb .TeeReader (_egdgf ._bcgca ,_agb .MultiWriter (_gcegb ...));};_cdfb ,_gfd :=_agb .Copy (w ,_fbgd );if _gfd !=nil {return _gfd ;};if len (_egdgf ._cgcd )==0{return nil ;};_fedc ._edbeb =_cdfb ;_fedc .ObjNumOffset =_egdgf ._acda ;_fedc ._bbfdc =true ;_fedc ._abgfb =_egdgf ._defe ;_fedc ._dbfed =_egdgf ._edcce ;_fedc ._daec =_egdgf ._gfab ;_fedc ._gbgcf =_egdgf ._efcg .PdfVersion ().Minor ;_fedc ._babab =_egdgf ._baee ;_acdb :=_egdgf ._fgce .GetXrefType ();if _acdb !=nil {_ddcag :=*_acdb ==_aaa .XrefTypeObjectStream ;_fedc ._baaff =&_ddcag ;};_fedc ._gfggg =map[_aaa .PdfObject ]struct{}{};_fedc ._dbbec =[]_aaa .PdfObject {};for _ ,_cbdb :=range _egdgf ._cgcd {if _ ,_ffdc :=_egdgf ._bagd [_cbdb ];_ffdc {continue ;};_fedc .addObject (_cbdb );};_aga :=w ;if _befg {_aga =_bb .NewBuffer (nil );};if _gcdf :=_fedc .Write (_aga );_gcdf !=nil {return _gcdf ;};if _befg {_cdfdd :=_aga .(*_bb .Buffer ).Bytes ();_cea :=_aaa .MakeArray ();var _eedbe []*pdfSignDictionary ;var _cac int64 ;for _ ,_cfad :=range _fedc ._dbbec {if _fada ,_aaed :=_aaa .GetIndirect (_cfad );_aaed {if _bbce ,_ccae :=_fada .PdfObject .(*pdfSignDictionary );_ccae {_eedbe =append (_eedbe ,_bbce );_dcda :=_bbce ._abda +int64 (_bbce ._eafd );_cea .Append (_aaa .MakeInteger (_cac ),_aaa .MakeInteger (_dcda -_cac ));_cac =_bbce ._abda +int64 (_bbce ._dfaa );};};};_cea .Append (_aaa .MakeInteger (_cac ),_aaa .MakeInteger (_cdfb +int64 (len (_cdfdd ))-_cac ));_eecba :=[]byte (_cea .WriteString ());for _ ,_decc :=range _eedbe {_dbaa :=int (_decc ._abda -_cdfb );for _eaffb :=_decc ._fgcec ;_eaffb < _decc ._eacag ;_eaffb ++{_cdfdd [_dbaa +_eaffb ]=' ';};_gbde :=_cdfdd [_dbaa +_decc ._fgcec :_dbaa +_decc ._eacag ];copy (_gbde ,_eecba );};var _addad int ;for _ ,_badg :=range _eedbe {_dfga :=int (_badg ._abda -_cdfb );_ecef :=_cdfdd [_addad :_dfga +_badg ._eafd ];_fdf :=*_badg ._edcdg ;_bebd [_fdf ].Write (_ecef );_addad =_dfga +_badg ._dfaa ;};for _ ,_eefa :=range _eedbe {_gcag :=_cdfdd [_addad :];_abbcg :=*_eefa ._edcdg ;_bebd [_abbcg ].Write (_gcag );};for _ ,_bbdb :=range _eedbe {_bdcf :=int (_bbdb ._abda -_cdfb );_dfa :=*_bbdb ._edcdg ;_cagg :=_bebd [_dfa ];if _cdcf :=_dfa .Sign (_bbdb ._cdcdg ,_cagg );_cdcf !=nil {return _cdcf ;};_bbdb ._cdcdg .ByteRange =_cea ;_gfba :=[]byte (_bbdb ._cdcdg .Contents .WriteString ());for _dbbf :=_bbdb ._fgcec ;_dbbf < _bbdb ._eacag ;_dbbf ++{_cdfdd [_bdcf +_dbbf ]=' ';};for _fffb :=_bbdb ._eafd ;_fffb < _bbdb ._dfaa ;_fffb ++{_cdfdd [_bdcf +_fffb ]=' ';};_acgg :=_cdfdd [_bdcf +_bbdb ._fgcec :_bdcf +_bbdb ._eacag ];copy (_acgg ,_eecba );_acgg =_cdfdd [_bdcf +_bbdb ._eafd :_bdcf +_bbdb ._dfaa ];copy (_acgg ,_gfba );};_abg :=_bb .NewBuffer (_cdfdd );_ ,_gfd =_agb .Copy (w ,_abg );if _gfd !=nil {return _gfd ;};};_egdgf ._fgbc =true ;return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ceccc *PdfShadingPattern )ToPdfObject ()_aaa .PdfObject {_ceccc .PdfPattern .ToPdfObject ();_dcaac :=_ceccc .getDict ();if _ceccc .Shading !=nil {_dcaac .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ceccc .Shading .ToPdfObject ());};if _ceccc .Matrix !=nil {_dcaac .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ceccc .Matrix );};if _ceccc .ExtGState !=nil {_dcaac .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ceccc .ExtGState );};return _ceccc ._eabbc ;};

// StdFontName represents name of a standard font.
type StdFontName =_gf .StdFontName ;const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// ToPdfObject implements interface PdfModel.
func (_egf *PdfActionRendition )ToPdfObject ()_aaa .PdfObject {_egf .PdfAction .ToPdfObject ();_gef :=_egf ._afe ;_gcab :=_gef .PdfObject .(*_aaa .PdfObjectDictionary );_gcab .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeRendition )));_gcab .SetIfNotNil ("\u0052",_egf .R );_gcab .SetIfNotNil ("\u0041\u004e",_egf .AN );_gcab .SetIfNotNil ("\u004f\u0050",_egf .OP );_gcab .SetIfNotNil ("\u004a\u0053",_egf .JS );return _gef ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_eagbb *PdfReader )IsEncrypted ()(bool ,error ){return _eagbb ._gcee .IsEncrypted ()};func _deddd (_addf *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_addf }};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_egae *PdfAnnotation )ToPdfObject ()_aaa .PdfObject {_fgbe :=_egae ._fdd ;_gbec :=_fgbe .PdfObject .(*_aaa .PdfObjectDictionary );_gbec .Clear ();_gbec .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0041\u006e\u006eo\u0074"));_gbec .SetIfNotNil ("\u0052\u0065\u0063\u0074",_egae .Rect );_gbec .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_egae .Contents );_gbec .SetIfNotNil ("\u0050",_egae .P );_gbec .SetIfNotNil ("\u004e\u004d",_egae .NM );_gbec .SetIfNotNil ("\u004d",_egae .M );_gbec .SetIfNotNil ("\u0046",_egae .F );_gbec .SetIfNotNil ("\u0041\u0050",_egae .AP );_gbec .SetIfNotNil ("\u0041\u0053",_egae .AS );_gbec .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_egae .Border );_gbec .SetIfNotNil ("\u0043",_egae .C );_gbec .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_egae .StructParent );_gbec .SetIfNotNil ("\u004f\u0043",_egae .OC );return _fgbe ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_dabbb int64 ;_ddfgec int64 ;_facec int64 ;_cbgfb int64 ;_bceeb int64 ;_faec int64 ;_daef byte ;_fdecg int64 ;_eaabg int64 ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_fdab *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _ebfea []float64 ;for _bagda :=0;_bagda < _fdab .GetNumComponents ();_bagda ++{_ebfea =append (_ebfea ,0.0,1.0);};return _ebfea ;};var _ _aaa .PdfObject =&pdfSignDictionary {};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gggg ,_bbcee :=NewStandard14Font (basefont );if _bbcee !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _gggg ;};

// A returns the value of the A component of the color.
func (_fae *PdfColorCalRGB )A ()float64 {return _fae [0]};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cbfbe *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbfb :=vals [0];if _dbfb < 0.0||_dbfb > 100.0{_fe .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dbfb );return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbeb :=vals [1];_caab :=float64 (-100);_aadg :=float64 (100);if len (_cbfbe .Range )> 1{_caab =_cbfbe .Range [0];_aadg =_cbfbe .Range [1];};if _gbeb < _caab ||_gbeb > _aadg {_fe .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gbeb ,_caab ,_aadg );return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbdg :=vals [2];_feee :=float64 (-100);_edgf :=float64 (100);if len (_cbfbe .Range )> 3{_feee =_cbfbe .Range [2];_edgf =_cbfbe .Range [3];};if _bbdg < _feee ||_bbdg > _edgf {_fe .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bbdg ,_feee ,_edgf );return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfca :=NewPdfColorLab (_dbfb ,_gbeb ,_bbdg );return _cfca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_beba *PdfBorderStyle )ToPdfObject ()_aaa .PdfObject {_aggdf :=_aaa .MakeDict ();if _beba ._adda !=nil {if _eaca ,_egfa :=_beba ._adda .(*_aaa .PdfIndirectObject );_egfa {_eaca .PdfObject =_aggdf ;};};_aggdf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _beba .W !=nil {_aggdf .Set ("\u0057",_aaa .MakeFloat (*_beba .W ));};if _beba .S !=nil {_aggdf .Set ("\u0053",_aaa .MakeName (_beba .S .GetPdfName ()));};if _beba .D !=nil {_aggdf .Set ("\u0044",_aaa .MakeArrayFromIntegers (*_beba .D ));};if _beba ._adda !=nil {return _beba ._adda ;};return _aggdf ;};

// IsColored specifies if the pattern is colored.
func (_cbgec *PdfTilingPattern )IsColored ()bool {if _cbgec .PaintType !=nil &&*_cbgec .PaintType ==1{return true ;};return false ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_dcgdf *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _dcgdf .fill (provider ,appGen );};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_edgd *DSS )GetContainingPdfObject ()_aaa .PdfObject {return _edgd ._egfac };

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_eacda DefaultImageHandler )NewImageFromGoImage (goimg _db .Image )(*Image ,error ){_edadd ,_fccd :=_bc .FromGoImage (goimg );if _fccd !=nil {return nil ,_fccd ;};_cbda :=_caed (_edadd .Base ());return &_cbda ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_egccc pdfCIDFontType0 )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){return _gf .CharMetrics {Wx :_egccc ._ddgfb },true ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_fgdaa *PdfPageResources )GetXObjectImageByName (keyName _aaa .PdfObjectName )(*XObjectImage ,error ){_ebaae ,_faebc :=_fgdaa .GetXObjectByName (keyName );if _ebaae ==nil {return nil ,nil ;};if _faebc !=XObjectTypeImage {return nil ,_ee .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_fggaeb ,_bedbf :=NewXObjectImageFromStream (_ebaae );if _bedbf !=nil {return nil ,_bedbf ;};return _fggaeb ,nil ;};func (_cdcc *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_cbfbfc *LTV )EnableChain (chain []*_be .Certificate )error {return _cbfbfc .enable (nil ,chain ,"");};

// String returns a string describing the font descriptor.
func (_abaed *PdfFontDescriptor )String ()string {var _ggga []string ;if _abaed .FontName !=nil {_ggga =append (_ggga ,_abaed .FontName .String ());};if _abaed .FontFamily !=nil {_ggga =append (_ggga ,_abaed .FontFamily .String ());};if _abaed .fontFile !=nil {_ggga =append (_ggga ,_abaed .fontFile .String ());};if _abaed ._gbebb !=nil {_ggga =append (_ggga ,_abaed ._gbebb .String ());};_ggga =append (_ggga ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_abaed .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_af .Join (_ggga ,"\u002c\u0020"));};func _fegba ()_g .Time {_eggb .Lock ();defer _eggb .Unlock ();return _cdaeb };

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_fg :=NewPdfAction ();_da :=&PdfActionGoToR {};_da .PdfAction =_fg ;_fg .SetContext (_da );return _da ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_adgca *PdfShading )GetContainingPdfObject ()_aaa .PdfObject {return _adgca ._cfade };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abgba *PdfShadingType1 )ToPdfObject ()_aaa .PdfObject {_abgba .PdfShading .ToPdfObject ();_gbfgc ,_bdgd :=_abgba .getShadingDict ();if _bdgd !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _abgba .Domain !=nil {_gbfgc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abgba .Domain );};if _abgba .Matrix !=nil {_gbfgc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_abgba .Matrix );};if _abgba .Function !=nil {if len (_abgba .Function )==1{_gbfgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abgba .Function [0].ToPdfObject ());}else {_bafcb :=_aaa .MakeArray ();for _ ,_febed :=range _abgba .Function {_bafcb .Append (_febed .ToPdfObject ());};_gbfgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bafcb );};};return _abgba ._cfade ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fgaa *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbfe :=vals [0];if _dbfe < 0.0||_dbfe > 1.0{_fe .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _dbfe < 0.0{_dbfe =0.0;}else if _dbfe > 1.0{_dbfe =1.0;};return NewPdfColorDeviceGray (_dbfe ),nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cfbfg *PdfShadingType2 )ToPdfObject ()_aaa .PdfObject {_cfbfg .PdfShading .ToPdfObject ();_bdaba ,_bbgad :=_cfbfg .getShadingDict ();if _bbgad !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bdaba ==nil {_fe .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _cfbfg .Coords !=nil {_bdaba .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cfbfg .Coords );};if _cfbfg .Domain !=nil {_bdaba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfbfg .Domain );};if _cfbfg .Function !=nil {if len (_cfbfg .Function )==1{_bdaba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfbfg .Function [0].ToPdfObject ());}else {_cbbdd :=_aaa .MakeArray ();for _ ,_fbbdc :=range _cfbfg .Function {_cbbdd .Append (_fbbdc .ToPdfObject ());};_bdaba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbbdd );};};if _cfbfg .Extend !=nil {_bdaba .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cfbfg .Extend );};return _cfbfg ._cfade ;};func _gefgf (_bgcd *_aaa .PdfObjectDictionary ,_deeag *fontCommon ,_ffee _aa .TextEncoder )(*pdfFontSimple ,error ){_dcbb :=_deddd (_deeag );_dcbb ._fgeef =_ffee ;if _ffee ==nil {_cffb :=_bgcd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _cffb ==nil {_cffb =_aaa .MakeInteger (0);};_dcbb .FirstChar =_cffb ;_dbee ,_bbagc :=_aaa .GetIntVal (_cffb );if !_bbagc {_fe .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cffb );return nil ,_aaa .ErrTypeError ;};_aebda :=_aa .CharCode (_dbee );_cffb =_bgcd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cffb ==nil {_cffb =_aaa .MakeInteger (255);};_dcbb .LastChar =_cffb ;_dbee ,_bbagc =_aaa .GetIntVal (_cffb );if !_bbagc {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cffb );return nil ,_aaa .ErrTypeError ;};_dafg :=_aa .CharCode (_dbee );_dcbb ._dgdff =make (map[_aa .CharCode ]float64 );_cffb =_bgcd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cffb !=nil {_dcbb .Widths =_cffb ;_aefe ,_deaae :=_aaa .GetArray (_cffb );if !_deaae {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cffb );return nil ,_aaa .ErrTypeError ;};_fdbf ,_agfaa :=_aefe .ToFloat64Array ();if _agfaa !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_agfaa ;};if len (_fdbf )!=int (_dafg -_aebda +1){_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dafg -_aebda +1,len (_fdbf ));return nil ,_aaa .ErrRangeError ;};for _cdcb ,_afeb :=range _fdbf {_dcbb ._dgdff [_aebda +_aa .CharCode (_cdcb )]=_afeb ;};};};_dcbb .Encoding =_aaa .TraceToDirectObject (_bgcd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _dcbb ,nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_efbf *PdfPageResources )ToPdfObject ()_aaa .PdfObject {_afdda :=_efbf ._gbcaa ;_afdda .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_efbf .ExtGState );if _efbf ._gfadad !=nil {_efbf .ColorSpace =_efbf ._gfadad .ToPdfObject ();};_afdda .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_efbf .ColorSpace );_afdda .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_efbf .Pattern );_afdda .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_efbf .Shading );_afdda .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_efbf .XObject );_afdda .SetIfNotNil ("\u0046\u006f\u006e\u0074",_efbf .Font );_afdda .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_efbf .ProcSet );_afdda .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_efbf .Properties );return _afdda ;};

// Encoder returns the font's text encoder.
func (_aacb pdfCIDFontType0 )Encoder ()_aa .TextEncoder {return _aacb ._bfcfd };

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cfbab *PdfWriter )SetNamedDestinations (names _aaa .PdfObject )error {if names ==nil {return nil ;};_fe .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_cfbab ._fbfbc .Set ("\u004e\u0061\u006de\u0073",names );return _cfbab .addObjects (names );};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_aaa .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_aaa .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_aaa .PdfObjectBool ;_bgcdf PdfModel ;_cfade _aaa .PdfObject ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_aaa .PdfObjectArray ;Domain *_aaa .PdfObjectArray ;Function []PdfFunction ;Extend *_aaa .PdfObjectArray ;};func (_ffggb *PdfReader )newPdfAcroFormFromDict (_ecce *_aaa .PdfIndirectObject ,_debc *_aaa .PdfObjectDictionary )(*PdfAcroForm ,error ){_aege :=NewPdfAcroForm ();if _ecce !=nil {_aege ._efab =_ecce ;_ecce .PdfObject =_aaa .MakeDict ();};if _beedb :=_debc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_beedb !=nil {_agffb ,_affdb :=_aaa .GetArray (_beedb );if !_affdb {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_beedb );};var _ecfccg []*PdfField ;for _ ,_dccga :=range _agffb .Elements (){_agcfe ,_bbac :=_aaa .GetIndirect (_dccga );if !_bbac {if _ ,_daddg :=_dccga .(*_aaa .PdfObjectNull );_daddg {_fe .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_fe .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dccga );return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gegc ,_gdbd :=_ffggb .newPdfFieldFromIndirectObject (_agcfe ,nil );if _gdbd !=nil {return nil ,_gdbd ;};_fe .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_gegc );_ecfccg =append (_ecfccg ,_gegc );};_aege .Fields =&_ecfccg ;};if _dcbed :=_debc .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_dcbed !=nil {_dacg ,_befdd :=_aaa .GetBool (_dcbed );if _befdd {_aege .NeedAppearances =_dacg ;}else {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dcbed );};};if _dcac :=_debc .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_dcac !=nil {_ebdeg ,_eedf :=_aaa .GetInt (_dcac );if _eedf {_aege .SigFlags =_ebdeg ;}else {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcac );};};if _bebdb :=_debc .Get ("\u0043\u004f");_bebdb !=nil {_bbfdd ,_gdfe :=_aaa .GetArray (_bebdb );if _gdfe {_aege .CO =_bbfdd ;}else {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bebdb );};};if _eefggd :=_debc .Get ("\u0044\u0052");_eefggd !=nil {if _ebcbf ,_dbbfd :=_aaa .GetDict (_eefggd );_dbbfd {_aggbg ,_ccbc :=NewPdfPageResourcesFromDict (_ebcbf );if _ccbc !=nil {_fe .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ccbc );return nil ,_ccbc ;};_aege .DR =_aggbg ;}else {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eefggd );};};if _fedg :=_debc .Get ("\u0044\u0041");_fedg !=nil {_efeb ,_gagce :=_aaa .GetString (_fedg );if _gagce {_aege .DA =_efeb ;}else {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fedg );};};if _badc :=_debc .Get ("\u0051");_badc !=nil {_becbbf ,_ddfbg :=_aaa .GetInt (_badc );if _ddfbg {_aege .Q =_becbbf ;}else {_fe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_badc );};};if _ceffb :=_debc .Get ("\u0058\u0046\u0041");_ceffb !=nil {_aege .XFA =_ceffb ;};return _aege ,nil ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_agea *Image )SetSamples (samples []uint32 ){if _agea .BitsPerComponent < 8{samples =_agea .samplesAddPadding (samples );};_gbacf :=_dgb .ResampleUint32 (samples ,int (_agea .BitsPerComponent ),8);_acfea :=make ([]byte ,len (_gbacf ));for _baacf ,_aebf :=range _gbacf {_acfea [_baacf ]=byte (_aebf );};_agea .Data =_acfea ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_cde *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _cefe ()_g .Time {_eggb .Lock ();defer _eggb .Unlock ();return _eegbf };

// Write writes out the PDF.
func (_cdbdg *PdfWriter )Write (writer _agb .Writer )error {_fe .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bgafeb :=_fa .GetLicenseKey ();if (_bgafeb ==nil ||!_bgafeb .IsLicensed ())&&!_cdbae {_b .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_b .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _ee .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _cdbdg ._fbage !=nil {_fe .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cdbdg ._fbage );_cecb :=_cdbdg ._fbage .ToPdfObject ();_fe .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cecb ,_cecb ,_cecb );_cdbdg ._fbfbc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cecb );_egcec :=_cdbdg .addObjects (_cecb );if _egcec !=nil {return _egcec ;};};if _cdbdg ._dfgce !=nil {_fe .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_cgded :=_cdbdg ._dfgce .ToPdfObject ();_fe .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cgded );_cdbdg ._fbfbc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cgded );_cgagd :=_cdbdg .addObjects (_cgded );if _cgagd !=nil {return _cgagd ;};};for _deddf ,_cddbc :=range _cdbdg ._abaea {if !_cdbdg .hasObject (_deddf ){_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_deddf ,_deddf ,_deddf );for _ ,_aeeg :=range _cddbc {for _ ,_fage :=range _aeeg .Keys (){_eebf :=_aeeg .Get (_fage );if _eebf ==_deddf {_fe .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_aeeg .Set (_fage ,_aaa .MakeNull ());break ;};};};};};_cdbdg ._fbfbc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_aaa .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_cdbdg ._fabf ,_cdbdg ._gbgcf )));_cdbdg .copyObjects ();if _cdbdg ._adfab !=nil {var _bgbga error ;_cdbdg ._dbbec ,_bgbga =_cdbdg ._adfab .Optimize (_cdbdg ._dbbec );if _bgbga !=nil {return _bgbga ;};_abfgeb :=make (map[_aaa .PdfObject ]struct{},len (_cdbdg ._dbbec ));for _ ,_ccca :=range _cdbdg ._dbbec {_abfgeb [_ccca ]=struct{}{};};_cdbdg ._gfggg =_abfgeb ;};_cdbdg ._ddec =_cdbdg ._edbeb ;_cdbdg ._bcaeg =_c .NewWriter (writer );_fbea :=_cdbdg ._fabf > 1||(_cdbdg ._fabf ==1&&_cdbdg ._gbgcf > 4);if _cdbdg ._baaff !=nil {_fbea =*_cdbdg ._baaff ;};_fgbbg :=make (map[_aaa .PdfObject ]bool );for _ ,_dcdcd :=range _cdbdg ._dbbec {if _adagc ,_eaacg :=_dcdcd .(*_aaa .PdfObjectStreams );_eaacg {_fbea =true ;for _ ,_dagde :=range _adagc .Elements (){_fgbbg [_dagde ]=true ;if _gedbf ,_bffda :=_dagde .(*_aaa .PdfIndirectObject );_bffda {_fgbbg [_gedbf .PdfObject ]=true ;};};};};if _fbea &&_cdbdg ._fabf ==1&&_cdbdg ._gbgcf < 5{_cdbdg ._gbgcf =5;};if _cdbdg ._bbfdc {_cdbdg .writeString ("\u000a");}else {_cdbdg .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cdbdg ._fabf ,_cdbdg ._gbgcf ));_cdbdg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_cdbdg .updateObjectNumbers ();_fe .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cdbdg ._dbbec ));_cdbdg ._cdaec =make (map[int ]crossReference );_cdbdg ._cdaec [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _cdbdg ._abgfb .ObjectMap !=nil {for _cgadb ,_afcde :=range _cdbdg ._abgfb .ObjectMap {if _cgadb ==0{continue ;};if _afcde .XType ==_aaa .XrefTypeObjectStream {_eccda :=crossReference {Type :2,ObjectNumber :_afcde .OsObjNumber ,Index :_afcde .OsObjIndex };_cdbdg ._cdaec [_cgadb ]=_eccda ;};if _afcde .XType ==_aaa .XrefTypeTableEntry {_efca :=crossReference {Type :1,ObjectNumber :_afcde .ObjectNumber ,Offset :_afcde .Offset };_cdbdg ._cdaec [_cgadb ]=_efca ;};};};for _ ,_cdbgb :=range _cdbdg ._dbbec {if _edfbb :=_fgbbg [_cdbgb ];_edfbb {continue ;};_gfdec :=int64 (0);switch _geegd :=_cdbgb .(type ){case *_aaa .PdfIndirectObject :_gfdec =_geegd .ObjectNumber ;case *_aaa .PdfObjectStream :_gfdec =_geegd .ObjectNumber ;case *_aaa .PdfObjectStreams :_gfdec =_geegd .ObjectNumber ;default:_fe .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_cdbgb );return ErrTypeCheck ;};if _cdbdg ._acfad !=nil &&_cdbgb !=_cdbdg ._eafdg {_aecec :=_cdbdg ._acfad .Encrypt (_cdbgb ,_gfdec ,0);if _aecec !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_aecec );return _aecec ;};};_cdbdg .writeObject (int (_gfdec ),_cdbgb );};_gaefe :=_cdbdg ._ddec ;var _aabcg int ;for _dcddb :=range _cdbdg ._cdaec {if _dcddb > _aabcg {_aabcg =_dcddb ;};};if _fbea {_baegd :=_aabcg +1;_cdbdg ._cdaec [_baegd ]=crossReference {Type :1,ObjectNumber :_baegd ,Offset :_gaefe };_dgad :=_bb .NewBuffer (nil );_fcgga :=_aaa .MakeArray ();for _gagdd :=0;_gagdd <=_aabcg ;{for ;_gagdd <=_aabcg ;_gagdd ++{_afac ,_eacge :=_cdbdg ._cdaec [_gagdd ];if _eacge &&(!_cdbdg ._bbfdc ||_cdbdg ._bbfdc &&(_afac .Type ==1&&_afac .Offset >=_cdbdg ._daec ||_afac .Type ==0)){break ;};};var _dcgff int ;for _dcgff =_gagdd +1;_dcgff <=_aabcg ;_dcgff ++{_bage ,_efdfe :=_cdbdg ._cdaec [_dcgff ];if _efdfe &&(!_cdbdg ._bbfdc ||_cdbdg ._bbfdc &&(_bage .Type ==1&&_bage .Offset > _cdbdg ._daec )){continue ;};break ;};_fcgga .Append (_aaa .MakeInteger (int64 (_gagdd )),_aaa .MakeInteger (int64 (_dcgff -_gagdd )));for _gfbgd :=_gagdd ;_gfbgd < _dcgff ;_gfbgd ++{_cbdgd :=_cdbdg ._cdaec [_gfbgd ];switch _cbdgd .Type {case 0:_f .Write (_dgad ,_f .BigEndian ,byte (0));_f .Write (_dgad ,_f .BigEndian ,uint32 (0));_f .Write (_dgad ,_f .BigEndian ,uint16 (0xFFFF));case 1:_f .Write (_dgad ,_f .BigEndian ,byte (1));_f .Write (_dgad ,_f .BigEndian ,uint32 (_cbdgd .Offset ));_f .Write (_dgad ,_f .BigEndian ,uint16 (_cbdgd .Generation ));case 2:_f .Write (_dgad ,_f .BigEndian ,byte (2));_f .Write (_dgad ,_f .BigEndian ,uint32 (_cbdgd .ObjectNumber ));_f .Write (_dgad ,_f .BigEndian ,uint16 (_cbdgd .Index ));};};_gagdd =_dcgff +1;};_geccd ,_ecaga :=_aaa .MakeStream (_dgad .Bytes (),_aaa .NewFlateEncoder ());if _ecaga !=nil {return _ecaga ;};_geccd .ObjectNumber =int64 (_baegd );_geccd .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0058\u0052\u0065\u0066"));_geccd .PdfObjectDictionary .Set ("\u0057",_aaa .MakeArray (_aaa .MakeInteger (1),_aaa .MakeInteger (4),_aaa .MakeInteger (2)));_geccd .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_fcgga );_geccd .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_aaa .MakeInteger (int64 (_baegd +1)));_geccd .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cdbdg ._agadg );_geccd .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cdbdg ._fadafa );if _cdbdg ._bbfdc &&_cdbdg ._dbfed > 0{_geccd .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_aaa .MakeInteger (_cdbdg ._dbfed ));};if _cdbdg ._acfad !=nil {_geccd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cdbdg ._eafdg );_geccd .Set ("\u0049\u0044",_cdbdg ._ggaca );_fe .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cdbdg ._ggaca );};_cdbdg .writeObject (int (_geccd .ObjectNumber ),_geccd );}else {_cdbdg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _dadcb :=0;_dadcb <=_aabcg ;{for ;_dadcb <=_aabcg ;_dadcb ++{_caaaa ,_fabagc :=_cdbdg ._cdaec [_dadcb ];if _fabagc &&(!_cdbdg ._bbfdc ||_cdbdg ._bbfdc &&(_caaaa .Type ==1&&_caaaa .Offset >=_cdbdg ._daec ||_caaaa .Type ==0)){break ;};};var _aeff int ;for _aeff =_dadcb +1;_aeff <=_aabcg ;_aeff ++{_edcbgc ,_aagab :=_cdbdg ._cdaec [_aeff ];if _aagab &&(!_cdbdg ._bbfdc ||_cdbdg ._bbfdc &&(_edcbgc .Type ==1&&_edcbgc .Offset > _cdbdg ._daec )){continue ;};break ;};_acga :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_dadcb ,_aeff -_dadcb );_cdbdg .writeString (_acga );for _bgcab :=_dadcb ;_bgcab < _aeff ;_bgcab ++{_ddgea :=_cdbdg ._cdaec [_bgcab ];switch _ddgea .Type {case 0:_acga =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_cdbdg .writeString (_acga );case 1:_acga =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_ddgea .Offset ,0);_cdbdg .writeString (_acga );};};_dadcb =_aeff +1;};_ffef :=_aaa .MakeDict ();_ffef .Set ("\u0049\u006e\u0066\u006f",_cdbdg ._agadg );_ffef .Set ("\u0052\u006f\u006f\u0074",_cdbdg ._fadafa );_ffef .Set ("\u0053\u0069\u007a\u0065",_aaa .MakeInteger (int64 (_aabcg +1)));if _cdbdg ._bbfdc &&_cdbdg ._dbfed > 0{_ffef .Set ("\u0050\u0072\u0065\u0076",_aaa .MakeInteger (_cdbdg ._dbfed ));};if _cdbdg ._acfad !=nil {_ffef .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cdbdg ._eafdg );_ffef .Set ("\u0049\u0044",_cdbdg ._ggaca );_fe .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cdbdg ._ggaca );};_cdbdg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_cdbdg .writeString (_ffef .WriteString ());_cdbdg .writeString ("\u000a");};_acaeb :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_gaefe );_cdbdg .writeString (_acaeb );_cdbdg .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _cdbdg ._ggdbb ==nil {_cdbdg ._ggdbb =_cdbdg ._bcaeg .Flush ();};return _cdbdg ._ggdbb ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cgcfc :=PdfDate {};_gdcecf :=_eccfb .FindAllStringSubmatch (dateStr ,1);if len (_gdcecf )< 1{return _cgcfc ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_gdcecf [0])!=10{return _cgcfc ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_cgcfc ._dabbb ,_ =_ge .ParseInt (_gdcecf [0][1],10,32);_cgcfc ._ddfgec ,_ =_ge .ParseInt (_gdcecf [0][2],10,32);_cgcfc ._facec ,_ =_ge .ParseInt (_gdcecf [0][3],10,32);_cgcfc ._cbgfb ,_ =_ge .ParseInt (_gdcecf [0][4],10,32);_cgcfc ._bceeb ,_ =_ge .ParseInt (_gdcecf [0][5],10,32);_cgcfc ._faec ,_ =_ge .ParseInt (_gdcecf [0][6],10,32);if len (_gdcecf [0][7])> 0{_cgcfc ._daef =_gdcecf [0][7][0];}else {_cgcfc ._daef ='+';};if len (_gdcecf [0][8])> 0{_cgcfc ._fdecg ,_ =_ge .ParseInt (_gdcecf [0][8],10,32);}else {_cgcfc ._fdecg =0;};if len (_gdcecf [0][9])> 0{_cgcfc ._eaabg ,_ =_ge .ParseInt (_gdcecf [0][9],10,32);}else {_cgcfc ._eaabg =0;};return _cgcfc ,nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_eggb .Lock ();defer _eggb .Unlock ();_afggb =author };func (_abfg *PdfReader )newPdfAnnotationSoundFromDict (_beagg *_aaa .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_fbfb :=PdfAnnotationSound {};_bcgc ,_fbc :=_abfg .newPdfAnnotationMarkupFromDict (_beagg );if _fbc !=nil {return nil ,_fbc ;};_fbfb .PdfAnnotationMarkup =_bcgc ;_fbfb .Name =_beagg .Get ("\u004e\u0061\u006d\u0065");_fbfb .Sound =_beagg .Get ("\u0053\u006f\u0075n\u0064");return &_fbfb ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_bcddd *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _bcddd .MediaBox !=nil {return _bcddd .MediaBox ,nil ;};_gbcfg :=_bcddd .Parent ;for _gbcfg !=nil {_gfgfa ,_cdcde :=_aaa .GetDict (_gbcfg );if !_cdcde {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _gcgb :=_gfgfa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_gcgb !=nil {_bece ,_bgafe :=_aaa .GetArray (_gcgb );if !_bgafe {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_cbaa ,_fdfbe :=NewPdfRectangle (*_bece );if _fdfbe !=nil {return nil ,_fdfbe ;};return _cbaa ,nil ;};_gbcfg =_gfgfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ee .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};func (_ecc *PdfReader )newPdfActionSetOCGStateFromDict (_fccb *_aaa .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fccb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fccb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_gbdag *PdfRectangle )ToPdfObject ()_aaa .PdfObject {return _aaa .MakeArray (_aaa .MakeFloat (_gbdag .Llx ),_aaa .MakeFloat (_gbdag .Lly ),_aaa .MakeFloat (_gbdag .Urx ),_aaa .MakeFloat (_gbdag .Ury ));};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_ecadf *PdfPageResources )HasColorspaceByName (keyName _aaa .PdfObjectName )bool {_bgbdfd ,_eead :=_ecadf .GetColorspaces ();if _eead !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eead );return false ;};if _bgbdfd ==nil {return false ;};_ ,_fgbb :=_bgbdfd .Colorspaces [string (keyName )];return _fgbb ;};func _befce (_afdge *_aaa .PdfObjectDictionary )(*PdfShadingType1 ,error ){_fcfde :=PdfShadingType1 {};if _bdad :=_afdge .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bdad !=nil {_bdad =_aaa .TraceToDirectObject (_bdad );_afggd ,_egaa :=_bdad .(*_aaa .PdfObjectArray );if !_egaa {_fe .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdad );return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcfde .Domain =_afggd ;};if _bfaad :=_afdge .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bfaad !=nil {_bfaad =_aaa .TraceToDirectObject (_bfaad );_dcfa ,_fffg :=_bfaad .(*_aaa .PdfObjectArray );if !_fffg {_fe .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfaad );return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcfde .Matrix =_dcfa ;};_gbbca :=_afdge .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gbbca ==nil {_fe .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_fcfde .Function =[]PdfFunction {};if _efadd ,_feedd :=_gbbca .(*_aaa .PdfObjectArray );_feedd {for _ ,_aeabeb :=range _efadd .Elements (){_bgfd ,_gdedcc :=_dbec (_aeabeb );if _gdedcc !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdedcc );return nil ,_gdedcc ;};_fcfde .Function =append (_fcfde .Function ,_bgfd );};}else {_ebba ,_aggg :=_dbec (_gbbca );if _aggg !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aggg );return nil ,_aggg ;};_fcfde .Function =append (_fcfde .Function ,_ebba );};return &_fcfde ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_geab *PdfAnnotation3D )ToPdfObject ()_aaa .PdfObject {_geab .PdfAnnotation .ToPdfObject ();_dgec :=_geab ._fdd ;_gdcee :=_dgec .PdfObject .(*_aaa .PdfObjectDictionary );_gdcee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0033\u0044"));_gdcee .SetIfNotNil ("\u0033\u0044\u0044",_geab .T3DD );_gdcee .SetIfNotNil ("\u0033\u0044\u0056",_geab .T3DV );_gdcee .SetIfNotNil ("\u0033\u0044\u0041",_geab .T3DA );_gdcee .SetIfNotNil ("\u0033\u0044\u0049",_geab .T3DI );_gdcee .SetIfNotNil ("\u0033\u0044\u0042",_geab .T3DB );return _dgec ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_bcgca _agb .ReadSeeker ;_fgce *_aaa .PdfParser ;_efcg *PdfReader ;Reader *PdfReader ;_ebdea []*PdfPage ;_abca *PdfAcroForm ;_bad *DSS ;_defe _aaa .XrefTable ;_edcce int64 ;_acda int ;_cgcd []_aaa .PdfObject ;_eede map[_aaa .PdfObject ]struct{};_baee map[_aaa .PdfObject ]int64 ;_bagd map[_aaa .PdfObject ]struct{};_cfgb map[_aaa .PdfObject ]struct{};_gfab int64 ;_fgbc bool ;};func (_abfe Image )getBase ()_bc .ImageBase {return _bc .NewImageBase (int (_abfe .Width ),int (_abfe .Height ),int (_abfe .BitsPerComponent ),_abfe .ColorComponents ,_abfe .Data ,_abfe ._agebab ,_abfe ._ggcd );};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_agfc *fontFile )loadFromSegments (_cdef ,_ddbc []byte )error {_fe .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cdef ),len (_ddbc ));_edfd :=_agfc .parseASCIIPart (_cdef );if _edfd !=nil {return _edfd ;};_fe .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agfc );if len (_ddbc )==0{return nil ;};_fe .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agfc );return nil ;};func _ecga (_gfbc _aaa .PdfObject )(*PdfColorspaceCalGray ,error ){_edbc :=NewPdfColorspaceCalGray ();if _bbfg ,_cdda :=_gfbc .(*_aaa .PdfIndirectObject );_cdda {_edbc ._gccf =_bbfg ;};_gfbc =_aaa .TraceToDirectObject (_gfbc );_ddcb ,_dfab :=_gfbc .(*_aaa .PdfObjectArray );if !_dfab {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddcb .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gfbc =_aaa .TraceToDirectObject (_ddcb .Get (0));_fbdba ,_dfab :=_gfbc .(*_aaa .PdfObjectName );if !_dfab {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_fbdba !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gfbc =_aaa .TraceToDirectObject (_ddcb .Get (1));_afbd ,_dfab :=_gfbc .(*_aaa .PdfObjectDictionary );if !_dfab {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_gfbc =_afbd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gfbc =_aaa .TraceToDirectObject (_gfbc );_cccd ,_dfab :=_gfbc .(*_aaa .PdfObjectArray );if !_dfab {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _cccd .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_agff ,_ecdba :=_cccd .GetAsFloat64Slice ();if _ecdba !=nil {return nil ,_ecdba ;};_edbc .WhitePoint =_agff ;_gfbc =_afbd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gfbc !=nil {_gfbc =_aaa .TraceToDirectObject (_gfbc );_eebc ,_edccg :=_gfbc .(*_aaa .PdfObjectArray );if !_edccg {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _eebc .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_agca ,_aaea :=_eebc .GetAsFloat64Slice ();if _aaea !=nil {return nil ,_aaea ;};_edbc .BlackPoint =_agca ;};_gfbc =_afbd .Get ("\u0047\u0061\u006dm\u0061");if _gfbc !=nil {_gfbc =_aaa .TraceToDirectObject (_gfbc );_ecfcc ,_dadbe :=_aaa .GetNumberAsFloat (_gfbc );if _dadbe !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_edbc .Gamma =_ecfcc ;};return _edbc ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_egcg *PdfFieldChoice )ToPdfObject ()_aaa .PdfObject {_egcg .PdfField .ToPdfObject ();_dgafg :=_egcg ._badf ;_dacd :=_dgafg .PdfObject .(*_aaa .PdfObjectDictionary );_dacd .Set ("\u0046\u0054",_aaa .MakeName ("\u0043\u0068"));if _egcg .Opt !=nil {_dacd .Set ("\u004f\u0070\u0074",_egcg .Opt );};if _egcg .TI !=nil {_dacd .Set ("\u0054\u0049",_egcg .TI );};if _egcg .I !=nil {_dacd .Set ("\u0049",_egcg .I );};return _dgafg ;};func (_gcbf *PdfWriter )copyObjects (){_faffe :=make (map[_aaa .PdfObject ]_aaa .PdfObject );_aagaf :=make ([]_aaa .PdfObject ,0,len (_gcbf ._dbbec ));_edabc :=make (map[_aaa .PdfObject ]struct{},len (_gcbf ._dbbec ));_adecb :=make (map[_aaa .PdfObject ]struct{});for _ ,_cfbbg :=range _gcbf ._dbbec {_eaage :=_gcbf .copyObject (_cfbbg ,_faffe ,_adecb ,false );if _ ,_baadd :=_adecb [_cfbbg ];_baadd {continue ;};_aagaf =append (_aagaf ,_eaage );_edabc [_eaage ]=struct{}{};};_gcbf ._dbbec =_aagaf ;_gcbf ._gfggg =_edabc ;_gcbf ._agadg =_gcbf .copyObject (_gcbf ._agadg ,_faffe ,nil ,false ).(*_aaa .PdfIndirectObject );_gcbf ._fadafa =_gcbf .copyObject (_gcbf ._fadafa ,_faffe ,nil ,false ).(*_aaa .PdfIndirectObject );if _gcbf ._eafdg !=nil {_gcbf ._eafdg =_gcbf .copyObject (_gcbf ._eafdg ,_faffe ,nil ,false ).(*_aaa .PdfIndirectObject );};if _gcbf ._bbfdc {_gaedcg :=make (map[_aaa .PdfObject ]int64 );for _bcceg ,_gcbdg :=range _gcbf ._babab {if _cfbc ,_aggbb :=_faffe [_bcceg ];_aggbb {_gaedcg [_cfbc ]=_gcbdg ;}else {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_gcbf ._babab =_gaedcg ;};};func (_fbg *PdfReader )newPdfActionGotoRFromDict (_eedg *_aaa .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bgf ,_dadc :=_gcg (_eedg .Get ("\u0046"));if _dadc !=nil {return nil ,_dadc ;};return &PdfActionGoToR {D :_eedg .Get ("\u0044"),NewWindow :_eedg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bgf },nil ;};func _abcb ()string {_bbfd :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _beffb _bb .Buffer ;for _gafc :=0;_gafc < 6;_gafc ++{_beffb .WriteRune (rune (_bbfd [_ab .Intn (len (_bbfd ))]));};return _beffb .String ();};func (_fbfc *PdfReader )newPdfAnnotationPolyLineFromDict (_ggc *_aaa .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_fcfa :=PdfAnnotationPolyLine {};_bbdf ,_gada :=_fbfc .newPdfAnnotationMarkupFromDict (_ggc );if _gada !=nil {return nil ,_gada ;};_fcfa .PdfAnnotationMarkup =_bbdf ;_fcfa .Vertices =_ggc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fcfa .LE =_ggc .Get ("\u004c\u0045");_fcfa .BS =_ggc .Get ("\u0042\u0053");_fcfa .IC =_ggc .Get ("\u0049\u0043");_fcfa .BE =_ggc .Get ("\u0042\u0045");_fcfa .IT =_ggc .Get ("\u0049\u0054");_fcfa .Measure =_ggc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fcfa ,nil ;};

// String returns a human readable description of `fontfile`.
func (_fggae *fontFile )String ()string {_fdcd :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fggae ._fdcgf !=nil {_fdcd =_fggae ._fdcgf .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fggae ._ccdeg ,_fdcd );};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_ccccb *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_ccfbf *PdfReader )newPdfOutlineItemFromIndirectObject (_cbbf *_aaa .PdfIndirectObject )(*PdfOutlineItem ,error ){_fgae ,_cfcb :=_cbbf .PdfObject .(*_aaa .PdfObjectDictionary );if !_cfcb {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dcddd :=NewPdfOutlineItem ();_gbgge :=_fgae .Get ("\u0054\u0069\u0074l\u0065");if _gbgge ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_gbef ,_dbeb :=_aaa .GetString (_gbgge );if !_dbeb {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gbgge );};_dcddd .Title =_gbef ;if _gbbbg :=_fgae .Get ("\u0043\u006f\u0075n\u0074");_gbbbg !=nil {_bgdfa ,_fgea :=_gbbbg .(*_aaa .PdfObjectInteger );if !_fgea {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_gbbbg );};_efeff :=int64 (*_bgdfa );_dcddd .Count =&_efeff ;};if _abgbcc :=_fgae .Get ("\u0044\u0065\u0073\u0074");_abgbcc !=nil {_dcddd .Dest =_aaa .ResolveReference (_abgbcc );if !_ccfbf ._bcade {_gdfb :=_ccfbf .traverseObjectData (_dcddd .Dest );if _gdfb !=nil {return nil ,_gdfb ;};};};if _addc :=_fgae .Get ("\u0041");_addc !=nil {_dcddd .A =_aaa .ResolveReference (_addc );if !_ccfbf ._bcade {_gbedc :=_ccfbf .traverseObjectData (_dcddd .A );if _gbedc !=nil {return nil ,_gbedc ;};};};if _beeec :=_fgae .Get ("\u0053\u0045");_beeec !=nil {_dcddd .SE =nil ;};if _daage :=_fgae .Get ("\u0043");_daage !=nil {_dcddd .C =_aaa .ResolveReference (_daage );};if _fbcab :=_fgae .Get ("\u0046");_fbcab !=nil {_dcddd .F =_aaa .ResolveReference (_fbcab );};return _dcddd ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _aaa .PdfObject ;IsMap _aaa .PdfObject ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_eccb *XObjectForm )SetContentStream (content []byte ,encoder _aaa .StreamEncoder )error {_bfaac :=content ;if encoder ==nil {if _eccb .Filter !=nil {encoder =_eccb .Filter ;}else {encoder =_aaa .NewRawEncoder ();};};_bcced ,_ccbcb :=encoder .EncodeBytes (_bfaac );if _ccbcb !=nil {return _ccbcb ;};_bfaac =_bcced ;_eccb .Stream =_bfaac ;_eccb .Filter =encoder ;return nil ;};

// AddImageResource adds an image to the XObject resources.
func (_babee *PdfPage )AddImageResource (name _aaa .PdfObjectName ,ximg *XObjectImage )error {var _bcbd *_aaa .PdfObjectDictionary ;if _babee .Resources .XObject ==nil {_bcbd =_aaa .MakeDict ();_babee .Resources .XObject =_bcbd ;}else {var _dcgdg bool ;_bcbd ,_dcgdg =(_babee .Resources .XObject ).(*_aaa .PdfObjectDictionary );if !_dcgdg {return _ee .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bcbd .Set (name ,ximg .ToPdfObject ());return nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_eggb .Lock ();defer _eggb .Unlock ();_bgcea =creator };

// GetContentStreams returns the content stream as an array of strings.
func (_agfac *PdfPage )GetContentStreams ()([]string ,error ){_egfcf :=_agfac .GetContentStreamObjs ();var _bbdgc []string ;for _ ,_bdfff :=range _egfcf {_abdfa ,_gbaea :=_fgaea (_bdfff );if _gbaea !=nil {return nil ,_gbaea ;};_bbdgc =append (_bbdgc ,_abdfa );};return _bbdgc ,nil ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dbfg *PdfOutlineTreeNode )GetContext ()PdfModel {if _ceaa ,_bggc :=_dbfg ._egceg .(*PdfOutline );_bggc {return _ceaa ;};if _adeb ,_agfeb :=_dbfg ._egceg .(*PdfOutlineItem );_agfeb {return _adeb ;};_fe .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};func _bbeaa (_cccda *_aaa .PdfObjectDictionary )(*PdfShadingType4 ,error ){_bcdea :=PdfShadingType4 {};_gdbfcf :=_cccda .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gdbfcf ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_eaeba ,_beefd :=_gdbfcf .(*_aaa .PdfObjectInteger );if !_beefd {_fe .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdbfcf );return nil ,_aaa .ErrTypeError ;};_bcdea .BitsPerCoordinate =_eaeba ;_gdbfcf =_cccda .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gdbfcf ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_eaeba ,_beefd =_gdbfcf .(*_aaa .PdfObjectInteger );if !_beefd {_fe .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gdbfcf );return nil ,_aaa .ErrTypeError ;};_bcdea .BitsPerComponent =_eaeba ;_gdbfcf =_cccda .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gdbfcf ==nil {_fe .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_eaeba ,_beefd =_gdbfcf .(*_aaa .PdfObjectInteger );if !_beefd {_fe .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gdbfcf );return nil ,_aaa .ErrTypeError ;};_bcdea .BitsPerComponent =_eaeba ;_gdbfcf =_cccda .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gdbfcf ==nil {_fe .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_fggdb ,_beefd :=_gdbfcf .(*_aaa .PdfObjectArray );if !_beefd {_fe .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdbfcf );return nil ,_aaa .ErrTypeError ;};_bcdea .Decode =_fggdb ;_gdbfcf =_cccda .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gdbfcf ==nil {_fe .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_bcdea .Function =[]PdfFunction {};if _dceca ,_cgadc :=_gdbfcf .(*_aaa .PdfObjectArray );_cgadc {for _ ,_cdgef :=range _dceca .Elements (){_fcadd ,_ececc :=_dbec (_cdgef );if _ececc !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ececc );return nil ,_ececc ;};_bcdea .Function =append (_bcdea .Function ,_fcadd );};}else {_beae ,_dggee :=_dbec (_gdbfcf );if _dggee !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dggee );return nil ,_dggee ;};_bcdea .Function =append (_bcdea .Function ,_beae );};return &_bcdea ,nil ;};func (_ddef *PdfReader )newPdfActionGoTo3DViewFromDict (_acc *_aaa .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_acc .Get ("\u0054\u0041"),V :_acc .Get ("\u0056")},nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_gg .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_gg .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_gg .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_gbedb *PdfAppender ;_edada *DSS ;};func _addb (_fgbaa _aaa .PdfObject ,_edbg bool )(*PdfFont ,error ){_fbad ,_cadc ,_fadff :=_gdeg (_fgbaa );if _fadff !=nil {if _fadff ==ErrType3FontNotSupported ||_fadff ==ErrType1CFontNotSupported {_bgbgf ,_gdfgd :=_gefgf (_fbad ,_cadc ,nil );if _gdfgd !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cadc ,_gdfgd );return nil ,_fadff ;};return &PdfFont {_bbdc :_bgbgf },_fadff ;};return nil ,_fadff ;};_faef :=&PdfFont {};switch _cadc ._fbeb {case "\u0054\u0079\u0070e\u0030":if !_edbg {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cadc );return nil ,_ee .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_fffcc ,_bfdf :=_gddgg (_fbad ,_cadc );if _bfdf !=nil {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cadc ,_bfdf );return nil ,_bfdf ;};_faef ._bbdc =_fffcc ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _febcb *pdfFontSimple ;_dgdd ,_gfad :=_gf .NewStdFontByName (_gf .StdFontName (_cadc ._edee ));if _gfad {_gdae :=_gbgb (_dgdd );_faef ._bbdc =&_gdae ;_cfgg :=_aaa .TraceToDirectObject (_gdae .ToPdfObject ());_ccdgb ,_agcd ,_aaccc :=_gdeg (_cfgg );if _aaccc !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cadc ,_gdae );return nil ,_aaccc ;};for _ ,_dfeea :=range _fbad .Keys (){_ccdgb .Set (_dfeea ,_fbad .Get (_dfeea ));};_febcb ,_aaccc =_gefgf (_ccdgb ,_agcd ,_gdae ._fgeef );if _aaccc !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cadc ,_gdae );return nil ,_aaccc ;};_febcb ._dgdff =_gdae ._dgdff ;_febcb ._fddd =_gdae ._fddd ;}else {_febcb ,_fadff =_gefgf (_fbad ,_cadc ,nil );if _fadff !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cadc ,_fadff );return nil ,_fadff ;};};_fadff =_febcb .addEncoding ();if _fadff !=nil {return nil ,_fadff ;};if _gfad {_febcb .updateStandard14Font ();};if _gfad &&_febcb ._eggc ==nil &&_febcb ._fgeef ==nil {_fe .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_febcb );_fe .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dgdd );};if len (_febcb ._dgdff )==0{_fe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_febcb );};_faef ._bbdc =_febcb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_daaea ,_ecbag :=_adfb (_fbad ,_cadc );if _ecbag !=nil {_fe .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ecbag );return nil ,_ecbag ;};_faef ._bbdc =_daaea ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_aaaeg ,_gage :=_bafa (_fbad ,_cadc );if _gage !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cadc ,_gage );return nil ,_gage ;};_faef ._bbdc =_aaaeg ;default:_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_cadc );return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cadc );};return _faef ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func _fbacb (_gdeea *PdfPage ){_fbdage :=_fa .GetLicenseKey ();if _fbdage !=nil &&_fbdage .IsLicensed (){return ;};_cdbdb :=_aaa .PdfObjectName ("\u0055\u0046\u0031");if !_gdeea .Resources .HasFontByName (_cdbdb ){_gdeea .Resources .SetFontByName (_cdbdb ,DefaultFont ().ToPdfObject ());};var _afagfb []string ;_afagfb =append (_afagfb ,"\u0071");_afagfb =append (_afagfb ,"\u0042\u0054");_afagfb =append (_afagfb ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_cdbdb .String ()));_afagfb =append (_afagfb ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_afagfb =append (_afagfb ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_bbfdcf :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_afagfb =append (_afagfb ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_bbfdcf ));_afagfb =append (_afagfb ,"\u0045\u0054");_afagfb =append (_afagfb ,"\u0051");_gadd :=_af .Join (_afagfb ,"\u000a");_gdeea .AddContentStreamByString (_gadd );_gdeea .ToPdfObject ();};func _defea ()string {_eggb .Lock ();defer _eggb .Unlock ();return _afggb };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_adagb *PdfShadingType5 )ToPdfObject ()_aaa .PdfObject {_adagb .PdfShading .ToPdfObject ();_ffcbea ,_cagfd :=_adagb .getShadingDict ();if _cagfd !=nil {_fe .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _adagb .BitsPerCoordinate !=nil {_ffcbea .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_adagb .BitsPerCoordinate );};if _adagb .BitsPerComponent !=nil {_ffcbea .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_adagb .BitsPerComponent );};if _adagb .VerticesPerRow !=nil {_ffcbea .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_adagb .VerticesPerRow );};if _adagb .Decode !=nil {_ffcbea .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_adagb .Decode );};if _adagb .Function !=nil {if len (_adagb .Function )==1{_ffcbea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adagb .Function [0].ToPdfObject ());}else {_cccef :=_aaa .MakeArray ();for _ ,_egcggg :=range _adagb .Function {_cccef .Append (_egcggg .ToPdfObject ());};_ffcbea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cccef );};};return _adagb ._cfade ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_gdfa *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _aaab []*PdfOutlineTreeNode ;var _bdcg []string ;var _gcaac func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gcaac =func (_gefgc *PdfOutlineTreeNode ,_ggbebb *[]*PdfOutlineTreeNode ,_afeff *[]string ,_bbee int ){if _gefgc ==nil {return ;};if _gefgc ._egceg ==nil {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_gggfa ,_fabag :=_gefgc ._egceg .(*PdfOutlineItem );if _fabag {*_ggbebb =append (*_ggbebb ,&_gggfa .PdfOutlineTreeNode );_baaec :=_af .Repeat ("\u0020",_bbee *2)+_gggfa .Title .Decoded ();*_afeff =append (*_afeff ,_baaec );};if _gefgc .First !=nil {_cgedf :=_af .Repeat ("\u0020",_bbee *2)+"\u002b";*_afeff =append (*_afeff ,_cgedf );_gcaac (_gefgc .First ,_ggbebb ,_afeff ,_bbee +1);};if _fabag &&_gggfa .Next !=nil {_gcaac (_gggfa .Next ,_ggbebb ,_afeff ,_bbee );};};_gcaac (_gdfa ._afag ,&_aaab ,&_bdcg ,0);return _aaab ,_bdcg ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gddgef *Image )ColorAt (x ,y int )(_fb .Color ,error ){_ccdee :=_bc .BytesPerLine (int (_gddgef .Width ),int (_gddgef .BitsPerComponent ),_gddgef .ColorComponents );switch _gddgef .ColorComponents {case 1:return _bc .ColorAtGrayscale (x ,y ,int (_gddgef .BitsPerComponent ),_ccdee ,_gddgef .Data ,_gddgef ._ggcd );case 3:return _bc .ColorAtNRGBA (x ,y ,int (_gddgef .Width ),_ccdee ,int (_gddgef .BitsPerComponent ),_gddgef .Data ,_gddgef ._agebab ,_gddgef ._ggcd );case 4:return _bc .ColorAtCMYK (x ,y ,int (_gddgef .Width ),_gddgef .Data ,_gddgef ._ggcd );};_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gddgef .ColorComponents ,_gddgef .BitsPerComponent );return nil ,_ee .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func _gdbgf (_gcdfe *_aaa .PdfObjectStream )(*PdfFunctionType4 ,error ){_gbgfc :=&PdfFunctionType4 {};_gbgfc ._eaga =_gcdfe ;_bfgfg :=_gcdfe .PdfObjectDictionary ;_bbdbe ,_fgaab :=_aaa .TraceToDirectObject (_bfgfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aaa .PdfObjectArray );if !_fgaab {_fe .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bbdbe .Len ()%2!=0{_fe .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gcegc ,_cgcg :=_bbdbe .ToFloat64Array ();if _cgcg !=nil {return nil ,_cgcg ;};_gbgfc .Domain =_gcegc ;_bbdbe ,_fgaab =_aaa .TraceToDirectObject (_bfgfg .Get ("\u0052\u0061\u006eg\u0065")).(*_aaa .PdfObjectArray );if _fgaab {if _bbdbe .Len ()< 0||_bbdbe .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_beaag ,_aegc :=_bbdbe .ToFloat64Array ();if _aegc !=nil {return nil ,_aegc ;};_gbgfc .Range =_beaag ;};_fcca ,_cgcg :=_aaa .DecodeStream (_gcdfe );if _cgcg !=nil {return nil ,_cgcg ;};_gbgfc ._fbeg =_fcca ;_gcgd :=_ad .NewPSParser (_fcca );_gfbag ,_cgcg :=_gcgd .Parse ();if _cgcg !=nil {return nil ,_cgcg ;};_gbgfc .Program =_gfbag ;return _gbgfc ,nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_aaa .PdfObjectBool ;SigFlags *_aaa .PdfObjectInteger ;CO *_aaa .PdfObjectArray ;DR *PdfPageResources ;DA *_aaa .PdfObjectString ;Q *_aaa .PdfObjectInteger ;XFA _aaa .PdfObject ;_efab *_aaa .PdfIndirectObject ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_edfbd *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_cecc :=range pages {_cecc =_cecc .Duplicate ();_fbacb (_cecc );_edfbd ._ebdea =append (_edfbd ._ebdea ,_cecc );};};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_abcag *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _abcag .AlternateSpace ==nil {return nil ,_ee .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _abcag .AlternateSpace .ColorToRGB (color );};func _gaba (_gfcc *_aaa .PdfObjectDictionary )(*PdfShadingType2 ,error ){_beeac :=PdfShadingType2 {};_cdffb :=_gfcc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cdffb ==nil {_fe .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_afadf ,_dadbee :=_cdffb .(*_aaa .PdfObjectArray );if !_dadbee {_fe .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdffb );return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _afadf .Len ()!=4{_fe .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_afadf .Len ());return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_beeac .Coords =_afadf ;if _baeb :=_gfcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_baeb !=nil {_baeb =_aaa .TraceToDirectObject (_baeb );_cbgf ,_dgge :=_baeb .(*_aaa .PdfObjectArray );if !_dgge {_fe .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_baeb );return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_beeac .Domain =_cbgf ;};_cdffb =_gfcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cdffb ==nil {_fe .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_beeac .Function =[]PdfFunction {};if _cega ,_adfaa :=_cdffb .(*_aaa .PdfObjectArray );_adfaa {for _ ,_agbfa :=range _cega .Elements (){_geddab ,_febgc :=_dbec (_agbfa );if _febgc !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_febgc );return nil ,_febgc ;};_beeac .Function =append (_beeac .Function ,_geddab );};}else {_ebfdbb ,_gdffa :=_dbec (_cdffb );if _gdffa !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdffa );return nil ,_gdffa ;};_beeac .Function =append (_beeac .Function ,_ebfdbb );};if _acgde :=_gfcc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_acgde !=nil {_acgde =_aaa .TraceToDirectObject (_acgde );_dbgfc ,_aaabb :=_acgde .(*_aaa .PdfObjectArray );if !_aaabb {_fe .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acgde );return nil ,_aaa .ErrTypeError ;};if _dbgfc .Len ()!=2{_fe .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dbgfc .Len ());return nil ,ErrInvalidAttribute ;};_beeac .Extend =_dbgfc ;};return &_beeac ,nil ;};func (_febd *PdfFont )baseFields ()*fontCommon {if _febd ._bbdc ==nil {_fe .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _febd ._bbdc .baseFields ();};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gba :=NewPdfAnnotation ();_ece :=&PdfAnnotationText {};_ece .PdfAnnotation =_gba ;_ece .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gba .SetContext (_ece );return _ece ;};func _agcc (_fbefc []byte )([]byte ,error ){_edgg :=_fc .New ();if _ ,_gcaeg :=_agb .Copy (_edgg ,_bb .NewReader (_fbefc ));_gcaeg !=nil {return nil ,_gcaeg ;};return _edgg .Sum (nil ),nil ;};type pdfFontSimple struct{fontCommon ;_afbga *_aaa .PdfIndirectObject ;_dgdff map[_aa .CharCode ]float64 ;_eggc _aa .TextEncoder ;_fgeef _aa .TextEncoder ;_gffee *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _aaa .PdfObject ;LastChar _aaa .PdfObject ;Widths _aaa .PdfObject ;Encoding _aaa .PdfObject ;_fddd map[rune ]_gf .CharMetrics ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_aabf *PdfColorspaceDeviceN )ToPdfObject ()_aaa .PdfObject {_fadf :=_aaa .MakeArray (_aaa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_fadf .Append (_aabf .ColorantNames );_fadf .Append (_aabf .AlternateSpace .ToPdfObject ());_fadf .Append (_aabf .TintTransform .ToPdfObject ());if _aabf .Attributes !=nil {_fadf .Append (_aabf .Attributes .ToPdfObject ());};if _aabf ._eafb !=nil {_aabf ._eafb .PdfObject =_fadf ;return _aabf ._eafb ;};return _fadf ;};func _eedde (_edde _aaa .PdfObject )(*PdfColorspaceDeviceN ,error ){_bfgd :=NewPdfColorspaceDeviceN ();if _gfda ,_dgab :=_edde .(*_aaa .PdfIndirectObject );_dgab {_bfgd ._eafb =_gfda ;};_edde =_aaa .TraceToDirectObject (_edde );_bebacc ,_ddag :=_edde .(*_aaa .PdfObjectArray );if !_ddag {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _bebacc .Len ()!=4&&_bebacc .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_edde =_bebacc .Get (0);_cccce ,_ddag :=_edde .(*_aaa .PdfObjectName );if !_ddag {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_cccce !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_edde =_bebacc .Get (1);_edde =_aaa .TraceToDirectObject (_edde );_febc ,_ddag :=_edde .(*_aaa .PdfObjectArray );if !_ddag {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_bfgd .ColorantNames =_febc ;_edde =_bebacc .Get (2);_cfadf ,_ggfcg :=NewPdfColorspaceFromPdfObject (_edde );if _ggfcg !=nil {return nil ,_ggfcg ;};_bfgd .AlternateSpace =_cfadf ;_ddaga ,_ggfcg :=_dbec (_bebacc .Get (3));if _ggfcg !=nil {return nil ,_ggfcg ;};_bfgd .TintTransform =_ddaga ;if _bebacc .Len ()==5{_aagd ,_ggaf :=_fgeg (_bebacc .Get (4));if _ggaf !=nil {return nil ,_ggaf ;};_bfgd .Attributes =_aagd ;};return _bfgd ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_aaa .PdfObjectString ;Author *_aaa .PdfObjectString ;Subject *_aaa .PdfObjectString ;Keywords *_aaa .PdfObjectString ;Creator *_aaa .PdfObjectString ;Producer *_aaa .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_aaa .PdfObjectName ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_aaa .PdfObjectStream )(*XObjectForm ,error ){_bcga :=&XObjectForm {};_bcga ._deggf =stream ;_eafgb :=*(stream .PdfObjectDictionary );_dceac ,_dfdcd :=_aaa .NewEncoderFromStream (stream );if _dfdcd !=nil {return nil ,_dfdcd ;};_bcga .Filter =_dceac ;if _dgagg :=_eafgb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dgagg !=nil {_aeagf ,_ddgbb :=_dgagg .(*_aaa .PdfObjectName );if !_ddgbb {return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_aeagf !="\u0046\u006f\u0072\u006d"{_fe .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _bdcb :=_eafgb .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bdcb !=nil {_bcga .FormType =_bdcb ;};if _bgbdd :=_eafgb .Get ("\u0042\u0042\u006f\u0078");_bgbdd !=nil {_bcga .BBox =_bgbdd ;};if _dafabd :=_eafgb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dafabd !=nil {_bcga .Matrix =_dafabd ;};if _edbcb :=_eafgb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_edbcb !=nil {_edbcb =_aaa .TraceToDirectObject (_edbcb );_ggbga ,_faceea :=_edbcb .(*_aaa .PdfObjectDictionary );if !_faceea {_fe .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_aaa .ErrTypeError ;};_debff ,_bcbf :=NewPdfPageResourcesFromDict (_ggbga );if _bcbf !=nil {_fe .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_bcbf ;};_bcga .Resources =_debff ;_fe .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_bcga .Resources );};_bcga .Group =_eafgb .Get ("\u0047\u0072\u006fu\u0070");_bcga .Ref =_eafgb .Get ("\u0052\u0065\u0066");_bcga .MetaData =_eafgb .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_bcga .PieceInfo =_eafgb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bcga .LastModified =_eafgb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bcga .StructParent =_eafgb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bcga .StructParents =_eafgb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_bcga .OPI =_eafgb .Get ("\u004f\u0050\u0049");_bcga .OC =_eafgb .Get ("\u004f\u0043");_bcga .Name =_eafgb .Get ("\u004e\u0061\u006d\u0065");_bcga .Stream =stream .Stream ;return _bcga ,nil ;};

// SetName sets the `Name` field of the signature.
func (_dcecac *PdfSignature )SetName (name string ){_dcecac .Name =_aaa .MakeString (name )};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_efab :_aaa .MakeIndirectObject (_aaa .MakeDict ())};};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_fgcb :=&PdfColorspaceDeviceN {};return _fgcb };

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_eedeee *LTV )Enable (sig *PdfSignature ,extraCerts []*_be .Certificate )error {if _bdfa :=_eedeee .validateSig (sig );_bdfa !=nil {return _bdfa ;};_cfbfd ,_abdg :=_eedeee .generateVRIKey (sig );if _abdg !=nil {return _abdg ;};if _ ,_fbag :=_eedeee ._edada .VRI [_cfbfd ];_fbag &&_eedeee .SkipExisting {return nil ;};_deffa ,_abdg :=sig .GetCerts ();if _abdg !=nil {return _abdg ;};return _eedeee .enable (_deffa ,extraCerts ,_cfbfd );};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ea :=NewPdfAction ();_efb :=&PdfActionResetForm {};_efb .PdfAction =_ea ;_ea .SetContext (_efb );return _efb ;};

// Initialize initializes the PdfSignature.
func (_cbgee *PdfSignature )Initialize ()error {if _cbgee .Handler ==nil {return _ee .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _cbgee .Handler .InitSignature (_cbgee );};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cgff :=PdfWriter {};_cgff ._gfggg =map[_aaa .PdfObject ]struct{}{};_cgff ._dbbec =[]_aaa .PdfObject {};_cgff ._abaea =map[_aaa .PdfObject ][]*_aaa .PdfObjectDictionary {};_cgff ._aaefc =map[_aaa .PdfObject ]struct{}{};_cgff ._fabf =1;_cgff ._gbgcf =3;_gfgcg :=_aaa .MakeDict ();_dfdda :=[]struct{_dfbaa _aaa .PdfObjectName ;_cdgbb string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_acage ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_ecfaa ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_defea ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_abgbb ()},{"\u0054\u0069\u0074l\u0065",_ecebc ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_acce ()}};for _ ,_eecbfc :=range _dfdda {if _eecbfc ._cdgbb !=""{_gfgcg .Set (_eecbfc ._dfbaa ,_aaa .MakeString (_eecbfc ._cdgbb ));};};if _aabfg :=_cefe ();!_aabfg .IsZero (){if _dedf ,_fgafgf :=NewPdfDateFromTime (_aabfg );_fgafgf ==nil {_gfgcg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dedf .ToPdfObject ());};};if _fcbb :=_fegba ();!_fcbb .IsZero (){if _agdc ,_dfgfb :=NewPdfDateFromTime (_fcbb );_dfgfb ==nil {_gfgcg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_agdc .ToPdfObject ());};};_caag :=_aaa .PdfIndirectObject {};_caag .PdfObject =_gfgcg ;_cgff ._agadg =&_caag ;_cgff .addObject (&_caag );_faac :=_aaa .PdfIndirectObject {};_cbgecc :=_aaa .MakeDict ();_cbgecc .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_faac .PdfObject =_cbgecc ;_cgff ._fadafa =&_faac ;_cgff .addObject (_cgff ._fadafa );_fbefe :=_aaa .PdfIndirectObject {};_aafcc :=_aaa .MakeDict ();_aafcc .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0050\u0061\u0067e\u0073"));_beaeb :=_aaa .PdfObjectArray {};_aafcc .Set ("\u004b\u0069\u0064\u0073",&_beaeb );_aafcc .Set ("\u0043\u006f\u0075n\u0074",_aaa .MakeInteger (0));_fbefe .PdfObject =_aafcc ;_cgff ._ffgad =&_fbefe ;_cgff ._ageec =map[_aaa .PdfObject ]struct{}{};_cgff .addObject (_cgff ._ffgad );_cbgecc .Set ("\u0050\u0061\u0067e\u0073",&_fbefe );_cgff ._fbfbc =_cbgecc ;_fe .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_faac );return _cgff ;};func (_aea *PdfAppender )addNewObject (_gdf _aaa .PdfObject ){if _ ,_egdg :=_aea ._eede [_gdf ];!_egdg {_aea ._cgcd =append (_aea ._cgcd ,_gdf );_aea ._eede [_gdf ]=struct{}{};};};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_fbda :=PdfColorCalRGB {a ,b ,c };return &_fbda ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cfbf *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cfbf ._ecfb ==nil {_cfbf ._ecfb =_ad .NewPSExecutor (_cfbf .Program );};var _gdaed []_ad .PSObject ;for _ ,_dgea :=range xVec {_gdaed =append (_gdaed ,_ad .MakeReal (_dgea ));};_bcab ,_bfbg :=_cfbf ._ecfb .Execute (_gdaed );if _bfbg !=nil {return nil ,_bfbg ;};_cgdec ,_bfbg :=_ad .PSObjectArrayToFloat64Array (_bcab );if _bfbg !=nil {return nil ,_bfbg ;};return _cgdec ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_eccff *PdfField )ToPdfObject ()_aaa .PdfObject {_fdbgc :=_eccff ._badf ;_edcea :=_fdbgc .PdfObject .(*_aaa .PdfObjectDictionary );_cfabg :=_aaa .MakeArray ();for _ ,_aggf :=range _eccff .Kids {_cfabg .Append (_aggf .ToPdfObject ());};for _ ,_ccge :=range _eccff .Annotations {if _ccge ._fdd !=_eccff ._badf {_cfabg .Append (_ccge .GetContext ().ToPdfObject ());};};if _eccff .Parent !=nil {_edcea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eccff .Parent .GetContainingPdfObject ());};if _cfabg .Len ()> 0{_edcea .Set ("\u004b\u0069\u0064\u0073",_cfabg );};_edcea .SetIfNotNil ("\u0046\u0054",_eccff .FT );_edcea .SetIfNotNil ("\u0054",_eccff .T );_edcea .SetIfNotNil ("\u0054\u0055",_eccff .TU );_edcea .SetIfNotNil ("\u0054\u004d",_eccff .TM );_edcea .SetIfNotNil ("\u0046\u0066",_eccff .Ff );_edcea .SetIfNotNil ("\u0056",_eccff .V );_edcea .SetIfNotNil ("\u0044\u0056",_eccff .DV );_edcea .SetIfNotNil ("\u0041\u0041",_eccff .AA );return _fdbgc ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_aeceg []byte ;_eaaef []uint32 ;_gbcca *_aaa .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_acge *PdfAnnotationStamp )ToPdfObject ()_aaa .PdfObject {_acge .PdfAnnotation .ToPdfObject ();_deag :=_acge ._fdd ;_eagc :=_deag .PdfObject .(*_aaa .PdfObjectDictionary );_acge .PdfAnnotationMarkup .appendToPdfDictionary (_eagc );_eagc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0053\u0074\u0061m\u0070"));_eagc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_acge .Name );return _deag ;};

// B returns the value of the B component of the color.
func (_aacde *PdfColorLab )B ()float64 {return _aacde [2]};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_decf *BorderStyle )GetPdfName ()string {switch *_decf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// IsShading specifies if the pattern is a shading pattern.
func (_abdc *PdfPattern )IsShading ()bool {return _abdc .PatternType ==2};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dbgdd *PdfReader )CheckAccessRights (password []byte )(bool ,_cb .Permissions ,error ){return _dbgdd ._gcee .CheckAccessRights (password );};func _cbgc (_afgc *[]*PdfField ,_fddfa FieldFilterFunc ,_ebdfg bool )[]*PdfField {if _afgc ==nil {return nil ;};_efbad :=*_afgc ;if len (*_afgc )==0{return nil ;};_aadbg :=_efbad [:0];if _fddfa ==nil {_fddfa =func (*PdfField )bool {return true };};var _eaae []*PdfField ;for _ ,_bcfb :=range _efbad {_cdccb :=_fddfa (_bcfb );if _cdccb {_eaae =append (_eaae ,_bcfb );if len (_bcfb .Kids )> 0{_eaae =append (_eaae ,_cbgc (&_bcfb .Kids ,_fddfa ,_ebdfg )...);};};if !_ebdfg ||!_cdccb ||len (_bcfb .Kids )> 0{_aadbg =append (_aadbg ,_bcfb );};};*_afgc =_aadbg ;return _eaae ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gefcd pdfFontType0 )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){if _gefcd .DescendantFont ==nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gefcd );return _gf .CharMetrics {},false ;};return _gefcd .DescendantFont .GetRuneMetrics (r );};

// ToPdfObject implements interface PdfModel.
func (_cg *PdfActionImportData )ToPdfObject ()_aaa .PdfObject {_cg .PdfAction .ToPdfObject ();_dbd :=_cg ._afe ;_ffg :=_dbd .PdfObject .(*_aaa .PdfObjectDictionary );_ffg .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeImportData )));if _cg .F !=nil {_ffg .Set ("\u0046",_cg .F .ToPdfObject ());};return _dbd ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _aaa .PdfObject ;B _aaa .PdfObject ;};func (_fcaf *PdfReader )newPdfAnnotationProjectionFromDict (_gdce *_aaa .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_eaed :=&PdfAnnotationProjection {};_bede ,_fee :=_fcaf .newPdfAnnotationMarkupFromDict (_gdce );if _fee !=nil {return nil ,_fee ;};_eaed .PdfAnnotationMarkup =_bede ;return _eaed ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ccbf *PdfPattern )SetContext (ctx PdfModel ){_ccbf ._dgbgf =ctx };

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bdab *PdfFont )CharcodesToUnicodeWithStats (charcodes []_aa .CharCode )(_gacbc []rune ,_gcagg ,_cgdgg int ){_bcfc ,_gcagg ,_cgdgg :=_bdab .CharcodesToStrings (charcodes );return []rune (_af .Join (_bcfc ,"")),_gcagg ,_cgdgg ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_bffcbf byte )byte ;

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ba *PdfAction )GetContext ()PdfModel {if _ba ==nil {return nil ;};return _ba ._ac ;};

// GetCerts returns the signature certificate chain.
func (_dageg *PdfSignature )GetCerts ()([]*_be .Certificate ,error ){var _bbcd []func ()([]*_be .Certificate ,error );switch _daaae ,_ :=_aaa .GetNameVal (_dageg .SubFilter );_daaae {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bbcd =append (_bbcd ,_dageg .extractChainFromPKCS7 ,_dageg .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bbcd =append (_bbcd ,_dageg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bbcd =append (_bbcd ,_dageg .extractChainFromPKCS7 );default:return nil ,_b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_daaae );};for _ ,_eaeeg :=range _bbcd {_eega ,_bggd :=_eaeeg ();if _bggd !=nil {return nil ,_bggd ;};if len (_eega )> 0{return _eega ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject implements interface PdfModel.
func (_becg *PdfAnnotationPolygon )ToPdfObject ()_aaa .PdfObject {_becg .PdfAnnotation .ToPdfObject ();_dbgad :=_becg ._fdd ;_ffca :=_dbgad .PdfObject .(*_aaa .PdfObjectDictionary );_becg .PdfAnnotationMarkup .appendToPdfDictionary (_ffca );_ffca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_ffca .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_becg .Vertices );_ffca .SetIfNotNil ("\u004c\u0045",_becg .LE );_ffca .SetIfNotNil ("\u0042\u0053",_becg .BS );_ffca .SetIfNotNil ("\u0049\u0043",_becg .IC );_ffca .SetIfNotNil ("\u0042\u0045",_becg .BE );_ffca .SetIfNotNil ("\u0049\u0054",_becg .IT );_ffca .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_becg .Measure );return _dbgad ;};

// GetContentStream returns the XObject Form's content stream.
func (_fccfd *XObjectForm )GetContentStream ()([]byte ,error ){_egfcg ,_gcfc :=_aaa .DecodeStream (_fccfd ._deggf );if _gcfc !=nil {return nil ,_gcfc ;};return _egfcg ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _aaa .PdfObject )(PdfColorspace ,error ){var _abgb *_aaa .PdfIndirectObject ;var _deea *_aaa .PdfObjectName ;var _afge *_aaa .PdfObjectArray ;if _ddee ,_eegb :=obj .(*_aaa .PdfIndirectObject );_eegb {_abgb =_ddee ;};obj =_aaa .TraceToDirectObject (obj );switch _bddbd :=obj .(type ){case *_aaa .PdfObjectArray :_afge =_bddbd ;case *_aaa .PdfObjectName :_deea =_bddbd ;};if _deea !=nil {switch *_deea {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_fe .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_deea );return nil ,_cggb ;};};if _afge !=nil &&_afge .Len ()> 0{var _geg _aaa .PdfObject =_abgb ;if _abgb ==nil {_geg =_afge ;};if _edae ,_bffb :=_aaa .GetName (_afge .Get (0));_bffb {switch _edae .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _afge .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _afge .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _afge .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ecga (_geg );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _bacg (_geg );case "\u004c\u0061\u0062":return _eadg (_geg );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cdfdee (_geg );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ccef (_geg );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _bcdee (_geg );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _aaac (_geg );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _eedde (_geg );default:_fe .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_edae );};};};_fe .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_ec :=NewPdfAction ();_eeb :=&PdfActionNamed {};_eeb .PdfAction =_ec ;_ec .SetContext (_eeb );return _eeb ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gdbfbg *PdfPageResources )HasXObjectByName (keyName _aaa .PdfObjectName )bool {_fbfbg ,_ :=_gdbfbg .GetXObjectByName (keyName );return _fbfbg !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_egbge *PdfSignature )ToPdfObject ()_aaa .PdfObject {_fbagg :=_egbge ._ddbdc ;var _aaaed *_aaa .PdfObjectDictionary ;if _fgefa ,_bbdaf :=_fbagg .PdfObject .(*pdfSignDictionary );_bbdaf {_aaaed =_fgefa .PdfObjectDictionary ;}else {_aaaed =_fbagg .PdfObject .(*_aaa .PdfObjectDictionary );};_aaaed .SetIfNotNil ("\u0054\u0079\u0070\u0065",_egbge .Type );_aaaed .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_egbge .Filter );_aaaed .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_egbge .SubFilter );_aaaed .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_egbge .ByteRange );_aaaed .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_egbge .Contents );_aaaed .SetIfNotNil ("\u0043\u0065\u0072\u0074",_egbge .Cert );_aaaed .SetIfNotNil ("\u004e\u0061\u006d\u0065",_egbge .Name );_aaaed .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_egbge .Reason );_aaaed .SetIfNotNil ("\u004d",_egbge .M );_aaaed .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_egbge .Reference );_aaaed .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_egbge .Changes );_aaaed .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_egbge .ContactInfo );return _fbagg ;};

// A returns the value of the A component of the color.
func (_aebd *PdfColorLab )A ()float64 {return _aebd [1]};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_fbb *PdfAnnotationWidget )Field ()*PdfField {return _fbb ._bcg };func _deab (_ageb StdFontName )(pdfFontSimple ,error ){_acaa ,_ffbc :=_gf .NewStdFontByName (_ageb );if !_ffbc {return pdfFontSimple {},ErrFontNotSupported ;};_dage :=_gbgb (_acaa );return _dage ,nil ;};func (_baabb *DSS )generateHashMap (_faca []*_aaa .PdfObjectStream )(map[string ]*_aaa .PdfObjectStream ,error ){_cddag :=map[string ]*_aaa .PdfObjectStream {};for _ ,_baba :=range _faca {_fdge ,_ceccf :=_aaa .DecodeStream (_baba );if _ceccf !=nil {return nil ,_ceccf ;};_ebfdb ,_ceccf :=_agcc (_fdge );if _ceccf !=nil {return nil ,_ceccf ;};_cddag [string (_ebfdb )]=_baba ;};return _cddag ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_deg *PdfActionGoTo3DView )ToPdfObject ()_aaa .PdfObject {_deg .PdfAction .ToPdfObject ();_adg :=_deg ._afe ;_agbc :=_adg .PdfObject .(*_aaa .PdfObjectDictionary );_agbc .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeGoTo3DView )));_agbc .SetIfNotNil ("\u0054\u0041",_deg .TA );_agbc .SetIfNotNil ("\u0056",_deg .V );return _adg ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cafa FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cafa .Mask ()&^fl .Mask ())};func (_fcae *PdfFilespec )getDict ()*_aaa .PdfObjectDictionary {if _bgdc ,_gbbf :=_fcae ._affb .(*_aaa .PdfIndirectObject );_gbbf {_ggeg ,_fgeec :=_bgdc .PdfObject .(*_aaa .PdfObjectDictionary );if !_fgeec {return nil ;};return _ggeg ;}else if _befc ,_eadc :=_fcae ._affb .(*_aaa .PdfObjectDictionary );_eadc {return _befc ;}else {_fe .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fcae ._affb );return nil ;};};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ffad *PdfWriter )SetPageLabels (pageLabels _aaa .PdfObject )error {if pageLabels ==nil {return nil ;};_fe .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_ffad ._fbfbc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _ffad .addObjects (pageLabels );};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dbbaf *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ee .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_dceaf ,_babgb :=_bc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._agebab ,img ._ggcd );if _babgb !=nil {return img ,_babgb ;};_bbbd ,_babgb :=_bc .NRGBAConverter .Convert (_dceaf );if _babgb !=nil {return img ,_babgb ;};_ebade :=_caed (_bbbd .Base ());_fe .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fe .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fe .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ebade .Data );_fe .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ebade );return _ebade ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbg *PdfAction )ToPdfObject ()_aaa .PdfObject {_cd :=_cbg ._afe ;_ggd :=_cd .PdfObject .(*_aaa .PdfObjectDictionary );_ggd .Clear ();_ggd .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ggd .SetIfNotNil ("\u0053",_cbg .S );_ggd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_cbg .Next );return _cd ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_aggd :=NewPdfAnnotation ();_feae :=&PdfAnnotationFileAttachment {};_feae .PdfAnnotation =_aggd ;_feae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aggd .SetContext (_feae );return _feae ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_egceg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_fggfe *XObjectImage )ToImage ()(*Image ,error ){_ggdgf :=&Image {};if _fggfe .Height ==nil {return nil ,_ee .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ggdgf .Height =*_fggfe .Height ;if _fggfe .Width ==nil {return nil ,_ee .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ggdgf .Width =*_fggfe .Width ;if _fggfe .BitsPerComponent ==nil {return nil ,_ee .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_ggdgf .BitsPerComponent =*_fggfe .BitsPerComponent ;_ggdgf .ColorComponents =_fggfe .ColorSpace .GetNumComponents ();_fggfe ._eaea .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aaa .MakeInteger (int64 (_ggdgf .ColorComponents )));_ffbdb ,_ccbe :=_aaa .DecodeStream (_fggfe ._eaea );if _ccbe !=nil {return nil ,_ccbe ;};_ggdgf .Data =_ffbdb ;if _fggfe .Decode !=nil {_ceecd ,_edefa :=_fggfe .Decode .(*_aaa .PdfObjectArray );if !_edefa {_fe .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_ee .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bcgcd ,_babfa :=_ceecd .ToFloat64Array ();if _babfa !=nil {return nil ,_babfa ;};_ggdgf ._ggcd =_bcgcd ;};return _ggdgf ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_affgg *PdfWriter )SetDocInfo (info *PdfInfo ){if _affgg .hasObject (_affgg ._agadg ){delete (_affgg ._gfggg ,_affgg ._agadg );delete (_affgg ._aaefc ,_affgg ._agadg );for _bcedb ,_caac :=range _affgg ._dbbec {if _caac ==_affgg ._agadg {copy (_affgg ._dbbec [_bcedb :],_affgg ._dbbec [_bcedb +1:]);_affgg ._dbbec [len (_affgg ._dbbec )-1]=nil ;_affgg ._dbbec =_affgg ._dbbec [:len (_affgg ._dbbec )-1];break ;};};};_gcgdf :=_aaa .PdfIndirectObject {};_gcgdf .PdfObject =info .ToPdfObject ();_affgg ._agadg =&_gcgdf ;_affgg .addObject (&_gcgdf );};

// GetPageDict converts the Page to a PDF object dictionary.
func (_dfabf *PdfPage )GetPageDict ()*_aaa .PdfObjectDictionary {_gfadf :=_dfabf ._afaag ;_gfadf .Clear ();_gfadf .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0050\u0061\u0067\u0065"));_gfadf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dfabf .Parent );if _dfabf .LastModified !=nil {_gfadf .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dfabf .LastModified .ToPdfObject ());};if _dfabf .Resources !=nil {_gfadf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dfabf .Resources .ToPdfObject ());};if _dfabf .CropBox !=nil {_gfadf .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_dfabf .CropBox .ToPdfObject ());};if _dfabf .MediaBox !=nil {_gfadf .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_dfabf .MediaBox .ToPdfObject ());};if _dfabf .BleedBox !=nil {_gfadf .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_dfabf .BleedBox .ToPdfObject ());};if _dfabf .TrimBox !=nil {_gfadf .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_dfabf .TrimBox .ToPdfObject ());};if _dfabf .ArtBox !=nil {_gfadf .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_dfabf .ArtBox .ToPdfObject ());};_gfadf .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_dfabf .BoxColorInfo );_gfadf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dfabf .Contents );if _dfabf .Rotate !=nil {_gfadf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_aaa .MakeInteger (*_dfabf .Rotate ));};_gfadf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dfabf .Group );_gfadf .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_dfabf .Thumb );_gfadf .SetIfNotNil ("\u0042",_dfabf .B );_gfadf .SetIfNotNil ("\u0044\u0075\u0072",_dfabf .Dur );_gfadf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dfabf .Trans );_gfadf .SetIfNotNil ("\u0041\u0041",_dfabf .AA );_gfadf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dfabf .Metadata );_gfadf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dfabf .PieceInfo );_gfadf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dfabf .StructParents );_gfadf .SetIfNotNil ("\u0049\u0044",_dfabf .ID );_gfadf .SetIfNotNil ("\u0050\u005a",_dfabf .PZ );_gfadf .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_dfabf .SeparationInfo );_gfadf .SetIfNotNil ("\u0054\u0061\u0062\u0073",_dfabf .Tabs );_gfadf .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_dfabf .TemplateInstantiated );_gfadf .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_dfabf .PresSteps );_gfadf .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_dfabf .UserUnit );_gfadf .SetIfNotNil ("\u0056\u0050",_dfabf .VP );if _dfabf ._edebg !=nil {_ccceb :=_aaa .MakeArray ();for _ ,_gaeee :=range _dfabf ._edebg {if _ebea :=_gaeee .GetContext ();_ebea !=nil {_ccceb .Append (_ebea .ToPdfObject ());}else {_ccceb .Append (_gaeee .ToPdfObject ());};};if _ccceb .Len ()> 0{_gfadf .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_ccceb );};}else if _dfabf .Annots !=nil {_gfadf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_dfabf .Annots );};return _gfadf ;};func (_gadae *PdfReader )buildOutlineTree (_bcbg _aaa .PdfObject ,_fade *PdfOutlineTreeNode ,_ebaf *PdfOutlineTreeNode ,_bgedb map[_aaa .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bgedb ==nil {_bgedb =map[_aaa .PdfObject ]struct{}{};};_bgedb [_bcbg ]=struct{}{};_bgfb ,_agce :=_bcbg .(*_aaa .PdfIndirectObject );if !_agce {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bcbg );};_edag ,_bebaccd :=_bgfb .PdfObject .(*_aaa .PdfObjectDictionary );if !_bebaccd {return nil ,nil ,_ee .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fe .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_edag ,_bgfb ,_bgfb );if _dcdde :=_edag .Get ("\u0054\u0069\u0074l\u0065");_dcdde !=nil {_agcag ,_aebbd :=_gadae .newPdfOutlineItemFromIndirectObject (_bgfb );if _aebbd !=nil {return nil ,nil ,_aebbd ;};_agcag .Parent =_fade ;_agcag .Prev =_ebaf ;_dbddcg :=_aaa .ResolveReference (_edag .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_aebce :=_bgedb [_dbddcg ];_dbddcg !=nil &&_dbddcg !=_bgfb &&!_aebce {if !_aaa .IsNullObject (_dbddcg ){_ebbd ,_ffcab ,_gafd :=_gadae .buildOutlineTree (_dbddcg ,&_agcag .PdfOutlineTreeNode ,nil ,_bgedb );if _gafd !=nil {_fe .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_gafd );}else {_agcag .First =_ebbd ;_agcag .Last =_ffcab ;};};};_effag :=_aaa .ResolveReference (_edag .Get ("\u004e\u0065\u0078\u0074"));if _ ,_gcabb :=_bgedb [_effag ];_effag !=nil &&_effag !=_bgfb &&!_gcabb {if !_aaa .IsNullObject (_effag ){_dbbafc ,_dcdab ,_adgf :=_gadae .buildOutlineTree (_effag ,_fade ,&_agcag .PdfOutlineTreeNode ,_bgedb );if _adgf !=nil {_fe .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_adgf );}else {_agcag .Next =_dbbafc ;return &_agcag .PdfOutlineTreeNode ,_dcdab ,nil ;};};};return &_agcag .PdfOutlineTreeNode ,&_agcag .PdfOutlineTreeNode ,nil ;};_gbfb ,_dcbgg :=_aada (_bgfb );if _dcbgg !=nil {return nil ,nil ,_dcbgg ;};_gbfb .Parent =_fade ;if _gfgfe :=_edag .Get ("\u0046\u0069\u0072s\u0074");_gfgfe !=nil {_gfgfe =_aaa .ResolveReference (_gfgfe );if _ ,_cbdbdg :=_bgedb [_gfgfe ];_gfgfe !=nil &&_gfgfe !=_bgfb &&!_cbdbdg {_dcgba :=_aaa .TraceToDirectObject (_gfgfe );if _ ,_ccefd :=_dcgba .(*_aaa .PdfObjectNull );!_ccefd &&_dcgba !=nil {_dggfe ,_abegc ,_egda :=_gadae .buildOutlineTree (_gfgfe ,&_gbfb .PdfOutlineTreeNode ,nil ,_bgedb );if _egda !=nil {_fe .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_egda );}else {_gbfb .First =_dggfe ;_gbfb .Last =_abegc ;};};};};return &_gbfb .PdfOutlineTreeNode ,&_gbfb .PdfOutlineTreeNode ,nil ;};func (_dgbgb *LTV )validateSig (_efeg *PdfSignature )error {if _efeg ==nil ||_efeg .Contents ==nil ||len (_efeg .Contents .Bytes ())==0{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_efeg );};return nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_gccf *_aaa .PdfIndirectObject ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_aaa .PdfObject ,error );};

// GetTrailer returns the PDF's trailer dictionary.
func (_bgedbg *PdfReader )GetTrailer ()(*_aaa .PdfObjectDictionary ,error ){_fcadg :=_bgedbg ._gcee .GetTrailer ();if _fcadg ==nil {return nil ,_ee .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fcadg ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_cafe *PdfField )IsTerminal ()bool {return len (_cafe .Kids )==0};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_fcfab *PdfPage )GetAllContentStreams ()(string ,error ){_aaecad ,_acbaf :=_fcfab .GetContentStreams ();if _acbaf !=nil {return "",_acbaf ;};return _af .Join (_aaecad ,"\u0020"),nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_faba *PdfColorspaceCalGray )ToPdfObject ()_aaa .PdfObject {_fgba :=&_aaa .PdfObjectArray {};_fgba .Append (_aaa .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fgad :=_aaa .MakeDict ();if _faba .WhitePoint !=nil {_fgad .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_aaa .MakeArray (_aaa .MakeFloat (_faba .WhitePoint [0]),_aaa .MakeFloat (_faba .WhitePoint [1]),_aaa .MakeFloat (_faba .WhitePoint [2])));}else {_fe .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _faba .BlackPoint !=nil {_fgad .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aaa .MakeArray (_aaa .MakeFloat (_faba .BlackPoint [0]),_aaa .MakeFloat (_faba .BlackPoint [1]),_aaa .MakeFloat (_faba .BlackPoint [2])));};_fgad .Set ("\u0047\u0061\u006dm\u0061",_aaa .MakeFloat (_faba .Gamma ));_fgba .Append (_fgad );if _faba ._gccf !=nil {_faba ._gccf .PdfObject =_fgba ;return _faba ._gccf ;};return _fgba ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_daab *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bgbg :=_dgb .NewReader (img .getBase ());_baf :=_bc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_daab .AlternateSpace .GetNumComponents (),nil ,img ._agebab ,nil );_ffgf :=_dgb .NewWriter (_baf );_cagd :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_fe .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_fe .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_daab .TintTransform );_gefc :=_daab .AlternateSpace .DecodeArray ();var (_ccfb uint32 ;_faeb error ;);for {_ccfb ,_faeb =_bgbg .ReadSample ();if _faeb ==_agb .EOF {break ;};if _faeb !=nil {return img ,_faeb ;};_dbaf :=float64 (_ccfb )/_cagd ;_ceef ,_fagag :=_daab .TintTransform .Evaluate ([]float64 {_dbaf });if _fagag !=nil {return img ,_fagag ;};for _dbafa ,_fgca :=range _ceef {_gffe :=_bc .LinearInterpolate (_fgca ,_gefc [_dbafa *2],_gefc [_dbafa *2+1],0,1);if _fagag =_ffgf .WriteSample (uint32 (_gffe *_cagd ));_fagag !=nil {return img ,_fagag ;};};};return _daab .AlternateSpace .ImageToRGB (_caed (&_baf ));};func (_bcdeb *PdfReader )buildPageList (_baeag *_aaa .PdfIndirectObject ,_dafd *_aaa .PdfIndirectObject ,_aedfg map[_aaa .PdfObject ]struct{})error {if _baeag ==nil {return nil ;};if _ ,_aaedd :=_aedfg [_baeag ];_aaedd {_fe .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_baeag .ObjectNumber );return nil ;};_aedfg [_baeag ]=struct{}{};_faebb ,_abfgf :=_baeag .PdfObject .(*_aaa .PdfObjectDictionary );if !_abfgf {return _ee .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bbde ,_abfgf :=(*_faebb ).Get ("\u0054\u0079\u0070\u0065").(*_aaa .PdfObjectName );if !_abfgf {if _faebb .Get ("\u004b\u0069\u0064\u0073")==nil {return _ee .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fe .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_bbde =_aaa .MakeName ("\u0050\u0061\u0067e\u0073");_faebb .Set ("\u0054\u0079\u0070\u0065",_bbde );};_fe .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bbde ,_baeag );if *_bbde =="\u0050\u0061\u0067\u0065"{_facgd ,_bdbe :=_bcdeb .newPdfPageFromDict (_faebb );if _bdbe !=nil {return _bdbe ;};_facgd .setContainer (_baeag );if _dafd !=nil {_faebb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dafd );};_bcdeb ._cfdf =append (_bcdeb ._cfdf ,_baeag );_bcdeb .PageList =append (_bcdeb .PageList ,_facgd );return nil ;};if *_bbde !="\u0050\u0061\u0067e\u0073"{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bbde );return _ee .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _dafd !=nil {_faebb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dafd );};if !_bcdeb ._bcade {_bcgee :=_bcdeb .traverseObjectData (_baeag );if _bcgee !=nil {return _bcgee ;};};_edec ,_geced :=_bcdeb ._gcee .Resolve (_faebb .Get ("\u004b\u0069\u0064\u0073"));if _geced !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _geced ;};var _ecgff *_aaa .PdfObjectArray ;_ecgff ,_abfgf =_edec .(*_aaa .PdfObjectArray );if !_abfgf {_ebab ,_ebcbd :=_edec .(*_aaa .PdfIndirectObject );if !_ebcbd {return _ee .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ecgff ,_abfgf =_ebab .PdfObject .(*_aaa .PdfObjectArray );if !_abfgf {return _ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fe .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ecgff );for _dgecg ,_gbcga :=range _ecgff .Elements (){_ggegf ,_fbcf :=_aaa .GetIndirect (_gbcga );if !_fbcf {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ggegf );return _ee .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ecgff .Set (_dgecg ,_ggegf );_geced =_bcdeb .buildPageList (_ggegf ,_baeag ,_aedfg );if _geced !=nil {return _geced ;};};return nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_aaa .PdfObjectArray ;Domain *_aaa .PdfObjectArray ;Function []PdfFunction ;Extend *_aaa .PdfObjectArray ;};func _cdfda (_befbb *_aaa .PdfObjectDictionary )(*PdfShadingType7 ,error ){_efbac :=PdfShadingType7 {};_ggagc :=_befbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ggagc ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_fbbba ,_afagf :=_ggagc .(*_aaa .PdfObjectInteger );if !_afagf {_fe .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggagc );return nil ,_aaa .ErrTypeError ;};_efbac .BitsPerCoordinate =_fbbba ;_ggagc =_befbb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggagc ==nil {_fe .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_fbbba ,_afagf =_ggagc .(*_aaa .PdfObjectInteger );if !_afagf {_fe .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggagc );return nil ,_aaa .ErrTypeError ;};_efbac .BitsPerComponent =_fbbba ;_ggagc =_befbb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggagc ==nil {_fe .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbbba ,_afagf =_ggagc .(*_aaa .PdfObjectInteger );if !_afagf {_fe .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggagc );return nil ,_aaa .ErrTypeError ;};_efbac .BitsPerComponent =_fbbba ;_ggagc =_befbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggagc ==nil {_fe .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_afcfe ,_afagf :=_ggagc .(*_aaa .PdfObjectArray );if !_afagf {_fe .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggagc );return nil ,_aaa .ErrTypeError ;};_efbac .Decode =_afcfe ;if _gfef :=_befbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gfef !=nil {_efbac .Function =[]PdfFunction {};if _fffaf ,_bcgec :=_gfef .(*_aaa .PdfObjectArray );_bcgec {for _ ,_ceeag :=range _fffaf .Elements (){_faaae ,_cdce :=_dbec (_ceeag );if _cdce !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdce );return nil ,_cdce ;};_efbac .Function =append (_efbac .Function ,_faaae );};}else {_egcce ,_eagbd :=_dbec (_gfef );if _eagbd !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eagbd );return nil ,_eagbd ;};_efbac .Function =append (_efbac .Function ,_egcce );};};return &_efbac ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_adec *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_abbcd :=func (_baag float64 )float64 {if _baag >=6.0/29{return _baag *_baag *_baag ;};return 108.0/841*(_baag -4/29);};_ebdg :=img ._ggcd ;if len (_ebdg )!=6{_fe .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_ebdg =_adec .DecodeArray ();};_debb :=_dgb .NewReader (img .getBase ());_gdbb :=_bc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._agebab ,img ._ggcd );_ggcbb :=_dgb .NewWriter (_gdbb );_bfefb :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_fgdcd :=make ([]uint32 ,3);var (_gaeeb error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_abfb ,_dcggg ,_ecefe float64 ;);for {_gaeeb =_debb .ReadSamples (_fgdcd );if _gaeeb ==_agb .EOF {break ;}else if _gaeeb !=nil {return img ,_gaeeb ;};Ls =float64 (_fgdcd [0])/_bfefb ;As =float64 (_fgdcd [1])/_bfefb ;Bs =float64 (_fgdcd [2])/_bfefb ;Ls =_bc .LinearInterpolate (Ls ,0.0,1.0,_ebdg [0],_ebdg [1]);As =_bc .LinearInterpolate (As ,0.0,1.0,_ebdg [2],_ebdg [3]);Bs =_bc .LinearInterpolate (Bs ,0.0,1.0,_ebdg [4],_ebdg [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_adec .WhitePoint [0]*_abbcd (L );Y =_adec .WhitePoint [1]*_abbcd (M );Z =_adec .WhitePoint [2]*_abbcd (N );_abfb =3.240479*X +-1.537150*Y +-0.498535*Z ;_dcggg =-0.969256*X +1.875992*Y +0.041556*Z ;_ecefe =0.055648*X +-0.204043*Y +1.057311*Z ;_abfb =_dg .Min (_dg .Max (_abfb ,0),1.0);_dcggg =_dg .Min (_dg .Max (_dcggg ,0),1.0);_ecefe =_dg .Min (_dg .Max (_ecefe ,0),1.0);_fgdcd [0]=uint32 (_abfb *_bfefb );_fgdcd [1]=uint32 (_dcggg *_bfefb );_fgdcd [2]=uint32 (_ecefe *_bfefb );if _gaeeb =_ggcbb .WriteSamples (_fgdcd );_gaeeb !=nil {return img ,_gaeeb ;};};return _caed (&_gdbb ),nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_efbcc *PdfPage )SetContentStreams (cStreams []string ,encoder _aaa .StreamEncoder )error {if len (cStreams )==0{_efbcc .Contents =nil ;return nil ;};if encoder ==nil {encoder =_aaa .NewRawEncoder ();};var _cgada []*_aaa .PdfObjectStream ;for _ ,_gfdbe :=range cStreams {_agbga :=&_aaa .PdfObjectStream {};_ecgfg :=encoder .MakeStreamDict ();_abgf ,_ebggg :=encoder .EncodeBytes ([]byte (_gfdbe ));if _ebggg !=nil {return _ebggg ;};_ecgfg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aaa .MakeInteger (int64 (len (_abgf ))));_agbga .PdfObjectDictionary =_ecgfg ;_agbga .Stream =_abgf ;_cgada =append (_cgada ,_agbga );};if len (_cgada )==1{_efbcc .Contents =_cgada [0];}else {_edadc :=_aaa .MakeArray ();for _ ,_dfcd :=range _cgada {_edadc .Append (_dfcd );};_efbcc .Contents =_edadc ;};return nil ;};func (_dbddc *PdfReader )newPdfAnnotationFreeTextFromDict (_gbaa *_aaa .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_ggdgb :=PdfAnnotationFreeText {};_dagfe ,_acgf :=_dbddc .newPdfAnnotationMarkupFromDict (_gbaa );if _acgf !=nil {return nil ,_acgf ;};_ggdgb .PdfAnnotationMarkup =_dagfe ;_ggdgb .DA =_gbaa .Get ("\u0044\u0041");_ggdgb .Q =_gbaa .Get ("\u0051");_ggdgb .RC =_gbaa .Get ("\u0052\u0043");_ggdgb .DS =_gbaa .Get ("\u0044\u0053");_ggdgb .CL =_gbaa .Get ("\u0043\u004c");_ggdgb .IT =_gbaa .Get ("\u0049\u0054");_ggdgb .BE =_gbaa .Get ("\u0042\u0045");_ggdgb .RD =_gbaa .Get ("\u0052\u0044");_ggdgb .BS =_gbaa .Get ("\u0042\u0053");_ggdgb .LE =_gbaa .Get ("\u004c\u0045");return &_ggdgb ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ggab *PdfAnnotation )GetContainingPdfObject ()_aaa .PdfObject {return _ggab ._fdd };

// UpdatePage updates the `page` in the new revision if it has changed.
func (_befe *PdfAppender )UpdatePage (page *PdfPage ){_befe .updateObjectsDeep (page .ToPdfObject (),nil )};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_cfgf :=NewPdfAnnotation ();_gaa :=&PdfAnnotationUnderline {};_gaa .PdfAnnotation =_cfgf ;_gaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfgf .SetContext (_gaa );return _gaa ;};

// Encoder returns the font's text encoder.
func (_gcea *PdfFont )Encoder ()_aa .TextEncoder {_agag :=_gcea .actualFont ();if _agag ==nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_gcea ._bbdc );return nil ;};return _agag .Encoder ();};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_abbb *pdfFontSimple )baseFields ()*fontCommon {return &_abbb .fontCommon };func (_gaceg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_aagdf :=_gaceg .Parent ;for _aagdf !=nil {_ecdbf ,_aacbc :=_aaa .GetDict (_aagdf );if !_aacbc {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _fdeag :=_ecdbf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fdeag !=nil {_bgcb ,_ddeed :=_aaa .GetDict (_fdeag );if !_ddeed {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_aeabf ,_aeeac :=NewPdfPageResourcesFromDict (_bgcb );if _aeeac !=nil {return nil ,_aeeac ;};return _aeabf ,nil ;};_aagdf =_ecdbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_feba *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// GetNumComponents returns the number of color components (3 for Lab).
func (_egga *PdfColorLab )GetNumComponents ()int {return 3};func (_ffcea *LTV )generateVRIKey (_gbbe *PdfSignature )(string ,error ){_gbdb ,_fbdgd :=_agcc (_gbbe .Contents .Bytes ());if _fbdgd !=nil {return "",_fbdgd ;};return _af .ToUpper (_cf .EncodeToString (_gbdb )),nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gfbde *PdfReader )GetPageLabels ()(_aaa .PdfObject ,error ){_bafae :=_aaa .ResolveReference (_gfbde ._gdbc .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bafae ==nil {return nil ,nil ;};if !_gfbde ._bcade {_acbdc :=_gfbde .traverseObjectData (_bafae );if _acbdc !=nil {return nil ,_acbdc ;};};return _bafae ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_ebaag :=NewPdfOutline ();_ebaag ._egceg =&_ebaag ;return _ebaag ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_dabg *PdfFieldButton )GetType ()ButtonType {_cgad :=ButtonTypeCheckbox ;if _dabg .Ff !=nil {if (uint32 (*_dabg .Ff )&FieldFlagPushbutton .Mask ())> 0{_cgad =ButtonTypePush ;}else if (uint32 (*_dabg .Ff )&FieldFlagRadio .Mask ())> 0{_cgad =ButtonTypeRadio ;};};return _cgad ;};func _dbec (_gcfa _aaa .PdfObject )(PdfFunction ,error ){_gcfa =_aaa .ResolveReference (_gcfa );if _edfg ,_debf :=_gcfa .(*_aaa .PdfObjectStream );_debf {_eebeg :=_edfg .PdfObjectDictionary ;_babc ,_ecgba :=_eebeg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aaa .PdfObjectInteger );if !_ecgba {_fe .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_babc ==0{return _ecddg (_edfg );}else if *_babc ==4{return _gdbgf (_edfg );}else {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ggae ,_aagg :=_gcfa .(*_aaa .PdfIndirectObject );_aagg {_acgb ,_fbadd :=_ggae .PdfObject .(*_aaa .PdfObjectDictionary );if !_fbadd {_fe .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bffcb ,_fbadd :=_acgb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aaa .PdfObjectInteger );if !_fbadd {_fe .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bffcb ==2{return _ffggbf (_ggae );}else if *_bffcb ==3{return _egfab (_ggae );}else {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _febf ,_efabc :=_gcfa .(*_aaa .PdfObjectDictionary );_efabc {_gggbf ,_gfcdc :=_febf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aaa .PdfObjectInteger );if !_gfcdc {_fe .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gggbf ==2{return _ffggbf (_febf );}else if *_gggbf ==3{return _egfab (_febf );}else {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fe .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_gcfa );return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_efbga :=&XObjectForm {};_cfgfa :=&_aaa .PdfObjectStream {};_cfgfa .PdfObjectDictionary =_aaa .MakeDict ();_efbga ._deggf =_cfgfa ;return _efbga ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _aaa .PdfObject ;RichMediaContent _aaa .PdfObject ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_aca :=NewPdfAction ();_cdb :=&PdfActionSubmitForm {};_cdb .PdfAction =_aca ;_aca .SetContext (_cdb );return _cdb ;};func (_gead *PdfReader )lookupPageByObject (_fgdfa _aaa .PdfObject )(*PdfPage ,error ){return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_gfeb *PdfReader )Inspect ()(map[string ]int ,error ){return _gfeb ._gcee .Inspect ()};

// GetXObjectByName gets XObject by name.
func (_cfccc *PdfPage )GetXObjectByName (name _aaa .PdfObjectName )(_aaa .PdfObject ,bool ){_ebeea ,_cfcgd :=_cfccc .Resources .XObject .(*_aaa .PdfObjectDictionary );if !_cfcgd {return nil ,false ;};if _acgge :=_ebeea .Get (name );_acgge !=nil {return _acgge ,true ;};return nil ,false ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_abbede *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _abbede ._gfadad !=nil {return _abbede ._gfadad ,nil ;};if _abbede .ColorSpace ==nil {return nil ,nil ;};_eaaeb ,_bccge :=_bfada (_abbede .ColorSpace );if _bccge !=nil {return nil ,_bccge ;};_abbede ._gfadad =_eaaeb ;return _abbede ._gfadad ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ce :=NewPdfAction ();_dd :=&PdfActionLaunch {};_dd .PdfAction =_ce ;_ce .SetContext (_dd );return _dd ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _cb .Permissions ;Algorithm EncryptionAlgorithm ;};func (_bace *PdfReader )newPdfAnnotationWatermarkFromDict (_gdc *_aaa .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fed :=PdfAnnotationWatermark {};_fed .FixedPrint =_gdc .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_fed ,nil ;};func _gbgb (_gfe _gf .StdFont )pdfFontSimple {_geffc :=_gfe .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_fbeb :"\u0054\u0079\u0070e\u0031",_edee :_gfe .Name ()},_fddd :_gfe .GetMetricsTable (),_gffee :&PdfFontDescriptor {FontName :_aaa .MakeName (string (_geffc .Name )),FontFamily :_aaa .MakeName (_geffc .Family ),FontWeight :_aaa .MakeFloat (float64 (_geffc .Weight )),Flags :_aaa .MakeInteger (int64 (_geffc .Flags )),FontBBox :_aaa .MakeArrayFromFloats (_geffc .BBox [:]),ItalicAngle :_aaa .MakeFloat (_geffc .ItalicAngle ),Ascent :_aaa .MakeFloat (_geffc .Ascent ),Descent :_aaa .MakeFloat (_geffc .Descent ),CapHeight :_aaa .MakeFloat (_geffc .CapHeight ),XHeight :_aaa .MakeFloat (_geffc .XHeight ),StemV :_aaa .MakeFloat (_geffc .StemV ),StemH :_aaa .MakeFloat (_geffc .StemH )},_fgeef :_gfe .Encoder ()};};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_dddf *PdfPageResources )GetFontByName (keyName _aaa .PdfObjectName )(_aaa .PdfObject ,bool ){if _dddf .Font ==nil {return nil ,false ;};_aaffd ,_cfaaa :=_aaa .TraceToDirectObject (_dddf .Font ).(*_aaa .PdfObjectDictionary );if !_cfaaa {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aaa .TraceToDirectObject (_dddf .Font ));return nil ,false ;};if _gaegg :=_aaffd .Get (keyName );_gaegg !=nil {return _gaegg ,true ;};return nil ,false ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ecade *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ecade .Alternate ==nil {_fe .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _ecade .N ==1{_fe .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_bdda :=NewPdfColorspaceDeviceGray ();return _bdda .ColorToRGB (color );}else if _ecade .N ==3{_fe .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _ecade .N ==4{_fe .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_fgdf :=NewPdfColorspaceDeviceCMYK ();return _fgdf .ColorToRGB (color );}else {return nil ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_fe .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ecade );return _ecade .Alternate .ColorToRGB (color );};func (_ebbdf *PdfSignature )extractChainFromPKCS7 ()([]*_be .Certificate ,error ){_dgdbd ,_ddeae :=_eg .Parse (_ebbdf .Contents .Bytes ());if _ddeae !=nil {return nil ,_ddeae ;};return _dgdbd .Certificates ,nil ;};func (_bcada *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bcada .fontCommon };func (_egea *PdfWriter )hasObject (_bfeg _aaa .PdfObject )bool {_ ,_fcdabc :=_egea ._gfggg [_bfeg ];return _fcdabc ;};func (_dbeg *LTV )buildCertChain (_daebe ,_eeeee []*_be .Certificate )([]*_be .Certificate ,map[string ]*_be .Certificate ,error ){_bbcec :=map[string ]*_be .Certificate {};for _ ,_gegbf :=range _daebe {_bbcec [_gegbf .Subject .CommonName ]=_gegbf ;};_afdfa :=_daebe ;for _ ,_cfffg :=range _eeeee {_bfgc :=_cfffg .Subject .CommonName ;if _ ,_eecbb :=_bbcec [_bfgc ];_eecbb {continue ;};_bbcec [_bfgc ]=_cfffg ;_afdfa =append (_afdfa ,_cfffg );};if len (_afdfa )==0{return nil ,nil ,ErrSignNoCertificates ;};var _aaca error ;for _ffbdcf :=_afdfa [0];_ffbdcf !=nil &&!_dbeg .CertClient .IsCA (_ffbdcf );{_cfeb ,_ggaa :=_bbcec [_ffbdcf .Issuer .CommonName ];if !_ggaa {if _cfeb ,_aaca =_dbeg .CertClient .GetIssuer (_ffbdcf );_aaca !=nil {_fe .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_aaca );break ;};_bbcec [_ffbdcf .Issuer .CommonName ]=_cfeb ;_afdfa =append (_afdfa ,_cfeb );};_ffbdcf =_cfeb ;};return _afdfa ,_bbcec ,nil ;};func (_gegef *PdfReader )newPdfFieldSignatureFromDict (_cgda *_aaa .PdfObjectDictionary )(*PdfFieldSignature ,error ){_daag :=&PdfFieldSignature {};_eadf ,_daaf :=_aaa .GetIndirect (_cgda .Get ("\u0056"));if _daaf {var _cfb error ;_daag .V ,_cfb =_gegef .newPdfSignatureFromIndirect (_eadf );if _cfb !=nil {return nil ,_cfb ;};};_daag .Lock ,_ =_aaa .GetIndirect (_cgda .Get ("\u004c\u006f\u0063\u006b"));_daag .SV ,_ =_aaa .GetIndirect (_cgda .Get ("\u0053\u0056"));return _daag ,nil ;};func (_afabcc *PdfWriter )writeBytes (_eefbd []byte ){if _afabcc ._ggdbb !=nil {return ;};_gggaf ,_cdgeab :=_afabcc ._bcaeg .Write (_eefbd );_afabcc ._ddec +=int64 (_gggaf );_afabcc ._ggdbb =_cdgeab ;};

// GetOutlineTree returns the outline tree.
func (_aedab *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _aedab ._afag };

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aaa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ceb *PdfActionGoToE )ToPdfObject ()_aaa .PdfObject {_ceb .PdfAction .ToPdfObject ();_fagc :=_ceb ._afe ;_dec :=_fagc .PdfObject .(*_aaa .PdfObjectDictionary );_dec .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeGoToE )));if _ceb .F !=nil {_dec .Set ("\u0046",_ceb .F .ToPdfObject ());};_dec .SetIfNotNil ("\u0044",_ceb .D );_dec .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ceb .NewWindow );_dec .SetIfNotNil ("\u0054",_ceb .T );return _fagc ;};func (_badff *PdfWriter )addObjects (_fgcgb _aaa .PdfObject )error {_fe .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _ddggca ,_decgd :=_fgcgb .(*_aaa .PdfIndirectObject );_decgd {_fe .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_fe .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fgcgb ,_ddggca );_fe .Log .Trace ("\u002d\u0020\u0025\u0073",_ddggca .PdfObject );if _badff .addObject (_ddggca ){_aaged :=_badff .addObjects (_ddggca .PdfObject );if _aaged !=nil {return _aaged ;};};return nil ;};if _ecdecd ,_eacdb :=_fgcgb .(*_aaa .PdfObjectStream );_eacdb {_fe .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fe .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fgcgb ,_fgcgb );if _badff .addObject (_ecdecd ){_ecgcc :=_badff .addObjects (_ecdecd .PdfObjectDictionary );if _ecgcc !=nil {return _ecgcc ;};};return nil ;};if _cbggg ,_efedg :=_fgcgb .(*_aaa .PdfObjectDictionary );_efedg {_fe .Log .Trace ("\u0044\u0069\u0063\u0074");_fe .Log .Trace ("\u002d\u0020\u0025\u0073",_fgcgb );for _ ,_badae :=range _cbggg .Keys (){_beaeg :=_cbggg .Get (_badae );if _feage ,_begaa :=_beaeg .(*_aaa .PdfObjectReference );_begaa {_beaeg =_feage .Resolve ();_cbggg .Set (_badae ,_beaeg );};if _badae !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _efbadg :=_badff .addObjects (_beaeg );_efbadg !=nil {return _efbadg ;};}else {if _ ,_fggdbg :=_beaeg .(*_aaa .PdfObjectNull );_fggdbg {continue ;};if _ffgde :=_badff .hasObject (_beaeg );!_ffgde {_fe .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_beaeg ,_beaeg ,_beaeg );_badff ._abaea [_beaeg ]=append (_badff ._abaea [_beaeg ],_cbggg );};};};return nil ;};if _fcfce ,_aafae :=_fgcgb .(*_aaa .PdfObjectArray );_aafae {_fe .Log .Trace ("\u0041\u0072\u0072a\u0079");_fe .Log .Trace ("\u002d\u0020\u0025\u0073",_fgcgb );if _fcfce ==nil {return _ee .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _cefdb ,_affcb :=range _fcfce .Elements (){if _aaffcc ,_edeac :=_affcb .(*_aaa .PdfObjectReference );_edeac {_affcb =_aaffcc .Resolve ();_fcfce .Set (_cefdb ,_affcb );};if _edcg :=_badff .addObjects (_affcb );_edcg !=nil {return _edcg ;};};return nil ;};if _ ,_ebeeg :=_fgcgb .(*_aaa .PdfObjectReference );_ebeeg {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fgcgb );return _ee .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_fadafa *_aaa .PdfIndirectObject ;_ffgad *_aaa .PdfIndirectObject ;_ageec map[_aaa .PdfObject ]struct{};_dbbec []_aaa .PdfObject ;_gfggg map[_aaa .PdfObject ]struct{};_cdefg []*_aaa .PdfIndirectObject ;_fbage *PdfOutlineTreeNode ;_fbfbc *_aaa .PdfObjectDictionary ;_cggg []_aaa .PdfObject ;_agadg *_aaa .PdfIndirectObject ;_bcaeg *_c .Writer ;_ddec int64 ;_ggdbb error ;_acfad *_aaa .PdfCrypt ;_debea *_aaa .PdfObjectDictionary ;_eafdg *_aaa .PdfIndirectObject ;_ggaca *_aaa .PdfObjectArray ;_fabf int ;_gbgcf int ;_baaff *bool ;_abaea map[_aaa .PdfObject ][]*_aaa .PdfObjectDictionary ;_dfgce *PdfAcroForm ;_adfab Optimizer ;_cdaec map[int ]crossReference ;_edbeb int64 ;ObjNumOffset int ;_bbfdc bool ;_abgfb _aaa .XrefTable ;_dbfed int64 ;_daec int64 ;_babab map[_aaa .PdfObject ]int64 ;_aaefc map[_aaa .PdfObject ]struct{};};func _ecebc ()string {_eggb .Lock ();defer _eggb .Unlock ();return _fecca };

// AddWatermarkImage adds a watermark to the page.
func (_badbe *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ffgd ,_aeee :=_badbe .GetMediaBox ();if _aeee !=nil {return _aeee ;};_cebfe :=_ffgd .Urx -_ffgd .Llx ;_caffc :=_ffgd .Ury -_ffgd .Lly ;_fgec :=float64 (*ximg .Width );_gabee :=(_cebfe -_fgec )/2;if opt .FitToWidth {_fgec =_cebfe ;_gabee =0;};_dbdfg :=_caffc ;_gfff :=float64 (0);if opt .PreserveAspectRatio {_dbdfg =_fgec *float64 (*ximg .Height )/float64 (*ximg .Width );_gfff =(_caffc -_dbdfg )/2;};if _badbe .Resources ==nil {_badbe .Resources =NewPdfPageResources ();};_daddgd :=0;_afded :=_aaa .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_daddgd ));for _badbe .Resources .HasXObjectByName (_afded ){_daddgd ++;_afded =_aaa .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_daddgd ));};_aeee =_badbe .AddImageResource (_afded ,ximg );if _aeee !=nil {return _aeee ;};_daddgd =0;_bcaef :=_aaa .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_daddgd ));for _badbe .HasExtGState (_bcaef ){_daddgd ++;_bcaef =_aaa .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_daddgd ));};_fcga :=_aaa .MakeDict ();_fcga .Set ("\u0042\u004d",_aaa .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_fcga .Set ("\u0043\u0041",_aaa .MakeFloat (opt .Alpha ));_fcga .Set ("\u0063\u0061",_aaa .MakeFloat (opt .Alpha ));_aeee =_badbe .AddExtGState (_bcaef ,_fcga );if _aeee !=nil {return _aeee ;};_defeff :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_bcaef ,_fgec ,_dbdfg ,_gabee ,_gfff ,_afded );_badbe .AddContentStreamByString (_defeff );return nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_eggb .Lock ();defer _eggb .Unlock ();_bbgd =keywords };

// SetReason sets the `Reason` field of the signature.
func (_beggb *PdfSignature )SetReason (reason string ){_beggb .Reason =_aaa .MakeString (reason )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_ggdac *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gdcde *PdfColorCalGray )GetNumComponents ()int {return 1};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ggddg *XObjectForm )GetContainingPdfObject ()_aaa .PdfObject {return _ggddg ._deggf };

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fcgge DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_ccdff *PdfReader )newPdfPageFromDict (_cabef *_aaa .PdfObjectDictionary )(*PdfPage ,error ){_fadd :=NewPdfPage ();_fadd ._afaag =_cabef ;_bdffc :=*_cabef ;_ccaf ,_cbcf :=_bdffc .Get ("\u0054\u0079\u0070\u0065").(*_aaa .PdfObjectName );if !_cbcf {return nil ,_ee .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_ccaf !="\u0050\u0061\u0067\u0065"{return nil ,_ee .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _feec :=_bdffc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_feec !=nil {_fadd .Parent =_feec ;};if _cddfa :=_bdffc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cddfa !=nil {_ebeg ,_bcae :=_aaa .GetString (_cddfa );if !_bcae {return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_gfga ,_eeece :=NewPdfDate (_ebeg .Str ());if _eeece !=nil {return nil ,_eeece ;};_fadd .LastModified =&_gfga ;};if _bdaag :=_bdffc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bdaag !=nil &&!_aaa .IsNullObject (_bdaag ){_gfgc ,_cgged :=_aaa .GetDict (_bdaag );if !_cgged {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bdaag );};var _fgegd error ;_fadd .Resources ,_fgegd =NewPdfPageResourcesFromDict (_gfgc );if _fgegd !=nil {return nil ,_fgegd ;};}else {_dcgc ,_ccdec :=_fadd .getParentResources ();if _ccdec !=nil {return nil ,_ccdec ;};if _dcgc ==nil {_dcgc =NewPdfPageResources ();};_fadd .Resources =_dcgc ;};if _bgga :=_bdffc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_bgga !=nil {_gfged ,_agabcf :=_aaa .GetArray (_bgga );if !_agabcf {return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cdbe error ;_fadd .MediaBox ,_cdbe =NewPdfRectangle (*_gfged );if _cdbe !=nil {return nil ,_cdbe ;};};if _fagd :=_bdffc .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fagd !=nil {_gdbfa ,_afae :=_aaa .GetArray (_fagd );if !_afae {return nil ,_ee .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _fbcg error ;_fadd .CropBox ,_fbcg =NewPdfRectangle (*_gdbfa );if _fbcg !=nil {return nil ,_fbcg ;};};if _bgded :=_bdffc .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_bgded !=nil {_fdaa ,_aebfd :=_aaa .GetArray (_bgded );if !_aebfd {return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gadaa error ;_fadd .BleedBox ,_gadaa =NewPdfRectangle (*_fdaa );if _gadaa !=nil {return nil ,_gadaa ;};};if _abfbe :=_bdffc .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_abfbe !=nil {_aaacd ,_ecgee :=_aaa .GetArray (_abfbe );if !_ecgee {return nil ,_ee .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _afdec error ;_fadd .TrimBox ,_afdec =NewPdfRectangle (*_aaacd );if _afdec !=nil {return nil ,_afdec ;};};if _dfgc :=_bdffc .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dfgc !=nil {_cbbg ,_efdcc :=_aaa .GetArray (_dfgc );if !_efdcc {return nil ,_ee .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _cdgb error ;_fadd .ArtBox ,_cdgb =NewPdfRectangle (*_cbbg );if _cdgb !=nil {return nil ,_cdgb ;};};if _bfdac :=_bdffc .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_bfdac !=nil {_fadd .BoxColorInfo =_bfdac ;};if _bddd :=_bdffc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bddd !=nil {_fadd .Contents =_bddd ;};if _deec :=_bdffc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_deec !=nil {_egef ,_cegee :=_aaa .GetInt (_deec );if !_cegee {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_afdc :=int64 (*_egef );_fadd .Rotate =&_afdc ;};if _bagad :=_bdffc .Get ("\u0047\u0072\u006fu\u0070");_bagad !=nil {_fadd .Group =_bagad ;};if _gcfe :=_bdffc .Get ("\u0054\u0068\u0075m\u0062");_gcfe !=nil {_fadd .Thumb =_gcfe ;};if _bdabe :=_bdffc .Get ("\u0042");_bdabe !=nil {_fadd .B =_bdabe ;};if _bbeb :=_bdffc .Get ("\u0044\u0075\u0072");_bbeb !=nil {_fadd .Dur =_bbeb ;};if _ecbed :=_bdffc .Get ("\u0054\u0072\u0061n\u0073");_ecbed !=nil {_fadd .Trans =_ecbed ;};if _cebfg :=_bdffc .Get ("\u0041\u0041");_cebfg !=nil {_fadd .AA =_cebfg ;};if _ggbcc :=_bdffc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ggbcc !=nil {_fadd .Metadata =_ggbcc ;};if _efffda :=_bdffc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_efffda !=nil {_fadd .PieceInfo =_efffda ;};if _accfg :=_bdffc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_accfg !=nil {_fadd .StructParents =_accfg ;};if _agbbd :=_bdffc .Get ("\u0049\u0044");_agbbd !=nil {_fadd .ID =_agbbd ;};if _fbgef :=_bdffc .Get ("\u0050\u005a");_fbgef !=nil {_fadd .PZ =_fbgef ;};if _gfcedf :=_bdffc .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_gfcedf !=nil {_fadd .SeparationInfo =_gfcedf ;};if _defba :=_bdffc .Get ("\u0054\u0061\u0062\u0073");_defba !=nil {_fadd .Tabs =_defba ;};if _ffbde :=_bdffc .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_ffbde !=nil {_fadd .TemplateInstantiated =_ffbde ;};if _dgbbe :=_bdffc .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_dgbbe !=nil {_fadd .PresSteps =_dgbbe ;};if _dbedc :=_bdffc .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dbedc !=nil {_fadd .UserUnit =_dbedc ;};if _ggedg :=_bdffc .Get ("\u0056\u0050");_ggedg !=nil {_fadd .VP =_ggedg ;};if _aagcc :=_bdffc .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_aagcc !=nil {_fadd .Annots =_aagcc ;};_fadd ._cgcge =_ccdff ;return _fadd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfcc *PdfAnnotationWidget )ToPdfObject ()_aaa .PdfObject {_dfcc .PdfAnnotation .ToPdfObject ();_bcc :=_dfcc ._fdd ;_bbe :=_bcc .PdfObject .(*_aaa .PdfObjectDictionary );if _dfcc ._bbc {return _bcc ;};_dfcc ._bbc =true ;_bbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_bbe .SetIfNotNil ("\u0048",_dfcc .H );_bbe .SetIfNotNil ("\u004d\u004b",_dfcc .MK );_bbe .SetIfNotNil ("\u0041",_dfcc .A );_bbe .SetIfNotNil ("\u0041\u0041",_dfcc .AA );_bbe .SetIfNotNil ("\u0042\u0053",_dfcc .BS );_eebe :=_dfcc .Parent ;if _dfcc ._bcg !=nil {if _dfcc ._bcg ._badf ==_dfcc ._fdd {_dfcc ._bcg .ToPdfObject ();};_eebe =_dfcc ._bcg .GetContainingPdfObject ();};if _eebe !=_bcc {_bbe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eebe );};_dfcc ._bbc =false ;return _bcc ;};

// Val returns the value of the color.
func (_fbec *PdfColorCalGray )Val ()float64 {return float64 (*_fbec )};

// GetDescent returns the Descent of the font `descriptor`.
func (_fcge *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _aaa .GetNumberAsFloat (_fcge .Descent );};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;var _ pdfFont =(*pdfFontSimple )(nil );

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_afde *PdfColorspaceLab )DecodeArray ()[]float64 {_bgeea :=[]float64 {0,100};if _afde .Range !=nil &&len (_afde .Range )==4{_bgeea =append (_bgeea ,_afde .Range ...);}else {_bgeea =append (_bgeea ,-100,100,-100,100);};return _bgeea ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fdaeg *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func _daegg (_dbefa _aaa .PdfObject )[]*_aaa .PdfObjectStream {if _dbefa ==nil {return nil ;};_baebe ,_gbcdb :=_aaa .GetArray (_dbefa );if !_gbcdb ||_baebe .Len ()==0{return nil ;};_agffd :=make ([]*_aaa .PdfObjectStream ,0,_baebe .Len ());for _ ,_baaag :=range _baebe .Elements (){if _fdeeg ,_gedbc :=_aaa .GetStream (_baaag );_gedbc {_agffd =append (_agffd ,_fdeeg );};};return _agffd ;};func (_cbbfe *PdfPattern )getDict ()*_aaa .PdfObjectDictionary {if _becbe ,_efbcb :=_cbbfe ._eabbc .(*_aaa .PdfIndirectObject );_efbcb {_bgaaa ,_abbg :=_becbe .PdfObject .(*_aaa .PdfObjectDictionary );if !_abbg {return nil ;};return _bgaaa ;}else if _abgd ,_cabcc :=_cbbfe ._eabbc .(*_aaa .PdfObjectStream );_cabcc {return _abgd .PdfObjectDictionary ;}else {_fe .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_cbbfe ._eabbc );return nil ;};};func _eadgc (_edbb *_aaa .PdfObjectDictionary )(*PdfFieldText ,error ){_accf :=&PdfFieldText {};_accf .DA ,_ =_aaa .GetString (_edbb .Get ("\u0044\u0041"));_accf .Q ,_ =_aaa .GetInt (_edbb .Get ("\u0051"));_accf .DS ,_ =_aaa .GetString (_edbb .Get ("\u0044\u0053"));_accf .RV =_edbb .Get ("\u0052\u0056");_accf .MaxLen ,_ =_aaa .GetInt (_edbb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _accf ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cfcc :=PdfColorCalGray (grayVal );return &_cfcc ;};

// ToPdfObject implements interface PdfModel.
func (_add *PdfActionURI )ToPdfObject ()_aaa .PdfObject {_add .PdfAction .ToPdfObject ();_ca :=_add ._afe ;_ga :=_ca .PdfObject .(*_aaa .PdfObjectDictionary );_ga .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeURI )));_ga .SetIfNotNil ("\u0055\u0052\u0049",_add .URI );_ga .SetIfNotNil ("\u0049\u0073\u004da\u0070",_add .IsMap );return _ca ;};

// ToPdfObject returns the PDF representation of the function.
func (_dggd *PdfFunctionType4 )ToPdfObject ()_aaa .PdfObject {_cebeg :=_dggd ._eaga ;if _cebeg ==nil {_dggd ._eaga =&_aaa .PdfObjectStream {};_cebeg =_dggd ._eaga ;};_cegdd :=_aaa .MakeDict ();_cegdd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aaa .MakeInteger (4));_dgdg :=&_aaa .PdfObjectArray {};for _ ,_gfdd :=range _dggd .Domain {_dgdg .Append (_aaa .MakeFloat (_gfdd ));};_cegdd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgdg );_dfdg :=&_aaa .PdfObjectArray {};for _ ,_cgdcd :=range _dggd .Range {_dfdg .Append (_aaa .MakeFloat (_cgdcd ));};_cegdd .Set ("\u0052\u0061\u006eg\u0065",_dfdg );if _dggd ._fbeg ==nil &&_dggd .Program !=nil {_dggd ._fbeg =[]byte (_dggd .Program .String ());};_cegdd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aaa .MakeInteger (int64 (len (_dggd ._fbeg ))));_cebeg .Stream =_dggd ._fbeg ;_cebeg .PdfObjectDictionary =_cegdd ;return _cebeg ;};

// ToPdfObject implements interface PdfModel.
func (_gdgac *PdfAnnotationLine )ToPdfObject ()_aaa .PdfObject {_gdgac .PdfAnnotation .ToPdfObject ();_ecad :=_gdgac ._fdd ;_gdeb :=_ecad .PdfObject .(*_aaa .PdfObjectDictionary );_gdgac .PdfAnnotationMarkup .appendToPdfDictionary (_gdeb );_gdeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u004c\u0069\u006e\u0065"));_gdeb .SetIfNotNil ("\u004c",_gdgac .L );_gdeb .SetIfNotNil ("\u0042\u0053",_gdgac .BS );_gdeb .SetIfNotNil ("\u004c\u0045",_gdgac .LE );_gdeb .SetIfNotNil ("\u0049\u0043",_gdgac .IC );_gdeb .SetIfNotNil ("\u004c\u004c",_gdgac .LL );_gdeb .SetIfNotNil ("\u004c\u004c\u0045",_gdgac .LLE );_gdeb .SetIfNotNil ("\u0043\u0061\u0070",_gdgac .Cap );_gdeb .SetIfNotNil ("\u0049\u0054",_gdgac .IT );_gdeb .SetIfNotNil ("\u004c\u004c\u004f",_gdgac .LLO );_gdeb .SetIfNotNil ("\u0043\u0050",_gdgac .CP );_gdeb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gdgac .Measure );_gdeb .SetIfNotNil ("\u0043\u004f",_gdgac .CO );return _ecad ;};

// ToPdfObject implements interface PdfModel.
func (_agg *PdfActionTrans )ToPdfObject ()_aaa .PdfObject {_agg .PdfAction .ToPdfObject ();_dde :=_agg ._afe ;_cff :=_dde .PdfObject .(*_aaa .PdfObjectDictionary );_cff .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeTrans )));_cff .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_agg .Trans );return _dde ;};func _cgdaf (_cfeaa *_aaa .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dcdbd :=&PdfShadingPattern {};_dgcb :=_cfeaa .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _dgcb ==nil {_fe .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fabae ,_bbacf :=_cafad (_dgcb );if _bbacf !=nil {_fe .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_bbacf );return nil ,_bbacf ;};_dcdbd .Shading =_fabae ;if _aadf :=_cfeaa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_aadf !=nil {_fddad ,_febgf :=_aadf .(*_aaa .PdfObjectArray );if !_febgf {_fe .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aadf );return nil ,_aaa .ErrTypeError ;};_dcdbd .Matrix =_fddad ;};if _fcff :=_cfeaa .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fcff !=nil {_dcdbd .ExtGState =_fcff ;};return _dcdbd ,nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _aaa .PdfObject ;Sy _aaa .PdfObject ;};

// Fill populates `form` with values provided by `provider`.
func (_fgagcc *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fgagcc .fill (provider ,nil );};var _cdbae =false ;

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _g .Time ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _aaa .PdfObject ;Flags _aaa .PdfObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _agb .ReadSeeker )(*PdfReader ,error ){_badad :=&PdfReader {_ggbee :rs ,_dabcd :map[_aaa .PdfObject ]struct{}{},_egba :_abgbc (),_bcade :true };_gefb ,_addag :=_aaa .NewParser (rs );if _addag !=nil {return nil ,_addag ;};_badad ._gcee =_gefb ;_gddb ,_addag :=_badad .IsEncrypted ();if _addag !=nil {return nil ,_addag ;};if !_gddb {_addag =_badad .loadStructure ();if _addag !=nil {return nil ,_addag ;};};return _badad ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_aeg *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afbf ,_fgdc :=_aaa .GetNumbersAsFloat (objects );if _fgdc !=nil {return nil ,_fgdc ;};return _aeg .ColorFromFloats (_afbf );};func _aada (_ggcbgf *_aaa .PdfIndirectObject )(*PdfOutline ,error ){_ebdff ,_egdf :=_ggcbgf .PdfObject .(*_aaa .PdfObjectDictionary );if !_egdf {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cbeg :=NewPdfOutline ();if _egac :=_ebdff .Get ("\u0054\u0079\u0070\u0065");_egac !=nil {_ffgfg ,_eccad :=_egac .(*_aaa .PdfObjectName );if _eccad {if *_ffgfg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ffgfg );};};};if _gcegd :=_ebdff .Get ("\u0043\u006f\u0075n\u0074");_gcegd !=nil {_bbbfe ,_eefge :=_aaa .GetNumberAsInt64 (_gcegd );if _eefge !=nil {return nil ,_eefge ;};_cbeg .Count =&_bbbfe ;};return _cbeg ,nil ;};func (_afcg *PdfReader )newPdfAnnotationStrikeOut (_feab *_aaa .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_acgfd :=PdfAnnotationStrikeOut {};_bgfa ,_cgdc :=_afcg .newPdfAnnotationMarkupFromDict (_feab );if _cgdc !=nil {return nil ,_cgdc ;};_acgfd .PdfAnnotationMarkup =_bgfa ;_acgfd .QuadPoints =_feab .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_acgfd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bdc *PdfActionSetOCGState )ToPdfObject ()_aaa .PdfObject {_bdc .PdfAction .ToPdfObject ();_ggfg :=_bdc ._afe ;_abd :=_ggfg .PdfObject .(*_aaa .PdfObjectDictionary );_abd .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeSetOCGState )));_abd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bdc .State );_abd .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bdc .PreserveRB );return _ggfg ;};var (ErrRequiredAttributeMissing =_ee .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cggb =_ee .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ee .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ee .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_dbe .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_aaa .ErrNotSupported );ErrType1CFontNotSupported =_dbe .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_aaa .ErrNotSupported );ErrType3FontNotSupported =_dbe .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_aaa .ErrNotSupported );ErrTTCmapNotSupported =_dbe .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_aaa .ErrNotSupported );ErrSignNotEnoughSpace =_dbe .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_dbe .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_gfge *PdfAcroForm )filteredFields (_afcfc FieldFilterFunc ,_face bool )[]*PdfField {if _gfge ==nil {return nil ;};return _cbgc (_gfge .Fields ,_afcfc ,_face );};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_cbae *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func _fgaea (_cabgb _aaa .PdfObject )(string ,error ){_cabgb =_aaa .TraceToDirectObject (_cabgb );switch _gedcb :=_cabgb .(type ){case *_aaa .PdfObjectString :return _gedcb .Str (),nil ;case *_aaa .PdfObjectStream :_badbc ,_eecgc :=_aaa .DecodeStream (_gedcb );if _eecgc !=nil {return "",_eecgc ;};return string (_badbc ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cabgb );};

// ToPdfObject implements interface PdfModel.
func (_gaee *PdfAnnotationSound )ToPdfObject ()_aaa .PdfObject {_gaee .PdfAnnotation .ToPdfObject ();_cebg :=_gaee ._fdd ;_eaag :=_cebg .PdfObject .(*_aaa .PdfObjectDictionary );_gaee .PdfAnnotationMarkup .appendToPdfDictionary (_eaag );_eaag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0053\u006f\u0075n\u0064"));_eaag .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gaee .Sound );_eaag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gaee .Name );return _cebg ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_edgbag *PdfPageResources )AddExtGState (gsName _aaa .PdfObjectName ,gsDict _aaa .PdfObject )error {if _edgbag .ExtGState ==nil {_edgbag .ExtGState =_aaa .MakeDict ();};_badea :=_edgbag .ExtGState ;_ecbae ,_fegf :=_aaa .TraceToDirectObject (_badea ).(*_aaa .PdfObjectDictionary );if !_fegf {_fe .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_badea ,_aaa .TraceToDirectObject (_badea ));return _aaa .ErrTypeError ;};_ecbae .Set (gsName ,gsDict );return nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ecagb OutlineDest )ToPdfObject ()_aaa .PdfObject {if (_ecagb .PageObj ==nil &&_ecagb .Page < 0)||_ecagb .Mode ==""{return _aaa .MakeNull ();};_dfgff :=_aaa .MakeArray ();if _ecagb .PageObj !=nil {_dfgff .Append (_ecagb .PageObj );}else {_dfgff .Append (_aaa .MakeInteger (_ecagb .Page ));};_dfgff .Append (_aaa .MakeName (_ecagb .Mode ));switch _ecagb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_dfgff .Append (_aaa .MakeFloat (_ecagb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_dfgff .Append (_aaa .MakeFloat (_ecagb .X ));case "\u0058\u0059\u005a":_dfgff .Append (_aaa .MakeFloat (_ecagb .X ));_dfgff .Append (_aaa .MakeFloat (_ecagb .Y ));_dfgff .Append (_aaa .MakeFloat (_ecagb .Zoom ));default:_dfgff .Set (1,_aaa .MakeName ("\u0046\u0069\u0074"));};return _dfgff ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_fba :=NewPdfAnnotation ();_dada :=&PdfAnnotationLine {};_dada .PdfAnnotation =_fba ;_dada .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fba .SetContext (_dada );return _dada ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_acfef *PdfColorspaceDeviceNAttributes )ToPdfObject ()_aaa .PdfObject {_ccea :=_aaa .MakeDict ();if _acfef .Subtype !=nil {_ccea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_acfef .Subtype );};_ccea .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_acfef .Colorants );_ccea .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_acfef .Process );_ccea .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_acfef .MixingHints );if _acfef ._fegee !=nil {_acfef ._fegee .PdfObject =_ccea ;return _acfef ._fegee ;};return _ccea ;};

// ToPdfObject implements interface PdfModel.
func (_bgbd *PdfFilespec )ToPdfObject ()_aaa .PdfObject {_gedb :=_bgbd .getDict ();_gedb .Clear ();_gedb .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_gedb .SetIfNotNil ("\u0046\u0053",_bgbd .FS );_gedb .SetIfNotNil ("\u0046",_bgbd .F );_gedb .SetIfNotNil ("\u0055\u0046",_bgbd .UF );_gedb .SetIfNotNil ("\u0044\u004f\u0053",_bgbd .DOS );_gedb .SetIfNotNil ("\u004d\u0061\u0063",_bgbd .Mac );_gedb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bgbd .Unix );_gedb .SetIfNotNil ("\u0049\u0044",_bgbd .ID );_gedb .SetIfNotNil ("\u0056",_bgbd .V );_gedb .SetIfNotNil ("\u0045\u0046",_bgbd .EF );_gedb .SetIfNotNil ("\u0052\u0046",_bgbd .RF );_gedb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_bgbd .Desc );_gedb .SetIfNotNil ("\u0043\u0049",_bgbd .CI );return _bgbd ._affb ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_efbg *PdfColorspaceDeviceGray )ToPdfObject ()_aaa .PdfObject {return _aaa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_edca *PdfReader )newPdfAnnotationInkFromDict (_fcfad *_aaa .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fgde :=PdfAnnotationInk {};_eab ,_fdb :=_edca .newPdfAnnotationMarkupFromDict (_fcfad );if _fdb !=nil {return nil ,_fdb ;};_fgde .PdfAnnotationMarkup =_eab ;_fgde .InkList =_fcfad .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fgde .BS =_fcfad .Get ("\u0042\u0053");return &_fgde ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dadag *PdfShading )GetContext ()PdfModel {return _dadag ._bgcdf };

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_fagb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ee .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_eefb :=field .V ;if _eefb ==nil {return _ee .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gabfc :=pageNum -1;if _gabfc < 0||_gabfc > len (_fagb ._ebdea )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_efcc :=_fagb .Reader .PageList [_gabfc ];field .P =_efcc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_aaa .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_efcc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _fagb ._abca ==_fagb ._efcg .AcroForm {_fagb ._abca =_fagb .Reader .AcroForm ;};_fda :=_fagb ._abca ;if _fda ==nil {_fda =NewPdfAcroForm ();};_fda .SigFlags =_aaa .MakeInteger (3);_ccbg :=append (_fda .AllFields (),field .PdfField );_fda .Fields =&_ccbg ;_fagb .ReplaceAcroForm (_fda );_fagb .UpdatePage (_efcc );_fagb ._ebdea [_gabfc ]=_efcc ;return nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_fbgega *PdfReader )GetOutlines ()(*Outline ,error ){if _fbgega ==nil {return nil ,_ee .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_gedf :=_fbgega .GetOutlineTree ();if _gedf ==nil {return nil ,_ee .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _cdgea func (_edaff *PdfOutlineTreeNode ,_afggg *[]*OutlineItem );_cdgea =func (_bcdf *PdfOutlineTreeNode ,_aedafc *[]*OutlineItem ){if _bcdf ==nil {return ;};if _bcdf ._egceg ==nil {_fe .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _dcbec *OutlineItem ;if _befad ,_gcde :=_bcdf ._egceg .(*PdfOutlineItem );_gcde {_gcfea :=_befad .Dest ;if (_gcfea ==nil ||_aaa .IsNullObject (_gcfea ))&&_befad .A !=nil {if _dfdga ,_dcba :=_aaa .GetDict (_befad .A );_dcba {_gcfea ,_ =_aaa .GetArray (_dfdga .Get ("\u0044"));};};var _bfea OutlineDest ;if _gcfea !=nil &&!_aaa .IsNullObject (_gcfea ){if _eceag ,_aefee :=_fbccd (_gcfea ,_fbgega );_aefee ==nil {_bfea =*_eceag ;}else {_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gcfea ,_aefee );};};_dcbec =NewOutlineItem (_befad .Title .Decoded (),_bfea );*_aedafc =append (*_aedafc ,_dcbec );if _befad .Next !=nil {_cdgea (_befad .Next ,_aedafc );};};if _bcdf .First !=nil {if _dcbec !=nil {_aedafc =&_dcbec .Entries ;};_cdgea (_bcdf .First ,_aedafc );};};_cfec :=NewOutline ();_cdgea (_gedf ,&_cfec .Entries );return _cfec ,nil ;};func (_egeb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_egeb .fontCommon };

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_aaa .PdfObjectArray ;Matrix *_aaa .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_fcag *PdfAnnotationInk )ToPdfObject ()_aaa .PdfObject {_fcag .PdfAnnotation .ToPdfObject ();_daeb :=_fcag ._fdd ;_fbfff :=_daeb .PdfObject .(*_aaa .PdfObjectDictionary );_fcag .PdfAnnotationMarkup .appendToPdfDictionary (_fbfff );_fbfff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0049\u006e\u006b"));_fbfff .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fcag .InkList );_fbfff .SetIfNotNil ("\u0042\u0053",_fcag .BS );return _daeb ;};func _gdag (_cgdac *_aaa .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cceeg :=PdfShadingType3 {};_eebd :=_cgdac .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _eebd ==nil {_fe .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_acega ,_aecbd :=_eebd .(*_aaa .PdfObjectArray );if !_aecbd {_fe .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eebd );return nil ,_aaa .ErrTypeError ;};if _acega .Len ()!=6{_fe .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acega .Len ());return nil ,ErrInvalidAttribute ;};_cceeg .Coords =_acega ;if _cbba :=_cgdac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cbba !=nil {_cbba =_aaa .TraceToDirectObject (_cbba );_ggafa ,_dgagdc :=_cbba .(*_aaa .PdfObjectArray );if !_dgagdc {_fe .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbba );return nil ,_aaa .ErrTypeError ;};_cceeg .Domain =_ggafa ;};_eebd =_cgdac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eebd ==nil {_fe .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cceeg .Function =[]PdfFunction {};if _gedfd ,_aaebf :=_eebd .(*_aaa .PdfObjectArray );_aaebf {for _ ,_cbbaa :=range _gedfd .Elements (){_egee ,_fdede :=_dbec (_cbbaa );if _fdede !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdede );return nil ,_fdede ;};_cceeg .Function =append (_cceeg .Function ,_egee );};}else {_gffef ,_beafg :=_dbec (_eebd );if _beafg !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beafg );return nil ,_beafg ;};_cceeg .Function =append (_cceeg .Function ,_gffef );};if _gcecb :=_cgdac .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gcecb !=nil {_gcecb =_aaa .TraceToDirectObject (_gcecb );_faeg ,_eceff :=_gcecb .(*_aaa .PdfObjectArray );if !_eceff {_fe .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcecb );return nil ,_aaa .ErrTypeError ;};if _faeg .Len ()!=2{_fe .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_faeg .Len ());return nil ,ErrInvalidAttribute ;};_cceeg .Extend =_faeg ;};return &_cceeg ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_agebab []byte ;_ggcd []float64 ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_fdfd *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_fdfd .HiVal )};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_eecc *PdfColorspaceLab )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbded ,_egad :=_aaa .GetNumbersAsFloat (objects );if _egad !=nil {return nil ,_egad ;};return _eecc .ColorFromFloats (_gbded );};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_debde :=NewPdfAnnotation ();_degg :=&PdfAnnotationPolygon {};_degg .PdfAnnotation =_debde ;_degg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_debde .SetContext (_degg );return _degg ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_gdee *PdfPattern )IsTiling ()bool {return _gdee .PatternType ==1};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_aceea *PdfColorspaceSpecialIndexed )ToPdfObject ()_aaa .PdfObject {_adde :=_aaa .MakeArray (_aaa .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_adde .Append (_aceea .Base .ToPdfObject ());_adde .Append (_aaa .MakeInteger (int64 (_aceea .HiVal )));_adde .Append (_aceea .Lookup );if _aceea ._ceeb !=nil {_aceea ._ceeb .PdfObject =_adde ;return _aceea ._ceeb ;};return _adde ;};

// ToPdfObject implements interface PdfModel.
func (_dgc *PdfActionSubmitForm )ToPdfObject ()_aaa .PdfObject {_dgc .PdfAction .ToPdfObject ();_beca :=_dgc ._afe ;_fagcd :=_beca .PdfObject .(*_aaa .PdfObjectDictionary );_fagcd .SetIfNotNil ("\u0053",_aaa .MakeName (string (ActionTypeSubmitForm )));if _dgc .F !=nil {_fagcd .Set ("\u0046",_dgc .F .ToPdfObject ());};_fagcd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dgc .Fields );_fagcd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dgc .Flags );return _beca ;};func (_bbg *PdfReader )newPdfActionSoundFromDict (_ggg *_aaa .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ggg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ggg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ggg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ggg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ggg .Get ("\u004d\u0069\u0078")},nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_gca :=NewPdfAction ();_ffd :=&PdfActionGoTo3DView {};_ffd .PdfAction =_gca ;_gca .SetContext (_ffd );return _ffd ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bdg :=NewPdfAnnotation ();_gce :=&PdfAnnotationSound {};_gce .PdfAnnotation =_bdg ;_gce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdg .SetContext (_gce );return _gce ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_gbbg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_ecde *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dfea :=_ecde ._ebcac ;_dfea !=nil {return _dfea ;};return _ecde ._gffee ;};func (_eag *PdfReader )newPdfAnnotationLinkFromDict (_ccbd *_aaa .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bgg :=PdfAnnotationLink {};_bgg .A =_ccbd .Get ("\u0041");_bgg .Dest =_ccbd .Get ("\u0044\u0065\u0073\u0074");_bgg .H =_ccbd .Get ("\u0048");_bgg .PA =_ccbd .Get ("\u0050\u0041");_bgg .QuadPoints =_ccbd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bgg .BS =_ccbd .Get ("\u0042\u0053");return &_bgg ,nil ;};func (_afb *PdfReader )newPdfActionHideFromDict (_bea *_aaa .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_bea .Get ("\u0054"),H :_bea .Get ("\u0048")},nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_dbbda *PdfPage )GetPageAsIndirectObject ()*_aaa .PdfIndirectObject {return _dbbda ._beecaf };

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};func (_afbag *PdfReader )flattenFieldsWithOpts (_ddac bool ,_egcb FieldAppearanceGenerator ,_dfdcg *FieldFlattenOpts )error {if _dfdcg ==nil {_dfdcg =&FieldFlattenOpts {};};var _eeceb bool ;_ceda :=map[*PdfAnnotation ]bool {};{var _bbbg []*PdfField ;_fgef :=_afbag .AcroForm ;if _fgef !=nil {if _dfdcg .FilterFunc !=nil {_bbbg =_fgef .filteredFields (_dfdcg .FilterFunc ,true );_eeceb =_fgef .Fields !=nil &&len (*_fgef .Fields )> 0;}else {_bbbg =_fgef .AllFields ();};};for _ ,_bgegd :=range _bbbg {for _ ,_dfca :=range _bgegd .Annotations {_ceda [_dfca .PdfAnnotation ]=_bgegd .V !=nil ;if _egcb !=nil {_gbccd ,_fbgbg :=_egcb .GenerateAppearanceDict (_fgef ,_bgegd ,_dfca );if _fbgbg !=nil {return _fbgbg ;};_dfca .AP =_gbccd ;};};};};if _ddac {for _ ,_dcca :=range _afbag .PageList {_bdcfe ,_cdgfg :=_dcca .GetAnnotations ();if _cdgfg !=nil {return _cdgfg ;};for _ ,_bfcd :=range _bdcfe {_ceda [_bfcd ]=true ;};};};for _ ,_dbce :=range _afbag .PageList {var _edeae []*PdfAnnotation ;if _egcb !=nil {if _bgaf :=_egcb .WrapContentStream (_dbce );_bgaf !=nil {return _bgaf ;};};_agbe ,_adbg :=_dbce .GetAnnotations ();if _adbg !=nil {return _adbg ;};for _ ,_gbab :=range _agbe {_eedgd ,_caaaf :=_ceda [_gbab ];if !_caaaf {_edeae =append (_edeae ,_gbab );continue ;};switch _gbab .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_faabe ,_aeaae ,_gddge :=_daddf (_gbab );if _gddge !=nil {if !_eedgd {_fe .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_gddge );continue ;};if _faabe ==nil {continue ;};_gbcb :=_dbce .Resources .GenerateXObjectName ();_dbce .Resources .SetXObjectFormByName (_gbcb ,_faabe );_gacb :=_dg .Min (_aeaae .Llx ,_aeaae .Urx );_bfad :=_dg .Min (_aeaae .Lly ,_aeaae .Ury );var _cbff []string ;_cbff =append (_cbff ,"\u0071");_cbff =append (_cbff ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gacb ,_bfad ));_cbff =append (_cbff ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_gbcb .String ()));_cbff =append (_cbff ,"\u0051");_cdfae :=_af .Join (_cbff ,"\u000a");_gddge =_dbce .AppendContentStream (_cdfae );if _gddge !=nil {return _gddge ;};if _faabe .Resources !=nil {_ecgd ,_fbba :=_aaa .GetDict (_faabe .Resources .Font );if _fbba {for _ ,_dddc :=range _ecgd .Keys (){if !_dbce .Resources .HasFontByName (_dddc ){_dbce .Resources .SetFontByName (_dddc ,_ecgd .Get (_dddc ));};};};};};if len (_edeae )> 0{_dbce ._edebg =_edeae ;}else {_dbce ._edebg =[]*PdfAnnotation {};};};if !_eeceb {_afbag .AcroForm =nil ;};return nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _aaa .PdfObject ;BS _aaa .PdfObject ;LE _aaa .PdfObject ;IC _aaa .PdfObject ;LL _aaa .PdfObject ;LLE _aaa .PdfObject ;Cap _aaa .PdfObject ;IT _aaa .PdfObject ;LLO _aaa .PdfObject ;CP _aaa .PdfObject ;Measure _aaa .PdfObject ;CO _aaa .PdfObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_defeg *PdfFunctionType0 )ToPdfObject ()_aaa .PdfObject {if _defeg ._gbcca ==nil {_defeg ._gbcca =&_aaa .PdfObjectStream {};};_acfbf :=_aaa .MakeDict ();_acfbf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aaa .MakeInteger (0));_cfegb :=&_aaa .PdfObjectArray {};for _ ,_ccfcb :=range _defeg .Domain {_cfegb .Append (_aaa .MakeFloat (_ccfcb ));};_acfbf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfegb );_ffaga :=&_aaa .PdfObjectArray {};for _ ,_effca :=range _defeg .Range {_ffaga .Append (_aaa .MakeFloat (_effca ));};_acfbf .Set ("\u0052\u0061\u006eg\u0065",_ffaga );_fbfcb :=&_aaa .PdfObjectArray {};for _ ,_dfdea :=range _defeg .Size {_fbfcb .Append (_aaa .MakeInteger (int64 (_dfdea )));};_acfbf .Set ("\u0053\u0069\u007a\u0065",_fbfcb );_acfbf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_aaa .MakeInteger (int64 (_defeg .BitsPerSample )));if _defeg .Order !=1{_acfbf .Set ("\u004f\u0072\u0064e\u0072",_aaa .MakeInteger (int64 (_defeg .Order )));};_acfbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aaa .MakeInteger (int64 (len (_defeg ._aeceg ))));_defeg ._gbcca .Stream =_defeg ._aeceg ;_defeg ._gbcca .PdfObjectDictionary =_acfbf ;return _defeg ._gbcca ;};

// C returns the value of the C component of the color.
func (_bcce *PdfColorCalRGB )C ()float64 {return _bcce [2]};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cdfgc :=PdfPage {};_cdfgc ._afaag =_aaa .MakeDict ();_cdfgc .Resources =NewPdfPageResources ();_adabg :=_aaa .PdfIndirectObject {};_adabg .PdfObject =_cdfgc ._afaag ;_cdfgc ._beecaf =&_adabg ;return &_cdfgc ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _aaa .PdfObject )(_aaa .PdfObjectName ,error ){var _bgaa *_aaa .PdfObjectName ;var _bgfc *_aaa .PdfObjectArray ;if _ebbc ,_fcdae :=obj .(*_aaa .PdfIndirectObject );_fcdae {if _cgg ,_dfdeg :=_ebbc .PdfObject .(*_aaa .PdfObjectArray );_dfdeg {_bgfc =_cgg ;}else if _fbed ,_egcf :=_ebbc .PdfObject .(*_aaa .PdfObjectName );_egcf {_bgaa =_fbed ;};}else if _bbed ,_caf :=obj .(*_aaa .PdfObjectArray );_caf {_bgfc =_bbed ;}else if _defg ,_agfb :=obj .(*_aaa .PdfObjectName );_agfb {_bgaa =_defg ;};if _bgaa !=nil {switch *_bgaa {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bgaa ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bgaa ,nil ;};};if _bgfc !=nil &&_bgfc .Len ()> 0{if _adgc ,_cdfag :=_bgfc .Get (0).(*_aaa .PdfObjectName );_cdfag {switch *_adgc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bgfc .Len ()==1{return *_adgc ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_adgc ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_adgc ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_adgc ,nil ;};};};return "",nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aaa .PdfObject ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fcfc *PdfReader )Decrypt (password []byte )(bool ,error ){_egaca ,_ceccd :=_fcfc ._gcee .Decrypt (password );if _ceccd !=nil {return false ,_ceccd ;};if !_egaca {return false ,nil ;};_ceccd =_fcfc .loadStructure ();if _ceccd !=nil {_fe .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_ceccd );return false ,_ceccd ;};return true ,nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_dgfgd :=&PdfPageResourcesColorspaces {};_dgfgd .Names =[]string {};_dgfgd .Colorspaces =map[string ]PdfColorspace {};_dgfgd ._ggddf =&_aaa .PdfIndirectObject {};return _dgfgd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aaff *PdfColorspaceDeviceRGB )ToPdfObject ()_aaa .PdfObject {return _aaa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// B returns the value of the blue component of the color.
func (_cagc *PdfColorDeviceRGB )B ()float64 {return _cagc [2]};

// PartialName returns the partial name of the field.
func (_fgcg *PdfField )PartialName ()string {_fbcb :="";if _fgcg .T !=nil {_fbcb =_fgcg .T .Decoded ();}else {_fe .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _fbcb ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cdfac *_aaa .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fggg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_facf :=vals [0];_bgeda :=[]float64 {_facf };_fdaf ,_dbdb :=_fggg .TintTransform .Evaluate (_bgeda );if _dbdb !=nil {_fe .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_dbdb );_fe .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fggg .TintTransform );return nil ,_dbdb ;};_fe .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_fdaf ,_fggg .AlternateSpace );_edgbc ,_dbdb :=_fggg .AlternateSpace .ColorFromFloats (_fdaf );if _dbdb !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_dbdb );return nil ,_dbdb ;};return _edgbc ,nil ;};

// GetNumComponents returns the number of color components.
func (_cge *PdfColorspaceICCBased )GetNumComponents ()int {return _cge .N };func _acce ()string {_eggb .Lock ();defer _eggb .Unlock ();return _bbgd };

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fcfec *PdfPageResources )GetPatternByName (keyName _aaa .PdfObjectName )(*PdfPattern ,bool ){if _fcfec .Pattern ==nil {return nil ,false ;};_egcfec ,_bebg :=_aaa .TraceToDirectObject (_fcfec .Pattern ).(*_aaa .PdfObjectDictionary );if !_bebg {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcfec .Pattern );return nil ,false ;};if _ddabd :=_egcfec .Get (keyName );_ddabd !=nil {_fegcg ,_addd :=_faaad (_ddabd );if _addd !=nil {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_addd );return nil ,false ;};return _fegcg ,true ;};return nil ,false ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _aaa .PdfObject ;Name _aaa .PdfObject ;State _aaa .PdfObject ;StateModel _aaa .PdfObject ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_bcad :=map[rune ]int {};for _ ,_cgeg :=range text {_bcad [_cgeg ]++;};return _bcad ;};

// SetDate sets the `M` field of the signature.
func (_cabdd *PdfSignature )SetDate (date _g .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_cabdd .M =_aaa .MakeString (date .Format (format ));};func (_gdbfc *Image )resampleLowBits (_afedc []uint32 ){_cfgc :=_bc .BytesPerLine (int (_gdbfc .Width ),int (_gdbfc .BitsPerComponent ),_gdbfc .ColorComponents );_cgge :=make ([]byte ,_gdbfc .ColorComponents *_cfgc *int (_gdbfc .Height ));_cgee :=int (_gdbfc .BitsPerComponent )*_gdbfc .ColorComponents *int (_gdbfc .Width );_cafb :=uint8 (8);var (_bdff ,_fbbf int ;_fgaf uint32 ;);for _gbgbc :=0;_gbgbc < int (_gdbfc .Height );_gbgbc ++{_fbbf =_gbgbc *_cfgc ;for _gfbaa :=0;_gfbaa < _cgee ;_gfbaa ++{_fgaf =_afedc [_bdff ];_cafb -=uint8 (_gdbfc .BitsPerComponent );_cgge [_fbbf ]|=byte (_fgaf )<<_cafb ;if _cafb ==0{_cafb =8;_fbbf ++;};_bdff ++;};};_gdbfc .Data =_cgge ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cbb :=NewPdfAnnotation ();_ggbf :=&PdfAnnotationProjection {};_ggbf .PdfAnnotation =_cbb ;_ggbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbb .SetContext (_ggbf );return _ggbf ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_ccee *_aaa .PdfIndirectObject ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_aaa .PdfObjectString ;Q *_aaa .PdfObjectInteger ;DS *_aaa .PdfObjectString ;RV _aaa .PdfObject ;MaxLen *_aaa .PdfObjectInteger ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_fcgg :=&PdfFilespec {};_fcgg ._affb =_aaa .MakeIndirectObject (_aaa .MakeDict ());return _fcgg ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_acef *pdfCIDFontType2 )ToPdfObject ()_aaa .PdfObject {if _acef ._gbdg ==nil {_acef ._gbdg =&_aaa .PdfIndirectObject {};};_abcbb :=_acef .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_acef ._gbdg .PdfObject =_abcbb ;if _acef .CIDSystemInfo !=nil {_abcbb .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_acef .CIDSystemInfo );};if _acef .DW !=nil {_abcbb .Set ("\u0044\u0057",_acef .DW );};if _acef .DW2 !=nil {_abcbb .Set ("\u0044\u0057\u0032",_acef .DW2 );};if _acef .W !=nil {_abcbb .Set ("\u0057",_acef .W );};if _acef .W2 !=nil {_abcbb .Set ("\u0057\u0032",_acef .W2 );};if _acef .CIDToGIDMap !=nil {_abcbb .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_acef .CIDToGIDMap );};return _acef ._gbdg ;};

// ToPdfObject implements interface PdfModel.
func (_fddf *PdfAnnotationRedact )ToPdfObject ()_aaa .PdfObject {_fddf .PdfAnnotation .ToPdfObject ();_ebac :=_fddf ._fdd ;_bbb :=_ebac .PdfObject .(*_aaa .PdfObjectDictionary );_fddf .PdfAnnotationMarkup .appendToPdfDictionary (_bbb );_bbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_bbb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fddf .QuadPoints );_bbb .SetIfNotNil ("\u0049\u0043",_fddf .IC );_bbb .SetIfNotNil ("\u0052\u004f",_fddf .RO );_bbb .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_fddf .OverlayText );_bbb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fddf .Repeat );_bbb .SetIfNotNil ("\u0044\u0041",_fddf .DA );_bbb .SetIfNotNil ("\u0051",_fddf .Q );return _ebac ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_gab :=NewPdfAnnotation ();_eefg :=&PdfAnnotationSquiggly {};_eefg .PdfAnnotation =_gab ;_eefg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gab .SetContext (_eefg );return _eefg ;};

// SetContext sets the sub action (context).
func (_ff *PdfAction )SetContext (ctx PdfModel ){_ff ._ac =ctx };

// ToPdfObject returns a stream object.
func (_fagdb *XObjectImage )ToPdfObject ()_aaa .PdfObject {_acede :=_fagdb ._eaea ;_ccfa :=_acede .PdfObjectDictionary ;if _fagdb .Filter !=nil {_ccfa =_fagdb .Filter .MakeStreamDict ();_acede .PdfObjectDictionary =_ccfa ;};_ccfa .Set ("\u0054\u0079\u0070\u0065",_aaa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_ccfa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0049\u006d\u0061g\u0065"));_ccfa .Set ("\u0057\u0069\u0064t\u0068",_aaa .MakeInteger (*(_fagdb .Width )));_ccfa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aaa .MakeInteger (*(_fagdb .Height )));if _fagdb .BitsPerComponent !=nil {_ccfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aaa .MakeInteger (*(_fagdb .BitsPerComponent )));};if _fagdb .ColorSpace !=nil {_ccfa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fagdb .ColorSpace .ToPdfObject ());};_ccfa .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_fagdb .Intent );_ccfa .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_fagdb .ImageMask );_ccfa .SetIfNotNil ("\u004d\u0061\u0073\u006b",_fagdb .Mask );_ccfa .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_fagdb .Decode );_ccfa .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_fagdb .Interpolate );_ccfa .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_fagdb .Alternatives );_ccfa .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_fagdb .SMask );_ccfa .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_fagdb .SMaskInData );_ccfa .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fagdb .Matte );_ccfa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fagdb .Name );_ccfa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fagdb .StructParent );_ccfa .SetIfNotNil ("\u0049\u0044",_fagdb .ID );_ccfa .SetIfNotNil ("\u004f\u0050\u0049",_fagdb .OPI );_ccfa .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fagdb .Metadata );_ccfa .SetIfNotNil ("\u004f\u0043",_fagdb .OC );_ccfa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aaa .MakeInteger (int64 (len (_fagdb .Stream ))));_acede .Stream =_fagdb .Stream ;return _acede ;};

// ToPdfObject implements interface PdfModel.
func (_cbfb *PdfAnnotationCaret )ToPdfObject ()_aaa .PdfObject {_cbfb .PdfAnnotation .ToPdfObject ();_afed :=_cbfb ._fdd ;_cccf :=_afed .PdfObject .(*_aaa .PdfObjectDictionary );_cbfb .PdfAnnotationMarkup .appendToPdfDictionary (_cccf );_cccf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aaa .MakeName ("\u0043\u0061\u0072e\u0074"));_cccf .SetIfNotNil ("\u0052\u0044",_cbfb .RD );_cccf .SetIfNotNil ("\u0053\u0079",_cbfb .Sy );return _afed ;};func _fgdfc (_aeafg _aaa .PdfObject )(*fontFile ,error ){_fe .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_aeafg );_abcdd :=&fontFile {};_aeafg =_aaa .TraceToDirectObject (_aeafg );_bdgc ,_cebbc :=_aeafg .(*_aaa .PdfObjectStream );if !_cebbc {_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_aeafg );return nil ,_aaa .ErrTypeError ;};_ggccc :=_bdgc .PdfObjectDictionary ;_bcdd ,_aadgb :=_aaa .DecodeStream (_bdgc );if _aadgb !=nil {return nil ,_aadgb ;};_gfdeg ,_cebbc :=_aaa .GetNameVal (_ggccc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cebbc {_abcdd ._dgda =_gfdeg ;if _gfdeg =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fe .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_edffd ,_ :=_aaa .GetIntVal (_ggccc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_caae ,_ :=_aaa .GetIntVal (_ggccc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _edffd > len (_bcdd ){_edffd =len (_bcdd );};if _edffd +_caae > len (_bcdd ){_caae =len (_bcdd )-_edffd ;};_afcec :=_bcdd [:_edffd ];var _ecgad []byte ;if _caae > 0{_ecgad =_bcdd [_edffd :_edffd +_caae ];};if _edffd > 0&&_caae > 0{_dcbe :=_abcdd .loadFromSegments (_afcec ,_ecgad );if _dcbe !=nil {return nil ,_dcbe ;};};return _abcdd ,nil ;};func (_bdaef *PdfWriter )seekByName (_fffcgf _aaa .PdfObject ,_dffdg []string ,_eggbd string )([]_aaa .PdfObject ,error ){_fe .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_fffcgf );var _bfaed []_aaa .PdfObject ;if _gabc ,_eecdea :=_fffcgf .(*_aaa .PdfIndirectObject );_eecdea {return _bdaef .seekByName (_gabc .PdfObject ,_dffdg ,_eggbd );};if _aebggd ,_dfbd :=_fffcgf .(*_aaa .PdfObjectStream );_dfbd {return _bdaef .seekByName (_aebggd .PdfObjectDictionary ,_dffdg ,_eggbd );};if _abffb ,_gacc :=_fffcgf .(*_aaa .PdfObjectDictionary );_gacc {_fe .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_ebeee :=range _abffb .Keys (){_fgcga :=_abffb .Get (_ebeee );if string (_ebeee )==_eggbd {_bfaed =append (_bfaed ,_fgcga );};for _ ,_efabd :=range _dffdg {if string (_ebeee )==_efabd {_fe .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_efabd );_beaad ,_cgfc :=_bdaef .seekByName (_fgcga ,_dffdg ,_eggbd );if _cgfc !=nil {return _bfaed ,_cgfc ;};_bfaed =append (_bfaed ,_beaad ...);break ;};};};return _bfaed ,nil ;};return _bfaed ,nil ;};var _dfbae =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _aaa .PdfObject ;NewWindow _aaa .PdfObject ;};func _fdbgg (_fgfc *_aaa .PdfObjectDictionary )*VRI {_gcage ,_ :=_aaa .GetString (_fgfc .Get ("\u0054\u0055"));_agda ,_ :=_aaa .GetString (_fgfc .Get ("\u0054\u0053"));return &VRI {Cert :_daegg (_fgfc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_daegg (_fgfc .Get ("\u004f\u0043\u0053\u0050")),CRL :_daegg (_fgfc .Get ("\u0043\u0052\u004c")),TU :_gcage ,TS :_agda };};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _aaa .PdfObject ;ColorSpace _aaa .PdfObject ;Pattern _aaa .PdfObject ;Shading _aaa .PdfObject ;XObject _aaa .PdfObject ;Font _aaa .PdfObject ;ProcSet _aaa .PdfObject ;Properties _aaa .PdfObject ;_gbcaa *_aaa .PdfObjectDictionary ;_gfadad *PdfPageResourcesColorspaces ;};func _gddgg (_dfdcc *_aaa .PdfObjectDictionary ,_cbec *fontCommon )(*pdfFontType0 ,error ){_ebdgf ,_efcefg :=_aaa .GetArray (_dfdcc .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_efcefg {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_cbec );return nil ,_aaa .ErrRangeError ;};if _ebdgf .Len ()!=1{_fe .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ebdgf .Len ());return nil ,_aaa .ErrRangeError ;};_adece ,_cgfb :=_addb (_ebdgf .Get (0),false );if _cgfb !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cgfb ,_cbec );return nil ,_cgfb ;};_bfgfd :=_bgde (_cbec );_bfgfd .DescendantFont =_adece ;_edgcd ,_efcefg :=_aaa .GetNameVal (_dfdcc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _efcefg {if _edgcd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_edgcd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bfgfd ._gedd =_aa .NewIdentityTextEncoder (_edgcd );}else if _eed .IsPredefinedCMap (_edgcd ){_bfgfd ._ffbg ,_cgfb =_eed .LoadPredefinedCMap (_edgcd );if _cgfb !=nil {_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_edgcd ,_cgfb );};}else {_fe .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_edgcd );};};if _egbgc :=_adece .baseFields ()._fgcf ;_egbgc !=nil {if _gfcda :=_egbgc .Name ();_gfcda =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_gfcda =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_gfcda =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_gfcda =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bfgfd ._gedd =_aa .NewCMapEncoder (_edgcd ,_bfgfd ._ffbg ,_egbgc );};};return _bfgfd ,nil ;};func _ecddg (_ccdc *_aaa .PdfObjectStream )(*PdfFunctionType0 ,error ){_fgdfce :=&PdfFunctionType0 {};_fgdfce ._gbcca =_ccdc ;_dffe :=_ccdc .PdfObjectDictionary ;_dacdc ,_bceee :=_aaa .TraceToDirectObject (_dffe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aaa .PdfObjectArray );if !_bceee {_fe .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dacdc .Len ()< 0||_dacdc .Len ()%2!=0{_fe .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fgdfce .NumInputs =_dacdc .Len ()/2;_dccbd ,_dedec :=_dacdc .ToFloat64Array ();if _dedec !=nil {return nil ,_dedec ;};_fgdfce .Domain =_dccbd ;_dacdc ,_bceee =_aaa .TraceToDirectObject (_dffe .Get ("\u0052\u0061\u006eg\u0065")).(*_aaa .PdfObjectArray );if !_bceee {_fe .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dacdc .Len ()< 0||_dacdc .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fgdfce .NumOutputs =_dacdc .Len ()/2;_bfaa ,_dedec :=_dacdc .ToFloat64Array ();if _dedec !=nil {return nil ,_dedec ;};_fgdfce .Range =_bfaa ;_dacdc ,_bceee =_aaa .TraceToDirectObject (_dffe .Get ("\u0053\u0069\u007a\u0065")).(*_aaa .PdfObjectArray );if !_bceee {_fe .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bcdcc ,_dedec :=_dacdc .ToIntegerArray ();if _dedec !=nil {return nil ,_dedec ;};if len (_bcdcc )!=_fgdfce .NumInputs {_fe .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgdfce .Size =_bcdcc ;_gdbe ,_bceee :=_aaa .TraceToDirectObject (_dffe .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_aaa .PdfObjectInteger );if !_bceee {_fe .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_gdbe !=1&&*_gdbe !=2&&*_gdbe !=4&&*_gdbe !=8&&*_gdbe !=12&&*_gdbe !=16&&*_gdbe !=24&&*_gdbe !=32{_fe .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_gdbe );return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgdfce .BitsPerSample =int (*_gdbe );_fgdfce .Order =1;_gbgfa ,_bceee :=_aaa .TraceToDirectObject (_dffe .Get ("\u004f\u0072\u0064e\u0072")).(*_aaa .PdfObjectInteger );if _bceee {if *_gbgfa !=1&&*_gbgfa !=3{_fe .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gbgfa );return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgdfce .Order =int (*_gbgfa );};_dacdc ,_bceee =_aaa .TraceToDirectObject (_dffe .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aaa .PdfObjectArray );if _bceee {_dbbea ,_cefa :=_dacdc .ToFloat64Array ();if _cefa !=nil {return nil ,_cefa ;};_fgdfce .Encode =_dbbea ;};_dacdc ,_bceee =_aaa .TraceToDirectObject (_dffe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_aaa .PdfObjectArray );if _bceee {_cfacf ,_gcdb :=_dacdc .ToFloat64Array ();if _gcdb !=nil {return nil ,_gcdb ;};_fgdfce .Decode =_cfacf ;};_gade ,_dedec :=_aaa .DecodeStream (_ccdc );if _dedec !=nil {return nil ,_dedec ;};_fgdfce ._aeceg =_gade ;return _fgdfce ,nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_cdea *PdfPageResources )HasExtGState (keyName _aaa .PdfObjectName )bool {_ ,_cdee :=_cdea .GetFontByName (keyName );return _cdee ;};

// HasXObjectByName checks if has XObject resource by name.
func (_eadac *PdfPage )HasXObjectByName (name _aaa .PdfObjectName )bool {_fbdd ,_dcbeb :=_eadac .Resources .XObject .(*_aaa .PdfObjectDictionary );if !_dcbeb {return false ;};if _dgebg :=_fbdd .Get (name );_dgebg !=nil {return true ;};return false ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fadb :=&PdfColorspaceSpecialSeparation {};return _fadb ;};func (_dagf *PdfReader )loadAction (_acac _aaa .PdfObject )(*PdfAction ,error ){if _ebfd ,_bfe :=_aaa .GetIndirect (_acac );_bfe {_afba ,_gdea :=_dagf .newPdfActionFromIndirectObject (_ebfd );if _gdea !=nil {return nil ,_gdea ;};return _afba ,nil ;}else if !_aaa .IsNullObject (_acac ){return nil ,_ee .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gdefd *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gdefd .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_aaa .PdfObjectInteger ;BitsPerComponent *_aaa .PdfObjectInteger ;BitsPerFlag *_aaa .PdfObjectInteger ;Decode *_aaa .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dff *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dff .UnderlyingCS ==nil {return nil ,_ee .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _dff .UnderlyingCS .ColorFromFloats (vals );};func (_fbac *PdfReader )newPdfAnnotationScreenFromDict (_bff *_aaa .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_cbac :=PdfAnnotationScreen {};_cbac .T =_bff .Get ("\u0054");_cbac .MK =_bff .Get ("\u004d\u004b");_cbac .A =_bff .Get ("\u0041");_cbac .AA =_bff .Get ("\u0041\u0041");return &_cbac ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_bfae *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_aaa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edgbf ,_dfge :=_aaa .GetNumbersAsFloat (objects );if _dfge !=nil {return nil ,_dfge ;};return _bfae .ColorFromFloats (_edgbf );};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_aaa .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _aaa .PdfObject ;A _aaa .PdfObject ;SE _aaa .PdfObject ;C _aaa .PdfObject ;F _aaa .PdfObject ;_abeef *_aaa .PdfIndirectObject ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_aaa .PdfObjectInteger ;BitsPerComponent *_aaa .PdfObjectInteger ;VerticesPerRow *_aaa .PdfObjectInteger ;Decode *_aaa .PdfObjectArray ;Function []PdfFunction ;};func (_fdcf fontCommon )isCIDFont ()bool {if _fdcf ._fbeb ==""{_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdcf );};_beffc :=false ;switch _fdcf ._fbeb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_beffc =true ;};_fe .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_beffc ,_fdcf );return _beffc ;};func (_afgea *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _afgea ._ebcac };

// Evaluate runs the function on the passed in slice and returns the results.
func (_ffcfe *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ffcfe .NumInputs {_fe .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_ee .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ffcfe ._eaaef ==nil {_cfba :=_ffcfe .processSamples ();if _cfba !=nil {return nil ,_cfba ;};};_adcd :=_ffcfe .Encode ;if _adcd ==nil {_adcd =[]float64 {};for _dafaa :=0;_dafaa < len (_ffcfe .Size );_dafaa ++{_adcd =append (_adcd ,0);_adcd =append (_adcd ,float64 (_ffcfe .Size [_dafaa ]-1));};};_aefa :=_ffcfe .Decode ;if _aefa ==nil {_aefa =_ffcfe .Range ;};_afcdf :=make ([]int ,len (x ));for _cabf :=0;_cabf < len (x );_cabf ++{_dcga :=x [_cabf ];_bbbge :=_dg .Min (_dg .Max (_dcga ,_ffcfe .Domain [2*_cabf ]),_ffcfe .Domain [2*_cabf +1]);_gfac :=_bc .LinearInterpolate (_bbbge ,_ffcfe .Domain [2*_cabf ],_ffcfe .Domain [2*_cabf +1],_adcd [2*_cabf ],_adcd [2*_cabf +1]);_ggbg :=_dg .Min (_dg .Max (_gfac ,0),float64 (_ffcfe .Size [_cabf ]-1));_febcc :=int (_dg .Floor (_ggbg +0.5));if _febcc < 0{_febcc =0;}else if _febcc > _ffcfe .Size [_cabf ]{_febcc =_ffcfe .Size [_cabf ]-1;};_afcdf [_cabf ]=_febcc ;};_afcbd :=_afcdf [0];for _ccdca :=1;_ccdca < _ffcfe .NumInputs ;_ccdca ++{_adeee :=_afcdf [_ccdca ];for _ebbe :=0;_ebbe < _ccdca ;_ebbe ++{_adeee *=_ffcfe .Size [_ebbe ];};_afcbd +=_adeee ;};_afcbd *=_ffcfe .NumOutputs ;var _gcdc []float64 ;for _gecec :=0;_gecec < _ffcfe .NumOutputs ;_gecec ++{_fdad :=_afcbd +_gecec ;if _fdad >=len (_ffcfe ._eaaef ){_fe .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_afdef :=_ffcfe ._eaaef [_fdad ];_dfcb :=_bc .LinearInterpolate (float64 (_afdef ),0,_dg .Pow (2,float64 (_ffcfe .BitsPerSample )),_aefa [2*_gecec ],_aefa [2*_gecec +1]);_fcab :=_dg .Min (_dg .Max (_dfcb ,_ffcfe .Range [2*_gecec ]),_ffcfe .Range [2*_gecec +1]);_gcdc =append (_gcdc ,_fcab );};return _gcdc ,nil ;};func _deeae (_egcad *PdfField ,_geffg _aaa .PdfObject ){for _ ,_caega :=range _egcad .Annotations {_caega .AS =_geffg ;_caega .ToPdfObject ();};};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_cgf :=NewPdfAnnotation ();_cefd :=&PdfAnnotationLink {};_cefd .PdfAnnotation =_cgf ;_cgf .SetContext (_cefd );return _cefd ;};func (_ebcdc SignatureValidationResult )String ()string {var _ffebbe _bb .Buffer ;_ffebbe .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ebcdc .Name ));if _ebcdc .Date ._dabbb > 0{_ffebbe .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ebcdc .Date .ToGoTime ().String ()));}else {_ffebbe .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ebcdc .Reason )> 0{_ffebbe .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ebcdc .Reason ));}else {_ffebbe .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_ebcdc .Location )> 0{_ffebbe .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ebcdc .Location ));}else {_ffebbe .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ebcdc .ContactInfo )> 0{_ffebbe .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ebcdc .ContactInfo ));}else {_ffebbe .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_ffebbe .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ebcdc .Fields )));if _ebcdc .IsSigned {_ffebbe .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_ffebbe .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _ebcdc .IsVerified {_ffebbe .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_ffebbe .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _ebcdc .IsTrusted {_ffebbe .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_ffebbe .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_ebcdc .GeneralizedTime .IsZero (){_ffebbe .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ebcdc .GeneralizedTime .String ()));};return _ffebbe .String ();};func (_dadba *PdfReader )newPdfAnnotationStampFromDict (_ega *_aaa .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_bcdc :=PdfAnnotationStamp {};_aebc ,_gfc :=_dadba .newPdfAnnotationMarkupFromDict (_ega );if _gfc !=nil {return nil ,_gfc ;};_bcdc .PdfAnnotationMarkup =_aebc ;_bcdc .Name =_ega .Get ("\u004e\u0061\u006d\u0065");return &_bcdc ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _aaa .PdfObject ;MK _aaa .PdfObject ;A _aaa .PdfObject ;AA _aaa .PdfObject ;BS _aaa .PdfObject ;Parent _aaa .PdfObject ;_bcg *PdfField ;_bbc bool ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_fgafg *PdfReader )loadAnnotations (_dcbf _aaa .PdfObject )([]*PdfAnnotation ,error ){_cgcga ,_cffdc :=_aaa .GetArray (_dcbf );if !_cffdc {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _dcdf []*PdfAnnotation ;for _ ,_addfd :=range _cgcga .Elements (){_addfd =_aaa .ResolveReference (_addfd );if _ ,_afbgf :=_addfd .(*_aaa .PdfObjectNull );_afbgf {continue ;};_ccdcd ,_bdcd :=_addfd .(*_aaa .PdfObjectDictionary );_abec ,_ebbeb :=_addfd .(*_aaa .PdfIndirectObject );if _bdcd {_abec =&_aaa .PdfIndirectObject {};_abec .PdfObject =_ccdcd ;}else {if !_ebbeb {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_gdbfb ,_efbbf :=_fgafg .newPdfAnnotationFromIndirectObject (_abec );if _efbbf !=nil {return nil ,_efbbf ;};switch _dbdcb :=_gdbfb .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_feceb :=range _fgafg .AcroForm .AllFields (){if _feceb ._badf ==_dbdcb .Parent {_dbdcb ._bcg =_feceb ;break ;};};};if _gdbfb !=nil {_dcdf =append (_dcdf ,_gdbfb );};};return _dcdf ,nil ;};func (_eafg *LTV )getOCSPs (_eeeg []*_be .Certificate ,_bcdec map[string ]*_be .Certificate )([][]byte ,error ){_gggc :=make ([][]byte ,0,len (_eeeg ));for _ ,_ffaca :=range _eeeg {for _ ,_cagfe :=range _ffaca .OCSPServer {if _eafg .CertClient .IsCA (_ffaca ){continue ;};_dfcee ,_gccd :=_bcdec [_ffaca .Issuer .CommonName ];if !_gccd {_fe .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_agega ,_beaga :=_eafg .OCSPClient .MakeRequest (_cagfe ,_ffaca ,_dfcee );if _beaga !=nil {_fe .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_beaga );continue ;};_gggc =append (_gggc ,_agega );};};return _gggc ,nil ;};func (_dffgc *PdfWriter )writeString (_cbaaa string ){if _dffgc ._ggdbb !=nil {return ;};_aebegb ,_dgdef :=_dffgc ._bcaeg .WriteString (_cbaaa );_dffgc ._ddec +=int64 (_aebegb );_dffgc ._ggdbb =_dgdef ;};func _cdfdee (_acgfg _aaa .PdfObject )(*PdfColorspaceICCBased ,error ){_eceb :=&PdfColorspaceICCBased {};if _ccg ,_ccccd :=_acgfg .(*_aaa .PdfIndirectObject );_ccccd {_eceb ._dcae =_ccg ;};_acgfg =_aaa .TraceToDirectObject (_acgfg );_fcbea ,_aeda :=_acgfg .(*_aaa .PdfObjectArray );if !_aeda {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fcbea .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_acgfg =_aaa .TraceToDirectObject (_fcbea .Get (0));_bcdb ,_aeda :=_acgfg .(*_aaa .PdfObjectName );if !_aeda {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_bcdb !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_acgfg =_fcbea .Get (1);_eeba ,_aeda :=_aaa .GetStream (_acgfg );if !_aeda {_fe .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_acgfg );return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_caca :=_eeba .PdfObjectDictionary ;_ggfc ,_aeda :=_caca .Get ("\u004e").(*_aaa .PdfObjectInteger );if !_aeda {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ggfc !=1&&*_ggfc !=3&&*_ggfc !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_eceb .N =int (*_ggfc );if _bfb :=_caca .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_bfb !=nil {_ddgg ,_gfgg :=NewPdfColorspaceFromPdfObject (_bfb );if _gfgg !=nil {return nil ,_gfgg ;};_eceb .Alternate =_ddgg ;};if _dagg :=_caca .Get ("\u0052\u0061\u006eg\u0065");_dagg !=nil {_dagg =_aaa .TraceToDirectObject (_dagg );_dfded ,_edfe :=_dagg .(*_aaa .PdfObjectArray );if !_edfe {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _dfded .Len ()!=2*_eceb .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_eccc ,_abga :=_dfded .GetAsFloat64Slice ();if _abga !=nil {return nil ,_abga ;};_eceb .Range =_eccc ;}else {_eceb .Range =make ([]float64 ,2*_eceb .N );for _dgg :=0;_dgg < _eceb .N ;_dgg ++{_eceb .Range [2*_dgg ]=0.0;_eceb .Range [2*_dgg +1]=1.0;};};if _cbebf :=_caca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cbebf !=nil {_gbcc ,_egfc :=_cbebf .(*_aaa .PdfObjectStream );if !_egfc {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_eceb .Metadata =_gbcc ;};_beee ,_abgac :=_aaa .DecodeStream (_eeba );if _abgac !=nil {return nil ,_abgac ;};_eceb .Data =_beee ;_eceb ._aabb =_eeba ;return _eceb ,nil ;};func (_fcaa *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_cefdd *PdfWriter )SetOptimizer (optimizer Optimizer ){_cefdd ._adfab =optimizer };

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _aaa .PdfObject ;Volume _aaa .PdfObject ;Synchronous _aaa .PdfObject ;Repeat _aaa .PdfObject ;Mix _aaa .PdfObject ;};

// GetAction returns the PDF action for the annotation link.
func (_eefd *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _eefd ._efa !=nil {return _eefd ._efa ,nil ;};if _eefd .A ==nil {return nil ,nil ;};if _eefd ._cbf ==nil {return nil ,nil ;};_bbd ,_dbda :=_eefd ._cbf .loadAction (_eefd .A );if _dbda !=nil {return nil ,_dbda ;};_eefd ._efa =_bbd ;return _eefd ._efa ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _aaa .PdfObject ;};

// SetFlag sets the flag for the field.
func (_dbfeg *PdfField )SetFlag (flag FieldFlag ){_dbfeg .Ff =_aaa .MakeInteger (int64 (flag ))};func (_aaddf fontCommon )coreString ()string {_ffbb :="";if _aaddf ._ebcac !=nil {_ffbb =_aaddf ._ebcac .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_aaddf ._fbeb ,_aaddf ._edee ,_aaddf ._eabbf ,_aaddf ._cbfg ,_aaddf ._bdae !=nil ,_aaddf .fontFlags (),_ffbb );};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _aaa .PdfObject ;Popup *PdfAnnotationPopup ;CA _aaa .PdfObject ;RC _aaa .PdfObject ;CreationDate _aaa .PdfObject ;IRT _aaa .PdfObject ;Subj _aaa .PdfObject ;RT _aaa .PdfObject ;IT _aaa .PdfObject ;ExData _aaa .PdfObject ;};func _abcc (_ceadc *_aaa .PdfObjectDictionary )(*PdfTilingPattern ,error ){_dbaab :=&PdfTilingPattern {};_facbb :=_ceadc .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _facbb ==nil {_fe .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gefea ,_deabe :=_facbb .(*_aaa .PdfObjectInteger );if !_deabe {_fe .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_facbb );return nil ,_aaa .ErrTypeError ;};_dbaab .PaintType =_gefea ;_facbb =_ceadc .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _facbb ==nil {_fe .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfaa ,_deabe :=_facbb .(*_aaa .PdfObjectInteger );if !_deabe {_fe .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_facbb );return nil ,_aaa .ErrTypeError ;};_dbaab .TilingType =_cfaa ;_facbb =_ceadc .Get ("\u0042\u0042\u006f\u0078");if _facbb ==nil {_fe .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_facbb =_aaa .TraceToDirectObject (_facbb );_egcfd ,_deabe :=_facbb .(*_aaa .PdfObjectArray );if !_deabe {_fe .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_facbb );return nil ,_aaa .ErrTypeError ;};_adcca ,_bdccf :=NewPdfRectangle (*_egcfd );if _bdccf !=nil {_fe .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bdccf );return nil ,_bdccf ;};_dbaab .BBox =_adcca ;_facbb =_ceadc .Get ("\u0058\u0053\u0074e\u0070");if _facbb ==nil {_fe .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbcd ,_bdccf :=_aaa .GetNumberAsFloat (_facbb );if _bdccf !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fbcd );return nil ,_bdccf ;};_dbaab .XStep =_aaa .MakeFloat (_fbcd );_facbb =_ceadc .Get ("\u0059\u0053\u0074e\u0070");if _facbb ==nil {_fe .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bbdfg ,_bdccf :=_aaa .GetNumberAsFloat (_facbb );if _bdccf !=nil {_fe .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bbdfg );return nil ,_bdccf ;};_dbaab .YStep =_aaa .MakeFloat (_bbdfg );_facbb =_ceadc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _facbb ==nil {_fe .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ceadc ,_deabe =_aaa .TraceToDirectObject (_facbb ).(*_aaa .PdfObjectDictionary );if !_deabe {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_facbb );};_fdeaga ,_bdccf :=NewPdfPageResourcesFromDict (_ceadc );if _bdccf !=nil {return nil ,_bdccf ;};_dbaab .Resources =_fdeaga ;if _adeaf :=_ceadc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_adeaf !=nil {_bgdd ,_dgage :=_adeaf .(*_aaa .PdfObjectArray );if !_dgage {_fe .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adeaf );return nil ,_aaa .ErrTypeError ;};_dbaab .Matrix =_bgdd ;};return _dbaab ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_adda _aaa .PdfObject ;};

// Encoder returns the font's text encoder.
func (_beaa *pdfFontSimple )Encoder ()_aa .TextEncoder {if _beaa ._eggc !=nil {return _beaa ._eggc ;};if _beaa ._fgeef !=nil {return _beaa ._fgeef ;};_aggb ,_ :=_aa .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _aggb ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _agb .ReadSeeker )(*PdfFont ,error ){_aagda ,_aaga :=_dc .ReadAll (r );if _aaga !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aaga );return nil ,_aaga ;};_aebgg ,_aaga :=_gf .TtfParse (_bb .NewReader (_aagda ));if _aaga !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_aaga );return nil ,_aaga ;};_bacab :=&pdfCIDFontType2 {fontCommon :fontCommon {_fbeb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_aaa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_geeg :=make ([]rune ,0,len (_aebgg .Chars ));for _dega :=range _aebgg .Chars {_geeg =append (_geeg ,_dega );};_ae .Slice (_geeg ,func (_adbgb ,_dccad int )bool {return _geeg [_adbgb ]< _geeg [_dccad ]});_gdcfa :=1000.0/float64 (_aebgg .UnitsPerEm );if len (_aebgg .Widths )<=0{return nil ,_ee .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_facaa :=_gdcfa *float64 (_aebgg .Widths [0]);_gegb :=make (map[rune ]int );for _ ,_eadff :=range _geeg {_cgaed :=_aebgg .Chars [_eadff ];_ggggd :=_gdcfa *float64 (_aebgg .Widths [_cgaed ]);_gegb [_eadff ]=int (_ggggd );};_bacab ._fgagc =_gegb ;_bacab .DW =_aaa .MakeInteger (int64 (_facaa ));_fdfa :=_deagb (_geeg ,_gegb ,_aebgg .Chars );_bacab .W =_aaa .MakeIndirectObject (_fdfa );_gced :=_aaa .MakeDict ();_gced .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_aaa .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gced .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_aaa .MakeString ("\u0041\u0064\u006fb\u0065"));_gced .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_aaa .MakeInteger (0));_bacab .CIDSystemInfo =_gced ;_fcef :=&PdfFontDescriptor {FontName :_aaa .MakeName (_aebgg .PostScriptName ),Ascent :_aaa .MakeFloat (_gdcfa *float64 (_aebgg .TypoAscender )),Descent :_aaa .MakeFloat (_gdcfa *float64 (_aebgg .TypoDescender )),CapHeight :_aaa .MakeFloat (_gdcfa *float64 (_aebgg .CapHeight )),FontBBox :_aaa .MakeArrayFromFloats ([]float64 {_gdcfa *float64 (_aebgg .Xmin ),_gdcfa *float64 (_aebgg .Ymin ),_gdcfa *float64 (_aebgg .Xmax ),_gdcfa *float64 (_aebgg .Ymax )}),ItalicAngle :_aaa .MakeFloat (_aebgg .ItalicAngle ),MissingWidth :_aaa .MakeFloat (_gdcfa *float64 (_aebgg .Widths [0]))};_eadec ,_aaga :=_aaa .MakeStream (_aagda ,_aaa .NewFlateEncoder ());if _aaga !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aaga );return nil ,_aaga ;};_eadec .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aaa .MakeInteger (int64 (len (_aagda ))));_fcef .FontFile2 =_eadec ;if _aebgg .Bold {_fcef .StemV =_aaa .MakeInteger (120);}else {_fcef .StemV =_aaa .MakeInteger (70);};_fcaggb :=_dbbcf ;if _aebgg .IsFixedPitch {_fcaggb |=_geefc ;};if _aebgg .ItalicAngle !=0{_fcaggb |=_edgc ;};_fcef .Flags =_aaa .MakeInteger (int64 (_fcaggb ));_bacab ._edee =_aebgg .PostScriptName ;_bacab ._ebcac =_fcef ;_dcbg :=pdfFontType0 {fontCommon :fontCommon {_fbeb :"\u0054\u0079\u0070e\u0030",_edee :_aebgg .PostScriptName },DescendantFont :&PdfFont {_bbdc :_bacab },Encoding :_aaa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_gedd :_aebgg .NewEncoder ()};if len (_aebgg .Chars )> 0{_becf :=make (map[_eed .CharCode ]rune ,len (_aebgg .Chars ));for _gdde ,_geff :=range _aebgg .Chars {_aafc :=_eed .CharCode (_geff );if _ffgg ,_cbcd :=_becf [_aafc ];!_cbcd ||(_cbcd &&_ffgg > _gdde ){_becf [_aafc ]=_gdde ;};};_dcbg ._fgcf =_eed .NewToUnicodeCMap (_becf );};_efbgb :=PdfFont {_bbdc :&_dcbg };return &_efbgb ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _aaa .PdfObject ;FontFamily _aaa .PdfObject ;FontStretch _aaa .PdfObject ;FontWeight _aaa .PdfObject ;Flags _aaa .PdfObject ;FontBBox _aaa .PdfObject ;ItalicAngle _aaa .PdfObject ;Ascent _aaa .PdfObject ;Descent _aaa .PdfObject ;Leading _aaa .PdfObject ;CapHeight _aaa .PdfObject ;XHeight _aaa .PdfObject ;StemV _aaa .PdfObject ;StemH _aaa .PdfObject ;AvgWidth _aaa .PdfObject ;MaxWidth _aaa .PdfObject ;MissingWidth _aaa .PdfObject ;FontFile _aaa .PdfObject ;FontFile2 _aaa .PdfObject ;FontFile3 _aaa .PdfObject ;CharSet _aaa .PdfObject ;_gecbf int ;_bffg float64 ;*fontFile ;_gbebb *_gf .TtfType ;

// Additional entries for CIDFonts
Style _aaa .PdfObject ;Lang _aaa .PdfObject ;FD _aaa .PdfObject ;CIDSet _aaa .PdfObject ;_fgcag *_aaa .PdfIndirectObject ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ffaa *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_geec *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cegdg :=NewPdfOutlineItem ();_cegdg .Title =_aaa .MakeEncodedString (_geec .Title ,true );_cegdg .Dest =_geec .Dest .ToPdfObject ();var _abcdg []*PdfOutlineItem ;var _ggfcd int64 ;var _bddad *PdfOutlineItem ;for _ ,_cgfaa :=range _geec .Entries {_ffbfa ,_cecda :=_cgfaa .ToPdfOutlineItem ();_ffbfa .Parent =&_cegdg .PdfOutlineTreeNode ;if _bddad !=nil {_bddad .Next =&_ffbfa .PdfOutlineTreeNode ;_ffbfa .Prev =&_bddad .PdfOutlineTreeNode ;};_abcdg =append (_abcdg ,_ffbfa );_ggfcd +=_cecda ;_bddad =_ffbfa ;};_eebba :=len (_abcdg );_ggfcd +=int64 (_eebba );if _eebba > 0{_cegdg .First =&_abcdg [0].PdfOutlineTreeNode ;_cegdg .Last =&_abcdg [_eebba -1].PdfOutlineTreeNode ;_cegdg .Count =&_ggfcd ;};return _cegdg ,_ggfcd ;};func (_cdeee *PdfReader )newPdfSignatureFromIndirect (_egcee *_aaa .PdfIndirectObject )(*PdfSignature ,error ){_bdgaf ,_ffccg :=_egcee .PdfObject .(*_aaa .PdfObjectDictionary );if !_ffccg {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _cfafc ,_eded :=_cdeee ._egba .GetModelFromPrimitive (_egcee ).(*PdfSignature );_eded {return _cfafc ,nil ;};_eadaa :=&PdfSignature {};_eadaa ._ddbdc =_egcee ;_eadaa .Type ,_ =_aaa .GetName (_bdgaf .Get ("\u0054\u0079\u0070\u0065"));_eadaa .Filter ,_ffccg =_aaa .GetName (_bdgaf .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_ffccg {_fe .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_eadaa .SubFilter ,_ =_aaa .GetName (_bdgaf .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_eadaa .Contents ,_ffccg =_aaa .GetString (_bdgaf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_ffccg {_fe .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_eadaa .Cert =_bdgaf .Get ("\u0043\u0065\u0072\u0074");_eadaa .ByteRange ,_ =_aaa .GetArray (_bdgaf .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_eadaa .Reference ,_ =_aaa .GetArray (_bdgaf .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_eadaa .Changes ,_ =_aaa .GetArray (_bdgaf .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_eadaa .Name ,_ =_aaa .GetString (_bdgaf .Get ("\u004e\u0061\u006d\u0065"));_eadaa .M ,_ =_aaa .GetString (_bdgaf .Get ("\u004d"));_eadaa .Location ,_ =_aaa .GetString (_bdgaf .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_eadaa .Reason ,_ =_aaa .GetString (_bdgaf .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_eadaa .ContactInfo ,_ =_aaa .GetString (_bdgaf .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_eadaa .R ,_ =_aaa .GetInt (_bdgaf .Get ("\u0052"));_eadaa .V ,_ =_aaa .GetInt (_bdgaf .Get ("\u0056"));_eadaa .PropBuild ,_ =_aaa .GetDict (_bdgaf .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_eadaa .PropAuthTime ,_ =_aaa .GetInt (_bdgaf .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_eadaa .PropAuthType ,_ =_aaa .GetName (_bdgaf .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _eadaa ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_eebce *PdfAcroForm )GetContainingPdfObject ()_aaa .PdfObject {return _eebce ._efab };

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_ggbc :=&PdfAppender {_bcgca :reader ._ggbee ,Reader :reader ,_fgce :reader ._gcee ,_cfgb :reader ._dabcd };_dcgd ,_fegac :=_ggbc ._bcgca .Seek (0,_agb .SeekEnd );if _fegac !=nil {return nil ,_fegac ;};_ggbc ._gfab =_dcgd ;if _ ,_fegac =_ggbc ._bcgca .Seek (0,_agb .SeekStart );_fegac !=nil {return nil ,_fegac ;};_ggbc ._efcg ,_fegac =NewPdfReader (_ggbc ._bcgca );if _fegac !=nil {return nil ,_fegac ;};for _ ,_fgfe :=range _ggbc .Reader .GetObjectNums (){if _ggbc ._acda < _fgfe {_ggbc ._acda =_fgfe ;};};_ggbc ._defe =_ggbc ._fgce .GetXrefTable ();_ggbc ._edcce =_ggbc ._fgce .GetXrefOffset ();_ggbc ._ebdea =append (_ggbc ._ebdea ,_ggbc ._efcg .PageList ...);_ggbc ._eede =make (map[_aaa .PdfObject ]struct{});_ggbc ._baee =make (map[_aaa .PdfObject ]int64 );_ggbc ._bagd =make (map[_aaa .PdfObject ]struct{});_ggbc ._abca =_ggbc ._efcg .AcroForm ;_ggbc ._bad =_ggbc ._efcg .DSS ;return _ggbc ,nil ;};func (_fggd *PdfAppender )mergeResources (_bdb ,_aggdb _aaa .PdfObject ,_fegc map[_aaa .PdfObjectName ]_aaa .PdfObjectName )_aaa .PdfObject {if _aggdb ==nil &&_bdb ==nil {return nil ;};if _aggdb ==nil {return _bdb ;};_bdaa ,_gccb :=_aaa .GetDict (_aggdb );if !_gccb {return _bdb ;};if _bdb ==nil {_cdgc :=_aaa .MakeDict ();_cdgc .Merge (_bdaa );return _aggdb ;};_aaeb ,_gccb :=_aaa .GetDict (_bdb );if !_gccb {_fe .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_aaeb =_aaa .MakeDict ();};for _ ,_deafb :=range _bdaa .Keys (){if _ebca ,_decgg :=_fegc [_deafb ];_decgg {_aaeb .Set (_ebca ,_bdaa .Get (_deafb ));}else {_aaeb .Set (_deafb ,_bdaa .Get (_deafb ));};};return _aaeb ;};func _gbgbca (_fcggag *_aaa .PdfObjectArray )(float64 ,error ){_gbfaf ,_dbedgb :=_fcggag .ToFloat64Array ();if _dbedgb !=nil {_fe .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcggag ,_dbedgb );};switch len (_gbfaf ){case 1:return _gbfaf [0],nil ;case 3:_gbggef :=PdfColorspaceDeviceRGB {};_deeb ,_gcgba :=_gbggef .ColorFromFloats (_gbfaf );if _gcgba !=nil {return 0.0,_gcgba ;};return _deeb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_aafaee :=PdfColorspaceDeviceCMYK {};_adebg ,_ddagf :=_aafaee .ColorFromFloats (_gbfaf );if _ddagf !=nil {return 0.0,_ddagf ;};_cgcda ,_ddagf :=_aafaee .ColorToRGB (_adebg .(*PdfColorDeviceCMYK ));if _ddagf !=nil {return 0.0,_ddagf ;};return _cgcda .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_dbedgb =_ee .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_fe .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcggag ,_dbedgb );return 0.0,_dbedgb ;};func _fedcf (_deccf string )map[string ]string {_cafeb :=_ecdfb .Split (_deccf ,-1);_cfff :=map[string ]string {};for _ ,_fecdc :=range _cafeb {_affg :=_cgegf .FindStringSubmatch (_fecdc );if _affg ==nil {continue ;};_fbbc ,_gdad :=_affg [1],_affg [2];_cfff [_fbbc ]=_gdad ;};return _cfff ;};

// Register registers (caches) a model to primitive object relationship.
func (_caea *modelManager )Register (primitive _aaa .PdfObject ,model PdfModel ){_caea ._dggf [model ]=primitive ;_caea ._adbdb [primitive ]=model ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_adeba *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_adeba ._gfadad =colorspace ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_bbba :=&PdfColorspaceCalGray {};_bbba .BlackPoint =[]float64 {0.0,0.0,0.0};_bbba .Gamma =1;return _bbba ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_aaa .PdfObjectArray ;TI *_aaa .PdfObjectInteger ;I *_aaa .PdfObjectArray ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_edda *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbgg :=vals [0];if _bbgg < 0.0||_bbgg > 1.0{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggbdd :=NewPdfColorCalGray (_bbgg );return _ggbdd ,nil ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_fedce *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_cgedc :=_fedce .GetContentStreamObjs ();wrapContents =wrapContents &&len (_cgedc )> 0;_edfac :=_aaa .NewFlateEncoder ();_cgbe :=_aaa .MakeArray ();if wrapContents {_agabg ,_bbbbg :=_aaa .MakeStream ([]byte ("\u0071\u000a"),_edfac );if _bbbbg !=nil {return _bbbbg ;};_cgbe .Append (_agabg );};_cgbe .Append (_cgedc ...);if wrapContents {_ffbcf ,_gfea :=_aaa .MakeStream ([]byte ("\u000a\u0051\u000a"),_edfac );if _gfea !=nil {return _gfea ;};_cgbe .Append (_ffbcf );};_dffdb ,_aaag :=_aaa .MakeStream (cs ,_edfac );if _aaag !=nil {return _aaag ;};_cgbe .Append (_dffdb );_fedce .Contents =_cgbe ;return nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _agb .ReadSeeker )(*PdfFont ,error ){const _aagcb =_aa .CharCode (32);const _efcee =_aa .CharCode (255);_ebefb ,_efee :=_dc .ReadAll (r );if _efee !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_efee );return nil ,_efee ;};_efgcg ,_efee :=_gf .TtfParse (_bb .NewReader (_ebefb ));if _efee !=nil {_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_efee );return nil ,_efee ;};_debg :=&pdfFontSimple {_dgdff :make (map[_aa .CharCode ]float64 ),fontCommon :fontCommon {_fbeb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_debg ._eggc =_aa .NewWinAnsiEncoder ();_debg ._edee =_efgcg .PostScriptName ;_debg .FirstChar =_aaa .MakeInteger (int64 (_aagcb ));_debg .LastChar =_aaa .MakeInteger (int64 (_efcee ));_dbdae :=1000.0/float64 (_efgcg .UnitsPerEm );if len (_efgcg .Widths )<=0{return nil ,_ee .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_dgac :=_dbdae *float64 (_efgcg .Widths [0]);_dgcfg :=make ([]float64 ,0,_efcee -_aagcb +1);for _edcdf :=_aagcb ;_edcdf <=_efcee ;_edcdf ++{_agefg ,_ddce :=_debg .Encoder ().CharcodeToRune (_edcdf );if !_ddce {_fe .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_edcdf );_dgcfg =append (_dgcfg ,_dgac );continue ;};_bcag ,_bfec :=_efgcg .Chars [_agefg ];if !_bfec {_fe .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dgcfg =append (_dgcfg ,_dgac );continue ;};_cbfdc :=_dbdae *float64 (_efgcg .Widths [_bcag ]);_dgcfg =append (_dgcfg ,_cbfdc );};_debg .Widths =_aaa .MakeIndirectObject (_aaa .MakeArrayFromFloats (_dgcfg ));if len (_dgcfg )< int (_efcee -_aagcb +1){_fe .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dgcfg ),255-32+1);return nil ,_aaa .ErrRangeError ;};for _cege :=_aagcb ;_cege <=_efcee ;_cege ++{_debg ._dgdff [_cege ]=_dgcfg [_cege -_aagcb ];};_debg .Encoding =_aaa .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_egced :=&PdfFontDescriptor {};_egced .FontName =_aaa .MakeName (_efgcg .PostScriptName );_egced .Ascent =_aaa .MakeFloat (_dbdae *float64 (_efgcg .TypoAscender ));_egced .Descent =_aaa .MakeFloat (_dbdae *float64 (_efgcg .TypoDescender ));_egced .CapHeight =_aaa .MakeFloat (_dbdae *float64 (_efgcg .CapHeight ));_egced .FontBBox =_aaa .MakeArrayFromFloats ([]float64 {_dbdae *float64 (_efgcg .Xmin ),_dbdae *float64 (_efgcg .Ymin ),_dbdae *float64 (_efgcg .Xmax ),_dbdae *float64 (_efgcg .Ymax )});_egced .ItalicAngle =_aaa .MakeFloat (_efgcg .ItalicAngle );_egced .MissingWidth =_aaa .MakeFloat (_dbdae *float64 (_efgcg .Widths [0]));_adfe ,_efee :=_aaa .MakeStream (_ebefb ,_aaa .NewFlateEncoder ());if _efee !=nil {_fe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_efee );return nil ,_efee ;};_adfe .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aaa .MakeInteger (int64 (len (_ebefb ))));_egced .FontFile2 =_adfe ;if _efgcg .Bold {_egced .StemV =_aaa .MakeInteger (120);}else {_egced .StemV =_aaa .MakeInteger (70);};_gfcdaa :=_cedee ;if _efgcg .IsFixedPitch {_gfcdaa |=_geefc ;};if _efgcg .ItalicAngle !=0{_gfcdaa |=_edgc ;};_egced .Flags =_aaa .MakeInteger (int64 (_gfcdaa ));_debg ._ebcac =_egced ;_bgdgg :=&PdfFont {_bbdc :_debg };return _bgdgg ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_cebac *PdfPattern )GetContainingPdfObject ()_aaa .PdfObject {return _cebac ._eabbc };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_abed :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_abed ;};