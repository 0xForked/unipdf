//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_fa "bufio";_df "bytes";_e "crypto/rand";_fb "crypto/sha1";_g "crypto/x509";_c "encoding/binary";_d "encoding/hex";_dd "errors";_b "fmt";_cbb "github.com/unidoc/pkcs7";_ag "github.com/unidoc/unipdf/v3/common";_gb "github.com/unidoc/unipdf/v3/core";
_ad "github.com/unidoc/unipdf/v3/core/security";_gd "github.com/unidoc/unipdf/v3/core/security/crypt";_ba "github.com/unidoc/unipdf/v3/internal/cmap";_aag "github.com/unidoc/unipdf/v3/internal/imageutil";_dc "github.com/unidoc/unipdf/v3/internal/license";
_bad "github.com/unidoc/unipdf/v3/internal/sampling";_eaf "github.com/unidoc/unipdf/v3/internal/textencoding";_ed "github.com/unidoc/unipdf/v3/model/internal/fonts";_aff "github.com/unidoc/unipdf/v3/model/sigutil";_ea "github.com/unidoc/unipdf/v3/ps";_cbbc "github.com/unidoc/unitype";
_gf "golang.org/x/xerrors";_be "image";_ab "image/color";_ "image/gif";_ "image/png";_fg "io";_ae "io/ioutil";_ga "math";_fce "math/rand";_aea "os";_bd "regexp";_cb "sort";_cg "strconv";_fcf "strings";_f "sync";_fag "time";_fc "unicode";_ff "unicode/utf8";
);

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_gb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_aebe *_gb .PdfIndirectObject ;};func (_bcege *LTV )validateSig (_dcgcc *PdfSignature )error {if _dcgcc ==nil ||_dcgcc .Contents ==nil ||len (_dcgcc .Contents .Bytes ())==0{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_dcgcc );
};return nil ;};func (_fcfe *PdfReader )newPdfAnnotationHighlightFromDict (_ggb *_gb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fdba :=PdfAnnotationHighlight {};_abcb ,_egff :=_fcfe .newPdfAnnotationMarkupFromDict (_ggb );if _egff !=nil {return nil ,_egff ;
};_fdba .PdfAnnotationMarkup =_abcb ;_fdba .QuadPoints =_ggb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fdba ,nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ebdgb *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ebdgb ._gefdd .(*PdfTilingPattern );};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ebccf *PdfPageResources )GetPatternByName (keyName _gb .PdfObjectName )(*PdfPattern ,bool ){if _ebccf .Pattern ==nil {return nil ,false ;};_fdagb ,_ggecd :=_gb .TraceToDirectObject (_ebccf .Pattern ).(*_gb .PdfObjectDictionary );if !_ggecd {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebccf .Pattern );
return nil ,false ;};if _dgbea :=_fdagb .Get (keyName );_dgbea !=nil {_dfcgf ,_bbdg :=_eabbc (_dgbea );if _bbdg !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bbdg );
return nil ,false ;};return _dfcgf ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_efcag *PdfAnnotationScreen )ToPdfObject ()_gb .PdfObject {_efcag .PdfAnnotation .ToPdfObject ();_bbfc :=_efcag ._gbac ;_eabg :=_bbfc .PdfObject .(*_gb .PdfObjectDictionary );_eabg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_eabg .SetIfNotNil ("\u0054",_efcag .T );_eabg .SetIfNotNil ("\u004d\u004b",_efcag .MK );_eabg .SetIfNotNil ("\u0041",_efcag .A );_eabg .SetIfNotNil ("\u0041\u0041",_efcag .AA );return _bbfc ;};

// ToInteger convert to an integer format.
func (_ceaeg *PdfColorLab )ToInteger (bits int )[3]uint32 {_ccef :=_ga .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ccef *_ceaeg .L ()),uint32 (_ccef *_ceaeg .A ()),uint32 (_ccef *_ceaeg .B ())};};func (_bgg *PdfReader )newPdfActionThreadFromDict (_dfa *_gb .PdfObjectDictionary )(*PdfActionThread ,error ){_gbg ,_bdcd :=_dbf (_dfa .Get ("\u0046"));
if _bdcd !=nil {return nil ,_bdcd ;};return &PdfActionThread {D :_dfa .Get ("\u0044"),B :_dfa .Get ("\u0042"),F :_gbg },nil ;};func (_dgaae fontCommon )isCIDFont ()bool {if _dgaae ._abec ==""{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgaae );
};_fbcb :=false ;switch _dgaae ._abec {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fbcb =true ;};_ag .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fbcb ,_dgaae );
return _fbcb ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_dfc *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ceea ,_bdgcb :=color .(*PdfColorDeviceCMYK );if !_bdgcb {_ag .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_deda :=_ceea .C ();_gfgd :=_ceea .M ();_dbgbc :=_ceea .Y ();_ccbfg :=_ceea .K ();_deda =_deda *(1-_ccbfg )+_ccbfg ;_gfgd =_gfgd *(1-_ccbfg )+_ccbfg ;
_dbgbc =_dbgbc *(1-_ccbfg )+_ccbfg ;_eadeb :=1-_deda ;_abag :=1-_gfgd ;_cfeb :=1-_dbgbc ;return NewPdfColorDeviceRGB (_eadeb ,_abag ,_cfeb ),nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_bgbbe *PdfFilespec )getDict ()*_gb .PdfObjectDictionary {if _cade ,_dcaed :=_bgbbe ._fcaag .(*_gb .PdfIndirectObject );_dcaed {_daeac ,_aaec :=_cade .PdfObject .(*_gb .PdfObjectDictionary );if !_aaec {return nil ;
};return _daeac ;}else if _eecec ,_fdgab :=_bgbbe ._fcaag .(*_gb .PdfObjectDictionary );_fdgab {return _eecec ;}else {_ag .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_bgbbe ._fcaag );
return nil ;};};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _gb .PdfObject ;V _gb .PdfObject ;};func (_afad *pdfCIDFontType0 )baseFields ()*fontCommon {return &_afad .fontCommon };func _ecbbb ()string {return _ag .Version };

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_adfd *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _gb .PdfObject ;};

// Height returns the height of `rect`.
func (_fdbee *PdfRectangle )Height ()float64 {return _ga .Abs (_fdbee .Ury -_fdbee .Lly )};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_aeffe :=PdfColorDeviceRGB {r ,g ,b };return &_aeffe ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_bggc *PdfOutlineTreeNode )ToPdfObject ()_gb .PdfObject {return _bggc .GetContext ().ToPdfObject ()};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_aca :=NewPdfAnnotation ();_fbd :=&PdfAnnotationSound {};_fbd .PdfAnnotation =_aca ;_fbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aca .SetContext (_fbd );return _fbd ;};func (_bgef *PdfReader )newPdfActionGotoRFromDict (_efb *_gb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_cba ,_dggd :=_dbf (_efb .Get ("\u0046"));
if _dggd !=nil {return nil ,_dggd ;};return &PdfActionGoToR {D :_efb .Get ("\u0044"),NewWindow :_efb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cba },nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_egcc *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_egcc .HiVal )};};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _gb .PdfObject ;B _gb .PdfObject ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_ddfaa _fg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_bgbae _be .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_fage _be .Image )(*Image ,error );

// Compress an image.
Compress (_dgccd *Image ,_bdefg int64 )(*Image ,error );};func (_gceb *pdfFontType0 )bytesToCharcodes (_bgdb []byte )([]_eaf .CharCode ,bool ){if _gceb ._acabd ==nil {return nil ,false ;};_fefa ,_bbfd :=_gceb ._acabd .BytesToCharcodes (_bgdb );if !_bbfd {return nil ,false ;
};_defc :=make ([]_eaf .CharCode ,len (_fefa ));for _cgbg ,_gebb :=range _fefa {_defc [_cgbg ]=_eaf .CharCode (_gebb );};return _defc ,true ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_fdce :=NewPdfAnnotation ();_agfa :=&PdfAnnotationStamp {};_agfa .PdfAnnotation =_fdce ;_agfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdce .SetContext (_agfa );return _agfa ;};

// ToPdfObject implements interface PdfModel.
func (_faga *PdfActionSubmitForm )ToPdfObject ()_gb .PdfObject {_faga .PdfAction .ToPdfObject ();_dec :=_faga ._gae ;_aagg :=_dec .PdfObject .(*_gb .PdfObjectDictionary );_aagg .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeSubmitForm )));if _faga .F !=nil {_aagg .Set ("\u0046",_faga .F .ToPdfObject ());
};_aagg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_faga .Fields );_aagg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_faga .Flags );return _dec ;};

// CustomKeys returns all custom info keys as list.
func (_edgfd *PdfInfo )CustomKeys ()[]string {if _edgfd ._dfee ==nil {return nil ;};_aagfb :=make ([]string ,len (_edgfd ._dfee .Keys ()));for _ ,_dge :=range _edgfd ._dfee .Keys (){_aagfb =append (_aagfb ,_dge .String ());};return _aagfb ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dccea *PdfFieldText )ToPdfObject ()_gb .PdfObject {_dccea .PdfField .ToPdfObject ();_efea :=_dccea ._feag ;_caae :=_efea .PdfObject .(*_gb .PdfObjectDictionary );_caae .Set ("\u0046\u0054",_gb .MakeName ("\u0054\u0078"));if _dccea .DA !=nil {_caae .Set ("\u0044\u0041",_dccea .DA );
};if _dccea .Q !=nil {_caae .Set ("\u0051",_dccea .Q );};if _dccea .DS !=nil {_caae .Set ("\u0044\u0053",_dccea .DS );};if _dccea .RV !=nil {_caae .Set ("\u0052\u0056",_dccea .RV );};if _dccea .MaxLen !=nil {_caae .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dccea .MaxLen );
};return _efea ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ToPdfObject implements interface PdfModel.
func (_ddad *PdfAnnotationLine )ToPdfObject ()_gb .PdfObject {_ddad .PdfAnnotation .ToPdfObject ();_cdg :=_ddad ._gbac ;_cbgd :=_cdg .PdfObject .(*_gb .PdfObjectDictionary );_ddad .PdfAnnotationMarkup .appendToPdfDictionary (_cbgd );_cbgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u004c\u0069\u006e\u0065"));
_cbgd .SetIfNotNil ("\u004c",_ddad .L );_cbgd .SetIfNotNil ("\u0042\u0053",_ddad .BS );_cbgd .SetIfNotNil ("\u004c\u0045",_ddad .LE );_cbgd .SetIfNotNil ("\u0049\u0043",_ddad .IC );_cbgd .SetIfNotNil ("\u004c\u004c",_ddad .LL );_cbgd .SetIfNotNil ("\u004c\u004c\u0045",_ddad .LLE );
_cbgd .SetIfNotNil ("\u0043\u0061\u0070",_ddad .Cap );_cbgd .SetIfNotNil ("\u0049\u0054",_ddad .IT );_cbgd .SetIfNotNil ("\u004c\u004c\u004f",_ddad .LLO );_cbgd .SetIfNotNil ("\u0043\u0050",_ddad .CP );_cbgd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ddad .Measure );
_cbgd .SetIfNotNil ("\u0043\u004f",_ddad .CO );return _cdg ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_cdef _fg .ReadSeeker ;_fgeb *_gb .PdfParser ;_cbaab *PdfReader ;Reader *PdfReader ;_bbgcg []*PdfPage ;_bdf *PdfAcroForm ;_bggg *DSS ;_fgea _gb .XrefTable ;_cdbf int64 ;_fead int ;_caaf []_gb .PdfObject ;_eeed map[_gb .PdfObject ]struct{};
_bdega map[_gb .PdfObject ]int64 ;_bafa map[_gb .PdfObject ]struct{};_egce map[_gb .PdfObject ]struct{};_ggg int64 ;_dba bool ;};

// SetImage updates XObject Image with new image data.
func (_agece *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_agece .Filter .UpdateParams (img .GetParamsDict ());_caedf ,_cbbaad :=_agece .Filter .EncodeBytes (img .Data );if _cbbaad !=nil {return _cbbaad ;};_agece .Stream =_caedf ;_ebbaa :=img .Width ;
_agece .Width =&_ebbaa ;_bfebd :=img .Height ;_agece .Height =&_bfebd ;_bebfff :=img .BitsPerComponent ;_agece .BitsPerComponent =&_bebfff ;if cs ==nil {if img .ColorComponents ==1{_agece .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_agece .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_agece .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _dd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_agece .ColorSpace =cs ;};return nil ;
};func _dgage (_babgf *_gb .PdfObjectDictionary ,_gfagf *fontCommon ,_aafac _eaf .TextEncoder )(*pdfFontSimple ,error ){_gfgbc :=_bcba (_gfagf );_gfgbc ._eafce =_aafac ;if _aafac ==nil {_cegf :=_babgf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _cegf ==nil {_cegf =_gb .MakeInteger (0);};_gfgbc .FirstChar =_cegf ;_afcfc ,_gbeeg :=_gb .GetIntVal (_cegf );if !_gbeeg {_ag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cegf );
return nil ,_gb .ErrTypeError ;};_dabfa :=_eaf .CharCode (_afcfc );_cegf =_babgf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cegf ==nil {_cegf =_gb .MakeInteger (255);};_gfgbc .LastChar =_cegf ;_afcfc ,_gbeeg =_gb .GetIntVal (_cegf );
if !_gbeeg {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cegf );return nil ,_gb .ErrTypeError ;
};_ebaee :=_eaf .CharCode (_afcfc );_gfgbc ._ggdff =make (map[_eaf .CharCode ]float64 );_cegf =_babgf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cegf !=nil {_gfgbc .Widths =_cegf ;_ffcae ,_ddbgc :=_gb .GetArray (_cegf );if !_ddbgc {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cegf );
return nil ,_gb .ErrTypeError ;};_cdeced ,_fbeg :=_ffcae .ToFloat64Array ();if _fbeg !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fbeg ;};if len (_cdeced )!=int (_ebaee -_dabfa +1){_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ebaee -_dabfa +1,len (_cdeced ));
return nil ,_gb .ErrRangeError ;};for _bgcf ,_ffgdb :=range _cdeced {_gfgbc ._ggdff [_dabfa +_eaf .CharCode (_bgcf )]=_ffgdb ;};};};_gfgbc .Encoding =_gb .TraceToDirectObject (_babgf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _gfgbc ,nil ;
};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_faee pdfFont };func (_bbad *LTV )getOCSPs (_cbcfa []*_g .Certificate ,_afgc map[string ]*_g .Certificate )([][]byte ,error ){_acdbb :=make ([][]byte ,0,len (_cbcfa ));for _ ,_bbffec :=range _cbcfa {for _ ,_fbecf :=range _bbffec .OCSPServer {if _bbad .CertClient .IsCA (_bbffec ){continue ;
};_eggg ,_bggbg :=_afgc [_bbffec .Issuer .CommonName ];if !_bggbg {_ag .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_acgdb ,_ffbgb :=_bbad .OCSPClient .MakeRequest (_fbecf ,_bbffec ,_eggg );if _ffbgb !=nil {_ag .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_ffbgb );
continue ;};_acdbb =append (_acdbb ,_acgdb );};};return _acdbb ,nil ;};func (_ecfcb *PdfReader )flattenFieldsWithOpts (_ecdb bool ,_ddce FieldAppearanceGenerator ,_dbcdd *FieldFlattenOpts )error {if _dbcdd ==nil {_dbcdd =&FieldFlattenOpts {};};var _ebae bool ;
_bfccg :=map[*PdfAnnotation ]bool {};{var _ffbaf []*PdfField ;_fcae :=_ecfcb .AcroForm ;if _fcae !=nil {if _dbcdd .FilterFunc !=nil {_ffbaf =_fcae .filteredFields (_dbcdd .FilterFunc ,true );_ebae =_fcae .Fields !=nil &&len (*_fcae .Fields )> 0;}else {_ffbaf =_fcae .AllFields ();
};};for _ ,_dcbc :=range _ffbaf {for _ ,_fabaa :=range _dcbc .Annotations {_bfccg [_fabaa .PdfAnnotation ]=_dcbc .V !=nil ;if _ddce !=nil {_cbbbc ,_dbgg :=_ddce .GenerateAppearanceDict (_fcae ,_dcbc ,_fabaa );if _dbgg !=nil {return _dbgg ;};_fabaa .AP =_cbbbc ;
};};};};if _ecdb {for _ ,_daddc :=range _ecfcb .PageList {_fcbd ,_cdfgg :=_daddc .GetAnnotations ();if _cdfgg !=nil {return _cdfgg ;};for _ ,_fbdfe :=range _fcbd {_bfccg [_fbdfe ]=true ;};};};for _ ,_bafg :=range _ecfcb .PageList {var _aege []*PdfAnnotation ;
if _ddce !=nil {if _eecf :=_ddce .WrapContentStream (_bafg );_eecf !=nil {return _eecf ;};};_bddd ,_cbcf :=_bafg .GetAnnotations ();if _cbcf !=nil {return _cbcf ;};for _ ,_fdcb :=range _bddd {_eagd ,_ebeae :=_bfccg [_fdcb ];if !_ebeae &&_dbcdd .AnnotFilterFunc !=nil {if _ ,_ggff :=_fdcb .GetContext ().(*PdfAnnotationWidget );
!_ggff {_ebeae =_dbcdd .AnnotFilterFunc (_fdcb );};};if !_ebeae {_aege =append (_aege ,_fdcb );continue ;};switch _fdcb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_edgdb ,_acgb ,_ddgbc :=_ecegb (_fdcb );if _ddgbc !=nil {if !_eagd {_ag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_ddgbc );
continue ;};if _edgdb ==nil {continue ;};_aggb :=_bafg .Resources .GenerateXObjectName ();_bafg .Resources .SetXObjectFormByName (_aggb ,_edgdb );_aabee :=_ga .Min (_acgb .Llx ,_acgb .Urx );_gbbc :=_ga .Min (_acgb .Lly ,_acgb .Ury );var _edbea []string ;
_edbea =append (_edbea ,"\u0071");_edbea =append (_edbea ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_aabee ,_gbbc ));
_edbea =append (_edbea ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_aggb .String ()));_edbea =append (_edbea ,"\u0051");_bacde :=_fcf .Join (_edbea ,"\u000a");_ddgbc =_bafg .AppendContentStream (_bacde );if _ddgbc !=nil {return _ddgbc ;};if _edgdb .Resources !=nil {_gfec ,_aadea :=_gb .GetDict (_edgdb .Resources .Font );
if _aadea {for _ ,_gcfd :=range _gfec .Keys (){if !_bafg .Resources .HasFontByName (_gcfd ){_bafg .Resources .SetFontByName (_gcfd ,_gfec .Get (_gcfd ));};};};};};if len (_aege )> 0{_bafg ._gccef =_aege ;}else {_bafg ._gccef =[]*PdfAnnotation {};};};if !_ebae {_ecfcb .AcroForm =nil ;
};return nil ;};

// GetBorderWidth returns the border style's width.
func (_eec *PdfBorderStyle )GetBorderWidth ()float64 {if _eec .W ==nil {return 1;};return *_eec .W ;};func _afbd (_eccbc *_gb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_gbggg :=PdfShadingType2 {};_eefcd :=_eccbc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _eefcd ==nil {_ag .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_babba ,_fdaac :=_eefcd .(*_gb .PdfObjectArray );if !_fdaac {_ag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eefcd );return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _babba .Len ()!=4{_ag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_babba .Len ());return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_gbggg .Coords =_babba ;if _ggfgf :=_eccbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggfgf !=nil {_ggfgf =_gb .TraceToDirectObject (_ggfgf );_baccd ,_bgdbe :=_ggfgf .(*_gb .PdfObjectArray );if !_bgdbe {_ag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggfgf );
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbggg .Domain =_baccd ;};_eefcd =_eccbc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eefcd ==nil {_ag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gbggg .Function =[]PdfFunction {};if _aedff ,_bgce :=_eefcd .(*_gb .PdfObjectArray );_bgce {for _ ,_efcg :=range _aedff .Elements (){_eeae ,_ffefd :=_deee (_efcg );if _ffefd !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffefd );
return nil ,_ffefd ;};_gbggg .Function =append (_gbggg .Function ,_eeae );};}else {_bcbed ,_gaaacd :=_deee (_eefcd );if _gaaacd !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gaaacd );
return nil ,_gaaacd ;};_gbggg .Function =append (_gbggg .Function ,_bcbed );};if _gaga :=_eccbc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gaga !=nil {_gaga =_gb .TraceToDirectObject (_gaga );_bddgb ,_cbbff :=_gaga .(*_gb .PdfObjectArray );if !_cbbff {_ag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaga );
return nil ,_gb .ErrTypeError ;};if _bddgb .Len ()!=2{_ag .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bddgb .Len ());return nil ,ErrInvalidAttribute ;
};_gbggg .Extend =_bddgb ;};return &_gbggg ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_fdaba *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fdaba ._faefdf .GetCrypter ()!=nil &&!_fdaba ._faefdf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_fdaba ._cfedb )< pageNumber {return nil ,_dd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gcgfd :=pageNumber -1;if _gcgfd < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_bagba :=_fdaba .PageList [_gcgfd ];
return _bagba ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_bcacb *PdfField )GetContainingPdfObject ()_gb .PdfObject {return _bcacb ._feag };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ddgab *_gb .PdfIndirectObject ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _gb .PdfObject ;MK _gb .PdfObject ;A _gb .PdfObject ;AA _gb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cca *PdfActionLaunch )ToPdfObject ()_gb .PdfObject {_cca .PdfAction .ToPdfObject ();_bf :=_cca ._gae ;_dcg :=_bf .PdfObject .(*_gb .PdfObjectDictionary );_dcg .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeLaunch )));if _cca .F !=nil {_dcg .Set ("\u0046",_cca .F .ToPdfObject ());
};_dcg .SetIfNotNil ("\u0057\u0069\u006e",_cca .Win );_dcg .SetIfNotNil ("\u004d\u0061\u0063",_cca .Mac );_dcg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cca .Unix );_dcg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cca .NewWindow );return _bf ;
};

// ToPdfObject implements interface PdfModel.
func (_ddeb *PdfAnnotationCaret )ToPdfObject ()_gb .PdfObject {_ddeb .PdfAnnotation .ToPdfObject ();_cae :=_ddeb ._gbac ;_aeac :=_cae .PdfObject .(*_gb .PdfObjectDictionary );_ddeb .PdfAnnotationMarkup .appendToPdfDictionary (_aeac );_aeac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0043\u0061\u0072e\u0074"));
_aeac .SetIfNotNil ("\u0052\u0044",_ddeb .RD );_aeac .SetIfNotNil ("\u0053\u0079",_ddeb .Sy );return _cae ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_ddbca :=&XObjectImage {};_eeddc :=&_gb .PdfObjectStream {};_eeddc .PdfObjectDictionary =_gb .MakeDict ();_ddbca ._debde =_eeddc ;return _ddbca ;};

// GetPdfInfo returns the PDF info dictionary.
func (_egaed *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bbfac :=PdfInfo {};_ceadb ,_fbaga :=_egaed .GetTrailer ();if _fbaga !=nil {return nil ,_fbaga ;};var _gegcb *_gb .PdfObjectDictionary ;_bdagab :=_ceadb .Get ("\u0049\u006e\u0066\u006f");switch _deebc :=_bdagab .(type ){case *_gb .PdfObjectReference :_bdaff :=_deebc ;
_bdagab ,_fbaga =_egaed .GetIndirectObjectByNumber (int (_bdaff .ObjectNumber ));_bdagab =_gb .TraceToDirectObject (_bdagab );if _fbaga !=nil {return nil ,_fbaga ;};_gegcb ,_ =_bdagab .(*_gb .PdfObjectDictionary );case *_gb .PdfObjectDictionary :_gegcb =_deebc ;
};if _gegcb ==nil {return nil ,_dd .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_gbadd :=range _gegcb .Keys (){switch _gbadd {case "\u0054\u0069\u0074l\u0065":_bbfac .Title ,_ =_gb .GetString (_gegcb .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_bbfac .Author ,_ =_gb .GetString (_gegcb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_bbfac .Subject ,_ =_gb .GetString (_gegcb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_bbfac .Keywords ,_ =_gb .GetString (_gegcb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_bbfac .Creator ,_ =_gb .GetString (_gegcb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_bbfac .Producer ,_ =_gb .GetString (_gegcb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_bbfac .Trapped ,_ =_gb .GetName (_gegcb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _ggfga ,_dfgfe :=_gb .GetString (_gegcb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_dfgfe &&_ggfga .String ()!=""{_dfea ,_afaa :=NewPdfDate (_ggfga .String ());
if _afaa !=nil {return nil ,_afaa ;};_bbfac .CreationDate =&_dfea ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _cffc ,_eeebb :=_gb .GetString (_gegcb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_eeebb &&_cffc .String ()!=""{_gbgb ,_dedge :=NewPdfDate (_cffc .String ());
if _dedge !=nil {return nil ,_dedge ;};_bbfac .ModifiedDate =&_gbgb ;};default:_gcba ,_ :=_gb .GetString (_gegcb .Get (_gbadd ));if _bbfac ._dfee ==nil {_bbfac ._dfee =_gb .MakeDict ();};_bbfac ._dfee .Set (_gbadd ,_gcba );};};return &_bbfac ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_fcgc *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aebg ,_afd :=_gb .GetNumbersAsFloat (objects );
if _afd !=nil {return nil ,_afd ;};return _fcgc .ColorFromFloats (_aebg );};func (_edgdc *PdfWriter )writeString (_bfcbf string ){if _edgdc ._fcff !=nil {return ;};_gfgbg ,_ebbae :=_edgdc ._bfdca .WriteString (_bfcbf );_edgdc ._aafdg +=int64 (_gfgbg );
_edgdc ._fcff =_ebbae ;};func _ggdd (_aefa ,_dbdec string )string {if _fcf .Contains (_aefa ,"\u002b"){_dfbee :=_fcf .Split (_aefa ,"\u002b");if len (_dfbee )==2{_aefa =_dfbee [1];};};return _dbdec +"\u002b"+_aefa ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_dbcf :=&PdfColorspaceDeviceN {};return _dbcf };

// PartialName returns the partial name of the field.
func (_bbaaf *PdfField )PartialName ()string {_acgg :="";if _bbaaf .T !=nil {_acgg =_bbaaf .T .Decoded ();}else {_ag .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _acgg ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_egfg :=NewPdfAnnotation ();_ddfg :=&PdfAnnotationCaret {};_ddfg .PdfAnnotation =_egfg ;_ddfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egfg .SetContext (_ddfg );return _ddfg ;};

// ToGoTime returns the date in time.Time format.
func (_fffae PdfDate )ToGoTime ()_fag .Time {_dadc :=int (_fffae ._ebbgf *60*60+_fffae ._bcccbg *60);switch _fffae ._fbecd {case '-':_dadc =-_dadc ;case 'Z':_dadc =0;};_fffcb :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fffae ._fbecd ,_fffae ._ebbgf ,_fffae ._bcccbg );
_fcdge :=_fag .FixedZone (_fffcb ,_dadc );return _fag .Date (int (_fffae ._cagfeb ),_fag .Month (_fffae ._bbaf ),int (_fffae ._ddbag ),int (_fffae ._acabb ),int (_fffae ._fadf ),int (_fffae ._cdffb ),0,_fcdge );};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _fg .ReadSeeker )(*PdfFont ,error ){const _adbbd =_eaf .CharCode (32);const _cadf =_eaf .CharCode (255);_cadab ,_ggbg :=_ae .ReadAll (r );if _ggbg !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ggbg );
return nil ,_ggbg ;};_dcdgf ,_ggbg :=_ed .TtfParse (_df .NewReader (_cadab ));if _ggbg !=nil {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_ggbg );
return nil ,_ggbg ;};_acggc :=&pdfFontSimple {_ggdff :make (map[_eaf .CharCode ]float64 ),fontCommon :fontCommon {_abec :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_acggc ._agee =_eaf .NewWinAnsiEncoder ();_acggc ._cacfa =_dcdgf .PostScriptName ;
_acggc .FirstChar =_gb .MakeInteger (int64 (_adbbd ));_acggc .LastChar =_gb .MakeInteger (int64 (_cadf ));_bcdea :=1000.0/float64 (_dcdgf .UnitsPerEm );if len (_dcdgf .Widths )<=0{return nil ,_dd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_dfdb :=_bcdea *float64 (_dcdgf .Widths [0]);_gccad :=make ([]float64 ,0,_cadf -_adbbd +1);for _ebcc :=_adbbd ;_ebcc <=_cadf ;_ebcc ++{_gebg ,_eacca :=_acggc .Encoder ().CharcodeToRune (_ebcc );if !_eacca {_ag .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ebcc );
_gccad =append (_gccad ,_dfdb );continue ;};_faca ,_abbbb :=_dcdgf .Chars [_gebg ];if !_abbbb {_ag .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_gccad =append (_gccad ,_dfdb );continue ;
};_acdef :=_bcdea *float64 (_dcdgf .Widths [_faca ]);_gccad =append (_gccad ,_acdef );};_acggc .Widths =_gb .MakeIndirectObject (_gb .MakeArrayFromFloats (_gccad ));if len (_gccad )< int (_cadf -_adbbd +1){_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_gccad ),255-32+1);
return nil ,_gb .ErrRangeError ;};for _fcaed :=_adbbd ;_fcaed <=_cadf ;_fcaed ++{_acggc ._ggdff [_fcaed ]=_gccad [_fcaed -_adbbd ];};_acggc .Encoding =_gb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gefbd :=&PdfFontDescriptor {};
_gefbd .FontName =_gb .MakeName (_dcdgf .PostScriptName );_gefbd .Ascent =_gb .MakeFloat (_bcdea *float64 (_dcdgf .TypoAscender ));_gefbd .Descent =_gb .MakeFloat (_bcdea *float64 (_dcdgf .TypoDescender ));_gefbd .CapHeight =_gb .MakeFloat (_bcdea *float64 (_dcdgf .CapHeight ));
_gefbd .FontBBox =_gb .MakeArrayFromFloats ([]float64 {_bcdea *float64 (_dcdgf .Xmin ),_bcdea *float64 (_dcdgf .Ymin ),_bcdea *float64 (_dcdgf .Xmax ),_bcdea *float64 (_dcdgf .Ymax )});_gefbd .ItalicAngle =_gb .MakeFloat (_dcdgf .ItalicAngle );_gefbd .MissingWidth =_gb .MakeFloat (_bcdea *float64 (_dcdgf .Widths [0]));
_eefd ,_ggbg :=_gb .MakeStream (_cadab ,_gb .NewFlateEncoder ());if _ggbg !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ggbg );
return nil ,_ggbg ;};_eefd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gb .MakeInteger (int64 (len (_cadab ))));_gefbd .FontFile2 =_eefd ;if _dcdgf .Bold {_gefbd .StemV =_gb .MakeInteger (120);}else {_gefbd .StemV =_gb .MakeInteger (70);
};_bedac :=_afgd ;if _dcdgf .IsFixedPitch {_bedac |=_bcbbe ;};if _dcdgf .ItalicAngle !=0{_bedac |=_edcef ;};_gefbd .Flags =_gb .MakeInteger (int64 (_bedac ));_acggc ._gdef =_gefbd ;_dadgf :=&PdfFont {_faee :_acggc };return _dadgf ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _gb .PdfObject ;Q _gb .PdfObject ;RC _gb .PdfObject ;DS _gb .PdfObject ;CL _gb .PdfObject ;IT _gb .PdfObject ;BE _gb .PdfObject ;RD _gb .PdfObject ;BS _gb .PdfObject ;LE _gb .PdfObject ;
};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ffe *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ffe .updateObjectsDeep (dss .ToPdfObject (),nil );};_ffe ._bggg =dss ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_abeff *PdfSignature )bool ;Validate (_dfcb *PdfSignature ,_cdgab Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_fcbcf *PdfSignature )(Hasher ,error );Sign (_gdac *PdfSignature ,_ddgfe Hasher )error ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _gb .PdfObject ;Sy _gb .PdfObject ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _gb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _gb .PdfObject ;Contents _gb .PdfObject ;
Rotate *int64 ;Group _gb .PdfObject ;Thumb _gb .PdfObject ;B _gb .PdfObject ;Dur _gb .PdfObject ;Trans _gb .PdfObject ;AA _gb .PdfObject ;Metadata _gb .PdfObject ;PieceInfo _gb .PdfObject ;StructParents _gb .PdfObject ;ID _gb .PdfObject ;PZ _gb .PdfObject ;
SeparationInfo _gb .PdfObject ;Tabs _gb .PdfObject ;TemplateInstantiated _gb .PdfObject ;PresSteps _gb .PdfObject ;UserUnit _gb .PdfObject ;VP _gb .PdfObject ;Annots _gb .PdfObject ;_gccef []*PdfAnnotation ;_ageda *_gb .PdfObjectDictionary ;_gdda *_gb .PdfIndirectObject ;
_bacc *PdfReader ;};

// ToPdfObject returns the PDF representation of the function.
func (_bbffe *PdfFunctionType0 )ToPdfObject ()_gb .PdfObject {if _bbffe ._ecbgb ==nil {_bbffe ._ecbgb =&_gb .PdfObjectStream {};};_aebc :=_gb .MakeDict ();_aebc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (0));
_dbfcd :=&_gb .PdfObjectArray {};for _ ,_eegdf :=range _bbffe .Domain {_dbfcd .Append (_gb .MakeFloat (_eegdf ));};_aebc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbfcd );_ccga :=&_gb .PdfObjectArray {};for _ ,_bcbg :=range _bbffe .Range {_ccga .Append (_gb .MakeFloat (_bcbg ));
};_aebc .Set ("\u0052\u0061\u006eg\u0065",_ccga );_bebbf :=&_gb .PdfObjectArray {};for _ ,_ccaff :=range _bbffe .Size {_bebbf .Append (_gb .MakeInteger (int64 (_ccaff )));};_aebc .Set ("\u0053\u0069\u007a\u0065",_bebbf );_aebc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_gb .MakeInteger (int64 (_bbffe .BitsPerSample )));
if _bbffe .Order !=1{_aebc .Set ("\u004f\u0072\u0064e\u0072",_gb .MakeInteger (int64 (_bbffe .Order )));};_aebc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_bbffe ._gfcfb ))));_bbffe ._ecbgb .Stream =_bbffe ._gfcfb ;_bbffe ._ecbgb .PdfObjectDictionary =_aebc ;
return _bbffe ._ecbgb ;};func (_effca *PdfWriter )addObjects (_cfgcca _gb .PdfObject )error {_ag .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _cegfa ,_ddgad :=_cfgcca .(*_gb .PdfIndirectObject );_ddgad {_ag .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");
_ag .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cfgcca ,_cegfa );_ag .Log .Trace ("\u002d\u0020\u0025\u0073",_cegfa .PdfObject );if _effca .addObject (_cegfa ){_fgbce :=_effca .addObjects (_cegfa .PdfObject );if _fgbce !=nil {return _fgbce ;
};};return nil ;};if _bedbf ,_bagbd :=_cfgcca .(*_gb .PdfObjectStream );_bagbd {_ag .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ag .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cfgcca ,_cfgcca );if _effca .addObject (_bedbf ){_fadd :=_effca .addObjects (_bedbf .PdfObjectDictionary );
if _fadd !=nil {return _fadd ;};};return nil ;};if _aeefcb ,_ebage :=_cfgcca .(*_gb .PdfObjectDictionary );_ebage {_ag .Log .Trace ("\u0044\u0069\u0063\u0074");_ag .Log .Trace ("\u002d\u0020\u0025\u0073",_cfgcca );for _ ,_ebaf :=range _aeefcb .Keys (){_fdfaba :=_aeefcb .Get (_ebaf );
if _ffddc ,_cggdc :=_fdfaba .(*_gb .PdfObjectReference );_cggdc {_fdfaba =_ffddc .Resolve ();_aeefcb .Set (_ebaf ,_fdfaba );};if _ebaf !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _feeeb :=_effca .addObjects (_fdfaba );_feeeb !=nil {return _feeeb ;};}else {if _ ,_dcgfd :=_fdfaba .(*_gb .PdfObjectNull );
_dcgfd {continue ;};if _ecbbf :=_effca .hasObject (_fdfaba );!_ecbbf {_ag .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_fdfaba ,_fdfaba ,_fdfaba );
_effca ._defcg [_fdfaba ]=append (_effca ._defcg [_fdfaba ],_aeefcb );};};};return nil ;};if _cgcac ,_affbe :=_cfgcca .(*_gb .PdfObjectArray );_affbe {_ag .Log .Trace ("\u0041\u0072\u0072a\u0079");_ag .Log .Trace ("\u002d\u0020\u0025\u0073",_cfgcca );if _cgcac ==nil {return _dd .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fabge ,_daebb :=range _cgcac .Elements (){if _dcdfg ,_beacb :=_daebb .(*_gb .PdfObjectReference );_beacb {_daebb =_dcdfg .Resolve ();_cgcac .Set (_fabge ,_daebb );};if _cedc :=_effca .addObjects (_daebb );_cedc !=nil {return _cedc ;};};return nil ;
};if _ ,_fbceae :=_cfgcca .(*_gb .PdfObjectReference );_fbceae {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cfgcca );
return _dd .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// B returns the value of the B component of the color.
func (_feaa *PdfColorLab )B ()float64 {return _feaa [2]};

// ToPdfObject implements interface PdfModel.
func (_ebgf *PdfAnnotationText )ToPdfObject ()_gb .PdfObject {_ebgf .PdfAnnotation .ToPdfObject ();_aba :=_ebgf ._gbac ;_bace :=_aba .PdfObject .(*_gb .PdfObjectDictionary );if _ebgf .PdfAnnotationMarkup !=nil {_ebgf .PdfAnnotationMarkup .appendToPdfDictionary (_bace );
};_bace .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0054\u0065\u0078\u0074"));_bace .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ebgf .Open );_bace .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebgf .Name );_bace .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ebgf .State );
_bace .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_ebgf .StateModel );return _aba ;};

// ToPdfObject returns a stream object.
func (_egab *XObjectImage )ToPdfObject ()_gb .PdfObject {_affbg :=_egab ._debde ;_debgb :=_affbg .PdfObjectDictionary ;if _egab .Filter !=nil {_debgb =_egab .Filter .MakeStreamDict ();_affbg .PdfObjectDictionary =_debgb ;};_debgb .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_debgb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0049\u006d\u0061g\u0065"));_debgb .Set ("\u0057\u0069\u0064t\u0068",_gb .MakeInteger (*(_egab .Width )));_debgb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gb .MakeInteger (*(_egab .Height )));
if _egab .BitsPerComponent !=nil {_debgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gb .MakeInteger (*(_egab .BitsPerComponent )));};if _egab .ColorSpace !=nil {_debgb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_egab .ColorSpace .ToPdfObject ());
};_debgb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_egab .Intent );_debgb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_egab .ImageMask );_debgb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_egab .Mask );_afbcg :=_debgb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _egab .Decode ==nil &&_afbcg {_debgb .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _egab .Decode !=nil {_debgb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_egab .Decode );};_debgb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_egab .Interpolate );
_debgb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_egab .Alternatives );_debgb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_egab .SMask );_debgb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_egab .SMaskInData );
_debgb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_egab .Matte );_debgb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_egab .Name );_debgb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_egab .StructParent );_debgb .SetIfNotNil ("\u0049\u0044",_egab .ID );
_debgb .SetIfNotNil ("\u004f\u0050\u0049",_egab .OPI );_debgb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_egab .Metadata );_debgb .SetIfNotNil ("\u004f\u0043",_egab .OC );_debgb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_egab .Stream ))));
_affbg .Stream =_egab .Stream ;return _affbg ;};func _bfce (_abgdf _gb .PdfObject ,_cbba *PdfReader )(*OutlineDest ,error ){_gbgfe ,_gecbg :=_gb .GetArray (_abgdf );if !_gecbg {return nil ,_dd .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_gdeff :=_gbgfe .Len ();if _gdeff < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gdeff );
};_eadb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gcdef :=_gbgfe .Get (0);if _abfgg ,_ebede :=_gb .GetIndirect (_gcdef );_ebede {if _ ,_ebbg ,_fdfbg :=_cbba .PageFromIndirectObject (_abfgg );_fdfbg ==nil {_eadb .Page =int64 (_ebbg -1);}else {_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_abfgg );
};_eadb .PageObj =_abfgg ;}else if _geef ,_ffbce :=_gb .GetIntVal (_gcdef );_ffbce {if _geef >=0&&_geef < len (_cbba .PageList ){_eadb .PageObj =_cbba .PageList [_geef ].GetPageAsIndirectObject ();}else {_ag .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_geef );
};_eadb .Page =int64 (_geef );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gcdef );};_bebg ,_gecbg :=_gb .GetNameVal (_gbgfe .Get (1));
if !_gecbg {_ag .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gbgfe .Get (1));
return _eadb ,nil ;};switch _bebg {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gdeff > 2{_eadb .Y ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_gbgfe .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gdeff > 2{_eadb .X ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_gbgfe .Get (2)));
};case "\u0058\u0059\u005a":if _gdeff > 4{_eadb .X ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_gbgfe .Get (2)));_eadb .Y ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_gbgfe .Get (3)));_eadb .Zoom ,_ =_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_gbgfe .Get (4)));
};default:_bebg ="\u0046\u0069\u0074";};_eadb .Mode =_bebg ;return _eadb ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_baef *PdfAppender )UpdateObject (obj _gb .PdfObject ){_baef .replaceObject (obj ,obj );if _ ,_ddae :=_baef ._eeed [obj ];!_ddae {_baef ._caaf =append (_baef ._caaf ,obj );_baef ._eeed [obj ]=struct{}{};};};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_aeede *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfAnnotationUnderline )ToPdfObject ()_gb .PdfObject {_gdc .PdfAnnotation .ToPdfObject ();_ceca :=_gdc ._gbac ;_gagc :=_ceca .PdfObject .(*_gb .PdfObjectDictionary );_gdc .PdfAnnotationMarkup .appendToPdfDictionary (_gagc );_gagc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_gagc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdc .QuadPoints );return _ceca ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_agb :=NewPdfAction ();_ebf :=&PdfActionURI {};_ebf .PdfAction =_agb ;_agb .SetContext (_ebf );return _ebf ;};func _ccddf (_abbbd []byte )(_dgbec ,_agfc string ,_debace error ){_ag .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_abbbd ));
_egba :=_egeec .FindIndex (_abbbd );if _egba ==nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_gb .ErrTypeError ;};_edgcg :=_egba [1];_eabcd :=_fcf .Index (string (_abbbd [_edgcg :]),_bgcc );if _eabcd < 0{_dgbec =string (_abbbd [_edgcg :]);return _dgbec ,"",nil ;};_cfeg :=_edgcg +_eabcd ;_dgbec =string (_abbbd [_edgcg :_cfeg ]);_bfge :=_cfeg ;
_eabcd =_fcf .Index (string (_abbbd [_bfge :]),_defgb );if _eabcd < 0{_ag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_debace );
return "","",_gb .ErrTypeError ;};_ggeb :=_bfge +_eabcd ;_agfc =string (_abbbd [_bfge :_ggeb ]);return _dgbec ,_agfc ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_abed *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gbcg :=_bad .NewReader (img .getBase ());_fdgb :=_aag .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cfed :=_bad .NewWriter (_fdgb );
_ecccg :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_ggcec :=make ([]uint32 ,3);var (_gfda uint32 ;ANorm ,X ,Y ,Z ,_dcba ,_eeef ,_fcafd float64 ;_edgb error ;);for {_gfda ,_edgb =_gbcg .ReadSample ();if _edgb ==_fg .EOF {break ;}else if _edgb !=nil {return img ,_edgb ;
};ANorm =float64 (_gfda )/_ecccg ;X =_abed .WhitePoint [0]*_ga .Pow (ANorm ,_abed .Gamma );Y =_abed .WhitePoint [1]*_ga .Pow (ANorm ,_abed .Gamma );Z =_abed .WhitePoint [2]*_ga .Pow (ANorm ,_abed .Gamma );_dcba =3.240479*X +-1.537150*Y +-0.498535*Z ;_eeef =-0.969256*X +1.875992*Y +0.041556*Z ;
_fcafd =0.055648*X +-0.204043*Y +1.057311*Z ;_dcba =_ga .Min (_ga .Max (_dcba ,0),1.0);_eeef =_ga .Min (_ga .Max (_eeef ,0),1.0);_fcafd =_ga .Min (_ga .Max (_fcafd ,0),1.0);_ggcec [0]=uint32 (_dcba *_ecccg );_ggcec [1]=uint32 (_eeef *_ecccg );_ggcec [2]=uint32 (_fcafd *_ecccg );
if _edgb =_cfed .WriteSamples (_ggcec );_edgb !=nil {return img ,_edgb ;};};return _dcgf (&_fdgb ),nil ;};

// String returns a string describing the font descriptor.
func (_fbcee *PdfFontDescriptor )String ()string {var _cggg []string ;if _fbcee .FontName !=nil {_cggg =append (_cggg ,_fbcee .FontName .String ());};if _fbcee .FontFamily !=nil {_cggg =append (_cggg ,_fbcee .FontFamily .String ());};if _fbcee .fontFile !=nil {_cggg =append (_cggg ,_fbcee .fontFile .String ());
};if _fbcee ._bbede !=nil {_cggg =append (_cggg ,_fbcee ._bbede .String ());};_cggg =append (_cggg ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_fbcee .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fcf .Join (_cggg ,"\u002c\u0020"));
};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_afddc *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _afddc ._debdd ==nil {_afddc ._debdd =_ea .NewPSExecutor (_afddc .Program );};var _cdcdg []_ea .PSObject ;for _ ,_bbegc :=range xVec {_cdcdg =append (_cdcdg ,_ea .MakeReal (_bbegc ));
};_dfaae ,_ggca :=_afddc ._debdd .Execute (_cdcdg );if _ggca !=nil {return nil ,_ggca ;};_fbfg ,_ggca :=_ea .PSObjectArrayToFloat64Array (_dfaae );if _ggca !=nil {return nil ,_ggca ;};return _fbfg ,nil ;};func _eeecg ()string {_cgabb .Lock ();defer _cgabb .Unlock ();
return _ggfe };

// ToPdfObject implements interface PdfModel.
func (_edae *PdfAnnotationRichMedia )ToPdfObject ()_gb .PdfObject {_edae .PdfAnnotation .ToPdfObject ();_ccege :=_edae ._gbac ;_bfdc :=_ccege .PdfObject .(*_gb .PdfObjectDictionary );_bfdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_bfdc .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_edae .RichMediaSettings );_bfdc .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_edae .RichMediaContent );
return _ccege ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_fcdea *PdfPage )SetContentStreams (cStreams []string ,encoder _gb .StreamEncoder )error {if len (cStreams )==0{_fcdea .Contents =nil ;return nil ;};if encoder ==nil {encoder =_gb .NewRawEncoder ();};var _gdeee []*_gb .PdfObjectStream ;for _ ,_gadb :=range cStreams {_dbdddg :=&_gb .PdfObjectStream {};
_fgge :=encoder .MakeStreamDict ();_gdfea ,_fdddb :=encoder .EncodeBytes ([]byte (_gadb ));if _fdddb !=nil {return _fdddb ;};_fgge .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_gdfea ))));_dbdddg .PdfObjectDictionary =_fgge ;
_dbdddg .Stream =_gdfea ;_gdeee =append (_gdeee ,_dbdddg );};if len (_gdeee )==1{_fcdea .Contents =_gdeee [0];}else {_bcgc :=_gb .MakeArray ();for _ ,_dafb :=range _gdeee {_bcgc .Append (_dafb );};_fcdea .Contents =_bcgc ;};return nil ;};func (_gbgdb *PdfReader )newPdfSignatureFromIndirect (_ebdb *_gb .PdfIndirectObject )(*PdfSignature ,error ){_aaeg ,_bfdcb :=_ebdb .PdfObject .(*_gb .PdfObjectDictionary );
if !_bfdcb {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _cabg ,_gadac :=_gbgdb ._dcafc .GetModelFromPrimitive (_ebdb ).(*PdfSignature );_gadac {return _cabg ,nil ;};_cfbdd :=&PdfSignature {};_cfbdd ._dggbe =_ebdb ;_cfbdd .Type ,_ =_gb .GetName (_aaeg .Get ("\u0054\u0079\u0070\u0065"));
_cfbdd .Filter ,_bfdcb =_gb .GetName (_aaeg .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bfdcb {_ag .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cfbdd .SubFilter ,_ =_gb .GetName (_aaeg .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_cfbdd .Contents ,_bfdcb =_gb .GetString (_aaeg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bfdcb {_ag .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cfbdd .Cert =_aaeg .Get ("\u0043\u0065\u0072\u0074");_cfbdd .ByteRange ,_ =_gb .GetArray (_aaeg .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_cfbdd .Reference ,_ =_gb .GetArray (_aaeg .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_cfbdd .Changes ,_ =_gb .GetArray (_aaeg .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_cfbdd .Name ,_ =_gb .GetString (_aaeg .Get ("\u004e\u0061\u006d\u0065"));_cfbdd .M ,_ =_gb .GetString (_aaeg .Get ("\u004d"));_cfbdd .Location ,_ =_gb .GetString (_aaeg .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_cfbdd .Reason ,_ =_gb .GetString (_aaeg .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_cfbdd .ContactInfo ,_ =_gb .GetString (_aaeg .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_cfbdd .R ,_ =_gb .GetInt (_aaeg .Get ("\u0052"));
_cfbdd .V ,_ =_gb .GetInt (_aaeg .Get ("\u0056"));_cfbdd .PropBuild ,_ =_gb .GetDict (_aaeg .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_cfbdd .PropAuthTime ,_ =_gb .GetInt (_aaeg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_cfbdd .PropAuthType ,_ =_gb .GetName (_aaeg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _cfbdd ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_acd :=NewPdfAnnotation ();_geac :=&PdfAnnotationPolyLine {};_geac .PdfAnnotation =_acd ;_geac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acd .SetContext (_geac );return _geac ;};func _gaeb (_dgaad _gb .PdfObject )(*PdfColorspaceDeviceN ,error ){_beea :=NewPdfColorspaceDeviceN ();
if _abcbe ,_gfcbf :=_dgaad .(*_gb .PdfIndirectObject );_gfcbf {_beea ._aebe =_abcbe ;};_dgaad =_gb .TraceToDirectObject (_dgaad );_dfde ,_fgbd :=_dgaad .(*_gb .PdfObjectArray );if !_fgbd {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _dfde .Len ()!=4&&_dfde .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_dgaad =_dfde .Get (0);
_eeda ,_fgbd :=_dgaad .(*_gb .PdfObjectName );if !_fgbd {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_eeda !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_dgaad =_dfde .Get (1);
_dgaad =_gb .TraceToDirectObject (_dgaad );_edee ,_fgbd :=_dgaad .(*_gb .PdfObjectArray );if !_fgbd {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_beea .ColorantNames =_edee ;_dgaad =_dfde .Get (2);_ffddg ,_afbg :=NewPdfColorspaceFromPdfObject (_dgaad );if _afbg !=nil {return nil ,_afbg ;};_beea .AlternateSpace =_ffddg ;_ccfd ,_afbg :=_deee (_dfde .Get (3));if _afbg !=nil {return nil ,_afbg ;};
_beea .TintTransform =_ccfd ;if _dfde .Len ()==5{_gcggg ,_gdgf :=_cbcdd (_dfde .Get (4));if _gdgf !=nil {return nil ,_gdgf ;};_beea .Attributes =_gcggg ;};return _beea ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_eecd *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// GetContainingPdfObject implements interface PdfModel.
func (_adcc *PdfAnnotation )GetContainingPdfObject ()_gb .PdfObject {return _adcc ._gbac };

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_bceba *PdfFontDescriptor )ToPdfObject ()_gb .PdfObject {_bdde :=_gb .MakeDict ();if _bceba ._dcgc ==nil {_bceba ._dcgc =&_gb .PdfIndirectObject {};};_bceba ._dcgc .PdfObject =_bdde ;_bdde .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _bceba .FontName !=nil {_bdde .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_bceba .FontName );};if _bceba .FontFamily !=nil {_bdde .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_bceba .FontFamily );};if _bceba .FontStretch !=nil {_bdde .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_bceba .FontStretch );
};if _bceba .FontWeight !=nil {_bdde .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_bceba .FontWeight );};if _bceba .Flags !=nil {_bdde .Set ("\u0046\u006c\u0061g\u0073",_bceba .Flags );};if _bceba .FontBBox !=nil {_bdde .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bceba .FontBBox );
};if _bceba .ItalicAngle !=nil {_bdde .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_bceba .ItalicAngle );};if _bceba .Ascent !=nil {_bdde .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_bceba .Ascent );};if _bceba .Descent !=nil {_bdde .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_bceba .Descent );
};if _bceba .Leading !=nil {_bdde .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_bceba .Leading );};if _bceba .CapHeight !=nil {_bdde .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_bceba .CapHeight );};if _bceba .XHeight !=nil {_bdde .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_bceba .XHeight );
};if _bceba .StemV !=nil {_bdde .Set ("\u0053\u0074\u0065m\u0056",_bceba .StemV );};if _bceba .StemH !=nil {_bdde .Set ("\u0053\u0074\u0065m\u0048",_bceba .StemH );};if _bceba .AvgWidth !=nil {_bdde .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_bceba .AvgWidth );
};if _bceba .MaxWidth !=nil {_bdde .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_bceba .MaxWidth );};if _bceba .MissingWidth !=nil {_bdde .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_bceba .MissingWidth );};if _bceba .FontFile !=nil {_bdde .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_bceba .FontFile );
};if _bceba .FontFile2 !=nil {_bdde .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_bceba .FontFile2 );};if _bceba .FontFile3 !=nil {_bdde .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_bceba .FontFile3 );};if _bceba .CharSet !=nil {_bdde .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_bceba .CharSet );
};if _bceba .Style !=nil {_bdde .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_bceba .FontName );};if _bceba .Lang !=nil {_bdde .Set ("\u004c\u0061\u006e\u0067",_bceba .Lang );};if _bceba .FD !=nil {_bdde .Set ("\u0046\u0044",_bceba .FD );};
if _bceba .CIDSet !=nil {_bdde .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_bceba .CIDSet );};return _bceba ._dcgc ;};

// ToInteger convert to an integer format.
func (_aafbe *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_dcce :=_ga .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dcce *_aafbe .R ()),uint32 (_dcce *_aafbe .G ()),uint32 (_dcce *_aafbe .B ())};};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_efdg *_gb .PdfObjectDictionary ;_gddb *_gb .PdfIndirectObject ;};func _afegb (_fffbc _gb .PdfObject )(*PdfFunctionType2 ,error ){_egcec :=&PdfFunctionType2 {};
var _beebg *_gb .PdfObjectDictionary ;if _bdbba ,_bbefc :=_fffbc .(*_gb .PdfIndirectObject );_bbefc {_cfcbd ,_ggbe :=_bdbba .PdfObject .(*_gb .PdfObjectDictionary );if !_ggbe {return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_egcec ._cegg =_bdbba ;_beebg =_cfcbd ;}else if _fgaa ,_bdgbc :=_fffbc .(*_gb .PdfObjectDictionary );_bdgbc {_beebg =_fgaa ;}else {return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ag .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_beebg .String ());
_afeba ,_caaee :=_gb .TraceToDirectObject (_beebg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );if !_caaee {_ag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _afeba .Len ()< 0||_afeba .Len ()%2!=0{_ag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_dd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_becf ,_dffe :=_afeba .ToFloat64Array ();if _dffe !=nil {return nil ,_dffe ;};_egcec .Domain =_becf ;_afeba ,_caaee =_gb .TraceToDirectObject (_beebg .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );if _caaee {if _afeba .Len ()< 0||_afeba .Len ()%2!=0{return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gdce ,_gefg :=_afeba .ToFloat64Array ();if _gefg !=nil {return nil ,_gefg ;};_egcec .Range =_gdce ;};_afeba ,_caaee =_gb .TraceToDirectObject (_beebg .Get ("\u0043\u0030")).(*_gb .PdfObjectArray );if _caaee {_fggg ,_fffe :=_afeba .ToFloat64Array ();
if _fffe !=nil {return nil ,_fffe ;};_egcec .C0 =_fggg ;};_afeba ,_caaee =_gb .TraceToDirectObject (_beebg .Get ("\u0043\u0031")).(*_gb .PdfObjectArray );if _caaee {_fggfc ,_ecdf :=_afeba .ToFloat64Array ();if _ecdf !=nil {return nil ,_ecdf ;};_egcec .C1 =_fggfc ;
};if len (_egcec .C0 )!=len (_egcec .C1 ){_ag .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_gb .ErrRangeError ;};N ,_dffe :=_gb .GetNumberAsFloat (_gb .TraceToDirectObject (_beebg .Get ("\u004e")));
if _dffe !=nil {_ag .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_beebg .String ());return nil ,_dffe ;};_egcec .N =N ;
return _egcec ,nil ;};func _debec (_dfffc _gb .PdfObject ){_ag .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_dfffc ,_dfffc .String ());if _ggac ,_afbf :=_dfffc .(*_gb .PdfObjectStream );_afbf {_gfcga ,_bgcb :=_gb .DecodeStream (_ggac );
if _bgcb !=nil {_ag .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_bgcb );return ;};_ag .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gfcga );}else if _bgfgc ,_cbafd :=_dfffc .(*_gb .PdfIndirectObject );_cbafd {_ag .Log .Debug ("\u0025\u0054\u0020%\u0076",_bgfgc .PdfObject ,_bgfgc .PdfObject );
_ag .Log .Debug ("\u0025\u0073",_bgfgc .PdfObject .String ());};};var _gbbfc =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// M returns the value of the magenta component of the color.
func (_eade *PdfColorDeviceCMYK )M ()float64 {return _eade [1]};

// String returns a string representation of the field.
func (_aedf *PdfField )String ()string {if _fdcf ,_gfeb :=_aedf .ToPdfObject ().(*_gb .PdfIndirectObject );_gfeb {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aedf ._bagfc ,_fdcf .PdfObject .String ());};return "";};

// L returns the value of the L component of the color.
func (_gacgf *PdfColorLab )L ()float64 {return _gacgf [0]};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_bdgca *PdfPageResourcesColorspaces )Set (key _gb .PdfObjectName ,val PdfColorspace ){if _ ,_gdccf :=_bdgca .Colorspaces [string (key )];!_gdccf {_bdgca .Names =append (_bdgca .Names ,string (key ));};_bdgca .Colorspaces [string (key )]=val ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dbcd *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_cge :=NewPdfAnnotation ();_fgfg :=&PdfAnnotationScreen {};_fgfg .PdfAnnotation =_cge ;_cge .SetContext (_fgfg );return _fgfg ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dacd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_caec :=_bad .NewReader (img .getBase ());_egef :=_aag .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dacd .AlternateSpace .GetNumComponents (),nil ,img ._aggec ,nil );
_ccbb :=_bad .NewWriter (_egef );_ecbc :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_ag .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ag .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dacd .TintTransform );_cdbb :=_dacd .AlternateSpace .DecodeArray ();var (_bece uint32 ;_fbbc error ;);for {_bece ,_fbbc =_caec .ReadSample ();if _fbbc ==_fg .EOF {break ;
};if _fbbc !=nil {return img ,_fbbc ;};_cbcc :=float64 (_bece )/_ecbc ;_ffebg ,_eggb :=_dacd .TintTransform .Evaluate ([]float64 {_cbcc });if _eggb !=nil {return img ,_eggb ;};for _egae ,_bebb :=range _ffebg {_fefb :=_aag .LinearInterpolate (_bebb ,_cdbb [_egae *2],_cdbb [_egae *2+1],0,1);
if _eggb =_ccbb .WriteSample (uint32 (_fefb *_ecbc ));_eggb !=nil {return img ,_eggb ;};};};return _dacd .AlternateSpace .ImageToRGB (_dcgf (&_egef ));};func _eecbf (_bdge *PdfField )[]*PdfField {_ddef :=[]*PdfField {_bdge };for _ ,_cdbcb :=range _bdge .Kids {_ddef =append (_ddef ,_eecbf (_cdbcb )...);
};return _ddef ;};func _efccfe (_cagef []*_gb .PdfObjectStream )*_gb .PdfObjectArray {if len (_cagef )==0{return nil ;};_fgda :=make ([]_gb .PdfObject ,0,len (_cagef ));for _ ,_fdbgg :=range _cagef {_fgda =append (_fgda ,_fdbgg );};return _gb .MakeArray (_fgda ...);
};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fcc :=NewPdfAction ();_add :=&PdfActionThread {};_add .PdfAction =_fcc ;_fcc .SetContext (_add );return _add ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_faefc :=&PdfColorspaceLab {};_faefc .BlackPoint =[]float64 {0.0,0.0,0.0};_faefc .Range =[]float64 {-100,100,-100,100};return _faefc ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_bgga *PdfColorCalRGB )GetNumComponents ()int {return 3};

// SetAction sets the PDF action for the annotation link.
func (_fef *PdfAnnotationLink )SetAction (action *PdfAction ){_fef ._ecad =action ;if action ==nil {_fef .A =nil ;};};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_fgec *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_bbf *PdfAnnotationMarkup )appendToPdfDictionary (_degb *_gb .PdfObjectDictionary ){_degb .SetIfNotNil ("\u0054",_bbf .T );if _bbf .Popup !=nil {_degb .Set ("\u0050\u006f\u0070u\u0070",_bbf .Popup .ToPdfObject ());
};_degb .SetIfNotNil ("\u0043\u0041",_bbf .CA );_degb .SetIfNotNil ("\u0052\u0043",_bbf .RC );_degb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bbf .CreationDate );_degb .SetIfNotNil ("\u0049\u0052\u0054",_bbf .IRT );
_degb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bbf .Subj );_degb .SetIfNotNil ("\u0052\u0054",_bbf .RT );_degb .SetIfNotNil ("\u0049\u0054",_bbf .IT );_degb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bbf .ExData );};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ead :=NewPdfAnnotation ();_aee :=&PdfAnnotationUnderline {};_aee .PdfAnnotation =_ead ;_aee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ead .SetContext (_aee );return _aee ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_aaea *PdfReader )newPdfActionResetFormFromDict (_fgd *_gb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_fgd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fgd .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;IC _gb .PdfObject ;RO _gb .PdfObject ;OverlayText _gb .PdfObject ;Repeat _gb .PdfObject ;DA _gb .PdfObject ;Q _gb .PdfObject ;};func (_gfgc *PdfReader )newPdfAnnotationTrapNetFromDict (_dgbc *_gb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_ccegg :=PdfAnnotationTrapNet {};
return &_ccegg ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_gfdc :=NewPdfAnnotation ();_dgf :=&PdfAnnotationPrinterMark {};_dgf .PdfAnnotation =_gfdc ;_gfdc .SetContext (_dgf );return _dgf ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gdfg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gdfg .AlternateSpace ==nil {return nil ,_dd .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _gdfg .AlternateSpace .ColorToRGB (color );};

// GetCerts returns the signature certificate chain.
func (_cbdcd *PdfSignature )GetCerts ()([]*_g .Certificate ,error ){var _eabga []func ()([]*_g .Certificate ,error );switch _dfafe ,_ :=_gb .GetNameVal (_cbdcd .SubFilter );_dfafe {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_eabga =append (_eabga ,_cbdcd .extractChainFromPKCS7 ,_cbdcd .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_eabga =append (_eabga ,_cbdcd .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_eabga =append (_eabga ,_cbdcd .extractChainFromPKCS7 );
default:return nil ,_b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_dfafe );};for _ ,_bbeae :=range _eabga {_fdcfa ,_cffgb :=_bbeae ();if _cffgb !=nil {return nil ,_cffgb ;
};if len (_fdcfa )> 0{return _fdcfa ,nil ;};};return nil ,ErrSignNoCertificates ;};var _ _gb .PdfObject =&pdfSignDictionary {};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _gb .PdfObject )(_gb .PdfObjectName ,error ){var _efcb *_gb .PdfObjectName ;var _aafd *_gb .PdfObjectArray ;if _aeff ,_bdbf :=obj .(*_gb .PdfIndirectObject );_bdbf {if _ceeg ,_edec :=_aeff .PdfObject .(*_gb .PdfObjectArray );
_edec {_aafd =_ceeg ;}else if _fbac ,_eaaa :=_aeff .PdfObject .(*_gb .PdfObjectName );_eaaa {_efcb =_fbac ;};}else if _aeeb ,_eafg :=obj .(*_gb .PdfObjectArray );_eafg {_aafd =_aeeb ;}else if _agae ,_dbffb :=obj .(*_gb .PdfObjectName );_dbffb {_efcb =_agae ;
};if _efcb !=nil {switch *_efcb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_efcb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_efcb ,nil ;
};};if _aafd !=nil &&_aafd .Len ()> 0{if _baaa ,_dbee :=_aafd .Get (0).(*_gb .PdfObjectName );_dbee {switch *_baaa {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _aafd .Len ()==1{return *_baaa ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_baaa ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_baaa ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_baaa ,nil ;};};};return "",nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cbe :=NewPdfAction ();_aaa :=&PdfActionImportData {};_aaa .PdfAction =_cbe ;_cbe .SetContext (_aaa );return _aaa ;};

// Initialize initializes the PdfSignature.
func (_gffgg *PdfSignature )Initialize ()error {if _gffgg .Handler ==nil {return _dd .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gffgg .Handler .InitSignature (_gffgg );};func _aadac (_fbfb _gb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_acee :=NewPdfColorspaceSpecialIndexed ();if _gfeggd ,_ebdd :=_fbfb .(*_gb .PdfIndirectObject );_ebdd {_acee ._gedfd =_gfeggd ;
};_fbfb =_gb .TraceToDirectObject (_fbfb );_cfbgb ,_ffde :=_fbfb .(*_gb .PdfObjectArray );if !_ffde {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfbgb .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_fbfb =_cfbgb .Get (0);_ebgb ,_ffde :=_fbfb .(*_gb .PdfObjectName );if !_ffde {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_ebgb !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_fbfb =_cfbgb .Get (1);_dbdf ,_fcdd :=DetermineColorspaceNameFromPdfObject (_fbfb );if _fcdd !=nil {return nil ,_fcdd ;};if _dbdf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_dbdf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ag .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_dbdf );
return nil ,_abef ;};_ceef ,_fcdd :=NewPdfColorspaceFromPdfObject (_fbfb );if _fcdd !=nil {return nil ,_fcdd ;};_acee .Base =_ceef ;_fbfb =_cfbgb .Get (2);_decc ,_fcdd :=_gb .GetNumberAsInt64 (_fbfb );if _fcdd !=nil {return nil ,_fcdd ;};if _decc > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_acee .HiVal =int (_decc );_fbfb =_cfbgb .Get (3);_acee .Lookup =_fbfb ;_fbfb =_gb .TraceToDirectObject (_fbfb );var _bacg []byte ;if _geda ,_bfef :=_fbfb .(*_gb .PdfObjectString );_bfef {_bacg =_geda .Bytes ();_ag .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_bacg );
}else if _acfge ,_adbg :=_fbfb .(*_gb .PdfObjectStream );_adbg {_ag .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_fbfb .String ());_ag .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_acfge .Stream ),_acfge .Stream );
_ecada ,_fgbbe :=_gb .DecodeStream (_acfge );if _fgbbe !=nil {return nil ,_fgbbe ;};_ag .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_ecada ),_ecada );_bacg =_ecada ;}else {_ag .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fbfb );
return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_bacg )< _acee .Base .GetNumComponents ()*(_acee .HiVal +1){_ag .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ag .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_bacg ),_acee .Base .GetNumComponents (),_acee .HiVal );
}else {_bacg =_bacg [:_acee .Base .GetNumComponents ()*(_acee .HiVal +1)];};_acee ._dbbf =_bacg ;return _acee ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// AddAnnotation appends `annot` to the list of page annotations.
func (_bdbacb *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bdbacb ._gccef ==nil {_bdbacb .GetAnnotations ();};_bdbacb ._gccef =append (_bdbacb ._gccef ,annot );};func (_feab *PdfReader )newPdfAnnotationFromIndirectObject (_gbbd *_gb .PdfIndirectObject )(*PdfAnnotation ,error ){_gdg ,_fdec :=_gbbd .PdfObject .(*_gb .PdfObjectDictionary );
if !_fdec {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_feab ._dcafc .GetModelFromPrimitive (_gdg );model !=nil {_cbbb ,_def :=model .(*PdfAnnotation );if !_def {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _cbbb ,nil ;};_bbc :=&PdfAnnotation {};_bbc ._gbac =_gbbd ;_feab ._dcafc .Register (_gdg ,_bbc );if _gfdf :=_gdg .Get ("\u0054\u0079\u0070\u0065");_gfdf !=nil {_acb ,_bcaa :=_gfdf .(*_gb .PdfObjectName );if !_bcaa {_ag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfdf );
}else {if *_acb !="\u0041\u006e\u006eo\u0074"{_ag .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_acb );};};};if _dfec :=_gdg .Get ("\u0052\u0065\u0063\u0074");
_dfec !=nil {_bbc .Rect =_dfec ;};if _bced :=_gdg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bced !=nil {_bbc .Contents =_bced ;};if _aaac :=_gdg .Get ("\u0050");_aaac !=nil {_bbc .P =_aaac ;};if _fgdc :=_gdg .Get ("\u004e\u004d");_fgdc !=nil {_bbc .NM =_fgdc ;
};if _cef :=_gdg .Get ("\u004d");_cef !=nil {_bbc .M =_cef ;};if _efba :=_gdg .Get ("\u0046");_efba !=nil {_bbc .F =_efba ;};if _bdba :=_gdg .Get ("\u0041\u0050");_bdba !=nil {_bbc .AP =_bdba ;};if _bfae :=_gdg .Get ("\u0041\u0053");_bfae !=nil {_bbc .AS =_bfae ;
};if _bfdf :=_gdg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bfdf !=nil {_bbc .Border =_bfdf ;};if _gefe :=_gdg .Get ("\u0043");_gefe !=nil {_bbc .C =_gefe ;};if _ffg :=_gdg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_ffg !=nil {_bbc .StructParent =_ffg ;};if _fdfa :=_gdg .Get ("\u004f\u0043");_fdfa !=nil {_bbc .OC =_fdfa ;};_cbdg :=_gdg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _cbdg ==nil {_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_bbc ._gccb =nil ;return _bbc ,nil ;};_cde ,_bde :=_cbdg .(*_gb .PdfObjectName );if !_bde {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbdg );
return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_cbdg );};switch *_cde {case "\u0054\u0065\u0078\u0074":_aabb ,_ggc :=_feab .newPdfAnnotationTextFromDict (_gdg );
if _ggc !=nil {return nil ,_ggc ;};_aabb .PdfAnnotation =_bbc ;_bbc ._gccb =_aabb ;return _bbc ,nil ;case "\u004c\u0069\u006e\u006b":_efce ,_bafc :=_feab .newPdfAnnotationLinkFromDict (_gdg );if _bafc !=nil {return nil ,_bafc ;};_efce .PdfAnnotation =_bbc ;
_bbc ._gccb =_efce ;return _bbc ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_ggce ,_bbg :=_feab .newPdfAnnotationFreeTextFromDict (_gdg );if _bbg !=nil {return nil ,_bbg ;};_ggce .PdfAnnotation =_bbc ;_bbc ._gccb =_ggce ;return _bbc ,nil ;
case "\u004c\u0069\u006e\u0065":_gec ,_adc :=_feab .newPdfAnnotationLineFromDict (_gdg );if _adc !=nil {return nil ,_adc ;};_gec .PdfAnnotation =_bbc ;_bbc ._gccb =_gec ;_ag .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bbc ,_bbc );
_ag .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_gec ,_gec );_ag .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_gec .PdfAnnotationMarkup ,_gec .PdfAnnotationMarkup );
return _bbc ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_gade ,_aabe :=_feab .newPdfAnnotationSquareFromDict (_gdg );if _aabe !=nil {return nil ,_aabe ;};_gade .PdfAnnotation =_bbc ;_bbc ._gccb =_gade ;return _bbc ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_dcb ,_eeec :=_feab .newPdfAnnotationCircleFromDict (_gdg );
if _eeec !=nil {return nil ,_eeec ;};_dcb .PdfAnnotation =_bbc ;_bbc ._gccb =_dcb ;return _bbc ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_edc ,_dcdg :=_feab .newPdfAnnotationPolygonFromDict (_gdg );if _dcdg !=nil {return nil ,_dcdg ;};_edc .PdfAnnotation =_bbc ;
_bbc ._gccb =_edc ;return _bbc ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_gcd ,_efca :=_feab .newPdfAnnotationPolyLineFromDict (_gdg );if _efca !=nil {return nil ,_efca ;};_gcd .PdfAnnotation =_bbc ;_bbc ._gccb =_gcd ;return _bbc ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_gaaa ,_dafc :=_feab .newPdfAnnotationHighlightFromDict (_gdg );if _dafc !=nil {return nil ,_dafc ;};_gaaa .PdfAnnotation =_bbc ;_bbc ._gccb =_gaaa ;return _bbc ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gcdf ,_baea :=_feab .newPdfAnnotationUnderlineFromDict (_gdg );
if _baea !=nil {return nil ,_baea ;};_gcdf .PdfAnnotation =_bbc ;_bbc ._gccb =_gcdf ;return _bbc ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_edb ,_fdbe :=_feab .newPdfAnnotationSquigglyFromDict (_gdg );if _fdbe !=nil {return nil ,_fdbe ;
};_edb .PdfAnnotation =_bbc ;_bbc ._gccb =_edb ;return _bbc ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_fbce ,_faag :=_feab .newPdfAnnotationStrikeOut (_gdg );if _faag !=nil {return nil ,_faag ;};_fbce .PdfAnnotation =_bbc ;_bbc ._gccb =_fbce ;
return _bbc ,nil ;case "\u0043\u0061\u0072e\u0074":_badg ,_aagf :=_feab .newPdfAnnotationCaretFromDict (_gdg );if _aagf !=nil {return nil ,_aagf ;};_badg .PdfAnnotation =_bbc ;_bbc ._gccb =_badg ;return _bbc ,nil ;case "\u0053\u0074\u0061m\u0070":_eabe ,_ddg :=_feab .newPdfAnnotationStampFromDict (_gdg );
if _ddg !=nil {return nil ,_ddg ;};_eabe .PdfAnnotation =_bbc ;_bbc ._gccb =_eabe ;return _bbc ,nil ;case "\u0049\u006e\u006b":_eeag ,_aeed :=_feab .newPdfAnnotationInkFromDict (_gdg );if _aeed !=nil {return nil ,_aeed ;};_eeag .PdfAnnotation =_bbc ;_bbc ._gccb =_eeag ;
return _bbc ,nil ;case "\u0050\u006f\u0070u\u0070":_ebe ,_gdeg :=_feab .newPdfAnnotationPopupFromDict (_gdg );if _gdeg !=nil {return nil ,_gdeg ;};_ebe .PdfAnnotation =_bbc ;_bbc ._gccb =_ebe ;return _bbc ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_cceg ,_acdf :=_feab .newPdfAnnotationFileAttachmentFromDict (_gdg );
if _acdf !=nil {return nil ,_acdf ;};_cceg .PdfAnnotation =_bbc ;_bbc ._gccb =_cceg ;return _bbc ,nil ;case "\u0053\u006f\u0075n\u0064":_ecg ,_bfcb :=_feab .newPdfAnnotationSoundFromDict (_gdg );if _bfcb !=nil {return nil ,_bfcb ;};_ecg .PdfAnnotation =_bbc ;
_bbc ._gccb =_ecg ;return _bbc ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_dfge ,_ceafc :=_feab .newPdfAnnotationRichMediaFromDict (_gdg );if _ceafc !=nil {return nil ,_ceafc ;};_dfge .PdfAnnotation =_bbc ;_bbc ._gccb =_dfge ;return _bbc ,nil ;
case "\u004d\u006f\u0076i\u0065":_abbg ,_ceec :=_feab .newPdfAnnotationMovieFromDict (_gdg );if _ceec !=nil {return nil ,_ceec ;};_abbg .PdfAnnotation =_bbc ;_bbc ._gccb =_abbg ;return _bbc ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_faaa ,_dae :=_feab .newPdfAnnotationScreenFromDict (_gdg );
if _dae !=nil {return nil ,_dae ;};_faaa .PdfAnnotation =_bbc ;_bbc ._gccb =_faaa ;return _bbc ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gbc ,_fed :=_feab .newPdfAnnotationWidgetFromDict (_gdg );if _fed !=nil {return nil ,_fed ;};_gbc .PdfAnnotation =_bbc ;
_bbc ._gccb =_gbc ;return _bbc ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_fedf ,_bcdd :=_feab .newPdfAnnotationPrinterMarkFromDict (_gdg );if _bcdd !=nil {return nil ,_bcdd ;};_fedf .PdfAnnotation =_bbc ;_bbc ._gccb =_fedf ;
return _bbc ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cff ,_faeg :=_feab .newPdfAnnotationTrapNetFromDict (_gdg );if _faeg !=nil {return nil ,_faeg ;};_cff .PdfAnnotation =_bbc ;_bbc ._gccb =_cff ;return _bbc ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ddb ,_dcga :=_feab .newPdfAnnotationWatermarkFromDict (_gdg );
if _dcga !=nil {return nil ,_dcga ;};_ddb .PdfAnnotation =_bbc ;_bbc ._gccb =_ddb ;return _bbc ,nil ;case "\u0033\u0044":_bgb ,_efge :=_feab .newPdfAnnotation3DFromDict (_gdg );if _efge !=nil {return nil ,_efge ;};_bgb .PdfAnnotation =_bbc ;_bbc ._gccb =_bgb ;
return _bbc ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_fccb ,_aaacf :=_feab .newPdfAnnotationProjectionFromDict (_gdg );if _aaacf !=nil {return nil ,_aaacf ;};_fccb .PdfAnnotation =_bbc ;_bbc ._gccb =_fccb ;return _bbc ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_eda ,_edg :=_feab .newPdfAnnotationRedactFromDict (_gdg );if _edg !=nil {return nil ,_edg ;};_eda .PdfAnnotation =_bbc ;_bbc ._gccb =_eda ;return _bbc ,nil ;};_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cde );
return nil ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};var _decde =_bd .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_cgdd *PdfFont )GetCharMetrics (code _eaf .CharCode )(CharMetrics ,bool ){var _eafea _ed .CharMetrics ;switch _dabc :=_cgdd ._faee .(type ){case *pdfFontSimple :if _dbcfc ,_aefb :=_dabc .GetCharMetrics (code );_aefb {return _dbcfc ,_aefb ;};case *pdfFontType0 :if _beab ,_gacgb :=_dabc .GetCharMetrics (code );
_gacgb {return _beab ,_gacgb ;};case *pdfCIDFontType0 :if _edgad ,_eadeeb :=_dabc .GetCharMetrics (code );_eadeeb {return _edgad ,_eadeeb ;};case *pdfCIDFontType2 :if _fdab ,_fabefb :=_dabc .GetCharMetrics (code );_fabefb {return _fdab ,_fabefb ;};default:_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_cgdd ._faee );
return _eafea ,false ;};if _gafga ,_gegdf :=_cgdd .GetFontDescriptor ();_gegdf ==nil &&_gafga !=nil {return _ed .CharMetrics {Wx :_gafga ._fffa },true ;};_ag .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_cgdd );
return _eafea ,false ;};func (_gfcbcg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gggc *PdfPageResources )AddExtGState (gsName _gb .PdfObjectName ,gsDict _gb .PdfObject )error {if _gggc .ExtGState ==nil {_gggc .ExtGState =_gb .MakeDict ();};_dbdg :=_gggc .ExtGState ;_ggbeg ,_feagc :=_gb .TraceToDirectObject (_dbdg ).(*_gb .PdfObjectDictionary );
if !_feagc {_ag .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_dbdg ,_gb .TraceToDirectObject (_dbdg ));
return _gb .ErrTypeError ;};_ggbeg .Set (gsName ,gsDict );return nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _gb .PdfObject ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bbaca *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bbaca .baseFields ()._gdef !=nil {return _bbaca .baseFields ()._gdef ;};if _ddcbe :=_bbaca ._faee .getFontDescriptor ();_ddcbe !=nil {return _ddcbe ;};_ag .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bbaca );
return nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_fdcca *PdfPage )AppendContentStream (contentStr string )error {_faae ,_ffffe :=_fdcca .GetContentStreams ();if _ffffe !=nil {return _ffffe ;};if len (_faae )==0{_faae =[]string {contentStr };return _fdcca .SetContentStreams (_faae ,_gb .NewFlateEncoder ());
};var _acda _df .Buffer ;_acda .WriteString (_faae [len (_faae )-1]);_acda .WriteString ("\u000a");_acda .WriteString (contentStr );_faae [len (_faae )-1]=_acda .String ();return _fdcca .SetContentStreams (_faae ,_gb .NewFlateEncoder ());};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_ddbd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_dd .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cfdec ,_dcgd :=_aag .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aggec ,img ._fbga );if _dcgd !=nil {return img ,_dcgd ;};_bbca ,_dcgd :=_aag .NRGBAConverter .Convert (_cfdec );if _dcgd !=nil {return img ,_dcgd ;
};_fabbe :=_dcgf (_bbca .Base ());_ag .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ag .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ag .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fabbe .Data );
_ag .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fabbe );return _fabbe ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_ecdabg *PdfWriter )SetRotation (rotate int64 )error {_bffc ,_fadgf :=_gb .GetDict (_ecdabg ._aecef );if !_fadgf {return ErrTypeCheck ;};_bffc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gb .MakeInteger (rotate ));return nil ;};func (_dbdd *PdfAppender )mergeResources (_gbf ,_ccab _gb .PdfObject ,_dad map[_gb .PdfObjectName ]_gb .PdfObjectName )_gb .PdfObject {if _ccab ==nil &&_gbf ==nil {return nil ;
};if _ccab ==nil {return _gbf ;};_bceb ,_fccbb :=_gb .GetDict (_ccab );if !_fccbb {return _gbf ;};if _gbf ==nil {_gecb :=_gb .MakeDict ();_gecb .Merge (_bceb );return _ccab ;};_dfecc ,_fccbb :=_gb .GetDict (_gbf );if !_fccbb {_ag .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_dfecc =_gb .MakeDict ();};for _ ,_eegd :=range _bceb .Keys (){if _gead ,_bgd :=_dad [_eegd ];_bgd {_dfecc .Set (_gead ,_bceb .Get (_eegd ));}else {_dfecc .Set (_eegd ,_bceb .Get (_eegd ));};};return _dfecc ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gdff *PdfOutlineItem )GetContainingPdfObject ()_gb .PdfObject {return _gdff ._abacg };

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_efedg *PdfPageResources )GenerateXObjectName ()_gb .PdfObjectName {_bdaad :=1;for {_fcdfb :=_gb .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_bdaad ));if !_efedg .HasXObjectByName (*_fcdfb ){return *_fcdfb ;};_bdaad ++;};};func _dfgbb (_cafa *_gb .PdfObjectDictionary )*VRI {_gfdg ,_ :=_gb .GetString (_cafa .Get ("\u0054\u0055"));
_dfdee ,_ :=_gb .GetString (_cafa .Get ("\u0054\u0053"));return &VRI {Cert :_gdegb (_cafa .Get ("\u0043\u0065\u0072\u0074")),OCSP :_gdegb (_cafa .Get ("\u004f\u0043\u0053\u0050")),CRL :_gdegb (_cafa .Get ("\u0043\u0052\u004c")),TU :_gfdg ,TS :_dfdee };
};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_fcgdfe *XObjectImage )ToImage ()(*Image ,error ){_aafbd :=&Image {};if _fcgdfe .Height ==nil {return nil ,_dd .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_aafbd .Height =*_fcgdfe .Height ;if _fcgdfe .Width ==nil {return nil ,_dd .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_aafbd .Width =*_fcgdfe .Width ;if _fcgdfe .BitsPerComponent ==nil {switch _fcgdfe .Filter .(type ){case *_gb .CCITTFaxEncoder ,*_gb .JBIG2Encoder :_aafbd .BitsPerComponent =1;
case *_gb .LZWEncoder ,*_gb .RunLengthEncoder :_aafbd .BitsPerComponent =8;default:return nil ,_dd .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_aafbd .BitsPerComponent =*_fcgdfe .BitsPerComponent ;};_aafbd .ColorComponents =_fcgdfe .ColorSpace .GetNumComponents ();_fcgdfe ._debde .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gb .MakeInteger (int64 (_aafbd .ColorComponents )));
_bfbg ,_cbeag :=_gb .DecodeStream (_fcgdfe ._debde );if _cbeag !=nil {return nil ,_cbeag ;};_aafbd .Data =_bfbg ;if _fcgdfe .Decode !=nil {_bbgf ,_gccbf :=_fcgdfe .Decode .(*_gb .PdfObjectArray );if !_gccbf {_ag .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_dd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bgee ,_gfgba :=_bbgf .ToFloat64Array ();if _gfgba !=nil {return nil ,_gfgba ;};_aafbd ._fbga =_bgee ;};return _aafbd ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fddce *PdfPattern )GetContainingPdfObject ()_gb .PdfObject {return _fddce ._egddg };

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_geg :=&PdfAppender {_cdef :reader ._aabg ,Reader :reader ,_fgeb :reader ._faefdf ,_egce :reader ._eccbb };_aafb ,_bfag :=_geg ._cdef .Seek (0,_fg .SeekEnd );if _bfag !=nil {return nil ,_bfag ;
};_geg ._ggg =_aafb ;if _ ,_bfag =_geg ._cdef .Seek (0,_fg .SeekStart );_bfag !=nil {return nil ,_bfag ;};_geg ._cbaab ,_bfag =NewPdfReader (_geg ._cdef );if _bfag !=nil {return nil ,_bfag ;};for _ ,_bbgb :=range _geg .Reader .GetObjectNums (){if _geg ._fead < _bbgb {_geg ._fead =_bbgb ;
};};_geg ._fgea =_geg ._fgeb .GetXrefTable ();_geg ._cdbf =_geg ._fgeb .GetXrefOffset ();_geg ._bbgcg =append (_geg ._bbgcg ,_geg ._cbaab .PageList ...);_geg ._eeed =make (map[_gb .PdfObject ]struct{});_geg ._bdega =make (map[_gb .PdfObject ]int64 );_geg ._bafa =make (map[_gb .PdfObject ]struct{});
_geg ._bdf =_geg ._cbaab .AcroForm ;_geg ._bggg =_geg ._cbaab .DSS ;return _geg ,nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _gb .PdfObject ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_bfba *PdfColorspaceDeviceN )ToPdfObject ()_gb .PdfObject {_cefb :=_gb .MakeArray (_gb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_cefb .Append (_bfba .ColorantNames );_cefb .Append (_bfba .AlternateSpace .ToPdfObject ());_cefb .Append (_bfba .TintTransform .ToPdfObject ());
if _bfba .Attributes !=nil {_cefb .Append (_bfba .Attributes .ToPdfObject ());};if _bfba ._aebe !=nil {_bfba ._aebe .PdfObject =_cefb ;return _bfba ._aebe ;};return _cefb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_dcaee *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeba :=vals [0];if _aeba < 0.0||_aeba > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bcaf :=vals [1];if _bcaf < 0.0||_bcaf > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbgc :=vals [2];if _gbgc < 0.0||_gbgc > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_baefd :=NewPdfColorDeviceRGB (_aeba ,_bcaf ,_gbgc );return _baefd ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_ceaba *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bfgfd :=func (_ddge float64 )float64 {if _ddge >=6.0/29{return _ddge *_ddge *_ddge ;};return 108.0/841*(_ddge -4/29);};_bdbb :=img ._fbga ;if len (_bdbb )!=6{_ag .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_bdbb =_ceaba .DecodeArray ();};_bbcfd :=_bad .NewReader (img .getBase ());_dacc :=_aag .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._aggec ,img ._fbga );_abgf :=_bad .NewWriter (_dacc );_ffba :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;
_bbff :=make ([]uint32 ,3);var (_agbg error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_aafa ,_cbbe ,_afec float64 ;);for {_agbg =_bbcfd .ReadSamples (_bbff );if _agbg ==_fg .EOF {break ;}else if _agbg !=nil {return img ,_agbg ;};Ls =float64 (_bbff [0])/_ffba ;As =float64 (_bbff [1])/_ffba ;
Bs =float64 (_bbff [2])/_ffba ;Ls =_aag .LinearInterpolate (Ls ,0.0,1.0,_bdbb [0],_bdbb [1]);As =_aag .LinearInterpolate (As ,0.0,1.0,_bdbb [2],_bdbb [3]);Bs =_aag .LinearInterpolate (Bs ,0.0,1.0,_bdbb [4],_bdbb [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_ceaba .WhitePoint [0]*_bfgfd (L );Y =_ceaba .WhitePoint [1]*_bfgfd (M );Z =_ceaba .WhitePoint [2]*_bfgfd (N );_aafa =3.240479*X +-1.537150*Y +-0.498535*Z ;_cbbe =-0.969256*X +1.875992*Y +0.041556*Z ;_afec =0.055648*X +-0.204043*Y +1.057311*Z ;
_aafa =_ga .Min (_ga .Max (_aafa ,0),1.0);_cbbe =_ga .Min (_ga .Max (_cbbe ,0),1.0);_afec =_ga .Min (_ga .Max (_afec ,0),1.0);_bbff [0]=uint32 (_aafa *_ffba );_bbff [1]=uint32 (_cbbe *_ffba );_bbff [2]=uint32 (_afec *_ffba );if _agbg =_abgf .WriteSamples (_bbff );
_agbg !=nil {return img ,_agbg ;};};return _dcgf (&_dacc ),nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_ceee *PdfField )FullName ()(string ,error ){var _beadf _df .Buffer ;_ccee :=[]string {};if _ceee .T !=nil {_ccee =append (_ccee ,_ceee .T .Decoded ());};_cgcd :=map[*PdfField ]bool {};_cgcd [_ceee ]=true ;_acdfa :=_ceee .Parent ;for _acdfa !=nil {if _ ,_ebed :=_cgcd [_acdfa ];
_ebed {return _beadf .String (),_dd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _acdfa .T ==nil {return _beadf .String (),_dd .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_ccee =append (_ccee ,_acdfa .T .Decoded ());_cgcd [_acdfa ]=true ;_acdfa =_acdfa .Parent ;};for _gdaa :=len (_ccee )-1;_gdaa >=0;_gdaa --{_beadf .WriteString (_ccee [_gdaa ]);if _gdaa > 0{_beadf .WriteString ("\u002e");};};return _beadf .String (),nil ;
};func (_eacf *PdfReader )newPdfAnnotationUnderlineFromDict (_edcb *_gb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_cddd :=PdfAnnotationUnderline {};_bgeg ,_cfea :=_eacf .newPdfAnnotationMarkupFromDict (_edcb );if _cfea !=nil {return nil ,_cfea ;
};_cddd .PdfAnnotationMarkup =_bgeg ;_cddd .QuadPoints =_edcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cddd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gaa *PdfAction )ToPdfObject ()_gb .PdfObject {_gg :=_gaa ._gae ;_de :=_gg .PdfObject .(*_gb .PdfObjectDictionary );_de .Clear ();_de .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_de .SetIfNotNil ("\u0053",_gaa .S );
_de .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gaa .Next );return _gg ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_gaag :=NewPdfAnnotation ();_fgg :=&PdfAnnotationFileAttachment {};_fgg .PdfAnnotation =_gaag ;_fgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaag .SetContext (_fgg );return _fgg ;
};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_cbagg *PdfReader )Decrypt (password []byte )(bool ,error ){_debe ,_caaff :=_cbagg ._faefdf .Decrypt (password );if _caaff !=nil {return false ,_caaff ;};if !_debe {return false ,nil ;};_caaff =_cbagg .loadStructure ();if _caaff !=nil {_ag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_caaff );
return false ,_caaff ;};return true ,nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func (_bgbgf *PdfAcroForm )filteredFields (_aaacd FieldFilterFunc ,_edecgb bool )[]*PdfField {if _bgbgf ==nil {return nil ;};return _afdbg (_bgbgf .Fields ,_aaacd ,_edecgb );};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _gb .PdfObject ;Mac _gb .PdfObject ;Unix _gb .PdfObject ;NewWindow _gb .PdfObject ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _gb .PdfObject ;H _gb .PdfObject ;};func (_gbae *pdfFontSimple )updateStandard14Font (){_acega ,_fdgce :=_gbae .Encoder ().(_eaf .SimpleEncoder );if !_fdgce {_ag .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_gbae .Encoder (),_gbae );
return ;};_cdbcc :=_acega .Charcodes ();_gbae ._ggdff =make (map[_eaf .CharCode ]float64 ,len (_cdbcc ));for _ ,_fgfb :=range _cdbcc {_efccf ,_ :=_acega .CharcodeToRune (_fgfb );_dcbd ,_ :=_gbae ._fbefa .Read (_efccf );_gbae ._ggdff [_fgfb ]=_dcbd .Wx ;
};};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gbfg *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _gb .PdfObject ;Popup *PdfAnnotationPopup ;CA _gb .PdfObject ;RC _gb .PdfObject ;CreationDate _gb .PdfObject ;IRT _gb .PdfObject ;Subj _gb .PdfObject ;RT _gb .PdfObject ;IT _gb .PdfObject ;ExData _gb .PdfObject ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_gb .PdfObjectArray ;TI *_gb .PdfObjectInteger ;I *_gb .PdfObjectArray ;};func (_daeb *LTV )buildCertChain (_bdfb ,_beadc []*_g .Certificate )([]*_g .Certificate ,map[string ]*_g .Certificate ,error ){_bdbfc :=map[string ]*_g .Certificate {};
for _ ,_ddcbg :=range _bdfb {_bdbfc [_ddcbg .Subject .CommonName ]=_ddcbg ;};_dccd :=_bdfb ;for _ ,_acea :=range _beadc {_ffee :=_acea .Subject .CommonName ;if _ ,_fdfba :=_bdbfc [_ffee ];_fdfba {continue ;};_bdbfc [_ffee ]=_acea ;_dccd =append (_dccd ,_acea );
};if len (_dccd )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ebfgc error ;for _cbdge :=_dccd [0];_cbdge !=nil &&!_daeb .CertClient .IsCA (_cbdge );{_agdeb ,_ddeea :=_bdbfc [_cbdge .Issuer .CommonName ];if !_ddeea {if _agdeb ,_ebfgc =_daeb .CertClient .GetIssuer (_cbdge );
_ebfgc !=nil {_ag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ebfgc );
break ;};_bdbfc [_cbdge .Issuer .CommonName ]=_agdeb ;_dccd =append (_dccd ,_agdeb );};_cbdge =_agdeb ;};return _dccd ,_bdbfc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eef *PdfAnnotationFileAttachment )ToPdfObject ()_gb .PdfObject {_eef .PdfAnnotation .ToPdfObject ();_cgb :=_eef ._gbac ;_badb :=_cgb .PdfObject .(*_gb .PdfObjectDictionary );_eef .PdfAnnotationMarkup .appendToPdfDictionary (_badb );_badb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_badb .SetIfNotNil ("\u0046\u0053",_eef .FS );_badb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eef .Name );return _cgb ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dgcaf *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beegd :=vals [0];if _beegd < 0.0||_beegd > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bdag :=vals [1];if _bdag < 0.0||_bdag > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbaa :=vals [2];if _bbaa < 0.0||_bbaa > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_aagea :=vals [3];if _aagea < 0.0||_aagea > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aafba :=NewPdfColorDeviceCMYK (_beegd ,_bdag ,_bbaa ,_aagea );return _aafba ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_cea :=NewPdfAction ();_fd :=&PdfActionGoTo3DView {};_fd .PdfAction =_cea ;_cea .SetContext (_fd );return _fd ;};func (_cffdgc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _cffdgc ._faefdf .GetCrypter ()!=nil &&!_cffdgc ._faefdf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dabag :=_cffdgc ._ddecd ;_gecbc :=_dabag .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gecbc ==nil {return nil ,nil ;};_bedbd ,_ :=_gb .GetIndirect (_gecbc );_gecbc =_gb .TraceToDirectObject (_gecbc );if _gb .IsNullObject (_gecbc ){_ag .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_cgede ,_ffdef :=_gb .GetDict (_gecbc );if !_ffdef {_ag .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gecbc );_ag .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gecbc );};_ag .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ag .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_cffdgc ._cddff {_bbdc :=_cffdgc .traverseObjectData (_cgede );
if _bbdc !=nil {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_bbdc );
return nil ,_bbdc ;};};_fdfcb ,_cfgeg :=_cffdgc .newPdfAcroFormFromDict (_bedbd ,_cgede );if _cfgeg !=nil {return nil ,_cfgeg ;};return _fdfcb ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_gb .PdfObjectInteger ;TilingType *_gb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_gb .PdfObjectFloat ;YStep *_gb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_gb .PdfObjectArray ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_egea :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_egea ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_cfdb *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dgad *PdfColorspaceLab )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efgef ,_dbec :=_gb .GetNumbersAsFloat (objects );
if _dbec !=nil {return nil ,_dbec ;};return _dgad .ColorFromFloats (_efgef );};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_eeea *PdfColorspaceLab )DecodeArray ()[]float64 {_ggfc :=[]float64 {0,100};if _eeea .Range !=nil &&len (_eeea .Range )==4{_ggfc =append (_ggfc ,_eeea .Range ...);}else {_ggfc =append (_ggfc ,-100,100,-100,100);};return _ggfc ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gb .PdfObject ;LE _gb .PdfObject ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;IT _gb .PdfObject ;Measure _gb .PdfObject ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _gb .StreamEncoder ;Intent _gb .PdfObject ;ImageMask _gb .PdfObject ;Mask _gb .PdfObject ;Matte _gb .PdfObject ;Decode _gb .PdfObject ;Interpolate _gb .PdfObject ;Alternatives _gb .PdfObject ;
SMask _gb .PdfObject ;SMaskInData _gb .PdfObject ;Name _gb .PdfObject ;StructParent _gb .PdfObject ;ID _gb .PdfObject ;OPI _gb .PdfObject ;Metadata _gb .PdfObject ;OC _gb .PdfObject ;Stream []byte ;_debde *_gb .PdfObjectStream ;};

// SetForms sets the Acroform for a PDF file.
func (_cdfge *PdfWriter )SetForms (form *PdfAcroForm )error {_cdfge ._gcafc =form ;return nil };

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_fbab *PdfFieldButton )IsCheckbox ()bool {return _fbab .GetType ()==ButtonTypeCheckbox };var _gedffg =_bd .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");


// GetXObjectByName gets XObject by name.
func (_ddcdc *PdfPage )GetXObjectByName (name _gb .PdfObjectName )(_gb .PdfObject ,bool ){_cgcaf ,_agedg :=_ddcdc .Resources .XObject .(*_gb .PdfObjectDictionary );if !_agedg {return nil ,false ;};if _bgfa :=_cgcaf .Get (name );_bgfa !=nil {return _bgfa ,true ;
};return nil ,false ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_eaabc pdfFontSimple )GetCharMetrics (code _eaf .CharCode )(_ed .CharMetrics ,bool ){if _affed ,_cbgb :=_eaabc ._ggdff [code ];_cbgb {return _ed .CharMetrics {Wx :_affed },true ;};if _ed .IsStdFont (_ed .StdFontName (_eaabc ._cacfa )){return _ed .CharMetrics {Wx :250},true ;
};return _ed .CharMetrics {},false ;};func _debcc ()string {_cgabb .Lock ();defer _cgabb .Unlock ();_bcfdde :=_dc .GetLicenseKey ();if len (_dead )> 0&&(_bcfdde .IsLicensed ()||_dgfca ){return _dead ;};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_ecbbb (),_bcfdde .TypeToString ());
};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aabgd *PdfPageResources )GetColorspaceByName (keyName _gb .PdfObjectName )(PdfColorspace ,bool ){_bfdfc ,_ddeccc :=_aabgd .GetColorspaces ();if _ddeccc !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ddeccc );
return nil ,false ;};if _bfdfc ==nil {return nil ,false ;};_gggf ,_cdcag :=_bfdfc .Colorspaces [string (keyName )];if !_cdcag {return nil ,false ;};return _gggf ,true ;};func (_eacg *PdfReader )newPdfAnnotation3DFromDict (_agbd *_gb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_dedfb :=PdfAnnotation3D {};
_dedfb .T3DD =_agbd .Get ("\u0033\u0044\u0044");_dedfb .T3DV =_agbd .Get ("\u0033\u0044\u0056");_dedfb .T3DA =_agbd .Get ("\u0033\u0044\u0041");_dedfb .T3DI =_agbd .Get ("\u0033\u0044\u0049");_dedfb .T3DB =_agbd .Get ("\u0033\u0044\u0042");return &_dedfb ,nil ;
};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func (_becbf *pdfFontSimple )getFontEncoding ()(_fddcg string ,_acdb map[_eaf .CharCode ]_eaf .GlyphName ,_cddfc error ){_fddcg ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _gbgdd ,_gcac :=_aaeb [_becbf ._cacfa ];_gcac {_fddcg =_gbgdd ;}else if _becbf .fontFlags ()&_gacge !=0{for _eccg ,_gggd :=range _aaeb {if _fcf .Contains (_becbf ._cacfa ,_eccg ){_fddcg =_gggd ;break ;};};};if _becbf .Encoding ==nil {return _fddcg ,nil ,nil ;
};switch _bbefe :=_becbf .Encoding .(type ){case *_gb .PdfObjectName :return string (*_bbefe ),nil ,nil ;case *_gb .PdfObjectDictionary :_adgff ,_afbeb :=_gb .GetName (_bbefe .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _afbeb {_fddcg =_adgff .String ();};if _ebcdg :=_bbefe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_ebcdg !=nil {_fbfd ,_ffgafd :=_gb .GetArray (_ebcdg );if !_ffgafd {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_bbefe ,_bbefe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_gb .ErrTypeError ;};_acdb ,_cddfc =_eaf .FromFontDifferences (_fbfd );};return _fddcg ,_acdb ,_cddfc ;default:_ag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_becbf .Encoding ,_becbf .Encoding );
return "",nil ,_gb .ErrTypeError ;};};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_ffc :=PdfColorCalGray (grayVal );return &_ffc ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_cebc *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _cebc .Range };

// C returns the value of the C component of the color.
func (_fedfb *PdfColorCalRGB )C ()float64 {return _fedfb [2]};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ebbgd *XObjectForm )GetContainingPdfObject ()_gb .PdfObject {return _ebbgd ._bfaeg };

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_bggfa *PdfFont )ToPdfObject ()_gb .PdfObject {if _bggfa ._faee ==nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _gb .MakeNull ();
};return _bggfa ._faee .ToPdfObject ();};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gdeed *PdfReader )GetPageLabels ()(_gb .PdfObject ,error ){_dbgaa :=_gb .ResolveReference (_gdeed ._ddecd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _dbgaa ==nil {return nil ,nil ;};if !_gdeed ._cddff {_gfgbfg :=_gdeed .traverseObjectData (_dbgaa );
if _gfgbfg !=nil {return nil ,_gfgbfg ;};};return _dbgaa ,nil ;};func _gdegdc (_aacc *_gb .PdfIndirectObject ,_cage *_gb .PdfObjectDictionary )(*DSS ,error ){if _aacc ==nil {_aacc =_gb .MakeIndirectObject (nil );};_aacc .PdfObject =_gb .MakeDict ();_cfgcc :=map[string ]*VRI {};
if _aceg ,_bgdg :=_gb .GetDict (_cage .Get ("\u0056\u0052\u0049"));_bgdg {for _ ,_eggfg :=range _aceg .Keys (){if _ddbcg ,_adbb :=_gb .GetDict (_aceg .Get (_eggfg ));_adbb {_cfgcc [_fcf .ToUpper (_eggfg .String ())]=_dfgbb (_ddbcg );};};};return &DSS {Certs :_gdegb (_cage .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_gdegb (_cage .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_gdegb (_cage .Get ("\u0043\u0052\u004c\u0073")),VRI :_cfgcc ,_ecfcf :_aacc },nil ;
};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _gb .PdfObject ;NewWindow _gb .PdfObject ;};

// R returns the value of the red component of the color.
func (_acbe *PdfColorDeviceRGB )R ()float64 {return _acbe [0]};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_efbf *PdfField )ToPdfObject ()_gb .PdfObject {_faega :=_efbf ._feag ;_adef :=_faega .PdfObject .(*_gb .PdfObjectDictionary );_ecfa :=_gb .MakeArray ();for _ ,_ddcb :=range _efbf .Kids {_ecfa .Append (_ddcb .ToPdfObject ());};for _ ,_baefc :=range _efbf .Annotations {if _baefc ._gbac !=_efbf ._feag {_ecfa .Append (_baefc .GetContext ().ToPdfObject ());
};};if _efbf .Parent !=nil {_adef .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_efbf .Parent .GetContainingPdfObject ());};if _ecfa .Len ()> 0{_adef .Set ("\u004b\u0069\u0064\u0073",_ecfa );};_adef .SetIfNotNil ("\u0046\u0054",_efbf .FT );_adef .SetIfNotNil ("\u0054",_efbf .T );
_adef .SetIfNotNil ("\u0054\u0055",_efbf .TU );_adef .SetIfNotNil ("\u0054\u004d",_efbf .TM );_adef .SetIfNotNil ("\u0046\u0066",_efbf .Ff );_adef .SetIfNotNil ("\u0056",_efbf .V );_adef .SetIfNotNil ("\u0044\u0056",_efbf .DV );_adef .SetIfNotNil ("\u0041\u0041",_efbf .AA );
return _faega ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_gb .PdfObjectStream ;OCSP []*_gb .PdfObjectStream ;CRL []*_gb .PdfObjectStream ;TU *_gb .PdfObjectString ;TS *_gb .PdfObjectString ;};

// ToPdfObject implements interface PdfModel.
func (_afc *PdfAnnotationProjection )ToPdfObject ()_gb .PdfObject {_afc .PdfAnnotation .ToPdfObject ();_afg :=_afc ._gbac ;_eeba :=_afg .PdfObject .(*_gb .PdfObjectDictionary );_afc .PdfAnnotationMarkup .appendToPdfDictionary (_eeba );return _afg ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cegg *_gb .PdfIndirectObject ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_gacgd *PdfPattern )IsTiling ()bool {return _gacgd .PatternType ==1};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _gb .PdfObject ;Movie _gb .PdfObject ;A _gb .PdfObject ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gfg :=NewPdfAnnotation ();_ded :=&PdfAnnotationWatermark {};_ded .PdfAnnotation =_gfg ;_gfg .SetContext (_ded );return _ded ;};

// ToPdfObject implements interface PdfModel.
func (_bg *PdfActionTrans )ToPdfObject ()_gb .PdfObject {_bg .PdfAction .ToPdfObject ();_egf :=_bg ._gae ;_ebc :=_egf .PdfObject .(*_gb .PdfObjectDictionary );_ebc .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeTrans )));_ebc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bg .Trans );
return _egf ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ColorToRGB converts a Lab color to an RGB color.
func (_bddc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdece :=func (_defeb float64 )float64 {if _defeb >=6.0/29{return _defeb *_defeb *_defeb ;};return 108.0/841*(_defeb -4/29);};_aaeee ,_bfcaf :=color .(*PdfColorLab );if !_bfcaf {_ag .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_aaeee .L ();AStar :=_aaeee .A ();BStar :=_aaeee .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_bddc .WhitePoint [0]*_cdece (L );Y :=_bddc .WhitePoint [1]*_cdece (M );Z :=_bddc .WhitePoint [2]*_cdece (N );_abaeb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cdcff :=-0.969256*X +1.875992*Y +0.041556*Z ;_bggb :=0.055648*X +-0.204043*Y +1.057311*Z ;
_abaeb =_ga .Min (_ga .Max (_abaeb ,0),1.0);_cdcff =_ga .Min (_ga .Max (_cdcff ,0),1.0);_bggb =_ga .Min (_ga .Max (_bggb ,0),1.0);return NewPdfColorDeviceRGB (_abaeb ,_cdcff ,_bggb ),nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dcec *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ee :=NewPdfAction ();_bcf :=&PdfActionRendition {};_bcf .PdfAction =_ee ;_ee .SetContext (_bcf );return _bcf ;};

// Y returns the value of the yellow component of the color.
func (_ggbf *PdfColorDeviceCMYK )Y ()float64 {return _ggbf [2]};func (_cagb *DSS )add (_cbbce *[]*_gb .PdfObjectStream ,_feaf map[string ]*_gb .PdfObjectStream ,_bbffb [][]byte )([]*_gb .PdfObjectStream ,error ){_eabb :=make ([]*_gb .PdfObjectStream ,0,len (_bbffb ));
for _ ,_aec :=range _bbffb {_ggec ,_abbed :=_gbbcc (_aec );if _abbed !=nil {return nil ,_abbed ;};_ecfb ,_gggg :=_feaf [string (_ggec )];if !_gggg {_ecfb ,_abbed =_gb .MakeStream (_aec ,_gb .NewRawEncoder ());if _abbed !=nil {return nil ,_abbed ;};_feaf [string (_ggec )]=_ecfb ;
*_cbbce =append (*_cbbce ,_ecfb );};_eabb =append (_eabb ,_ecfb );};return _eabb ,nil ;};

// String returns a string that describes `base`.
func (_efcba fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_efcba .coreString ());};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cfba *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ag .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ag .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ag .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ag .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bfgd ,_cbdcb :=_aag .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aggec ,img ._fbga );if _cbdcb !=nil {return Image {},_cbdcb ;};_cffd ,_cbdcb :=_aag .NRGBAConverter .Convert (_bfgd );
if _cbdcb !=nil {return Image {},_cbdcb ;};return _dcgf (_cffd .Base ()),nil ;};func (_fabgc *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _fabgc ._faefdf .GetCrypter ()!=nil &&!_fabgc ._faefdf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_eedec :=_fabgc ._ddecd ;_adab :=_eedec .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _adab ==nil {return nil ,nil ;};_ag .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_edbba :=_gb .ResolveReference (_adab );
_ag .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_edbba );if _fgcbg :=_gb .IsNullObject (_edbba );_fgcbg {_ag .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_egefac ,_facbb :=_edbba .(*_gb .PdfIndirectObject );if !_facbb {if _ ,_ddab :=_gb .GetDict (_edbba );!_ddab {_ag .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ag .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_egefac =_gb .MakeIndirectObject (_edbba );};_bggd ,_facbb :=_egefac .PdfObject .(*_gb .PdfObjectDictionary );if !_facbb {return nil ,_dd .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ag .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_bggd );_dabda ,_ ,_dadf :=_fabgc .buildOutlineTree (_egefac ,nil ,nil ,nil );if _dadf !=nil {return nil ,_dadf ;};_ag .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_dabda );
return _dabda ,nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gacff *PdfPattern )GetContext ()PdfModel {return _gacff ._gefdd };func (_ged *PdfAppender )addNewObject (_gdgd _gb .PdfObject ){if _ ,_acbb :=_ged ._eeed [_gdgd ];!_acbb {_ged ._caaf =append (_ged ._caaf ,_gdgd );_ged ._eeed [_gdgd ]=struct{}{};
};};func _bbcaa (_aeefc *_gb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_acga :=PdfShadingType5 {};_deed :=_aeefc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _deed ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fefdcg ,_bbgaf :=_deed .(*_gb .PdfObjectInteger );if !_bbgaf {_ag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_deed );
return nil ,_gb .ErrTypeError ;};_acga .BitsPerCoordinate =_fefdcg ;_deed =_aeefc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _deed ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fefdcg ,_bbgaf =_deed .(*_gb .PdfObjectInteger );if !_bbgaf {_ag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_deed );
return nil ,_gb .ErrTypeError ;};_acga .BitsPerComponent =_fefdcg ;_deed =_aeefc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _deed ==nil {_ag .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_fefdcg ,_bbgaf =_deed .(*_gb .PdfObjectInteger );if !_bbgaf {_ag .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_deed );
return nil ,_gb .ErrTypeError ;};_acga .VerticesPerRow =_fefdcg ;_deed =_aeefc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _deed ==nil {_ag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eedf ,_bbgaf :=_deed .(*_gb .PdfObjectArray );if !_bbgaf {_ag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_deed );
return nil ,_gb .ErrTypeError ;};_acga .Decode =_eedf ;if _defee :=_aeefc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_defee !=nil {_acga .Function =[]PdfFunction {};if _dcffd ,_dcdge :=_defee .(*_gb .PdfObjectArray );_dcdge {for _ ,_ccgbf :=range _dcffd .Elements (){_ebedef ,_ggaab :=_deee (_ccgbf );
if _ggaab !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggaab );return nil ,_ggaab ;};_acga .Function =append (_acga .Function ,_ebedef );
};}else {_daded ,_bcbcb :=_deee (_defee );if _bcbcb !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcbcb );return nil ,_bcbcb ;
};_acga .Function =append (_acga .Function ,_daded );};};return &_acga ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_dbcgf *Image )ToJBIG2Image ()(*_gb .JBIG2Image ,error ){_gffdc ,_fbdbf :=_dbcgf .ToGoImage ();if _fbdbf !=nil {return nil ,_fbdbf ;};return _gb .GoImageToJBIG2 (_gffdc ,_gb .JB2ImageAutoThreshold );};

// Write writes out the PDF.
func (_aega *PdfWriter )Write (writer _fg .Writer )error {_ag .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_gafgb :=_dc .GetLicenseKey ();if (_gafgb ==nil ||!_gafgb .IsLicensed ())&&!_dgfca {_b .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_b .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _dd .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _aega ._acef !=nil {_ag .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_aega ._acef );
_efda :=_aega ._acef .ToPdfObject ();_ag .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_efda ,_efda ,_efda );_aega ._ecaec .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_efda );
_fgfed :=_aega .addObjects (_efda );if _fgfed !=nil {return _fgfed ;};};if _aega ._gcafc !=nil {_ag .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_cbfg :=_aega ._gcafc .ToPdfObject ();_ag .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cbfg );
_aega ._ecaec .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cbfg );_fggca :=_aega .addObjects (_cbfg );if _fggca !=nil {return _fggca ;};};for _dafde ,_ecdgf :=range _aega ._defcg {if !_aega .hasObject (_dafde ){_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dafde ,_dafde ,_dafde );
for _ ,_dagg :=range _ecdgf {for _ ,_cfcbf :=range _dagg .Keys (){_feae :=_dagg .Get (_cfcbf );if _feae ==_dafde {_ag .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_dagg .Set (_cfcbf ,_gb .MakeNull ());break ;};};};};};_aega ._ecaec .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_gb .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_aega ._abecc ,_aega ._afce )));_aega .copyObjects ();if _aega ._ggggf !=nil {var _fbceb error ;
_aega ._cccdf ,_fbceb =_aega ._ggggf .Optimize (_aega ._cccdf );if _fbceb !=nil {return _fbceb ;};_feddg :=make (map[_gb .PdfObject ]struct{},len (_aega ._cccdf ));for _ ,_dabdc :=range _aega ._cccdf {_feddg [_dabdc ]=struct{}{};};_aega ._addef =_feddg ;
};_aega ._aafdg =_aega ._caed ;_aega ._bfdca =_fa .NewWriter (writer );_gbbca :=_aega ._abecc > 1||(_aega ._abecc ==1&&_aega ._afce > 4);if _aega ._cggfa !=nil {_gbbca =*_aega ._cggfa ;};_befaf :=make (map[_gb .PdfObject ]bool );for _ ,_efaf :=range _aega ._cccdf {if _dddce ,_bcad :=_efaf .(*_gb .PdfObjectStreams );
_bcad {_gbbca =true ;for _ ,_faebf :=range _dddce .Elements (){_befaf [_faebf ]=true ;if _cgce ,_feefed :=_faebf .(*_gb .PdfIndirectObject );_feefed {_befaf [_cgce .PdfObject ]=true ;};};};};if _gbbca &&_aega ._abecc ==1&&_aega ._afce < 5{_aega ._afce =5;
};if _aega ._bedcd {_aega .writeString ("\u000a");}else {_aega .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_aega ._abecc ,_aega ._afce ));_aega .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};
_aega .updateObjectNumbers ();_ag .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_aega ._cccdf ));_aega ._dgdgb =make (map[int ]crossReference );_aega ._dgdgb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _aega ._dedfg .ObjectMap !=nil {for _efead ,_agdd :=range _aega ._dedfg .ObjectMap {if _efead ==0{continue ;};if _agdd .XType ==_gb .XrefTypeObjectStream {_abbef :=crossReference {Type :2,ObjectNumber :_agdd .OsObjNumber ,Index :_agdd .OsObjIndex };
_aega ._dgdgb [_efead ]=_abbef ;};if _agdd .XType ==_gb .XrefTypeTableEntry {_gddac :=crossReference {Type :1,ObjectNumber :_agdd .ObjectNumber ,Offset :_agdd .Offset };_aega ._dgdgb [_efead ]=_gddac ;};};};for _ ,_edgdg :=range _aega ._cccdf {if _bbcgc :=_befaf [_edgdg ];
_bbcgc {continue ;};_bfaaff :=int64 (0);switch _daeae :=_edgdg .(type ){case *_gb .PdfIndirectObject :_bfaaff =_daeae .ObjectNumber ;case *_gb .PdfObjectStream :_bfaaff =_daeae .ObjectNumber ;case *_gb .PdfObjectStreams :_bfaaff =_daeae .ObjectNumber ;
default:_ag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_edgdg );
return ErrTypeCheck ;};if _aega ._fcafg !=nil &&_edgdg !=_aega ._cbfcb {_ababb :=_aega ._fcafg .Encrypt (_edgdg ,_bfaaff ,0);if _ababb !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ababb );
return _ababb ;};};_aega .writeObject (int (_bfaaff ),_edgdg );};_aadae :=_aega ._aafdg ;var _gebcf int ;for _dfdcg :=range _aega ._dgdgb {if _dfdcg > _gebcf {_gebcf =_dfdcg ;};};if _gbbca {_eggba :=_gebcf +1;_aega ._dgdgb [_eggba ]=crossReference {Type :1,ObjectNumber :_eggba ,Offset :_aadae };
_eaggb :=_df .NewBuffer (nil );_dbbba :=_gb .MakeArray ();for _cabad :=0;_cabad <=_gebcf ;{for ;_cabad <=_gebcf ;_cabad ++{_ddfbb ,_gfgab :=_aega ._dgdgb [_cabad ];if _gfgab &&(!_aega ._bedcd ||_aega ._bedcd &&(_ddfbb .Type ==1&&_ddfbb .Offset >=_aega ._abgg ||_ddfbb .Type ==0)){break ;
};};var _efaeg int ;for _efaeg =_cabad +1;_efaeg <=_gebcf ;_efaeg ++{_eaac ,_cagdd :=_aega ._dgdgb [_efaeg ];if _cagdd &&(!_aega ._bedcd ||_aega ._bedcd &&(_eaac .Type ==1&&_eaac .Offset > _aega ._abgg )){continue ;};break ;};_dbbba .Append (_gb .MakeInteger (int64 (_cabad )),_gb .MakeInteger (int64 (_efaeg -_cabad )));
for _aegag :=_cabad ;_aegag < _efaeg ;_aegag ++{_dafba :=_aega ._dgdgb [_aegag ];switch _dafba .Type {case 0:_c .Write (_eaggb ,_c .BigEndian ,byte (0));_c .Write (_eaggb ,_c .BigEndian ,uint32 (0));_c .Write (_eaggb ,_c .BigEndian ,uint16 (0xFFFF));case 1:_c .Write (_eaggb ,_c .BigEndian ,byte (1));
_c .Write (_eaggb ,_c .BigEndian ,uint32 (_dafba .Offset ));_c .Write (_eaggb ,_c .BigEndian ,uint16 (_dafba .Generation ));case 2:_c .Write (_eaggb ,_c .BigEndian ,byte (2));_c .Write (_eaggb ,_c .BigEndian ,uint32 (_dafba .ObjectNumber ));_c .Write (_eaggb ,_c .BigEndian ,uint16 (_dafba .Index ));
};};_cabad =_efaeg +1;};_aafda ,_beadb :=_gb .MakeStream (_eaggb .Bytes (),_gb .NewFlateEncoder ());if _beadb !=nil {return _beadb ;};_aafda .ObjectNumber =int64 (_eggba );_aafda .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0058\u0052\u0065\u0066"));
_aafda .PdfObjectDictionary .Set ("\u0057",_gb .MakeArray (_gb .MakeInteger (1),_gb .MakeInteger (4),_gb .MakeInteger (2)));_aafda .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_dbbba );_aafda .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_gb .MakeInteger (int64 (_eggba +1)));
_aafda .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_aega ._dgbf );_aafda .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_aega ._aebgb );if _aega ._bedcd &&_aega ._bfgcf > 0{_aafda .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_gb .MakeInteger (_aega ._bfgcf ));
};if _aega ._fcafg !=nil {_aafda .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_aega ._cbfcb );_aafda .Set ("\u0049\u0044",_aega ._feda );_ag .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_aega ._feda );};_aega .writeObject (int (_aafda .ObjectNumber ),_aafda );
}else {_aega .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _egagc :=0;_egagc <=_gebcf ;{for ;_egagc <=_gebcf ;_egagc ++{_daacf ,_ggbgbd :=_aega ._dgdgb [_egagc ];if _ggbgbd &&(!_aega ._bedcd ||_aega ._bedcd &&(_daacf .Type ==1&&_daacf .Offset >=_aega ._abgg ||_daacf .Type ==0)){break ;
};};var _debbd int ;for _debbd =_egagc +1;_debbd <=_gebcf ;_debbd ++{_cbfdg ,_eeceab :=_aega ._dgdgb [_debbd ];if _eeceab &&(!_aega ._bedcd ||_aega ._bedcd &&(_cbfdg .Type ==1&&_cbfdg .Offset > _aega ._abgg )){continue ;};break ;};_cadg :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_egagc ,_debbd -_egagc );
_aega .writeString (_cadg );for _befgc :=_egagc ;_befgc < _debbd ;_befgc ++{_aacge :=_aega ._dgdgb [_befgc ];switch _aacge .Type {case 0:_cadg =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_aega .writeString (_cadg );
case 1:_cadg =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_aacge .Offset ,0);_aega .writeString (_cadg );};};_egagc =_debbd +1;};_gdeeed :=_gb .MakeDict ();_gdeeed .Set ("\u0049\u006e\u0066\u006f",_aega ._dgbf );
_gdeeed .Set ("\u0052\u006f\u006f\u0074",_aega ._aebgb );_gdeeed .Set ("\u0053\u0069\u007a\u0065",_gb .MakeInteger (int64 (_gebcf +1)));if _aega ._bedcd &&_aega ._bfgcf > 0{_gdeeed .Set ("\u0050\u0072\u0065\u0076",_gb .MakeInteger (_aega ._bfgcf ));};if _aega ._fcafg !=nil {_gdeeed .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_aega ._cbfcb );
_gdeeed .Set ("\u0049\u0044",_aega ._feda );_ag .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_aega ._feda );};_aega .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_aega .writeString (_gdeeed .WriteString ());_aega .writeString ("\u000a");
};_cgbgc :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_aadae );_aega .writeString (_cgbgc );_aega .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _aega ._fcff ==nil {_aega ._fcff =_aega ._bfdca .Flush ();
};return _aega ._fcff ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_efgdc :=PdfColorLab {l ,a ,b };return &_efgdc };func (_ddcdca *PdfWriter )hasObject (_eaeec _gb .PdfObject )bool {_ ,_gdegf :=_ddcdca ._addef [_eaeec ];return _gdegf ;};func (_ecdae *PdfWriter )copyObjects (){_bdgeg :=make (map[_gb .PdfObject ]_gb .PdfObject );
_fgega :=make ([]_gb .PdfObject ,0,len (_ecdae ._cccdf ));_aeead :=make (map[_gb .PdfObject ]struct{},len (_ecdae ._cccdf ));_daaa :=make (map[_gb .PdfObject ]struct{});for _ ,_gcae :=range _ecdae ._cccdf {_cdcab :=_ecdae .copyObject (_gcae ,_bdgeg ,_daaa ,false );
if _ ,_bcaff :=_daaa [_gcae ];_bcaff {continue ;};_fgega =append (_fgega ,_cdcab );_aeead [_cdcab ]=struct{}{};};_ecdae ._cccdf =_fgega ;_ecdae ._addef =_aeead ;_ecdae ._dgbf =_ecdae .copyObject (_ecdae ._dgbf ,_bdgeg ,nil ,false ).(*_gb .PdfIndirectObject );
_ecdae ._aebgb =_ecdae .copyObject (_ecdae ._aebgb ,_bdgeg ,nil ,false ).(*_gb .PdfIndirectObject );if _ecdae ._cbfcb !=nil {_ecdae ._cbfcb =_ecdae .copyObject (_ecdae ._cbfcb ,_bdgeg ,nil ,false ).(*_gb .PdfIndirectObject );};if _ecdae ._bedcd {_cgfga :=make (map[_gb .PdfObject ]int64 );
for _bcfac ,_fddad :=range _ecdae ._fdgbe {if _fadb ,_ecgbd :=_bdgeg [_bcfac ];_ecgbd {_cgfga [_fadb ]=_fddad ;}else {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_ecdae ._fdgbe =_cgfga ;};};func (_ffga *PdfReader )newPdfAnnotationSquareFromDict (_cbg *_gb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_affg :=PdfAnnotationSquare {};_cacf ,_aggga :=_ffga .newPdfAnnotationMarkupFromDict (_cbg );if _aggga !=nil {return nil ,_aggga ;
};_affg .PdfAnnotationMarkup =_cacf ;_affg .BS =_cbg .Get ("\u0042\u0053");_affg .IC =_cbg .Get ("\u0049\u0043");_affg .BE =_cbg .Get ("\u0042\u0045");_affg .RD =_cbg .Get ("\u0052\u0044");return &_affg ,nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_ceaf *PdfReader )newPdfActionGotoEFromDict (_cee *_gb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_faa ,_deca :=_dbf (_cee .Get ("\u0046"));if _deca !=nil {return nil ,_deca ;};return &PdfActionGoToE {D :_cee .Get ("\u0044"),NewWindow :_cee .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_cee .Get ("\u0054"),F :_faa },nil ;
};func _fdda (_gfbc StdFontName )(pdfFontSimple ,error ){_begb ,_fade :=_ed .NewStdFontByName (_gfbc );if !_fade {return pdfFontSimple {},ErrFontNotSupported ;};_ceead :=_dbge (_begb );return _ceead ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_abfed *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_acbbc ,_ ,_gacgc :=_abfed .CharcodesToUnicodeWithStats (_abfed .BytesToCharcodes (data ));_cacd :=_eaf .ExpandLigatures (_acbbc );return _cacd ,_ff .RuneCountInString (_cacd ),_gacgc ;
};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";
ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_cgfd :=NewPdfAnnotation ();_eeac :=&PdfAnnotationInk {};_eeac .PdfAnnotation =_cgfd ;_eeac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgfd .SetContext (_eeac );return _eeac ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func _dbbe (_dbag *_gb .PdfObjectDictionary )bool {for _ ,_cefga :=range _dbag .Keys (){if _ ,_cafdb :=_gbbfc [_cefga .String ()];_cafdb {return true ;};};return false ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_dea :=NewPdfAction ();_cga :=&PdfActionJavaScript {};_cga .PdfAction =_dea ;_dea .SetContext (_cga );return _cga ;};func _gbbcc (_bfccab []byte )([]byte ,error ){_egbbg :=_fb .New ();if _ ,_bagae :=_fg .Copy (_egbbg ,_df .NewReader (_bfccab ));
_bagae !=nil {return nil ,_bagae ;};return _egbbg .Sum (nil ),nil ;};func (_bcfbc fontCommon )fontFlags ()int {if _bcfbc ._gdef ==nil {return 0;};return _bcfbc ._gdef ._ffgfd ;};

// IsColored specifies if the pattern is colored.
func (_beaa *PdfTilingPattern )IsColored ()bool {if _beaa .PaintType !=nil &&*_beaa .PaintType ==1{return true ;};return false ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_cbcdg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _cbcdg ._accac !=nil {return _cbcdg ._accac ,nil ;};if _cbcdg .ColorSpace ==nil {return nil ,nil ;};_gdced ,_cbefa :=_fdadc (_cbcdg .ColorSpace );if _cbefa !=nil {return nil ,_cbefa ;
};_cbcdg ._accac =_gdced ;return _cbcdg ._accac ,nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_gb .PdfObjectName ;Colorants _gb .PdfObject ;Process _gb .PdfObject ;MixingHints _gb .PdfObject ;_dbgac *_gb .PdfIndirectObject ;};func (_cbcdb *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _cbcdb ._gdef };
func (_acffg *PdfReader )newPdfAcroFormFromDict (_dcage *_gb .PdfIndirectObject ,_afag *_gb .PdfObjectDictionary )(*PdfAcroForm ,error ){_ggcd :=NewPdfAcroForm ();if _dcage !=nil {_ggcd ._bfefd =_dcage ;_dcage .PdfObject =_gb .MakeDict ();};if _ebcdb :=_afag .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");
_ebcdb !=nil {_fafca ,_agbae :=_gb .GetArray (_ebcdb );if !_agbae {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ebcdb );};var _cbgff []*PdfField ;
for _ ,_ffffc :=range _fafca .Elements (){_cdeead ,_cfge :=_gb .GetIndirect (_ffffc );if !_cfge {if _ ,_ggbcc :=_ffffc .(*_gb .PdfObjectNull );_ggbcc {_ag .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ag .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ffffc );
return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bdfaa ,_cfaf :=_acffg .newPdfFieldFromIndirectObject (_cdeead ,nil );
if _cfaf !=nil {return nil ,_cfaf ;};_ag .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_bdfaa );_cbgff =append (_cbgff ,_bdfaa );};_ggcd .Fields =&_cbgff ;};if _eccce :=_afag .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_eccce !=nil {_dfdec ,_dagb :=_gb .GetBool (_eccce );if _dagb {_ggcd .NeedAppearances =_dfdec ;}else {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_eccce );
};};if _gffc :=_afag .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_gffc !=nil {_daag ,_aeag :=_gb .GetInt (_gffc );if _aeag {_ggcd .SigFlags =_daag ;}else {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gffc );
};};if _ceaaf :=_afag .Get ("\u0043\u004f");_ceaaf !=nil {_gcdg ,_cgedb :=_gb .GetArray (_ceaaf );if _cgedb {_ggcd .CO =_gcdg ;}else {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ceaaf );
};};if _dcffb :=_afag .Get ("\u0044\u0052");_dcffb !=nil {if _cgdg ,_faefd :=_gb .GetDict (_dcffb );_faefd {_acbg ,_dfad :=NewPdfPageResourcesFromDict (_cgdg );if _dfad !=nil {_ag .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_dfad );
return nil ,_dfad ;};_ggcd .DR =_acbg ;}else {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dcffb );};};if _gaed :=_afag .Get ("\u0044\u0041");
_gaed !=nil {_gaadc ,_fdfd :=_gb .GetString (_gaed );if _fdfd {_ggcd .DA =_gaadc ;}else {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gaed );
};};if _adgdg :=_afag .Get ("\u0051");_adgdg !=nil {_fgece ,_fdbeg :=_gb .GetInt (_adgdg );if _fdbeg {_ggcd .Q =_fgece ;}else {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_adgdg );
};};if _agffg :=_afag .Get ("\u0058\u0046\u0041");_agffg !=nil {_ggcd .XFA =_agffg ;};_ggcd .ToPdfObject ();return _ggcd ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_efgd :=NewPdfAnnotation ();_aaee :=&PdfAnnotationMovie {};_aaee .PdfAnnotation =_efgd ;_efgd .SetContext (_aaee );return _aaee ;};

// ToPdfObject implements interface PdfModel.
func (_bfcc *PdfAnnotationHighlight )ToPdfObject ()_gb .PdfObject {_bfcc .PdfAnnotation .ToPdfObject ();_dgca :=_bfcc ._gbac ;_adf :=_dgca .PdfObject .(*_gb .PdfObjectDictionary );_bfcc .PdfAnnotationMarkup .appendToPdfDictionary (_adf );_adf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_adf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bfcc .QuadPoints );return _dgca ;};

// WriteToFile writes the output PDF to file.
func (_baeaf *PdfWriter )WriteToFile (outputFilePath string )error {_befgb ,_fggaga :=_aea .Create (outputFilePath );if _fggaga !=nil {return _fggaga ;};defer _befgb .Close ();return _baeaf .Write (_befgb );};

// GetCustomInfo returns a custom info value for the specified name.
func (_ddcd *PdfInfo )GetCustomInfo (name string )*_gb .PdfObjectString {var _cbff *_gb .PdfObjectString ;if _ddcd ._dfee ==nil {return _cbff ;};if _gcff ,_ceaff :=_ddcd ._dfee .Get (*_gb .MakeName (name )).(*_gb .PdfObjectString );_ceaff {_cbff =_gcff ;
};return _cbff ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _gb .PdfObject ;Volume _gb .PdfObject ;Synchronous _gb .PdfObject ;Repeat _gb .PdfObject ;Mix _gb .PdfObject ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_aebgb *_gb .PdfIndirectObject ;_aecef *_gb .PdfIndirectObject ;_fdfda map[_gb .PdfObject ]struct{};_cccdf []_gb .PdfObject ;_addef map[_gb .PdfObject ]struct{};_bcff []*_gb .PdfIndirectObject ;_acef *PdfOutlineTreeNode ;_ecaec *_gb .PdfObjectDictionary ;
_bgaf []_gb .PdfObject ;_dgbf *_gb .PdfIndirectObject ;_bfdca *_fa .Writer ;_aafdg int64 ;_fcff error ;_fcafg *_gb .PdfCrypt ;_dbffd *_gb .PdfObjectDictionary ;_cbfcb *_gb .PdfIndirectObject ;_feda *_gb .PdfObjectArray ;_abecc int ;_afce int ;_cggfa *bool ;
_defcg map[_gb .PdfObject ][]*_gb .PdfObjectDictionary ;_gcafc *PdfAcroForm ;_ggggf Optimizer ;_dgdgb map[int ]crossReference ;_caed int64 ;ObjNumOffset int ;_bedcd bool ;_dedfg _gb .XrefTable ;_bfgcf int64 ;_abgg int64 ;_fdgbe map[_gb .PdfObject ]int64 ;
_dagbf map[_gb .PdfObject ]struct{};_ggcaa string ;};func (_fbe *PdfReader )newPdfAnnotationPrinterMarkFromDict (_baeaa *_gb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_aabea :=PdfAnnotationPrinterMark {};_aabea .MN =_baeaa .Get ("\u004d\u004e");
return &_aabea ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_gb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func (_cgebe *pdfFontType0 )subsetRegistered ()error {_bgba ,_bdbg :=_cgebe .DescendantFont ._faee .(*pdfCIDFontType2 );
if !_bdbg {_ag .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_cgebe .DescendantFont );return nil ;};if _bgba ==nil {return nil ;
};if _bgba ._gdef ==nil {_ag .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _cgebe ._dfaad ==nil {_ag .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_dcgg ,_bdbg :=_gb .GetStream (_bgba ._gdef .FontFile2 );if !_bdbg {_ag .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _dd .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fgad ,_adcce :=_gb .DecodeStream (_dcgg );if _adcce !=nil {_ag .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_adcce );
return _adcce ;};_ddcg ,_adcce :=_cbbc .Parse (_df .NewReader (_fgad ));if _adcce !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dcgg .Stream ));
return _adcce ;};var _fddcc []rune ;var _facba *_cbbc .Font ;switch _fgade :=_cgebe ._dfaad .(type ){case *_eaf .TrueTypeFontEncoder :_fddcc =_fgade .RegisteredRunes ();_facba ,_adcce =_ddcg .SubsetKeepRunes (_fddcc );if _adcce !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcce );
return _adcce ;};_fgade .SubsetRegistered ();case *_eaf .IdentityEncoder :_fddcc =_fgade .RegisteredRunes ();_facc :=make ([]_cbbc .GlyphIndex ,len (_fddcc ));for _fdbef ,_fbgba :=range _fddcc {_facc [_fdbef ]=_cbbc .GlyphIndex (_fbgba );};_facba ,_adcce =_ddcg .SubsetKeepIndices (_facc );
if _adcce !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcce );return _adcce ;};case _eaf .SimpleEncoder :_dcacd :=_fgade .Charcodes ();for _ ,_aecg :=range _dcacd {_aegc ,_eddeg :=_fgade .CharcodeToRune (_aecg );if !_eddeg {_ag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_aecg );
continue ;};_fddcc =append (_fddcc ,_aegc );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_cgebe ._dfaad );
};var _cdeea _df .Buffer ;_adcce =_facba .Write (&_cdeea );if _adcce !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcce );return _adcce ;};if _cgebe ._dfbfc !=nil {_cbbed :=make (map[_ba .CharCode ]rune ,len (_fddcc ));for _ ,_gdab :=range _fddcc {_dbab ,_accgb :=_cgebe ._dfaad .RuneToCharcode (_gdab );
if !_accgb {continue ;};_cbbed [_ba .CharCode (_dbab )]=_gdab ;};_cgebe ._dfbfc =_ba .NewToUnicodeCMap (_cbbed );};_dcgg ,_adcce =_gb .MakeStream (_cdeea .Bytes (),_gb .NewFlateEncoder ());if _adcce !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcce );
return _adcce ;};_dcgg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gb .MakeInteger (int64 (_cdeea .Len ())));if _cdbg ,_dada :=_gb .GetStream (_bgba ._gdef .FontFile2 );_dada {*_cdbg =*_dcgg ;}else {_bgba ._gdef .FontFile2 =_dcgg ;};_abea :=_defde ();
if len (_cgebe ._cacfa )> 0{_cgebe ._cacfa =_ggdd (_cgebe ._cacfa ,_abea );};if len (_bgba ._cacfa )> 0{_bgba ._cacfa =_ggdd (_bgba ._cacfa ,_abea );};if len (_cgebe ._eeceb )> 0{_cgebe ._eeceb =_ggdd (_cgebe ._eeceb ,_abea );};if _bgba ._gdef !=nil {_debb ,_deeb :=_gb .GetName (_bgba ._gdef .FontName );
if _deeb &&len (_debb .String ())> 0{_gaeed :=_ggdd (_debb .String (),_abea );_bgba ._gdef .FontName =_gb .MakeName (_gaeed );};};return nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_gb .PdfObjectArray ;ExtGState _gb .PdfObject ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_edeee *PdfOutlineTreeNode )GetContainingPdfObject ()_gb .PdfObject {return _edeee .GetContext ().GetContainingPdfObject ();};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
type PageCallback func (_bbgg int ,_bgbda *PdfPage );func (_bbcdg *PdfFunctionType0 )processSamples ()error {_gcbgg :=_bad .ResampleBytes (_bbcdg ._gfcfb ,_bbcdg .BitsPerSample );_bbcdg ._eecea =_gcbgg ;return nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_gb .PdfObject ,error );};type fontFile struct{_abbaa string ;_bcbc string ;_fffd _eaf .SimpleEncoder ;};func (_gabb *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};var ImageHandling ImageHandler =DefaultImageHandler {};


// AddPages adds pages to be appended to the end of the source PDF.
func (_cdfa *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ace :=range pages {_ace =_ace .Duplicate ();_befaa (_ace );_cdfa ._bbgcg =append (_cdfa ._bbgcg ,_ace );};};func (_gegc *DSS )generateHashMaps ()error {_effa ,_ccfc :=_gegc .generateHashMap (_gegc .Certs );
if _ccfc !=nil {return _ccfc ;};_egdbb ,_ccfc :=_gegc .generateHashMap (_gegc .OCSPs );if _ccfc !=nil {return _ccfc ;};_gfcc ,_ccfc :=_gegc .generateHashMap (_gegc .CRLs );if _ccfc !=nil {return _ccfc ;};_gegc ._fdea =_effa ;_gegc ._bcae =_egdbb ;_gegc ._cfbe =_gfcc ;
return nil ;};func _fageb (_dgeb *_gb .PdfIndirectObject )(*PdfOutline ,error ){_edcgc ,_becd :=_dgeb .PdfObject .(*_gb .PdfObjectDictionary );if !_becd {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cbfd :=NewPdfOutline ();if _gfdbd :=_edcgc .Get ("\u0054\u0079\u0070\u0065");_gfdbd !=nil {_acgfd ,_bfceb :=_gfdbd .(*_gb .PdfObjectName );if _bfceb {if *_acgfd !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_acgfd );
};};};if _aagb :=_edcgc .Get ("\u0043\u006f\u0075n\u0074");_aagb !=nil {_daccg ,_aegdg :=_gb .GetNumberAsInt64 (_aagb );if _aegdg !=nil {return nil ,_aegdg ;};_cbfd .Count =&_daccg ;};return _cbfd ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gcad *PdfFont )ToUnicode ()string {if _gcad .baseFields ()._dfbfc ==nil {return "";};return _gcad .baseFields ()._dfbfc .Name ();};func _gca (_fggc *PdfPage )map[_gb .PdfObjectName ]_gb .PdfObject {_dbe :=make (map[_gb .PdfObjectName ]_gb .PdfObject );
if _fggc .Resources ==nil {return _dbe ;};if _fggc .Resources .Font !=nil {if _efe ,_aeec :=_gb .GetDict (_fggc .Resources .Font );_aeec {for _ ,_gefd :=range _efe .Keys (){_dbe [_gefd ]=_efe .Get (_gefd );};};};if _fggc .Resources .ExtGState !=nil {if _ddga ,_fege :=_gb .GetDict (_fggc .Resources .ExtGState );
_fege {for _ ,_efcd :=range _ddga .Keys (){_dbe [_efcd ]=_ddga .Get (_efcd );};};};if _fggc .Resources .XObject !=nil {if _faed ,_cbab :=_gb .GetDict (_fggc .Resources .XObject );_cbab {for _ ,_adfa :=range _faed .Keys (){_dbe [_adfa ]=_faed .Get (_adfa );
};};};if _fggc .Resources .Pattern !=nil {if _edac ,_cdgc :=_gb .GetDict (_fggc .Resources .Pattern );_cdgc {for _ ,_faaf :=range _edac .Keys (){_dbe [_faaf ]=_edac .Get (_faaf );};};};if _fggc .Resources .Shading !=nil {if _edgcc ,_ecd :=_gb .GetDict (_fggc .Resources .Shading );
_ecd {for _ ,_fdaa :=range _edgcc .Keys (){_dbe [_fdaa ]=_edgcc .Get (_fdaa );};};};if _fggc .Resources .ProcSet !=nil {if _cdea ,_aafe :=_gb .GetDict (_fggc .Resources .ProcSet );_aafe {for _ ,_dfef :=range _cdea .Keys (){_dbe [_dfef ]=_cdea .Get (_dfef );
};};};if _fggc .Resources .Properties !=nil {if _cgfad ,_dbfbe :=_gb .GetDict (_fggc .Resources .Properties );_dbfbe {for _ ,_aaeab :=range _cgfad .Keys (){_dbe [_aaeab ]=_cgfad .Get (_aaeab );};};};return _dbe ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_baf :=NewPdfAnnotation ();_fbb :=&PdfAnnotationCircle {};_fbb .PdfAnnotation =_baf ;_fbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_baf .SetContext (_fbb );return _fbb ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_aaead *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_ccaf :=_bad .NewReader (img .getBase ());_gfbd :=_aag .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._aggec ,img ._fbga );
_eddcf :=_bad .NewWriter (_gfbd );_eeab :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_fcfea :=_aaead .GetNumComponents ();_gaeg :=make ([]uint32 ,_fcfea );_cbfb :=make ([]float64 ,_fcfea );for {_ecdd :=_ccaf .ReadSamples (_gaeg );if _ecdd ==_fg .EOF {break ;
}else if _ecdd !=nil {return img ,_ecdd ;};for _fbbge :=0;_fbbge < _fcfea ;_fbbge ++{_dgce :=float64 (_gaeg [_fbbge ])/_eeab ;_cbfb [_fbbge ]=_dgce ;};_cbcde ,_ecdd :=_aaead .TintTransform .Evaluate (_cbfb );if _ecdd !=nil {return img ,_ecdd ;};for _ ,_cggc :=range _cbcde {_cggc =_ga .Min (_ga .Max (0,_cggc ),1.0);
if _ecdd =_eddcf .WriteSample (uint32 (_cggc *_eeab ));_ecdd !=nil {return img ,_ecdd ;};};};return _aaead .AlternateSpace .ImageToRGB (_dcgf (&_gfbd ));};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_bdfgg *PdfPageResources )HasFontByName (keyName _gb .PdfObjectName )bool {_ ,_beee :=_bdfgg .GetFontByName (keyName );return _beee ;};

// B returns the value of the B component of the color.
func (_dfaf *PdfColorCalRGB )B ()float64 {return _dfaf [1]};func (_agba fontCommon )coreString ()string {_dbbcb :="";if _agba ._gdef !=nil {_dbbcb =_agba ._gdef .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_agba ._abec ,_agba ._cacfa ,_agba ._eeceb ,_agba ._cbcaf ,_agba ._efaa !=nil ,_agba .fontFlags (),_dbbcb );
};func _aedfe (_edff *XObjectImage )error {if _edff .SMask ==nil {return nil ;};_bbbe ,_cbddc :=_edff .SMask .(*_gb .PdfObjectStream );if !_cbddc {_ag .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _gb .ErrTypeError ;};_gbdgd :=_bbbe .PdfObjectDictionary ;_edcee :=_gbdgd .Get ("\u004d\u0061\u0074t\u0065");if _edcee ==nil {return nil ;};_eecgb ,_ccdcd :=_ebecc (_edcee .(*_gb .PdfObjectArray ));if _ccdcd !=nil {return _ccdcd ;};_bbdga :=_gb .MakeArrayFromFloats ([]float64 {_eecgb });
_gbdgd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bbdga );return nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _gb .PdfObject ;RichMediaContent _gb .PdfObject ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cbee :=NewPdfAnnotation ();_bff :=&PdfAnnotationLine {};_bff .PdfAnnotation =_cbee ;_bff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbee .SetContext (_bff );return _bff ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _gb .PdfObject ;BS _gb .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fbdbc pdfCIDFontType0 )GetRuneMetrics (r rune )(_ed .CharMetrics ,bool ){return _ed .CharMetrics {Wx :_fbdbc ._fcfc },true ;};

// GetSubFilter returns SubFilter value or empty string.
func (_cefab *pdfSignDictionary )GetSubFilter ()string {_bbbab :=_cefab .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _bbbab ==nil {return "";};if _gcfdab ,_ddedc :=_gb .GetNameVal (_bbbab );_ddedc {return _gcfdab ;};return "";};

// SetOCProperties sets the optional content properties.
func (_ebgdb *PdfWriter )SetOCProperties (ocProperties _gb .PdfObject )error {_agbab :=_ebgdb ._ecaec ;if ocProperties !=nil {_ag .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_agbab .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _ebgdb .addObjects (ocProperties );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_baeac *PdfAnnotationRedact )ToPdfObject ()_gb .PdfObject {_baeac .PdfAnnotation .ToPdfObject ();_ebgae :=_baeac ._gbac ;_ccdc :=_ebgae .PdfObject .(*_gb .PdfObjectDictionary );_baeac .PdfAnnotationMarkup .appendToPdfDictionary (_ccdc );_ccdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_ccdc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_baeac .QuadPoints );_ccdc .SetIfNotNil ("\u0049\u0043",_baeac .IC );_ccdc .SetIfNotNil ("\u0052\u004f",_baeac .RO );_ccdc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_baeac .OverlayText );
_ccdc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_baeac .Repeat );_ccdc .SetIfNotNil ("\u0044\u0041",_baeac .DA );_ccdc .SetIfNotNil ("\u0051",_baeac .Q );return _ebgae ;};func (_aaga *Image )resampleLowBits (_gdege []uint32 ){_dedaa :=_aag .BytesPerLine (int (_aaga .Width ),int (_aaga .BitsPerComponent ),_aaga .ColorComponents );
_bfgg :=make ([]byte ,_aaga .ColorComponents *_dedaa *int (_aaga .Height ));_gbfe :=int (_aaga .BitsPerComponent )*_aaga .ColorComponents *int (_aaga .Width );_dcbadd :=uint8 (8);var (_ccgc ,_bcbe int ;_cafcf uint32 ;);for _fecg :=0;_fecg < int (_aaga .Height );
_fecg ++{_bcbe =_fecg *_dedaa ;for _bgca :=0;_bgca < _gbfe ;_bgca ++{_cafcf =_gdege [_ccgc ];_dcbadd -=uint8 (_aaga .BitsPerComponent );_bfgg [_bcbe ]|=byte (_cafcf )<<_dcbadd ;if _dcbadd ==0{_dcbadd =8;_bcbe ++;};_ccgc ++;};};_aaga .Data =_bfgg ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _gb .PdfObject ;MK _gb .PdfObject ;A _gb .PdfObject ;AA _gb .PdfObject ;BS _gb .PdfObject ;Parent _gb .PdfObject ;_cec *PdfField ;_eaea bool ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_fagaf *PdfAppender )Write (w _fg .Writer )error {if _fagaf ._dba {return _dd .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_agabe :=NewPdfWriter ();_edbe ,_eegb :=_gb .GetDict (_agabe ._aecef );if !_eegb {return _dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dbfge ,_eegb :=_edbe .Get ("\u004b\u0069\u0064\u0073").(*_gb .PdfObjectArray );if !_eegb {return _dd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_baee ,_eegb :=_edbe .Get ("\u0043\u006f\u0075n\u0074").(*_gb .PdfObjectInteger );if !_eegb {return _dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_effd :=_fagaf ._cbaab ._faefdf ;_acfg :=_effd .GetTrailer ();if _acfg ==nil {return _dd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_adec ,_eegb :=_gb .GetIndirect (_acfg .Get ("\u0052\u006f\u006f\u0074"));
if !_eegb {return _dd .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gdcd ,_eegb :=_gb .GetDict (_adec );if !_eegb {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_adec ,*_acfg );
return _dd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_egfd :=range _gdcd .Keys (){if _agabe ._ecaec .Get (_egfd )==nil {_gbee :=_gdcd .Get (_egfd );_agabe ._ecaec .Set (_egfd ,_gbee );};};if _fagaf ._bdf !=nil {_agabe ._ecaec .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fagaf ._bdf .ToPdfObject ());
_fagaf .updateObjectsDeep (_fagaf ._bdf .ToPdfObject (),nil );};if _fagaf ._bggg !=nil {_fagaf .updateObjectsDeep (_fagaf ._bggg .ToPdfObject (),nil );_agabe ._ecaec .Set ("\u0044\u0053\u0053",_fagaf ._bggg .GetContainingPdfObject ());};if _agabe ._abecc < 2{_agabe .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_agabe .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_fagaf .addNewObject (_agabe ._dgbf );_fagaf .addNewObject (_agabe ._aebgb );_deeg :=false ;if len (_fagaf ._cbaab .PageList )!=len (_fagaf ._bbgcg ){_deeg =true ;}else {for _gaca :=range _fagaf ._cbaab .PageList {switch {case _fagaf ._bbgcg [_gaca ]==_fagaf ._cbaab .PageList [_gaca ]:case _fagaf ._bbgcg [_gaca ]==_fagaf .Reader .PageList [_gaca ]:default:_deeg =true ;
};if _deeg {break ;};};};if _deeg {_fagaf .updateObjectsDeep (_agabe ._aecef ,nil );}else {_fagaf ._bafa [_agabe ._aecef ]=struct{}{};};_agabe ._aecef .ObjectNumber =_fagaf .Reader ._abbf .ObjectNumber ;_fagaf ._bdega [_agabe ._aecef ]=_fagaf .Reader ._abbf .ObjectNumber ;
_gfdfc :=[]_gb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ebcg :=range _fagaf ._bbgcg {_bfcbd :=_ebcg .ToPdfObject ();
*_baee =*_baee +1;if _fefc ,_eacgd :=_bfcbd .(*_gb .PdfIndirectObject );_eacgd &&_fefc .GetParser ()==_fagaf ._cbaab ._faefdf {_dbfge .Append (&_fefc .PdfObjectReference );continue ;};if _ecc ,_ecgb :=_gb .GetDict (_bfcbd );_ecgb {_fgee ,_decf :=_ecc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gb .PdfIndirectObject );
for _decf {_ag .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fgee );_edgf ,_bcb :=_fgee .PdfObject .(*_gb .PdfObjectDictionary );if !_bcb {return _dd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_agge :=range _gfdfc {_ag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agge );if _ecc .Get (_agge )!=nil {_ag .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _bbfg :=_edgf .Get (_agge );_bbfg !=nil {_ag .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agge );_ecc .Set (_agge ,_bbfg );};};_fgee ,_decf =_edgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gb .PdfIndirectObject );
_ag .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ecc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agabe ._aecef );};_fagaf .updateObjectsDeep (_bfcbd ,nil );
_dbfge .Append (_bfcbd );};if _ ,_bgag :=_fagaf ._cdef .Seek (0,_fg .SeekStart );_bgag !=nil {return _bgag ;};_gedf :=make (map[SignatureHandler ]_fg .Writer );_bfca :=_gb .MakeArray ();for _ ,_ffeb :=range _fagaf ._caaf {if _ceaa ,_fdgg :=_gb .GetIndirect (_ffeb );
_fdgg {if _edacc ,_fbcc :=_ceaa .PdfObject .(*pdfSignDictionary );_fbcc {_fcd :=*_edacc ._deccaf ;var _adee error ;_gedf [_fcd ],_adee =_fcd .NewDigest (_edacc ._ecea );if _adee !=nil {return _adee ;};_bfca .Append (_gb .MakeInteger (0xfffff),_gb .MakeInteger (0xfffff));
};};};if _bfca .Len ()> 0{_bfca .Append (_gb .MakeInteger (0xfffff),_gb .MakeInteger (0xfffff));};for _ ,_gcgea :=range _fagaf ._caaf {if _bbfb ,_dfbf :=_gb .GetIndirect (_gcgea );_dfbf {if _aefe ,_cgfac :=_bbfb .PdfObject .(*pdfSignDictionary );_cgfac {_aefe .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bfca );
};};};_fcag :=len (_gedf )> 0;var _defg _fg .Reader =_fagaf ._cdef ;if _fcag {_fdac :=make ([]_fg .Writer ,0,len (_gedf ));for _ ,_eecg :=range _gedf {_fdac =append (_fdac ,_eecg );};_defg =_fg .TeeReader (_fagaf ._cdef ,_fg .MultiWriter (_fdac ...));};
_efcee ,_fcg :=_fg .Copy (w ,_defg );if _fcg !=nil {return _fcg ;};if len (_fagaf ._caaf )==0{return nil ;};_agabe ._caed =_efcee ;_agabe .ObjNumOffset =_fagaf ._fead ;_agabe ._bedcd =true ;_agabe ._dedfg =_fagaf ._fgea ;_agabe ._bfgcf =_fagaf ._cdbf ;
_agabe ._abgg =_fagaf ._ggg ;_agabe ._afce =_fagaf ._cbaab .PdfVersion ().Minor ;_agabe ._fdgbe =_fagaf ._bdega ;_cbca :=_fagaf ._fgeb .GetXrefType ();if _cbca !=nil {_cffa :=*_cbca ==_gb .XrefTypeObjectStream ;_agabe ._cggfa =&_cffa ;};_agabe ._addef =map[_gb .PdfObject ]struct{}{};
_agabe ._cccdf =[]_gb .PdfObject {};for _ ,_adeg :=range _fagaf ._caaf {if _ ,_aaae :=_fagaf ._bafa [_adeg ];_aaae {continue ;};_agabe .addObject (_adeg );};_dege :=w ;if _fcag {_dege =_df .NewBuffer (nil );};if _eaca :=_agabe .Write (_dege );_eaca !=nil {return _eaca ;
};if _fcag {_fcagf :=_dege .(*_df .Buffer ).Bytes ();_dfag :=_gb .MakeArray ();var _fgga []*pdfSignDictionary ;var _caag int64 ;for _ ,_bgbg :=range _agabe ._cccdf {if _cecc ,_bdga :=_gb .GetIndirect (_bgbg );_bdga {if _ccgb ,_fgc :=_cecc .PdfObject .(*pdfSignDictionary );
_fgc {_fgga =append (_fgga ,_ccgb );_fgebe :=_ccgb ._baagda +int64 (_ccgb ._gacag );_dfag .Append (_gb .MakeInteger (_caag ),_gb .MakeInteger (_fgebe -_caag ));_caag =_ccgb ._baagda +int64 (_ccgb ._bbfec );};};};_dfag .Append (_gb .MakeInteger (_caag ),_gb .MakeInteger (_efcee +int64 (len (_fcagf ))-_caag ));
_aeda :=[]byte (_dfag .WriteString ());for _ ,_eag :=range _fgga {_ebgac :=int (_eag ._baagda -_efcee );for _ddaa :=_eag ._dgbad ;_ddaa < _eag ._eebad ;_ddaa ++{_fcagf [_ebgac +_ddaa ]=' ';};_gcgg :=_fcagf [_ebgac +_eag ._dgbad :_ebgac +_eag ._eebad ];
copy (_gcgg ,_aeda );};var _cced int ;for _ ,_dede :=range _fgga {_beeg :=int (_dede ._baagda -_efcee );_ggdf :=_fcagf [_cced :_beeg +_dede ._gacag ];_deded :=*_dede ._deccaf ;_gedf [_deded ].Write (_ggdf );_cced =_beeg +_dede ._bbfec ;};for _ ,_aabeg :=range _fgga {_ebb :=_fcagf [_cced :];
_bdaa :=*_aabeg ._deccaf ;_gedf [_bdaa ].Write (_ebb );};for _ ,_efee :=range _fgga {_ebag :=int (_efee ._baagda -_efcee );_cbdd :=*_efee ._deccaf ;_acca :=_gedf [_cbdd ];if _eddc :=_cbdd .Sign (_efee ._ecea ,_acca );_eddc !=nil {return _eddc ;};_efee ._ecea .ByteRange =_dfag ;
_dfd :=[]byte (_efee ._ecea .Contents .WriteString ());for _fgce :=_efee ._dgbad ;_fgce < _efee ._eebad ;_fgce ++{_fcagf [_ebag +_fgce ]=' ';};for _agbf :=_efee ._gacag ;_agbf < _efee ._bbfec ;_agbf ++{_fcagf [_ebag +_agbf ]=' ';};_bbec :=_fcagf [_ebag +_efee ._dgbad :_ebag +_efee ._eebad ];
copy (_bbec ,_aeda );_bbec =_fcagf [_ebag +_efee ._gacag :_ebag +_efee ._bbfec ];copy (_bbec ,_dfd );};_fdbd :=_df .NewBuffer (_fcagf );_ ,_fcg =_fg .Copy (w ,_fdbd );if _fcg !=nil {return _fcg ;};};_fagaf ._dba =true ;return nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fgae :=&PdfColorspaceSpecialSeparation {};return _fgae ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_acae *PdfAnnotation )ToPdfObject ()_gb .PdfObject {_acc :=_acae ._gbac ;_fdga :=_acc .PdfObject .(*_gb .PdfObjectDictionary );_fdga .Clear ();_fdga .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0041\u006e\u006eo\u0074"));_fdga .SetIfNotNil ("\u0052\u0065\u0063\u0074",_acae .Rect );
_fdga .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_acae .Contents );_fdga .SetIfNotNil ("\u0050",_acae .P );_fdga .SetIfNotNil ("\u004e\u004d",_acae .NM );_fdga .SetIfNotNil ("\u004d",_acae .M );_fdga .SetIfNotNil ("\u0046",_acae .F );
_fdga .SetIfNotNil ("\u0041\u0050",_acae .AP );_fdga .SetIfNotNil ("\u0041\u0053",_acae .AS );_fdga .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_acae .Border );_fdga .SetIfNotNil ("\u0043",_acae .C );_fdga .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_acae .StructParent );
_fdga .SetIfNotNil ("\u004f\u0043",_acae .OC );return _acc ;};func (_bebgc *PdfPattern )getDict ()*_gb .PdfObjectDictionary {if _caega ,_eefa :=_bebgc ._egddg .(*_gb .PdfIndirectObject );_eefa {_dadda ,_abgeg :=_caega .PdfObject .(*_gb .PdfObjectDictionary );
if !_abgeg {return nil ;};return _dadda ;}else if _ddaeea ,_bcgcg :=_bebgc ._egddg .(*_gb .PdfObjectStream );_bcgcg {return _ddaeea .PdfObjectDictionary ;}else {_ag .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_bebgc ._egddg );
return nil ;};};func (_cbae *PdfReader )newPdfActionImportDataFromDict (_fea *_gb .PdfObjectDictionary )(*PdfActionImportData ,error ){_bae ,_feb :=_dbf (_fea .Get ("\u0046"));if _feb !=nil {return nil ,_feb ;};return &PdfActionImportData {F :_bae },nil ;
};

// GetContentStream returns the pattern cell's content stream
func (_bafeb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_faaaf ,_ ,_egbe :=_bafeb .GetContentStreamWithEncoder ();return _faaaf ,_egbe ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ddece *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _geee []float64 ;for _gddbb :=0;_gddbb < _ddece .GetNumComponents ();_gddbb ++{_geee =append (_geee ,0.0,1.0);};return _geee ;};func (_gea *PdfReader )newPdfActionGoTo3DViewFromDict (_bdg *_gb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bdg .Get ("\u0054\u0041"),V :_bdg .Get ("\u0056")},nil ;
};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_fbgf :=NewPdfAnnotation ();_fagbg :=&PdfAnnotationWidget {};_fagbg .PdfAnnotation =_fbgf ;_fbgf .SetContext (_fagbg );return _fagbg ;};func (_bggfd SignatureValidationResult )String ()string {var _ccfac _df .Buffer ;
_ccfac .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_bggfd .Name ));if _bggfd .Date ._cagfeb > 0{_ccfac .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_bggfd .Date .ToGoTime ().String ()));}else {_ccfac .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_bggfd .Reason )> 0{_ccfac .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bggfd .Reason ));}else {_ccfac .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_bggfd .Location )> 0{_ccfac .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bggfd .Location ));}else {_ccfac .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_bggfd .ContactInfo )> 0{_ccfac .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_bggfd .ContactInfo ));}else {_ccfac .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_ccfac .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_bggfd .Fields )));if _bggfd .IsSigned {_ccfac .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_ccfac .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _bggfd .IsVerified {_ccfac .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_ccfac .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _bggfd .IsTrusted {_ccfac .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_ccfac .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_bggfd .GeneralizedTime .IsZero (){_ccfac .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_bggfd .GeneralizedTime .String ()));
};return _ccfac .String ();};func (_baff *PdfReader )newPdfAnnotationFreeTextFromDict (_gfee *_gb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_eeb :=PdfAnnotationFreeText {};_abcc ,_aebb :=_baff .newPdfAnnotationMarkupFromDict (_gfee );if _aebb !=nil {return nil ,_aebb ;
};_eeb .PdfAnnotationMarkup =_abcc ;_eeb .DA =_gfee .Get ("\u0044\u0041");_eeb .Q =_gfee .Get ("\u0051");_eeb .RC =_gfee .Get ("\u0052\u0043");_eeb .DS =_gfee .Get ("\u0044\u0053");_eeb .CL =_gfee .Get ("\u0043\u004c");_eeb .IT =_gfee .Get ("\u0049\u0054");
_eeb .BE =_gfee .Get ("\u0042\u0045");_eeb .RD =_gfee .Get ("\u0052\u0044");_eeb .BS =_gfee .Get ("\u0042\u0053");_eeb .LE =_gfee .Get ("\u004c\u0045");return &_eeb ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cd *PdfAction )GetContainingPdfObject ()_gb .PdfObject {return _cd ._gae };

// ToInteger convert to an integer format.
func (_efgdf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ebef :=_ga .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ebef *_efgdf .A ()),uint32 (_ebef *_efgdf .B ()),uint32 (_ebef *_efgdf .C ())};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ddaab pdfCIDFontType0 )GetCharMetrics (code _eaf .CharCode )(_ed .CharMetrics ,bool ){_eebda :=_ddaab ._fcfc ;if _bedcc ,_fgdf :=_ddaab ._gdbe [code ];_fgdf {_eebda =_bedcc ;};return _ed .CharMetrics {Wx :_eebda },true ;};

// ToPdfObject converts rectangle to a PDF object.
func (_cfeba *PdfRectangle )ToPdfObject ()_gb .PdfObject {return _gb .MakeArray (_gb .MakeFloat (_cfeba .Llx ),_gb .MakeFloat (_cfeba .Lly ),_gb .MakeFloat (_cfeba .Urx ),_gb .MakeFloat (_cfeba .Ury ));};

// ToInteger convert to an integer format.
func (_fcad *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gddgb :=_ga .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gddgb *_fcad .C ()),uint32 (_gddgb *_fcad .M ()),uint32 (_gddgb *_fcad .Y ()),uint32 (_gddgb *_fcad .K ())};};type pdfFontSimple struct{fontCommon ;
_dgefa *_gb .PdfIndirectObject ;_ggdff map[_eaf .CharCode ]float64 ;_agee _eaf .TextEncoder ;_eafce _eaf .TextEncoder ;_dbeb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _gb .PdfObject ;LastChar _gb .PdfObject ;Widths _gb .PdfObject ;Encoding _gb .PdfObject ;_fbefa *_ed .RuneCharSafeMap ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_acbf *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_eafc ,_cbge :=color .(*PdfColorCalRGB );if !_cbge {_ag .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adccd :=_eafc .A ();_bbac :=_eafc .B ();_bbfa :=_eafc .C ();X :=_acbf .Matrix [0]*_ga .Pow (_adccd ,_acbf .Gamma [0])+_acbf .Matrix [3]*_ga .Pow (_bbac ,_acbf .Gamma [1])+_acbf .Matrix [6]*_ga .Pow (_bbfa ,_acbf .Gamma [2]);
Y :=_acbf .Matrix [1]*_ga .Pow (_adccd ,_acbf .Gamma [0])+_acbf .Matrix [4]*_ga .Pow (_bbac ,_acbf .Gamma [1])+_acbf .Matrix [7]*_ga .Pow (_bbfa ,_acbf .Gamma [2]);Z :=_acbf .Matrix [2]*_ga .Pow (_adccd ,_acbf .Gamma [0])+_acbf .Matrix [5]*_ga .Pow (_bbac ,_acbf .Gamma [1])+_acbf .Matrix [8]*_ga .Pow (_bbfa ,_acbf .Gamma [2]);
_adgg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eadc :=-0.969256*X +1.875992*Y +0.041556*Z ;_fbdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_adgg =_ga .Min (_ga .Max (_adgg ,0),1.0);_eadc =_ga .Min (_ga .Max (_eadc ,0),1.0);_fbdb =_ga .Min (_ga .Max (_fbdb ,0),1.0);
return NewPdfColorDeviceRGB (_adgg ,_eadc ,_fbdb ),nil ;};

// Val returns the value of the color.
func (_fbfe *PdfColorCalGray )Val ()float64 {return float64 (*_fbfe )};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_bea :=NewPdfAction ();_cdd :=&PdfActionGoToE {};_cdd .PdfAction =_bea ;_bea .SetContext (_cdd );return _cdd ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_gccb PdfModel ;Rect _gb .PdfObject ;Contents _gb .PdfObject ;P _gb .PdfObject ;NM _gb .PdfObject ;M _gb .PdfObject ;F _gb .PdfObject ;AP _gb .PdfObject ;AS _gb .PdfObject ;Border _gb .PdfObject ;C _gb .PdfObject ;StructParent _gb .PdfObject ;
OC _gb .PdfObject ;_gbac *_gb .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbd *PdfColorspaceSpecialSeparation )ToPdfObject ()_gb .PdfObject {_ecfc :=_gb .MakeArray (_gb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_ecfc .Append (_bbd .ColorantName );_ecfc .Append (_bbd .AlternateSpace .ToPdfObject ());
_ecfc .Append (_bbd .TintTransform .ToPdfObject ());if _bbd ._gfdb !=nil {_bbd ._gfdb .PdfObject =_ecfc ;return _bbd ._gfdb ;};return _ecfc ;};func _befaa (_edgfab *PdfPage ){_gcfgd :=_dc .GetLicenseKey ();if _gcfgd !=nil &&_gcfgd .IsLicensed (){return ;
};_cabag :=_gb .PdfObjectName ("\u0055\u0046\u0031");if !_edgfab .Resources .HasFontByName (_cabag ){_edgfab .Resources .SetFontByName (_cabag ,DefaultFont ().ToPdfObject ());};var _gdddg []string ;_gdddg =append (_gdddg ,"\u0071");_gdddg =append (_gdddg ,"\u0042\u0054");
_gdddg =append (_gdddg ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_cabag .String ()));_gdddg =append (_gdddg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_gdddg =append (_gdddg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_bgcbe :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_gdddg =append (_gdddg ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_bgcbe ));_gdddg =append (_gdddg ,"\u0045\u0054");_gdddg =append (_gdddg ,"\u0051");_gbde :=_fcf .Join (_gdddg ,"\u000a");_edgfab .AddContentStreamByString (_gbde );_edgfab .ToPdfObject ();
};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gdbfc *Outline )ToPdfOutline ()*PdfOutline {_gcadb :=NewPdfOutline ();var _adbbee []*PdfOutlineItem ;var _cdaa int64 ;var _bgbdf *PdfOutlineItem ;for _ ,_gcbd :=range _gdbfc .Entries {_geabd ,_edcba :=_gcbd .ToPdfOutlineItem ();_geabd .Parent =&_gcadb .PdfOutlineTreeNode ;
if _bgbdf !=nil {_bgbdf .Next =&_geabd .PdfOutlineTreeNode ;_geabd .Prev =&_bgbdf .PdfOutlineTreeNode ;};_adbbee =append (_adbbee ,_geabd );_cdaa +=_edcba ;_bgbdf =_geabd ;};_beega :=int64 (len (_adbbee ));_cdaa +=_beega ;if _beega > 0{_gcadb .First =&_adbbee [0].PdfOutlineTreeNode ;
_gcadb .Last =&_adbbee [_beega -1].PdfOutlineTreeNode ;_gcadb .Count =&_cdaa ;};return _gcadb ;};func (_eacd *PdfWriter )writeObject (_gfebe int ,_bfega _gb .PdfObject ){_ag .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gfebe );
if _ecdg ,_fbed :=_bfega .(*_gb .PdfIndirectObject );_fbed {_eacd ._dgdgb [_gfebe ]=crossReference {Type :1,Offset :_eacd ._aafdg ,Generation :_ecdg .GenerationNumber };_cccaa :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gfebe );if _fbfdd ,_eacge :=_ecdg .PdfObject .(*pdfSignDictionary );
_eacge {_fbfdd ._baagda =_eacd ._aafdg +int64 (len (_cccaa ));};if _ecdg .PdfObject ==nil {_ag .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_ecdg .PdfObject =_gb .MakeNull ();};_cccaa +=_ecdg .PdfObject .WriteString ();_cccaa +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_eacd .writeString (_cccaa );return ;};if _gfgef ,_bbdac :=_bfega .(*_gb .PdfObjectStream );_bbdac {_eacd ._dgdgb [_gfebe ]=crossReference {Type :1,Offset :_eacd ._aafdg ,Generation :_gfgef .GenerationNumber };
_ggaf :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gfebe );_ggaf +=_gfgef .PdfObjectDictionary .WriteString ();_ggaf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_eacd .writeString (_ggaf );_eacd .writeBytes (_gfgef .Stream );
_eacd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _cacfg ,_eedgeg :=_bfega .(*_gb .PdfObjectStreams );_eedgeg {_eacd ._dgdgb [_gfebe ]=crossReference {Type :1,Offset :_eacd ._aafdg ,Generation :_cacfg .GenerationNumber };
_ggdc :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gfebe );var _dace []string ;var _dcbdb string ;var _bedag int64 ;for _babbad ,_afbgg :=range _cacfg .Elements (){_cgad ,_ccgab :=_afbgg .(*_gb .PdfIndirectObject );if !_ccgab {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gfebe ,_afbgg );
continue ;};_fedb :=_cgad .PdfObject .WriteString ()+"\u0020";_dcbdb =_dcbdb +_fedb ;_dace =append (_dace ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_cgad .ObjectNumber ,_bedag ));_eacd ._dgdgb [int (_cgad .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gfebe ,Index :_babbad };
_bedag =_bedag +int64 (len ([]byte (_fedb )));};_egfbb :=_fcf .Join (_dace ,"\u0020")+"\u0020";_cadfd :=_gb .NewFlateEncoder ();_ddadf :=_cadfd .MakeStreamDict ();_ddadf .Set (_gb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_gb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_fdddd :=int64 (_cacfg .Len ());_ddadf .Set (_gb .PdfObjectName ("\u004e"),_gb .MakeInteger (_fdddd ));_ebfeg :=int64 (len (_egfbb ));_ddadf .Set (_gb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_gb .MakeInteger (_ebfeg ));_faeggb ,_ :=_cadfd .EncodeBytes ([]byte (_egfbb +_dcbdb ));
_gddfec :=int64 (len (_faeggb ));_ddadf .Set (_gb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_gb .MakeInteger (_gddfec ));_ggdc +=_ddadf .WriteString ();_ggdc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_eacd .writeString (_ggdc );
_eacd .writeBytes (_faeggb );_eacd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_eacd .writeString (_bfega .WriteString ());};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _fag .Time ;};

// ToPdfObject implements interface PdfModel.
func (_baae *PdfAnnotationSquare )ToPdfObject ()_gb .PdfObject {_baae .PdfAnnotation .ToPdfObject ();_caa :=_baae ._gbac ;_gfge :=_caa .PdfObject .(*_gb .PdfObjectDictionary );if _baae .PdfAnnotationMarkup !=nil {_baae .PdfAnnotationMarkup .appendToPdfDictionary (_gfge );
};_gfge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_gfge .SetIfNotNil ("\u0042\u0053",_baae .BS );_gfge .SetIfNotNil ("\u0049\u0043",_baae .IC );_gfge .SetIfNotNil ("\u0042\u0045",_baae .BE );
_gfge .SetIfNotNil ("\u0052\u0044",_baae .RD );return _caa ;};func _abaea (_fceae *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fceae }};func _fbfee (_ddbf *_gb .PdfObjectDictionary ,_bcec *fontCommon )(*pdfCIDFontType2 ,error ){if _bcec ._abec !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bcec );
return nil ,_gb .ErrRangeError ;};_gcee :=_aafc (_bcec );_bddbb ,_daeafd :=_gb .GetDict (_ddbf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_daeafd {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bcec );
return nil ,ErrRequiredAttributeMissing ;};_gcee .CIDSystemInfo =_bddbb ;_gcee .DW =_ddbf .Get ("\u0044\u0057");_gcee .W =_ddbf .Get ("\u0057");_gcee .DW2 =_ddbf .Get ("\u0044\u0057\u0032");_gcee .W2 =_ddbf .Get ("\u0057\u0032");_gcee .CIDToGIDMap =_ddbf .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gcee ._beec =1000.0;if _fggae ,_ccbd :=_gb .GetNumberAsFloat (_gcee .DW );_ccbd ==nil {_gcee ._beec =_fggae ;};_afcgc ,_dbae :=_facd (_gcee .W );if _dbae !=nil {return nil ,_dbae ;};if _afcgc ==nil {_afcgc =map[_eaf .CharCode ]float64 {};};_gcee ._abfb =_afcgc ;
return _gcee ,nil ;};func _fada (_bgf _gb .PdfObject )(*PdfColorspaceCalRGB ,error ){_dfae :=NewPdfColorspaceCalRGB ();if _bega ,_agfbg :=_bgf .(*_gb .PdfIndirectObject );_agfbg {_dfae ._gddb =_bega ;};_bgf =_gb .TraceToDirectObject (_bgf );_aaeabc ,_cdge :=_bgf .(*_gb .PdfObjectArray );
if !_cdge {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aaeabc .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bgf =_gb .TraceToDirectObject (_aaeabc .Get (0));_ccbfb ,_cdge :=_bgf .(*_gb .PdfObjectName );if !_cdge {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_ccbfb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bgf =_gb .TraceToDirectObject (_aaeabc .Get (1));
_abcbf ,_cdge :=_bgf .(*_gb .PdfObjectDictionary );if !_cdge {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_bgf =_abcbf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_bgf =_gb .TraceToDirectObject (_bgf );_fegaf ,_cdge :=_bgf .(*_gb .PdfObjectArray );if !_cdge {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _fegaf .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_daea ,_ddec :=_fegaf .GetAsFloat64Slice ();
if _ddec !=nil {return nil ,_ddec ;};_dfae .WhitePoint =_daea ;_bgf =_abcbf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bgf !=nil {_bgf =_gb .TraceToDirectObject (_bgf );_dedb ,_fgbb :=_bgf .(*_gb .PdfObjectArray );if !_fgbb {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _dedb .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_fgeg ,_bbef :=_dedb .GetAsFloat64Slice ();
if _bbef !=nil {return nil ,_bbef ;};_dfae .BlackPoint =_fgeg ;};_bgf =_abcbf .Get ("\u0047\u0061\u006dm\u0061");if _bgf !=nil {_bgf =_gb .TraceToDirectObject (_bgf );_gfgb ,_cdee :=_bgf .(*_gb .PdfObjectArray );if !_cdee {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _gfgb .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_cfbf ,_gfged :=_gfgb .GetAsFloat64Slice ();if _gfged !=nil {return nil ,_gfged ;
};_dfae .Gamma =_cfbf ;};_bgf =_abcbf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bgf !=nil {_bgf =_gb .TraceToDirectObject (_bgf );_gabd ,_fcce :=_bgf .(*_gb .PdfObjectArray );if !_fcce {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _gabd .Len ()!=9{_ag .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_gabd .String ());return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_fccbf ,_gede :=_gabd .GetAsFloat64Slice ();if _gede !=nil {return nil ,_gede ;};_dfae .Matrix =_fccbf ;};return _dfae ,nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_dbfdg *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _eeega []*PdfOutlineTreeNode ;var _gfffd []string ;var _decag func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_decag =func (_bacda *PdfOutlineTreeNode ,_agega *[]*PdfOutlineTreeNode ,_dbaab *[]string ,_dcbb int ){if _bacda ==nil {return ;
};if _bacda ._dedbb ==nil {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bbebf ,_bdcf :=_bacda ._dedbb .(*PdfOutlineItem );if _bdcf {*_agega =append (*_agega ,&_bbebf .PdfOutlineTreeNode );
_dgcgb :=_fcf .Repeat ("\u0020",_dcbb *2)+_bbebf .Title .Decoded ();*_dbaab =append (*_dbaab ,_dgcgb );};if _bacda .First !=nil {_caegb :=_fcf .Repeat ("\u0020",_dcbb *2)+"\u002b";*_dbaab =append (*_dbaab ,_caegb );_decag (_bacda .First ,_agega ,_dbaab ,_dcbb +1);
};if _bdcf &&_bbebf .Next !=nil {_decag (_bbebf .Next ,_agega ,_dbaab ,_dcbb );};};_decag (_dbfdg ._dbdbe ,&_eeega ,&_gfffd ,0);return _eeega ,_gfffd ,nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_ef :=NewPdfAction ();_efc :=&PdfActionNamed {};_efc .PdfAction =_ef ;_ef .SetContext (_efc );return _efc ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_gb .PdfObjectArray ;};type pdfSignDictionary struct{*_gb .PdfObjectDictionary ;_deccaf *SignatureHandler ;_ecea *PdfSignature ;_baagda int64 ;_gacag int ;_bbfec int ;_dgbad int ;_eebad int ;};func (_gef *PdfReader )newPdfActionTransFromDict (_eea *_gb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_eea .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_aebad *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdcf ,_deaa :=_gb .GetNumbersAsFloat (objects );
if _deaa !=nil {return nil ,_deaa ;};return _aebad .ColorFromFloats (_cdcf );};func _ddecb (_badf _gb .PdfObject )(*fontFile ,error ){_ag .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_badf );
_edceg :=&fontFile {};_badf =_gb .TraceToDirectObject (_badf );_fegb ,_degcf :=_badf .(*_gb .PdfObjectStream );if !_degcf {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_badf );
return nil ,_gb .ErrTypeError ;};_gaecf :=_fegb .PdfObjectDictionary ;_cgbf ,_afef :=_gb .DecodeStream (_fegb );if _afef !=nil {return nil ,_afef ;};_begd ,_degcf :=_gb .GetNameVal (_gaecf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_degcf {_edceg ._bcbc =_begd ;
if _begd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ag .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_cgbff ,_ :=_gb .GetIntVal (_gaecf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fcgd ,_ :=_gb .GetIntVal (_gaecf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cgbff > len (_cgbf ){_cgbff =len (_cgbf );
};if _cgbff +_fcgd > len (_cgbf ){_fcgd =len (_cgbf )-_cgbff ;};_aedee :=_cgbf [:_cgbff ];var _fcegb []byte ;if _fcgd > 0{_fcegb =_cgbf [_cgbff :_cgbff +_fcgd ];};if _cgbff > 0&&_fcgd > 0{_cdgdd :=_edceg .loadFromSegments (_aedee ,_fcegb );if _cdgdd !=nil {return nil ,_cdgdd ;
};};return _edceg ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bgfd *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgfd .Base ==nil {return nil ,_dd .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bgfd .Base .ColorToRGB (color );};func _afdbg (_cbacc *[]*PdfField ,_eegf FieldFilterFunc ,_abbea bool )[]*PdfField {if _cbacc ==nil {return nil ;};_fffag :=*_cbacc ;if len (*_cbacc )==0{return nil ;};_aadad :=_fffag [:0];if _eegf ==nil {_eegf =func (*PdfField )bool {return true };
};var _eebfg []*PdfField ;for _ ,_abcea :=range _fffag {_adde :=_eegf (_abcea );if _adde {_eebfg =append (_eebfg ,_abcea );if len (_abcea .Kids )> 0{_eebfg =append (_eebfg ,_afdbg (&_abcea .Kids ,_eegf ,_abbea )...);};};if !_abbea ||!_adde ||len (_abcea .Kids )> 0{_aadad =append (_aadad ,_abcea );
};};*_cbacc =_aadad ;return _eebfg ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gdcbe *PdfRectangle )Normalize (){if _gdcbe .Llx > _gdcbe .Urx {_gdcbe .Llx ,_gdcbe .Urx =_gdcbe .Urx ,_gdcbe .Llx ;};if _gdcbe .Lly > _gdcbe .Ury {_gdcbe .Lly ,_gdcbe .Ury =_gdcbe .Ury ,_gdcbe .Lly ;};};func _dbf (_gddd _gb .PdfObject )(*PdfFilespec ,error ){if _gddd ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_gddd );};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bebcg *PdfOutlineTreeNode )GetContext ()PdfModel {if _fdddc ,_agabb :=_bebcg ._dedbb .(*PdfOutline );_agabb {return _fdddc ;};if _egebd ,_fdacb :=_bebcg ._dedbb .(*PdfOutlineItem );_fdacb {return _egebd ;};_ag .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gcag *PdfOutlineItem )ToPdfObject ()_gb .PdfObject {_fbfge :=_gcag ._abacg ;_fcdef :=_fbfge .PdfObject .(*_gb .PdfObjectDictionary );_fcdef .Set ("\u0054\u0069\u0074l\u0065",_gcag .Title );if _gcag .A !=nil {_fcdef .Set ("\u0041",_gcag .A );};if _gfbcf :=_fcdef .Get ("\u0053\u0045");
_gfbcf !=nil {_fcdef .Remove ("\u0053\u0045");};if _gcag .C !=nil {_fcdef .Set ("\u0043",_gcag .C );};if _gcag .Dest !=nil {_fcdef .Set ("\u0044\u0065\u0073\u0074",_gcag .Dest );};if _gcag .F !=nil {_fcdef .Set ("\u0046",_gcag .F );};if _gcag .Count !=nil {_fcdef .Set ("\u0043\u006f\u0075n\u0074",_gb .MakeInteger (*_gcag .Count ));
};if _gcag .Next !=nil {_fcdef .Set ("\u004e\u0065\u0078\u0074",_gcag .Next .ToPdfObject ());};if _gcag .First !=nil {_fcdef .Set ("\u0046\u0069\u0072s\u0074",_gcag .First .ToPdfObject ());};if _gcag .Prev !=nil {_fcdef .Set ("\u0050\u0072\u0065\u0076",_gcag .Prev .GetContext ().GetContainingPdfObject ());
};if _gcag .Last !=nil {_fcdef .Set ("\u004c\u0061\u0073\u0074",_gcag .Last .GetContext ().GetContainingPdfObject ());};if _gcag .Parent !=nil {_fcdef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcag .Parent .GetContext ().GetContainingPdfObject ());
};return _fbfge ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_gaff FieldFlag )Mask ()uint32 {return uint32 (_gaff )};func (_debc fontCommon )asPdfObjectDictionary (_fffff string )*_gb .PdfObjectDictionary {if _fffff !=""&&_debc ._abec !=""&&_fffff !=_debc ._abec {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fffff ,_debc );
}else if _fffff ==""&&_debc ._abec ==""{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_debc );
}else if _debc ._abec ==""{_debc ._abec =_fffff ;};_cgbb :=_gb .MakeDict ();_cgbb .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0046\u006f\u006e\u0074"));_cgbb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gb .MakeName (_debc ._cacfa ));
_cgbb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName (_debc ._abec ));if _debc ._gdef !=nil {_cgbb .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_debc ._gdef .ToPdfObject ());};if _debc ._efaa !=nil {_cgbb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_debc ._efaa );
}else if _debc ._dfbfc !=nil {_feefe ,_egcg :=_debc ._dfbfc .Stream ();if _egcg !=nil {_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_egcg );
}else {_cgbb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_feefe );};};return _cgbb ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_egdb *VRI )ToPdfObject ()*_gb .PdfObjectDictionary {_eafa :=_gb .MakeDict ();_eafa .SetIfNotNil (_gb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_efccfe (_egdb .Cert ));_eafa .SetIfNotNil (_gb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_efccfe (_egdb .OCSP ));
_eafa .SetIfNotNil (_gb .PdfObjectName ("\u0043\u0052\u004c"),_efccfe (_egdb .CRL ));_eafa .SetIfNotNil ("\u0054\u0055",_egdb .TU );_eafa .SetIfNotNil ("\u0054\u0053",_egdb .TS );return _eafa ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_gbbdc *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_gbbdc ._accac =colorspace ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func _gcbec (_cbbba *PdfField ,_fdde _gb .PdfObject )error {switch _cbbba .GetContext ().(type ){case *PdfFieldText :switch _cgbgd :=_fdde .(type ){case *_gb .PdfObjectName :_ggdde :=_cgbgd ;
_ag .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ggdde .String ());
_cbbba .V =_gb .MakeEncodedString (_cgbgd .String (),true );case *_gb .PdfObjectString :_cbbba .V =_gb .MakeEncodedString (_cgbgd .String (),true );default:_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_cgbgd ,_cgbgd );
};case *PdfFieldButton :switch _fdde .(type ){case *_gb .PdfObjectName :if len (_fdde .String ())> 0{_cbbba .V =_fdde ;_bbbf (_cbbba ,_fdde );};case *_gb .PdfObjectString :if len (_fdde .String ())> 0{_cbbba .V =_gb .MakeName (_fdde .String ());_bbbf (_cbbba ,_cbbba .V );
};default:_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cbbba .PartialName (),_fdde );_cbbba .V =_fdde ;};case *PdfFieldChoice :switch _fdde .(type ){case *_gb .PdfObjectName :if len (_fdde .String ())> 0{_cbbba .V =_gb .MakeString (_fdde .String ());
_bbbf (_cbbba ,_fdde );};case *_gb .PdfObjectString :if len (_fdde .String ())> 0{_cbbba .V =_fdde ;_bbbf (_cbbba ,_gb .MakeName (_fdde .String ()));};default:_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cbbba .PartialName (),_fdde );
_cbbba .V =_fdde ;};case *PdfFieldSignature :_ag .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cbbba .PartialName (),_fdde );
};return nil ;};func _debg (_cafea _gb .PdfObject )(string ,error ){_cafea =_gb .TraceToDirectObject (_cafea );switch _fgfcd :=_cafea .(type ){case *_gb .PdfObjectString :return _fgfcd .Str (),nil ;case *_gb .PdfObjectStream :_dbdfd ,_affgd :=_gb .DecodeStream (_fgfcd );
if _affgd !=nil {return "",_affgd ;};return string (_dbdfd ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cafea );
};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_cgcb DefaultImageHandler )NewImageFromGoImage (goimg _be .Image )(*Image ,error ){_gfdeb ,_deeeb :=_aag .FromGoImage (goimg );if _deeeb !=nil {return nil ,_deeeb ;};_dgdfd :=_dcgf (_gfdeb .Base ());return &_dgdfd ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_ecfcf *_gb .PdfIndirectObject ;Certs []*_gb .PdfObjectStream ;OCSPs []*_gb .PdfObjectStream ;CRLs []*_gb .PdfObjectStream ;VRI map[string ]*VRI ;_fdea map[string ]*_gb .PdfObjectStream ;_bcae map[string ]*_gb .PdfObjectStream ;_cfbe map[string ]*_gb .PdfObjectStream ;
};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_gb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gfdb *_gb .PdfIndirectObject ;};func (_fcbdf *pdfFontType0 )baseFields ()*fontCommon {return &_fcbdf .fontCommon };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gfad *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbgfa :=vals [0];if _fbgfa < 0.0||_fbgfa > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ebfc :=vals [1];if _ebfc < 0.0||_ebfc > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecbe :=vals [2];if _ecbe < 0.0||_ecbe > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fcbg :=NewPdfColorCalRGB (_fbgfa ,_ebfc ,_ecbe );return _fcbg ,nil ;};

// Encoder returns the font's text encoder.
func (_bcgg *PdfFont )Encoder ()_eaf .TextEncoder {_efcc :=_bcgg .actualFont ();if _efcc ==nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bcgg ._faee );
return nil ;};return _efcc .Encoder ();};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_cdbcf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_gb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _gb .PdfObject ;A _gb .PdfObject ;SE _gb .PdfObject ;C _gb .PdfObject ;F _gb .PdfObject ;
_abacg *_gb .PdfIndirectObject ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_efab []_gb .PdfObject )([]_gb .PdfObject ,error );};

// SetContext sets the sub action (context).
func (_aeab *PdfAction )SetContext (ctx PdfModel ){_aeab ._eg =ctx };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_fded *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _fded .Alternate ==nil {_ag .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _fded .N ==1{_ag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_agcf :=NewPdfColorspaceDeviceGray ();return _agcf .ImageToRGB (img );}else if _fded .N ==3{_ag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _fded .N ==4{_ag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gdegd :=NewPdfColorspaceDeviceCMYK ();return _gdegd .ImageToRGB (img );}else {return img ,_dd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ag .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_fded );
_cafc ,_gacf :=_fded .Alternate .ImageToRGB (img );_ag .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ag .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_cafc );
return _cafc ,_gacf ;};

// SetFlag sets the flag for the field.
func (_fggf *PdfField )SetFlag (flag FieldFlag ){_fggf .Ff =_gb .MakeInteger (int64 (flag ))};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fad :=&PdfAnnotation {};_fad ._gbac =_gb .MakeIndirectObject (_gb .MakeDict ());return _fad ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gffgb *PdfShadingType6 )ToPdfObject ()_gb .PdfObject {_gffgb .PdfShading .ToPdfObject ();_gggcc ,_gecae :=_gffgb .getShadingDict ();if _gecae !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gffgb .BitsPerCoordinate !=nil {_gggcc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gffgb .BitsPerCoordinate );};if _gffgb .BitsPerComponent !=nil {_gggcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gffgb .BitsPerComponent );
};if _gffgb .BitsPerFlag !=nil {_gggcc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gffgb .BitsPerFlag );};if _gffgb .Decode !=nil {_gggcc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gffgb .Decode );};if _gffgb .Function !=nil {if len (_gffgb .Function )==1{_gggcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gffgb .Function [0].ToPdfObject ());
}else {_dafcb :=_gb .MakeArray ();for _ ,_dccc :=range _gffgb .Function {_dafcb .Append (_dccc .ToPdfObject ());};_gggcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dafcb );};};return _gffgb ._aggbc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bcee *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdgd ,_dafa :=_gb .GetNumbersAsFloat (objects );
if _dafa !=nil {return nil ,_dafa ;};return _bcee .ColorFromFloats (_cdgd );};

// ToInteger convert to an integer format.
func (_egb *PdfColorCalGray )ToInteger (bits int )uint32 {_baaab :=_ga .Pow (2,float64 (bits ))-1;return uint32 (_baaab *_egb .Val ());};func (_cdcd *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _cdcd ._gdef ==nil &&_cdcd .DescendantFont !=nil {return _cdcd .DescendantFont .FontDescriptor ();
};return _cdcd ._gdef ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_eadg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_dd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cdca :=&PdfColorPattern {};_fabc ,_ccca :=objects [len (objects )-1].(*_gb .PdfObjectName );if !_ccca {_ag .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cdca .PatternName =*_fabc ;if len (objects )> 1{_eaba :=objects [0:len (objects )-1];if _eadg .UnderlyingCS ==nil {_ag .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_dd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_gbba ,_efgde :=_eadg .UnderlyingCS .ColorFromPdfObjects (_eaba );if _efgde !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_efgde );
return nil ,_efgde ;};_cdca .Color =_gbba ;};return _cdca ,nil ;};func (_bdeed *PdfReader )newPdfAnnotationRichMediaFromDict (_edce *_gb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ebfg :=&PdfAnnotationRichMedia {};_ebfg .RichMediaSettings =_edce .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_ebfg .RichMediaContent =_edce .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ebfg ,nil ;};func _dbaf (_cecgc string )(string ,error ){var _bggaf _df .Buffer ;_bggaf .WriteString (_cecgc );_cbgc :=make ([]byte ,8+16);
_aaagg :=_fag .Now ().UTC ().UnixNano ();_c .BigEndian .PutUint64 (_cbgc ,uint64 (_aaagg ));_ ,_eefeag :=_e .Read (_cbgc [8:]);if _eefeag !=nil {return "",_eefeag ;};_bggaf .WriteString (_d .EncodeToString (_cbgc ));return _bggaf .String (),nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_abdf *PdfSignature )GetContainingPdfObject ()_gb .PdfObject {return _abdf ._dggbe };

// AllFields returns a flattened list of all fields in the form.
func (_egde *PdfAcroForm )AllFields ()[]*PdfField {if _egde ==nil {return nil ;};var _gegcc []*PdfField ;if _egde .Fields !=nil {for _ ,_egdbe :=range *_egde .Fields {_gegcc =append (_gegcc ,_eecbf (_egdbe )...);};};return _gegcc ;};var (ErrRequiredAttributeMissing =_dd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_dd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_abef =_dd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_dd .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_dd .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_gf .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_gb .ErrNotSupported );ErrType1CFontNotSupported =_gf .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gb .ErrNotSupported );
ErrType3FontNotSupported =_gf .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_gb .ErrNotSupported );
ErrTTCmapNotSupported =_gf .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_gb .ErrNotSupported );
ErrSignNotEnoughSpace =_gf .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_gf .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func _bbacf (_bgdc _gb .PdfObject )(*_gb .PdfObjectDictionary ,*fontCommon ,error ){_dgdb :=&fontCommon {};
if _bgebd ,_cgde :=_bgdc .(*_gb .PdfIndirectObject );_cgde {_dgdb ._cbcaf =_bgebd .ObjectNumber ;};_bfffgg ,_ffca :=_gb .GetDict (_bgdc );if !_ffca {_ag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bgdc );
return nil ,nil ,ErrFontNotSupported ;};_dfbe ,_ffca :=_gb .GetNameVal (_bfffgg .Get ("\u0054\u0079\u0070\u0065"));if !_ffca {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _dfbe !="\u0046\u006f\u006e\u0074"{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_dfbe ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_gb .ErrTypeError ;};_eaecd ,_ffca :=_gb .GetNameVal (_bfffgg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ffca {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_dgdb ._abec =_eaecd ;_aeddd ,_ffca :=_gb .GetNameVal (_bfffgg .Get ("\u004e\u0061\u006d\u0065"));if _ffca {_dgdb ._eeceb =_aeddd ;};if _eaecd =="\u0054\u0079\u0070e\u0033"{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_bfffgg );
return _bfffgg ,_dgdb ,ErrType3FontNotSupported ;};_debd ,_ffca :=_gb .GetNameVal (_bfffgg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_ffca {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _bfffgg ,_dgdb ,ErrRequiredAttributeMissing ;};_dgdb ._cacfa =_debd ;_dag :=_bfffgg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dag !=nil {_ggaee ,_ecab :=_dbddf (_dag );if _ecab !=nil {_ag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ecab );
return _bfffgg ,_dgdb ,_ecab ;};_dgdb ._gdef =_ggaee ;};_ggaeb :=_bfffgg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ggaeb !=nil {_dgdb ._efaa =_gb .TraceToDirectObject (_ggaeb );_dfbbf ,_cdbfb :=_ccdg (_dgdb ._efaa ,_dgdb );if _cdbfb !=nil {return _bfffgg ,_dgdb ,_cdbfb ;
};_dgdb ._dfbfc =_dfbbf ;}else if _eaecd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_eaecd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gagg ,_acfc :=_ba .NewCIDSystemInfo (_bfffgg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _acfc !=nil {return _bfffgg ,_dgdb ,_acfc ;};_gdbf :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gagg .Registry ,_gagg .Ordering );if _ba .IsPredefinedCMap (_gdbf ){_dgdb ._dfbfc ,_acfc =_ba .LoadPredefinedCMap (_gdbf );
if _acfc !=nil {_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gdbf ,_acfc );
};};};return _bfffgg ,_dgdb ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_caggf *PdfPage )GetContainingPdfObject ()_gb .PdfObject {return _caggf ._gdda };

// SetShadingByName sets a shading resource specified by keyName.
func (_eegfc *PdfPageResources )SetShadingByName (keyName _gb .PdfObjectName ,shadingObj _gb .PdfObject )error {if _eegfc .Shading ==nil {_eegfc .Shading =_gb .MakeDict ();};_adegb ,_ddecbg :=_eegfc .Shading .(*_gb .PdfObjectDictionary );if !_ddecbg {return _gb .ErrTypeError ;
};_adegb .Set (keyName ,shadingObj );return nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cfde _gb .PdfObject ;};func _aafc (_beafb *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_beafb }};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ddgca *PdfPageResources )GetFontByName (keyName _gb .PdfObjectName )(_gb .PdfObject ,bool ){if _ddgca .Font ==nil {return nil ,false ;};_fcaab ,_aabad :=_gb .TraceToDirectObject (_ddgca .Font ).(*_gb .PdfObjectDictionary );if !_aabad {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gb .TraceToDirectObject (_ddgca .Font ));
return nil ,false ;};if _ffdf :=_fcaab .Get (keyName );_ffdf !=nil {return _ffdf ,true ;};return nil ,false ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gedfg *PdfFilespec )GetContainingPdfObject ()_gb .PdfObject {return _gedfg ._fcaag };

// Evaluate runs the function on the passed in slice and returns the results.
func (_ffdaa *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ffdaa .NumInputs {_ag .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_dd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ffdaa ._eecea ==nil {_eagg :=_ffdaa .processSamples ();if _eagg !=nil {return nil ,_eagg ;};};_aecgf :=_ffdaa .Encode ;if _aecgf ==nil {_aecgf =[]float64 {};
for _gbggc :=0;_gbggc < len (_ffdaa .Size );_gbggc ++{_aecgf =append (_aecgf ,0);_aecgf =append (_aecgf ,float64 (_ffdaa .Size [_gbggc ]-1));};};_fgdfc :=_ffdaa .Decode ;if _fgdfc ==nil {_fgdfc =_ffdaa .Range ;};_eacadb :=make ([]int ,len (x ));for _dgdc :=0;
_dgdc < len (x );_dgdc ++{_fgde :=x [_dgdc ];_bbga :=_ga .Min (_ga .Max (_fgde ,_ffdaa .Domain [2*_dgdc ]),_ffdaa .Domain [2*_dgdc +1]);_gabbb :=_aag .LinearInterpolate (_bbga ,_ffdaa .Domain [2*_dgdc ],_ffdaa .Domain [2*_dgdc +1],_aecgf [2*_dgdc ],_aecgf [2*_dgdc +1]);
_edad :=_ga .Min (_ga .Max (_gabbb ,0),float64 (_ffdaa .Size [_dgdc ]-1));_gdcb :=int (_ga .Floor (_edad +0.5));if _gdcb < 0{_gdcb =0;}else if _gdcb > _ffdaa .Size [_dgdc ]{_gdcb =_ffdaa .Size [_dgdc ]-1;};_eacadb [_dgdc ]=_gdcb ;};_dgdbd :=_eacadb [0];
for _cbbec :=1;_cbbec < _ffdaa .NumInputs ;_cbbec ++{_adcg :=_eacadb [_cbbec ];for _cafb :=0;_cafb < _cbbec ;_cafb ++{_adcg *=_ffdaa .Size [_cafb ];};_dgdbd +=_adcg ;};_dgdbd *=_ffdaa .NumOutputs ;var _beacf []float64 ;for _addgc :=0;_addgc < _ffdaa .NumOutputs ;
_addgc ++{_aafad :=_dgdbd +_addgc ;if _aafad >=len (_ffdaa ._eecea ){_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_cgabg :=_ffdaa ._eecea [_aafad ];_bfcbg :=_aag .LinearInterpolate (float64 (_cgabg ),0,_ga .Pow (2,float64 (_ffdaa .BitsPerSample )),_fgdfc [2*_addgc ],_fgdfc [2*_addgc +1]);_ccgf :=_ga .Min (_ga .Max (_bfcbg ,_ffdaa .Range [2*_addgc ]),_ffdaa .Range [2*_addgc +1]);
_beacf =append (_beacf ,_ccgf );};return _beacf ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_gacbe *PdfReader )IsEncrypted ()(bool ,error ){return _gacbe ._faefdf .IsEncrypted ()};func _daeaf (_cddda _gb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ag .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cddda .String (),_cddda );
_ddgb :=NewPdfColorspaceSpecialPattern ();if _gfea ,_fffba :=_cddda .(*_gb .PdfIndirectObject );_fffba {_ddgb ._gege =_gfea ;};_cddda =_gb .TraceToDirectObject (_cddda );if _fbag ,_befg :=_cddda .(*_gb .PdfObjectName );_befg {if *_fbag !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _ddgb ,nil ;};_eadf ,_bcfd :=_cddda .(*_gb .PdfObjectArray );if !_bcfd {_ag .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cddda );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _eadf .Len ()!=1&&_eadf .Len ()!=2{_ag .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_eadf );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cddda =_eadf .Get (0);if _abced ,_becb :=_cddda .(*_gb .PdfObjectName );_becb {if *_abced !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ag .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_abced );
return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _eadf .Len ()> 1{_cddda =_eadf .Get (1);_cddda =_gb .TraceToDirectObject (_cddda );_abbe ,_bdaf :=NewPdfColorspaceFromPdfObject (_cddda );if _bdaf !=nil {return nil ,_bdaf ;
};_ddgb .UnderlyingCS =_abbe ;};_ag .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_ddgb .UnderlyingCS );
return _ddgb ,nil ;};

// Add appends a top level outline item to the outline.
func (_cadb *Outline )Add (item *OutlineItem ){_cadb .Entries =append (_cadb .Entries ,item )};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_dgdd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_gb .PdfObject {_gcec :=_gb .MakeDict ();if _dgdd .Subtype !=nil {_gcec .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dgdd .Subtype );};_gcec .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_dgdd .Colorants );
_gcec .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_dgdd .Process );_gcec .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_dgdd .MixingHints );if _dgdd ._dbgac !=nil {_dgdd ._dbgac .PdfObject =_gcec ;return _dgdd ._dbgac ;
};return _gcec ;};

// ToPdfObject converts the font to a PDF representation.
func (_bebf *pdfFontType0 )ToPdfObject ()_gb .PdfObject {if _bebf ._gbec ==nil {_bebf ._gbec =&_gb .PdfIndirectObject {};};_egee :=_bebf .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bebf ._gbec .PdfObject =_egee ;if _bebf .Encoding !=nil {_egee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bebf .Encoding );
}else if _bebf ._dfaad !=nil {_egee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bebf ._dfaad .ToPdfObject ());};if _bebf .DescendantFont !=nil {_egee .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_gb .MakeArray (_bebf .DescendantFont .ToPdfObject ()));
};return _bebf ._gbec ;};

// ToPdfObject implements interface PdfModel.
func (_gecc *PdfAnnotationTrapNet )ToPdfObject ()_gb .PdfObject {_gecc .PdfAnnotation .ToPdfObject ();_gcf :=_gecc ._gbac ;_feec :=_gcf .PdfObject .(*_gb .PdfObjectDictionary );_feec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _gcf ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _gb .PdfObject ;Dest _gb .PdfObject ;H _gb .PdfObject ;PA _gb .PdfObject ;QuadPoints _gb .PdfObject ;BS _gb .PdfObject ;_ecad *PdfAction ;_fffb *PdfReader ;};

// ToPdfObject implements interface PdfModel.
func (_cbad *PdfAnnotationWatermark )ToPdfObject ()_gb .PdfObject {_cbad .PdfAnnotation .ToPdfObject ();_gbgd :=_cbad ._gbac ;_gfb :=_gbgd .PdfObject .(*_gb .PdfObjectDictionary );_gfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gfb .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_cbad .FixedPrint );return _gbgd ;};func (_gdaac *LTV )getCRLs (_fddef []*_g .Certificate )([][]byte ,error ){_ggefg :=make ([][]byte ,0,len (_fddef ));for _ ,_cgcfd :=range _fddef {for _ ,_fffbb :=range _cgcfd .CRLDistributionPoints {if _gdaac .CertClient .IsCA (_cgcfd ){continue ;
};_babeb ,_ecfae :=_gdaac .CRLClient .MakeRequest (_fffbb ,_cgcfd );if _ecfae !=nil {_ag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ecfae );continue ;
};_ggefg =append (_ggefg ,_babeb );};};return _ggefg ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_gb .PdfObjectString ;Author *_gb .PdfObjectString ;Subject *_gb .PdfObjectString ;Keywords *_gb .PdfObjectString ;Creator *_gb .PdfObjectString ;Producer *_gb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_gb .PdfObjectName ;
_dfee *_gb .PdfObjectDictionary ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_adba *PdfWriter )SetPageLabels (pageLabels _gb .PdfObject )error {if pageLabels ==nil {return nil ;};_ag .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_adba ._ecaec .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _adba .addObjects (pageLabels );};func (_deg *PdfReader )newPdfAnnotationSquigglyFromDict (_bbb *_gb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gfcd :=PdfAnnotationSquiggly {};
_aeg ,_gcde :=_deg .newPdfAnnotationMarkupFromDict (_bbb );if _gcde !=nil {return nil ,_gcde ;};_gfcd .PdfAnnotationMarkup =_aeg ;_gfcd .QuadPoints =_bbb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gfcd ,nil ;};func (_cadd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_ebbc :=&PdfSignature {Type :_gb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_edcae :=&pdfSignDictionary {PdfObjectDictionary :_gb .MakeDict (),_deccaf :&handler ,_ecea :_ebbc };_ebbc ._dggbe =_gb .MakeIndirectObject (_edcae );
return _ebbc ;};func (_gdafc Image )getBase ()_aag .ImageBase {return _aag .NewImageBase (int (_gdafc .Width ),int (_gdafc .Height ),int (_gdafc .BitsPerComponent ),_gdafc .ColorComponents ,_gdafc .Data ,_gdafc ._aggec ,_gdafc ._fbga );};

// ToPdfObject returns a stream object.
func (_ebfeaa *XObjectForm )ToPdfObject ()_gb .PdfObject {_effef :=_ebfeaa ._bfaeg ;_cecbf :=_effef .PdfObjectDictionary ;if _ebfeaa .Filter !=nil {_cecbf =_ebfeaa .Filter .MakeStreamDict ();_effef .PdfObjectDictionary =_cecbf ;};_cecbf .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_cecbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0046\u006f\u0072\u006d"));_cecbf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_ebfeaa .FormType );_cecbf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_ebfeaa .BBox );
_cecbf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebfeaa .Matrix );if _ebfeaa .Resources !=nil {_cecbf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebfeaa .Resources .ToPdfObject ());};_cecbf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ebfeaa .Group );
_cecbf .SetIfNotNil ("\u0052\u0065\u0066",_ebfeaa .Ref );_cecbf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_ebfeaa .MetaData );_cecbf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ebfeaa .PieceInfo );_cecbf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ebfeaa .LastModified );
_cecbf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebfeaa .StructParent );_cecbf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ebfeaa .StructParents );_cecbf .SetIfNotNil ("\u004f\u0050\u0049",_ebfeaa .OPI );
_cecbf .SetIfNotNil ("\u004f\u0043",_ebfeaa .OC );_cecbf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebfeaa .Name );_cecbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_ebfeaa .Stream ))));_effef .Stream =_ebfeaa .Stream ;return _effef ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bfaa pdfFontType0 )GetRuneMetrics (r rune )(_ed .CharMetrics ,bool ){if _bfaa .DescendantFont ==nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bfaa );
return _ed .CharMetrics {},false ;};return _bfaa .DescendantFont .GetRuneMetrics (r );};

// GetDescent returns the Descent of the font `descriptor`.
func (_gdcgc *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _gb .GetNumberAsFloat (_gdcgc .Descent );};

// SetVersion sets the PDF version of the output file.
func (_gabgg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gabgg ._abecc =majorVersion ;_gabgg ._afce =minorVersion ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cccf *PdfFieldChoice )ToPdfObject ()_gb .PdfObject {_cccf .PdfField .ToPdfObject ();_aadab :=_cccf ._feag ;_ebab :=_aadab .PdfObject .(*_gb .PdfObjectDictionary );_ebab .Set ("\u0046\u0054",_gb .MakeName ("\u0043\u0068"));if _cccf .Opt !=nil {_ebab .Set ("\u004f\u0070\u0074",_cccf .Opt );
};if _cccf .TI !=nil {_ebab .Set ("\u0054\u0049",_cccf .TI );};if _cccf .I !=nil {_ebab .Set ("\u0049",_cccf .I );};return _aadab ;};func _fcccg (_dcaag *_gb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fffdd :=&PdfTilingPattern {};_baagd :=_dcaag .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _baagd ==nil {_ag .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cebcd ,_afdda :=_baagd .(*_gb .PdfObjectInteger );if !_afdda {_ag .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_baagd );
return nil ,_gb .ErrTypeError ;};_fffdd .PaintType =_cebcd ;_baagd =_dcaag .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _baagd ==nil {_ag .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dfcgc ,_afdda :=_baagd .(*_gb .PdfObjectInteger );if !_afdda {_ag .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_baagd );
return nil ,_gb .ErrTypeError ;};_fffdd .TilingType =_dfcgc ;_baagd =_dcaag .Get ("\u0042\u0042\u006f\u0078");if _baagd ==nil {_ag .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_baagd =_gb .TraceToDirectObject (_baagd );_ebdea ,_afdda :=_baagd .(*_gb .PdfObjectArray );if !_afdda {_ag .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_baagd );
return nil ,_gb .ErrTypeError ;};_egbaa ,_degga :=NewPdfRectangle (*_ebdea );if _degga !=nil {_ag .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_degga );return nil ,_degga ;};_fffdd .BBox =_egbaa ;_baagd =_dcaag .Get ("\u0058\u0053\u0074e\u0070");
if _baagd ==nil {_ag .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbafc ,_degga :=_gb .GetNumberAsFloat (_baagd );if _degga !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cbafc );
return nil ,_degga ;};_fffdd .XStep =_gb .MakeFloat (_cbafc );_baagd =_dcaag .Get ("\u0059\u0053\u0074e\u0070");if _baagd ==nil {_ag .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_caaad ,_degga :=_gb .GetNumberAsFloat (_baagd );if _degga !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_caaad );
return nil ,_degga ;};_fffdd .YStep =_gb .MakeFloat (_caaad );_baagd =_dcaag .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _baagd ==nil {_ag .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcaag ,_afdda =_gb .TraceToDirectObject (_baagd ).(*_gb .PdfObjectDictionary );if !_afdda {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_baagd );
};_afeef ,_degga :=NewPdfPageResourcesFromDict (_dcaag );if _degga !=nil {return nil ,_degga ;};_fffdd .Resources =_afeef ;if _dgbee :=_dcaag .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dgbee !=nil {_dgade ,_ddaea :=_dgbee .(*_gb .PdfObjectArray );if !_ddaea {_ag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgbee );
return nil ,_gb .ErrTypeError ;};_fffdd .Matrix =_dgade ;};return _fffdd ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fabgf *PdfFieldButton )IsRadio ()bool {return _fabgf .GetType ()==ButtonTypeRadio };

// SetLocation sets the `Location` field of the signature.
func (_cbebg *PdfSignature )SetLocation (location string ){_cbebg .Location =_gb .MakeString (location )};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_fabbb :=NewPdfAnnotation ();_abf :=&PdfAnnotationText {};_abf .PdfAnnotation =_fabbb ;_abf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fabbb .SetContext (_abf );return _abf ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cgabb .Lock ();defer _cgabb .Unlock ();_ceddg =creator };

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _gb .PdfObject ;ColorSpace _gb .PdfObject ;Pattern _gb .PdfObject ;Shading _gb .PdfObject ;XObject _gb .PdfObject ;Font _gb .PdfObject ;ProcSet _gb .PdfObject ;Properties _gb .PdfObject ;_bgagb *_gb .PdfObjectDictionary ;
_accac *PdfPageResourcesColorspaces ;};func (_gfbb *PdfFont )baseFields ()*fontCommon {if _gfbb ._faee ==nil {_ag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _gfbb ._faee .baseFields ();};

// BaseFont returns the font's "BaseFont" field.
func (_dcagc *PdfFont )BaseFont ()string {return _dcagc .baseFields ()._cacfa };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_abfd *PdfFont )BytesToCharcodes (data []byte )[]_eaf .CharCode {_ag .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _afba ,_gdfgc :=_abfd ._faee .(*pdfFontType0 );_gdfgc &&_afba ._acabd !=nil {if _dadg ,_abgd :=_afba .bytesToCharcodes (data );_abgd {return _dadg ;};};_feebg :=make ([]_eaf .CharCode ,0,len (data )+len (data )%2);if _abfd .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _ffge :=0;_ffge < len (data );_ffge +=2{_aadc :=uint16 (data [_ffge ])<<8|uint16 (data [_ffge +1]);_feebg =append (_feebg ,_eaf .CharCode (_aadc ));};}else {for _ ,_fbef :=range data {_feebg =append (_feebg ,_eaf .CharCode (_fbef ));
};};return _feebg ;};func _ecge (_egeda *_gb .PdfObjectDictionary )(*PdfFieldText ,error ){_ffgb :=&PdfFieldText {};_ffgb .DA ,_ =_gb .GetString (_egeda .Get ("\u0044\u0041"));_ffgb .Q ,_ =_gb .GetInt (_egeda .Get ("\u0051"));_ffgb .DS ,_ =_gb .GetString (_egeda .Get ("\u0044\u0053"));
_ffgb .RV =_egeda .Get ("\u0052\u0056");_ffgb .MaxLen ,_ =_gb .GetInt (_egeda .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _ffgb ,nil ;};func _bcca (_cbaeb *_gb .PdfObjectDictionary )(*PdfFieldButton ,error ){_baaabb :=&PdfFieldButton {};_baaabb .Opt ,_ =_gb .GetArray (_cbaeb .Get ("\u004f\u0070\u0074"));
return _baaabb ,nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_adda *PdfPage )GetContentStreamObjs ()[]_gb .PdfObject {if _adda .Contents ==nil {return nil ;};_edag :=_gb .TraceToDirectObject (_adda .Contents );if _fgfe ,_bbcfc :=_edag .(*_gb .PdfObjectArray );_bbcfc {return _fgfe .Elements ();};return []_gb .PdfObject {_edag };
};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;RD _gb .PdfObject ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _gb .PdfObject ;Flags _gb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fagb *PdfActionGoToR )ToPdfObject ()_gb .PdfObject {_fagb .PdfAction .ToPdfObject ();_ebfb :=_fagb ._gae ;_egg :=_ebfb .PdfObject .(*_gb .PdfObjectDictionary );_egg .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoToR )));if _fagb .F !=nil {_egg .Set ("\u0046",_fagb .F .ToPdfObject ());
};_egg .SetIfNotNil ("\u0044",_fagb .D );_egg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fagb .NewWindow );return _ebfb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cecd *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_cecd .Base .GetNumComponents ();_fbaf :=int (vals [0])*N ;
if _fbaf < 0||(_fbaf +N -1)>=len (_cecd ._dbbf ){return nil ,_dd .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_ebbb :=_cecd ._dbbf [_fbaf :_fbaf +N ];var _gdcgfc []float64 ;for _ ,_fdcc :=range _ebbb {_gdcgfc =append (_gdcgfc ,float64 (_fdcc )/255.0);
};_cbbea ,_fgdb :=_cecd .Base .ColorFromFloats (_gdcgfc );if _fgdb !=nil {return nil ,_fgdb ;};return _cbbea ,nil ;};func (_cada *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dcac *PdfColorspaceDeviceCMYK )ToPdfObject ()_gb .PdfObject {return _gb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fgfge *PdfShading )GetContext ()PdfModel {return _fgfge ._agffb };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_ebagg *PdfReader )GetEncryptionMethod ()string {_adggg :=_ebagg ._faefdf .GetCrypter ();return _adggg .String ();};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _gb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fba *PdfActionMovie )ToPdfObject ()_gb .PdfObject {_fba .PdfAction .ToPdfObject ();_caf :=_fba ._gae ;_dg :=_caf .PdfObject .(*_gb .PdfObjectDictionary );_dg .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeMovie )));_dg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_fba .Annotation );
_dg .SetIfNotNil ("\u0054",_fba .T );_dg .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_fba .Operation );return _caf ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gaadec *PdfReader )GetIndirectObjectByNumber (number int )(_gb .PdfObject ,error ){_ffgeg ,_bbfff :=_gaadec ._faefdf .LookupByNumber (number );return _ffgeg ,_bbfff ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_fdbf *PdfInfo )ToPdfObject ()_gb .PdfObject {_ccedd :=_gb .MakeDict ();_ccedd .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_fdbf .Title );_ccedd .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_fdbf .Author );_ccedd .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_fdbf .Subject );
_ccedd .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fdbf .Keywords );_ccedd .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_fdbf .Creator );_ccedd .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fdbf .Producer );
_ccedd .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_fdbf .Trapped );if _fdbf .CreationDate !=nil {_ccedd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fdbf .CreationDate .ToPdfObject ());};if _fdbf .ModifiedDate !=nil {_ccedd .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_fdbf .ModifiedDate .ToPdfObject ());
};for _ ,_abge :=range _fdbf ._dfee .Keys (){_ccedd .SetIfNotNil (_abge ,_fdbf ._dfee .Get (_abge ));};return _ccedd ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_acfcf *PdfPage )GetPageAsIndirectObject ()*_gb .PdfIndirectObject {return _acfcf ._gdda };

// Encoder returns the font's text encoder.
func (_gcab pdfCIDFontType0 )Encoder ()_eaf .TextEncoder {return _gcab ._dcca };

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_agec *pdfCIDFontType0 )ToPdfObject ()_gb .PdfObject {return _gb .MakeNull ()};func _daeba ()string {_cgabb .Lock ();defer _cgabb .Unlock ();return _adgeb };

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _gb .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_acgd pdfCIDFontType2 )GetCharMetrics (code _eaf .CharCode )(_ed .CharMetrics ,bool ){if _aeegc ,_gfdfcc :=_acgd ._abfb [code ];_gfdfcc {return _ed .CharMetrics {Wx :_aeegc },true ;};_afdf :=rune (code );_eaef ,_feabg :=_acgd ._eaag [_afdf ];if !_feabg {_eaef =int (_acgd ._beec );
};return _ed .CharMetrics {Wx :float64 (_eaef )},true ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _gb .PdfObject ;T _gb .PdfObject ;Operation _gb .PdfObject ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_eff *PdfAppender )UpdatePage (page *PdfPage ){_eff .updateObjectsDeep (page .ToPdfObject (),nil )};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_gb .PdfObject ;GetContainingPdfObject ()_gb .PdfObject ;};func (_gffdf *DSS )addOCSPs (_eeaba [][]byte )([]*_gb .PdfObjectStream ,error ){return _gffdf .add (&_gffdf .OCSPs ,_gffdf ._bcae ,_eeaba );};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_effcg OutlineDest )ToPdfObject ()_gb .PdfObject {if (_effcg .PageObj ==nil &&_effcg .Page < 0)||_effcg .Mode ==""{return _gb .MakeNull ();};_agaa :=_gb .MakeArray ();if _effcg .PageObj !=nil {_agaa .Append (_effcg .PageObj );}else {_agaa .Append (_gb .MakeInteger (_effcg .Page ));
};_agaa .Append (_gb .MakeName (_effcg .Mode ));switch _effcg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_agaa .Append (_gb .MakeFloat (_effcg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_agaa .Append (_gb .MakeFloat (_effcg .X ));
case "\u0058\u0059\u005a":_agaa .Append (_gb .MakeFloat (_effcg .X ));_agaa .Append (_gb .MakeFloat (_effcg .Y ));_agaa .Append (_gb .MakeFloat (_effcg .Zoom ));default:_agaa .Set (1,_gb .MakeName ("\u0046\u0069\u0074"));};return _agaa ;};func (_eega *pdfCIDFontType2 )baseFields ()*fontCommon {return &_eega .fontCommon };
func (_dgfg *DSS )addCRLs (_bdcda [][]byte )([]*_gb .PdfObjectStream ,error ){return _dgfg .add (&_dgfg .CRLs ,_dgfg ._cfbe ,_bdcda );};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_fdadg *PdfPage )AddContentStreamByString (contentStr string )error {_bafbc ,_aefaa :=_gb .MakeStream ([]byte (contentStr ),_gb .NewFlateEncoder ());if _aefaa !=nil {return _aefaa ;};if _fdadg .Contents ==nil {_fdadg .Contents =_bafbc ;}else {_bbbgd :=_gb .TraceToDirectObject (_fdadg .Contents );
_agbfg ,_abgaab :=_bbbgd .(*_gb .PdfObjectArray );if !_abgaab {_agbfg =_gb .MakeArray (_bbbgd );};_agbfg .Append (_bafbc );_fdadg .Contents =_agbfg ;};return nil ;};func _ebedg (_defef []byte )bool {if len (_defef )< 4{return true ;};for _dgdee :=range _defef [:4]{_cbeca :=rune (_dgdee );
if !_fc .Is (_fc .ASCII_Hex_Digit ,_cbeca )&&!_fc .IsSpace (_cbeca ){return true ;};};return false ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _gb .PdfObject ;PreserveRB _gb .PdfObject ;};func _gecgd (_edfe []rune ,_geeg map[rune ]int ,_baeeg map[rune ]_ed .GID )*_gb .PdfObjectArray {_cbeg :=&_gb .PdfObjectArray {};for _cgbbb :=0;_cgbbb < len (_edfe );
{_defcf :=_geeg [_edfe [_cgbbb ]];_effc :=_cgbbb ;for _gdeb :=_cgbbb +1;_gdeb < len (_edfe );_gdeb ++{_adecf :=_geeg [_edfe [_gdeb ]];if _defcf ==_adecf {_effc =_gdeb ;}else {break ;};};_effe :=_baeeg [_edfe [_cgbbb ]];_cfcc :=_baeeg [_edfe [_effc ]];_cbeg .Append (_gb .MakeInteger (int64 (_effe )));
_cbeg .Append (_gb .MakeInteger (int64 (_cfcc )));_cbeg .Append (_gb .MakeInteger (int64 (_defcf )));_cgbbb =_effc +1;};return _cbeg ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bcfe :=NewPdfAnnotation ();_cebd :=&PdfAnnotationFreeText {};_cebd .PdfAnnotation =_bcfe ;_cebd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcfe .SetContext (_cebd );return _cebd ;};const (_bcbbe =0x00001;
_efeaa =0x00002;_gacge =0x00004;_egbb =0x00008;_afgd =0x00020;_edcef =0x00040;_aaeae =0x10000;_eebef =0x20000;_baad =0x40000;);func _bageg ()*modelManager {_acddb :=modelManager {};_acddb ._cecbb =map[PdfModel ]_gb .PdfObject {};_acddb ._edebc =map[_gb .PdfObject ]PdfModel {};
return &_acddb ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_bfefd :_gb .MakeIndirectObject (_gb .MakeDict ())};};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_beg *PdfAnnotation )GetContext ()PdfModel {if _beg ==nil {return nil ;};return _beg ._gccb ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_abab *PdfColorspaceCalGray )ToPdfObject ()_gb .PdfObject {_ebgd :=&_gb .PdfObjectArray {};_ebgd .Append (_gb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_aebdc :=_gb .MakeDict ();if _abab .WhitePoint !=nil {_aebdc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gb .MakeArray (_gb .MakeFloat (_abab .WhitePoint [0]),_gb .MakeFloat (_abab .WhitePoint [1]),_gb .MakeFloat (_abab .WhitePoint [2])));
}else {_ag .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _abab .BlackPoint !=nil {_aebdc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gb .MakeArray (_gb .MakeFloat (_abab .BlackPoint [0]),_gb .MakeFloat (_abab .BlackPoint [1]),_gb .MakeFloat (_abab .BlackPoint [2])));
};_aebdc .Set ("\u0047\u0061\u006dm\u0061",_gb .MakeFloat (_abab .Gamma ));_ebgd .Append (_aebdc );if _abab ._ddgab !=nil {_abab ._ddgab .PdfObject =_ebgd ;return _abab ._ddgab ;};return _ebgd ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ffgdd :=PdfPage {};_ffgdd ._ageda =_gb .MakeDict ();_ffgdd .Resources =NewPdfPageResources ();_ggedg :=_gb .PdfIndirectObject {};_ggedg .PdfObject =_ffgdd ._ageda ;_ffgdd ._gdda =&_ggedg ;return &_ffgdd ;};

// ToPdfObject implements interface PdfModel.
func (_bbcd *PdfAnnotationSquiggly )ToPdfObject ()_gb .PdfObject {_bbcd .PdfAnnotation .ToPdfObject ();_aaeag :=_bbcd ._gbac ;_fdd :=_aaeag .PdfObject .(*_gb .PdfObjectDictionary );_bbcd .PdfAnnotationMarkup .appendToPdfDictionary (_fdd );_fdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_fdd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbcd .QuadPoints );return _aaeag ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gfgf *DSS )ToPdfObject ()_gb .PdfObject {_bfbdg :=_gfgf ._ecfcf .PdfObject .(*_gb .PdfObjectDictionary );_bfbdg .Clear ();_cbdfg :=_gb .MakeDict ();for _gbacf ,_bffef :=range _gfgf .VRI {_cbdfg .Set (*_gb .MakeName (_gbacf ),_bffef .ToPdfObject ());
};_bfbdg .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_efccfe (_gfgf .Certs ));_bfbdg .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_efccfe (_gfgf .OCSPs ));_bfbdg .SetIfNotNil ("\u0043\u0052\u004c\u0073",_efccfe (_gfgf .CRLs ));_bfbdg .Set ("\u0056\u0052\u0049",_cbdfg );
return _gfgf ._ecfcf ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cgabb .Lock ();defer _cgabb .Unlock ();_ggfe =title };

// Encoder returns the font's text encoder.
func (_feee pdfFontType0 )Encoder ()_eaf .TextEncoder {return _feee ._dfaad };

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_becba :=&PdfFieldSignature {};_becba .PdfField =NewPdfField ();_becba .PdfField .SetContext (_becba );_becba .PdfAnnotationWidget =NewPdfAnnotationWidget ();_becba .PdfAnnotationWidget .SetContext (_becba );
_becba .PdfAnnotationWidget ._gbac =_becba .PdfField ._feag ;_becba .T =_gb .MakeString ("");_becba .F =_gb .MakeInteger (132);_becba .V =signature ;return _becba ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_egefa ,_fegaa :=_aea .Open (filePath );if _fegaa !=nil {_ag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fegaa );
return nil ,_fegaa ;};defer _egefa .Close ();return NewCompositePdfFontFromTTF (_egefa );};

// ToPdfObject implements interface PdfModel.
func (_eceg *PdfAnnotationMovie )ToPdfObject ()_gb .PdfObject {_eceg .PdfAnnotation .ToPdfObject ();_bdgc :=_eceg ._gbac ;_eaeca :=_bdgc .PdfObject .(*_gb .PdfObjectDictionary );_eaeca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u004d\u006f\u0076i\u0065"));
_eaeca .SetIfNotNil ("\u0054",_eceg .T );_eaeca .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_eceg .Movie );_eaeca .SetIfNotNil ("\u0041",_eceg .A );return _bdgc ;};func (_fbefb *PdfWriter )writeBytes (_abagb []byte ){if _fbefb ._fcff !=nil {return ;};_cgaad ,_dfaef :=_fbefb ._bfdca .Write (_abagb );
_fbefb ._aafdg +=int64 (_cgaad );_fbefb ._fcff =_dfaef ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_bfcg :=&PdfColorspaceCalRGB {};_bfcg .BlackPoint =[]float64 {0.0,0.0,0.0};_bfcg .Gamma =[]float64 {1.0,1.0,1.0};_bfcg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _bfcg ;};

// String returns a human readable description of `fontfile`.
func (_gegg *fontFile )String ()string {_gcfa :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gegg ._fffd !=nil {_gcfa =_gegg ._fffd .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gegg ._abbaa ,_gcfa );
};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _gb .PdfObject ;IsMap _gb .PdfObject ;};func _gece (_bdadf *_gb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_accaf :=PdfShadingType3 {};_dbcde :=_bdadf .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dbcde ==nil {_ag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gfbgg ,_dgfcg :=_dbcde .(*_gb .PdfObjectArray );if !_dgfcg {_ag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbcde );
return nil ,_gb .ErrTypeError ;};if _gfbgg .Len ()!=6{_ag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gfbgg .Len ());return nil ,ErrInvalidAttribute ;
};_accaf .Coords =_gfbgg ;if _acgeb :=_bdadf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_acgeb !=nil {_acgeb =_gb .TraceToDirectObject (_acgeb );_ffgee ,_ggdbg :=_acgeb .(*_gb .PdfObjectArray );if !_ggdbg {_ag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acgeb );
return nil ,_gb .ErrTypeError ;};_accaf .Domain =_ffgee ;};_dbcde =_bdadf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dbcde ==nil {_ag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_accaf .Function =[]PdfFunction {};if _gcdgc ,_eecef :=_dbcde .(*_gb .PdfObjectArray );_eecef {for _ ,_fcge :=range _gcdgc .Elements (){_ecac ,_dbfad :=_deee (_fcge );if _dbfad !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbfad );
return nil ,_dbfad ;};_accaf .Function =append (_accaf .Function ,_ecac );};}else {_fccee ,_dedbd :=_deee (_dbcde );if _dedbd !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dedbd );
return nil ,_dedbd ;};_accaf .Function =append (_accaf .Function ,_fccee );};if _agede :=_bdadf .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_agede !=nil {_agede =_gb .TraceToDirectObject (_agede );_gefea ,_dbada :=_agede .(*_gb .PdfObjectArray );if !_dbada {_ag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agede );
return nil ,_gb .ErrTypeError ;};if _gefea .Len ()!=2{_ag .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gefea .Len ());return nil ,ErrInvalidAttribute ;
};_accaf .Extend =_gefea ;};return &_accaf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_beba *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddba :=vals [0];_fdebg :=[]float64 {_ddba };_cbea ,_fabac :=_beba .TintTransform .Evaluate (_fdebg );
if _fabac !=nil {_ag .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_fabac );_ag .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_beba .TintTransform );
return nil ,_fabac ;};_ag .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_cbea ,_beba .AlternateSpace );
_eabeg ,_fabac :=_beba .AlternateSpace .ColorFromFloats (_cbea );if _fabac !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_fabac );
return nil ,_fabac ;};return _eabeg ,nil ;};

// ReplacePage replaces the original page to a new page.
func (_fac *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_daba :=pageNum -1;for _bagf :=range _fac ._bbgcg {if _bagf ==_daba {_dbc :=page .Duplicate ();_befaa (_dbc );_fac ._bbgcg [_bagf ]=_dbc ;};};};func _fagcb ()string {_cgabb .Lock ();defer _cgabb .Unlock ();
return _gdafg };

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ffag *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _gb .PdfObject ;NewWindow _gb .PdfObject ;T _gb .PdfObject ;};func _ggaea (_fggb string )map[string ]string {_dadee :=_decde .Split (_fggb ,-1);_ebcba :=map[string ]string {};for _ ,_dbgc :=range _dadee {_aaeabb :=_caaab .FindStringSubmatch (_dbgc );
if _aaeabb ==nil {continue ;};_dcge ,_aaag :=_aaeabb [1],_aaeabb [2];_ebcba [_dcge ]=_aaag ;};return _ebcba ;};

// ToPdfObject implements interface PdfModel.
func (_fbc *PdfActionURI )ToPdfObject ()_gb .PdfObject {_fbc .PdfAction .ToPdfObject ();_db :=_fbc ._gae ;_dfe :=_db .PdfObject .(*_gb .PdfObjectDictionary );_dfe .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeURI )));_dfe .SetIfNotNil ("\u0055\u0052\u0049",_fbc .URI );
_dfe .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fbc .IsMap );return _db ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_dcab :=NewPdfAnnotation ();_fgfc :=&PdfAnnotationRichMedia {};_fgfc .PdfAnnotation =_dcab ;_dcab .SetContext (_fgfc );return _fgfc ;};

// ToPdfObject implements interface PdfModel.
func (_cgf *PdfActionJavaScript )ToPdfObject ()_gb .PdfObject {_cgf .PdfAction .ToPdfObject ();_cbda :=_cgf ._gae ;_fae :=_cbda .PdfObject .(*_gb .PdfObjectDictionary );_fae .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeJavaScript )));_fae .SetIfNotNil ("\u004a\u0053",_cgf .JS );
return _cbda ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_fdfcd *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_ddcc :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_fdeda ,_fbcba :=_fdfcd .GetNumPages ();if _fbcba !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbcba );
return nil ,_fbcba ;};for _dbagf :=1;_dbagf <=_fdeda ;_dbagf ++{_fdbfd ,_geed :=_fdfcd .GetPage (_dbagf );if _geed !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geed );return nil ,_geed ;};if opts .PageCallback !=nil {opts .PageCallback (_dbagf ,_fdbfd );
};_geed =_ddcc .AddPage (_fdbfd );if _geed !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geed );return nil ,_geed ;};};_ddcc ._abecc =_fdfcd .PdfVersion ().Major ;_ddcc ._afce =_fdfcd .PdfVersion ().Minor ;if !opts .SkipInfo {_dgfdb ,_ebfdd :=_fdfcd .GetPdfInfo ();
if _ebfdd !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebfdd );}else {_ddcc ._dgbf .PdfObject =_dgfdb .ToPdfObject ();};};if !opts .SkipAcroForm {_ecbed :=_ddcc .SetForms (_fdfcd .AcroForm );if _ecbed !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecbed );
return nil ,_ecbed ;};};if !opts .SkipOutlines {_ddcc .AddOutlineTree (_fdfcd .GetOutlineTree ());};if !opts .SkipOCProperties {_acfed ,_fagc :=_fdfcd .GetOCProperties ();if _fagc !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagc );
}else {_fagc =_ddcc .SetOCProperties (_acfed );if _fagc !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagc );};};};if !opts .SkipPageLabels {_bbba ,_gfebf :=_fdfcd .GetPageLabels ();if _gfebf !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfebf );
}else {_gfebf =_ddcc .SetPageLabels (_bbba );if _gfebf !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfebf );};};};if !opts .SkipNamedDests {_dbad ,_gagbg :=_fdfcd .GetNamedDestinations ();if _gagbg !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gagbg );
}else {_gagbg =_ddcc .SetNamedDestinations (_dbad );if _gagbg !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gagbg );};};};if !opts .SkipRotation &&_fdfcd .Rotate !=nil {if _acag :=_ddcc .SetRotation (*_fdfcd .Rotate );_acag !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acag );
};};return &_ddcc ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_eg PdfModel ;Type _gb .PdfObject ;S _gb .PdfObject ;Next _gb .PdfObject ;_gae *_gb .PdfIndirectObject ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _gb .PdfObject )(PdfColorspace ,error ){var _dffg *_gb .PdfIndirectObject ;var _cfg *_gb .PdfObjectName ;var _cdbce *_gb .PdfObjectArray ;if _dedc ,_debab :=obj .(*_gb .PdfIndirectObject );_debab {_dffg =_dedc ;};
obj =_gb .TraceToDirectObject (obj );switch _bcda :=obj .(type ){case *_gb .PdfObjectArray :_cdbce =_bcda ;case *_gb .PdfObjectName :_cfg =_bcda ;};if _cfg !=nil {switch *_cfg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cfg );return nil ,_abef ;};};if _cdbce !=nil &&_cdbce .Len ()> 0{var _cacge _gb .PdfObject =_dffg ;
if _dffg ==nil {_cacge =_cdbce ;};if _dcae ,_gfgce :=_gb .GetName (_cdbce .Get (0));_gfgce {switch _dcae .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _cdbce .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _cdbce .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cdbce .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _bdgb (_cacge );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _fada (_cacge );
case "\u004c\u0061\u0062":return _cfbff (_cacge );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _fagg (_cacge );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _daeaf (_cacge );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _aadac (_cacge );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _fcfb (_cacge );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _gaeb (_cacge );default:_ag .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_dcae );
};};};_ag .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_efag *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=_efag .GetNumComponents (){return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeae ,_eafgd :=_gb .GetNumbersAsFloat (objects );
if _eafgd !=nil {return nil ,_eafgd ;};return _efag .ColorFromFloats (_aeae );};func (_aggg *PdfReader )newPdfActionLaunchFromDict (_fbg *_gb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_eee ,_gad :=_dbf (_fbg .Get ("\u0046"));if _gad !=nil {return nil ,_gad ;
};return &PdfActionLaunch {Win :_fbg .Get ("\u0057\u0069\u006e"),Mac :_fbg .Get ("\u004d\u0061\u0063"),Unix :_fbg .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_fbg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_eee },nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_cbcb :=PdfColorCalRGB {a ,b ,c };return &_cbcb ;};

// String returns the name of the colorspace (DeviceN).
func (_gcga *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ggddb *PdfWriter )AddPage (page *PdfPage )error {const _cdaf ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_befaa (page );_aeacb :=page .ToPdfObject ();_ag .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ag .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_aeacb );_eebc ,_eccgd :=_gb .GetIndirect (_aeacb );if !_eccgd {return _dd .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ag .Log .Trace ("\u0025\u0073",_eebc );_ag .Log .Trace ("\u0025\u0073",_eebc .PdfObject );_caaeg ,_eccgd :=_gb .GetDict (_eebc .PdfObject );if !_eccgd {return _dd .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dcfc ,_eccgd :=_gb .GetName (_caaeg .Get ("\u0054\u0079\u0070\u0065"));if !_eccgd {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_caaeg .Get ("\u0054\u0079\u0070\u0065"));
};if _dcfc .String ()!="\u0050\u0061\u0067\u0065"{return _dd .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gdea :=[]_gb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_efeba ,_bfaaf :=_gb .GetIndirect (_caaeg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ag .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_caaeg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_bfaaf );
for _bfaaf {_ag .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_efeba );_gfae ,_fceeg :=_gb .GetDict (_efeba .PdfObject );if !_fceeg {return _dd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_dggdb :=range _gdea {_ag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dggdb );if _caaeg .Get (_dggdb )!=nil {_ag .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ddgga :=_gfae .Get (_dggdb );_ddgga !=nil {_ag .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dggdb );_caaeg .Set (_dggdb ,_ddgga );};};_efeba ,_bfaaf =_gb .GetIndirect (_gfae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ag .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gfae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ag .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_caaeg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ggddb ._aecef );_eebc .PdfObject =_caaeg ;_gbgde ,_eccgd :=_gb .GetDict (_ggddb ._aecef .PdfObject );if !_eccgd {return _dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gggb ,_eccgd :=_gb .GetArray (_gbgde .Get ("\u004b\u0069\u0064\u0073"));if !_eccgd {return _dd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gggb .Append (_eebc );_ggddb ._fdfda [_caaeg ]=struct{}{};_ggfcf ,_eccgd :=_gb .GetInt (_gbgde .Get ("\u0043\u006f\u0075n\u0074"));if !_eccgd {return _dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ggfcf =*_ggfcf +1;if page ._bacc ==nil {_ccgd :=_dc .Track (_ggddb ._ggcaa ,_cdaf );if _ccgd !=nil {return _ccgd ;};}else {_dbdfc :=_dc .Track (page ._bacc ._eabgg ,_cdaf );if _dbdfc !=nil {return _dbdfc ;};};_ggddb .addObject (_eebc );_cgbec :=_ggddb .addObjects (_caaeg );
if _cgbec !=nil {return _cgbec ;};return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_defa *PdfColorspaceICCBased )ToPdfObject ()_gb .PdfObject {_geff :=&_gb .PdfObjectArray {};_geff .Append (_gb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gaef *_gb .PdfObjectStream ;if _defa ._dced !=nil {_gaef =_defa ._dced ;
}else {_gaef =&_gb .PdfObjectStream {};};_gcea :=_gb .MakeDict ();_gcea .Set ("\u004e",_gb .MakeInteger (int64 (_defa .N )));if _defa .Alternate !=nil {_gcea .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_defa .Alternate .ToPdfObject ());};if _defa .Metadata !=nil {_gcea .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_defa .Metadata );
};if _defa .Range !=nil {var _gdde []_gb .PdfObject ;for _ ,_gfgec :=range _defa .Range {_gdde =append (_gdde ,_gb .MakeFloat (_gfgec ));};_gcea .Set ("\u0052\u0061\u006eg\u0065",_gb .MakeArray (_gdde ...));};_gcea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_defa .Data ))));
_gaef .Stream =_defa .Data ;_gaef .PdfObjectDictionary =_gcea ;_geff .Append (_gaef );if _defa ._cace !=nil {_defa ._cace .PdfObject =_geff ;return _defa ._cace ;};return _geff ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_geec *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _gb .GetNumberAsFloat (_geec .Ascent );};var _dgfca =false ;func (_dbaaf *PdfReader )newPdfFieldFromIndirectObject (_cbdce *_gb .PdfIndirectObject ,_cdcc *PdfField )(*PdfField ,error ){if _decce ,_aagdb :=_dbaaf ._dcafc .GetModelFromPrimitive (_cbdce ).(*PdfField );
_aagdb {return _decce ,nil ;};_dacg ,_ddee :=_gb .GetDict (_cbdce );if !_ddee {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgbce :=NewPdfField ();_dgbce ._feag =_cbdce ;_dgbce ._feag .PdfObject =_dacg ;if _ebbdb ,_cfeab :=_gb .GetName (_dacg .Get ("\u0046\u0054"));_cfeab {_dgbce .FT =_ebbdb ;};if _cdcc !=nil {_dgbce .Parent =_cdcc ;};_dgbce .T ,_ =_dacg .Get ("\u0054").(*_gb .PdfObjectString );
_dgbce .TU ,_ =_dacg .Get ("\u0054\u0055").(*_gb .PdfObjectString );_dgbce .TM ,_ =_dacg .Get ("\u0054\u004d").(*_gb .PdfObjectString );_dgbce .Ff ,_ =_dacg .Get ("\u0046\u0066").(*_gb .PdfObjectInteger );_dgbce .V =_dacg .Get ("\u0056");_dgbce .DV =_dacg .Get ("\u0044\u0056");
_dgbce .AA =_dacg .Get ("\u0041\u0041");_bfeb :=_dgbce .FT ;if _bfeb ==nil &&_cdcc !=nil {_bfeb =_cdcc .FT ;};if _bfeb !=nil {switch *_bfeb {case "\u0054\u0078":_edfb ,_ecbec :=_ecge (_dacg );if _ecbec !=nil {return nil ,_ecbec ;};_edfb .PdfField =_dgbce ;
_dgbce ._bagfc =_edfb ;case "\u0043\u0068":_cefe ,_bccg :=_gfef (_dacg );if _bccg !=nil {return nil ,_bccg ;};_cefe .PdfField =_dgbce ;_dgbce ._bagfc =_cefe ;case "\u0042\u0074\u006e":_fcafa ,_dcda :=_bcca (_dacg );if _dcda !=nil {return nil ,_dcda ;};
_fcafa .PdfField =_dgbce ;_dgbce ._bagfc =_fcafa ;case "\u0053\u0069\u0067":_fcef ,_cgeb :=_dbaaf .newPdfFieldSignatureFromDict (_dacg );if _cgeb !=nil {return nil ,_cgeb ;};_fcef .PdfField =_dgbce ;_dgbce ._bagfc =_fcef ;default:_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dgbce .FT );
return nil ,_dd .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _fcea ,_gbfc :=_gb .GetName (_dacg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gbfc {if *_fcea =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dcff ,_bbgd :=_dbaaf .newPdfAnnotationFromIndirectObject (_cbdce );
if _bbgd !=nil {return nil ,_bbgd ;};_gbcd ,_aecaf :=_dcff .GetContext ().(*PdfAnnotationWidget );if !_aecaf {return nil ,_dd .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_gbcd ._cec =_dgbce ;_gbcd .Parent =_dgbce ._feag ;_dgbce .Annotations =append (_dgbce .Annotations ,_gbcd );return _dgbce ,nil ;};};_ebefd :=true ;if _cfacd ,_egaa :=_gb .GetArray (_dacg .Get ("\u004b\u0069\u0064\u0073"));_egaa {_fcdb :=make ([]*_gb .PdfIndirectObject ,0,_cfacd .Len ());
for _ ,_agff :=range _cfacd .Elements (){_gbdg ,_ecbg :=_gb .GetIndirect (_agff );if !_ecbg {_ggcg ,_gagcf :=_gb .GetStream (_agff );if _gagcf &&_ggcg .PdfObjectDictionary !=nil {_ebeaa ,_aded :=_gb .GetNameVal (_ggcg .Get ("\u0054\u0079\u0070\u0065"));
if _aded &&_ebeaa =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ag .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_dd .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_effg ,_efed :=_gb .GetDict (_gbdg );
if !_efed {return nil ,ErrTypeCheck ;};if _ebefd {_ebefd =!_dbbe (_effg );};_fcdb =append (_fcdb ,_gbdg );};for _ ,_fgdbg :=range _fcdb {if _ebefd {_adbgf ,_gcggd :=_dbaaf .newPdfAnnotationFromIndirectObject (_fgdbg );if _gcggd !=nil {_ag .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gcggd );
return nil ,_gcggd ;};_bbfe ,_cbccb :=_adbgf ._gccb .(*PdfAnnotationWidget );if !_cbccb {return nil ,ErrTypeCheck ;};_bbfe ._cec =_dgbce ;_dgbce .Annotations =append (_dgbce .Annotations ,_bbfe );}else {_cged ,_bcded :=_dbaaf .newPdfFieldFromIndirectObject (_fgdbg ,_dgbce );
if _bcded !=nil {_ag .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_bcded );return nil ,_bcded ;};_dgbce .Kids =append (_dgbce .Kids ,_cged );
};};};return _dgbce ,nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_gb .PdfObjectArray ;Domain *_gb .PdfObjectArray ;Function []PdfFunction ;Extend *_gb .PdfObjectArray ;};func (_gaaad *PdfPage )setContainer (_dbbg *_gb .PdfIndirectObject ){_dbbg .PdfObject =_gaaad ._ageda ;
_gaaad ._gdda =_dbbg ;};func (_agdbc *PdfReader )newPdfAnnotationRedactFromDict (_eedg *_gb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_bgeb :=PdfAnnotationRedact {};_eadd ,_dabb :=_agdbc .newPdfAnnotationMarkupFromDict (_eedg );if _dabb !=nil {return nil ,_dabb ;
};_bgeb .PdfAnnotationMarkup =_eadd ;_bgeb .QuadPoints =_eedg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bgeb .IC =_eedg .Get ("\u0049\u0043");_bgeb .RO =_eedg .Get ("\u0052\u004f");_bgeb .OverlayText =_eedg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_bgeb .Repeat =_eedg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_bgeb .DA =_eedg .Get ("\u0044\u0041");_bgeb .Q =_eedg .Get ("\u0051");return &_bgeb ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_bgfc *Image )SetAlpha (alpha []byte ){_bgfc ._aggec =alpha };func _faad ()_fag .Time {_cgabb .Lock ();defer _cgabb .Unlock ();return _cdebd };

// GetNumPages returns the number of pages in the document.
func (_caagf *PdfReader )GetNumPages ()(int ,error ){if _caagf ._faefdf .GetCrypter ()!=nil &&!_caagf ._faefdf .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_caagf ._cfedb ),nil ;};

// Items returns all children outline items.
func (_fbbgb *Outline )Items ()[]*OutlineItem {return _fbbgb .Entries };

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_efbaae :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_efbaae .N =N ;return _efbaae ,nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_acgf *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _acgf .fill (provider ,appGen );};

// GetOptimizer returns current PDF optimizer.
func (_bgbgd *PdfWriter )GetOptimizer ()Optimizer {return _bgbgd ._ggggf };func (_bbeff *PdfReader )loadAnnotations (_gcdgd _gb .PdfObject )([]*PdfAnnotation ,error ){_baga ,_ddbae :=_gb .GetArray (_gcdgd );if !_ddbae {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _eecbfg []*PdfAnnotation ;for _ ,_dfdgfe :=range _baga .Elements (){_dfdgfe =_gb .ResolveReference (_dfdgfe );if _ ,_dggg :=_dfdgfe .(*_gb .PdfObjectNull );_dggg {continue ;};_dcgde ,_dgbb :=_dfdgfe .(*_gb .PdfObjectDictionary );_eeeab ,_dcgbf :=_dfdgfe .(*_gb .PdfIndirectObject );
if _dgbb {_eeeab =&_gb .PdfIndirectObject {};_eeeab .PdfObject =_dcgde ;}else {if !_dcgbf {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_deebd ,_eaggf :=_bbeff .newPdfAnnotationFromIndirectObject (_eeeab );if _eaggf !=nil {return nil ,_eaggf ;};switch _dbecb :=_deebd .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_fafdf :=range _bbeff .AcroForm .AllFields (){if _fafdf ._feag ==_dbecb .Parent {_dbecb ._cec =_fafdf ;
break ;};};};if _deebd !=nil {_eecbfg =append (_eecbfg ,_deebd );};};return _eecbfg ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fbgaf *PdfPageResources )SetXObjectByName (keyName _gb .PdfObjectName ,stream *_gb .PdfObjectStream )error {if _fbgaf .XObject ==nil {_fbgaf .XObject =_gb .MakeDict ();};_beabd :=_gb .TraceToDirectObject (_fbgaf .XObject );_ecgba ,_facfc :=_beabd .(*_gb .PdfObjectDictionary );
if !_facfc {_ag .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fbgaf .XObject ,_beabd );return _dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ecgba .Set (keyName ,stream );return nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_bgaa *PdfReader )GetTrailer ()(*_gb .PdfObjectDictionary ,error ){_ebda :=_bgaa ._faefdf .GetTrailer ();if _ebda ==nil {return nil ,_dd .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ebda ,nil ;
};

// ToPdfObject converts date to a PDF string object.
func (_aaccfa *PdfDate )ToPdfObject ()_gb .PdfObject {_agdf :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_aaccfa ._cagfeb ,_aaccfa ._bbaf ,_aaccfa ._ddbag ,_aaccfa ._acabb ,_aaccfa ._fadf ,_aaccfa ._cdffb ,_aaccfa ._fbecd ,_aaccfa ._ebbgf ,_aaccfa ._bcccbg );
return _gb .MakeString (_agdf );};

// HasExtGState checks if ExtGState name is available.
func (_daecd *PdfPage )HasExtGState (name _gb .PdfObjectName )bool {if _daecd .Resources ==nil {return false ;};if _daecd .Resources .ExtGState ==nil {return false ;};_fcda ,_acbfc :=_gb .TraceToDirectObject (_daecd .Resources .ExtGState ).(*_gb .PdfObjectDictionary );
if !_acbfc {_ag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gb .TraceToDirectObject (_daecd .Resources .ExtGState ));
return false ;};_fbcbb :=_fcda .Get (name );_aefd :=_fbcbb !=nil ;return _aefd ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_acff *PdfColorspaceCalRGB )ToPdfObject ()_gb .PdfObject {_dabba :=&_gb .PdfObjectArray {};_dabba .Append (_gb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_faegb :=_gb .MakeDict ();if _acff .WhitePoint !=nil {_baac :=_gb .MakeArray (_gb .MakeFloat (_acff .WhitePoint [0]),_gb .MakeFloat (_acff .WhitePoint [1]),_gb .MakeFloat (_acff .WhitePoint [2]));
_faegb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_baac );}else {_ag .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _acff .BlackPoint !=nil {_ccc :=_gb .MakeArray (_gb .MakeFloat (_acff .BlackPoint [0]),_gb .MakeFloat (_acff .BlackPoint [1]),_gb .MakeFloat (_acff .BlackPoint [2]));_faegb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ccc );
};if _acff .Gamma !=nil {_aeef :=_gb .MakeArray (_gb .MakeFloat (_acff .Gamma [0]),_gb .MakeFloat (_acff .Gamma [1]),_gb .MakeFloat (_acff .Gamma [2]));_faegb .Set ("\u0047\u0061\u006dm\u0061",_aeef );};if _acff .Matrix !=nil {_egbg :=_gb .MakeArray (_gb .MakeFloat (_acff .Matrix [0]),_gb .MakeFloat (_acff .Matrix [1]),_gb .MakeFloat (_acff .Matrix [2]),_gb .MakeFloat (_acff .Matrix [3]),_gb .MakeFloat (_acff .Matrix [4]),_gb .MakeFloat (_acff .Matrix [5]),_gb .MakeFloat (_acff .Matrix [6]),_gb .MakeFloat (_acff .Matrix [7]),_gb .MakeFloat (_acff .Matrix [8]));
_faegb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_egbg );};_dabba .Append (_faegb );if _acff ._gddb !=nil {_acff ._gddb .PdfObject =_dabba ;return _acff ._gddb ;};return _dabba ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_defac *LTV )EnableChain (chain []*_g .Certificate )error {return _defac .enable (nil ,chain ,"")};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gafba *OutlineItem )ToPdfObject ()_gb .PdfObject {_beef ,_ :=_gafba .ToPdfOutlineItem ();return _beef .ToPdfObject ();};

// IsShading specifies if the pattern is a shading pattern.
func (_bgac *PdfPattern )IsShading ()bool {return _bgac .PatternType ==2};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_ecged *PdfReader )CheckAccessRights (password []byte )(bool ,_ad .Permissions ,error ){return _ecged ._faefdf .CheckAccessRights (password );};func _dbge (_dfaed _ed .StdFont )pdfFontSimple {_cecbd :=_dfaed .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_abec :"\u0054\u0079\u0070e\u0031",_cacfa :_dfaed .Name ()},_fbefa :_dfaed .GetMetricsTable (),_dbeb :&PdfFontDescriptor {FontName :_gb .MakeName (string (_cecbd .Name )),FontFamily :_gb .MakeName (_cecbd .Family ),FontWeight :_gb .MakeFloat (float64 (_cecbd .Weight )),Flags :_gb .MakeInteger (int64 (_cecbd .Flags )),FontBBox :_gb .MakeArrayFromFloats (_cecbd .BBox [:]),ItalicAngle :_gb .MakeFloat (_cecbd .ItalicAngle ),Ascent :_gb .MakeFloat (_cecbd .Ascent ),Descent :_gb .MakeFloat (_cecbd .Descent ),CapHeight :_gb .MakeFloat (_cecbd .CapHeight ),XHeight :_gb .MakeFloat (_cecbd .XHeight ),StemV :_gb .MakeFloat (_cecbd .StemV ),StemH :_gb .MakeFloat (_cecbd .StemH )},_eafce :_dfaed .Encoder ()};
};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dafg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dafg ._gefdd .(*PdfShadingPattern );};func (_dfabd *PdfSignature )extractChainFromPKCS7 ()([]*_g .Certificate ,error ){_dbbeg ,_fagac :=_cbb .Parse (_dfabd .Contents .Bytes ());
if _fagac !=nil {return nil ,_fagac ;};return _dbbeg .Certificates ,nil ;};func (_gcfaf *PdfWriter )updateObjectNumbers (){_bdbbab :=_gcfaf .ObjNumOffset ;_ceadg :=0;for _ ,_fcffc :=range _gcfaf ._cccdf {_efcea :=int64 (_ceadg +1+_bdbbab );_cccg :=true ;
if _gcfaf ._bedcd {if _fcbf ,_fced :=_gcfaf ._fdgbe [_fcffc ];_fced {_efcea =_fcbf ;_cccg =false ;};};switch _bfbec :=_fcffc .(type ){case *_gb .PdfIndirectObject :_bfbec .ObjectNumber =_efcea ;_bfbec .GenerationNumber =0;case *_gb .PdfObjectStream :_bfbec .ObjectNumber =_efcea ;
_bfbec .GenerationNumber =0;case *_gb .PdfObjectStreams :_bfbec .ObjectNumber =_efcea ;_bfbec .GenerationNumber =0;default:_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bfbec );
continue ;};if _cccg {_ceadg ++;};};_aefea :=func (_egeg _gb .PdfObject )int64 {switch _deac :=_egeg .(type ){case *_gb .PdfIndirectObject :return _deac .ObjectNumber ;case *_gb .PdfObjectStream :return _deac .ObjectNumber ;case *_gb .PdfObjectStreams :return _deac .ObjectNumber ;
};return 0;};_cb .SliceStable (_gcfaf ._cccdf ,func (_acgae ,_fgdbd int )bool {return _aefea (_gcfaf ._cccdf [_acgae ])< _aefea (_gcfaf ._cccdf [_fgdbd ])});};

// MergePageWith appends page content to source Pdf file page content.
func (_fefe *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dbfc :=pageNum -1;var _bfbd *PdfPage ;for _gfcbc ,_gdcg :=range _fefe ._bbgcg {if _gfcbc ==_dbfc {_bfbd =_gdcg ;};};if _bfbd ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _bfbd ._gdda !=nil &&_bfbd ._gdda .GetParser ()==_fefe ._cbaab ._faefdf {_bfbd =_bfbd .Duplicate ();_fefe ._bbgcg [_dbfc ]=_bfbd ;};page =page .Duplicate ();_befaa (page );_cdbc :=_gca (_bfbd );_cecb :=_gca (page );_aebd :=make (map[_gb .PdfObjectName ]_gb .PdfObjectName );
for _ggfa :=range _cecb {if _ ,_feac :=_cdbc [_ggfa ];_feac {for _aage :=1;true ;_aage ++{_eeged :=_gb .PdfObjectName (string (_ggfa )+_cg .Itoa (_aage ));if _ ,_eeaf :=_cdbc [_eeged ];!_eeaf {_aebd [_ggfa ]=_eeged ;break ;};};};};_fdgcb ,_gacg :=page .GetContentStreams ();
if _gacg !=nil {return _gacg ;};_debac ,_gacg :=_bfbd .GetContentStreams ();if _gacg !=nil {return _gacg ;};for _fbeb ,_bdecb :=range _fdgcb {for _edba ,_deaf :=range _aebd {_bdecb =_fcf .Replace (_bdecb ,"\u002f"+string (_edba ),"\u002f"+string (_deaf ),-1);
};_fdgcb [_fbeb ]=_bdecb ;};_debac =append (_debac ,_fdgcb ...);if _dgab :=_bfbd .SetContentStreams (_debac ,_gb .NewFlateEncoder ());_dgab !=nil {return _dgab ;};_bfbd ._gccef =append (_bfbd ._gccef ,page ._gccef ...);if _bfbd .Resources ==nil {_bfbd .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_bfbd .Resources .Font =_fefe .mergeResources (_bfbd .Resources .Font ,page .Resources .Font ,_aebd );_bfbd .Resources .XObject =_fefe .mergeResources (_bfbd .Resources .XObject ,page .Resources .XObject ,_aebd );_bfbd .Resources .Properties =_fefe .mergeResources (_bfbd .Resources .Properties ,page .Resources .Properties ,_aebd );
if _bfbd .Resources .ProcSet ==nil {_bfbd .Resources .ProcSet =page .Resources .ProcSet ;};_bfbd .Resources .Shading =_fefe .mergeResources (_bfbd .Resources .Shading ,page .Resources .Shading ,_aebd );_bfbd .Resources .ExtGState =_fefe .mergeResources (_bfbd .Resources .ExtGState ,page .Resources .ExtGState ,_aebd );
};_dadd ,_gacg :=_bfbd .GetMediaBox ();if _gacg !=nil {return _gacg ;};_aagd ,_gacg :=page .GetMediaBox ();if _gacg !=nil {return _gacg ;};var _dggb bool ;if _dadd .Llx > _aagd .Llx {_dadd .Llx =_aagd .Llx ;_dggb =true ;};if _dadd .Lly > _aagd .Lly {_dadd .Lly =_aagd .Lly ;
_dggb =true ;};if _dadd .Urx < _aagd .Urx {_dadd .Urx =_aagd .Urx ;_dggb =true ;};if _dadd .Ury < _aagd .Ury {_dadd .Ury =_aagd .Ury ;_dggb =true ;};if _dggb {_bfbd .MediaBox =_dadd ;};return nil ;};func _affbc (_edeg _gb .PdfObject )(*PdfFunctionType3 ,error ){_edeef :=&PdfFunctionType3 {};
var _bcaea *_gb .PdfObjectDictionary ;if _cgcf ,_fgbc :=_edeg .(*_gb .PdfIndirectObject );_fgbc {_bdef ,_geegf :=_cgcf .PdfObject .(*_gb .PdfObjectDictionary );if !_geegf {return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_edeef ._abgb =_cgcf ;_bcaea =_bdef ;}else if _cebe ,_adfdf :=_edeg .(*_gb .PdfObjectDictionary );_adfdf {_bcaea =_cebe ;}else {return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdcg ,_aaba :=_gb .TraceToDirectObject (_bcaea .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );
if !_aaba {_ag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fdcg .Len ()!=2{_ag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_afee ,_fffc :=_fdcg .ToFloat64Array ();
if _fffc !=nil {return nil ,_fffc ;};_edeef .Domain =_afee ;_fdcg ,_aaba =_gb .TraceToDirectObject (_bcaea .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );if _aaba {if _fdcg .Len ()< 0||_fdcg .Len ()%2!=0{return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cgda ,_egeb :=_fdcg .ToFloat64Array ();if _egeb !=nil {return nil ,_egeb ;};_edeef .Range =_cgda ;};_fdcg ,_aaba =_gb .TraceToDirectObject (_bcaea .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_gb .PdfObjectArray );if !_aaba {_ag .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_edeef .Functions =[]PdfFunction {};
for _ ,_cgfag :=range _fdcg .Elements (){_ffddb ,_feea :=_deee (_cgfag );if _feea !=nil {return nil ,_feea ;};_edeef .Functions =append (_edeef .Functions ,_ffddb );};_fdcg ,_aaba =_gb .TraceToDirectObject (_bcaea .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_gb .PdfObjectArray );
if !_aaba {_ag .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_fggdf ,_fffc :=_fdcg .ToFloat64Array ();if _fffc !=nil {return nil ,_fffc ;};_edeef .Bounds =_fggdf ;if len (_edeef .Bounds )!=len (_edeef .Functions )-1{_ag .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_edeef .Bounds ),len (_edeef .Functions ));
return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdcg ,_aaba =_gb .TraceToDirectObject (_bcaea .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gb .PdfObjectArray );if !_aaba {_ag .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bfbcc ,_fffc :=_fdcg .ToFloat64Array ();
if _fffc !=nil {return nil ,_fffc ;};_edeef .Encode =_bfbcc ;if len (_edeef .Encode )!=2*len (_edeef .Functions ){_ag .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_edeef .Encode ),len (_edeef .Functions ));
return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _edeef ,nil ;};func _fagg (_addg _gb .PdfObject )(*PdfColorspaceICCBased ,error ){_gdgc :=&PdfColorspaceICCBased {};if _edcd ,_eeecd :=_addg .(*_gb .PdfIndirectObject );
_eeecd {_gdgc ._cace =_edcd ;};_addg =_gb .TraceToDirectObject (_addg );_cdad ,_bagfd :=_addg .(*_gb .PdfObjectArray );if !_bagfd {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cdad .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_addg =_gb .TraceToDirectObject (_cdad .Get (0));_bfe ,_bagfd :=_addg .(*_gb .PdfObjectName );if !_bagfd {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_bfe !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_addg =_cdad .Get (1);
_eead ,_bagfd :=_gb .GetStream (_addg );if !_bagfd {_ag .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_addg );
return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_edga :=_eead .PdfObjectDictionary ;_cfbg ,_bagfd :=_edga .Get ("\u004e").(*_gb .PdfObjectInteger );
if !_bagfd {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_cfbg !=1&&*_cfbg !=3&&*_cfbg !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_gdgc .N =int (*_cfbg );if _feef :=_edga .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_feef !=nil {_gdee ,_acdc :=NewPdfColorspaceFromPdfObject (_feef );if _acdc !=nil {return nil ,_acdc ;};_gdgc .Alternate =_gdee ;};if _gda :=_edga .Get ("\u0052\u0061\u006eg\u0065");
_gda !=nil {_gda =_gb .TraceToDirectObject (_gda );_cfbfc ,_dffga :=_gda .(*_gb .PdfObjectArray );if !_dffga {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cfbfc .Len ()!=2*_gdgc .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_fabef ,_bdcge :=_cfbfc .GetAsFloat64Slice ();if _bdcge !=nil {return nil ,_bdcge ;};_gdgc .Range =_fabef ;}else {_gdgc .Range =make ([]float64 ,2*_gdgc .N );for _gbfd :=0;_gbfd < _gdgc .N ;_gbfd ++{_gdgc .Range [2*_gbfd ]=0.0;_gdgc .Range [2*_gbfd +1]=1.0;
};};if _bfaf :=_edga .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bfaf !=nil {_beeb ,_eccb :=_bfaf .(*_gb .PdfObjectStream );if !_eccb {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_gdgc .Metadata =_beeb ;};_bdfc ,_ffae :=_gb .DecodeStream (_eead );if _ffae !=nil {return nil ,_ffae ;};_gdgc .Data =_bdfc ;_gdgc ._dced =_eead ;return _gdgc ,nil ;};func (_cgae *LTV )getCerts (_begaa []*_g .Certificate )([][]byte ,error ){_dadb :=make ([][]byte ,0,len (_begaa ));
for _ ,_fcdf :=range _begaa {_dadb =append (_dadb ,_fcdf .Raw );};return _dadb ,nil ;};func _ceae (_fbge _gb .PdfObject )(*PdfBorderStyle ,error ){_cgg :=&PdfBorderStyle {};_cgg ._cfde =_fbge ;var _ffdd *_gb .PdfObjectDictionary ;_fbge =_gb .TraceToDirectObject (_fbge );
_ffdd ,_fccf :=_fbge .(*_gb .PdfObjectDictionary );if !_fccf {return nil ,_dd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _aed :=_ffdd .Get ("\u0054\u0079\u0070\u0065");_aed !=nil {_fgbe ,_cfef :=_aed .(*_gb .PdfObjectName );
if !_cfef {_ag .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_aed );
}else {if *_fgbe !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ag .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_fgbe );};};};if _cfc :=_ffdd .Get ("\u0057");
_cfc !=nil {_dfb ,_aade :=_gb .GetNumberAsFloat (_cfc );if _aade !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_aade );return nil ,_aade ;};_cgg .W =&_dfb ;
};if _gdcf :=_ffdd .Get ("\u0053");_gdcf !=nil {_bdbd ,_bfcd :=_gdcf .(*_gb .PdfObjectName );if !_bfcd {return nil ,_dd .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ebdg BorderStyle ;switch *_bdbd {case "\u0053":_ebdg =BorderStyleSolid ;case "\u0044":_ebdg =BorderStyleDashed ;case "\u0042":_ebdg =BorderStyleBeveled ;case "\u0049":_ebdg =BorderStyleInset ;case "\u0055":_ebdg =BorderStyleUnderline ;default:_ag .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bdbd );
return nil ,_dd .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cgg .S =&_ebdg ;};if _gafg :=_ffdd .Get ("\u0044");_gafg !=nil {_cead ,_abce :=_gafg .(*_gb .PdfObjectArray );
if !_abce {_ag .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_gafg );return nil ,_dd .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ebea ,_ecb :=_cead .ToIntegerArray ();if _ecb !=nil {_ag .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_ecb );
return nil ,_ecb ;};_cgg .D =&_ebea ;};return _cgg ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dca *PdfAnnotationWidget )Field ()*PdfField {return _dca ._cec };

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_cggd *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gged :=0.3*_cggd .R ()+0.59*_cggd .G ()+0.11*_cggd .B ();_gged =_ga .Min (_ga .Max (_gged ,0.0),1.0);return NewPdfColorDeviceGray (_gged );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_decgg pdfCIDFontType2 )GetRuneMetrics (r rune )(_ed .CharMetrics ,bool ){_babb ,_fedd :=_decgg ._eaag [r ];if !_fedd {_feegd ,_gbdf :=_gb .GetInt (_decgg .DW );if !_gbdf {return _ed .CharMetrics {},false ;};_babb =int (*_feegd );};return _ed .CharMetrics {Wx :float64 (_babb )},true ;
};

// ToPdfObject returns a PDF object representation of the outline.
func (_ddfgdc *Outline )ToPdfObject ()_gb .PdfObject {return _ddfgdc .ToPdfOutline ().ToPdfObject ()};func _dbecf (_cdcfb *_gb .PdfObjectStream )(*PdfFunctionType4 ,error ){_fecf :=&PdfFunctionType4 {};_fecf ._fgba =_cdcfb ;_gabbc :=_cdcfb .PdfObjectDictionary ;
_cadc ,_faeff :=_gb .TraceToDirectObject (_gabbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );if !_faeff {_ag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cadc .Len ()%2!=0{_ag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_acaab ,_eeadb :=_cadc .ToFloat64Array ();
if _eeadb !=nil {return nil ,_eeadb ;};_fecf .Domain =_acaab ;_cadc ,_faeff =_gb .TraceToDirectObject (_gabbc .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );if _faeff {if _cadc .Len ()< 0||_cadc .Len ()%2!=0{return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bdeeda ,_ffbc :=_cadc .ToFloat64Array ();if _ffbc !=nil {return nil ,_ffbc ;};_fecf .Range =_bdeeda ;};_dcgdf ,_eeadb :=_gb .DecodeStream (_cdcfb );if _eeadb !=nil {return nil ,_eeadb ;};_fecf ._fgcb =_dcgdf ;_cacb :=_ea .NewPSParser (_dcgdf );_acdd ,_eeadb :=_cacb .Parse ();
if _eeadb !=nil {return nil ,_eeadb ;};_fecf .Program =_acdd ;return _fecf ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_adbad *XObjectImage )getParamsDict ()*_gb .PdfObjectDictionary {_bgbgb :=_gb .MakeDict ();_bgbgb .Set ("\u0057\u0069\u0064t\u0068",_gb .MakeInteger (*_adbad .Width ));_bgbgb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gb .MakeInteger (*_adbad .Height ));
_bgbgb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gb .MakeInteger (int64 (_adbad .ColorSpace .GetNumComponents ())));_bgbgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gb .MakeInteger (*_adbad .BitsPerComponent ));
return _bgbgb ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bcgb *PdfPageResources )GetContainingPdfObject ()_gb .PdfObject {return _bcgb ._bgagb };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dded *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bffb ,_cfdc :=_gb .GetNumbersAsFloat (objects );
if _cfdc !=nil {return nil ,_cfdc ;};return _dded .ColorFromFloats (_bffb );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_efac *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_gb .StreamEncoder ,error ){_fdbbef ,_gbgcb :=_efac ._egddg .(*_gb .PdfObjectStream );if !_gbgcb {_ag .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efac ._egddg );
return nil ,nil ,_gb .ErrTypeError ;};_dbbec ,_dcdac :=_gb .DecodeStream (_fdbbef );if _dcdac !=nil {_ag .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dcdac );
return nil ,nil ,_dcdac ;};_bfefg ,_dcdac :=_gb .NewEncoderFromStream (_fdbbef );if _dcdac !=nil {_ag .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dcdac );
return nil ,nil ,_dcdac ;};return _dbbec ,_bfefg ,nil ;};func _defde ()string {_gfde :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _dbcg _df .Buffer ;
for _befe :=0;_befe < 6;_befe ++{_dbcg .WriteRune (rune (_gfde [_fce .Intn (len (_gfde ))]));};return _dbcg .String ();};func (_adbba *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _abeg :=_adbba ._gdef ;_abeg !=nil {return _abeg ;};return _adbba ._dbeb ;
};func _facd (_decgb _gb .PdfObject )(map[_eaf .CharCode ]float64 ,error ){if _decgb ==nil {return nil ,nil ;};_dbdea ,_dcef :=_gb .GetArray (_decgb );if !_dcef {return nil ,nil ;};_cdgee :=map[_eaf .CharCode ]float64 {};_acbbg :=_dbdea .Len ();for _gcgb :=0;
_gcgb < _acbbg -1;_gcgb ++{_ddegg :=_gb .TraceToDirectObject (_dbdea .Get (_gcgb ));_dbcfb ,_ddged :=_gb .GetIntVal (_ddegg );if !_ddged {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gcgb ,_ddegg );
};_gcgb ++;if _gcgb > _acbbg -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_dbdea );};_dgfgf :=_gb .TraceToDirectObject (_dbdea .Get (_gcgb ));
switch _dgfgf .(type ){case *_gb .PdfObjectArray :_cdded ,_ :=_gb .GetArray (_dgfgf );if _ceeac ,_fbacg :=_cdded .ToFloat64Array ();_fbacg ==nil {for _cadef :=0;_cadef < len (_ceeac );_cadef ++{_cdgee [_eaf .CharCode (_dbcfb +_cadef )]=_ceeac [_cadef ];
};}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gcgb ,_dgfgf );};case *_gb .PdfObjectInteger :_fdfc ,_dabf :=_gb .GetIntVal (_dgfgf );
if !_dabf {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gcgb ,_dgfgf );};_gcgb ++;if _gcgb > _acbbg -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_dbdea );
};_ecda :=_dbdea .Get (_gcgb );_aebac ,_dcdc :=_gb .GetNumberAsFloat (_ecda );if _dcdc !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gcgb ,_ecda );
};for _ddcgc :=_dbcfb ;_ddcgc <=_fdfc ;_ddcgc ++{_cdgee [_eaf .CharCode (_ddcgc )]=_aebac ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gcgb ,_dgfgf );
};};return _cdgee ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _gb .PdfObject ;};

// GetOutlineTree returns the outline tree.
func (_bccc *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bccc ._dbdbe };

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dade *_gb .PdfIndirectObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_bdgd :=&PdfOutline {_bfgec :_gb .MakeIndirectObject (_gb .MakeDict ())};_bdgd ._dedbb =_bdgd ;return _bdgd ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_eaf .SimpleEncoder ,error ){_deef ,_ecfde :=_fdda (basefont );if _ecfde !=nil {return nil ,nil ,_ecfde ;};_gaefa ,_beacg :=_deef .Encoder ().(_eaf .SimpleEncoder );
if !_beacg {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_deef .Encoder ());
};_dfce :=make (map[rune ]_eaf .GlyphName );for _aedd :=range alphabet {if _ ,_bdgg :=_gaefa .RuneToCharcode (_aedd );!_bdgg {_ ,_ffef :=_deef ._fbefa .Read (_aedd );if !_ffef {_ag .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_aedd ,_aedd );
continue ;};_bdbfd ,_ffef :=_eaf .RuneToGlyph (_aedd );if !_ffef {_ag .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_aedd ,_aedd );continue ;};if len (_dfce )>=255{return nil ,nil ,_dd .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_dfce [_aedd ]=_bdbfd ;};};var (_eebd []_eaf .CharCode ;_gcadd []_eaf .CharCode ;);for _bdccg :=_eaf .CharCode (1);_bdccg <=0xff;_bdccg ++{_caaed ,_fgaf :=_gaefa .CharcodeToRune (_bdccg );if !_fgaf {_eebd =append (_eebd ,_bdccg );continue ;};if _ ,_fgaf =alphabet [_caaed ];
!_fgaf {_gcadd =append (_gcadd ,_bdccg );};};_ffdb :=append (_eebd ,_gcadd ...);if len (_ffdb )< len (_dfce ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dfce ),len (_ffdb ));
};_efbfa :=make ([]rune ,0,len (_dfce ));for _gcfda :=range _dfce {_efbfa =append (_efbfa ,_gcfda );};_cb .Slice (_efbfa ,func (_eafe ,_cgee int )bool {return _efbfa [_eafe ]< _efbfa [_cgee ]});_ffgc :=make (map[_eaf .CharCode ]_eaf .GlyphName ,len (_efbfa ));
for _ ,_dbfef :=range _efbfa {_bfcgc :=_ffdb [0];_ffdb =_ffdb [1:];_ffgc [_bfcgc ]=_dfce [_dbfef ];};_gaefa =_eaf .ApplyDifferences (_gaefa ,_ffgc );_deef .SetEncoder (_gaefa );return &PdfFont {_faee :&_deef },_gaefa ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageCallback PageCallback ;};

// GetNumComponents returns the number of color components.
func (_ddfb *PdfColorspaceICCBased )GetNumComponents ()int {return _ddfb .N };func (_ebgg *DSS )generateHashMap (_eddf []*_gb .PdfObjectStream )(map[string ]*_gb .PdfObjectStream ,error ){_adca :=map[string ]*_gb .PdfObjectStream {};for _ ,_bfffg :=range _eddf {_egfe ,_afac :=_gb .DecodeStream (_bfffg );
if _afac !=nil {return nil ,_afac ;};_gaaac ,_afac :=_gbbcc (_egfe );if _afac !=nil {return nil ,_afac ;};_adca [string (_gaaac )]=_bfffg ;};return _adca ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfgc *PdfColorspaceDeviceRGB )ToPdfObject ()_gb .PdfObject {return _gb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ToPdfObject implements interface PdfModel.
func (_bcedc *PdfAnnotationPopup )ToPdfObject ()_gb .PdfObject {_bcedc .PdfAnnotation .ToPdfObject ();_gbcb :=_bcedc ._gbac ;_agfe :=_gbcb .PdfObject .(*_gb .PdfObjectDictionary );_agfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0050\u006f\u0070u\u0070"));
_agfe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bcedc .Parent );_agfe .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bcedc .Open );return _gbcb ;};

// Encoder returns the font's text encoder.
func (_aede pdfCIDFontType2 )Encoder ()_eaf .TextEncoder {return _aede ._gfbcb };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_gadcb *Image )AlphaMap (mapFunc AlphaMapFunc ){for _fdedg ,_gbcfb :=range _gadcb ._aggec {_gadcb ._aggec [_fdedg ]=mapFunc (_gbcfb );};};func (_acg *PdfReader )newPdfAnnotationPopupFromDict (_cbdc *_gb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_edgd :=PdfAnnotationPopup {};
_edgd .Parent =_cbdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_edgd .Open =_cbdc .Get ("\u004f\u0070\u0065\u006e");return &_edgd ,nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gcggb pdfFontSimple )GetRuneMetrics (r rune )(_ed .CharMetrics ,bool ){if _gcggb ._fbefa !=nil {_gabfd ,_cbddb :=_gcggb ._fbefa .Read (r );if _cbddb {return _gabfd ,true ;};};_dedbf :=_gcggb .Encoder ();if _dedbf ==nil {_ag .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_gcggb );
return _ed .CharMetrics {},false ;};_fdbbe ,_feaag :=_dedbf .RuneToCharcode (r );if !_feaag {if r !=' '{_ag .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_gcggb );
};return _ed .CharMetrics {},false ;};_bgege ,_eeaga :=_gcggb .GetCharMetrics (_fdbbe );return _bgege ,_eeaga ;};

// ToPdfObject implements interface PdfModel.
func (_gfcb *PdfAnnotationWidget )ToPdfObject ()_gb .PdfObject {_gfcb .PdfAnnotation .ToPdfObject ();_bcde :=_gfcb ._gbac ;_ggcea :=_bcde .PdfObject .(*_gb .PdfObjectDictionary );if _gfcb ._eaea {return _bcde ;};_gfcb ._eaea =true ;_ggcea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_ggcea .SetIfNotNil ("\u0048",_gfcb .H );_ggcea .SetIfNotNil ("\u004d\u004b",_gfcb .MK );_ggcea .SetIfNotNil ("\u0041",_gfcb .A );_ggcea .SetIfNotNil ("\u0041\u0041",_gfcb .AA );_ggcea .SetIfNotNil ("\u0042\u0053",_gfcb .BS );_bagb :=_gfcb .Parent ;if _gfcb ._cec !=nil {if _gfcb ._cec ._feag ==_gfcb ._gbac {_gfcb ._cec .ToPdfObject ();
};_bagb =_gfcb ._cec .GetContainingPdfObject ();};if _bagb !=_bcde {_ggcea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bagb );};_gfcb ._eaea =false ;return _bcde ;};

// AddWatermarkImage adds a watermark to the page.
func (_agbdag *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_abaee ,_acbd :=_agbdag .GetMediaBox ();if _acbd !=nil {return _acbd ;};_bdbad :=_abaee .Urx -_abaee .Llx ;_egdd :=_abaee .Ury -_abaee .Lly ;_cbbae :=float64 (*ximg .Width );
_gfgcb :=(_bdbad -_cbbae )/2;if opt .FitToWidth {_cbbae =_bdbad ;_gfgcb =0;};_bcfdd :=_egdd ;_ddebd :=float64 (0);if opt .PreserveAspectRatio {_bcfdd =_cbbae *float64 (*ximg .Height )/float64 (*ximg .Width );_ddebd =(_egdd -_bcfdd )/2;};if _agbdag .Resources ==nil {_agbdag .Resources =NewPdfPageResources ();
};_dfed :=0;_dbgfe :=_gb .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_dfed ));for _agbdag .Resources .HasXObjectByName (_dbgfe ){_dfed ++;_dbgfe =_gb .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_dfed ));};_acbd =_agbdag .AddImageResource (_dbgfe ,ximg );
if _acbd !=nil {return _acbd ;};_dfed =0;_ccccb :=_gb .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_dfed ));for _agbdag .HasExtGState (_ccccb ){_dfed ++;_ccccb =_gb .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_dfed ));};_gfbbe :=_gb .MakeDict ();
_gfbbe .Set ("\u0042\u004d",_gb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gfbbe .Set ("\u0043\u0041",_gb .MakeFloat (opt .Alpha ));_gfbbe .Set ("\u0063\u0061",_gb .MakeFloat (opt .Alpha ));_acbd =_agbdag .AddExtGState (_ccccb ,_gfbbe );if _acbd !=nil {return _acbd ;
};_cfce :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ccccb ,_cbbae ,_bcfdd ,_gfgcb ,_ddebd ,_dbgfe );
_agbdag .AddContentStreamByString (_cfce );return nil ;};func _cagfe (_acgbb *_gb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_dfda :=PdfShadingType6 {};_gecgf :=_acgbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gecgf ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fcbbc ,_gaecb :=_gecgf .(*_gb .PdfObjectInteger );if !_gaecb {_ag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gecgf );
return nil ,_gb .ErrTypeError ;};_dfda .BitsPerCoordinate =_fcbbc ;_gecgf =_acgbb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gecgf ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fcbbc ,_gaecb =_gecgf .(*_gb .PdfObjectInteger );if !_gaecb {_ag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gecgf );
return nil ,_gb .ErrTypeError ;};_dfda .BitsPerComponent =_fcbbc ;_gecgf =_acgbb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gecgf ==nil {_ag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fcbbc ,_gaecb =_gecgf .(*_gb .PdfObjectInteger );if !_gaecb {_ag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gecgf );
return nil ,_gb .ErrTypeError ;};_dfda .BitsPerComponent =_fcbbc ;_gecgf =_acgbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gecgf ==nil {_ag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edca ,_gaecb :=_gecgf .(*_gb .PdfObjectArray );if !_gaecb {_ag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gecgf );
return nil ,_gb .ErrTypeError ;};_dfda .Decode =_edca ;if _adecb :=_acgbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_adecb !=nil {_dfda .Function =[]PdfFunction {};if _ceggd ,_fece :=_adecb .(*_gb .PdfObjectArray );_fece {for _ ,_ffaf :=range _ceggd .Elements (){_dgee ,_edacf :=_deee (_ffaf );
if _edacf !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edacf );return nil ,_edacf ;};_dfda .Function =append (_dfda .Function ,_dgee );
};}else {_acaga ,_dfac :=_deee (_adecb );if _dfac !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfac );return nil ,_dfac ;};
_dfda .Function =append (_dfda .Function ,_acaga );};};return &_dfda ,nil ;};func (_cdagb *PdfWriter )copyObject (_agfbgc _gb .PdfObject ,_eccfe map[_gb .PdfObject ]_gb .PdfObject ,_gfdec map[_gb .PdfObject ]struct{},_begc bool )_gb .PdfObject {_ceegec :=!_cdagb ._bedcd &&_gfdec !=nil ;
if _gdbfd ,_cbefaf :=_eccfe [_agfbgc ];_cbefaf {if _ceegec &&!_begc {delete (_gfdec ,_agfbgc );};return _gdbfd ;};_dbgcd :=_agfbgc ;switch _ebaea :=_agfbgc .(type ){case *_gb .PdfObjectArray :_ebaca :=_gb .MakeArray ();_dbgcd =_ebaca ;_eccfe [_agfbgc ]=_dbgcd ;
for _ ,_ffead :=range _ebaea .Elements (){_ebaca .Append (_cdagb .copyObject (_ffead ,_eccfe ,_gfdec ,_begc ));};case *_gb .PdfObjectStreams :_gdfag :=&_gb .PdfObjectStreams {PdfObjectReference :_ebaea .PdfObjectReference };_dbgcd =_gdfag ;_eccfe [_agfbgc ]=_dbgcd ;
for _ ,_afgdg :=range _ebaea .Elements (){_gdfag .Append (_cdagb .copyObject (_afgdg ,_eccfe ,_gfdec ,_begc ));};case *_gb .PdfObjectStream :_gadgg :=&_gb .PdfObjectStream {Stream :_ebaea .Stream ,PdfObjectReference :_ebaea .PdfObjectReference };_dbgcd =_gadgg ;
_eccfe [_agfbgc ]=_dbgcd ;_gadgg .PdfObjectDictionary =_cdagb .copyObject (_ebaea .PdfObjectDictionary ,_eccfe ,_gfdec ,_begc ).(*_gb .PdfObjectDictionary );case *_gb .PdfObjectDictionary :var _eecgf bool ;if _ceegec &&!_begc {if _cdged ,_ :=_gb .GetNameVal (_ebaea .Get ("\u0054\u0079\u0070\u0065"));
_cdged =="\u0050\u0061\u0067\u0065"{_ ,_gfeeg :=_cdagb ._fdfda [_ebaea ];_begc =!_gfeeg ;_eecgf =_begc ;};};_fgeda :=_gb .MakeDict ();_dbgcd =_fgeda ;_eccfe [_agfbgc ]=_dbgcd ;for _ ,_aggce :=range _ebaea .Keys (){_fgeda .Set (_aggce ,_cdagb .copyObject (_ebaea .Get (_aggce ),_eccfe ,_gfdec ,_begc ));
};if _eecgf {_dbgcd =_gb .MakeNull ();_begc =false ;};case *_gb .PdfIndirectObject :_bbcbf :=&_gb .PdfIndirectObject {PdfObjectReference :_ebaea .PdfObjectReference };_dbgcd =_bbcbf ;_eccfe [_agfbgc ]=_dbgcd ;_bbcbf .PdfObject =_cdagb .copyObject (_ebaea .PdfObject ,_eccfe ,_gfdec ,_begc );
case *_gb .PdfObjectString :_ebacd :=*_ebaea ;_dbgcd =&_ebacd ;_eccfe [_agfbgc ]=_dbgcd ;case *_gb .PdfObjectName :_cegfe :=*_ebaea ;_dbgcd =&_cegfe ;_eccfe [_agfbgc ]=_dbgcd ;case *_gb .PdfObjectNull :_dbgcd =_gb .MakeNull ();_eccfe [_agfbgc ]=_dbgcd ;
case *_gb .PdfObjectInteger :_daddb :=*_ebaea ;_dbgcd =&_daddb ;_eccfe [_agfbgc ]=_dbgcd ;case *_gb .PdfObjectReference :_eedc :=*_ebaea ;_dbgcd =&_eedc ;_eccfe [_agfbgc ]=_dbgcd ;case *_gb .PdfObjectFloat :_cbafdc :=*_ebaea ;_dbgcd =&_cbafdc ;_eccfe [_agfbgc ]=_dbgcd ;
case *_gb .PdfObjectBool :_dbgfg :=*_ebaea ;_dbgcd =&_dbgfg ;_eccfe [_agfbgc ]=_dbgcd ;case *pdfSignDictionary :_eaefd :=&pdfSignDictionary {PdfObjectDictionary :_gb .MakeDict (),_deccaf :_ebaea ._deccaf ,_ecea :_ebaea ._ecea };_dbgcd =_eaefd ;_eccfe [_agfbgc ]=_dbgcd ;
for _ ,_adaa :=range _ebaea .Keys (){_eaefd .Set (_adaa ,_cdagb .copyObject (_ebaea .Get (_adaa ),_eccfe ,_gfdec ,_begc ));};default:_ag .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_agfbgc );
};if _ceegec &&_begc {_gfdec [_agfbgc ]=struct{}{};};return _dbgcd ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gb .PdfObject ;LE _gb .PdfObject ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;IT _gb .PdfObject ;Measure _gb .PdfObject ;};const (BorderStyleSolid BorderStyle =iota ;
BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_efd :=NewPdfAnnotation ();_gefb :=&PdfAnnotationPolygon {};_gefb .PdfAnnotation =_efd ;_gefb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efd .SetContext (_gefb );return _gefb ;};

// SetName sets the `Name` field of the signature.
func (_fdadcf *PdfSignature )SetName (name string ){_fdadcf .Name =_gb .MakeString (name )};func _cgggc (_dgefb _gb .PdfObject )(*PdfShading ,error ){_eebaad :=&PdfShading {};var _gdbca *_gb .PdfObjectDictionary ;if _fabeg ,_eadgg :=_gb .GetIndirect (_dgefb );
_eadgg {_eebaad ._aggbc =_fabeg ;_bgccb ,_affc :=_fabeg .PdfObject .(*_gb .PdfObjectDictionary );if !_affc {_ag .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_gb .ErrTypeError ;};_gdbca =_bgccb ;}else if _debf ,_cccfd :=_gb .GetStream (_dgefb );_cccfd {_eebaad ._aggbc =_debf ;_gdbca =_debf .PdfObjectDictionary ;}else if _agbag ,_defcc :=_gb .GetDict (_dgefb );_defcc {_eebaad ._aggbc =_agbag ;_gdbca =_agbag ;
}else {_ag .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_dgefb );return nil ,_gb .ErrTypeError ;};if _gdbca ==nil {_ag .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_dd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dgefb =_gdbca .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dgefb ==nil {_ag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgefb =_gb .TraceToDirectObject (_dgefb );_fccgc ,_cgcc :=_dgefb .(*_gb .PdfObjectInteger );if !_cgcc {_ag .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dgefb );
return nil ,_gb .ErrTypeError ;};if *_fccgc < 1||*_fccgc > 7{_ag .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fccgc );
return nil ,_gb .ErrTypeError ;};_eebaad .ShadingType =_fccgc ;_dgefb =_gdbca .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _dgefb ==nil {_ag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fbdff ,_faabc :=NewPdfColorspaceFromPdfObject (_dgefb );if _faabc !=nil {_ag .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_faabc );
return nil ,_faabc ;};_eebaad .ColorSpace =_fbdff ;_dgefb =_gdbca .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _dgefb !=nil {_dgefb =_gb .TraceToDirectObject (_dgefb );_bbcc ,_ccbfa :=_dgefb .(*_gb .PdfObjectArray );if !_ccbfa {_ag .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dgefb );
return nil ,_gb .ErrTypeError ;};_eebaad .Background =_bbcc ;};_dgefb =_gdbca .Get ("\u0042\u0042\u006f\u0078");if _dgefb !=nil {_dgefb =_gb .TraceToDirectObject (_dgefb );_dfaec ,_gddfe :=_dgefb .(*_gb .PdfObjectArray );if !_gddfe {_ag .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dgefb );
return nil ,_gb .ErrTypeError ;};_abadc ,_eedgf :=NewPdfRectangle (*_dfaec );if _eedgf !=nil {_ag .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_eedgf );return nil ,_eedgf ;};_eebaad .BBox =_abadc ;};_dgefb =_gdbca .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _dgefb !=nil {_dgefb =_gb .TraceToDirectObject (_dgefb );_adff ,_gfbca :=_dgefb .(*_gb .PdfObjectBool );if !_gfbca {_ag .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgefb );
return nil ,_gb .ErrTypeError ;};_eebaad .AntiAlias =_adff ;};switch *_fccgc {case 1:_acgef ,_aceb :=_abbaf (_gdbca );if _aceb !=nil {return nil ,_aceb ;};_acgef .PdfShading =_eebaad ;_eebaad ._agffb =_acgef ;return _eebaad ,nil ;case 2:_cbbac ,_cbbaa :=_afbd (_gdbca );
if _cbbaa !=nil {return nil ,_cbbaa ;};_cbbac .PdfShading =_eebaad ;_eebaad ._agffb =_cbbac ;return _eebaad ,nil ;case 3:_ggbgb ,_aadca :=_gece (_gdbca );if _aadca !=nil {return nil ,_aadca ;};_ggbgb .PdfShading =_eebaad ;_eebaad ._agffb =_ggbgb ;return _eebaad ,nil ;
case 4:_gcfg ,_edge :=_fffeg (_gdbca );if _edge !=nil {return nil ,_edge ;};_gcfg .PdfShading =_eebaad ;_eebaad ._agffb =_gcfg ;return _eebaad ,nil ;case 5:_efbae ,_ebcdc :=_bbcaa (_gdbca );if _ebcdc !=nil {return nil ,_ebcdc ;};_efbae .PdfShading =_eebaad ;
_eebaad ._agffb =_efbae ;return _eebaad ,nil ;case 6:_cdddaa ,_fdfca :=_cagfe (_gdbca );if _fdfca !=nil {return nil ,_fdfca ;};_cdddaa .PdfShading =_eebaad ;_eebaad ._agffb =_cdddaa ;return _eebaad ,nil ;case 7:_accga ,_gdad :=_eefdg (_gdbca );if _gdad !=nil {return nil ,_gdad ;
};_accga .PdfShading =_eebaad ;_eebaad ._agffb =_accga ;return _eebaad ,nil ;};return nil ,_dd .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};type pdfCIDFontType2 struct{fontCommon ;_bdeec *_gb .PdfIndirectObject ;
_gfbcb _eaf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_gb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gb .PdfObject ;W _gb .PdfObject ;DW2 _gb .PdfObject ;W2 _gb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _gb .PdfObject ;_abfb map[_eaf .CharCode ]float64 ;_beec float64 ;_eaag map[rune ]int ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_gb .PdfObjectStream )(*XObjectForm ,error ){_dfbag :=&XObjectForm {};_dfbag ._bfaeg =stream ;_fdada :=*(stream .PdfObjectDictionary );_fafaa ,_fccfe :=_gb .NewEncoderFromStream (stream );if _fccfe !=nil {return nil ,_fccfe ;
};_dfbag .Filter =_fafaa ;if _gefca :=_fdada .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gefca !=nil {_fdadae ,_feabab :=_gefca .(*_gb .PdfObjectName );if !_feabab {return nil ,_dd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_fdadae !="\u0046\u006f\u0072\u006d"{_ag .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_dd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _begfg :=_fdada .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_begfg !=nil {_dfbag .FormType =_begfg ;};if _egacc :=_fdada .Get ("\u0042\u0042\u006f\u0078");_egacc !=nil {_dfbag .BBox =_egacc ;};if _ebedb :=_fdada .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_ebedb !=nil {_dfbag .Matrix =_ebedb ;};if _fcgdc :=_fdada .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fcgdc !=nil {_fcgdc =_gb .TraceToDirectObject (_fcgdc );_gbaed ,_adbge :=_fcgdc .(*_gb .PdfObjectDictionary );if !_adbge {_ag .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gb .ErrTypeError ;};_fbgdb ,_ggdef :=NewPdfPageResourcesFromDict (_gbaed );if _ggdef !=nil {_ag .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_ggdef ;};_dfbag .Resources =_fbgdb ;_ag .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_dfbag .Resources );};_dfbag .Group =_fdada .Get ("\u0047\u0072\u006fu\u0070");
_dfbag .Ref =_fdada .Get ("\u0052\u0065\u0066");_dfbag .MetaData =_fdada .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_dfbag .PieceInfo =_fdada .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dfbag .LastModified =_fdada .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_dfbag .StructParent =_fdada .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dfbag .StructParents =_fdada .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_dfbag .OPI =_fdada .Get ("\u004f\u0050\u0049");
_dfbag .OC =_fdada .Get ("\u004f\u0043");_dfbag .Name =_fdada .Get ("\u004e\u0061\u006d\u0065");_dfbag .Stream =stream .Stream ;return _dfbag ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_acadg *PdfWriter )SetDocInfo (info *PdfInfo ){if _acadg .hasObject (_acadg ._dgbf ){delete (_acadg ._addef ,_acadg ._dgbf );delete (_acadg ._dagbf ,_acadg ._dgbf );for _eafaa ,_bdeece :=range _acadg ._cccdf {if _bdeece ==_acadg ._dgbf {copy (_acadg ._cccdf [_eafaa :],_acadg ._cccdf [_eafaa +1:]);
_acadg ._cccdf [len (_acadg ._cccdf )-1]=nil ;_acadg ._cccdf =_acadg ._cccdf [:len (_acadg ._cccdf )-1];break ;};};};_ffaga :=_gb .PdfIndirectObject {};_ffaga .PdfObject =info .ToPdfObject ();_acadg ._dgbf =&_ffaga ;_acadg .addObject (&_ffaga );};func (_ebg *PdfReader )newPdfAnnotationMovieFromDict (_daeg *_gb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_eaab :=PdfAnnotationMovie {};
_eaab .T =_daeg .Get ("\u0054");_eaab .Movie =_daeg .Get ("\u004d\u006f\u0076i\u0065");_eaab .A =_daeg .Get ("\u0041");return &_eaab ,nil ;};

// Encoder returns the font's text encoder.
func (_degc *pdfFontSimple )Encoder ()_eaf .TextEncoder {if _degc ._agee !=nil {return _degc ._agee ;};if _degc ._eafce !=nil {return _degc ._eafce ;};_ggde ,_ :=_eaf .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _ggde ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_cdcce *PdfPageResources )SetFontByName (keyName _gb .PdfObjectName ,obj _gb .PdfObject )error {if _cdcce .Font ==nil {_cdcce .Font =_gb .MakeDict ();};_dfagb ,_cdecbf :=_gb .TraceToDirectObject (_cdcce .Font ).(*_gb .PdfObjectDictionary );if !_cdecbf {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gb .TraceToDirectObject (_cdcce .Font ));
return _gb .ErrTypeError ;};_dfagb .Set (keyName ,obj );return nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_gb .PdfObjectString ;Q *_gb .PdfObjectInteger ;DS *_gb .PdfObjectString ;RV _gb .PdfObject ;MaxLen *_gb .PdfObjectInteger ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func (_gdfd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_fcdec *_gb .PdfIndirectObject ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_deb :=NewPdfAction ();_baa :=&PdfActionHide {};_baa .PdfAction =_deb ;_deb .SetContext (_baa );return _baa ;};func (_dgb *PdfReader )newPdfAnnotationWidgetFromDict (_agab *_gb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fbdf :=PdfAnnotationWidget {};
_fbdf .H =_agab .Get ("\u0048");_fbdf .MK =_agab .Get ("\u004d\u004b");_fbdf .A =_agab .Get ("\u0041");_fbdf .AA =_agab .Get ("\u0041\u0041");_fbdf .BS =_agab .Get ("\u0042\u0053");_fbdf .Parent =_agab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fbdf ,nil ;
};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ValidateSignatures validates digital signatures in the document.
func (_dcfebe *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dcfebe .AcroForm ==nil {return nil ,nil ;};if _dcfebe .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ccdac *PdfSignature ;
_ddebf *PdfField ;_acgea SignatureHandler ;};var _fbbeg []*sigFieldPair ;for _ ,_cebgb :=range _dcfebe .AcroForm .AllFields (){if _cebgb .V ==nil {continue ;};if _defdf ,_edaf :=_gb .GetDict (_cebgb .V );_edaf {if _cgag ,_bcaeae :=_gb .GetNameVal (_defdf .Get ("\u0054\u0079\u0070\u0065"));
_bcaeae &&_cgag =="\u0053\u0069\u0067"{_affcb ,_cfag :=_gb .GetIndirect (_cebgb .V );if !_cfag {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_aebadg ,_eebaab :=_dcfebe .newPdfSignatureFromIndirect (_affcb );if _eebaab !=nil {return nil ,_eebaab ;};var _ffbe SignatureHandler ;for _ ,_bbdgb :=range handlers {if _bbdgb .IsApplicable (_aebadg ){_ffbe =_bbdgb ;break ;
};};_fbbeg =append (_fbbeg ,&sigFieldPair {_ccdac :_aebadg ,_ddebf :_cebgb ,_acgea :_ffbe });};};};var _gaece []SignatureValidationResult ;for _ ,_fggcb :=range _fbbeg {_gabbg :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fggcb ._ddebf }};
if _fggcb ._acgea ==nil {_gabbg .Errors =append (_gabbg .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_gaece =append (_gaece ,_gabbg );continue ;};_ebebf ,_addf :=_fggcb ._acgea .NewDigest (_fggcb ._ccdac );
if _addf !=nil {_gabbg .Errors =append (_gabbg .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_addf .Error ());_gaece =append (_gaece ,_gabbg );continue ;};_aecc :=_fggcb ._ccdac .ByteRange ;if _aecc ==nil {_gabbg .Errors =append (_gabbg .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_gaece =append (_gaece ,_gabbg );continue ;};for _aaeeb :=0;_aaeeb < _aecc .Len ();_aaeeb =_aaeeb +2{_cbbfa ,_ :=_gb .GetNumberAsInt64 (_aecc .Get (_aaeeb ));_dggf ,_ :=_gb .GetIntVal (_aecc .Get (_aaeeb +1));if _ ,_fegeb :=_dcfebe ._aabg .Seek (_cbbfa ,_fg .SeekStart );
_fegeb !=nil {return nil ,_fegeb ;};_afbb :=make ([]byte ,_dggf );if _ ,_bdfeec :=_dcfebe ._aabg .Read (_afbb );_bdfeec !=nil {return nil ,_bdfeec ;};_ebebf .Write (_afbb );};_bbda ,_addf :=_fggcb ._acgea .Validate (_fggcb ._ccdac ,_ebebf );if _addf !=nil {return nil ,_addf ;
};_bbda .Name =_fggcb ._ccdac .Name .Decoded ();_bbda .Reason =_fggcb ._ccdac .Reason .Decoded ();if _fggcb ._ccdac .M !=nil {_bdgag ,_fcbbg :=NewPdfDate (_fggcb ._ccdac .M .String ());if _fcbbg !=nil {_bbda .Errors =append (_bbda .Errors ,_fcbbg .Error ());
continue ;};_bbda .Date =_bdgag ;};_bbda .ContactInfo =_fggcb ._ccdac .ContactInfo .Decoded ();_bbda .Location =_fggcb ._ccdac .Location .Decoded ();_bbda .Fields =_gabbg .Fields ;_gaece =append (_gaece ,_bbda );};return _gaece ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_bga :=NewPdfAnnotation ();_cgfa :=&PdfAnnotationProjection {};_cgfa .PdfAnnotation =_bga ;_cgfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bga .SetContext (_cgfa );return _cgfa ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cbdf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbbd ,_bcfc :=_gb .GetNumbersAsFloat (objects );
if _bcfc !=nil {return nil ,_bcfc ;};return _cbdf .ColorFromFloats (_cbbd );};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ggfg *PdfFieldSignature )ToPdfObject ()_gb .PdfObject {if _ggfg .PdfAnnotationWidget !=nil {_ggfg .PdfAnnotationWidget .ToPdfObject ();};_ggfg .PdfField .ToPdfObject ();_cdecb :=_ggfg ._feag ;_afebg :=_cdecb .PdfObject .(*_gb .PdfObjectDictionary );
_afebg .SetIfNotNil ("\u0046\u0054",_gb .MakeName ("\u0053\u0069\u0067"));_afebg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ggfg .Lock );_afebg .SetIfNotNil ("\u0053\u0056",_ggfg .SV );if _ggfg .V !=nil {_afebg .SetIfNotNil ("\u0056",_ggfg .V .ToPdfObject ());
};return _cdecb ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_bb :=NewPdfAction ();_cc :=&PdfActionSetOCGState {};_cc .PdfAction =_bb ;_bb .SetContext (_cc );return _cc ;};func _abbaf (_gfccg *_gb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ccbcd :=PdfShadingType1 {};
if _dbcbe :=_gfccg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dbcbe !=nil {_dbcbe =_gb .TraceToDirectObject (_dbcbe );_bbcdb ,_cagec :=_dbcbe .(*_gb .PdfObjectArray );if !_cagec {_ag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbcbe );
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccbcd .Domain =_bbcdb ;};if _fcdae :=_gfccg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fcdae !=nil {_fcdae =_gb .TraceToDirectObject (_fcdae );
_dbgbd ,_cdeec :=_fcdae .(*_gb .PdfObjectArray );if !_cdeec {_ag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcdae );return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ccbcd .Matrix =_dbgbd ;};_dgaag :=_gfccg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dgaag ==nil {_ag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ccbcd .Function =[]PdfFunction {};if _aggef ,_bbffc :=_dgaag .(*_gb .PdfObjectArray );_bbffc {for _ ,_afcga :=range _aggef .Elements (){_cdcaf ,_ddcgg :=_deee (_afcga );if _ddcgg !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddcgg );
return nil ,_ddcgg ;};_ccbcd .Function =append (_ccbcd .Function ,_cdcaf );};}else {_bbcb ,_dbecc :=_deee (_dgaag );if _dbecc !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbecc );
return nil ,_dbecc ;};_ccbcd .Function =append (_ccbcd .Function ,_bbcb );};return &_ccbcd ,nil ;};func (_dbgge *PdfReader )buildOutlineTree (_defgbf _gb .PdfObject ,_adfe *PdfOutlineTreeNode ,_ceege *PdfOutlineTreeNode ,_gded map[_gb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gded ==nil {_gded =map[_gb .PdfObject ]struct{}{};
};_gded [_defgbf ]=struct{}{};_cagbe ,_efaaf :=_defgbf .(*_gb .PdfIndirectObject );if !_efaaf {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_defgbf );
};_aebaa ,_gfece :=_cagbe .PdfObject .(*_gb .PdfObjectDictionary );if !_gfece {return nil ,nil ,_dd .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ag .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_aebaa ,_cagbe ,_cagbe );
if _gdfgcc :=_aebaa .Get ("\u0054\u0069\u0074l\u0065");_gdfgcc !=nil {_gbeee ,_fddcec :=_dbgge .newPdfOutlineItemFromIndirectObject (_cagbe );if _fddcec !=nil {return nil ,nil ,_fddcec ;};_gbeee .Parent =_adfe ;_gbeee .Prev =_ceege ;_dgcg :=_gb .ResolveReference (_aebaa .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_fdbg :=_gded [_dgcg ];_dgcg !=nil &&_dgcg !=_cagbe &&!_fdbg {if !_gb .IsNullObject (_dgcg ){_bbgag ,_gcgd ,_ccbe :=_dbgge .buildOutlineTree (_dgcg ,&_gbeee .PdfOutlineTreeNode ,nil ,_gded );if _ccbe !=nil {_ag .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ccbe );
}else {_gbeee .First =_bbgag ;_gbeee .Last =_gcgd ;};};};_fggdd :=_gb .ResolveReference (_aebaa .Get ("\u004e\u0065\u0078\u0074"));if _ ,_abee :=_gded [_fggdd ];_fggdd !=nil &&_fggdd !=_cagbe &&!_abee {if !_gb .IsNullObject (_fggdd ){_cbaeba ,_eeggf ,_aace :=_dbgge .buildOutlineTree (_fggdd ,_adfe ,&_gbeee .PdfOutlineTreeNode ,_gded );
if _aace !=nil {_ag .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_aace );
}else {_gbeee .Next =_cbaeba ;return &_gbeee .PdfOutlineTreeNode ,_eeggf ,nil ;};};};return &_gbeee .PdfOutlineTreeNode ,&_gbeee .PdfOutlineTreeNode ,nil ;};_baca ,_cdbde :=_fageb (_cagbe );if _cdbde !=nil {return nil ,nil ,_cdbde ;};_baca .Parent =_adfe ;
if _bdcdd :=_aebaa .Get ("\u0046\u0069\u0072s\u0074");_bdcdd !=nil {_bdcdd =_gb .ResolveReference (_bdcdd );if _ ,_cfffa :=_gded [_bdcdd ];_bdcdd !=nil &&_bdcdd !=_cagbe &&!_cfffa {_dfded :=_gb .TraceToDirectObject (_bdcdd );if _ ,_ebccb :=_dfded .(*_gb .PdfObjectNull );
!_ebccb &&_dfded !=nil {_baedg ,_febfb ,_bdbec :=_dbgge .buildOutlineTree (_bdcdd ,&_baca .PdfOutlineTreeNode ,nil ,_gded );if _bdbec !=nil {_ag .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bdbec );
}else {_baca .First =_baedg ;_baca .Last =_febfb ;};};};};return &_baca .PdfOutlineTreeNode ,&_baca .PdfOutlineTreeNode ,nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fbcg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_dd .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_aeedf ,_gcaa :=_aag .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aggec ,img ._fbga );if _gcaa !=nil {return img ,_gcaa ;};_cfgf ,_gcaa :=_aag .GrayConverter .Convert (_aeedf );if _gcaa !=nil {return img ,_gcaa ;
};return _dcgf (_cfgf .Base ()),nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_dedgb *DSS )GetContainingPdfObject ()_gb .PdfObject {return _dedgb ._ecfcf };func (_dfgf *PdfReader )buildPageList (_dbcb *_gb .PdfIndirectObject ,_gbccc *_gb .PdfIndirectObject ,_fddgc map[_gb .PdfObject ]struct{})error {if _dbcb ==nil {return nil ;
};if _ ,_aeebf :=_fddgc [_dbcb ];_aeebf {_ag .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_dbcb .ObjectNumber );
return nil ;};_fddgc [_dbcb ]=struct{}{};_gefcc ,_dfefc :=_dbcb .PdfObject .(*_gb .PdfObjectDictionary );if !_dfefc {return _dd .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_cbfba ,_dfefc :=(*_gefcc ).Get ("\u0054\u0079\u0070\u0065").(*_gb .PdfObjectName );
if !_dfefc {if _gefcc .Get ("\u004b\u0069\u0064\u0073")==nil {return _dd .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ag .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_cbfba =_gb .MakeName ("\u0050\u0061\u0067e\u0073");_gefcc .Set ("\u0054\u0079\u0070\u0065",_cbfba );};_ag .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_cbfba ,_dbcb );
if *_cbfba =="\u0050\u0061\u0067\u0065"{_agfda ,_ebfa :=_dfgf .newPdfPageFromDict (_gefcc );if _ebfa !=nil {return _ebfa ;};_agfda .setContainer (_dbcb );if _gbccc !=nil {_gefcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbccc );};_dfgf ._cfedb =append (_dfgf ._cfedb ,_dbcb );
_dfgf .PageList =append (_dfgf .PageList ,_agfda );return nil ;};if *_cbfba !="\u0050\u0061\u0067e\u0073"{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_cbfba );
return _dd .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gbccc !=nil {_gefcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbccc );};if !_dfgf ._cddff {_bcbab :=_dfgf .traverseObjectData (_dbcb );if _bcbab !=nil {return _bcbab ;};};_fgfa ,_cggbc :=_dfgf ._faefdf .Resolve (_gefcc .Get ("\u004b\u0069\u0064\u0073"));
if _cggbc !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cggbc ;};var _fcgdf *_gb .PdfObjectArray ;
_fcgdf ,_dfefc =_fgfa .(*_gb .PdfObjectArray );if !_dfefc {_cfcf ,_fafce :=_fgfa .(*_gb .PdfIndirectObject );if !_fafce {return _dd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fcgdf ,_dfefc =_cfcf .PdfObject .(*_gb .PdfObjectArray );
if !_dfefc {return _dd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ag .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_fcgdf );
for _dddc ,_cbeb :=range _fcgdf .Elements (){_aedaf ,_dgebb :=_gb .GetIndirect (_cbeb );if !_dgebb {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_aedaf );
return _dd .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fcgdf .Set (_dddc ,_aedaf );_cggbc =_dfgf .buildPageList (_aedaf ,_dbcb ,_fddgc );if _cggbc !=nil {return _cggbc ;
};};return nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_aff .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_aff .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_aff .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_aaad *PdfAppender ;_agbda *DSS ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_eddec *PdfShadingPattern )ToPdfObject ()_gb .PdfObject {_eddec .PdfPattern .ToPdfObject ();_cgaf :=_eddec .getDict ();if _eddec .Shading !=nil {_cgaf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eddec .Shading .ToPdfObject ());};if _eddec .Matrix !=nil {_cgaf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eddec .Matrix );
};if _eddec .ExtGState !=nil {_cgaf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eddec .ExtGState );};return _eddec ._egddg ;};func _ecegb (_dafd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_gcbg ,_dgge :=_gb .GetDict (_dafd .AP );if !_dgge {return nil ,nil ,_dd .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _gcbg ==nil {return nil ,nil ,nil ;};_gefa ,_dgge :=_gb .GetArray (_dafd .Rect );if !_dgge ||_gefa .Len ()!=4{return nil ,nil ,_dd .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eacad ,_dbce :=NewPdfRectangle (*_gefa );
if _dbce !=nil {return nil ,nil ,_dbce ;};_ggeff :=_gb .TraceToDirectObject (_gcbg .Get ("\u004e"));switch _edcg :=_ggeff .(type ){case *_gb .PdfObjectStream :_bcfea :=_edcg ;_effac ,_cdeg :=NewXObjectFormFromStream (_bcfea );return _effac ,_eacad ,_cdeg ;
case *_gb .PdfObjectDictionary :_edab :=_edcg ;_ccaa ,_aedfb :=_gb .GetName (_dafd .AS );if !_aedfb {return nil ,nil ,nil ;};if _edab .Get (*_ccaa )==nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_cbcag ,_aedfb :=_gb .GetStream (_edab .Get (*_ccaa ));if !_aedfb {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ccaa );
return nil ,nil ,_dd .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_adecg ,_dbgae :=NewXObjectFormFromStream (_cbcag );return _adecg ,_eacad ,_dbgae ;};_ag .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ggeff );
return nil ,nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_bdbe *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ccaaf *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _bcg []_eaf .TextEncoder ;var _ffff _eaf .CMapEncoder ;if _bbegf :=_ccaaf .baseFields ()._dfbfc ;_bbegf !=nil {_ffff =_eaf .NewCMapEncoder ("",nil ,_bbegf );};_dcdag :=_ccaaf .Encoder ();
if _dcdag !=nil {switch _fbbd :=_dcdag .(type ){case _eaf .SimpleEncoder :_adag :=_fbbd .BaseName ();if _ ,_ggbc :=_fceb [_adag ];_ggbc {_bcg =append (_bcg ,_dcdag );};};};if len (_bcg )==0{if _ccaaf .baseFields ()._dfbfc !=nil {_bcg =append (_bcg ,_ffff );
};if _dcdag !=nil {_bcg =append (_bcg ,_dcdag );};};var _defaf _df .Buffer ;var _aabc int ;for _ ,_dbde :=range data {var _dcbad bool ;for _ ,_gbbe :=range _bcg {if _gagd :=_gbbe .Encode (string (_dbde ));len (_gagd )> 0{_defaf .Write (_gagd );_dcbad =true ;
break ;};};if !_dcbad {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dbde );
_aabc ++;};};if _aabc !=0{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_aabc ,_ccaaf ,_bcg );
};return _defaf .Bytes (),_aabc ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bdac *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bdac .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bdac ._bdf =acroForm ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_eccf *Image )ToGoImage ()(_be .Image ,error ){_ag .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_eaefc ,_bebca :=_aag .NewImage (int (_eccf .Width ),int (_eccf .Height ),int (_eccf .BitsPerComponent ),_eccf .ColorComponents ,_eccf .Data ,_eccf ._aggec ,_eccf ._fbga );
if _bebca !=nil {return nil ,_bebca ;};return _eaefc ,nil ;};func (_efgc *fontFile )parseASCIIPart (_fadc []byte )error {if len (_fadc )< 2||string (_fadc [:2])!="\u0025\u0021"{return _dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_abbd ,_ggggg ,_bdagg :=_ccddf (_fadc );if _bdagg !=nil {return _bdagg ;};_bebcc :=_ggaea (_abbd );_efgc ._abbaa =_bebcc ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _efgc ._abbaa ==""{_ag .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _ggggg !=""{_dgba ,_ffea :=_eede (_ggggg );if _ffea !=nil {return _ffea ;};_dbdca ,_ffea :=_eaf .NewCustomSimpleTextEncoder (_dgba ,nil );if _ffea !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ffea );
return nil ;};_efgc ._fffd =_dbdca ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fff *PdfActionImportData )ToPdfObject ()_gb .PdfObject {_fff .PdfAction .ToPdfObject ();_gba :=_fff ._gae ;_efa :=_gba .PdfObject .(*_gb .PdfObjectDictionary );_efa .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeImportData )));if _fff .F !=nil {_efa .Set ("\u0046",_fff .F .ToPdfObject ());
};return _gba ;};

// ToPdfObject implements interface PdfModel.
func (_dfba *PdfBorderStyle )ToPdfObject ()_gb .PdfObject {_aabd :=_gb .MakeDict ();if _dfba ._cfde !=nil {if _edf ,_fedg :=_dfba ._cfde .(*_gb .PdfIndirectObject );_fedg {_edf .PdfObject =_aabd ;};};_aabd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _dfba .W !=nil {_aabd .Set ("\u0057",_gb .MakeFloat (*_dfba .W ));};if _dfba .S !=nil {_aabd .Set ("\u0053",_gb .MakeName (_dfba .S .GetPdfName ()));};if _dfba .D !=nil {_aabd .Set ("\u0044",_gb .MakeArrayFromIntegers (*_dfba .D ));};if _dfba ._cfde !=nil {return _dfba ._cfde ;
};return _aabd ;};

// StdFontName represents name of a standard font.
type StdFontName =_ed .StdFontName ;

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _gb .PdfObject ;Open _gb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbcea *PdfAnnotationFreeText )ToPdfObject ()_gb .PdfObject {_fbcea .PdfAnnotation .ToPdfObject ();_gdf :=_fbcea ._gbac ;_ceag :=_gdf .PdfObject .(*_gb .PdfObjectDictionary );_fbcea .PdfAnnotationMarkup .appendToPdfDictionary (_ceag );_ceag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_ceag .SetIfNotNil ("\u0044\u0041",_fbcea .DA );_ceag .SetIfNotNil ("\u0051",_fbcea .Q );_ceag .SetIfNotNil ("\u0052\u0043",_fbcea .RC );_ceag .SetIfNotNil ("\u0044\u0053",_fbcea .DS );_ceag .SetIfNotNil ("\u0043\u004c",_fbcea .CL );_ceag .SetIfNotNil ("\u0049\u0054",_fbcea .IT );
_ceag .SetIfNotNil ("\u0042\u0045",_fbcea .BE );_ceag .SetIfNotNil ("\u0052\u0044",_fbcea .RD );_ceag .SetIfNotNil ("\u0042\u0053",_fbcea .BS );_ceag .SetIfNotNil ("\u004c\u0045",_fbcea .LE );return _gdf ;};func _cfbff (_fcfd _gb .PdfObject )(*PdfColorspaceLab ,error ){_agfac :=NewPdfColorspaceLab ();
if _cddf ,_gfeea :=_fcfd .(*_gb .PdfIndirectObject );_gfeea {_agfac ._dade =_cddf ;};_fcfd =_gb .TraceToDirectObject (_fcfd );_dgafd ,_gebe :=_fcfd .(*_gb .PdfObjectArray );if !_gebe {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dgafd .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fcfd =_gb .TraceToDirectObject (_dgafd .Get (0));_dbddd ,_gebe :=_fcfd .(*_gb .PdfObjectName );
if !_gebe {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_dbddd !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_fcfd =_gb .TraceToDirectObject (_dgafd .Get (1));_dggc ,_gebe :=_fcfd .(*_gb .PdfObjectDictionary );if !_gebe {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_fcfd =_dggc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fcfd =_gb .TraceToDirectObject (_fcfd );_dbfbb ,_gebe :=_fcfd .(*_gb .PdfObjectArray );if !_gebe {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _dbfbb .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gebc ,_dabd :=_dbfbb .GetAsFloat64Slice ();
if _dabd !=nil {return nil ,_dabd ;};_agfac .WhitePoint =_gebc ;_fcfd =_dggc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fcfd !=nil {_fcfd =_gb .TraceToDirectObject (_fcfd );_fbec ,_abgaa :=_fcfd .(*_gb .PdfObjectArray );if !_abgaa {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");
};if _fbec .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_dfcd ,_cbbbd :=_fbec .GetAsFloat64Slice ();
if _cbbbd !=nil {return nil ,_cbbbd ;};_agfac .BlackPoint =_dfcd ;};_fcfd =_dggc .Get ("\u0052\u0061\u006eg\u0065");if _fcfd !=nil {_fcfd =_gb .TraceToDirectObject (_fcfd );_ebac ,_cdga :=_fcfd .(*_gb .PdfObjectArray );if !_cdga {_ag .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebac .Len ()!=4{_ag .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gfba ,_cbbcf :=_ebac .GetAsFloat64Slice ();if _cbbcf !=nil {return nil ,_cbbcf ;};_agfac .Range =_gfba ;};return _agfac ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_defb *PdfAcroForm )GetContainingPdfObject ()_gb .PdfObject {return _defb ._bfefd };

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_fadee byte )byte ;func _bdgb (_gadf _gb .PdfObject )(*PdfColorspaceCalGray ,error ){_beca :=NewPdfColorspaceCalGray ();if _eefg ,_geacc :=_gadf .(*_gb .PdfIndirectObject );_geacc {_beca ._ddgab =_eefg ;};_gadf =_gb .TraceToDirectObject (_gadf );
_eaaf ,_aaaca :=_gadf .(*_gb .PdfObjectArray );if !_aaaca {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eaaf .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_gadf =_gb .TraceToDirectObject (_eaaf .Get (0));_ddbg ,_aaaca :=_gadf .(*_gb .PdfObjectName );if !_aaaca {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ddbg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gadf =_gb .TraceToDirectObject (_eaaf .Get (1));
_fgeee ,_aaaca :=_gadf .(*_gb .PdfObjectDictionary );if !_aaaca {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_gadf =_fgeee .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gadf =_gb .TraceToDirectObject (_gadf );_edecg ,_aaaca :=_gadf .(*_gb .PdfObjectArray );if !_aaaca {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _edecg .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_eegbc ,_beaf :=_edecg .GetAsFloat64Slice ();
if _beaf !=nil {return nil ,_beaf ;};_beca .WhitePoint =_eegbc ;_gadf =_fgeee .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gadf !=nil {_gadf =_gb .TraceToDirectObject (_gadf );_abac ,_gefbg :=_gadf .(*_gb .PdfObjectArray );
if !_gefbg {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _abac .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_fdeb ,_ddgc :=_abac .GetAsFloat64Slice ();if _ddgc !=nil {return nil ,_ddgc ;};_beca .BlackPoint =_fdeb ;};_gadf =_fgeee .Get ("\u0047\u0061\u006dm\u0061");if _gadf !=nil {_gadf =_gb .TraceToDirectObject (_gadf );_gbfa ,_fcdg :=_gb .GetNumberAsFloat (_gadf );
if _fcdg !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_beca .Gamma =_gbfa ;};return _beca ,nil ;};func (_bac *PdfReader )newPdfAnnotationCircleFromDict (_cdff *_gb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ccbf :=PdfAnnotationCircle {};
_eacb ,_bfg :=_bac .newPdfAnnotationMarkupFromDict (_cdff );if _bfg !=nil {return nil ,_bfg ;};_ccbf .PdfAnnotationMarkup =_eacb ;_ccbf .BS =_cdff .Get ("\u0042\u0053");_ccbf .IC =_cdff .Get ("\u0049\u0043");_ccbf .BE =_cdff .Get ("\u0042\u0045");_ccbf .RD =_cdff .Get ("\u0052\u0044");
return &_ccbf ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_cfdg *PdfPage )AddFont (name _gb .PdfObjectName ,font _gb .PdfObject )error {if _cfdg .Resources ==nil {_cfdg .Resources =NewPdfPageResources ();};if _cfdg .Resources .Font ==nil {_cfdg .Resources .Font =_gb .MakeDict ();};_bbce ,_efgf :=_gb .TraceToDirectObject (_cfdg .Resources .Font ).(*_gb .PdfObjectDictionary );
if !_efgf {_ag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_gb .TraceToDirectObject (_cfdg .Resources .Font ));
return _dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbce .Set (name ,font );return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dgbd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggae ,_bffe :=color .(*PdfColorPattern );if !_bffe {_ag .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ggae .Color ==nil {return color ,nil ;};if _dgbd .UnderlyingCS ==nil {return nil ,_dd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _dgbd .UnderlyingCS .ColorToRGB (_ggae .Color );
};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_eb :=&PdfAction {};_eb ._gae =_gb .MakeIndirectObject (_gb .MakeDict ());return _eb ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bbeb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_gb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_cbgf []_gb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bgbe []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _fg .ReadSeeker )(*PdfReader ,error ){const _acbfg ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";_fcdbc :=&PdfReader {_aabg :rs ,_eccbb :map[_gb .PdfObject ]struct{}{},_dcafc :_bageg (),_cddff :false };
_ffdbf ,_fcfbe :=_dbaf ("\u0072");if _fcfbe !=nil {return nil ,_fcfbe ;};_fcfbe =_dc .Track (_ffdbf ,_acbfg );if _fcfbe !=nil {return nil ,_fcfbe ;};_fcdbc ._eabgg =_ffdbf ;_agad ,_fcfbe :=_gb .NewParser (rs );if _fcfbe !=nil {return nil ,_fcfbe ;};_fcdbc ._faefdf =_agad ;
_gdgdc ,_fcfbe :=_fcdbc .IsEncrypted ();if _fcfbe !=nil {return nil ,_fcfbe ;};if !_gdgdc {_fcfbe =_fcdbc .loadStructure ();if _fcfbe !=nil {return nil ,_fcfbe ;};};return _fcdbc ,nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_ececd *modelManager )Register (primitive _gb .PdfObject ,model PdfModel ){_ececd ._cecbb [model ]=primitive ;_ececd ._edebc [primitive ]=model ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cbbbaf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cbbbaf .ToPdfOutline ().PdfOutlineTreeNode ;};

// SetContentStream sets the pattern cell's content stream.
func (_dgafdb *PdfTilingPattern )SetContentStream (content []byte ,encoder _gb .StreamEncoder )error {_gcaddg ,_ecbb :=_dgafdb ._egddg .(*_gb .PdfObjectStream );if !_ecbb {_ag .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgafdb ._egddg );
return _gb .ErrTypeError ;};if encoder ==nil {encoder =_gb .NewRawEncoder ();};_bfcca :=_gcaddg .PdfObjectDictionary ;_fbbgf :=encoder .MakeStreamDict ();_bfcca .Merge (_fbbgf );_gacc ,_dagff :=encoder .EncodeBytes (content );if _dagff !=nil {return _dagff ;
};_bfcca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_gacc ))));_gcaddg .Stream =_gacc ;return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eceff *PdfShading )ToPdfObject ()_gb .PdfObject {_aebgf :=_eceff ._aggbc ;_bgdce ,_gdeef :=_eceff .getShadingDict ();if _gdeef !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eceff .ShadingType !=nil {_bgdce .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eceff .ShadingType );};if _eceff .ColorSpace !=nil {_bgdce .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eceff .ColorSpace .ToPdfObject ());
};if _eceff .Background !=nil {_bgdce .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_eceff .Background );};if _eceff .BBox !=nil {_bgdce .Set ("\u0042\u0042\u006f\u0078",_eceff .BBox .ToPdfObject ());};if _eceff .AntiAlias !=nil {_bgdce .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_eceff .AntiAlias );
};return _aebgf ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_cabc :=NewPdfAnnotation ();_cbaa :=&PdfAnnotation3D {};_cbaa .PdfAnnotation =_cabc ;_cabc .SetContext (_cbaa );return _cbaa ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_faefdf *_gb .PdfParser ;_bcebaa _gb .PdfObject ;_abbf *_gb .PdfIndirectObject ;_cafdfc *_gb .PdfObjectDictionary ;_cfedb []*_gb .PdfIndirectObject ;PageList []*PdfPage ;_aebacd int ;_ddecd *_gb .PdfObjectDictionary ;_dbdbe *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dcafc *modelManager ;_cddff bool ;_eccbb map[_gb .PdfObject ]struct{};_aabg _fg .ReadSeeker ;_eabgg string ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bfdd *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eedge :=vals [0];if _eedge < 0.0||_eedge > 1.0{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_acfgg :=NewPdfColorCalGray (_eedge );return _acfgg ,nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;VerticesPerRow *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cddb *LTV )EnableByName (name string ,extraCerts []*_g .Certificate )error {_dgbdc :=_cddb ._aaad ._cbaab .AcroForm ;for _ ,_aggbf :=range _dgbdc .AllFields (){_fceag ,_ :=_aggbf .GetContext ().(*PdfFieldSignature );if _fceag ==nil {continue ;};
if _bfed :=_fceag .PartialName ();_bfed !=name {continue ;};return _cddb .Enable (_fceag .V ,extraCerts );};return nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_feeb *PdfColorspaceSpecialIndexed )ToPdfObject ()_gb .PdfObject {_ddbe :=_gb .MakeArray (_gb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_ddbe .Append (_feeb .Base .ToPdfObject ());_ddbe .Append (_gb .MakeInteger (int64 (_feeb .HiVal )));
_ddbe .Append (_feeb .Lookup );if _feeb ._gedfd !=nil {_feeb ._gedfd .PdfObject =_ddbe ;return _feeb ._gedfd ;};return _ddbe ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _fg .ReadSeeker )(*PdfFont ,error ){_efbg ,_caac :=_ae .ReadAll (r );if _caac !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_caac );
return nil ,_caac ;};_bfafd ,_caac :=_ed .TtfParse (_df .NewReader (_efbg ));if _caac !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_caac );
return nil ,_caac ;};_fcfcd :=&pdfCIDFontType2 {fontCommon :fontCommon {_abec :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_gb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_cedb :=make ([]rune ,0,len (_bfafd .Chars ));
for _gcef :=range _bfafd .Chars {_cedb =append (_cedb ,_gcef );};_cb .Slice (_cedb ,func (_bagg ,_cgba int )bool {return _cedb [_bagg ]< _cedb [_cgba ]});_gdfe :=1000.0/float64 (_bfafd .UnitsPerEm );if len (_bfafd .Widths )<=0{return nil ,_dd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_geca :=_gdfe *float64 (_bfafd .Widths [0]);_cfec :=make (map[rune ]int );for _ ,_eabc :=range _cedb {_gbbcf :=_bfafd .Chars [_eabc ];_fddd :=_gdfe *float64 (_bfafd .Widths [_gbbcf ]);_cfec [_eabc ]=int (_fddd );};_fcfcd ._eaag =_cfec ;_fcfcd .DW =_gb .MakeInteger (int64 (_geca ));
_bbgde :=_gecgd (_cedb ,_cfec ,_bfafd .Chars );_fcfcd .W =_gb .MakeIndirectObject (_bbgde );_fbbed :=_gb .MakeDict ();_fbbed .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_gb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));
_fbbed .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_gb .MakeString ("\u0041\u0064\u006fb\u0065"));_fbbed .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_gb .MakeInteger (0));_fcfcd .CIDSystemInfo =_fbbed ;_cdeff :=&PdfFontDescriptor {FontName :_gb .MakeName (_bfafd .PostScriptName ),Ascent :_gb .MakeFloat (_gdfe *float64 (_bfafd .TypoAscender )),Descent :_gb .MakeFloat (_gdfe *float64 (_bfafd .TypoDescender )),CapHeight :_gb .MakeFloat (_gdfe *float64 (_bfafd .CapHeight )),FontBBox :_gb .MakeArrayFromFloats ([]float64 {_gdfe *float64 (_bfafd .Xmin ),_gdfe *float64 (_bfafd .Ymin ),_gdfe *float64 (_bfafd .Xmax ),_gdfe *float64 (_bfafd .Ymax )}),ItalicAngle :_gb .MakeFloat (_bfafd .ItalicAngle ),MissingWidth :_gb .MakeFloat (_gdfe *float64 (_bfafd .Widths [0]))};
_gecad ,_caac :=_gb .MakeStream (_efbg ,_gb .NewFlateEncoder ());if _caac !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_caac );
return nil ,_caac ;};_gecad .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gb .MakeInteger (int64 (len (_efbg ))));_cdeff .FontFile2 =_gecad ;if _bfafd .Bold {_cdeff .StemV =_gb .MakeInteger (120);}else {_cdeff .StemV =_gb .MakeInteger (70);
};_accc :=_gacge ;if _bfafd .IsFixedPitch {_accc |=_bcbbe ;};if _bfafd .ItalicAngle !=0{_accc |=_edcef ;};_cdeff .Flags =_gb .MakeInteger (int64 (_accc ));_fcfcd ._cacfa =_bfafd .PostScriptName ;_fcfcd ._gdef =_cdeff ;_gaafd :=pdfFontType0 {fontCommon :fontCommon {_abec :"\u0054\u0079\u0070e\u0030",_cacfa :_bfafd .PostScriptName },DescendantFont :&PdfFont {_faee :_fcfcd },Encoding :_gb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_dfaad :_bfafd .NewEncoder ()};
if len (_bfafd .Chars )> 0{_fcecb :=make (map[_ba .CharCode ]rune ,len (_bfafd .Chars ));for _agag ,_gbdge :=range _bfafd .Chars {_bggfb :=_ba .CharCode (_gbdge );if _babe ,_cabd :=_fcecb [_bggfb ];!_cabd ||(_cabd &&_babe > _agag ){_fcecb [_bggfb ]=_agag ;
};};_gaafd ._dfbfc =_ba .NewToUnicodeCMap (_fcecb );};_efage :=PdfFont {_faee :&_gaafd };return &_efage ,nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _gb .PdfObject ;Flags _gb .PdfObject ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_daaga :=&PdfPageResourcesColorspaces {};_daaga .Names =[]string {};_daaga .Colorspaces =map[string ]PdfColorspace {};_daaga ._fcdec =&_gb .PdfIndirectObject {};return _daaga ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_aece *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ag .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fefg :=[]float64 {0.0};if _aece .C0 !=nil {_fefg =_aece .C0 ;};_ebcea :=[]float64 {1.0};if _aece .C1 !=nil {_ebcea =_aece .C1 ;};var _dage []float64 ;for _degbd :=0;_degbd < len (_fefg );_degbd ++{_eebac :=_fefg [_degbd ]+_ga .Pow (x [0],_aece .N )*(_ebcea [_degbd ]-_fefg [_degbd ]);
_dage =append (_dage ,_eebac );};return _dage ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dfaa *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dfaa .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_gb .PdfIndirectObject ;SV *_gb .PdfIndirectObject ;};func (_deag *PdfReader )newPdfAnnotationScreenFromDict (_eafd *_gb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_agef :=PdfAnnotationScreen {};
_agef .T =_eafd .Get ("\u0054");_agef .MK =_eafd .Get ("\u004d\u004b");_agef .A =_eafd .Get ("\u0041");_agef .AA =_eafd .Get ("\u0041\u0041");return &_agef ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_decd *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _fg .ReadSeeker )(*PdfReader ,error ){const _bgab ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";_gegdfg :=&PdfReader {_aabg :rs ,_eccbb :map[_gb .PdfObject ]struct{}{},_dcafc :_bageg (),_cddff :true };
_cgfdb ,_bggede :=_dbaf ("\u0072");if _bggede !=nil {return nil ,_bggede ;};_bggede =_dc .Track (_cgfdb ,_bgab );if _bggede !=nil {return nil ,_bggede ;};_gegdfg ._eabgg =_cgfdb ;_gcaf ,_bggede :=_gb .NewParser (rs );if _bggede !=nil {return nil ,_bggede ;
};_gegdfg ._faefdf =_gcaf ;_afdc ,_bggede :=_gegdfg .IsEncrypted ();if _bggede !=nil {return nil ,_bggede ;};if !_afdc {_bggede =_gegdfg .loadStructure ();if _bggede !=nil {return nil ,_bggede ;};};return _gegdfg ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _gb .StreamEncoder ;FormType _gb .PdfObject ;BBox _gb .PdfObject ;Matrix _gb .PdfObject ;Resources *PdfPageResources ;Group _gb .PdfObject ;Ref _gb .PdfObject ;MetaData _gb .PdfObject ;PieceInfo _gb .PdfObject ;LastModified _gb .PdfObject ;
StructParent _gb .PdfObject ;StructParents _gb .PdfObject ;OPI _gb .PdfObject ;OC _gb .PdfObject ;Name _gb .PdfObject ;

// Stream data.
Stream []byte ;_bfaeg *_gb .PdfObjectStream ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _gb .PdfObject ;AN _gb .PdfObject ;OP _gb .PdfObject ;JS _gb .PdfObject ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_becec *PdfPage )AddExtGState (name _gb .PdfObjectName ,egs *_gb .PdfObjectDictionary )error {if _becec .Resources ==nil {_becec .Resources =NewPdfPageResources ();};if _becec .Resources .ExtGState ==nil {_becec .Resources .ExtGState =_gb .MakeDict ();
};_ccgea ,_bebga :=_gb .TraceToDirectObject (_becec .Resources .ExtGState ).(*_gb .PdfObjectDictionary );if !_bebga {_ag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gb .TraceToDirectObject (_becec .Resources .ExtGState ));
return _dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccgea .Set (name ,egs );return nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_dgfc ,_gcggf :=NewStandard14Font (basefont );if _gcggf !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _dgfc ;};func (_bdee *PdfReader )loadAction (_ddc _gb .PdfObject )(*PdfAction ,error ){if _fee ,_acab :=_gb .GetIndirect (_ddc );_acab {_bcfb ,_cdbd :=_bdee .newPdfActionFromIndirectObject (_fee );if _cdbd !=nil {return nil ,_cdbd ;};return _bcfb ,nil ;
}else if !_gb .IsNullObject (_ddc ){return nil ,_dd .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// String returns a string representation of what flags are set.
func (_cgab FieldFlag )String ()string {_gebcb :="";if _cgab ==FieldFlagClear {_gebcb ="\u0043\u006c\u0065a\u0072";return _gebcb ;};if _cgab &FieldFlagReadOnly > 0{_gebcb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cgab &FieldFlagRequired > 0{_gebcb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _cgab &FieldFlagNoExport > 0{_gebcb +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cgab &FieldFlagNoToggleToOff > 0{_gebcb +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cgab &FieldFlagRadio > 0{_gebcb +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _cgab &FieldFlagPushbutton > 0{_gebcb +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cgab &FieldFlagRadiosInUnision > 0{_gebcb +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cgab &FieldFlagMultiline > 0{_gebcb +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _cgab &FieldFlagPassword > 0{_gebcb +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cgab &FieldFlagFileSelect > 0{_gebcb +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cgab &FieldFlagDoNotScroll > 0{_gebcb +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _cgab &FieldFlagComb > 0{_gebcb +="\u007c\u0043\u006fm\u0062";};if _cgab &FieldFlagRichText > 0{_gebcb +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cgab &FieldFlagDoNotSpellCheck > 0{_gebcb +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _cgab &FieldFlagCombo > 0{_gebcb +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cgab &FieldFlagEdit > 0{_gebcb +="\u007c\u0045\u0064i\u0074";};if _cgab &FieldFlagSort > 0{_gebcb +="\u007c\u0053\u006fr\u0074";};if _cgab &FieldFlagMultiSelect > 0{_gebcb +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _cgab &FieldFlagCommitOnSelChange > 0{_gebcb +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fcf .Trim (_gebcb ,"\u007c");};func _dcgf (_efbde *_aag .ImageBase )(_bbbb Image ){_bbbb .Width =int64 (_efbde .Width );
_bbbb .Height =int64 (_efbde .Height );_bbbb .BitsPerComponent =int64 (_efbde .BitsPerComponent );_bbbb .ColorComponents =_efbde .ColorComponents ;_bbbb .Data =_efbde .Data ;_bbbb ._fbga =_efbde .Decode ;_bbbb ._aggec =_efbde .Alpha ;return _bbbb ;};func _gdfa ()string {_cgabb .Lock ();
defer _cgabb .Unlock ();return _dcfd };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_abfa :=&PdfOutlineItem {_abacg :_gb .MakeIndirectObject (_gb .MakeDict ())};_abfa ._dedbb =_abfa ;return _abfa ;};

// SetAnnotations sets the annotations list.
func (_adege *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_adege ._gccef =annotations };var _ pdfFont =(*pdfCIDFontType2 )(nil );

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ceafa *PdfPage )GetAllContentStreams ()(string ,error ){_ddada ,_cadbg :=_ceafa .GetContentStreams ();if _cadbg !=nil {return "",_cadbg ;};return _fcf .Join (_ddada ,"\u0020"),nil ;};

// Val returns the color value.
func (_aeecf *PdfColorDeviceGray )Val ()float64 {return float64 (*_aeecf )};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_eebaa ,_cggca :=_ed .NewStdFontByName (HelveticaName );if !_cggca {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_bcbf :=_dbge (_eebaa );return &PdfFont {_faee :&_bcbf };};func _gabf (_caca _gb .PdfObject ,_daff bool )(*PdfFont ,error ){_acfga ,_abaf ,_gdfb :=_bbacf (_caca );if _gdfb !=nil {if _gdfb ==ErrType3FontNotSupported ||_gdfb ==ErrType1CFontNotSupported {_gfaga ,_eeeg :=_dgage (_acfga ,_abaf ,nil );
if _eeeg !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abaf ,_eeeg );
return nil ,_gdfb ;};return &PdfFont {_faee :_gfaga },_gdfb ;};return nil ,_gdfb ;};_ggcbd :=&PdfFont {};switch _abaf ._abec {case "\u0054\u0079\u0070e\u0030":if !_daff {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abaf );
return nil ,_dd .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dfdc ,_dbddda :=_cbfc (_acfga ,_abaf );if _dbddda !=nil {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abaf ,_dbddda );
return nil ,_dbddda ;};_ggcbd ._faee =_dfdc ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dgef *pdfFontSimple ;_dafca ,_edfbb :=_ed .NewStdFontByName (_ed .StdFontName (_abaf ._cacfa ));
if _edfbb {_aeeg :=_dbge (_dafca );_ggcbd ._faee =&_aeeg ;_eecb :=_gb .TraceToDirectObject (_aeeg .ToPdfObject ());_edbb ,_bdaga ,_bgde :=_bbacf (_eecb );if _bgde !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abaf ,_aeeg );
return nil ,_bgde ;};for _ ,_afcf :=range _acfga .Keys (){_edbb .Set (_afcf ,_acfga .Get (_afcf ));};_dgef ,_bgde =_dgage (_edbb ,_bdaga ,_aeeg ._eafce );if _bgde !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abaf ,_aeeg );
return nil ,_bgde ;};_dgef ._ggdff =_aeeg ._ggdff ;_dgef ._fbefa =_aeeg ._fbefa ;}else {_dgef ,_gdfb =_dgage (_acfga ,_abaf ,nil );if _gdfb !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abaf ,_gdfb );
return nil ,_gdfb ;};};_gdfb =_dgef .addEncoding ();if _gdfb !=nil {return nil ,_gdfb ;};if _edfbb {_dgef .updateStandard14Font ();};if _edfbb &&_dgef ._agee ==nil &&_dgef ._eafce ==nil {_ag .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgef );
_ag .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dafca );};if len (_dgef ._ggdff )==0{_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dgef );};_ggcbd ._faee =_dgef ;
case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gddc ,_dbffe :=_acaa (_acfga ,_abaf );if _dbffe !=nil {_ag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dbffe );
return nil ,_dbffe ;};_ggcbd ._faee =_gddc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fbgb ,_bgbeg :=_fbfee (_acfga ,_abaf );if _bgbeg !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abaf ,_bgbeg );
return nil ,_bgbeg ;};_ggcbd ._faee =_fbgb ;default:_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_abaf );
return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abaf );};return _ggcbd ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_egcf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _egcf ._faee .getFontDescriptor (),nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_gffd *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_eebdc *PdfPageResources )GetXObjectByName (keyName _gb .PdfObjectName )(*_gb .PdfObjectStream ,XObjectType ){if _eebdc .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fddbb ,_egged :=_gb .TraceToDirectObject (_eebdc .XObject ).(*_gb .PdfObjectDictionary );
if !_egged {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gb .TraceToDirectObject (_eebdc .XObject ));
return nil ,XObjectTypeUndefined ;};if _efgg :=_fddbb .Get (keyName );_efgg !=nil {_acfa ,_cagdf :=_gb .GetStream (_efgg );if !_cagdf {_ag .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_efgg );
return nil ,XObjectTypeUndefined ;};_acfb :=_acfa .PdfObjectDictionary ;_aagad ,_cagdf :=_gb .TraceToDirectObject (_acfb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_gb .PdfObjectName );if !_cagdf {_ag .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_acfb .String ());
return nil ,XObjectTypeUndefined ;};if *_aagad =="\u0049\u006d\u0061g\u0065"{return _acfa ,XObjectTypeImage ;}else if *_aagad =="\u0046\u006f\u0072\u006d"{return _acfa ,XObjectTypeForm ;}else if *_aagad =="\u0050\u0053"{return _acfa ,XObjectTypePS ;}else {_ag .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_aagad );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_gb .PdfObjectBool ;SigFlags *_gb .PdfObjectInteger ;CO *_gb .PdfObjectArray ;DR *PdfPageResources ;DA *_gb .PdfObjectString ;Q *_gb .PdfObjectInteger ;XFA _gb .PdfObject ;_bfefd *_gb .PdfIndirectObject ;
};

// IsCID returns true if the underlying font is CID.
func (_abccg *PdfFont )IsCID ()bool {return _abccg .baseFields ().isCIDFont ()};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aeaf *PdfColorspaceSpecialPattern )ToPdfObject ()_gb .PdfObject {if _aeaf .UnderlyingCS ==nil {return _gb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cedf :=_gb .MakeArray (_gb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cedf .Append (_aeaf .UnderlyingCS .ToPdfObject ());
if _aeaf ._gege !=nil {_aeaf ._gege .PdfObject =_cedf ;return _aeaf ._gege ;};return _cedf ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_feg :=NewPdfAnnotation ();_eged :=&PdfAnnotationPopup {};_eged .PdfAnnotation =_feg ;_feg .SetContext (_eged );return _eged ;};

// A returns the value of the A component of the color.
func (_bebc *PdfColorCalRGB )A ()float64 {return _bebc [0]};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_feag :_gb .MakeIndirectObject (_gb .MakeDict ())}};

// SetDecode sets the decode image float slice.
func (_cega *Image )SetDecode (decode []float64 ){_cega ._fbga =decode };

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_eafdg *PdfFont )CharcodesToUnicode (charcodes []_eaf .CharCode )[]rune {_adbbe ,_ ,_ :=_eafdg .CharcodesToUnicodeWithStats (charcodes );return _adbbe ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_cffe *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cgaaf :=_cffe .actualFont ();if _cgaaf ==nil {_ag .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cffe ._faee );
return _ed .CharMetrics {},false ;};if _fegc ,_feafg :=_cgaaf .GetRuneMetrics (r );_feafg {return _fegc ,true ;};if _aegef ,_begf :=_cffe .GetFontDescriptor ();_begf ==nil &&_aegef !=nil {return _ed .CharMetrics {Wx :_aegef ._fffa },true ;};_ag .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cffe );
return _ed .CharMetrics {},false ;};func (_bdfdf *LTV )generateVRIKey (_ebbf *PdfSignature )(string ,error ){_cegcf ,_daged :=_gbbcc (_ebbf .Contents .Bytes ());if _daged !=nil {return "",_daged ;};return _fcf .ToUpper (_d .EncodeToString (_cegcf )),nil ;
};

// Subtype returns the font's "Subtype" field.
func (_ebeeb *PdfFont )Subtype ()string {_ecgeb :=_ebeeb .baseFields ()._abec ;if _eaae ,_gaad :=_ebeeb ._faee .(*pdfFontType0 );_gaad {_ecgeb =_ecgeb +"\u003a"+_eaae .DescendantFont .Subtype ();};return _ecgeb ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_gb .PdfObject ;};

// SetContext set the sub annotation (context).
func (_cgegg *PdfShading )SetContext (ctx PdfModel ){_cgegg ._agffb =ctx };var _ pdfFont =(*pdfFontSimple )(nil );

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_fdebe *LTV )Enable (sig *PdfSignature ,extraCerts []*_g .Certificate )error {if _adcb :=_fdebe .validateSig (sig );_adcb !=nil {return _adcb ;};_bddca ,_dgbdf :=_fdebe .generateVRIKey (sig );if _dgbdf !=nil {return _dgbdf ;};if _ ,_geadg :=_fdebe ._agbda .VRI [_bddca ];
_geadg &&_fdebe .SkipExisting {return nil ;};_bgade ,_dgbdf :=sig .GetCerts ();if _dgbdf !=nil {return _dgbdf ;};return _fdebe .enable (_bgade ,extraCerts ,_bddca );};func _eefdg (_dbeaa *_gb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_adeb :=PdfShadingType7 {};
_ccbde :=_dbeaa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ccbde ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_faeb ,_cddc :=_ccbde .(*_gb .PdfObjectInteger );if !_cddc {_ag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccbde );
return nil ,_gb .ErrTypeError ;};_adeb .BitsPerCoordinate =_faeb ;_ccbde =_dbeaa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ccbde ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_faeb ,_cddc =_ccbde .(*_gb .PdfObjectInteger );if !_cddc {_ag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ccbde );
return nil ,_gb .ErrTypeError ;};_adeb .BitsPerComponent =_faeb ;_ccbde =_dbeaa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ccbde ==nil {_ag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_faeb ,_cddc =_ccbde .(*_gb .PdfObjectInteger );if !_cddc {_ag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ccbde );
return nil ,_gb .ErrTypeError ;};_adeb .BitsPerComponent =_faeb ;_ccbde =_dbeaa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ccbde ==nil {_ag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dddf ,_cddc :=_ccbde .(*_gb .PdfObjectArray );if !_cddc {_ag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccbde );
return nil ,_gb .ErrTypeError ;};_adeb .Decode =_dddf ;if _ebfae :=_dbeaa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ebfae !=nil {_adeb .Function =[]PdfFunction {};if _baeeb ,_fbdd :=_ebfae .(*_gb .PdfObjectArray );_fbdd {for _ ,_effga :=range _baeeb .Elements (){_ecef ,_cgdde :=_deee (_effga );
if _cgdde !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgdde );return nil ,_cgdde ;};_adeb .Function =append (_adeb .Function ,_ecef );
};}else {_agbaf ,_ddafa :=_deee (_ebfae );if _ddafa !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddafa );return nil ,_ddafa ;
};_adeb .Function =append (_adeb .Function ,_agbaf );};};return &_adeb ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;BitsPerFlag *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bgbb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _dd .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_fcb :=field .V ;if _fcb ==nil {return _dd .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_efae :=pageNum -1;if _efae < 0||_efae > len (_bgbb ._bbgcg )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_acad :=_bgbb .Reader .PageList [_efae ];field .P =_acad .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_gb .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_acad .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _bgbb ._bdf ==_bgbb ._cbaab .AcroForm {_bgbb ._bdf =_bgbb .Reader .AcroForm ;};_fbbg :=_bgbb ._bdf ;if _fbbg ==nil {_fbbg =NewPdfAcroForm ();};_fbbg .SigFlags =_gb .MakeInteger (3);_aagfg :=append (_fbbg .AllFields (),field .PdfField );_fbbg .Fields =&_aagfg ;
_bgbb .ReplaceAcroForm (_fbbg );_bgbb .UpdatePage (_acad );_bgbb ._bbgcg [_efae ]=_acad ;return nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_agfd *Image )ConvertToBinary ()error {if _agfd .ColorComponents ==1&&_agfd .BitsPerComponent ==1{return nil ;};_ggefd ,_cfgfa :=_agfd .ToGoImage ();if _cfgfa !=nil {return _cfgfa ;};_dbbb ,_cfgfa :=_aag .MonochromeConverter .Convert (_ggefd );if _cfgfa !=nil {return _cfgfa ;
};_agfd .Data =_dbbb .Base ().Data ;_agfd ._aggec ,_cfgfa =_aag .ScaleAlphaToMonochrome (_agfd ._aggec ,int (_agfd .Width ),int (_agfd .Height ));if _cfgfa !=nil {return _cfgfa ;};_agfd .BitsPerComponent =1;_agfd .ColorComponents =1;_agfd ._fbga =nil ;
return nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_bgegf :=map[rune ]int {};for _ ,_gfce :=range text {_bgegf [_gfce ]++;};return _bgegf ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;BitsPerFlag *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};

// Width returns the width of `rect`.
func (_bgcec *PdfRectangle )Width ()float64 {return _ga .Abs (_bgcec .Urx -_bgcec .Llx )};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bcdc *PdfField )Flags ()FieldFlag {var _gceae FieldFlag ;_fefca ,_cdeb :=_bcdc .inherit (func (_cgfg *PdfField )bool {if _cgfg .Ff !=nil {_gceae =FieldFlag (*_bcdc .Ff );return true ;};return false ;});if _cdeb !=nil {_ag .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_cdeb );
};if !_fefca {_ag .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _gceae ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_gb .PdfIndirectObject )*PdfOutlineItem {_gbafb :=PdfOutlineItem {};_gbafb ._dedbb =&_gbafb ;_gbafb .Title =_gb .MakeString (title );_fdfbf :=_gb .MakeArray ();_fdfbf .Append (page );_fdfbf .Append (_gb .MakeName ("\u0046\u0069\u0074"));
_gbafb .Dest =_fdfbf ;return &_gbafb ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_eeecf *PdfTilingPattern )ToPdfObject ()_gb .PdfObject {_eeecf .PdfPattern .ToPdfObject ();_aafgg :=_eeecf .getDict ();if _eeecf .PaintType !=nil {_aafgg .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_eeecf .PaintType );};if _eeecf .TilingType !=nil {_aafgg .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eeecf .TilingType );
};if _eeecf .BBox !=nil {_aafgg .Set ("\u0042\u0042\u006f\u0078",_eeecf .BBox .ToPdfObject ());};if _eeecf .XStep !=nil {_aafgg .Set ("\u0058\u0053\u0074e\u0070",_eeecf .XStep );};if _eeecf .YStep !=nil {_aafgg .Set ("\u0059\u0053\u0074e\u0070",_eeecf .YStep );
};if _eeecf .Resources !=nil {_aafgg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eeecf .Resources .ToPdfObject ());};if _eeecf .Matrix !=nil {_aafgg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eeecf .Matrix );};return _eeecf ._egddg ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gb .PdfObject ;};

// GetContentStream returns the XObject Form's content stream.
func (_eaeag *XObjectForm )GetContentStream ()([]byte ,error ){_cgfab ,_gbeba :=_gb .DecodeStream (_eaeag ._bfaeg );if _gbeba !=nil {return nil ,_gbeba ;};return _cgfab ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_afea *Image )ColorAt (x ,y int )(_ab .Color ,error ){_abbba :=_aag .BytesPerLine (int (_afea .Width ),int (_afea .BitsPerComponent ),_afea .ColorComponents );switch _afea .ColorComponents {case 1:return _aag .ColorAtGrayscale (x ,y ,int (_afea .BitsPerComponent ),_abbba ,_afea .Data ,_afea ._fbga );
case 3:return _aag .ColorAtNRGBA (x ,y ,int (_afea .Width ),_abbba ,int (_afea .BitsPerComponent ),_afea .Data ,_afea ._aggec ,_afea ._fbga );case 4:return _aag .ColorAtCMYK (x ,y ,int (_afea .Width ),_afea .Data ,_afea ._fbga );};_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afea .ColorComponents ,_afea .BitsPerComponent );
return nil ,_dd .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ege :=NewPdfAction ();_gbb :=&PdfActionLaunch {};_gbb .PdfAction =_ege ;_ege .SetContext (_gbb );return _gbb ;};func (_aad *PdfReader )newPdfActionGotoFromDict (_aae *_gb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_aae .Get ("\u0044")},nil ;
};func (_ffa *PdfReader )newPdfActionNamedFromDict (_bee *_gb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_bee .Get ("\u004e")},nil ;};

// AddImageResource adds an image to the XObject resources.
func (_abfea *PdfPage )AddImageResource (name _gb .PdfObjectName ,ximg *XObjectImage )error {var _bedb *_gb .PdfObjectDictionary ;if _abfea .Resources .XObject ==nil {_bedb =_gb .MakeDict ();_abfea .Resources .XObject =_bedb ;}else {var _gbcfa bool ;_bedb ,_gbcfa =(_abfea .Resources .XObject ).(*_gb .PdfObjectDictionary );
if !_gbcfa {return _dd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bedb .Set (name ,ximg .ToPdfObject ());return nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_egfcc *modelManager )GetPrimitiveFromModel (model PdfModel )_gb .PdfObject {_febe ,_begg :=_egfcc ._cecbb [model ];if !_begg {return nil ;};return _febe ;};

// SetReason sets the `Reason` field of the signature.
func (_bfcaa *PdfSignature )SetReason (reason string ){_bfcaa .Reason =_gb .MakeString (reason )};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_adbdf *PdfPageResources )GetXObjectFormByName (keyName _gb .PdfObjectName )(*XObjectForm ,error ){_ageef ,_ecbcg :=_adbdf .GetXObjectByName (keyName );if _ageef ==nil {return nil ,nil ;};if _ecbcg !=XObjectTypeForm {return nil ,_dd .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_aabdd ,_ecdab :=NewXObjectFormFromStream (_ageef );if _ecdab !=nil {return nil ,_ecdab ;};return _aabdd ,nil ;};

// String returns a string that describes `font`.
func (_dcaf *PdfFont )String ()string {_fggd :="";if _dcaf ._faee .Encoder ()!=nil {_fggd =_dcaf ._faee .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_dcaf ._faee ,_dcaf .baseFields ().coreString (),_fggd );
};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fadg *PdfField )GetContext ()PdfModel {return _fadg ._bagfc };

// ToPdfObject implements interface PdfModel.
func (_ebd *PdfActionGoTo )ToPdfObject ()_gb .PdfObject {_ebd .PdfAction .ToPdfObject ();_egc :=_ebd ._gae ;_bab :=_egc .PdfObject .(*_gb .PdfObjectDictionary );_bab .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoTo )));_bab .SetIfNotNil ("\u0044",_ebd .D );
return _egc ;};var _eeadg =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// ToPdfObject implements interface PdfModel.
func (_ccf *PdfAnnotationInk )ToPdfObject ()_gb .PdfObject {_ccf .PdfAnnotation .ToPdfObject ();_edgc :=_ccf ._gbac ;_eba :=_edgc .PdfObject .(*_gb .PdfObjectDictionary );_ccf .PdfAnnotationMarkup .appendToPdfDictionary (_eba );_eba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0049\u006e\u006b"));
_eba .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ccf .InkList );_eba .SetIfNotNil ("\u0042\u0053",_ccf .BS );return _edgc ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_gb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_gb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_gb .PdfObjectBool ;_agffb PdfModel ;_aggbc _gb .PdfObject ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_babc *PdfPage )GetPageDict ()*_gb .PdfObjectDictionary {_ddbac :=_babc ._ageda ;_ddbac .Clear ();_ddbac .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050\u0061\u0067\u0065"));_ddbac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_babc .Parent );
if _babc .LastModified !=nil {_ddbac .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_babc .LastModified .ToPdfObject ());};if _babc .Resources !=nil {_ddbac .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_babc .Resources .ToPdfObject ());
};if _babc .CropBox !=nil {_ddbac .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_babc .CropBox .ToPdfObject ());};if _babc .MediaBox !=nil {_ddbac .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_babc .MediaBox .ToPdfObject ());};if _babc .BleedBox !=nil {_ddbac .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_babc .BleedBox .ToPdfObject ());
};if _babc .TrimBox !=nil {_ddbac .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_babc .TrimBox .ToPdfObject ());};if _babc .ArtBox !=nil {_ddbac .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_babc .ArtBox .ToPdfObject ());};_ddbac .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_babc .BoxColorInfo );
_ddbac .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_babc .Contents );if _babc .Rotate !=nil {_ddbac .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gb .MakeInteger (*_babc .Rotate ));};_ddbac .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_babc .Group );
_ddbac .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_babc .Thumb );_ddbac .SetIfNotNil ("\u0042",_babc .B );_ddbac .SetIfNotNil ("\u0044\u0075\u0072",_babc .Dur );_ddbac .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_babc .Trans );_ddbac .SetIfNotNil ("\u0041\u0041",_babc .AA );
_ddbac .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_babc .Metadata );_ddbac .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_babc .PieceInfo );_ddbac .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_babc .StructParents );
_ddbac .SetIfNotNil ("\u0049\u0044",_babc .ID );_ddbac .SetIfNotNil ("\u0050\u005a",_babc .PZ );_ddbac .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_babc .SeparationInfo );_ddbac .SetIfNotNil ("\u0054\u0061\u0062\u0073",_babc .Tabs );
_ddbac .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_babc .TemplateInstantiated );_ddbac .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_babc .PresSteps );_ddbac .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_babc .UserUnit );
_ddbac .SetIfNotNil ("\u0056\u0050",_babc .VP );if _babc ._gccef !=nil {_gcefg :=_gb .MakeArray ();for _ ,_efbb :=range _babc ._gccef {if _adge :=_efbb .GetContext ();_adge !=nil {_gcefg .Append (_adge .ToPdfObject ());}else {_gcefg .Append (_efbb .ToPdfObject ());
};};if _gcefg .Len ()> 0{_ddbac .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gcefg );};}else if _babc .Annots !=nil {_ddbac .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_babc .Annots );};return _ddbac ;};

// Add appends an outline item as a child of the current outline item.
func (_fggfg *OutlineItem )Add (item *OutlineItem ){_fggfg .Entries =append (_fggfg .Entries ,item )};

// SetBorderWidth sets the style's border width.
func (_cecef *PdfBorderStyle )SetBorderWidth (width float64 ){_cecef .W =&width };

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_efdcf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _efdcf .RunesToCharcodeBytes ([]rune (str ));};func (_fedgd *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func _egddgf (_bcbfa *_gb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bbeca :=&PdfShadingPattern {};
_afgcb :=_bcbfa .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _afgcb ==nil {_ag .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gbff ,_caea :=_cgggc (_afgcb );
if _caea !=nil {_ag .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_caea );return nil ,_caea ;};_bbeca .Shading =_gbff ;if _fbda :=_bcbfa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_fbda !=nil {_dbdb ,_acdgb :=_fbda .(*_gb .PdfObjectArray );if !_acdgb {_ag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbda );return nil ,_gb .ErrTypeError ;
};_bbeca .Matrix =_dbdb ;};if _aafcd :=_bcbfa .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_aafcd !=nil {_bbeca .ExtGState =_aafcd ;};return _bbeca ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _gb .PdfObject )(*PdfFilespec ,error ){_cdffe :=&PdfFilespec {};var _ebff *_gb .PdfObjectDictionary ;if _dccb ,_degeb :=_gb .GetIndirect (obj );_degeb {_cdffe ._fcaag =_dccb ;_cgeg ,_eacc :=_gb .GetDict (_dccb .PdfObject );
if !_eacc {_ag .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gb .ErrTypeError ;};_ebff =_cgeg ;}else if _adfaa ,_dfcgb :=_gb .GetDict (obj );
_dfcgb {_cdffe ._fcaag =_adfaa ;_ebff =_adfaa ;}else {_ag .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_gb .ErrTypeError ;};if _ebff ==nil {_ag .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_dd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _eabd :=_ebff .Get ("\u0054\u0079\u0070\u0065");_eabd !=nil {_agbee ,_cagf :=_eabd .(*_gb .PdfObjectName );if !_cagf {_ag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eabd );
}else {if *_agbee !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ag .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_agbee );
};};};if _dfgef :=_ebff .Get ("\u0046\u0053");_dfgef !=nil {_cdffe .FS =_dfgef ;};if _ccag :=_ebff .Get ("\u0046");_ccag !=nil {_cdffe .F =_ccag ;};if _gbaf :=_ebff .Get ("\u0055\u0046");_gbaf !=nil {_cdffe .UF =_gbaf ;};if _cbeea :=_ebff .Get ("\u0044\u004f\u0053");
_cbeea !=nil {_cdffe .DOS =_cbeea ;};if _ddbb :=_ebff .Get ("\u004d\u0061\u0063");_ddbb !=nil {_cdffe .Mac =_ddbb ;};if _fbad :=_ebff .Get ("\u0055\u006e\u0069\u0078");_fbad !=nil {_cdffe .Unix =_fbad ;};if _ddgg :=_ebff .Get ("\u0049\u0044");_ddgg !=nil {_cdffe .ID =_ddgg ;
};if _bdff :=_ebff .Get ("\u0056");_bdff !=nil {_cdffe .V =_bdff ;};if _fbgff :=_ebff .Get ("\u0045\u0046");_fbgff !=nil {_cdffe .EF =_fbgff ;};if _fcec :=_ebff .Get ("\u0052\u0046");_fcec !=nil {_cdffe .RF =_fcec ;};if _gegd :=_ebff .Get ("\u0044\u0065\u0073\u0063");
_gegd !=nil {_cdffe .Desc =_gegd ;};if _dggce :=_ebff .Get ("\u0043\u0049");_dggce !=nil {_cdffe .CI =_dggce ;};return _cdffe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ega *PdfActionRendition )ToPdfObject ()_gb .PdfObject {_ega .PdfAction .ToPdfObject ();_agc :=_ega ._gae ;_fec :=_agc .PdfObject .(*_gb .PdfObjectDictionary );_fec .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeRendition )));_fec .SetIfNotNil ("\u0052",_ega .R );
_fec .SetIfNotNil ("\u0041\u004e",_ega .AN );_fec .SetIfNotNil ("\u004f\u0050",_ega .OP );_fec .SetIfNotNil ("\u004a\u0053",_ega .JS );return _agc ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_ecfcf :_gb .MakeIndirectObject (_gb .MakeDict ()),VRI :map[string ]*VRI {}};};

// K returns the value of the key component of the color.
func (_fcgg *PdfColorDeviceCMYK )K ()float64 {return _fcgg [3]};

// ToPdfObject implements interface PdfModel.
func (_ced *PdfActionGoToE )ToPdfObject ()_gb .PdfObject {_ced .PdfAction .ToPdfObject ();_ddf :=_ced ._gae ;_cgc :=_ddf .PdfObject .(*_gb .PdfObjectDictionary );_cgc .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoToE )));if _ced .F !=nil {_cgc .Set ("\u0046",_ced .F .ToPdfObject ());
};_cgc .SetIfNotNil ("\u0044",_ced .D );_cgc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ced .NewWindow );_cgc .SetIfNotNil ("\u0054",_ced .T );return _ddf ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bgc :=PdfColorDeviceGray (grayVal );return &_bgc ;};func (_ecdag *PdfSignature )extractChainFromCert ()([]*_g .Certificate ,error ){var _eeead *_gb .PdfObjectArray ;switch _bbee :=_ecdag .Cert .(type ){case *_gb .PdfObjectString :_eeead =_gb .MakeArray (_bbee );
case *_gb .PdfObjectArray :_eeead =_bbee ;default:return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bbee );
};var _eafgf _df .Buffer ;for _ ,_geege :=range _eeead .Elements (){_bbdbb ,_gaecd :=_gb .GetString (_geege );if !_gaecd {return nil ,_b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_geege );
};if _ ,_ddbfa :=_eafgf .Write (_bbdbb .Bytes ());_ddbfa !=nil {return nil ,_ddbfa ;};};return _g .ParseCertificates (_eafgf .Bytes ());};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _fcfb (_eaee _gb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gbag :=NewPdfColorspaceSpecialSeparation ();if _cgdc ,_defgf :=_eaee .(*_gb .PdfIndirectObject );_defgf {_gbag ._gfdb =_cgdc ;};_eaee =_gb .TraceToDirectObject (_eaee );
_aac ,_cbde :=_eaee .(*_gb .PdfObjectArray );if !_cbde {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _aac .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_eaee =_aac .Get (0);_ddbc ,_cbde :=_eaee .(*_gb .PdfObjectName );if !_cbde {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ddbc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_eaee =_aac .Get (1);_ddbc ,_cbde =_eaee .(*_gb .PdfObjectName );if !_cbde {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gbag .ColorantName =_ddbc ;_eaee =_aac .Get (2);_gcda ,_befa :=NewPdfColorspaceFromPdfObject (_eaee );if _befa !=nil {return nil ,_befa ;};_gbag .AlternateSpace =_gcda ;_gdaf ,_befa :=_deee (_aac .Get (3));if _befa !=nil {return nil ,_befa ;};_gbag .TintTransform =_gdaf ;
return _gbag ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_ceff *PdfColorLab )GetNumComponents ()int {return 3};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_fefd *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if _fefd .Alternate ==nil {if _fefd .N ==1{_eadebg :=NewPdfColorspaceDeviceGray ();return _eadebg .ColorFromPdfObjects (objects );}else if _fefd .N ==3{_agbfb :=NewPdfColorspaceDeviceRGB ();
return _agbfb .ColorFromPdfObjects (objects );}else if _fefd .N ==4{_dedg :=NewPdfColorspaceDeviceCMYK ();return _dedg .ColorFromPdfObjects (objects );}else {return nil ,_dd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fefd .Alternate .ColorFromPdfObjects (objects );};func (_adgdb *PdfReader )loadStructure ()error {if _adgdb ._faefdf .GetCrypter ()!=nil &&!_adgdb ._faefdf .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gdcbf :=_adgdb ._faefdf .GetTrailer ();if _gdcbf ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fffef ,_dfgg :=_gdcbf .Get ("\u0052\u006f\u006f\u0074").(*_gb .PdfObjectReference );if !_dfgg {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gdcbf );
};_bebba ,_abegc :=_adgdb ._faefdf .LookupByReference (*_fffef );if _abegc !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_abegc );
return _abegc ;};_acaae ,_dfgg :=_bebba .(*_gb .PdfIndirectObject );if !_dfgg {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bebba ,*_gdcbf );
return _dd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aacg ,_dfgg :=(*_acaae ).PdfObject .(*_gb .PdfObjectDictionary );if !_dfgg {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_acaae .PdfObject );
return _dd .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ag .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_aacg );_ddgaad ,_dfgg :=_aacg .Get ("\u0050\u0061\u0067e\u0073").(*_gb .PdfObjectReference );
if !_dfgg {return _dd .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bfeg ,_abegc :=_adgdb ._faefdf .LookupByReference (*_ddgaad );
if _abegc !=nil {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _abegc ;};_eedde ,_dfgg :=_bfeg .(*_gb .PdfIndirectObject );if !_dfgg {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ag .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_eedde );return _dd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cagdb ,_dfgg :=_eedde .PdfObject .(*_gb .PdfObjectDictionary );if !_dfgg {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_eedde );
return _dd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ecffc ,_dfgg :=_gb .GetInt (_cagdb .Get ("\u0043\u006f\u0075n\u0074"));if !_dfgg {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _dd .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_dfgg =_gb .GetName (_cagdb .Get ("\u0054\u0079\u0070\u0065"));!_dfgg {_ag .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cagdb .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _gbce ,_ccgge :=_gb .GetInt (_cagdb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_ccgge {_fbbea :=int64 (*_gbce );_adgdb .Rotate =&_fbbea ;};_adgdb ._bcebaa =_fffef ;
_adgdb ._ddecd =_aacg ;_adgdb ._cafdfc =_cagdb ;_adgdb ._abbf =_eedde ;_adgdb ._aebacd =int (*_ecffc );_adgdb ._cfedb =[]*_gb .PdfIndirectObject {};_dafae :=map[_gb .PdfObject ]struct{}{};_abegc =_adgdb .buildPageList (_eedde ,nil ,_dafae );if _abegc !=nil {return _abegc ;
};_ag .Log .Trace ("\u002d\u002d\u002d");_ag .Log .Trace ("\u0054\u004f\u0043");_ag .Log .Trace ("\u0050\u0061\u0067e\u0073");_ag .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_adgdb ._cfedb ),_adgdb ._cfedb );_adgdb ._dbdbe ,_abegc =_adgdb .loadOutlines ();
if _abegc !=nil {_ag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_abegc );
return _abegc ;};_adgdb .AcroForm ,_abegc =_adgdb .loadForms ();if _abegc !=nil {return _abegc ;};_adgdb .DSS ,_abegc =_adgdb .loadDSS ();if _abegc !=nil {return _abegc ;};return nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ddfe :=&PdfBorderStyle {};return _ddfe };func (_ddfgd *PdfReader )newPdfAnnotationCaretFromDict (_ebee *_gb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bbbd :=PdfAnnotationCaret {};_cfee ,_ffac :=_ddfgd .newPdfAnnotationMarkupFromDict (_ebee );
if _ffac !=nil {return nil ,_ffac ;};_bbbd .PdfAnnotationMarkup =_cfee ;_bbbd .RD =_ebee .Get ("\u0052\u0044");_bbbd .Sy =_ebee .Get ("\u0053\u0079");return &_bbbd ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_cfcafc *PdfReader )PageFromIndirectObject (ind *_gb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_cfcafc .PageList )!=len (_cfcafc ._cfedb ){return nil ,0,_dd .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _edabb ,_gacfb :=range _cfcafc ._cfedb {if _gacfb ==ind {return _cfcafc .PageList [_edabb ],_edabb +1,nil ;};};return nil ,0,_dd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_bfdg :=NewPdfAnnotation ();_abc :=&PdfAnnotationStrikeOut {};_abc .PdfAnnotation =_bfdg ;_abc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfdg .SetContext (_abc );return _abc ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _fag .Time )(PdfDate ,error ){_bgfe :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gbgddg ,_ :=_cg .ParseInt (_bgfe [1:3],10,32);_gccd ,_ :=_cg .ParseInt (_bgfe [4:6],10,32);return PdfDate {_cagfeb :int64 (timeObj .Year ()),_bbaf :int64 (timeObj .Month ()),_ddbag :int64 (timeObj .Day ()),_acabb :int64 (timeObj .Hour ()),_fadf :int64 (timeObj .Minute ()),_cdffb :int64 (timeObj .Second ()),_fbecd :_bgfe [0],_ebbgf :_gbgddg ,_bcccbg :_gccd },nil ;
};func (_fdaf *PdfReader )newPdfActionSoundFromDict (_fgf *_gb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_fgf .Get ("\u0053\u006f\u0075n\u0064"),Volume :_fgf .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_fgf .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_fgf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_fgf .Get ("\u004d\u0069\u0078")},nil ;
};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ddffe *PdfPattern )SetContext (ctx PdfModel ){_ddffe ._gefdd =ctx };

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _gb .PdfObjectArray )(*PdfRectangle ,error ){_aebbc :=PdfRectangle {};if arr .Len ()!=4{return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _fefcb error ;_aebbc .Llx ,_fefcb =_gb .GetNumberAsFloat (arr .Get (0));if _fefcb !=nil {return nil ,_fefcb ;};_aebbc .Lly ,_fefcb =_gb .GetNumberAsFloat (arr .Get (1));if _fefcb !=nil {return nil ,_fefcb ;};_aebbc .Urx ,_fefcb =_gb .GetNumberAsFloat (arr .Get (2));
if _fefcb !=nil {return nil ,_fefcb ;};_aebbc .Ury ,_fefcb =_gb .GetNumberAsFloat (arr .Get (3));if _fefcb !=nil {return nil ,_fefcb ;};return &_aebbc ,nil ;};func (_gbd *PdfReader )newPdfAnnotationMarkupFromDict (_dda *_gb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_gfdff :=&PdfAnnotationMarkup {};
if _fbde :=_dda .Get ("\u0054");_fbde !=nil {_gfdff .T =_fbde ;};if _egca :=_dda .Get ("\u0050\u006f\u0070u\u0070");_egca !=nil {_gbe ,_efbaa :=_egca .(*_gb .PdfIndirectObject );if !_efbaa {if _ ,_fbcf :=_egca .(*_gb .PdfObjectNull );!_fbcf {return nil ,_dd .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_bedc ,_bdcc :=_gbd .newPdfAnnotationFromIndirectObject (_gbe );if _bdcc !=nil {return nil ,_bdcc ;};if _bedc !=nil {_dbg ,_eac :=_bedc ._gccb .(*PdfAnnotationPopup );if !_eac {return nil ,_dd .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_gfdff .Popup =_dbg ;};};};if _aabf :=_dda .Get ("\u0043\u0041");_aabf !=nil {_gfdff .CA =_aabf ;};if _gcgc :=_dda .Get ("\u0052\u0043");_gcgc !=nil {_gfdff .RC =_gcgc ;};if _cdb :=_dda .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_cdb !=nil {_gfdff .CreationDate =_cdb ;};if _ccge :=_dda .Get ("\u0049\u0052\u0054");_ccge !=nil {_gfdff .IRT =_ccge ;};if _gddg :=_dda .Get ("\u0053\u0075\u0062\u006a");_gddg !=nil {_gfdff .Subj =_gddg ;};if _ccba :=_dda .Get ("\u0052\u0054");_ccba !=nil {_gfdff .RT =_ccba ;
};if _bfdgd :=_dda .Get ("\u0049\u0054");_bfdgd !=nil {_gfdff .IT =_bfdgd ;};if _bdec :=_dda .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bdec !=nil {_gfdff .ExData =_bdec ;};return _gfdff ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_decaf *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};type modelManager struct{_cecbb map[PdfModel ]_gb .PdfObject ;_edebc map[_gb .PdfObject ]PdfModel ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _gb .PdfObject ;Name _gb .PdfObject ;};

// WriteString outputs the object as it is to be written to file.
func (_fdbba *pdfSignDictionary )WriteString ()string {_fdbba ._gacag =0;_fdbba ._bbfec =0;_fdbba ._dgbad =0;_fdbba ._eebad =0;_cbfda :=_df .NewBuffer (nil );_cbfda .WriteString ("\u003c\u003c");for _ ,_aaaga :=range _fdbba .Keys (){_fdgcd :=_fdbba .Get (_aaaga );
switch _aaaga {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cbfda .WriteString (_aaaga .WriteString ());_cbfda .WriteString ("\u0020");_fdbba ._dgbad =_cbfda .Len ();_cbfda .WriteString (_fdgcd .WriteString ());_cbfda .WriteString ("\u0020");_fdbba ._eebad =_cbfda .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cbfda .WriteString (_aaaga .WriteString ());_cbfda .WriteString ("\u0020");_fdbba ._gacag =_cbfda .Len ();_cbfda .WriteString (_fdgcd .WriteString ());_cbfda .WriteString ("\u0020");_fdbba ._bbfec =_cbfda .Len ()-1;
default:_cbfda .WriteString (_aaaga .WriteString ());_cbfda .WriteString ("\u0020");_cbfda .WriteString (_fdgcd .WriteString ());};};_cbfda .WriteString ("\u003e\u003e");return _cbfda .String ();};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfdcf *PdfShadingType4 )ToPdfObject ()_gb .PdfObject {_bfdcf .PdfShading .ToPdfObject ();_fdgfc ,_bdddf :=_bfdcf .getShadingDict ();if _bdddf !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bfdcf .BitsPerCoordinate !=nil {_fdgfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bfdcf .BitsPerCoordinate );};if _bfdcf .BitsPerComponent !=nil {_fdgfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfdcf .BitsPerComponent );
};if _bfdcf .BitsPerFlag !=nil {_fdgfc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bfdcf .BitsPerFlag );};if _bfdcf .Decode !=nil {_fdgfc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfdcf .Decode );};if _bfdcf .Function !=nil {if len (_bfdcf .Function )==1{_fdgfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfdcf .Function [0].ToPdfObject ());
}else {_gcdb :=_gb .MakeArray ();for _ ,_eadfa :=range _bfdcf .Function {_gcdb .Append (_eadfa .ToPdfObject ());};_fdgfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcdb );};};return _bfdcf ._aggbc ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gb .PdfObject ;IC _gb .PdfObject ;BE _gb .PdfObject ;RD _gb .PdfObject ;};func _ccdg (_gbafg _gb .PdfObject ,_gdec *fontCommon )(*_ba .CMap ,error ){_afbad ,_gfbg :=_gb .GetStream (_gbafg );
if !_gfbg {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_gbafg );
return nil ,_gb .ErrTypeError ;};_dfdea ,_cegb :=_gb .DecodeStream (_afbad );if _cegb !=nil {return nil ,_cegb ;};_eded ,_cegb :=_ba .LoadCmapFromData (_dfdea ,!_gdec .isCIDFont ());if _cegb !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_afbad .ObjectNumber ,_cegb );
};return _eded ,_cegb ;};func (_adae *PdfReader )newPdfAnnotationTextFromDict (_edbc *_gb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cgd :=PdfAnnotationText {};_beda ,_bcdb :=_adae .newPdfAnnotationMarkupFromDict (_edbc );if _bcdb !=nil {return nil ,_bcdb ;
};_cgd .PdfAnnotationMarkup =_beda ;_cgd .Open =_edbc .Get ("\u004f\u0070\u0065\u006e");_cgd .Name =_edbc .Get ("\u004e\u0061\u006d\u0065");_cgd .State =_edbc .Get ("\u0053\u0074\u0061t\u0065");_cgd .StateModel =_edbc .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_cgd ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_fffbe *PdfFont )SubsetRegistered ()error {switch _cdda :=_fffbe ._faee .(type ){case *pdfFontType0 :_ffgaf :=_cdda .subsetRegistered ();if _ffgaf !=nil {_ag .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ffgaf );
return _ffgaf ;};if _cdda ._gbec !=nil {if _cdda ._dfaad !=nil {_cdda ._dfaad .ToPdfObject ();};_cdda .ToPdfObject ();};default:_ag .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_cdda );
};return nil ;};func (_fcaee *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _geab []*PdfFieldSignature ;for _ ,_gceaf :=range _fcaee .AllFields (){switch _cecab :=_gceaf .GetContext ().(type ){case *PdfFieldSignature :_bffff :=_cecab ;_geab =append (_geab ,_bffff );
};};return _geab ;};

// ToPdfObject implements interface PdfModel.
func (_bbgc *PdfAnnotationPrinterMark )ToPdfObject ()_gb .PdfObject {_bbgc .PdfAnnotation .ToPdfObject ();_bfff :=_bbgc ._gbac ;_ceab :=_bfff .PdfObject .(*_gb .PdfObjectDictionary );_ceab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_ceab .SetIfNotNil ("\u004d\u004e",_bbgc .MN );return _bfff ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgefd *PdfShadingType7 )ToPdfObject ()_gb .PdfObject {_cgefd .PdfShading .ToPdfObject ();_ggaef ,_fgbbb :=_cgefd .getShadingDict ();if _fgbbb !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgefd .BitsPerCoordinate !=nil {_ggaef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgefd .BitsPerCoordinate );};if _cgefd .BitsPerComponent !=nil {_ggaef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgefd .BitsPerComponent );
};if _cgefd .BitsPerFlag !=nil {_ggaef .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cgefd .BitsPerFlag );};if _cgefd .Decode !=nil {_ggaef .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgefd .Decode );};if _cgefd .Function !=nil {if len (_cgefd .Function )==1{_ggaef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgefd .Function [0].ToPdfObject ());
}else {_fcafac :=_gb .MakeArray ();for _ ,_fagcd :=range _cgefd .Function {_fcafac .Append (_fagcd .ToPdfObject ());};_ggaef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcafac );};};return _cgefd ._aggbc ;};func (_aegg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_eed *_gb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dcc :=PdfAnnotationFileAttachment {};
_bffd ,_gac :=_aegg .newPdfAnnotationMarkupFromDict (_eed );if _gac !=nil {return nil ,_gac ;};_dcc .PdfAnnotationMarkup =_bffd ;_dcc .FS =_eed .Get ("\u0046\u0053");_dcc .Name =_eed .Get ("\u004e\u0061\u006d\u0065");return &_dcc ,nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dggefd :=PdfDate {};_ccaffd :=_gedffg .FindAllStringSubmatch (dateStr ,1);if len (_ccaffd )< 1{return _dggefd ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_ccaffd [0])!=10{return _dggefd ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_dggefd ._cagfeb ,_ =_cg .ParseInt (_ccaffd [0][1],10,32);_dggefd ._bbaf ,_ =_cg .ParseInt (_ccaffd [0][2],10,32);_dggefd ._ddbag ,_ =_cg .ParseInt (_ccaffd [0][3],10,32);_dggefd ._acabb ,_ =_cg .ParseInt (_ccaffd [0][4],10,32);_dggefd ._fadf ,_ =_cg .ParseInt (_ccaffd [0][5],10,32);
_dggefd ._cdffb ,_ =_cg .ParseInt (_ccaffd [0][6],10,32);if len (_ccaffd [0][7])> 0{_dggefd ._fbecd =_ccaffd [0][7][0];}else {_dggefd ._fbecd ='+';};if len (_ccaffd [0][8])> 0{_dggefd ._ebbgf ,_ =_cg .ParseInt (_ccaffd [0][8],10,32);}else {_dggefd ._ebbgf =0;
};if len (_ccaffd [0][9])> 0{_dggefd ._bcccbg ,_ =_cg .ParseInt (_ccaffd [0][9],10,32);}else {_dggefd ._bcccbg =0;};return _dggefd ,nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_ggcba :=&PdfPageResources {};_ggcba ._bgagb =_gb .MakeDict ();return _ggcba ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_dgbag :=NewPdfOutline ();_dgbag ._dedbb =&_dgbag ;return _dgbag ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_gfcfb []byte ;_eecea []uint32 ;_ecbgb *_gb .PdfObjectStream ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bbffcf *XObjectImage )SetFilter (encoder _gb .StreamEncoder )error {_dfedbe :=_bbffcf .Stream ;_beeaga ,_cagddc :=_bbffcf .Filter .DecodeBytes (_dfedbe );if _cagddc !=nil {return _cagddc ;};_bbffcf .Filter =encoder ;encoder .UpdateParams (_bbffcf .getParamsDict ());
_dfedbe ,_cagddc =encoder .EncodeBytes (_beeaga );if _cagddc !=nil {return _cagddc ;};_bbffcf .Stream =_dfedbe ;return nil ;};func (_gfa *PdfReader )newPdfActionSubmitFormFromDict (_gaaf *_gb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gfe ,_faef :=_dbf (_gaaf .Get ("\u0046"));
if _faef !=nil {return nil ,_faef ;};return &PdfActionSubmitForm {F :_gfe ,Fields :_gaaf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gaaf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _bfbdb ()string {_cgabb .Lock ();defer _cgabb .Unlock ();
if len (_ceddg )> 0{return _ceddg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func (_dafe *PdfReader )newPdfAnnotationPolyLineFromDict (_dbgb *_gb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bcac :=PdfAnnotationPolyLine {};
_cece ,_gada :=_dafe .newPdfAnnotationMarkupFromDict (_dbgb );if _gada !=nil {return nil ,_gada ;};_bcac .PdfAnnotationMarkup =_cece ;_bcac .Vertices =_dbgb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bcac .LE =_dbgb .Get ("\u004c\u0045");
_bcac .BS =_dbgb .Get ("\u0042\u0053");_bcac .IC =_dbgb .Get ("\u0049\u0043");_bcac .BE =_dbgb .Get ("\u0042\u0045");_bcac .IT =_dbgb .Get ("\u0049\u0054");_bcac .Measure =_dbgb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bcac ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _gb .PdfObject ;Name _gb .PdfObject ;State _gb .PdfObject ;StateModel _gb .PdfObject ;};func _cbfc (_gfga *_gb .PdfObjectDictionary ,_cggf *fontCommon )(*pdfFontType0 ,error ){_dfdf ,_fdgf :=_gb .GetArray (_gfga .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_fdgf {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_cggf );
return nil ,_gb .ErrRangeError ;};if _dfdf .Len ()!=1{_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_dfdf .Len ());return nil ,_gb .ErrRangeError ;
};_ecgf ,_fgbg :=_gabf (_dfdf .Get (0),false );if _fgbg !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_fgbg ,_cggf );
return nil ,_fgbg ;};_fbbfc :=_ffda (_cggf );_fbbfc .DescendantFont =_ecgf ;_ffcf ,_fdgf :=_gb .GetNameVal (_gfga .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fdgf {if _ffcf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_ffcf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_fbbfc ._dfaad =_eaf .NewIdentityTextEncoder (_ffcf );
}else if _ba .IsPredefinedCMap (_ffcf ){_fbbfc ._acabd ,_fgbg =_ba .LoadPredefinedCMap (_ffcf );if _fgbg !=nil {_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ffcf ,_fgbg );
};}else {_ag .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_ffcf );};};if _bfcgg :=_ecgf .baseFields ()._dfbfc ;_bfcgg !=nil {if _effaa :=_bfcgg .Name ();_effaa =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_effaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_effaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_effaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_fbbfc ._dfaad =_eaf .NewCMapEncoder (_ffcf ,_fbbfc ._acabd ,_bfcgg );
};};return _fbbfc ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fbagc pdfFontType0 )GetCharMetrics (code _eaf .CharCode )(_ed .CharMetrics ,bool ){if _fbagc .DescendantFont ==nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fbagc );
return _ed .CharMetrics {},false ;};return _fbagc .DescendantFont .GetCharMetrics (code );};func _eede (_cafg string )(map[_eaf .CharCode ]_eaf .GlyphName ,error ){_dacb :=_fcf .Split (_cafg ,"\u000a");_debae :=make (map[_eaf .CharCode ]_eaf .GlyphName );
for _ ,_gggdd :=range _dacb {_dfaba :=_acdfe .FindStringSubmatch (_gggdd );if _dfaba ==nil {continue ;};_ffefa ,_feagb :=_dfaba [1],_dfaba [2];_ffaa ,_bdbdd :=_cg .Atoi (_ffefa );if _bdbdd !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gggdd );
return nil ,_gb .ErrTypeError ;};_debae [_eaf .CharCode (_ffaa )]=_eaf .GlyphName (_feagb );};_ag .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_debae );
return _debae ,nil ;};func (_aefg *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _aefg ._gdef };

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_dfff *PdfPageResources )SetXObjectImageByName (keyName _gb .PdfObjectName ,ximg *XObjectImage )error {_fgdcc :=ximg .ToPdfObject ().(*_gb .PdfObjectStream );_fafda :=_dfff .SetXObjectByName (keyName ,_fgdcc );return _fafda ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_afebc *OutlineItem )Insert (index uint ,item *OutlineItem ){_edgfa :=uint (len (_afebc .Entries ));if index > _edgfa {index =_edgfa ;};_afebc .Entries =append (_afebc .Entries [:index ],append ([]*OutlineItem {item },_afebc .Entries [index :]...)...);
};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cagg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cagg .Mask ()&^fl .Mask ())};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ddcbb DefaultImageHandler )NewGrayImageFromGoImage (goimg _be .Image )(*Image ,error ){_cffg :=goimg .Bounds ();_bdda :=&Image {Width :int64 (_cffg .Dx ()),Height :int64 (_cffg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fbafc :=goimg .(type ){case *_be .Gray :if len (_fbafc .Pix )!=_cffg .Dx ()*_cffg .Dy (){_cebec ,_dcgaf :=_aag .GrayConverter .Convert (goimg );
if _dcgaf !=nil {return nil ,_dcgaf ;};_bdda .Data =_cebec .Pix ();}else {_bdda .Data =_fbafc .Pix ;};case *_be .Gray16 :_bdda .BitsPerComponent =16;if len (_fbafc .Pix )!=_cffg .Dx ()*_cffg .Dy ()*2{_fcde ,_cbadc :=_aag .Gray16Converter .Convert (goimg );
if _cbadc !=nil {return nil ,_cbadc ;};_bdda .Data =_fcde .Pix ();}else {_bdda .Data =_fbafc .Pix ;};case _aag .Image :_bgbge :=_fbafc .Base ();if _bgbge .ColorComponents ==1{_bdda .BitsPerComponent =int64 (_bgbge .BitsPerComponent );_bdda .Data =_bgbge .Data ;
return _bdda ,nil ;};_fbff ,_daee :=_aag .GrayConverter .Convert (goimg );if _daee !=nil {return nil ,_daee ;};_bdda .Data =_fbff .Pix ();default:_feadc ,_bfee :=_aag .GrayConverter .Convert (goimg );if _bfee !=nil {return nil ,_bfee ;};_bdda .Data =_feadc .Pix ();
};return _bdda ,nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_gb .PdfObjectDictionary )(*PdfPageResources ,error ){_edgca :=NewPdfPageResources ();if _fegcd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fegcd !=nil {_edgca .ExtGState =_fegcd ;};if _fcbgg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_fcbgg !=nil &&!_gb .IsNullObject (_fcbgg ){_edgca .ColorSpace =_fcbgg ;};if _aefab :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_aefab !=nil {_edgca .Pattern =_aefab ;};if _deeef :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_deeef !=nil {_edgca .Shading =_deeef ;
};if _ccede :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_ccede !=nil {_edgca .XObject =_ccede ;};if _ceecb :=_gb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_ceecb !=nil {_edgca .Font =_ceecb ;};if _gdba :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_gdba !=nil {_edgca .ProcSet =_gdba ;};if _gedff :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gedff !=nil {_edgca .Properties =_gedff ;};return _edgca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gab *PdfActionResetForm )ToPdfObject ()_gb .PdfObject {_gab .PdfAction .ToPdfObject ();_gaec :=_gab ._gae ;_gcg :=_gaec .PdfObject .(*_gb .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeResetForm )));_gcg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gab .Fields );
_gcg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gab .Flags );return _gaec ;};func _acaa (_dbggg *_gb .PdfObjectDictionary ,_gadg *fontCommon )(*pdfCIDFontType0 ,error ){if _gadg ._abec !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gadg );
return nil ,_gb .ErrRangeError ;};_acge :=_abaea (_gadg );_adaf ,_gddgg :=_gb .GetDict (_dbggg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gddgg {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gadg );
return nil ,ErrRequiredAttributeMissing ;};_acge .CIDSystemInfo =_adaf ;_acge .DW =_dbggg .Get ("\u0044\u0057");_acge .W =_dbggg .Get ("\u0057");_acge .DW2 =_dbggg .Get ("\u0044\u0057\u0032");_acge .W2 =_dbggg .Get ("\u0057\u0032");_acge ._fcfc =1000.0;
if _cfcb ,_ecae :=_gb .GetNumberAsFloat (_acge .DW );_ecae ==nil {_acge ._fcfc =_cfcb ;};_cagd ,_bacgd :=_facd (_acge .W );if _bacgd !=nil {return nil ,_bacgd ;};if _cagd ==nil {_cagd =map[_eaf .CharCode ]float64 {};};_acge ._gdbe =_cagd ;return _acge ,nil ;
};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_agf :=NewPdfAction ();_agg :=&PdfActionGoTo {};_agg .PdfAction =_agf ;_agf .SetContext (_agg );return _agg ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_geabb *LTV )EnableAll (extraCerts []*_g .Certificate )error {_effad :=_geabb ._aaad ._cbaab .AcroForm ;for _ ,_bdacd :=range _effad .AllFields (){_dbgad ,_ :=_bdacd .GetContext ().(*PdfFieldSignature );if _dbgad ==nil {continue ;};_edeb :=_dbgad .V ;
if _ecedd :=_geabb .validateSig (_edeb );_ecedd !=nil {_ag .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ecedd );
};if _cfcba :=_geabb .Enable (_edeb ,extraCerts );_cfcba !=nil {return _cfcba ;};};return nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_fdfg *pdfCIDFontType2 )ToPdfObject ()_gb .PdfObject {if _fdfg ._bdeec ==nil {_fdfg ._bdeec =&_gb .PdfIndirectObject {};};_bafce :=_fdfg .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_fdfg ._bdeec .PdfObject =_bafce ;if _fdfg .CIDSystemInfo !=nil {_bafce .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_fdfg .CIDSystemInfo );};if _fdfg .DW !=nil {_bafce .Set ("\u0044\u0057",_fdfg .DW );};if _fdfg .DW2 !=nil {_bafce .Set ("\u0044\u0057\u0032",_fdfg .DW2 );
};if _fdfg .W !=nil {_bafce .Set ("\u0057",_fdfg .W );};if _fdfg .W2 !=nil {_bafce .Set ("\u0057\u0032",_fdfg .W2 );};if _fdfg .CIDToGIDMap !=nil {_bafce .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_fdfg .CIDToGIDMap );};return _fdfg ._bdeec ;
};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_faf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_dee *PdfReader )newPdfAnnotationPolygonFromDict (_bgefg *_gb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fbfc :=PdfAnnotationPolygon {};_fdgc ,_dgc :=_dee .newPdfAnnotationMarkupFromDict (_bgefg );if _dgc !=nil {return nil ,_dgc ;
};_fbfc .PdfAnnotationMarkup =_fdgc ;_fbfc .Vertices =_bgefg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fbfc .LE =_bgefg .Get ("\u004c\u0045");_fbfc .BS =_bgefg .Get ("\u0042\u0053");_fbfc .IC =_bgefg .Get ("\u0049\u0043");_fbfc .BE =_bgefg .Get ("\u0042\u0045");
_fbfc .IT =_bgefg .Get ("\u0049\u0054");_fbfc .Measure =_bgefg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fbfc ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_eaa *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _eaa ._ecad !=nil {return _eaa ._ecad ,nil ;};if _eaa .A ==nil {return nil ,nil ;};if _eaa ._fffb ==nil {return nil ,nil ;};_afeb ,_cce :=_eaa ._fffb .loadAction (_eaa .A );if _cce !=nil {return nil ,_cce ;
};_eaa ._ecad =_afeb ;return _eaa ._ecad ,nil ;};var _aaeb =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_dfbb ,_cbdfc :=_fdda (basefont );if _cbdfc !=nil {return nil ,_cbdfc ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_dfbb ._agee =_eaf .NewWinAnsiEncoder ();};return &PdfFont {_faee :&_dfbb },nil ;
};func (_fegbe *fontFile )loadFromSegments (_cccd ,_eeefe []byte )error {_ag .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cccd ),len (_eeefe ));_dggef :=_fegbe .parseASCIIPart (_cccd );
if _dggef !=nil {return _dggef ;};_ag .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fegbe );if len (_eeefe )==0{return nil ;};_ag .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fegbe );return nil ;
};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_abgb *_gb .PdfIndirectObject ;};func (_bgcdf *PdfPage )getParentResources ()(*PdfPageResources ,error ){_beggd :=_bgcdf .Parent ;
for _beggd !=nil {_aedc ,_aaebg :=_gb .GetDict (_beggd );if !_aaebg {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_dd .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _fcbc :=_aedc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fcbc !=nil {_fafde ,_bdgdc :=_gb .GetDict (_fcbc );if !_bdgdc {return nil ,_dd .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_bdffd ,_gebca :=NewPdfPageResourcesFromDict (_fafde );if _gebca !=nil {return nil ,_gebca ;};return _bdffd ,nil ;};_beggd =_aedc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cbcce *Outline )Insert (index uint ,item *OutlineItem ){_fgfdd :=uint (len (_cbcce .Entries ));if index > _fgfdd {index =_fgfdd ;};_cbcce .Entries =append (_cbcce .Entries [:index ],append ([]*OutlineItem {item },_cbcce .Entries [index :]...)...);
};func (_bdecc *LTV )enable (_ggeba ,_aeea []*_g .Certificate ,_bgeba string )error {_ececc ,_cbag ,_aaaag :=_bdecc .buildCertChain (_ggeba ,_aeea );if _aaaag !=nil {return _aaaag ;};_fdcd ,_aaaag :=_bdecc .getCerts (_ececc );if _aaaag !=nil {return _aaaag ;
};_ddbfd ,_aaaag :=_bdecc .getOCSPs (_ececc ,_cbag );if _aaaag !=nil {return _aaaag ;};_bgbc ,_aaaag :=_bdecc .getCRLs (_ececc );if _aaaag !=nil {return _aaaag ;};_cbacd :=_bdecc ._agbda ;_ecfbc ,_aaaag :=_cbacd .addCerts (_fdcd );if _aaaag !=nil {return _aaaag ;
};_addc ,_aaaag :=_cbacd .addOCSPs (_ddbfd );if _aaaag !=nil {return _aaaag ;};_bdaaf ,_aaaag :=_cbacd .addCRLs (_bgbc );if _aaaag !=nil {return _aaaag ;};if _bgeba !=""{_cbacd .VRI [_bgeba ]=&VRI {Cert :_ecfbc ,OCSP :_addc ,CRL :_bdaaf };};_bdecc ._aaad .SetDSS (_cbacd );
return nil ;};func (_bdegb *PdfReader )loadDSS ()(*DSS ,error ){if _bdegb ._faefdf .GetCrypter ()!=nil &&!_bdegb ._faefdf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cfcaf :=_bdegb ._ddecd .Get ("\u0044\u0053\u0053");if _cfcaf ==nil {return nil ,nil ;};_cdefa ,_ :=_gb .GetIndirect (_cfcaf );_cfcaf =_gb .TraceToDirectObject (_cfcaf );switch _gdffb :=_cfcaf .(type ){case *_gb .PdfObjectNull :return nil ,nil ;case *_gb .PdfObjectDictionary :return _gdegdc (_cdefa ,_gdffb );
};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cfcaf );};var (CourierName =_ed .CourierName ;CourierBoldName =_ed .CourierBoldName ;CourierObliqueName =_ed .CourierObliqueName ;
CourierBoldObliqueName =_ed .CourierBoldObliqueName ;HelveticaName =_ed .HelveticaName ;HelveticaBoldName =_ed .HelveticaBoldName ;HelveticaObliqueName =_ed .HelveticaObliqueName ;HelveticaBoldObliqueName =_ed .HelveticaBoldObliqueName ;SymbolName =_ed .SymbolName ;
ZapfDingbatsName =_ed .ZapfDingbatsName ;TimesRomanName =_ed .TimesRomanName ;TimesBoldName =_ed .TimesBoldName ;TimesItalicName =_ed .TimesItalicName ;TimesBoldItalicName =_ed .TimesBoldItalicName ;);

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gcgba *Image )GetParamsDict ()*_gb .PdfObjectDictionary {_afacb :=_gb .MakeDict ();_afacb .Set ("\u0057\u0069\u0064t\u0068",_gb .MakeInteger (_gcgba .Width ));_afacb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gb .MakeInteger (_gcgba .Height ));
_afacb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gb .MakeInteger (int64 (_gcgba .ColorComponents )));_afacb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gb .MakeInteger (_gcgba .BitsPerComponent ));
return _afacb ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_dbb *PdfAnnotation )String ()string {_gaee :="";_dgd ,_ada :=_dbb .ToPdfObject ().(*_gb .PdfIndirectObject );if _ada {_gaee =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dbb ._gccb ,_dgd .PdfObject .String ());
};return _gaee ;};

// WriteToFile writes the Appender output to file specified by path.
func (_dbff *PdfAppender )WriteToFile (outputPath string )error {_bec ,_gdcgf :=_aea .Create (outputPath );if _gdcgf !=nil {return _gdcgf ;};defer _bec .Close ();return _dbff .Write (_bec );};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ggaa *PdfReader )Inspect ()(map[string ]int ,error ){return _ggaa ._faefdf .Inspect ()};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcba *PdfShadingType3 )ToPdfObject ()_gb .PdfObject {_fcba .PdfShading .ToPdfObject ();_dbgfc ,_dfedb :=_fcba .getShadingDict ();if _dfedb !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fcba .Coords !=nil {_dbgfc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fcba .Coords );};if _fcba .Domain !=nil {_dbgfc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcba .Domain );};if _fcba .Function !=nil {if len (_fcba .Function )==1{_dbgfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcba .Function [0].ToPdfObject ());
}else {_bcccb :=_gb .MakeArray ();for _ ,_agceb :=range _fcba .Function {_bcccb .Append (_agceb .ToPdfObject ());};_dbgfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcccb );};};if _fcba .Extend !=nil {_dbgfc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fcba .Extend );
};return _fcba ._aggbc ;};

// SetContext sets the sub annotation (context).
func (_cfac *PdfAnnotation )SetContext (ctx PdfModel ){_cfac ._gccb =ctx };func _gfef (_afdd *_gb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_gbbb :=&PdfFieldChoice {};_gbbb .Opt ,_ =_gb .GetArray (_afdd .Get ("\u004f\u0070\u0074"));_gbbb .TI ,_ =_gb .GetInt (_afdd .Get ("\u0054\u0049"));
_gbbb .I ,_ =_gb .GetArray (_afdd .Get ("\u0049"));return _gbbb ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_cebdb *pdfFontSimple )SetEncoder (encoder _eaf .TextEncoder ){_cebdb ._agee =encoder };

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject returns the PDF representation of the page resources.
func (_begge *PdfPageResources )ToPdfObject ()_gb .PdfObject {_ggcf :=_begge ._bgagb ;_ggcf .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_begge .ExtGState );if _begge ._accac !=nil {_begge .ColorSpace =_begge ._accac .ToPdfObject ();};_ggcf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_begge .ColorSpace );
_ggcf .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_begge .Pattern );_ggcf .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_begge .Shading );_ggcf .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_begge .XObject );_ggcf .SetIfNotNil ("\u0046\u006f\u006e\u0074",_begge .Font );
_ggcf .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_begge .ProcSet );_ggcf .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_begge .Properties );return _ggcf ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_begaf *PdfPattern )ToPdfObject ()_gb .PdfObject {_agda :=_begaf .getDict ();_agda .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_agda .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (_begaf .PatternType ));
return _begaf ._egddg ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_baadf *PdfPageResources )HasExtGState (keyName _gb .PdfObjectName )bool {_ ,_fbbeag :=_baadf .GetFontByName (keyName );return _fbbeag ;};func (_aeeac *PdfReader )resolveReference (_bebfg *_gb .PdfObjectReference )(_gb .PdfObject ,bool ,error ){_ebddd ,_ccdcc :=_aeeac ._faefdf .ObjCache [int (_bebfg .ObjectNumber )];
if !_ccdcc {_ag .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_bebfg );_eeca ,_acccg :=_aeeac ._faefdf .LookupByReference (*_bebfg );if _acccg !=nil {return nil ,false ,_acccg ;};_aeeac ._faefdf .ObjCache [int (_bebfg .ObjectNumber )]=_eeca ;
return _eeca ,false ,nil ;};return _ebddd ,true ,nil ;};

// G returns the value of the green component of the color.
func (_abga *PdfColorDeviceRGB )G ()float64 {return _abga [1]};

// ToPdfObject returns the PDF representation of the function.
func (_bbbg *PdfFunctionType4 )ToPdfObject ()_gb .PdfObject {_aaddd :=_bbbg ._fgba ;if _aaddd ==nil {_bbbg ._fgba =&_gb .PdfObjectStream {};_aaddd =_bbbg ._fgba ;};_bfcf :=_gb .MakeDict ();_bfcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (4));
_fafdd :=&_gb .PdfObjectArray {};for _ ,_geaa :=range _bbbg .Domain {_fafdd .Append (_gb .MakeFloat (_geaa ));};_bfcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fafdd );_fddaf :=&_gb .PdfObjectArray {};for _ ,_fcbb :=range _bbbg .Range {_fddaf .Append (_gb .MakeFloat (_fcbb ));
};_bfcf .Set ("\u0052\u0061\u006eg\u0065",_fddaf );if _bbbg ._fgcb ==nil &&_bbbg .Program !=nil {_bbbg ._fgcb =[]byte (_bbbg .Program .String ());};_bfcf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gb .MakeInteger (int64 (len (_bbbg ._fgcb ))));_aaddd .Stream =_bbbg ._fgcb ;
_aaddd .PdfObjectDictionary =_bfcf ;return _aaddd ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_dedbb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_adgf *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _adgf .UnderlyingCS .GetNumComponents ();};func _fffeg (_decca *_gb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_bddf :=PdfShadingType4 {};_aabdde :=_decca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _aabdde ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgdga ,_dgafc :=_aabdde .(*_gb .PdfObjectInteger );if !_dgafc {_ag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aabdde );
return nil ,_gb .ErrTypeError ;};_bddf .BitsPerCoordinate =_dgdga ;_aabdde =_decca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aabdde ==nil {_ag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dgdga ,_dgafc =_aabdde .(*_gb .PdfObjectInteger );if !_dgafc {_ag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aabdde );
return nil ,_gb .ErrTypeError ;};_bddf .BitsPerComponent =_dgdga ;_aabdde =_decca .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aabdde ==nil {_ag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgdga ,_dgafc =_aabdde .(*_gb .PdfObjectInteger );if !_dgafc {_ag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aabdde );
return nil ,_gb .ErrTypeError ;};_bddf .BitsPerComponent =_dgdga ;_aabdde =_decca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aabdde ==nil {_ag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddgcc ,_dgafc :=_aabdde .(*_gb .PdfObjectArray );if !_dgafc {_ag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aabdde );
return nil ,_gb .ErrTypeError ;};_bddf .Decode =_ddgcc ;_aabdde =_decca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aabdde ==nil {_ag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bddf .Function =[]PdfFunction {};if _abceab ,_ddgf :=_aabdde .(*_gb .PdfObjectArray );_ddgf {for _ ,_egga :=range _abceab .Elements (){_egaf ,_adbfe :=_deee (_egga );if _adbfe !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adbfe );
return nil ,_adbfe ;};_bddf .Function =append (_bddf .Function ,_egaf );};}else {_acbge ,_bfcgb :=_deee (_aabdde );if _bfcgb !=nil {_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfcgb );
return nil ,_bfcgb ;};_bddf .Function =append (_bddf .Function ,_acbge );};return &_bddf ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bfgec *_gb .PdfIndirectObject ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bcfdb *PdfFont )CharcodesToStrings (charcodes []_eaf .CharCode )([]string ,int ,int ){_dgcc :=_bcfdb .baseFields ();_eceda :=make ([]string ,0,len (charcodes ));_efgea :=0;_cgff :=_bcfdb .Encoder ();if _cgff !=nil {switch _dcdb :=_cgff .(type ){case _eaf .SimpleEncoder :_bfbc :=_dcdb .BaseName ();
if _ ,_dcbe :=_fceb [_bfbc ];_dcbe {for _ ,_dcea :=range charcodes {if _egeac ,_ebeef :=_cgff .CharcodeToRune (_dcea );_ebeef {_eceda =append (_eceda ,string (_egeac ));}else {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dcea ,charcodes ,_dgcc .isCIDFont (),_bcfdb ,_cgff );
_efgea ++;_eceda =append (_eceda ,_ba .MissingCodeString );};};return _eceda ,len (_eceda ),_efgea ;};};};for _ ,_dgbe :=range charcodes {if _dgcc ._dfbfc !=nil {if _ggda ,_bebbb :=_dgcc ._dfbfc .CharcodeToUnicode (_ba .CharCode (_dgbe ));_bebbb {_eceda =append (_eceda ,_ggda );
continue ;};};if _cgff !=nil {if _cgac ,_edcbc :=_cgff .CharcodeToRune (_dgbe );_edcbc {_eceda =append (_eceda ,string (_cgac ));continue ;};};_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dgbe ,charcodes ,_dgcc .isCIDFont (),_bcfdb ,_cgff );
_efgea ++;_eceda =append (_eceda ,_ba .MissingCodeString );};if _efgea !=0{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_efgea ,_bcfdb );
};return _eceda ,len (_eceda ),_efgea ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_gb .PdfObjectStream ;Data []byte ;_cace *_gb .PdfIndirectObject ;_dced *_gb .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_fde *PdfActionSound )ToPdfObject ()_gb .PdfObject {_fde .PdfAction .ToPdfObject ();_ca :=_fde ._gae ;_cbc :=_ca .PdfObject .(*_gb .PdfObjectDictionary );_cbc .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeSound )));_cbc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fde .Sound );
_cbc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fde .Volume );_cbc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fde .Synchronous );_cbc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fde .Repeat );_cbc .SetIfNotNil ("\u004d\u0069\u0078",_fde .Mix );
return _ca ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gc :=NewPdfAction ();_dde :=&PdfActionSound {};_dde .PdfAction =_gc ;_gc .SetContext (_dde );return _dde ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _gb .PdfObject ;Name _gb .PdfObject ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_aabff *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _gb .PdfObject ;T3DV _gb .PdfObject ;T3DA _gb .PdfObject ;T3DI _gb .PdfObject ;T3DB _gb .PdfObject ;};

// PdfVersion returns version of the PDF file.
func (_ddaf *PdfReader )PdfVersion ()_gb .Version {return _ddaf ._faefdf .PdfVersion ()};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dgda *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aada ,_gce :=_gb .GetNumbersAsFloat (objects );
if _gce !=nil {return nil ,_gce ;};return _dgda .ColorFromFloats (_aada );};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cecbe *XObjectForm )SetContentStream (content []byte ,encoder _gb .StreamEncoder )error {_egaad :=content ;if encoder ==nil {if _cecbe .Filter !=nil {encoder =_cecbe .Filter ;}else {encoder =_gb .NewRawEncoder ();};};_efccb ,_bgdgf :=encoder .EncodeBytes (_egaad );
if _bgdgf !=nil {return _bgdgf ;};_egaad =_efccb ;_cecbe .Stream =_egaad ;_cecbe .Filter =encoder ;return nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fca :=NewPdfAction ();_ec :=&PdfActionMovie {};_ec .PdfAction =_fca ;_fca .SetContext (_ec );return _ec ;};

// ToPdfObject implements interface PdfModel.
func (_bfffc *PdfAnnotation3D )ToPdfObject ()_gb .PdfObject {_bfffc .PdfAnnotation .ToPdfObject ();_bdad :=_bfffc ._gbac ;_ageg :=_bdad .PdfObject .(*_gb .PdfObjectDictionary );_ageg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0033\u0044"));
_ageg .SetIfNotNil ("\u0033\u0044\u0044",_bfffc .T3DD );_ageg .SetIfNotNil ("\u0033\u0044\u0056",_bfffc .T3DV );_ageg .SetIfNotNil ("\u0033\u0044\u0041",_bfffc .T3DA );_ageg .SetIfNotNil ("\u0033\u0044\u0049",_bfffc .T3DI );_ageg .SetIfNotNil ("\u0033\u0044\u0042",_bfffc .T3DB );
return _bdad ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_gefdd PdfModel ;_egddg _gb .PdfObject ;};

// String implements interface PdfObject.
func (_fe *PdfAction )String ()string {_beb ,_fab :=_fe .ToPdfObject ().(*_gb .PdfIndirectObject );if _fab {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fe ._eg ,_beb .PdfObject .String ());};return "";};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_gcb *PdfFieldButton )SetType (btype ButtonType ){_gebed :=uint32 (0);if _gcb .Ff !=nil {_gebed =uint32 (*_gcb .Ff );};switch btype {case ButtonTypePush :_gebed |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_gebed |=FieldFlagRadio .Mask ();
};_gcb .Ff =_gb .MakeInteger (int64 (_gebed ));};func (_cfa *PdfReader )newPdfActionFromIndirectObject (_fdg *_gb .PdfIndirectObject )(*PdfAction ,error ){_bge ,_fda :=_fdg .PdfObject .(*_gb .PdfObjectDictionary );if !_fda {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cfa ._dcafc .GetModelFromPrimitive (_bge );model !=nil {_agce ,_decg :=model .(*PdfAction );if !_decg {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _agce ,nil ;};_gfc :=&PdfAction {};_gfc ._gae =_fdg ;_cfa ._dcafc .Register (_bge ,_gfc );if _fdge :=_bge .Get ("\u0054\u0079\u0070\u0065");_fdge !=nil {_fcaa ,_agd :=_fdge .(*_gb .PdfObjectName );if !_agd {_ag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fdge );
}else {if *_fcaa !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ag .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_fcaa );
};_gfc .Type =_fcaa ;};};if _bfa :=_bge .Get ("\u004e\u0065\u0078\u0074");_bfa !=nil {_gfc .Next =_bfa ;};if _aab :=_bge .Get ("\u0053");_aab !=nil {_gfc .S =_aab ;};_da ,_fdf :=_gfc .S .(*_gb .PdfObjectName );if !_fdf {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gfc .S );
return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gfc .S );};_dcf :=PdfActionType (_da .String ());switch _dcf {case ActionTypeGoTo :_cfd ,_cac :=_cfa .newPdfActionGotoFromDict (_bge );
if _cac !=nil {return nil ,_cac ;};_cfd .PdfAction =_gfc ;_gfc ._eg =_cfd ;return _gfc ,nil ;case ActionTypeGoToR :_ceg ,_eeg :=_cfa .newPdfActionGotoRFromDict (_bge );if _eeg !=nil {return nil ,_eeg ;};_ceg .PdfAction =_gfc ;_gfc ._eg =_ceg ;return _gfc ,nil ;
case ActionTypeGoToE :_ffb ,_dcd :=_cfa .newPdfActionGotoEFromDict (_bge );if _dcd !=nil {return nil ,_dcd ;};_ffb .PdfAction =_gfc ;_gfc ._eg =_ffb ;return _gfc ,nil ;case ActionTypeLaunch :_fbf ,_ccb :=_cfa .newPdfActionLaunchFromDict (_bge );if _ccb !=nil {return nil ,_ccb ;
};_fbf .PdfAction =_gfc ;_gfc ._eg =_fbf ;return _gfc ,nil ;case ActionTypeThread :_abba ,_ceb :=_cfa .newPdfActionThreadFromDict (_bge );if _ceb !=nil {return nil ,_ceb ;};_abba .PdfAction =_gfc ;_gfc ._eg =_abba ;return _gfc ,nil ;case ActionTypeURI :_dfg ,_cad :=_cfa .newPdfActionURIFromDict (_bge );
if _cad !=nil {return nil ,_cad ;};_dfg .PdfAction =_gfc ;_gfc ._eg =_dfg ;return _gfc ,nil ;case ActionTypeSound :_daf ,_gcge :=_cfa .newPdfActionSoundFromDict (_bge );if _gcge !=nil {return nil ,_gcge ;};_daf .PdfAction =_gfc ;_gfc ._eg =_daf ;return _gfc ,nil ;
case ActionTypeMovie :_ece ,_bce :=_cfa .newPdfActionMovieFromDict (_bge );if _bce !=nil {return nil ,_bce ;};_ece .PdfAction =_gfc ;_gfc ._eg =_ece ;return _gfc ,nil ;case ActionTypeHide :_agdb ,_bcd :=_cfa .newPdfActionHideFromDict (_bge );if _bcd !=nil {return nil ,_bcd ;
};_agdb .PdfAction =_gfc ;_gfc ._eg =_agdb ;return _gfc ,nil ;case ActionTypeNamed :_age ,_eca :=_cfa .newPdfActionNamedFromDict (_bge );if _eca !=nil {return nil ,_eca ;};_age .PdfAction =_gfc ;_gfc ._eg =_age ;return _gfc ,nil ;case ActionTypeSubmitForm :_bdcg ,_dab :=_cfa .newPdfActionSubmitFormFromDict (_bge );
if _dab !=nil {return nil ,_dab ;};_bdcg .PdfAction =_gfc ;_gfc ._eg =_bdcg ;return _gfc ,nil ;case ActionTypeResetForm :_gdd ,_cab :=_cfa .newPdfActionResetFormFromDict (_bge );if _cab !=nil {return nil ,_cab ;};_gdd .PdfAction =_gfc ;_gfc ._eg =_gdd ;
return _gfc ,nil ;case ActionTypeImportData :_efg ,_bed :=_cfa .newPdfActionImportDataFromDict (_bge );if _bed !=nil {return nil ,_bed ;};_efg .PdfAction =_gfc ;_gfc ._eg =_efg ;return _gfc ,nil ;case ActionTypeSetOCGState :_cfe ,_cag :=_cfa .newPdfActionSetOCGStateFromDict (_bge );
if _cag !=nil {return nil ,_cag ;};_cfe .PdfAction =_gfc ;_gfc ._eg =_cfe ;return _gfc ,nil ;case ActionTypeRendition :_aeb ,_gde :=_cfa .newPdfActionRenditionFromDict (_bge );if _gde !=nil {return nil ,_gde ;};_aeb .PdfAction =_gfc ;_gfc ._eg =_aeb ;return _gfc ,nil ;
case ActionTypeTrans :_gaf ,_adg :=_cfa .newPdfActionTransFromDict (_bge );if _adg !=nil {return nil ,_adg ;};_gaf .PdfAction =_gfc ;_gfc ._eg =_gaf ;return _gfc ,nil ;case ActionTypeGoTo3DView :_deba ,_fga :=_cfa .newPdfActionGoTo3DViewFromDict (_bge );
if _fga !=nil {return nil ,_fga ;};_deba .PdfAction =_gfc ;_gfc ._eg =_deba ;return _gfc ,nil ;case ActionTypeJavaScript :_aaaa ,_abg :=_cfa .newPdfActionJavaScriptFromDict (_bge );if _abg !=nil {return nil ,_abg ;};_aaaa .PdfAction =_gfc ;_gfc ._eg =_aaaa ;
return _gfc ,nil ;};_ag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_dcf );return nil ,nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_fbee *PdfReader )GetOCProperties ()(_gb .PdfObject ,error ){_dgfde :=_fbee ._ddecd ;_agabf :=_dgfde .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_agabf =_gb .ResolveReference (_agabf );if !_fbee ._cddff {_dbba :=_fbee .traverseObjectData (_agabf );
if _dbba !=nil {return nil ,_dbba ;};};return _agabf ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bca :=NewPdfAnnotation ();_gag :=&PdfAnnotationSquare {};_gag .PdfAnnotation =_bca ;_gag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bca .SetContext (_gag );return _gag ;};func _gdegb (_dddfg _gb .PdfObject )[]*_gb .PdfObjectStream {if _dddfg ==nil {return nil ;
};_eedbg ,_gabeb :=_gb .GetArray (_dddfg );if !_gabeb ||_eedbg .Len ()==0{return nil ;};_egada :=make ([]*_gb .PdfObjectStream ,0,_eedbg .Len ());for _ ,_eaeea :=range _eedbg .Elements (){if _acaaa ,_baab :=_gb .GetStream (_eaeea );_baab {_egada =append (_egada ,_acaaa );
};};return _egada ;};

// ToPdfObject implements interface PdfModel.
func (_dcfeb *PdfSignature )ToPdfObject ()_gb .PdfObject {_ggab :=_dcfeb ._dggbe ;var _eafdd *_gb .PdfObjectDictionary ;if _dcdcg ,_agaad :=_ggab .PdfObject .(*pdfSignDictionary );_agaad {_eafdd =_dcdcg .PdfObjectDictionary ;}else {_eafdd =_ggab .PdfObject .(*_gb .PdfObjectDictionary );
};_eafdd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dcfeb .Type );_eafdd .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_dcfeb .Filter );_eafdd .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_dcfeb .SubFilter );_eafdd .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dcfeb .ByteRange );
_eafdd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dcfeb .Contents );_eafdd .SetIfNotNil ("\u0043\u0065\u0072\u0074",_dcfeb .Cert );_eafdd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dcfeb .Name );_eafdd .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_dcfeb .Reason );
_eafdd .SetIfNotNil ("\u004d",_dcfeb .M );_eafdd .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_dcfeb .Reference );_eafdd .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_dcfeb .Changes );_eafdd .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_dcfeb .ContactInfo );
return _ggab ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cbade *PdfFieldButton )ToPdfObject ()_gb .PdfObject {_cbade .PdfField .ToPdfObject ();_daac :=_cbade ._feag ;_ebbd :=_daac .PdfObject .(*_gb .PdfObjectDictionary );_ebbd .Set ("\u0046\u0054",_gb .MakeName ("\u0042\u0074\u006e"));if _cbade .Opt !=nil {_ebbd .Set ("\u004f\u0070\u0074",_cbade .Opt );
};return _daac ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_fbbf *PdfField )SetContext (ctx PdfModel ){_fbbf ._bagfc =ctx };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ceffa *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeee :=vals [0];if _aeee < 0.0||_aeee > 100.0{_ag .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_aeee );
return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eadee :=vals [1];_dfcg :=float64 (-100);_gefc :=float64 (100);if len (_ceffa .Range )> 1{_dfcg =_ceffa .Range [0];_gefc =_ceffa .Range [1];};if _eadee < _dfcg ||_eadee > _gefc {_ag .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_eadee ,_dfcg ,_gefc );
return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcag :=vals [2];_eecga :=float64 (-100);_eedgb :=float64 (100);if len (_ceffa .Range )> 3{_eecga =_ceffa .Range [2];_eedgb =_ceffa .Range [3];};if _dcag < _eecga ||_dcag > _eedgb {_ag .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dcag ,_eecga ,_eedgb );
return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgaa :=NewPdfColorLab (_aeee ,_eadee ,_dcag );return _dgaa ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_bebcge :=&XObjectForm {};_dfaea :=&_gb .PdfObjectStream {};_dfaea .PdfObjectDictionary =_gb .MakeDict ();_bebcge ._bfaeg =_dfaea ;return _bebcge ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bgedg ,_cadae :=_aea .Open (filePath );if _cadae !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cadae );
return nil ,_cadae ;};defer _bgedg .Close ();return NewPdfFontFromTTF (_bgedg );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fafbg *PdfPageResourcesColorspaces )ToPdfObject ()_gb .PdfObject {_cebg :=_gb .MakeDict ();for _ ,_beeag :=range _fafbg .Names {_cebg .Set (_gb .PdfObjectName (_beeag ),_fafbg .Colorspaces [_beeag ].ToPdfObject ());};if _fafbg ._fcdec !=nil {_fafbg ._fcdec .PdfObject =_cebg ;
return _fafbg ._fcdec ;};return _cebg ;};func (_ddaee *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func (_bdb *PdfReader )newPdfActionSetOCGStateFromDict (_fceg *_gb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fceg .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fceg .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bggf *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbaa ,_bdfe :=color .(*PdfColorCalGray );if !_bdfe {_ag .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_dbaa .Val ();X :=_bggf .WhitePoint [0]*_ga .Pow (ANorm ,_bggf .Gamma );Y :=_bggf .WhitePoint [1]*_ga .Pow (ANorm ,_bggf .Gamma );
Z :=_bggf .WhitePoint [2]*_ga .Pow (ANorm ,_bggf .Gamma );_dbef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cecce :=-0.969256*X +1.875992*Y +0.041556*Z ;_fdag :=0.055648*X +-0.204043*Y +1.057311*Z ;_dbef =_ga .Min (_ga .Max (_dbef ,0),1.0);_cecce =_ga .Min (_ga .Max (_cecce ,0),1.0);
_fdag =_ga .Min (_ga .Max (_fdag ,0),1.0);return NewPdfColorDeviceRGB (_dbef ,_cecce ,_fdag ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdf *PdfActionGoTo3DView )ToPdfObject ()_gb .PdfObject {_cdf .PdfAction .ToPdfObject ();_gcc :=_cdf ._gae ;_ecfd :=_gcc .PdfObject .(*_gb .PdfObjectDictionary );_ecfd .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeGoTo3DView )));_ecfd .SetIfNotNil ("\u0054\u0041",_cdf .TA );
_ecfd .SetIfNotNil ("\u0056",_cdf .V );return _gcc ;};func _bbbf (_bdeae *PdfField ,_ccgeg _gb .PdfObject ){for _ ,_fegf :=range _bdeae .Annotations {_fegf .AS =_ccgeg ;_fegf .ToPdfObject ();};};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dbgacf *PdfInfo )AddCustomInfo (name string ,value string )error {if _dbgacf ._dfee ==nil {_dbgacf ._dfee =_gb .MakeDict ();};if _ ,_ebcb :=_eeadg [name ];_ebcb {return _b .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dbgacf ._dfee .SetIfNotNil (*_gb .MakeName (name ),_gb .MakeString (value ));return nil ;};func _ebecc (_agdg *_gb .PdfObjectArray )(float64 ,error ){_fadgg ,_fffdb :=_agdg .ToFloat64Array ();if _fffdb !=nil {_ag .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agdg ,_fffdb );
};switch len (_fadgg ){case 1:return _fadgg [0],nil ;case 3:_eecfd :=PdfColorspaceDeviceRGB {};_ecadcb ,_geea :=_eecfd .ColorFromFloats (_fadgg );if _geea !=nil {return 0.0,_geea ;};return _ecadcb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_acgge :=PdfColorspaceDeviceCMYK {};
_bcgcb ,_gcfe :=_acgge .ColorFromFloats (_fadgg );if _gcfe !=nil {return 0.0,_gcfe ;};_fbddb ,_gcfe :=_acgge .ColorToRGB (_bcgcb .(*PdfColorDeviceCMYK ));if _gcfe !=nil {return 0.0,_gcfe ;};return _fbddb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_fffdb =_dd .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_ag .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agdg ,_fffdb );return 0.0,_fffdb ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_dccg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cgabb .Lock ();defer _cgabb .Unlock ();_adgeb =subject };func (_bfc *PdfReader )newPdfActionRenditionFromDict (_daa *_gb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_daa .Get ("\u0052"),AN :_daa .Get ("\u0041\u004e"),OP :_daa .Get ("\u004f\u0050"),JS :_daa .Get ("\u004a\u0053")},nil ;
};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bgge :=NewPdfAnnotation ();_cbec :=&PdfAnnotationTrapNet {};_cbec .PdfAnnotation =_bgge ;_bgge .SetContext (_cbec );return _cbec ;};func (_beaca *Image )samplesTrimPadding (_abbag []uint32 )[]uint32 {_dcdbf :=_beaca .ColorComponents *int (_beaca .Width )*int (_beaca .Height );
if len (_abbag )==_dcdbf {return _abbag ;};_cabcf :=make ([]uint32 ,_dcdbf );_bafb :=int (_beaca .Width )*_beaca .ColorComponents ;var _gaae ,_fdafe ,_fbcfg ,_ggfb int ;_ffcd :=_aag .BytesPerLine (int (_beaca .Width ),int (_beaca .BitsPerComponent ),_beaca .ColorComponents );
for _gaae =0;_gaae < int (_beaca .Height );_gaae ++{_fdafe =_gaae *int (_beaca .Width );_fbcfg =_gaae *_ffcd ;for _ggfb =0;_ggfb < _bafb ;_ggfb ++{_cabcf [_fdafe +_ggfb ]=_abbag [_fbcfg +_ggfb ];};};return _cabcf ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// RemovePage removes a page by number.
func (_gfeg *PdfAppender )RemovePage (pageNum int ){_babg :=pageNum -1;_gfeg ._bbgcg =append (_gfeg ._bbgcg [0:_babg ],_gfeg ._bbgcg [pageNum :]...);};

// SetPatternByName sets a pattern resource specified by keyName.
func (_faccaf *PdfPageResources )SetPatternByName (keyName _gb .PdfObjectName ,pattern _gb .PdfObject )error {if _faccaf .Pattern ==nil {_faccaf .Pattern =_gb .MakeDict ();};_feaaf ,_cbbef :=_faccaf .Pattern .(*_gb .PdfObjectDictionary );if !_cbbef {return _gb .ErrTypeError ;
};_feaaf .Set (keyName ,pattern );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bdegd *PdfFilespec )ToPdfObject ()_gb .PdfObject {_ccdd :=_bdegd .getDict ();_ccdd .Clear ();_ccdd .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_ccdd .SetIfNotNil ("\u0046\u0053",_bdegd .FS );
_ccdd .SetIfNotNil ("\u0046",_bdegd .F );_ccdd .SetIfNotNil ("\u0055\u0046",_bdegd .UF );_ccdd .SetIfNotNil ("\u0044\u004f\u0053",_bdegd .DOS );_ccdd .SetIfNotNil ("\u004d\u0061\u0063",_bdegd .Mac );_ccdd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bdegd .Unix );
_ccdd .SetIfNotNil ("\u0049\u0044",_bdegd .ID );_ccdd .SetIfNotNil ("\u0056",_bdegd .V );_ccdd .SetIfNotNil ("\u0045\u0046",_bdegd .EF );_ccdd .SetIfNotNil ("\u0052\u0046",_bdegd .RF );_ccdd .SetIfNotNil ("\u0044\u0065\u0073\u0063",_bdegd .Desc );_ccdd .SetIfNotNil ("\u0043\u0049",_bdegd .CI );
return _bdegd ._fcaag ;};func (_dgde *PdfReader )newPdfAnnotationStampFromDict (_ffgf *_gb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_cdfg :=PdfAnnotationStamp {};_eege ,_cafd :=_dgde .newPdfAnnotationMarkupFromDict (_ffgf );if _cafd !=nil {return nil ,_cafd ;
};_cdfg .PdfAnnotationMarkup =_eege ;_cdfg .Name =_ffgf .Get ("\u004e\u0061\u006d\u0065");return &_cdfg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_afb *PdfAnnotationStrikeOut )ToPdfObject ()_gb .PdfObject {_afb .PdfAnnotation .ToPdfObject ();_eabf :=_afb ._gbac ;_bbe :=_eabf .PdfObject .(*_gb .PdfObjectDictionary );_afb .PdfAnnotationMarkup .appendToPdfDictionary (_bbe );_bbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_bbe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_afb .QuadPoints );return _eabf ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_bbgae []byte )(_bgea int ,_ggcdc error );};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_dagf DefaultImageHandler )Read (reader _fg .Reader )(*Image ,error ){_bgcd ,_ ,_dcdf :=_be .Decode (reader );if _dcdf !=nil {_ag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_dcdf );
return nil ,_dcdf ;};return _dagf .NewImageFromGoImage (_bgcd );};

// HasFontByName checks if has font resource by name.
func (_egfba *PdfPage )HasFontByName (name _gb .PdfObjectName )bool {_ccda ,_bfbb :=_egfba .Resources .Font .(*_gb .PdfObjectDictionary );if !_bfbb {return false ;};if _eeeaa :=_ccda .Get (name );_eeeaa !=nil {return true ;};return false ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bcbb *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bcbb .flattenFieldsWithOpts (false ,appgen ,opts );};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_gffaf *PdfWriter )SetOptimizer (optimizer Optimizer ){_gffaf ._ggggf =optimizer };func (_efbe *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cgabb .Lock ();defer _cgabb .Unlock ();_dead =producer };

// HasXObjectByName checks if has XObject resource by name.
func (_cfccf *PdfPage )HasXObjectByName (name _gb .PdfObjectName )bool {_edfc ,_dedfbf :=_cfccf .Resources .XObject .(*_gb .PdfObjectDictionary );if !_dedfbf {return false ;};if _bdgcd :=_edfc .Get (name );_bdgcd !=nil {return true ;};return false ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_cbdcg *PdfFieldButton )IsPush ()bool {return _cbdcg .GetType ()==ButtonTypePush };func (_gaecaf *PdfShading )getShadingDict ()(*_gb .PdfObjectDictionary ,error ){_ebgcd :=_gaecaf ._aggbc ;if _edded ,_gfada :=_ebgcd .(*_gb .PdfIndirectObject );_gfada {_fdabb ,_gfaa :=_edded .PdfObject .(*_gb .PdfObjectDictionary );
if !_gfaa {return nil ,_gb .ErrTypeError ;};return _fdabb ,nil ;}else if _gbeb ,_deeebb :=_ebgcd .(*_gb .PdfObjectStream );_deeebb {return _gbeb .PdfObjectDictionary ,nil ;}else if _gcdc ,_dddgf :=_ebgcd .(*_gb .PdfObjectDictionary );_dddgf {return _gcdc ,nil ;
}else {_ag .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_gb .ErrTypeError ;};};func (_geb *PdfReader )newPdfAnnotationSoundFromDict (_abbb *_gb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_ddeg :=PdfAnnotationSound {};
_agca ,_dedf :=_geb .newPdfAnnotationMarkupFromDict (_abbb );if _dedf !=nil {return nil ,_dedf ;};_ddeg .PdfAnnotationMarkup =_agca ;_ddeg .Name =_abbb .Get ("\u004e\u0061\u006d\u0065");_ddeg .Sound =_abbb .Get ("\u0053\u006f\u0075n\u0064");return &_ddeg ,nil ;
};

// ToPdfObject returns the PDF representation of the function.
func (_cfab *PdfFunctionType2 )ToPdfObject ()_gb .PdfObject {_ggbca :=_gb .MakeDict ();_ggbca .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (2));_gdbed :=&_gb .PdfObjectArray {};for _ ,_fggbg :=range _cfab .Domain {_gdbed .Append (_gb .MakeFloat (_fggbg ));
};_ggbca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdbed );if _cfab .Range !=nil {_bbdb :=&_gb .PdfObjectArray {};for _ ,_ebccc :=range _cfab .Range {_bbdb .Append (_gb .MakeFloat (_ebccc ));};_ggbca .Set ("\u0052\u0061\u006eg\u0065",_bbdb );};if _cfab .C0 !=nil {_fbfbb :=&_gb .PdfObjectArray {};
for _ ,_ddgaa :=range _cfab .C0 {_fbfbb .Append (_gb .MakeFloat (_ddgaa ));};_ggbca .Set ("\u0043\u0030",_fbfbb );};if _cfab .C1 !=nil {_cded :=&_gb .PdfObjectArray {};for _ ,_aeaa :=range _cfab .C1 {_cded .Append (_gb .MakeFloat (_aeaa ));};_ggbca .Set ("\u0043\u0031",_cded );
};_ggbca .Set ("\u004e",_gb .MakeFloat (_cfab .N ));if _cfab ._cegg !=nil {_cfab ._cegg .PdfObject =_ggbca ;return _cfab ._cegg ;};return _ggbca ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_gb .PdfObjectInteger ;BitsPerComponent *_gb .PdfObjectInteger ;BitsPerFlag *_gb .PdfObjectInteger ;Decode *_gb .PdfObjectArray ;Function []PdfFunction ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gege *_gb .PdfIndirectObject ;};

// GetContentStreams returns the content stream as an array of strings.
func (_accd *PdfPage )GetContentStreams ()([]string ,error ){_gaea :=_accd .GetContentStreamObjs ();var _abcgd []string ;for _ ,_debcf :=range _gaea {_fbfa ,_cfbac :=_debg (_debcf );if _cfbac !=nil {return nil ,_cfbac ;};_abcgd =append (_abcgd ,_fbfa );
};return _abcgd ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ac :=NewPdfAction ();_ce :=&PdfActionTrans {};_ce .PdfAction =_ac ;_ac .SetContext (_ce );return _ce ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cgabb .Lock ();defer _cgabb .Unlock ();_gdafg =author };

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ToPdfObject implements interface PdfModel.
func (_abb *PdfActionNamed )ToPdfObject ()_gb .PdfObject {_abb .PdfAction .ToPdfObject ();_dgg :=_abb ._gae ;_fdb :=_dgg .PdfObject .(*_gb .PdfObjectDictionary );_fdb .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeNamed )));_fdb .SetIfNotNil ("\u004e",_abb .N );
return _dgg ;};var (_cgabb _f .Mutex ;_gdafg ="";_cdebd _fag .Time ;_ceddg ="";_dcfd ="";_feafgc _fag .Time ;_dead ="";_adgeb ="";_ggfe ="";);

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bc :=NewPdfAction ();_ge :=&PdfActionResetForm {};_ge .PdfAction =_bc ;_bc .SetContext (_ge );return _ge ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cafdf *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_feebgb :=_cafdf .GetContentStreamObjs ();wrapContents =wrapContents &&len (_feebgb )> 0;_fcca :=_gb .NewFlateEncoder ();_bcbag :=_gb .MakeArray ();if wrapContents {_bdgab ,_fgdfg :=_gb .MakeStream ([]byte ("\u0071\u000a"),_fcca );
if _fgdfg !=nil {return _fgdfg ;};_bcbag .Append (_bdgab );};_bcbag .Append (_feebgb ...);if wrapContents {_bdfda ,_gfcef :=_gb .MakeStream ([]byte ("\u000a\u0051\u000a"),_fcca );if _gfcef !=nil {return _gfcef ;};_bcbag .Append (_bdfda );};_cbbf ,_ggfac :=_gb .MakeStream (cs ,_fcca );
if _ggfac !=nil {return _ggfac ;};_bcbag .Append (_cbbf );_cafdf .Contents =_bcbag ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fgb *PdfActionHide )ToPdfObject ()_gb .PdfObject {_fgb .PdfAction .ToPdfObject ();_fabe :=_fgb ._gae ;_eaed :=_fabe .PdfObject .(*_gb .PdfObjectDictionary );_eaed .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeHide )));_eaed .SetIfNotNil ("\u0054",_fgb .T );
_eaed .SetIfNotNil ("\u0048",_fgb .H );return _fabe ;};var _fceb =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cagfeb int64 ;_bbaf int64 ;_ddbag int64 ;_acabb int64 ;_fadf int64 ;_cdffb int64 ;_fbecd byte ;_ebbgf int64 ;_bcccbg int64 ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_aged *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _gb .GetNumberAsFloat (_aged .CapHeight );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _gb .PdfObject ;_dbbf []byte ;_gedfd *_gb .PdfIndirectObject ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bead *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_ede *PdfReader )newPdfAnnotationProjectionFromDict (_dff *_gb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_bbcf :=&PdfAnnotationProjection {};_gga ,_dfab :=_ede .newPdfAnnotationMarkupFromDict (_dff );
if _dfab !=nil {return nil ,_dfab ;};_bbcf .PdfAnnotationMarkup =_gga ;return _bbcf ,nil ;};type fontCommon struct{_cacfa string ;_abec string ;_eeceb string ;_efaa _gb .PdfObject ;_dfbfc *_ba .CMap ;_gdef *PdfFontDescriptor ;_cbcaf int64 ;};func _dbddf (_eegg _gb .PdfObject )(*PdfFontDescriptor ,error ){_fcfde :=&PdfFontDescriptor {};
_eegg =_gb .ResolveReference (_eegg );if _ffad ,_gaade :=_eegg .(*_gb .PdfIndirectObject );_gaade {_fcfde ._dcgc =_ffad ;_eegg =_ffad .PdfObject ;};_feeg ,_abefg :=_gb .GetDict (_eegg );if !_abefg {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eegg );
return nil ,_gb .ErrTypeError ;};if _bfgcd :=_feeg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_bfgcd !=nil {_fcfde .FontName =_bfgcd ;}else {_ag .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_ecag ,_ :=_gb .GetName (_fcfde .FontName );if _bcfa :=_feeg .Get ("\u0054\u0079\u0070\u0065");_bcfa !=nil {_ddag ,_fgfd :=_bcfa .(*_gb .PdfObjectName );if !_fgfd ||string (*_ddag )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ag .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bcfa ,_ecag ,_fcfde .FontName );
};}else {_ag .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ecag ,_fcfde .FontName );
};_fcfde .FontFamily =_feeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fcfde .FontStretch =_feeg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fcfde .FontWeight =_feeg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_fcfde .Flags =_feeg .Get ("\u0046\u006c\u0061g\u0073");_fcfde .FontBBox =_feeg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fcfde .ItalicAngle =_feeg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fcfde .Ascent =_feeg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_fcfde .Descent =_feeg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fcfde .Leading =_feeg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fcfde .CapHeight =_feeg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fcfde .XHeight =_feeg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_fcfde .StemV =_feeg .Get ("\u0053\u0074\u0065m\u0056");_fcfde .StemH =_feeg .Get ("\u0053\u0074\u0065m\u0048");_fcfde .AvgWidth =_feeg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fcfde .MaxWidth =_feeg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_fcfde .MissingWidth =_feeg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fcfde .FontFile =_feeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fcfde .FontFile2 =_feeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_fcfde .FontFile3 =_feeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fcfde .CharSet =_feeg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fcfde .Style =_feeg .Get ("\u0053\u0074\u0079l\u0065");_fcfde .Lang =_feeg .Get ("\u004c\u0061\u006e\u0067");
_fcfde .FD =_feeg .Get ("\u0046\u0044");_fcfde .CIDSet =_feeg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fcfde .Flags !=nil {if _gedfe ,_gcgef :=_gb .GetIntVal (_fcfde .Flags );_gcgef {_fcfde ._ffgfd =_gedfe ;};};if _fcfde .MissingWidth !=nil {if _ffbg ,_cbac :=_gb .GetNumberAsFloat (_fcfde .MissingWidth );
_cbac ==nil {_fcfde ._fffa =_ffbg ;};};if _fcfde .FontFile !=nil {_dabdd ,_cdde :=_ddecb (_fcfde .FontFile );if _cdde !=nil {return _fcfde ,_cdde ;};_ag .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_dabdd );_fcfde .fontFile =_dabdd ;
};if _fcfde .FontFile2 !=nil {_bdae ,_abad :=_ed .NewFontFile2FromPdfObject (_fcfde .FontFile2 );if _abad !=nil {return _fcfde ,_abad ;};_ag .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_bdae .String ());_fcfde ._bbede =&_bdae ;
};return _fcfde ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_eebefe *PdfReader )GetObjectNums ()[]int {return _eebefe ._faefdf .GetObjectNums ()};

// ToPdfObject returns the PDF representation of the function.
func (_gbcdg *PdfFunctionType3 )ToPdfObject ()_gb .PdfObject {_gddf :=_gb .MakeDict ();_gddf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gb .MakeInteger (3));_ggeca :=&_gb .PdfObjectArray {};for _ ,_bgcg :=range _gbcdg .Domain {_ggeca .Append (_gb .MakeFloat (_bgcg ));
};_gddf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ggeca );if _gbcdg .Range !=nil {_gffdd :=&_gb .PdfObjectArray {};for _ ,_bcbfd :=range _gbcdg .Range {_gffdd .Append (_gb .MakeFloat (_bcbfd ));};_gddf .Set ("\u0052\u0061\u006eg\u0065",_gffdd );};if _gbcdg .Functions !=nil {_ggdgb :=&_gb .PdfObjectArray {};
for _ ,_ggcdg :=range _gbcdg .Functions {_ggdgb .Append (_ggcdg .ToPdfObject ());};_gddf .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_ggdgb );};if _gbcdg .Bounds !=nil {_dgdaaa :=&_gb .PdfObjectArray {};for _ ,_gdgfb :=range _gbcdg .Bounds {_dgdaaa .Append (_gb .MakeFloat (_gdgfb ));
};_gddf .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_dgdaaa );};if _gbcdg .Encode !=nil {_aadfg :=&_gb .PdfObjectArray {};for _ ,_bafcc :=range _gbcdg .Encode {_aadfg .Append (_gb .MakeFloat (_bafcc ));};_gddf .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_aadfg );
};if _gbcdg ._abgb !=nil {_gbcdg ._abgb .PdfObject =_gddf ;return _gbcdg ._abgb ;};return _gddf ;};func (_gbafd *PdfReader )newPdfPageFromDict (_dgfd *_gb .PdfObjectDictionary )(*PdfPage ,error ){_beaff :=NewPdfPage ();_beaff ._ageda =_dgfd ;_dadag :=*_dgfd ;
_bagec ,_dgafb :=_dadag .Get ("\u0054\u0079\u0070\u0065").(*_gb .PdfObjectName );if !_dgafb {return nil ,_dd .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_bagec !="\u0050\u0061\u0067\u0065"{return nil ,_dd .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _dfece :=_dadag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_dfece !=nil {_beaff .Parent =_dfece ;};if _bbfca :=_dadag .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bbfca !=nil {_ebead ,_cgaee :=_gb .GetString (_bbfca );if !_cgaee {return nil ,_dd .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_aecb ,_aaed :=NewPdfDate (_ebead .Str ());if _aaed !=nil {return nil ,_aaed ;};_beaff .LastModified =&_aecb ;};if _ddbfdb :=_dadag .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ddbfdb !=nil &&!_gb .IsNullObject (_ddbfdb ){_dcfed ,_cfbde :=_gb .GetDict (_ddbfdb );
if !_cfbde {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddbfdb );};var _aaccf error ;_beaff .Resources ,_aaccf =NewPdfPageResourcesFromDict (_dcfed );
if _aaccf !=nil {return nil ,_aaccf ;};}else {_bacdd ,_ebceb :=_beaff .getParentResources ();if _ebceb !=nil {return nil ,_ebceb ;};if _bacdd ==nil {_bacdd =NewPdfPageResources ();};_beaff .Resources =_bacdd ;};if _dgec :=_dadag .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_dgec !=nil {_defeg ,_gaaee :=_gb .GetArray (_dgec );if !_gaaee {return nil ,_dd .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _bafbb error ;
_beaff .MediaBox ,_bafbb =NewPdfRectangle (*_defeg );if _bafbb !=nil {return nil ,_bafbb ;};};if _fcaagb :=_dadag .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fcaagb !=nil {_eefc ,_dcedg :=_gb .GetArray (_fcaagb );if !_dcedg {return nil ,_dd .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _cabcd error ;_beaff .CropBox ,_cabcd =NewPdfRectangle (*_eefc );if _cabcd !=nil {return nil ,_cabcd ;};};if _fcfa :=_dadag .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_fcfa !=nil {_cfca ,_dafcd :=_gb .GetArray (_fcfa );if !_dafcd {return nil ,_dd .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fgeac error ;_beaff .BleedBox ,_fgeac =NewPdfRectangle (*_cfca );if _fgeac !=nil {return nil ,_fgeac ;};};if _aabag :=_dadag .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_aabag !=nil {_edgbf ,_cggfd :=_gb .GetArray (_aabag );if !_cggfd {return nil ,_dd .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fggdg error ;_beaff .TrimBox ,_fggdg =NewPdfRectangle (*_edgbf );if _fggdg !=nil {return nil ,_fggdg ;};};if _fdddf :=_dadag .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_fdddf !=nil {_eacffg ,_gdbfca :=_gb .GetArray (_fdddf );if !_gdbfca {return nil ,_dd .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _ggag error ;_beaff .ArtBox ,_ggag =NewPdfRectangle (*_eacffg );if _ggag !=nil {return nil ,_ggag ;};};if _bacef :=_dadag .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_bacef !=nil {_beaff .BoxColorInfo =_bacef ;};if _fagab :=_dadag .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_fagab !=nil {_beaff .Contents =_fagab ;};if _egad :=_dadag .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_egad !=nil {_ccfg ,_gacb :=_gb .GetInt (_egad );if !_gacb {return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fddeg :=int64 (*_ccfg );_beaff .Rotate =&_fddeg ;};if _cgaed :=_dadag .Get ("\u0047\u0072\u006fu\u0070");_cgaed !=nil {_beaff .Group =_cgaed ;};if _gdcfg :=_dadag .Get ("\u0054\u0068\u0075m\u0062");_gdcfg !=nil {_beaff .Thumb =_gdcfg ;};if _fdabce :=_dadag .Get ("\u0042");
_fdabce !=nil {_beaff .B =_fdabce ;};if _gecd :=_dadag .Get ("\u0044\u0075\u0072");_gecd !=nil {_beaff .Dur =_gecd ;};if _cdag :=_dadag .Get ("\u0054\u0072\u0061n\u0073");_cdag !=nil {_beaff .Trans =_cdag ;};if _eecda :=_dadag .Get ("\u0041\u0041");_eecda !=nil {_beaff .AA =_eecda ;
};if _bgged :=_dadag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bgged !=nil {_beaff .Metadata =_bgged ;};if _eabcf :=_dadag .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eabcf !=nil {_beaff .PieceInfo =_eabcf ;};if _cgef :=_dadag .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_cgef !=nil {_beaff .StructParents =_cgef ;};if _fgfbf :=_dadag .Get ("\u0049\u0044");_fgfbf !=nil {_beaff .ID =_fgfbf ;};if _cddaa :=_dadag .Get ("\u0050\u005a");_cddaa !=nil {_beaff .PZ =_cddaa ;};if _cgabf :=_dadag .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_cgabf !=nil {_beaff .SeparationInfo =_cgabf ;};if _bgbad :=_dadag .Get ("\u0054\u0061\u0062\u0073");_bgbad !=nil {_beaff .Tabs =_bgbad ;};if _ebde :=_dadag .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_ebde !=nil {_beaff .TemplateInstantiated =_ebde ;};if _fabad :=_dadag .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_fabad !=nil {_beaff .PresSteps =_fabad ;};if _dcead :=_dadag .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dcead !=nil {_beaff .UserUnit =_dcead ;
};if _daec :=_dadag .Get ("\u0056\u0050");_daec !=nil {_beaff .VP =_daec ;};if _fbbcf :=_dadag .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fbbcf !=nil {_beaff .Annots =_fbbcf ;};_beaff ._bacc =_gbafd ;return _beaff ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edcfe *PdfShadingType5 )ToPdfObject ()_gb .PdfObject {_edcfe .PdfShading .ToPdfObject ();_gdbd ,_gadge :=_edcfe .getShadingDict ();if _gadge !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edcfe .BitsPerCoordinate !=nil {_gdbd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_edcfe .BitsPerCoordinate );};if _edcfe .BitsPerComponent !=nil {_gdbd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_edcfe .BitsPerComponent );
};if _edcfe .VerticesPerRow !=nil {_gdbd .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_edcfe .VerticesPerRow );};if _edcfe .Decode !=nil {_gdbd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_edcfe .Decode );};if _edcfe .Function !=nil {if len (_edcfe .Function )==1{_gdbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edcfe .Function [0].ToPdfObject ());
}else {_fbgag :=_gb .MakeArray ();for _ ,_bcegd :=range _edcfe .Function {_fbgag .Append (_bcegd .ToPdfObject ());};_gdbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbgag );};};return _edcfe ._aggbc ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gdcdc *pdfFontSimple )ToPdfObject ()_gb .PdfObject {if _gdcdc ._dgefa ==nil {_gdcdc ._dgefa =&_gb .PdfIndirectObject {};};_ecec :=_gdcdc .baseFields ().asPdfObjectDictionary ("");_gdcdc ._dgefa .PdfObject =_ecec ;if _gdcdc .FirstChar !=nil {_ecec .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gdcdc .FirstChar );
};if _gdcdc .LastChar !=nil {_ecec .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gdcdc .LastChar );};if _gdcdc .Widths !=nil {_ecec .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gdcdc .Widths );};if _gdcdc .Encoding !=nil {_ecec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gdcdc .Encoding );
}else if _gdcdc ._agee !=nil {_bdfce :=_gdcdc ._agee .ToPdfObject ();if _bdfce !=nil {_ecec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bdfce );};};return _gdcdc ._dgefa ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_gdegdcf *PdfPageResources )HasColorspaceByName (keyName _gb .PdfObjectName )bool {_ebbfb ,_gcggdb :=_gdegdcf .GetColorspaces ();if _gcggdb !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gcggdb );
return false ;};if _ebbfb ==nil {return false ;};_ ,_fbdg :=_ebbfb .Colorspaces [string (keyName )];return _fbdg ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_gb .PdfObjectArray ;Matrix *_gb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_ccegb *PdfAnnotationPolygon )ToPdfObject ()_gb .PdfObject {_ccegb .PdfAnnotation .ToPdfObject ();_adb :=_ccegb ._gbac ;_ffd :=_adb .PdfObject .(*_gb .PdfObjectDictionary );_ccegb .PdfAnnotationMarkup .appendToPdfDictionary (_ffd );_ffd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_ffd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ccegb .Vertices );_ffd .SetIfNotNil ("\u004c\u0045",_ccegb .LE );_ffd .SetIfNotNil ("\u0042\u0053",_ccegb .BS );_ffd .SetIfNotNil ("\u0049\u0043",_ccegb .IC );_ffd .SetIfNotNil ("\u0042\u0045",_ccegb .BE );
_ffd .SetIfNotNil ("\u0049\u0054",_ccegb .IT );_ffd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ccegb .Measure );return _adb ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_dece *PdfPage )ToPdfObject ()_gb .PdfObject {_aefff :=_dece ._gdda ;_dece .GetPageDict ();return _aefff ;};func (_ecff *PdfField )inherit (_gecg func (*PdfField )bool )(bool ,error ){_bacd :=map[*PdfField ]bool {};_fafc :=false ;_eacff :=_ecff ;
for _eacff !=nil {if _ ,_agde :=_bacd [_eacff ];_agde {return false ,_dd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_aafg :=_gecg (_eacff );if _aafg {_fafc =true ;break ;};_bacd [_eacff ]=true ;
_eacff =_eacff .Parent ;};return _fafc ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_acead *PdfShading )GetContainingPdfObject ()_gb .PdfObject {return _acead ._aggbc };func _cbcdd (_ggdb _gb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cfgc :=&PdfColorspaceDeviceNAttributes {};var _dfdgf *_gb .PdfObjectDictionary ;switch _ccbc :=_ggdb .(type ){case *_gb .PdfIndirectObject :_cfgc ._dbgac =_ccbc ;
var _dcfa bool ;_dfdgf ,_dcfa =_ccbc .PdfObject .(*_gb .PdfObjectDictionary );if !_dcfa {_ag .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_dd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_gb .PdfObjectDictionary :_dfdgf =_ccbc ;case *_gb .PdfObjectReference :_fbceab :=_ccbc .Resolve ();return _cbcdd (_fbceab );default:_ag .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_dd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afdb :=_dfdgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_afdb !=nil {_cffdg ,_bbcg :=_gb .TraceToDirectObject (_afdb ).(*_gb .PdfObjectName );if !_bbcg {_ag .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_dd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cfgc .Subtype =_cffdg ;};if _efdc :=_dfdgf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_efdc !=nil {_cfgc .Colorants =_efdc ;};if _dfgb :=_dfdgf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_dfgb !=nil {_cfgc .Process =_dfgb ;};if _ccgg :=_dfdgf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_ccgg !=nil {_cfgc .MixingHints =_ccgg ;};return _cfgc ,nil ;};func (_ade *PdfReader )newPdfAnnotationLinkFromDict (_faegg *_gb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bdeg :=PdfAnnotationLink {};
_bdeg .A =_faegg .Get ("\u0041");_bdeg .Dest =_faegg .Get ("\u0044\u0065\u0073\u0074");_bdeg .H =_faegg .Get ("\u0048");_bdeg .PA =_faegg .Get ("\u0050\u0041");_bdeg .QuadPoints =_faegg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");
_bdeg .BS =_faegg .Get ("\u0042\u0053");return &_bdeg ,nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _gb .PdfObject ;BS _gb .PdfObject ;LE _gb .PdfObject ;IC _gb .PdfObject ;LL _gb .PdfObject ;LLE _gb .PdfObject ;Cap _gb .PdfObject ;IT _gb .PdfObject ;LLO _gb .PdfObject ;CP _gb .PdfObject ;
Measure _gb .PdfObject ;CO _gb .PdfObject ;};func _eabbc (_dfeb _gb .PdfObject )(*PdfPattern ,error ){_adcgc :=&PdfPattern {};var _fgbec *_gb .PdfObjectDictionary ;if _fabf ,_babd :=_gb .GetIndirect (_dfeb );_babd {_adcgc ._egddg =_fabf ;_ffddf ,_ddbcb :=_fabf .PdfObject .(*_gb .PdfObjectDictionary );
if !_ddbcb {_ag .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fabf .PdfObject );
return nil ,_gb .ErrTypeError ;};_fgbec =_ffddf ;}else if _aabege ,_ecca :=_gb .GetStream (_dfeb );_ecca {_adcgc ._egddg =_aabege ;_fgbec =_aabege .PdfObjectDictionary ;}else {_ag .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dfeb );
return nil ,_gb .ErrTypeError ;};_bfafc :=_fgbec .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bfafc ==nil {_ag .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_caeg ,_gcadc :=_bfafc .(*_gb .PdfObjectInteger );if !_gcadc {_ag .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bfafc );
return nil ,_gb .ErrTypeError ;};if *_caeg !=1&&*_caeg !=2{_ag .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_caeg );return nil ,_gb .ErrRangeError ;
};_adcgc .PatternType =int64 (*_caeg );switch *_caeg {case 1:_ecdaa ,_ecde :=_fcccg (_fgbec );if _ecde !=nil {return nil ,_ecde ;};_ecdaa .PdfPattern =_adcgc ;_adcgc ._gefdd =_ecdaa ;return _adcgc ,nil ;case 2:_dfafa ,_edbcg :=_egddgf (_fgbec );if _edbcg !=nil {return nil ,_edbcg ;
};_dfafa .PdfPattern =_adcgc ;_adcgc ._gefdd =_dfafa ;return _adcgc ,nil ;};return nil ,_dd .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fdddg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_dce *PdfReader )newPdfAnnotationWatermarkFromDict (_aaf *_gb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_gff :=PdfAnnotationWatermark {};
_gff .FixedPrint =_aaf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_gff ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acdaf *PdfShadingType1 )ToPdfObject ()_gb .PdfObject {_acdaf .PdfShading .ToPdfObject ();_ddfbd ,_ffdfd :=_acdaf .getShadingDict ();if _ffdfd !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _acdaf .Domain !=nil {_ddfbd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acdaf .Domain );};if _acdaf .Matrix !=nil {_ddfbd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_acdaf .Matrix );};if _acdaf .Function !=nil {if len (_acdaf .Function )==1{_ddfbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acdaf .Function [0].ToPdfObject ());
}else {_deab :=_gb .MakeArray ();for _ ,_fbca :=range _acdaf .Function {_deab .Append (_fbca .ToPdfObject ());};_ddfbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deab );};};return _acdaf ._aggbc ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_efegg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_efegg .Mask ()|fl .Mask ())};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bceaa *PdfShadingType2 )ToPdfObject ()_gb .PdfObject {_bceaa .PdfShading .ToPdfObject ();_abcba ,_cege :=_bceaa .getShadingDict ();if _cege !=nil {_ag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _abcba ==nil {_ag .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _bceaa .Coords !=nil {_abcba .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bceaa .Coords );
};if _bceaa .Domain !=nil {_abcba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bceaa .Domain );};if _bceaa .Function !=nil {if len (_bceaa .Function )==1{_abcba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bceaa .Function [0].ToPdfObject ());
}else {_agcda :=_gb .MakeArray ();for _ ,_dgga :=range _bceaa .Function {_agcda .Append (_dgga .ToPdfObject ());};_abcba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agcda );};};if _bceaa .Extend !=nil {_abcba .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bceaa .Extend );
};return _bceaa ._aggbc ;};func (_dgaf *PdfReader )newPdfAnnotationStrikeOut (_cdc *_gb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_cede :=PdfAnnotationStrikeOut {};_cbcd ,_eggf :=_dgaf .newPdfAnnotationMarkupFromDict (_cdc );if _eggf !=nil {return nil ,_eggf ;
};_cede .PdfAnnotationMarkup =_cbcd ;_cede .QuadPoints =_cdc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cede ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_ggf :=NewPdfAnnotation ();_dgac :=&PdfAnnotationHighlight {};_dgac .PdfAnnotation =_ggf ;_dgac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggf .SetContext (_dgac );return _dgac ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_afbc *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_gb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcea ,_edacg :=_gb .GetNumbersAsFloat (objects );
if _edacg !=nil {return nil ,_edacg ;};return _afbc .ColorFromFloats (_bcea );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gcca *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gcca .UnderlyingCS ==nil {return nil ,_dd .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _gcca .UnderlyingCS .ColorFromFloats (vals );};func (_bedd *PdfAppender )updateObjectsDeep (_edea _gb .PdfObject ,_cbgdb map[_gb .PdfObject ]struct{}){if _cbgdb ==nil {_cbgdb =map[_gb .PdfObject ]struct{}{};};if _ ,_dbdc :=_cbgdb [_edea ];_dbdc ||_edea ==nil {return ;
};_cbgdb [_edea ]=struct{}{};_bfb :=_gb .ResolveReferencesDeep (_edea ,_bedd ._egce );if _bfb !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfb );};switch _agbe :=_edea .(type ){case *_gb .PdfIndirectObject :switch {case _agbe .GetParser ()==_bedd ._cbaab ._faefdf :return ;
case _agbe .GetParser ()==_bedd .Reader ._faefdf :_egge ,_ :=_bedd ._cbaab .GetIndirectObjectByNumber (int (_agbe .ObjectNumber ));_ggcb ,_agcd :=_egge .(*_gb .PdfIndirectObject );if _agcd &&_ggcb !=nil {if _ggcb .PdfObject !=_agbe .PdfObject &&_ggcb .PdfObject .WriteString ()!=_agbe .PdfObject .WriteString (){_bedd .addNewObject (_edea );
_bedd ._bdega [_edea ]=_agbe .ObjectNumber ;};};default:_bedd .addNewObject (_edea );};_bedd .updateObjectsDeep (_agbe .PdfObject ,_cbgdb );case *_gb .PdfObjectArray :for _ ,_abae :=range _agbe .Elements (){_bedd .updateObjectsDeep (_abae ,_cbgdb );};case *_gb .PdfObjectDictionary :for _ ,_fbbe :=range _agbe .Keys (){_bedd .updateObjectsDeep (_agbe .Get (_fbbe ),_cbgdb );
};case *_gb .PdfObjectStreams :if _agbe .GetParser ()!=_bedd ._cbaab ._faefdf {for _ ,_affe :=range _agbe .Elements (){_bedd .updateObjectsDeep (_affe ,_cbgdb );};};case *_gb .PdfObjectStream :switch {case _agbe .GetParser ()==_bedd ._cbaab ._faefdf :return ;
case _agbe .GetParser ()==_bedd .Reader ._faefdf :if _fdbc ,_bdd :=_bedd ._cbaab ._faefdf .LookupByReference (_agbe .PdfObjectReference );_bdd ==nil {var _bgefc bool ;if _ffgd ,_afcg :=_gb .GetStream (_fdbc );_afcg &&_df .Equal (_ffgd .Stream ,_agbe .Stream ){_bgefc =true ;
};if _fddg ,_efeb :=_gb .GetDict (_fdbc );_bgefc &&_efeb {_bgefc =_fddg .WriteString ()==_agbe .PdfObjectDictionary .WriteString ();};if _bgefc {return ;};};if _agbe .ObjectNumber !=0{_bedd ._bdega [_edea ]=_agbe .ObjectNumber ;};default:if _ ,_cfb :=_bedd ._eeed [_edea ];
!_cfb {_bedd .addNewObject (_edea );};};_bedd .updateObjectsDeep (_agbe .PdfObjectDictionary ,_cbgdb );};};var (_egeec =_bd .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_caaab =_bd .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_acdfe =_bd .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_bgcc ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_defgb ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gbgf ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_gcgf *PdfReader )newPdfAnnotationLineFromDict (_fbgd *_gb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_dbga :=PdfAnnotationLine {};_fge ,_bda :=_gcgf .newPdfAnnotationMarkupFromDict (_fbgd );if _bda !=nil {return nil ,_bda ;};_dbga .PdfAnnotationMarkup =_fge ;
_dbga .L =_fbgd .Get ("\u004c");_dbga .BS =_fbgd .Get ("\u0042\u0053");_dbga .LE =_fbgd .Get ("\u004c\u0045");_dbga .IC =_fbgd .Get ("\u0049\u0043");_dbga .LL =_fbgd .Get ("\u004c\u004c");_dbga .LLE =_fbgd .Get ("\u004c\u004c\u0045");_dbga .Cap =_fbgd .Get ("\u0043\u0061\u0070");
_dbga .IT =_fbgd .Get ("\u0049\u0054");_dbga .LLO =_fbgd .Get ("\u004c\u004c\u004f");_dbga .CP =_fbgd .Get ("\u0043\u0050");_dbga .Measure =_fbgd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_dbga .CO =_fbgd .Get ("\u0043\u004f");return &_dbga ,nil ;
};

// A returns the value of the A component of the color.
func (_bfagf *PdfColorLab )A ()float64 {return _bfagf [1]};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ad .Permissions ;Algorithm EncryptionAlgorithm ;};func (_aebge *PdfReader )traverseObjectData (_cbdgf _gb .PdfObject )error {return _gb .ResolveReferencesDeep (_cbdgf ,_aebge ._eccbb );};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_fccc *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _fag .Time ){_cgabb .Lock ();defer _cgabb .Unlock ();_feafgc =modifiedDate ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_edfea *PdfWriter )SetNamedDestinations (names _gb .PdfObject )error {if names ==nil {return nil ;};_ag .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_edfea ._ecaec .Set ("\u004e\u0061\u006de\u0073",names );return _edfea .addObjects (names );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gccba *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_fbba :=&PdfColorspaceCalGray {};_fbba .BlackPoint =[]float64 {0.0,0.0,0.0};_fbba .Gamma =1;return _fbba ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_gb .PdfObjectArray ;Domain *_gb .PdfObjectArray ;Function []PdfFunction ;Extend *_gb .PdfObjectArray ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_eggd *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _eggd ._gccef !=nil {return _eggd ._gccef ,nil ;};if _eggd .Annots ==nil {_eggd ._gccef =[]*PdfAnnotation {};return nil ,nil ;};if _eggd ._bacc ==nil {_eggd ._gccef =[]*PdfAnnotation {};
return nil ,nil ;};_caaef ,_ebeca :=_eggd ._bacc .loadAnnotations (_eggd .Annots );if _ebeca !=nil {return nil ,_ebeca ;};if _caaef ==nil {_eggd ._gccef =[]*PdfAnnotation {};};_eggd ._gccef =_caaef ;return _eggd ._gccef ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_egcd *PdfPage )Duplicate ()*PdfPage {_eagde :=*_egcd ;_eagde ._ageda =_gb .MakeDict ();_eagde ._gdda =_gb .MakeIndirectObject (_eagde ._ageda );return &_eagde ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_affec *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_affec .GetNumComponents (){return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfgbf ,_cgea :=_affec .TintTransform .Evaluate (vals );
if _cgea !=nil {return nil ,_cgea ;};_aagc ,_cgea :=_affec .AlternateSpace .ColorFromFloats (_gfgbf );if _cgea !=nil {return nil ,_cgea ;};return _aagc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bged *PdfAnnotationPolyLine )ToPdfObject ()_gb .PdfObject {_bged .PdfAnnotation .ToPdfObject ();_fcaf :=_bged ._gbac ;_ebga :=_fcaf .PdfObject .(*_gb .PdfObjectDictionary );_bged .PdfAnnotationMarkup .appendToPdfDictionary (_ebga );_ebga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_ebga .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bged .Vertices );_ebga .SetIfNotNil ("\u004c\u0045",_bged .LE );_ebga .SetIfNotNil ("\u0042\u0053",_bged .BS );_ebga .SetIfNotNil ("\u0049\u0043",_bged .IC );_ebga .SetIfNotNil ("\u0042\u0045",_bged .BE );
_ebga .SetIfNotNil ("\u0049\u0054",_bged .IT );_ebga .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bged .Measure );return _fcaf ;};var _ pdfFont =(*pdfFontType0 )(nil );

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_eccbb :map[_gb .PdfObject ]struct{}{},_dcafc :_bageg (),_faefdf :_gb .NewParserFromString (txt )};};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ed .CharMetrics ;

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _gb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_gb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_aacbe ,_caeeb :=encoder .EncodeBytes (img .Data );
if _caeeb !=nil {_ag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_caeeb );return nil ,_caeeb ;};_bedbg :=NewXObjectImage ();_afff :=img .Width ;_cbaaa :=img .Height ;
_bedbg .Width =&_afff ;_bedbg .Height =&_cbaaa ;_gefdc :=img .BitsPerComponent ;_bedbg .BitsPerComponent =&_gefdc ;_bedbg .Filter =encoder ;_bedbg .Stream =_aacbe ;if cs ==nil {if img .ColorComponents ==1{_bedbg .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_bedbg .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_bedbg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_dd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_bedbg .ColorSpace =cs ;};if len (img ._aggec )!=0{_cdfce :=NewXObjectImage ();_cdfce .Filter =encoder ;_deage ,_bdbfa :=encoder .EncodeBytes (img ._aggec );if _bdbfa !=nil {_ag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bdbfa );
return nil ,_bdbfa ;};_cdfce .Stream =_deage ;_cdfce .BitsPerComponent =_bedbg .BitsPerComponent ;_cdfce .Width =&img .Width ;_cdfce .Height =&img .Height ;_cdfce .ColorSpace =NewPdfColorspaceDeviceGray ();_bedbg .SMask =_cdfce .ToPdfObject ();}else {_bedbg .SMask =xobjIn .SMask ;
_bedbg .ImageMask =xobjIn .ImageMask ;if _bedbg .ColorSpace .GetNumComponents ()==1{_aedfe (_bedbg );};};return _bedbg ,nil ;};func _dcfeg ()_fag .Time {_cgabb .Lock ();defer _cgabb .Unlock ();return _feafgc };

// ToInteger convert to an integer format.
func (_defd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_efbd :=_ga .Pow (2,float64 (bits ))-1;return uint32 (_efbd *_defd .Val ());};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cgfc *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cgfc .Alternate ==nil {if _cgfc .N ==1{_dedfe :=NewPdfColorspaceDeviceGray ();return _dedfe .ColorFromFloats (vals );}else if _cgfc .N ==3{_cccc :=NewPdfColorspaceDeviceRGB ();
return _cccc .ColorFromFloats (vals );}else if _cgfc .N ==4{_dbgd :=NewPdfColorspaceDeviceCMYK ();return _dbgd .ColorFromFloats (vals );}else {return nil ,_dd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _cgfc .Alternate .ColorFromFloats (vals );};func (_aadf PdfFont )actualFont ()pdfFont {if _aadf ._faee ==nil {_ag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aadf );
};return _aadf ._faee ;};type pdfFontType0 struct{fontCommon ;_gbec *_gb .PdfIndirectObject ;_dfaad _eaf .TextEncoder ;Encoding _gb .PdfObject ;DescendantFont *PdfFont ;_acabd *_ba .CMap ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fabd *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_ffbba :=PdfWriter {};_ffbba ._addef =map[_gb .PdfObject ]struct{}{};_ffbba ._cccdf =[]_gb .PdfObject {};_ffbba ._defcg =map[_gb .PdfObject ][]*_gb .PdfObjectDictionary {};_ffbba ._dagbf =map[_gb .PdfObject ]struct{}{};_ffbba ._abecc =1;
_ffbba ._afce =3;_gecag :=_gb .MakeDict ();_egaeg :=[]struct{_bade _gb .PdfObjectName ;_fdgcee string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_debcc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bfbdb ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_fagcb ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_daeba ()},{"\u0054\u0069\u0074l\u0065",_eeecg ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gdfa ()}};
for _ ,_acefd :=range _egaeg {if _acefd ._fdgcee !=""{_gecag .Set (_acefd ._bade ,_gb .MakeString (_acefd ._fdgcee ));};};if _gbdd :=_faad ();!_gbdd .IsZero (){if _ecba ,_aafae :=NewPdfDateFromTime (_gbdd );_aafae ==nil {_gecag .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ecba .ToPdfObject ());
};};if _cfbb :=_dcfeg ();!_cfbb .IsZero (){if _aeffa ,_fgdd :=NewPdfDateFromTime (_cfbb );_fgdd ==nil {_gecag .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_aeffa .ToPdfObject ());};};_gecbgb :=_gb .PdfIndirectObject {};_gecbgb .PdfObject =_gecag ;_ffbba ._dgbf =&_gecbgb ;
_ffbba .addObject (&_gecbgb );_agebd :=_gb .PdfIndirectObject {};_gbbda :=_gb .MakeDict ();_gbbda .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_agebd .PdfObject =_gbbda ;_ffbba ._aebgb =&_agebd ;_ffbba .addObject (_ffbba ._aebgb );
_cefd ,_ccfdf :=_dbaf ("\u0077");if _ccfdf !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccfdf );};_ffbba ._ggcaa =_cefd ;_gecdg :=_gb .PdfIndirectObject {};_adgfc :=_gb .MakeDict ();_adgfc .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0050\u0061\u0067e\u0073"));
_gedc :=_gb .PdfObjectArray {};_adgfc .Set ("\u004b\u0069\u0064\u0073",&_gedc );_adgfc .Set ("\u0043\u006f\u0075n\u0074",_gb .MakeInteger (0));_gecdg .PdfObject =_adgfc ;_ffbba ._aecef =&_gecdg ;_ffbba ._fdfda =map[_gb .PdfObject ]struct{}{};_ffbba .addObject (_ffbba ._aecef );
_gbbda .Set ("\u0050\u0061\u0067e\u0073",&_gecdg );_ffbba ._ecaec =_gbbda ;_ag .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_agebd );return _ffbba ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_caeef *PdfColorspaceLab )ToPdfObject ()_gb .PdfObject {_dbfd :=_gb .MakeArray ();_dbfd .Append (_gb .MakeName ("\u004c\u0061\u0062"));_cbf :=_gb .MakeDict ();if _caeef .WhitePoint !=nil {_fcfg :=_gb .MakeArray (_gb .MakeFloat (_caeef .WhitePoint [0]),_gb .MakeFloat (_caeef .WhitePoint [1]),_gb .MakeFloat (_caeef .WhitePoint [2]));
_cbf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fcfg );}else {_ag .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _caeef .BlackPoint !=nil {_ddff :=_gb .MakeArray (_gb .MakeFloat (_caeef .BlackPoint [0]),_gb .MakeFloat (_caeef .BlackPoint [1]),_gb .MakeFloat (_caeef .BlackPoint [2]));_cbf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ddff );
};if _caeef .Range !=nil {_dcgb :=_gb .MakeArray (_gb .MakeFloat (_caeef .Range [0]),_gb .MakeFloat (_caeef .Range [1]),_gb .MakeFloat (_caeef .Range [2]),_gb .MakeFloat (_caeef .Range [3]));_cbf .Set ("\u0052\u0061\u006eg\u0065",_dcgb );};_dbfd .Append (_cbf );
if _caeef ._dade !=nil {_caeef ._dade .PdfObject =_dbfd ;return _caeef ._dade ;};return _dbfd ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_edfa *PdfPageResources )SetXObjectFormByName (keyName _gb .PdfObjectName ,xform *XObjectForm )error {_aafbea :=xform .ToPdfObject ().(*_gb .PdfObjectStream );_eddfb :=_edfa .SetXObjectByName (keyName ,_aafbea );return _eddfb ;};type pdfCIDFontType0 struct{fontCommon ;
_cdfe *_gb .PdfIndirectObject ;_dcca _eaf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_gb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gb .PdfObject ;W _gb .PdfObject ;DW2 _gb .PdfObject ;W2 _gb .PdfObject ;_gdbe map[_eaf .CharCode ]float64 ;_fcfc float64 ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ffaee *PdfPageResources )GetShadingByName (keyName _gb .PdfObjectName )(*PdfShading ,bool ){if _ffaee .Shading ==nil {return nil ,false ;};_dddg ,_dcbcc :=_gb .TraceToDirectObject (_ffaee .Shading ).(*_gb .PdfObjectDictionary );if !_dcbcc {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffaee .Shading );
return nil ,false ;};if _gbcef :=_dddg .Get (keyName );_gbcef !=nil {_feebe ,_ggddee :=_cgggc (_gbcef );if _ggddee !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_ggddee );
return nil ,false ;};return _feebe ,true ;};return nil ,false ;};func (_adbd *PdfReader )lookupPageByObject (_baceg _gb .PdfObject )(*PdfPage ,error ){return nil ,_dd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_gb .PdfObjectStream )(*XObjectImage ,error ){_dcbcd :=&XObjectImage {};_dcbcd ._debde =stream ;_eaeff :=*(stream .PdfObjectDictionary );_dcgbb ,_agbc :=_gb .NewEncoderFromStream (stream );if _agbc !=nil {return nil ,_agbc ;
};_dcbcd .Filter =_dcgbb ;if _decbg :=_gb .TraceToDirectObject (_eaeff .Get ("\u0057\u0069\u0064t\u0068"));_decbg !=nil {_babac ,_bcdg :=_decbg .(*_gb .PdfObjectInteger );if !_bcdg {return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_aaaea :=int64 (*_babac );_dcbcd .Width =&_aaaea ;}else {return nil ,_dd .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ffgeea :=_gb .TraceToDirectObject (_eaeff .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_ffgeea !=nil {_ebdf ,_dacdg :=_ffgeea .(*_gb .PdfObjectInteger );if !_dacdg {return nil ,_dd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ccecc :=int64 (*_ebdf );
_dcbcd .Height =&_ccecc ;}else {return nil ,_dd .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _ggge :=_gb .TraceToDirectObject (_eaeff .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_ggge !=nil {_dbcee ,_bagbc :=NewPdfColorspaceFromPdfObject (_ggge );if _bagbc !=nil {return nil ,_bagbc ;};_dcbcd .ColorSpace =_dbcee ;}else {_ag .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_dcbcd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _edfae :=_gb .TraceToDirectObject (_eaeff .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_edfae !=nil {_aefcb ,_dadaa :=_edfae .(*_gb .PdfObjectInteger );
if !_dadaa {return nil ,_dd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_adce :=int64 (*_aefcb );_dcbcd .BitsPerComponent =&_adce ;};_dcbcd .Intent =_eaeff .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_dcbcd .ImageMask =_eaeff .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dcbcd .Mask =_eaeff .Get ("\u004d\u0061\u0073\u006b");_dcbcd .Decode =_eaeff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dcbcd .Interpolate =_eaeff .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_dcbcd .Alternatives =_eaeff .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dcbcd .SMask =_eaeff .Get ("\u0053\u004d\u0061s\u006b");_dcbcd .SMaskInData =_eaeff .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_dcbcd .Matte =_eaeff .Get ("\u004d\u0061\u0074t\u0065");_dcbcd .Name =_eaeff .Get ("\u004e\u0061\u006d\u0065");_dcbcd .StructParent =_eaeff .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dcbcd .ID =_eaeff .Get ("\u0049\u0044");
_dcbcd .OPI =_eaeff .Get ("\u004f\u0050\u0049");_dcbcd .Metadata =_eaeff .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dcbcd .OC =_eaeff .Get ("\u004f\u0043");_dcbcd .Stream =stream .Stream ;return _dcbcd ,nil ;};func (_ebce *DSS )addCerts (_dfcdb [][]byte )([]*_gb .PdfObjectStream ,error ){return _ebce .add (&_ebce .Certs ,_ebce ._fdea ,_dfcdb );
};func _ffda (_dbdff *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_dbdff }};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_cfbd *PdfFieldButton )GetType ()ButtonType {_gadc :=ButtonTypeCheckbox ;if _cfbd .Ff !=nil {if (uint32 (*_cfbd .Ff )&FieldFlagPushbutton .Mask ())> 0{_gadc =ButtonTypePush ;}else if (uint32 (*_cfbd .Ff )&FieldFlagRadio .Mask ())> 0{_gadc =ButtonTypeRadio ;
};};return _gadc ;};func (_baed *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _gb .PdfObjectName ;};

// Items returns all children outline items.
func (_gfcg *OutlineItem )Items ()[]*OutlineItem {return _gfcg .Entries };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aggcg *PdfOutline )ToPdfObject ()_gb .PdfObject {_bdfg :=_aggcg ._bfgec ;_bcgd :=_bdfg .PdfObject .(*_gb .PdfObjectDictionary );_bcgd .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _aggcg .First !=nil {_bcgd .Set ("\u0046\u0069\u0072s\u0074",_aggcg .First .ToPdfObject ());
};if _aggcg .Last !=nil {_bcgd .Set ("\u004c\u0061\u0073\u0074",_aggcg .Last .GetContext ().GetContainingPdfObject ());};if _aggcg .Parent !=nil {_bcgd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aggcg .Parent .GetContext ().GetContainingPdfObject ());
};if _aggcg .Count !=nil {_bcgd .Set ("\u0043\u006f\u0075n\u0074",_gb .MakeInteger (*_aggcg .Count ));};return _bdfg ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_egdbc *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_decad ,_dgdef :=_gb .GetDict (_egdbc ._ecaec .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_dgdef {_decad =_gb .MakeDict ();_egdbc ._ecaec .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_decad );
};_cgfe ,_dgdef :=_gb .GetDict (_decad .Get (_gb .PdfObjectName (extName )));if !_dgdef {_cgfe =_gb .MakeDict ();_decad .Set (_gb .PdfObjectName (extName ),_cgfe );};if _egfdf ,_ :=_gb .GetNameVal (_cgfe .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_egfdf !=baseVersion {_cgfe .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_gb .MakeName (baseVersion ));};if _caeab ,_ :=_gb .GetIntVal (_cgfe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_caeab !=extLevel {_cgfe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_gb .MakeInteger (int64 (extLevel )));};};func _bcba (_fafd *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fafd }};func (_eab *PdfReader )newPdfActionURIFromDict (_egag *_gb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_egag .Get ("\u0055\u0052\u0049"),IsMap :_egag .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_eeeb *PdfOutline )GetContainingPdfObject ()_gb .PdfObject {return _eeeb ._bfgec };

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cgabb .Lock ();defer _cgabb .Unlock ();_dcfd =keywords };

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_acfcb *PdfReader )GetOutlines ()(*Outline ,error ){if _acfcb ==nil {return nil ,_dd .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fbgda :=_acfcb .GetOutlineTree ();if _fbgda ==nil {return nil ,_dd .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _ebcad func (_cfbaf *PdfOutlineTreeNode ,_gfgfa *[]*OutlineItem );_ebcad =func (_bgda *PdfOutlineTreeNode ,_bgggc *[]*OutlineItem ){if _bgda ==nil {return ;};if _bgda ._dedbb ==nil {_ag .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _ggedc *OutlineItem ;if _dcefd ,_aecd :=_bgda ._dedbb .(*PdfOutlineItem );_aecd {_gdbc :=_dcefd .Dest ;if (_gdbc ==nil ||_gb .IsNullObject (_gdbc ))&&_dcefd .A !=nil {if _fgbbeg ,_dbdad :=_gb .GetDict (_dcefd .A );_dbdad {_gdbc ,_ =_gb .GetArray (_fgbbeg .Get ("\u0044"));
};};var _bdfee OutlineDest ;if _gdbc !=nil &&!_gb .IsNullObject (_gdbc ){if _ffgef ,_beggb :=_bfce (_gdbc ,_acfcb );_beggb ==nil {_bdfee =*_ffgef ;}else {_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gdbc ,_beggb );
};};_ggedc =NewOutlineItem (_dcefd .Title .Decoded (),_bdfee );*_bgggc =append (*_bgggc ,_ggedc );if _dcefd .Next !=nil {_ebcad (_dcefd .Next ,_bgggc );};};if _bgda .First !=nil {if _ggedc !=nil {_bgggc =&_ggedc .Entries ;};_ebcad (_bgda .First ,_bgggc );
};};_dcaad :=NewOutline ();_ebcad (_fbgda ,&_dcaad .Entries );return _dcaad ,nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_bcafd *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_edfgg :=RC4_128bit ;if options !=nil {_edfgg =options .Algorithm ;};_bfcafa :=_ad .PermOwner ;if options !=nil {_bfcafa =options .Permissions ;};var _ebdad _gd .Filter ;
switch _edfgg {case RC4_128bit :_ebdad =_gd .NewFilterV2 (16);case AES_128bit :_ebdad =_gd .NewFilterAESV2 ();case AES_256bit :_ebdad =_gd .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_ceda ,_fggag ,_afbfb :=_gb .PdfCryptNewEncrypt (_ebdad ,userPass ,ownerPass ,_bfcafa );if _afbfb !=nil {return _afbfb ;};_bcafd ._fcafg =_ceda ;if _fggag .Major !=0{_bcafd .SetVersion (_fggag .Major ,_fggag .Minor );};_bcafd ._dbffd =_fggag .Encrypt ;
_bcafd ._feda =_gb .MakeArray (_gb .MakeHexString (_fggag .ID0 ),_gb .MakeHexString (_fggag .ID1 ));_defcfe :=_gb .MakeIndirectObject (_fggag .Encrypt );_bcafd ._cbfcb =_defcfe ;_bcafd .addObject (_defcfe );return nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_bfd :=NewPdfAnnotation ();_efcf :=&PdfAnnotationSquiggly {};_efcf .PdfAnnotation =_bfd ;_efcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfd .SetContext (_efcf );return _efcf ;};func (_bdea *pdfFontSimple )baseFields ()*fontCommon {return &_bdea .fontCommon };


// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gbfgg *Image )GetSamples ()[]uint32 {_fbfbd :=_bad .ResampleBytes (_gbfgg .Data ,int (_gbfgg .BitsPerComponent ));if _gbfgg .BitsPerComponent < 8{_fbfbd =_gbfgg .samplesTrimPadding (_fbfbd );};_gcce :=int (_gbfgg .Width )*int (_gbfgg .Height )*_gbfgg .ColorComponents ;
if len (_fbfbd )< _gcce {_ag .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fbfbd ),_gcce );
return _fbfbd ;}else if len (_fbfbd )> _gcce {_ag .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fbfbd ),_gcce );
_fbfbd =_fbfbd [:_gcce ];};return _fbfbd ;};func (_abcd *pdfFontSimple )addEncoding ()error {var (_cddad string ;_dccef map[_eaf .CharCode ]_eaf .GlyphName ;_aaeca _eaf .SimpleEncoder ;);if _abcd .Encoder ()!=nil {_gabg ,_aefge :=_abcd .Encoder ().(_eaf .SimpleEncoder );
if _aefge &&_gabg !=nil {_cddad =_gabg .BaseName ();};};if _abcd .Encoding !=nil {_fdad ,_egfgg ,_dgcd :=_abcd .getFontEncoding ();if _dgcd !=nil {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abcd ._cacfa ,_abcd ._abec ,_abcd .Encoding ,_abcd .Encoding ,_dgcd );
return _dgcd ;};if _fdad !=""{_cddad =_fdad ;};_dccef =_egfgg ;_aaeca ,_dgcd =_eaf .NewSimpleTextEncoder (_cddad ,_dccef );if _dgcd !=nil {return _dgcd ;};};if _aaeca ==nil {_fged :=_abcd ._gdef ;if _fged !=nil {switch _abcd ._abec {case "\u0054\u0079\u0070e\u0031":if _fged .fontFile !=nil &&_fged .fontFile ._fffd !=nil {_ag .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_aaeca =_fged .fontFile ._fffd ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fged ._bbede !=nil {_ag .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_cbdcbd ,_cgege :=_fged ._bbede .MakeEncoder ();
if _cgege ==nil {_aaeca =_cbdcbd ;};};};};};if _aaeca !=nil {if _dccef !=nil {_ag .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dccef ,_abcd .baseFields ());
_aaeca =_eaf .ApplyDifferences (_aaeca ,_dccef );};_abcd .SetEncoder (_aaeca );};return nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);func _fdadc (_addga _gb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_ccce :=&PdfPageResourcesColorspaces {};
if _aaeabd ,_dcbdf :=_addga .(*_gb .PdfIndirectObject );_dcbdf {_ccce ._fcdec =_aaeabd ;_addga =_aaeabd .PdfObject ;};_aecfb ,_ecdbd :=_gb .GetDict (_addga );if !_ecdbd {return nil ,_dd .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_ccce .Names =[]string {};_ccce .Colorspaces =map[string ]PdfColorspace {};for _ ,_gaeca :=range _aecfb .Keys (){_gceeg :=_aecfb .Get (_gaeca );_ccce .Names =append (_ccce .Names ,string (_gaeca ));_bedf ,_efcbf :=NewPdfColorspaceFromPdfObject (_gceeg );
if _efcbf !=nil {return nil ,_efcbf ;};_ccce .Colorspaces [string (_gaeca )]=_bedf ;};return _ccce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbea *PdfAnnotationStamp )ToPdfObject ()_gb .PdfObject {_bbea .PdfAnnotation .ToPdfObject ();_ggd :=_bbea ._gbac ;_afbe :=_ggd .PdfObject .(*_gb .PdfObjectDictionary );_bbea .PdfAnnotationMarkup .appendToPdfDictionary (_afbe );_afbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u0074\u0061m\u0070"));
_afbe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bbea .Name );return _ggd ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_gbef *Image )Resample (targetBitsPerComponent int64 ){if _gbef .BitsPerComponent ==targetBitsPerComponent {return ;};_bceg :=_gbef .GetSamples ();if targetBitsPerComponent < _gbef .BitsPerComponent {_aegcc :=_gbef .BitsPerComponent -targetBitsPerComponent ;
for _adcaa :=range _bceg {_bceg [_adcaa ]>>=uint (_aegcc );};}else if targetBitsPerComponent > _gbef .BitsPerComponent {_dgbeg :=targetBitsPerComponent -_gbef .BitsPerComponent ;for _fcadf :=range _bceg {_bceg [_fcadf ]<<=uint (_dgbeg );};};_gbef .BitsPerComponent =targetBitsPerComponent ;
if _gbef .BitsPerComponent < 8{_gbef .resampleLowBits (_bceg );return ;};_ebfcd :=_aag .BytesPerLine (int (_gbef .Width ),int (_gbef .BitsPerComponent ),_gbef .ColorComponents );_gefec :=make ([]byte ,_ebfcd *int (_gbef .Height ));var (_adea ,_fafb ,_faafg ,_cgdb int ;
_edaa uint32 ;);for _faafg =0;_faafg < int (_gbef .Height );_faafg ++{_adea =_faafg *_ebfcd ;_fafb =(_faafg +1)*_ebfcd -1;_faab :=_bad .ResampleUint32 (_bceg [_adea :_fafb ],int (targetBitsPerComponent ),8);for _cgdb ,_edaa =range _faab {_gefec [_cgdb +_adea ]=byte (_edaa );
};};_gbef .Data =_gefec ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_dcabd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_eagc ,_bfac :=color .(*PdfColorDeviceGray );if !_bfac {_ag .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_eagc ),float64 (*_eagc ),float64 (*_eagc )),nil ;};func (_ddd *PdfReader )newPdfActionJavaScriptFromDict (_dga *_gb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_dga .Get ("\u004a\u0053")},nil ;
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_aecf *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _aecf .MediaBox !=nil {return _aecf .MediaBox ,nil ;};_adfb :=_aecf .Parent ;for _adfb !=nil {_eddff ,_bbaaag :=_gb .GetDict (_adfb );if !_bbaaag {return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _deafa :=_eddff .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_deafa !=nil {_fgfbg ,_aefef :=_gb .GetArray (_deafa );if !_aefef {return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_befc ,_eafb :=NewPdfRectangle (*_fgfbg );if _eafb !=nil {return nil ,_eafb ;};return _befc ,nil ;};_adfb =_eddff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_dd .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_faba *PdfAnnotationCircle )ToPdfObject ()_gb .PdfObject {_faba .PdfAnnotation .ToPdfObject ();_ebgc :=_faba ._gbac ;_gee :=_ebgc .PdfObject .(*_gb .PdfObjectDictionary );_faba .PdfAnnotationMarkup .appendToPdfDictionary (_gee );_gee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_gee .SetIfNotNil ("\u0042\u0053",_faba .BS );_gee .SetIfNotNil ("\u0049\u0043",_faba .IC );_gee .SetIfNotNil ("\u0042\u0045",_faba .BE );_gee .SetIfNotNil ("\u0052\u0044",_faba .RD );return _ebgc ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_cbd *PdfAction )GetContext ()PdfModel {if _cbd ==nil {return nil ;};return _cbd ._eg ;};func (_bgdf *PdfAcroForm )fill (_egagb FieldValueProvider ,_bgfgg FieldAppearanceGenerator )error {if _bgdf ==nil {return nil ;};_dfbfe ,_dbea :=_egagb .FieldValues ();
if _dbea !=nil {return _dbea ;};for _ ,_fbfcc :=range _bgdf .AllFields (){_gafb :=_fbfcc .PartialName ();_ggbb ,_fcee :=_dfbfe [_gafb ];if !_fcee {if _ceace ,_bcdcg :=_fbfcc .FullName ();_bcdcg ==nil {_ggbb ,_fcee =_dfbfe [_ceace ];};};if !_fcee {_ag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gafb );
continue ;};if _gdgg :=_gcbec (_fbfcc ,_ggbb );_gdgg !=nil {return _gdgg ;};if _bgfgg ==nil {continue ;};for _ ,_baaf :=range _fbfcc .Annotations {_bcfef ,_gceag :=_bgfgg .GenerateAppearanceDict (_bgdf ,_fbfcc ,_baaf );if _gceag !=nil {return _gceag ;};
_baaf .AP =_bcfef ;_baaf .ToPdfObject ();};};return nil ;};func (_eced *PdfAppender )replaceObject (_cdfd ,_bbed _gb .PdfObject ){switch _fbdef :=_cdfd .(type ){case *_gb .PdfIndirectObject :_eced ._bdega [_bbed ]=_fbdef .ObjectNumber ;case *_gb .PdfObjectStream :_eced ._bdega [_bbed ]=_fbdef .ObjectNumber ;
};};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bebe *PdfFont )CharcodesToUnicodeWithStats (charcodes []_eaf .CharCode )(_gdb []rune ,_bgbdc ,_fdbaa int ){_acfe ,_bgbdc ,_fdbaa :=_bebe .CharcodesToStrings (charcodes );return []rune (_fcf .Join (_acfe ,"")),_bgbdc ,_fdbaa ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_afeae *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_bffdb :=NewPdfOutlineItem ();_bffdb .Title =_gb .MakeEncodedString (_afeae .Title ,true );_bffdb .Dest =_afeae .Dest .ToPdfObject ();var _ddfd []*PdfOutlineItem ;var _acec int64 ;
var _ageb *PdfOutlineItem ;for _ ,_gbfcd :=range _afeae .Entries {_dgdcb ,_bfbe :=_gbfcd .ToPdfOutlineItem ();_dgdcb .Parent =&_bffdb .PdfOutlineTreeNode ;if _ageb !=nil {_ageb .Next =&_dgdcb .PdfOutlineTreeNode ;_dgdcb .Prev =&_ageb .PdfOutlineTreeNode ;
};_ddfd =append (_ddfd ,_dgdcb );_acec +=_bfbe ;_ageb =_dgdcb ;};_eaeb :=len (_ddfd );_acec +=int64 (_eaeb );if _eaeb > 0{_bffdb .First =&_ddfd [0].PdfOutlineTreeNode ;_bffdb .Last =&_ddfd [_eaeb -1].PdfOutlineTreeNode ;_bffdb .Count =&_acec ;};return _bffdb ,_acec ;
};func (_acgc *PdfWriter )seekByName (_daebc _gb .PdfObject ,_dfgefg []string ,_bdaaa string )([]_gb .PdfObject ,error ){_ag .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_daebc );var _cgaca []_gb .PdfObject ;
if _agdbda ,_gffce :=_daebc .(*_gb .PdfIndirectObject );_gffce {return _acgc .seekByName (_agdbda .PdfObject ,_dfgefg ,_bdaaa );};if _dfaca ,_bgbf :=_daebc .(*_gb .PdfObjectStream );_bgbf {return _acgc .seekByName (_dfaca .PdfObjectDictionary ,_dfgefg ,_bdaaa );
};if _cfcaa ,_bafcd :=_daebc .(*_gb .PdfObjectDictionary );_bafcd {_ag .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_beefa :=range _cfcaa .Keys (){_cbgcb :=_cfcaa .Get (_beefa );if string (_beefa )==_bdaaa {_cgaca =append (_cgaca ,_cbgcb );};for _ ,_cgdba :=range _dfgefg {if string (_beefa )==_cgdba {_ag .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cgdba );
_ecbgf ,_cbgbb :=_acgc .seekByName (_cbgcb ,_dfgefg ,_bdaaa );if _cbgbb !=nil {return _cgaca ,_cbgbb ;};_cgaca =append (_cgaca ,_ecbgf ...);break ;};};};return _cgaca ,nil ;};return _cgaca ,nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bdeef FieldFlag )Has (fl FieldFlag )bool {return (_bdeef .Mask ()&fl .Mask ())> 0};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ccec *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ggcc :=_bad .NewReader (img .getBase ());_adeed :=_aag .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bfcbdd :=_bad .NewWriter (_adeed );
_bbeg :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_cbgg :=make ([]uint32 ,3);var (_eebe error ;_eece ,_adfg ,_fefcd ,_gfegg ,_cefg ,_cddg float64 ;);for {_eebe =_ggcc .ReadSamples (_cbgg );if _eebe ==_fg .EOF {break ;}else if _eebe !=nil {return img ,_eebe ;
};_eece =float64 (_cbgg [0])/_bbeg ;_adfg =float64 (_cbgg [1])/_bbeg ;_fefcd =float64 (_cbgg [2])/_bbeg ;_gfegg =_ccec .Matrix [0]*_ga .Pow (_eece ,_ccec .Gamma [0])+_ccec .Matrix [3]*_ga .Pow (_adfg ,_ccec .Gamma [1])+_ccec .Matrix [6]*_ga .Pow (_fefcd ,_ccec .Gamma [2]);
_cefg =_ccec .Matrix [1]*_ga .Pow (_eece ,_ccec .Gamma [0])+_ccec .Matrix [4]*_ga .Pow (_adfg ,_ccec .Gamma [1])+_ccec .Matrix [7]*_ga .Pow (_fefcd ,_ccec .Gamma [2]);_cddg =_ccec .Matrix [2]*_ga .Pow (_eece ,_ccec .Gamma [0])+_ccec .Matrix [5]*_ga .Pow (_adfg ,_ccec .Gamma [1])+_ccec .Matrix [8]*_ga .Pow (_fefcd ,_ccec .Gamma [2]);
_eece =3.240479*_gfegg +-1.537150*_cefg +-0.498535*_cddg ;_adfg =-0.969256*_gfegg +1.875992*_cefg +0.041556*_cddg ;_fefcd =0.055648*_gfegg +-0.204043*_cefg +1.057311*_cddg ;_eece =_ga .Min (_ga .Max (_eece ,0),1.0);_adfg =_ga .Min (_ga .Max (_adfg ,0),1.0);
_fefcd =_ga .Min (_ga .Max (_fefcd ,0),1.0);_cbgg [0]=uint32 (_eece *_bbeg );_cbgg [1]=uint32 (_adfg *_bbeg );_cbgg [2]=uint32 (_fefcd *_bbeg );if _eebe =_bfcbdd .WriteSamples (_cbgg );_eebe !=nil {return img ,_eebe ;};};return _dcgf (&_adeed ),nil ;};
func _deee (_bbaaa _gb .PdfObject )(PdfFunction ,error ){_bbaaa =_gb .ResolveReference (_bbaaa );if _dcdba ,_cebf :=_bbaaa .(*_gb .PdfObjectStream );_cebf {_efebf :=_dcdba .PdfObjectDictionary ;_agcee ,_afgg :=_efebf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gb .PdfObjectInteger );
if !_afgg {_ag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_dd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_agcee ==0{return _fdfb (_dcdba );}else if *_agcee ==4{return _dbecf (_dcdba );}else {return nil ,_dd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _facg ,_cbgfe :=_bbaaa .(*_gb .PdfIndirectObject );
_cbgfe {_dcbf ,_fdfab :=_facg .PdfObject .(*_gb .PdfObjectDictionary );if !_fdfab {_ag .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_dd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_fedgdf ,_fdfab :=_dcbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gb .PdfObjectInteger );
if !_fdfab {_ag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_dd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_fedgdf ==2{return _afegb (_facg );}else if *_fedgdf ==3{return _affbc (_facg );}else {return nil ,_dd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eegec ,_dfgc :=_bbaaa .(*_gb .PdfObjectDictionary );
_dfgc {_bgad ,_dcfg :=_eegec .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gb .PdfObjectInteger );if !_dcfg {_ag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_dd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bgad ==2{return _afegb (_eegec );}else if *_bgad ==3{return _affbc (_eegec );
}else {return nil ,_dd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ag .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_bbaaa );
return nil ,_dd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_cdbbb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _dgfbf []*PdfField ;if _cdbbb .AcroForm !=nil {_dgfbf =_cdbbb .AcroForm .AllFields ();};_eeedd :=make (map[*PdfField ]struct{},len (_dgfbf ));for _ ,_aafcc :=range _dgfbf {_eeedd [_aafcc ]=struct{}{};
};for _ ,_gabe :=range _cdbbb .PageList {_cbbgb ,_fabgd :=_gabe .GetAnnotations ();if _fabgd !=nil {return false ,_fabgd ;};for _ ,_bbfcd :=range _cbbgb {_abfdf ,_bccfc :=_bbfcd .GetContext ().(*PdfAnnotationWidget );if !_bccfc {continue ;};_cdcdb :=_abfdf .Field ();
if _cdcdb ==nil {return true ,nil ;};if _ ,_gffcb :=_eeedd [_cdcdb ];!_gffcb {return true ,nil ;};};};return false ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fgag *PdfPageResources )GetExtGState (keyName _gb .PdfObjectName )(_gb .PdfObject ,bool ){if _fgag .ExtGState ==nil {return nil ,false ;};_ebbfc ,_agbfbg :=_gb .TraceToDirectObject (_fgag .ExtGState ).(*_gb .PdfObjectDictionary );if !_agbfbg {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgag .ExtGState );
return nil ,false ;};if _bgbdcd :=_ebbfc .Get (keyName );_bgbdcd !=nil {return _bgbdcd ,true ;};return nil ,false ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_gbagf *XObjectImage )GetContainingPdfObject ()_gb .PdfObject {return _gbagf ._debde };

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_aedaa *PdfPageResources )HasXObjectByName (keyName _gb .PdfObjectName )bool {_gabfe ,_ :=_aedaa .GetXObjectByName (keyName );return _gabfe !=nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_eae :=NewPdfAction ();_cf :=&PdfActionSubmitForm {};_cf .PdfAction =_eae ;_eae .SetContext (_cf );return _cf ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dgag *PdfField )IsTerminal ()bool {return len (_dgag .Kids )==0};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _gb .PdfObject )(*PdfFont ,error ){return _gabf (fontObj ,true )};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dbbc *PdfColorspaceDeviceGray )ToPdfObject ()_gb .PdfObject {return _gb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_dggbe *_gb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_gb .PdfObjectName ;Filter *_gb .PdfObjectName ;SubFilter *_gb .PdfObjectName ;Contents *_gb .PdfObjectString ;Cert _gb .PdfObject ;ByteRange *_gb .PdfObjectArray ;Reference *_gb .PdfObjectArray ;Changes *_gb .PdfObjectArray ;Name *_gb .PdfObjectString ;
M *_gb .PdfObjectString ;Location *_gb .PdfObjectString ;Reason *_gb .PdfObjectString ;ContactInfo *_gb .PdfObjectString ;R *_gb .PdfObjectInteger ;V *_gb .PdfObjectInteger ;PropBuild *_gb .PdfObjectDictionary ;PropAuthTime *_gb .PdfObjectInteger ;PropAuthType *_gb .PdfObjectName ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gbbf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fabg :=vals [0];if _fabg < 0.0||_fabg > 1.0{_ag .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _fabg < 0.0{_fabg =0.0;}else if _fabg > 1.0{_fabg =1.0;};return NewPdfColorDeviceGray (_fabg ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebfe *PdfActionSetOCGState )ToPdfObject ()_gb .PdfObject {_ebfe .PdfAction .ToPdfObject ();_dbd :=_ebfe ._gae ;_bdc :=_dbd .PdfObject .(*_gb .PdfObjectDictionary );_bdc .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeSetOCGState )));_bdc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ebfe .State );
_bdc .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_ebfe .PreserveRB );return _dbd ;};

// C returns the value of the cyan component of the color.
func (_bege *PdfColorDeviceCMYK )C ()float64 {return _bege [0]};func _cebcb (_fbabd []byte )[]byte {const _fdacg =52845;const _aefc =22719;_bdfa :=55665;for _ ,_cfgcb :=range _fbabd [:4]{_bdfa =(int (_cfgcb )+_bdfa )*_fdacg +_aefc ;};_dgdaa :=make ([]byte ,len (_fbabd )-4);
for _bbgbf ,_edeac :=range _fbabd [4:]{_dgdaa [_bbgbf ]=byte (int (_edeac )^_bdfa >>8);_bdfa =(int (_edeac )+_bdfa )*_fdacg +_aefc ;};return _dgdaa ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _gb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_edde *PdfActionThread )ToPdfObject ()_gb .PdfObject {_edde .PdfAction .ToPdfObject ();_fabb :=_edde ._gae ;_ecf :=_fabb .PdfObject .(*_gb .PdfObjectDictionary );_ecf .SetIfNotNil ("\u0053",_gb .MakeName (string (ActionTypeThread )));if _edde .F !=nil {_ecf .Set ("\u0046",_edde .F .ToPdfObject ());
};_ecf .SetIfNotNil ("\u0044",_edde .D );_ecf .SetIfNotNil ("\u0042",_edde .B );return _fabb ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eeff *PdfPageResources )SetColorspaceByName (keyName _gb .PdfObjectName ,cs PdfColorspace )error {_eabbf ,_gddcb :=_eeff .GetColorspaces ();if _gddcb !=nil {_ag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gddcb );
return _gddcb ;};if _eabbf ==nil {_eabbf =NewPdfPageResourcesColorspaces ();_eeff .SetColorSpace (_eabbf );};_eabbf .Set (keyName ,cs );return nil ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cbdb *PdfReader )GetNamedDestinations ()(_gb .PdfObject ,error ){_facca :=_gb .ResolveReference (_cbdb ._ddecd .Get ("\u004e\u0061\u006de\u0073"));if _facca ==nil {return nil ,nil ;};if !_cbdb ._cddff {_dbbd :=_cbdb .traverseObjectData (_facca );
if _dbbd !=nil {return nil ,_dbbd ;};};return _facca ,nil ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_edcf *modelManager )GetModelFromPrimitive (primitive _gb .PdfObject )PdfModel {model ,_eaeee :=_edcf ._edebc [primitive ];if !_eaeee {return nil ;};return model ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _gb .StreamEncoder )(*XObjectImage ,error ){_badgc :=NewXObjectImage ();return UpdateXObjectImageFromImage (_badgc ,img ,cs ,encoder );};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_cafeb :=&PdfFilespec {};_cafeb ._fcaag =_gb .MakeIndirectObject (_gb .MakeDict ());return _cafeb ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_feca *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bgefa *PdfAcroForm )ToPdfObject ()_gb .PdfObject {_feaba :=_bgefa ._bfefd ;_dcfe :=_feaba .PdfObject .(*_gb .PdfObjectDictionary );if _bgefa .Fields !=nil {_fbdc :=_gb .PdfObjectArray {};for _ ,_dbdeb :=range *_bgefa .Fields {_eebf :=_dbdeb .GetContext ();
if _eebf !=nil {_fbdc .Append (_eebf .ToPdfObject ());}else {_fbdc .Append (_dbdeb .ToPdfObject ());};};_dcfe .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_fbdc );};if _bgefa .NeedAppearances !=nil {_dcfe .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bgefa .NeedAppearances );
};if _bgefa .SigFlags !=nil {_dcfe .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bgefa .SigFlags );};if _bgefa .CO !=nil {_dcfe .Set ("\u0043\u004f",_bgefa .CO );};if _bgefa .DR !=nil {_dcfe .Set ("\u0044\u0052",_bgefa .DR .ToPdfObject ());
};if _bgefa .DA !=nil {_dcfe .Set ("\u0044\u0041",_bgefa .DA );};if _bgefa .Q !=nil {_dcfe .Set ("\u0051",_bgefa .Q );};if _bgefa .XFA !=nil {_dcfe .Set ("\u0058\u0046\u0041",_bgefa .XFA );};return _feaba ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bagfc PdfModel ;_feag *_gb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_gb .PdfObjectName ;T *_gb .PdfObjectString ;TU *_gb .PdfObjectString ;TM *_gb .PdfObjectString ;Ff *_gb .PdfObjectInteger ;
V _gb .PdfObject ;DV _gb .PdfObject ;AA _gb .PdfObject ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_feeaf *PdfPageResources )GetXObjectImageByName (keyName _gb .PdfObjectName )(*XObjectImage ,error ){_ebcf ,_bcef :=_feeaf .GetXObjectByName (keyName );if _ebcf ==nil {return nil ,nil ;};if _bcef !=XObjectTypeImage {return nil ,_dd .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_gbadc ,_bfebe :=NewXObjectImageFromStream (_ebcf );if _bfebe !=nil {return nil ,_bfebe ;};return _gbadc ,nil ;};func (_aga *PdfReader )newPdfActionMovieFromDict (_eaec *_gb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_eaec .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_eaec .Get ("\u0054"),Operation :_eaec .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ebefb *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ag .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_dd .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_caee *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bage ,_decb :=color .(*PdfColorDeviceRGB );if !_decb {_ag .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_dd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bage ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dfafb *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _adeca []*PdfField ;_dcege :=map[*_gb .PdfIndirectObject ]struct{}{};for _ ,_ffbb :=range _dfafb .PageList {_bcab ,_ddecc :=_ffbb .GetAnnotations ();if _ddecc !=nil {return _ddecc ;
};for _ ,_dabcd :=range _bcab {var _ebfea *PdfField ;switch _bagc :=_dabcd .GetContext ().(type ){case *PdfAnnotationWidget :if _bagc ._cec !=nil {_ebfea =_bagc ._cec ;break ;};if _fddb ,_efebfb :=_gb .GetIndirect (_bagc .Parent );_efebfb {_ebfea ,_ddecc =_dfafb .newPdfFieldFromIndirectObject (_fddb ,nil );
if _ddecc ==nil {break ;};_ag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fddb ,_ddecc );
};if _bagc ._gbac !=nil {_ebfea ,_ddecc =_dfafb .newPdfFieldFromIndirectObject (_bagc ._gbac ,nil );if _ddecc ==nil {break ;};_ag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bagc ._gbac ,_ddecc );
};};if _ebfea ==nil {continue ;};if _ ,_ccfge :=_dcege [_ebfea ._feag ];_ccfge {continue ;};_dcege [_ebfea ._feag ]=struct{}{};_adeca =append (_adeca ,_ebfea );};};if len (_adeca )==0{return nil ;};if _dfafb .AcroForm ==nil {_dfafb .AcroForm =NewPdfAcroForm ();
};_dfafb .AcroForm .Fields =&_adeca ;return nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ea .PSProgram ;_debdd *_ea .PSExecutor ;_fgcb []byte ;_fgba *_gb .PdfObjectStream ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cdead *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdead .AlternateSpace ==nil {return nil ,_dd .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cdead .AlternateSpace .ColorToRGB (color );};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_becad *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _becad .Alternate ==nil {_ag .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _becad .N ==1{_ag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_egfc :=NewPdfColorspaceDeviceGray ();return _egfc .ColorToRGB (color );}else if _becad .N ==3{_ag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _becad .N ==4{_ag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_adgd :=NewPdfColorspaceDeviceCMYK ();return _adgd .ColorToRGB (color );}else {return nil ,_dd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ag .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_becad );
return _becad .Alternate .ColorToRGB (color );};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_acde *PdfColorspaceDeviceN )GetNumComponents ()int {return _acde .ColorantNames .Len ()};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_daddg *Image )SetSamples (samples []uint32 ){if _daddg .BitsPerComponent < 8{samples =_daddg .samplesAddPadding (samples );};_degg :=_bad .ResampleUint32 (samples ,int (_daddg .BitsPerComponent ),8);_ccccf :=make ([]byte ,len (_degg ));for _egec ,_ddfga :=range _degg {_ccccf [_egec ]=byte (_ddfga );
};_daddg .Data =_ccccf ;};func (_cgegb *Image )samplesAddPadding (_fbbcb []uint32 )[]uint32 {_ecegd :=_aag .BytesPerLine (int (_cgegb .Width ),int (_cgegb .BitsPerComponent ),_cgegb .ColorComponents )*(8/int (_cgegb .BitsPerComponent ));_caged :=_ecegd *int (_cgegb .Height );
if len (_fbbcb )==_caged {return _fbbcb ;};_bcaac :=make ([]uint32 ,_caged );_fgfce :=int (_cgegb .Width )*_cgegb .ColorComponents ;for _dgfb :=0;_dgfb < int (_cgegb .Height );_dgfb ++{_adbf :=_dgfb *int (_cgegb .Width );_adeab :=_dgfb *_ecegd ;for _adefc :=0;
_adefc < _fgfce ;_adefc ++{_bcaac [_adeab +_adefc ]=_fbbcb [_adbf +_adefc ];};};return _bcaac ;};func _fdfb (_gffa *_gb .PdfObjectStream )(*PdfFunctionType0 ,error ){_afeg :=&PdfFunctionType0 {};_afeg ._ecbgb =_gffa ;_ddfgc :=_gffa .PdfObjectDictionary ;
_beced ,_fbdcd :=_gb .TraceToDirectObject (_ddfgc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gb .PdfObjectArray );if !_fbdcd {_ag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _beced .Len ()< 0||_beced .Len ()%2!=0{_ag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_afeg .NumInputs =_beced .Len ()/2;_baace ,_eebb :=_beced .ToFloat64Array ();if _eebb !=nil {return nil ,_eebb ;};_afeg .Domain =_baace ;_beced ,_fbdcd =_gb .TraceToDirectObject (_ddfgc .Get ("\u0052\u0061\u006eg\u0065")).(*_gb .PdfObjectArray );if !_fbdcd {_ag .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _beced .Len ()< 0||_beced .Len ()%2!=0{return nil ,_dd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_afeg .NumOutputs =_beced .Len ()/2;_fafg ,_eebb :=_beced .ToFloat64Array ();if _eebb !=nil {return nil ,_eebb ;};_afeg .Range =_fafg ;_beced ,_fbdcd =_gb .TraceToDirectObject (_ddfgc .Get ("\u0053\u0069\u007a\u0065")).(*_gb .PdfObjectArray );if !_fbdcd {_ag .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eedd ,_eebb :=_beced .ToIntegerArray ();
if _eebb !=nil {return nil ,_eebb ;};if len (_eedd )!=_afeg .NumInputs {_ag .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afeg .Size =_eedd ;_fgeba ,_fbdcd :=_gb .TraceToDirectObject (_ddfgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_gb .PdfObjectInteger );
if !_fbdcd {_ag .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_dd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fgeba !=1&&*_fgeba !=2&&*_fgeba !=4&&*_fgeba !=8&&*_fgeba !=12&&*_fgeba !=16&&*_fgeba !=24&&*_fgeba !=32{_ag .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fgeba );
return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afeg .BitsPerSample =int (*_fgeba );_afeg .Order =1;_efdf ,_fbdcd :=_gb .TraceToDirectObject (_ddfgc .Get ("\u004f\u0072\u0064e\u0072")).(*_gb .PdfObjectInteger );
if _fbdcd {if *_efdf !=1&&*_efdf !=3{_ag .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_efdf );return nil ,_dd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afeg .Order =int (*_efdf );
};_beced ,_fbdcd =_gb .TraceToDirectObject (_ddfgc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gb .PdfObjectArray );if _fbdcd {_gagb ,_bcedcg :=_beced .ToFloat64Array ();if _bcedcg !=nil {return nil ,_bcedcg ;};_afeg .Encode =_gagb ;};_beced ,_fbdcd =_gb .TraceToDirectObject (_ddfgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_gb .PdfObjectArray );
if _fbdcd {_eeded ,_eecde :=_beced .ToFloat64Array ();if _eecde !=nil {return nil ,_eecde ;};_afeg .Decode =_eeded ;};_fcecd ,_eebb :=_gb .DecodeStream (_gffa );if _eebb !=nil {return nil ,_eebb ;};_afeg ._gfcfb =_fcecd ;return _afeg ,nil ;};func (_gge *PdfReader )newPdfActionHideFromDict (_ccg *_gb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_ccg .Get ("\u0054"),H :_ccg .Get ("\u0048")},nil ;
};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _gb .PdfObject ;FontFamily _gb .PdfObject ;FontStretch _gb .PdfObject ;FontWeight _gb .PdfObject ;Flags _gb .PdfObject ;FontBBox _gb .PdfObject ;ItalicAngle _gb .PdfObject ;Ascent _gb .PdfObject ;Descent _gb .PdfObject ;
Leading _gb .PdfObject ;CapHeight _gb .PdfObject ;XHeight _gb .PdfObject ;StemV _gb .PdfObject ;StemH _gb .PdfObject ;AvgWidth _gb .PdfObject ;MaxWidth _gb .PdfObject ;MissingWidth _gb .PdfObject ;FontFile _gb .PdfObject ;FontFile2 _gb .PdfObject ;FontFile3 _gb .PdfObject ;
CharSet _gb .PdfObject ;_ffgfd int ;_fffa float64 ;*fontFile ;_bbede *_ed .TtfType ;

// Additional entries for CIDFonts
Style _gb .PdfObject ;Lang _gb .PdfObject ;FD _gb .PdfObject ;CIDSet _gb .PdfObject ;_dcgc *_gb .PdfIndirectObject ;};

// AddOutlineTree adds outlines to a PDF file.
func (_dcgfdd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_dcgfdd ._acef =outlineTree ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ebcd *PdfPage )error ;};

// SetDate sets the `M` field of the signature.
func (_bfefgd *PdfSignature )SetDate (date _fag .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bfefgd .M =_gb .MakeString (date .Format (format ));
};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _fag .Time ){_cgabb .Lock ();defer _cgabb .Unlock ();_cdebd =creationDate ;};

// ImageToRGB convert an indexed image to RGB.
func (_abfg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_abfg .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_egd :=_aag .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._aggec ,img ._fbga );_agbfc :=_bad .NewReader (img .getBase ());_bdfd :=_bad .NewWriter (_egd );var (_dfdg uint32 ;_abff int ;_beac error ;);for {_dfdg ,_beac =_agbfc .ReadSample ();
if _beac ==_fg .EOF {break ;}else if _beac !=nil {return img ,_beac ;};_abff =int (_dfdg );_ag .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_abff ,N ,len (_abfg ._dbbf ));
if (_abff +1)*N > len (_abfg ._dbbf ){_abff =len (_abfg ._dbbf )/N -1;_ag .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_abff );if _abff < 0{_ag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _caab :=_abff *N ;_caab < (_abff +1)*N ;_caab ++{if _beac =_bdfd .WriteSample (uint32 (_abfg ._dbbf [_caab ]));_beac !=nil {return img ,_beac ;};};};return _abfg .Base .ImageToRGB (_dcgf (&_egd ));};type pdfFont interface{_ed .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_gb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_aggec []byte ;_fbga []float64 ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fdc :=NewPdfAnnotation ();_gfd :=&PdfAnnotationLink {};_gfd .PdfAnnotation =_fdc ;_fdc .SetContext (_gfd );return _gfd ;};

// ToPdfObject implements interface PdfModel.
func (_ebec *PdfAnnotationSound )ToPdfObject ()_gb .PdfObject {_ebec .PdfAnnotation .ToPdfObject ();_geae :=_ebec ._gbac ;_dbfb :=_geae .PdfObject .(*_gb .PdfObjectDictionary );_ebec .PdfAnnotationMarkup .appendToPdfDictionary (_dbfb );_dbfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0053\u006f\u0075n\u0064"));
_dbfb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ebec .Sound );_dbfb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebec .Name );return _geae ;};func (_ddabd *PdfWriter )addObject (_dgcdd _gb .PdfObject )bool {_acfgc :=_ddabd .hasObject (_dgcdd );if !_acfgc {_bagd :=_gb .ResolveReferencesDeep (_dgcdd ,_ddabd ._dagbf );
if _bagd !=nil {_ag .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_bagd );};_ddabd ._cccdf =append (_ddabd ._cccdf ,_dgcdd );_ddabd ._addef [_dgcdd ]=struct{}{};return true ;};return false ;
};func (_fbfbe *PdfReader )newPdfFieldSignatureFromDict (_bgfg *_gb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gcbe :=&PdfFieldSignature {};_ggga ,_fggaa :=_gb .GetIndirect (_bgfg .Get ("\u0056"));if _fggaa {var _fbdeg error ;_gcbe .V ,_fbdeg =_fbfbe .newPdfSignatureFromIndirect (_ggga );
if _fbdeg !=nil {return nil ,_fbdeg ;};};_gcbe .Lock ,_ =_gb .GetIndirect (_bgfg .Get ("\u004c\u006f\u0063\u006b"));_gcbe .SV ,_ =_gb .GetIndirect (_bgfg .Get ("\u0053\u0056"));return _gcbe ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gbad :=NewPdfAnnotation ();_acf :=&PdfAnnotationRedact {};_acf .PdfAnnotation =_gbad ;_acf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbad .SetContext (_acf );return _acf ;};

// B returns the value of the blue component of the color.
func (_gbeg *PdfColorDeviceRGB )B ()float64 {return _gbeg [2]};

// ToPdfObject implements interface PdfModel.
func (_bef *PdfAnnotationLink )ToPdfObject ()_gb .PdfObject {_bef .PdfAnnotation .ToPdfObject ();_bag :=_bef ._gbac ;_ceac :=_bag .PdfObject .(*_gb .PdfObjectDictionary );_ceac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u004c\u0069\u006e\u006b"));
if _bef ._ecad !=nil &&_bef ._ecad ._eg !=nil {_ceac .Set ("\u0041",_bef ._ecad ._eg .ToPdfObject ());}else if _bef .A !=nil {_ceac .Set ("\u0041",_bef .A );};_ceac .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bef .Dest );_ceac .SetIfNotNil ("\u0048",_bef .H );
_ceac .SetIfNotNil ("\u0050\u0041",_bef .PA );_ceac .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bef .QuadPoints );_ceac .SetIfNotNil ("\u0042\u0053",_bef .BS );return _bag ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_acegb :=appender .Reader .DSS ;if _acegb ==nil {_acegb =NewDSS ();};if _ccae :=_acegb .generateHashMaps ();_ccae !=nil {return nil ,_ccae ;};return &LTV {CertClient :_aff .NewCertClient (),OCSPClient :_aff .NewOCSPClient (),CRLClient :_aff .NewCRLClient (),SkipExisting :true ,_aaad :appender ,_agbda :_acegb },nil ;
};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ccccg *PdfAcroForm ,_acdcf *PdfField ,_bgfgf *PdfAnnotationWidget )(*_gb .PdfObjectDictionary ,error );};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_afe :=NewPdfAction ();_edd :=&PdfActionGoToR {};_edd .PdfAction =_afe ;_afe .SetContext (_edd );return _edd ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cdec *BorderStyle )GetPdfName ()string {switch *_cdec {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _gb .PdfObject ;FS _gb .PdfObject ;F _gb .PdfObject ;UF _gb .PdfObject ;DOS _gb .PdfObject ;Mac _gb .PdfObject ;Unix _gb .PdfObject ;ID _gb .PdfObject ;V _gb .PdfObject ;EF _gb .PdfObject ;RF _gb .PdfObject ;Desc _gb .PdfObject ;
CI _gb .PdfObject ;_fcaag _gb .PdfObject ;};

// Fill populates `form` with values provided by `provider`.
func (_eefea *PdfAcroForm )Fill (provider FieldValueProvider )error {return _eefea .fill (provider ,nil )};func (_cdfc *PdfReader )newPdfAnnotationInkFromDict (_ccd *_gb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cgaa :=PdfAnnotationInk {};_fdbb ,_dcaa :=_cdfc .newPdfAnnotationMarkupFromDict (_ccd );
if _dcaa !=nil {return nil ,_dcaa ;};_cgaa .PdfAnnotationMarkup =_fdbb ;_cgaa .InkList =_ccd .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cgaa .BS =_ccd .Get ("\u0042\u0053");return &_cgaa ,nil ;};func (_bebaf *PdfReader )newPdfOutlineItemFromIndirectObject (_bdbee *_gb .PdfIndirectObject )(*PdfOutlineItem ,error ){_geeef ,_dbgbf :=_bdbee .PdfObject .(*_gb .PdfObjectDictionary );
if !_dbgbf {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dceg :=NewPdfOutlineItem ();_accb :=_geeef .Get ("\u0054\u0069\u0074l\u0065");
if _accb ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_caba ,_aacb :=_gb .GetString (_accb );if !_aacb {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_accb );};_dceg .Title =_caba ;if _ccbbf :=_geeef .Get ("\u0043\u006f\u0075n\u0074");
_ccbbf !=nil {_fgfbd ,_cdbfd :=_ccbbf .(*_gb .PdfObjectInteger );if !_cdbfd {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_ccbbf );};_afbgc :=int64 (*_fgfbd );
_dceg .Count =&_afbgc ;};if _beefb :=_geeef .Get ("\u0044\u0065\u0073\u0074");_beefb !=nil {_dceg .Dest =_gb .ResolveReference (_beefb );if !_bebaf ._cddff {_decab :=_bebaf .traverseObjectData (_dceg .Dest );if _decab !=nil {return nil ,_decab ;};};};if _gebf :=_geeef .Get ("\u0041");
_gebf !=nil {_dceg .A =_gb .ResolveReference (_gebf );if !_bebaf ._cddff {_fecdc :=_bebaf .traverseObjectData (_dceg .A );if _fecdc !=nil {return nil ,_fecdc ;};};};if _cfff :=_geeef .Get ("\u0053\u0045");_cfff !=nil {_dceg .SE =nil ;};if _bebff :=_geeef .Get ("\u0043");
_bebff !=nil {_dceg .C =_gb .ResolveReference (_bebff );};if _adga :=_geeef .Get ("\u0046");_adga !=nil {_dceg .F =_gb .ResolveReference (_adga );};return _dceg ,nil ;};