//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_cd "bytes";_eba "crypto/md5";_ca "crypto/rand";_gd "crypto/sha1";_eb "crypto/x509";_ed "encoding/binary";_g "encoding/hex";_cc "errors";_f "fmt";_ff "github.com/unidoc/pkcs7";_bc "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/core";
_ef "github.com/unidoc/unipdf/v3/core/security";_gg "github.com/unidoc/unipdf/v3/core/security/crypt";_cag "github.com/unidoc/unipdf/v3/internal/cmap";_dg "github.com/unidoc/unipdf/v3/internal/imageutil";_ebd "github.com/unidoc/unipdf/v3/internal/license";
_df "github.com/unidoc/unipdf/v3/internal/sampling";_ad "github.com/unidoc/unipdf/v3/internal/textencoding";_fgc "github.com/unidoc/unipdf/v3/internal/timeutils";_cca "github.com/unidoc/unipdf/v3/internal/transform";_ga "github.com/unidoc/unipdf/v3/model/internal/docutil";
_af "github.com/unidoc/unipdf/v3/model/internal/fonts";_cec "github.com/unidoc/unipdf/v3/model/sigutil";_edab "github.com/unidoc/unipdf/v3/ps";_ffd "github.com/unidoc/unitype";_ac "golang.org/x/xerrors";_bf "hash";_fe "image";_ea "image/color";_ "image/gif";
_ "image/png";_eda "io";_fg "io/ioutil";_bb "math";_gb "math/rand";_ce "os";_fcf "regexp";_fb "sort";_ge "strconv";_eaf "strings";_e "sync";_a "time";_d "unicode";_ee "unicode/utf8";);

// Encoder returns the font's text encoder.
func (_gaag *PdfFont )Encoder ()_ad .TextEncoder {_cegce :=_gaag .actualFont ();if _cegce ==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_gaag ._dfaba );
return nil ;};return _cegce .Encoder ();};func _edcb (_gdbbc _cg .PdfObject )(*PdfBorderStyle ,error ){_abea :=&PdfBorderStyle {};_abea ._ffcc =_gdbbc ;var _gdg *_cg .PdfObjectDictionary ;_gdbbc =_cg .TraceToDirectObject (_gdbbc );_gdg ,_dedc :=_gdbbc .(*_cg .PdfObjectDictionary );
if !_dedc {return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ffdef :=_gdg .Get ("\u0054\u0079\u0070\u0065");_ffdef !=nil {_ggcd ,_bbad :=_ffdef .(*_cg .PdfObjectName );if !_bbad {_bc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ffdef );
}else {if *_ggcd !="\u0042\u006f\u0072\u0064\u0065\u0072"{_bc .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ggcd );};};};if _bbgec :=_gdg .Get ("\u0057");
_bbgec !=nil {_egcd ,_agcf :=_cg .GetNumberAsFloat (_bbgec );if _agcf !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_agcf );return nil ,_agcf ;};_abea .W =&_egcd ;
};if _gagd :=_gdg .Get ("\u0053");_gagd !=nil {_ccbg ,_fcdf :=_gagd .(*_cg .PdfObjectName );if !_fcdf {return nil ,_cc .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _gadd BorderStyle ;switch *_ccbg {case "\u0053":_gadd =BorderStyleSolid ;case "\u0044":_gadd =BorderStyleDashed ;case "\u0042":_gadd =BorderStyleBeveled ;case "\u0049":_gadd =BorderStyleInset ;case "\u0055":_gadd =BorderStyleUnderline ;default:_bc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ccbg );
return nil ,_cc .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_abea .S =&_gadd ;};if _affc :=_gdg .Get ("\u0044");_affc !=nil {_cgeb ,_egaf :=_affc .(*_cg .PdfObjectArray );
if !_egaf {_bc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_affc );return nil ,_cc .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_gacg ,_ggab :=_cgeb .ToIntegerArray ();if _ggab !=nil {_bc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_ggab );
return nil ,_ggab ;};_abea .D =&_gacg ;};return _abea ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_faff *DSS )GetContainingPdfObject ()_cg .PdfObject {return _faff ._gedb };

// GetOptimizer returns current PDF optimizer.
func (_aaacc *PdfWriter )GetOptimizer ()Optimizer {return _aaacc ._ecgdg };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _cg .PdfObject ;Name _cg .PdfObject ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_beaae *PdfOutline )ToPdfObject ()_cg .PdfObject {_baba :=_beaae ._ccgb ;_cfcdd :=_baba .PdfObject .(*_cg .PdfObjectDictionary );_cfcdd .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _beaae .First !=nil {_cfcdd .Set ("\u0046\u0069\u0072s\u0074",_beaae .First .ToPdfObject ());
};if _beaae .Last !=nil {_cfcdd .Set ("\u004c\u0061\u0073\u0074",_beaae .Last .GetContext ().GetContainingPdfObject ());};if _beaae .Parent !=nil {_cfcdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_beaae .Parent .GetContext ().GetContainingPdfObject ());
};if _beaae .Count !=nil {_cfcdd .Set ("\u0043\u006f\u0075n\u0074",_cg .MakeInteger (*_beaae .Count ));};return _baba ;};func (_dffeb *PdfPattern )getDict ()*_cg .PdfObjectDictionary {if _afcc ,_fegg :=_dffeb ._edebc .(*_cg .PdfIndirectObject );_fegg {_ageeg ,_badaff :=_afcc .PdfObject .(*_cg .PdfObjectDictionary );
if !_badaff {return nil ;};return _ageeg ;}else if _gegc ,_ceffb :=_dffeb ._edebc .(*_cg .PdfObjectStream );_ceffb {return _gegc .PdfObjectDictionary ;}else {_bc .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dffeb ._edebc );
return nil ;};};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _cg .PdfObject ;H _cg .PdfObject ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_ebgfa *LTV )Enable (sig *PdfSignature ,extraCerts []*_eb .Certificate )error {if _decbb :=_ebgfa .validateSig (sig );_decbb !=nil {return _decbb ;};_gbada ,_bgba :=_ebgfa .generateVRIKey (sig );if _bgba !=nil {return _bgba ;};if _ ,_fbaed :=_ebgfa ._cbaeg .VRI [_gbada ];
_fbaed &&_ebgfa .SkipExisting {return nil ;};_eceb ,_bgba :=sig .GetCerts ();if _bgba !=nil {return _bgba ;};return _ebgfa .enable (_eceb ,extraCerts ,_gbada );};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_aeda *PdfAppender )UpdateObject (obj _cg .PdfObject ){_aeda .replaceObject (obj ,obj );if _ ,_adgg :=_aeda ._gdcc [obj ];!_adgg {_aeda ._eegc =append (_aeda ._eegc ,obj );_aeda ._gdcc [obj ]=struct{}{};};};var _ pdfFont =(*pdfCIDFontType0 )(nil );
type pdfCIDFontType0 struct{fontCommon ;_affe *_cg .PdfIndirectObject ;_fbded _ad .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_cg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cg .PdfObject ;W _cg .PdfObject ;DW2 _cg .PdfObject ;W2 _cg .PdfObject ;_eggf map[_ad .CharCode ]float64 ;_dgcb float64 ;};var ErrColorOutOfRange =_cc .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
func _dgaa (_cdca StdFontName )(pdfFontSimple ,error ){_dgfdb ,_gecc :=_af .NewStdFontByName (_cdca );if !_gecc {return pdfFontSimple {},ErrFontNotSupported ;};_aeagd :=_abgd (_dgfdb );return _aeagd ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gdfee pdfFontType0 )GetCharMetrics (code _ad .CharCode )(_af .CharMetrics ,bool ){if _gdfee .DescendantFont ==nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gdfee );
return _af .CharMetrics {},false ;};return _gdfee .DescendantFont .GetCharMetrics (code );};func (_eeg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bcbb *_cg .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_fbbc :=PdfAnnotationFileAttachment {};
_beda ,_caae :=_eeg .newPdfAnnotationMarkupFromDict (_bcbb );if _caae !=nil {return nil ,_caae ;};_fbbc .PdfAnnotationMarkup =_beda ;_fbbc .FS =_bcbb .Get ("\u0046\u0053");_fbbc .Name =_bcbb .Get ("\u004e\u0061\u006d\u0065");return &_fbbc ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dfdc *PdfColorLab )GetNumComponents ()int {return 3};func (_ccg *PdfReader )newPdfActionFromIndirectObject (_bcc *_cg .PdfIndirectObject )(*PdfAction ,error ){_bbfc ,_gbd :=_bcc .PdfObject .(*_cg .PdfObjectDictionary );if !_gbd {return nil ,_f .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ccg ._ecgd .GetModelFromPrimitive (_bbfc );model !=nil {_abb ,_fea :=model .(*PdfAction );if !_fea {return nil ,_f .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _abb ,nil ;};_efa :=&PdfAction {};_efa ._eab =_bcc ;_ccg ._ecgd .Register (_bbfc ,_efa );if _fga :=_bbfc .Get ("\u0054\u0079\u0070\u0065");_fga !=nil {_fcff ,_cf :=_fga .(*_cg .PdfObjectName );if !_cf {_bc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fga );
}else {if *_fcff !="\u0041\u0063\u0074\u0069\u006f\u006e"{_bc .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_fcff );
};_efa .Type =_fcff ;};};if _cgc :=_bbfc .Get ("\u004e\u0065\u0078\u0074");_cgc !=nil {_efa .Next =_cgc ;};if _fgee :=_bbfc .Get ("\u0053");_fgee !=nil {_efa .S =_fgee ;};_eg ,_ggd :=_efa .S .(*_cg .PdfObjectName );if !_ggd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efa .S );
return nil ,_f .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efa .S );};_ggc :=PdfActionType (_eg .String ());switch _ggc {case ActionTypeGoTo :_gag ,_aeg :=_ccg .newPdfActionGotoFromDict (_bbfc );
if _aeg !=nil {return nil ,_aeg ;};_gag .PdfAction =_efa ;_efa ._eee =_gag ;return _efa ,nil ;case ActionTypeGoToR :_bff ,_cdf :=_ccg .newPdfActionGotoRFromDict (_bbfc );if _cdf !=nil {return nil ,_cdf ;};_bff .PdfAction =_efa ;_efa ._eee =_bff ;return _efa ,nil ;
case ActionTypeGoToE :_edac ,_ecg :=_ccg .newPdfActionGotoEFromDict (_bbfc );if _ecg !=nil {return nil ,_ecg ;};_edac .PdfAction =_efa ;_efa ._eee =_edac ;return _efa ,nil ;case ActionTypeLaunch :_dcg ,_bcg :=_ccg .newPdfActionLaunchFromDict (_bbfc );if _bcg !=nil {return nil ,_bcg ;
};_dcg .PdfAction =_efa ;_efa ._eee =_dcg ;return _efa ,nil ;case ActionTypeThread :_gc ,_caf :=_ccg .newPdfActionThreadFromDict (_bbfc );if _caf !=nil {return nil ,_caf ;};_gc .PdfAction =_efa ;_efa ._eee =_gc ;return _efa ,nil ;case ActionTypeURI :_dae ,_aca :=_ccg .newPdfActionURIFromDict (_bbfc );
if _aca !=nil {return nil ,_aca ;};_dae .PdfAction =_efa ;_efa ._eee =_dae ;return _efa ,nil ;case ActionTypeSound :_adfe ,_cage :=_ccg .newPdfActionSoundFromDict (_bbfc );if _cage !=nil {return nil ,_cage ;};_adfe .PdfAction =_efa ;_efa ._eee =_adfe ;
return _efa ,nil ;case ActionTypeMovie :_fff ,_fae :=_ccg .newPdfActionMovieFromDict (_bbfc );if _fae !=nil {return nil ,_fae ;};_fff .PdfAction =_efa ;_efa ._eee =_fff ;return _efa ,nil ;case ActionTypeHide :_fgcg ,_bdb :=_ccg .newPdfActionHideFromDict (_bbfc );
if _bdb !=nil {return nil ,_bdb ;};_fgcg .PdfAction =_efa ;_efa ._eee =_fgcg ;return _efa ,nil ;case ActionTypeNamed :_fcfg ,_eede :=_ccg .newPdfActionNamedFromDict (_bbfc );if _eede !=nil {return nil ,_eede ;};_fcfg .PdfAction =_efa ;_efa ._eee =_fcfg ;
return _efa ,nil ;case ActionTypeSubmitForm :_ffa ,_cbe :=_ccg .newPdfActionSubmitFormFromDict (_bbfc );if _cbe !=nil {return nil ,_cbe ;};_ffa .PdfAction =_efa ;_efa ._eee =_ffa ;return _efa ,nil ;case ActionTypeResetForm :_bba ,_dff :=_ccg .newPdfActionResetFormFromDict (_bbfc );
if _dff !=nil {return nil ,_dff ;};_bba .PdfAction =_efa ;_efa ._eee =_bba ;return _efa ,nil ;case ActionTypeImportData :_gfa ,_agdc :=_ccg .newPdfActionImportDataFromDict (_bbfc );if _agdc !=nil {return nil ,_agdc ;};_gfa .PdfAction =_efa ;_efa ._eee =_gfa ;
return _efa ,nil ;case ActionTypeSetOCGState :_eca ,_cfa :=_ccg .newPdfActionSetOCGStateFromDict (_bbfc );if _cfa !=nil {return nil ,_cfa ;};_eca .PdfAction =_efa ;_efa ._eee =_eca ;return _efa ,nil ;case ActionTypeRendition :_bg ,_edd :=_ccg .newPdfActionRenditionFromDict (_bbfc );
if _edd !=nil {return nil ,_edd ;};_bg .PdfAction =_efa ;_efa ._eee =_bg ;return _efa ,nil ;case ActionTypeTrans :_ada ,_ace :=_ccg .newPdfActionTransFromDict (_bbfc );if _ace !=nil {return nil ,_ace ;};_ada .PdfAction =_efa ;_efa ._eee =_ada ;return _efa ,nil ;
case ActionTypeGoTo3DView :_fcfd ,_dgd :=_ccg .newPdfActionGoTo3DViewFromDict (_bbfc );if _dgd !=nil {return nil ,_dgd ;};_fcfd .PdfAction =_efa ;_efa ._eee =_fcfd ;return _efa ,nil ;case ActionTypeJavaScript :_dfff ,_gga :=_ccg .newPdfActionJavaScriptFromDict (_bbfc );
if _gga !=nil {return nil ,_gga ;};_dfff .PdfAction =_efa ;_efa ._eee =_dfff ;return _efa ,nil ;};_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ggc );
return nil ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_dbcc *PdfColorspaceICCBased )ToPdfObject ()_cg .PdfObject {_cgfg :=&_cg .PdfObjectArray {};_cgfg .Append (_cg .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _baca *_cg .PdfObjectStream ;if _dbcc ._bdbd !=nil {_baca =_dbcc ._bdbd ;
}else {_baca =&_cg .PdfObjectStream {};};_dfgf :=_cg .MakeDict ();_dfgf .Set ("\u004e",_cg .MakeInteger (int64 (_dbcc .N )));if _dbcc .Alternate !=nil {_dfgf .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_dbcc .Alternate .ToPdfObject ());};if _dbcc .Metadata !=nil {_dfgf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dbcc .Metadata );
};if _dbcc .Range !=nil {var _eabf []_cg .PdfObject ;for _ ,_begb :=range _dbcc .Range {_eabf =append (_eabf ,_cg .MakeFloat (_begb ));};_dfgf .Set ("\u0052\u0061\u006eg\u0065",_cg .MakeArray (_eabf ...));};_dfgf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_dbcc .Data ))));
_baca .Stream =_dbcc .Data ;_baca .PdfObjectDictionary =_dfgf ;_cgfg .Append (_baca );if _dbcc ._gddc !=nil {_dbcc ._gddc .PdfObject =_cgfg ;return _dbcc ._gddc ;};return _cgfg ;};

// GetCerts returns the signature certificate chain.
func (_bdeeg *PdfSignature )GetCerts ()([]*_eb .Certificate ,error ){var _daafb []func ()([]*_eb .Certificate ,error );switch _aafca ,_ :=_cg .GetNameVal (_bdeeg .SubFilter );_aafca {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_daafb =append (_daafb ,_bdeeg .extractChainFromPKCS7 ,_bdeeg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_daafb =append (_daafb ,_bdeeg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_daafb =append (_daafb ,_bdeeg .extractChainFromPKCS7 );
default:return nil ,_f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_aafca );};for _ ,_ccfbc :=range _daafb {_cgbcb ,_ecea :=_ccfbc ();if _ecea !=nil {return nil ,_ecea ;
};if len (_cgbcb )> 0{return _cgbcb ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject implements interface PdfModel.
func (_dded *PdfAnnotationFileAttachment )ToPdfObject ()_cg .PdfObject {_dded .PdfAnnotation .ToPdfObject ();_cbbc :=_dded ._bgf ;_gca :=_cbbc .PdfObject .(*_cg .PdfObjectDictionary );_dded .PdfAnnotationMarkup .appendToPdfDictionary (_gca );_gca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_gca .SetIfNotNil ("\u0046\u0053",_dded .FS );_gca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dded .Name );return _cbbc ;};func (_aebdf *PdfFunctionType0 )processSamples ()error {_egbcg :=_df .ResampleBytes (_aebdf ._bbfb ,_aebdf .BitsPerSample );_aebdf ._fagbf =_egbcg ;
return nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bgada *PdfShading )GetContainingPdfObject ()_cg .PdfObject {return _bgada ._cagea };func (_ggdeb *PdfReader )newPdfPageFromDict (_bdee *_cg .PdfObjectDictionary )(*PdfPage ,error ){_daae :=NewPdfPage ();_daae ._egge =_bdee ;_ecaca :=*_bdee ;_eaagd ,_fgdaf :=_ecaca .Get ("\u0054\u0079\u0070\u0065").(*_cg .PdfObjectName );
if !_fgdaf {return nil ,_cc .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_eaagd !="\u0050\u0061\u0067\u0065"{return nil ,_cc .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _adccg :=_ecaca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_adccg !=nil {_daae .Parent =_adccg ;};if _fbddc :=_ecaca .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fbddc !=nil {_debfg ,_fageb :=_cg .GetString (_fbddc );
if !_fageb {return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_ffcfg ,_aefgb :=NewPdfDate (_debfg .Str ());if _aefgb !=nil {return nil ,_aefgb ;};_daae .LastModified =&_ffcfg ;};if _cgace :=_ecaca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cgace !=nil &&!_cg .IsNullObject (_cgace ){_eeac ,_gcfda :=_cg .GetDict (_cgace );
if !_gcfda {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cgace );};var _gdgcc error ;_daae .Resources ,_gdgcc =NewPdfPageResourcesFromDict (_eeac );
if _gdgcc !=nil {return nil ,_gdgcc ;};}else {_fada ,_edadff :=_daae .getParentResources ();if _edadff !=nil {return nil ,_edadff ;};if _fada ==nil {_fada =NewPdfPageResources ();};_daae .Resources =_fada ;};if _cace :=_ecaca .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cace !=nil {_dfbfa ,_fdae :=_cg .GetArray (_cace );if !_fdae {return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dgde error ;
_daae .MediaBox ,_dgde =NewPdfRectangle (*_dfbfa );if _dgde !=nil {return nil ,_dgde ;};};if _agafa :=_ecaca .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_agafa !=nil {_gaeda ,_cgdbb :=_cg .GetArray (_agafa );if !_cgdbb {return nil ,_cc .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _eaedb error ;_daae .CropBox ,_eaedb =NewPdfRectangle (*_gaeda );if _eaedb !=nil {return nil ,_eaedb ;};};if _fbga :=_ecaca .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_fbga !=nil {_feabb ,_dbdcc :=_cg .GetArray (_fbga );if !_dbdcc {return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _cfegg error ;_daae .BleedBox ,_cfegg =NewPdfRectangle (*_feabb );if _cfegg !=nil {return nil ,_cfegg ;};};if _agaba :=_ecaca .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_agaba !=nil {_cadee ,_adbbc :=_cg .GetArray (_agaba );if !_adbbc {return nil ,_cc .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fgaaf error ;_daae .TrimBox ,_fgaaf =NewPdfRectangle (*_cadee );if _fgaaf !=nil {return nil ,_fgaaf ;};};if _cbafb :=_ecaca .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cbafb !=nil {_ffadf ,_bgbda :=_cg .GetArray (_cbafb );if !_bgbda {return nil ,_cc .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _adfdf error ;_daae .ArtBox ,_adfdf =NewPdfRectangle (*_ffadf );if _adfdf !=nil {return nil ,_adfdf ;};};if _fgabe :=_ecaca .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fgabe !=nil {_daae .BoxColorInfo =_fgabe ;};
if _aaaa :=_ecaca .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_aaaa !=nil {_daae .Contents =_aaaa ;};if _ebfbd :=_ecaca .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ebfbd !=nil {_eaae ,_dfcda :=_cg .GetNumberAsInt64 (_ebfbd );if _dfcda !=nil {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_daae .Rotate =&_eaae ;};if _daffc :=_ecaca .Get ("\u0047\u0072\u006fu\u0070");_daffc !=nil {_daae .Group =_daffc ;};if _dbec :=_ecaca .Get ("\u0054\u0068\u0075m\u0062");_dbec !=nil {_daae .Thumb =_dbec ;};if _cfefd :=_ecaca .Get ("\u0042");_cfefd !=nil {_daae .B =_cfefd ;
};if _ddcef :=_ecaca .Get ("\u0044\u0075\u0072");_ddcef !=nil {_daae .Dur =_ddcef ;};if _aaeff :=_ecaca .Get ("\u0054\u0072\u0061n\u0073");_aaeff !=nil {_daae .Trans =_aaeff ;};if _dddba :=_ecaca .Get ("\u0041\u0041");_dddba !=nil {_daae .AA =_dddba ;};
if _gedcb :=_ecaca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gedcb !=nil {_daae .Metadata =_gedcb ;};if _afcgg :=_ecaca .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_afcgg !=nil {_daae .PieceInfo =_afcgg ;};if _dfgeg :=_ecaca .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_dfgeg !=nil {_daae .StructParents =_dfgeg ;};if _cbffb :=_ecaca .Get ("\u0049\u0044");_cbffb !=nil {_daae .ID =_cbffb ;};if _dbdde :=_ecaca .Get ("\u0050\u005a");_dbdde !=nil {_daae .PZ =_dbdde ;};if _gfega :=_ecaca .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_gfega !=nil {_daae .SeparationInfo =_gfega ;};if _eeagg :=_ecaca .Get ("\u0054\u0061\u0062\u0073");_eeagg !=nil {_daae .Tabs =_eeagg ;};if _gcgdg :=_ecaca .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_gcgdg !=nil {_daae .TemplateInstantiated =_gcgdg ;};if _ebcaf :=_ecaca .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ebcaf !=nil {_daae .PresSteps =_ebcaf ;};if _dfcab :=_ecaca .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dfcab !=nil {_daae .UserUnit =_dfcab ;
};if _eceee :=_ecaca .Get ("\u0056\u0050");_eceee !=nil {_daae .VP =_eceee ;};if _egabd :=_ecaca .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_egabd !=nil {_daae .Annots =_egabd ;};_daae ._dfef =_ggdeb ;return _daae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdfg *PdfActionSetOCGState )ToPdfObject ()_cg .PdfObject {_fdfg .PdfAction .ToPdfObject ();_cbg :=_fdfg ._eab ;_adf :=_cbg .PdfObject .(*_cg .PdfObjectDictionary );_adf .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeSetOCGState )));_adf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fdfg .State );
_adf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_fdfg .PreserveRB );return _cbg ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};var _gcbf =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func _efcf (_eebee _cg .PdfObject )(*PdfColorspaceICCBased ,error ){_efef :=&PdfColorspaceICCBased {};if _gaada ,_egca :=_eebee .(*_cg .PdfIndirectObject );_egca {_efef ._gddc =_gaada ;};_eebee =_cg .TraceToDirectObject (_eebee );_gabf ,_edbc :=_eebee .(*_cg .PdfObjectArray );
if !_edbc {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gabf .Len ()!=2{return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_eebee =_cg .TraceToDirectObject (_gabf .Get (0));_gddbe ,_edbc :=_eebee .(*_cg .PdfObjectName );if !_edbc {return nil ,_f .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_gddbe !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_f .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_eebee =_gabf .Get (1);
_baae ,_edbc :=_cg .GetStream (_eebee );if !_edbc {_bc .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_eebee );
return nil ,_f .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dggc :=_baae .PdfObjectDictionary ;_ffgc ,_edbc :=_dggc .Get ("\u004e").(*_cg .PdfObjectInteger );
if !_edbc {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ffgc !=1&&*_ffgc !=3&&*_ffgc !=4{return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_efef .N =int (*_ffgc );if _dccad :=_dggc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dccad !=nil {_ddbg ,_cbed :=NewPdfColorspaceFromPdfObject (_dccad );if _cbed !=nil {return nil ,_cbed ;};_efef .Alternate =_ddbg ;};if _ggbcf :=_dggc .Get ("\u0052\u0061\u006eg\u0065");
_ggbcf !=nil {_ggbcf =_cg .TraceToDirectObject (_ggbcf );_adbcf ,_gegg :=_ggbcf .(*_cg .PdfObjectArray );if !_gegg {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _adbcf .Len ()!=2*_efef .N {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_dgga ,_cefg :=_adbcf .GetAsFloat64Slice ();if _cefg !=nil {return nil ,_cefg ;};_efef .Range =_dgga ;}else {_efef .Range =make ([]float64 ,2*_efef .N );for _adfc :=0;_adfc < _efef .N ;_adfc ++{_efef .Range [2*_adfc ]=0.0;_efef .Range [2*_adfc +1]=1.0;
};};if _begac :=_dggc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_begac !=nil {_cfde ,_cfgdb :=_begac .(*_cg .PdfObjectStream );if !_cfgdb {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_efef .Metadata =_cfde ;};_bgea ,_cbcag :=_cg .DecodeStream (_baae );if _cbcag !=nil {return nil ,_cbcag ;};_efef .Data =_bgea ;_efef ._bdbd =_baae ;return _efef ,nil ;};

// M returns the value of the magenta component of the color.
func (_aaac *PdfColorDeviceCMYK )M ()float64 {return _aaac [1]};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fgb :=NewPdfAction ();_bcd :=&PdfActionMovie {};_bcd .PdfAction =_fgb ;_fgb .SetContext (_bcd );return _bcd ;};

// ToPdfObject implements interface PdfModel.
func (_aed *PdfActionHide )ToPdfObject ()_cg .PdfObject {_aed .PdfAction .ToPdfObject ();_dbc :=_aed ._eab ;_fge :=_dbc .PdfObject .(*_cg .PdfObjectDictionary );_fge .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeHide )));_fge .SetIfNotNil ("\u0054",_aed .T );
_fge .SetIfNotNil ("\u0048",_aed .H );return _dbc ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_cg .PdfObjectArray ;Domain *_cg .PdfObjectArray ;Function []PdfFunction ;Extend *_cg .PdfObjectArray ;};

// SetReason sets the `Reason` field of the signature.
func (_dbcded *PdfSignature )SetReason (reason string ){_dbcded .Reason =_cg .MakeString (reason )};func (_cafg *PdfReader )newPdfAnnotationHighlightFromDict (_aedd *_cg .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_daa :=PdfAnnotationHighlight {};
_abff ,_abbb :=_cafg .newPdfAnnotationMarkupFromDict (_aedd );if _abbb !=nil {return nil ,_abbb ;};_daa .PdfAnnotationMarkup =_abff ;_daa .QuadPoints =_aedd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_daa ,nil ;};func (_agde *PdfReader )newPdfFieldFromIndirectObject (_egde *_cg .PdfIndirectObject ,_egebd *PdfField )(*PdfField ,error ){if _fdbeg ,_abdcg :=_agde ._ecgd .GetModelFromPrimitive (_egde ).(*PdfField );
_abdcg {return _fdbeg ,nil ;};_daaba ,_badaf :=_cg .GetDict (_egde );if !_badaf {return nil ,_f .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cfff :=NewPdfField ();_cfff ._edge =_egde ;_cfff ._edge .PdfObject =_daaba ;if _cebe ,_bggc :=_cg .GetName (_daaba .Get ("\u0046\u0054"));_bggc {_cfff .FT =_cebe ;};if _egebd !=nil {_cfff .Parent =_egebd ;};_cfff .T ,_ =_daaba .Get ("\u0054").(*_cg .PdfObjectString );
_cfff .TU ,_ =_daaba .Get ("\u0054\u0055").(*_cg .PdfObjectString );_cfff .TM ,_ =_daaba .Get ("\u0054\u004d").(*_cg .PdfObjectString );_cfff .Ff ,_ =_daaba .Get ("\u0046\u0066").(*_cg .PdfObjectInteger );_cfff .V =_daaba .Get ("\u0056");_cfff .DV =_daaba .Get ("\u0044\u0056");
_cfff .AA =_daaba .Get ("\u0041\u0041");if DA :=_daaba .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_cg .GetString (DA );_cfff .VariableText =&VariableText {DA :DA };Q ,_ :=_daaba .Get ("\u0051").(*_cg .PdfObjectInteger );DS ,_ :=_daaba .Get ("\u0044\u0053").(*_cg .PdfObjectString );
RV :=_daaba .Get ("\u0052\u0056");_cfff .VariableText .Q =Q ;_cfff .VariableText .DS =DS ;_cfff .VariableText .RV =RV ;};_cabf :=_cfff .FT ;if _cabf ==nil &&_egebd !=nil {_cabf =_egebd .FT ;};if _cabf !=nil {switch *_cabf {case "\u0054\u0078":_ceff ,_geca :=_gdab (_daaba );
if _geca !=nil {return nil ,_geca ;};_ceff .PdfField =_cfff ;_cfff ._bffcb =_ceff ;case "\u0043\u0068":_ggeg ,_gabc :=_dgec (_daaba );if _gabc !=nil {return nil ,_gabc ;};_ggeg .PdfField =_cfff ;_cfff ._bffcb =_ggeg ;case "\u0042\u0074\u006e":_gdebf ,_bgeaf :=_ffffd (_daaba );
if _bgeaf !=nil {return nil ,_bgeaf ;};_gdebf .PdfField =_cfff ;_cfff ._bffcb =_gdebf ;case "\u0053\u0069\u0067":_dede ,_bafc :=_agde .newPdfFieldSignatureFromDict (_daaba );if _bafc !=nil {return nil ,_bafc ;};_dede .PdfField =_cfff ;_cfff ._bffcb =_dede ;
default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_cfff .FT );return nil ,_cc .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _dgac ,_cccg :=_cg .GetName (_daaba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_cccg {if *_dgac =="\u0057\u0069\u0064\u0067\u0065\u0074"{_fbcg ,_ecbf :=_agde .newPdfAnnotationFromIndirectObject (_egde );if _ecbf !=nil {return nil ,_ecbf ;};
_dbfbd ,_ffaa :=_fbcg .GetContext ().(*PdfAnnotationWidget );if !_ffaa {return nil ,_cc .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_dbfbd ._dad =_cfff ;_dbfbd .Parent =_cfff ._edge ;
_cfff .Annotations =append (_cfff .Annotations ,_dbfbd );return _cfff ,nil ;};};_aeee :=true ;if _dgacc ,_afcg :=_cg .GetArray (_daaba .Get ("\u004b\u0069\u0064\u0073"));_afcg {_agaee :=make ([]*_cg .PdfIndirectObject ,0,_dgacc .Len ());for _ ,_gdccg :=range _dgacc .Elements (){_gcce ,_acbb :=_cg .GetIndirect (_gdccg );
if !_acbb {_bbcag ,_geed :=_cg .GetStream (_gdccg );if _geed &&_bbcag .PdfObjectDictionary !=nil {_efed ,_gffbd :=_cg .GetNameVal (_bbcag .Get ("\u0054\u0079\u0070\u0065"));if _gffbd &&_efed =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_bc .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cc .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_acbf ,_ebegg :=_cg .GetDict (_gcce );
if !_ebegg {return nil ,ErrTypeCheck ;};if _aeee {_aeee =!_gadf (_acbf );};_agaee =append (_agaee ,_gcce );};for _ ,_cdeb :=range _agaee {if _aeee {_ebg ,_debd :=_agde .newPdfAnnotationFromIndirectObject (_cdeb );if _debd !=nil {_bc .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_debd );
return nil ,_debd ;};_cecdb ,_bbgef :=_ebg ._dfc .(*PdfAnnotationWidget );if !_bbgef {return nil ,ErrTypeCheck ;};_cecdb ._dad =_cfff ;_cfff .Annotations =append (_cfff .Annotations ,_cecdb );}else {_bfad ,_bdec :=_agde .newPdfFieldFromIndirectObject (_cdeb ,_cfff );
if _bdec !=nil {_bc .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_bdec );return nil ,_bdec ;};_cfff .Kids =append (_cfff .Kids ,_bfad );
};};};return _cfff ,nil ;};

// Height returns the height of `rect`.
func (_cbgd *PdfRectangle )Height ()float64 {return _bb .Abs (_cbgd .Ury -_cbgd .Lly )};func (_ggb *PdfAnnotation )String ()string {_bad :="";_bac ,_bae :=_ggb .ToPdfObject ().(*_cg .PdfIndirectObject );if _bae {_bad =_f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ggb ._dfc ,_bac .PdfObject .String ());
};return _bad ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_cg .PdfObjectName ;Colorants _cg .PdfObject ;Process _cg .PdfObject ;MixingHints _cg .PdfObject ;_ccffg *_cg .PdfIndirectObject ;};

// G returns the value of the green component of the color.
func (_efcc *PdfColorDeviceRGB )G ()float64 {return _efcc [1]};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_ddbe *PdfAppender )UpdatePage (page *PdfPage ){_ddbe .updateObjectsDeep (page .ToPdfObject (),nil )};func _ddgd (_fefc _cg .PdfObject )(*PdfColorspaceCalRGB ,error ){_cfbc :=NewPdfColorspaceCalRGB ();if _acgb ,_acdb :=_fefc .(*_cg .PdfIndirectObject );
_acdb {_cfbc ._fdec =_acgb ;};_fefc =_cg .TraceToDirectObject (_fefc );_fdbe ,_dcdd :=_fefc .(*_cg .PdfObjectArray );if !_dcdd {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdbe .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_fefc =_cg .TraceToDirectObject (_fdbe .Get (0));_bgbfe ,_dcdd :=_fefc .(*_cg .PdfObjectName );if !_dcdd {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_bgbfe !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_f .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fefc =_cg .TraceToDirectObject (_fdbe .Get (1));
_gfdb ,_dcdd :=_fefc .(*_cg .PdfObjectDictionary );if !_dcdd {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_fefc =_gfdb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_fefc =_cg .TraceToDirectObject (_fefc );_gaaa ,_dcdd :=_fefc .(*_cg .PdfObjectArray );if !_dcdd {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _gaaa .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ffcg ,_aabbd :=_gaaa .GetAsFloat64Slice ();
if _aabbd !=nil {return nil ,_aabbd ;};_cfbc .WhitePoint =_ffcg ;_fefc =_gfdb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fefc !=nil {_fefc =_cg .TraceToDirectObject (_fefc );_fgdaa ,_fdga :=_fefc .(*_cg .PdfObjectArray );
if !_fdga {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _fgdaa .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_add ,_gcbb :=_fgdaa .GetAsFloat64Slice ();if _gcbb !=nil {return nil ,_gcbb ;};_cfbc .BlackPoint =_add ;};_fefc =_gfdb .Get ("\u0047\u0061\u006dm\u0061");if _fefc !=nil {_fefc =_cg .TraceToDirectObject (_fefc );_bgbd ,_adgd :=_fefc .(*_cg .PdfObjectArray );
if !_adgd {return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bgbd .Len ()!=3{return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_dbdbd ,_egcc :=_bgbd .GetAsFloat64Slice ();if _egcc !=nil {return nil ,_egcc ;};_cfbc .Gamma =_dbdbd ;};_fefc =_gfdb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fefc !=nil {_fefc =_cg .TraceToDirectObject (_fefc );_cgabe ,_egag :=_fefc .(*_cg .PdfObjectArray );
if !_egag {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _cgabe .Len ()!=9{_bc .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cgabe .String ());
return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fcbg ,_ebac :=_cgabe .GetAsFloat64Slice ();if _ebac !=nil {return nil ,_ebac ;
};_cfbc .Matrix =_fcbg ;};return _cfbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bede *PdfActionMovie )ToPdfObject ()_cg .PdfObject {_bede .PdfAction .ToPdfObject ();_gec :=_bede ._eab ;_fbc :=_gec .PdfObject .(*_cg .PdfObjectDictionary );_fbc .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeMovie )));_fbc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_bede .Annotation );
_fbc .SetIfNotNil ("\u0054",_bede .T );_fbc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_bede .Operation );return _gec ;};

// ToPdfObject implements interface PdfModel.
func (_agec *PdfActionResetForm )ToPdfObject ()_cg .PdfObject {_agec .PdfAction .ToPdfObject ();_bef :=_agec ._eab ;_bfec :=_bef .PdfObject .(*_cg .PdfObjectDictionary );_bfec .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeResetForm )));_bfec .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_agec .Fields );
_bfec .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_agec .Flags );return _bef ;};func _gebgc (_bfeeb *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bfeeb }};func (_gega *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func (_agfa fontCommon )coreString ()string {_egebbb :="";
if _agfa ._ffab !=nil {_egebbb =_agfa ._ffab .String ();};return _f .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_agfa ._dbba ,_agfa ._gbfc ,_agfa ._badcg ,_agfa ._ccfe ,_agfa ._cccgf !=nil ,_agfa .fontFlags (),_egebbb );
};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_cg .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _cg .PdfObject ;A _cg .PdfObject ;SE _cg .PdfObject ;C _cg .PdfObject ;F _cg .PdfObject ;
_afcdab *_cg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ebf *PdfActionSound )ToPdfObject ()_cg .PdfObject {_ebf .PdfAction .ToPdfObject ();_ebdb :=_ebf ._eab ;_aab :=_ebdb .PdfObject .(*_cg .PdfObjectDictionary );_aab .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeSound )));_aab .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ebf .Sound );
_aab .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ebf .Volume );_aab .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ebf .Synchronous );_aab .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ebf .Repeat );_aab .SetIfNotNil ("\u004d\u0069\u0078",_ebf .Mix );
return _ebdb ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject implements interface PdfModel.
func (_beec *PdfAnnotationCircle )ToPdfObject ()_cg .PdfObject {_beec .PdfAnnotation .ToPdfObject ();_fffe :=_beec ._bgf ;_eec :=_fffe .PdfObject .(*_cg .PdfObjectDictionary );_beec .PdfAnnotationMarkup .appendToPdfDictionary (_eec );_eec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_eec .SetIfNotNil ("\u0042\u0053",_beec .BS );_eec .SetIfNotNil ("\u0049\u0043",_beec .IC );_eec .SetIfNotNil ("\u0042\u0045",_beec .BE );_eec .SetIfNotNil ("\u0052\u0044",_beec .RD );return _fffe ;};func (_ggfe *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _agbcc :=_ggfe ._ffab ;
_agbcc !=nil {return _agbcc ;};return _ggfe ._fbeeg ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_gcdaa =subject };

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _cg .PdfObject ;Open _cg .PdfObject ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bbd :=NewPdfAnnotation ();_gbdg :=&PdfAnnotationHighlight {};_gbdg .PdfAnnotation =_bbd ;_gbdg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbd .SetContext (_gbdg );return _gbdg ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_gdea *PdfField )SetContext (ctx PdfModel ){_gdea ._bffcb =ctx };func (_dbfbbd *PdfWriter )addObject (_afffg _cg .PdfObject )bool {_cacdc :=_dbfbbd .hasObject (_afffg );if !_cacdc {_ggbdb :=_cg .ResolveReferencesDeep (_afffg ,_dbfbbd ._bcbeb );if _ggbdb !=nil {_bc .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_ggbdb );
};_dbfbbd ._ebgeg =append (_dbfbbd ._ebgeg ,_afffg );_dbfbbd ._cgedd [_afffg ]=struct{}{};return true ;};return false ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_ceccf *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggga ,_affd :=color .(*PdfColorPattern );if !_affd {_bc .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ggga .Color ==nil {return color ,nil ;};if _ceccf .UnderlyingCS ==nil {return nil ,_cc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _ceccf .UnderlyingCS .ColorToRGB (_ggga .Color );
};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _cg .PdfObject ;NewWindow _cg .PdfObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_edab .PSProgram ;_bfgd *_edab .PSExecutor ;_bdcfa []byte ;_ebde *_cg .PdfObjectStream ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_fca :=NewPdfAnnotation ();_dcc :=&PdfAnnotationLine {};_dcc .PdfAnnotation =_fca ;_dcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fca .SetContext (_dcc );return _dcc ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gbc :=NewPdfAction ();_dga :=&PdfActionImportData {};_dga .PdfAction =_gbc ;_gbc .SetContext (_dga );return _dga ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bdgbb *Image )ToJBIG2Image ()(*_cg .JBIG2Image ,error ){_bggae ,_cdbea :=_bdgbb .ToGoImage ();if _cdbea !=nil {return nil ,_cdbea ;};return _cg .GoImageToJBIG2 (_bggae ,_cg .JB2ImageAutoThreshold );};func (_abaec *LTV )getCRLs (_dcdae []*_eb .Certificate )([][]byte ,error ){_feca :=make ([][]byte ,0,len (_dcdae ));
for _ ,_edadf :=range _dcdae {for _ ,_aafg :=range _edadf .CRLDistributionPoints {if _abaec .CertClient .IsCA (_edadf ){continue ;};_gacf ,_ddfc :=_abaec .CRLClient .MakeRequest (_aafg ,_edadf );if _ddfc !=nil {_bc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ddfc );
continue ;};_feca =append (_feca ,_gacf );};};return _feca ,nil ;};func _eadd (_babe _cg .PdfObject )(*PdfFunctionType3 ,error ){_dgbea :=&PdfFunctionType3 {};var _bgfbd *_cg .PdfObjectDictionary ;if _ebbg ,_cdebe :=_babe .(*_cg .PdfIndirectObject );_cdebe {_gebac ,_ecddcf :=_ebbg .PdfObject .(*_cg .PdfObjectDictionary );
if !_ecddcf {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgbea ._aeaaa =_ebbg ;_bgfbd =_gebac ;}else if _bebd ,_agade :=_babe .(*_cg .PdfObjectDictionary );_agade {_bgfbd =_bebd ;}else {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_afggf ,_aecf :=_cg .TraceToDirectObject (_bgfbd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );if !_aecf {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _afggf .Len ()!=2{_bc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dbaa ,_gddf :=_afggf .ToFloat64Array ();
if _gddf !=nil {return nil ,_gddf ;};_dgbea .Domain =_dbaa ;_afggf ,_aecf =_cg .TraceToDirectObject (_bgfbd .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );if _aecf {if _afggf .Len ()< 0||_afggf .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ecgbfb ,_bagd :=_afggf .ToFloat64Array ();if _bagd !=nil {return nil ,_bagd ;};_dgbea .Range =_ecgbfb ;};_afggf ,_aecf =_cg .TraceToDirectObject (_bgfbd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_cg .PdfObjectArray );if !_aecf {_bc .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dgbea .Functions =[]PdfFunction {};
for _ ,_cfea :=range _afggf .Elements (){_caaf ,_gbba :=_ddccf (_cfea );if _gbba !=nil {return nil ,_gbba ;};_dgbea .Functions =append (_dgbea .Functions ,_caaf );};_afggf ,_aecf =_cg .TraceToDirectObject (_bgfbd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_cg .PdfObjectArray );
if !_aecf {_bc .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_adbgg ,_gddf :=_afggf .ToFloat64Array ();if _gddf !=nil {return nil ,_gddf ;};_dgbea .Bounds =_adbgg ;if len (_dgbea .Bounds )!=len (_dgbea .Functions )-1{_bc .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dgbea .Bounds ),len (_dgbea .Functions ));
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afggf ,_aecf =_cg .TraceToDirectObject (_bgfbd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cg .PdfObjectArray );if !_aecf {_bc .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_daef ,_gddf :=_afggf .ToFloat64Array ();
if _gddf !=nil {return nil ,_gddf ;};_dgbea .Encode =_daef ;if len (_dgbea .Encode )!=2*len (_dgbea .Functions ){_bc .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dgbea .Encode ),len (_dgbea .Functions ));
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dgbea ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_aeaag *PdfOutlineItem )GetContainingPdfObject ()_cg .PdfObject {return _aeaag ._afcdab };

// GetNumComponents returns the number of color components (1 for Indexed).
func (_dbff *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_egg :=NewPdfAnnotation ();_bgaa :=&PdfAnnotationProjection {};_bgaa .PdfAnnotation =_egg ;_bgaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egg .SetContext (_bgaa );return _bgaa ;};

// RemovePage removes a page by number.
func (_efag *PdfAppender )RemovePage (pageNum int ){_adgb :=pageNum -1;_efag ._gccd =append (_efag ._gccd [0:_adgb ],_efag ._gccd [pageNum :]...);};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_cg .PdfObjectInteger ;TilingType *_cg .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_cg .PdfObjectFloat ;YStep *_cg .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_cg .PdfObjectArray ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_caa :=NewPdfAnnotation ();_efbe :=&PdfAnnotationUnderline {};_efbe .PdfAnnotation =_caa ;_efbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_caa .SetContext (_efbe );return _efbe ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_cgbea *pdfCIDFontType0 )ToPdfObject ()_cg .PdfObject {return _cg .MakeNull ()};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_aadc *PdfFieldSignature )ToPdfObject ()_cg .PdfObject {if _aadc .PdfAnnotationWidget !=nil {_aadc .PdfAnnotationWidget .ToPdfObject ();};_aadc .PdfField .ToPdfObject ();_dcgab :=_aadc ._edge ;_badgd :=_dcgab .PdfObject .(*_cg .PdfObjectDictionary );
_badgd .SetIfNotNil ("\u0046\u0054",_cg .MakeName ("\u0053\u0069\u0067"));_badgd .SetIfNotNil ("\u004c\u006f\u0063\u006b",_aadc .Lock );_badgd .SetIfNotNil ("\u0053\u0056",_aadc .SV );if _aadc .V !=nil {_badgd .SetIfNotNil ("\u0056",_aadc .V .ToPdfObject ());
};return _dcgab ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ggbfgf *PdfOutlineTreeNode )ToPdfObject ()_cg .PdfObject {return _ggbfgf .GetContext ().ToPdfObject ();};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_bedd int64 ;_bdebg int64 ;_dcce int64 ;_afbab int64 ;_cagfd int64 ;_cecfc int64 ;_fdffgb byte ;_gcgddc int64 ;_edcgb int64 ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_ccfee *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _ccfee ._cafbb .(*PdfShadingPattern );};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_daca *_cg .PdfObjectDictionary ;_fdec *_cg .PdfIndirectObject ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_gcde FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_gcde .Mask ()&^fl .Mask ())};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ce .File ,error ){const _ebdfc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fgaf ,_beffb :=_ce .Open (pdfFile );if _beffb !=nil {return nil ,nil ,_beffb ;};_fbef ,_beffb :=_fdbef (_fgaf ,opts ,true ,_ebdfc );if _beffb !=nil {_fgaf .Close ();return nil ,nil ,_beffb ;};return _fbef ,_fgaf ,nil ;};var _ _cg .PdfObject =&pdfSignDictionary {};


// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _a .Time )(PdfDate ,error ){_fdagge :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fbaf ,_ :=_ge .ParseInt (_fdagge [1:3],10,32);_dgege ,_ :=_ge .ParseInt (_fdagge [4:6],10,32);return PdfDate {_bedd :int64 (timeObj .Year ()),_bdebg :int64 (timeObj .Month ()),_dcce :int64 (timeObj .Day ()),_afbab :int64 (timeObj .Hour ()),_cagfd :int64 (timeObj .Minute ()),_cecfc :int64 (timeObj .Second ()),_fdffgb :_fdagge [0],_gcgddc :_fbaf ,_edcgb :_dgege },nil ;
};func _dedfe ()string {_ebfgf .Lock ();defer _ebfgf .Unlock ();if len (_gdabd )> 0{return _gdabd ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_cg .PdfObjectStream )(*XObjectForm ,error ){_cfgag :=&XObjectForm {};_cfgag ._debbe =stream ;_agedc :=*(stream .PdfObjectDictionary );_dccc ,_acdgg :=_cg .NewEncoderFromStream (stream );if _acdgg !=nil {return nil ,_acdgg ;
};_cfgag .Filter =_dccc ;if _bdfe :=_agedc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bdfe !=nil {_efde ,_aegaf :=_bdfe .(*_cg .PdfObjectName );if !_aegaf {return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_efde !="\u0046\u006f\u0072\u006d"{_bc .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _ecbbf :=_agedc .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ecbbf !=nil {_cfgag .FormType =_ecbbf ;};if _cfcbc :=_agedc .Get ("\u0042\u0042\u006f\u0078");
_cfcbc !=nil {_cfgag .BBox =_cfcbc ;};if _egdgc :=_agedc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_egdgc !=nil {_cfgag .Matrix =_egdgc ;};if _eade :=_agedc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eade !=nil {_eade =_cg .TraceToDirectObject (_eade );
_aafce ,_badbab :=_eade .(*_cg .PdfObjectDictionary );if !_badbab {_bc .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cg .ErrTypeError ;};_afdbg ,_fgcbec :=NewPdfPageResourcesFromDict (_aafce );if _fgcbec !=nil {_bc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_fgcbec ;};_cfgag .Resources =_afdbg ;_bc .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_cfgag .Resources );};_cfgag .Group =_agedc .Get ("\u0047\u0072\u006fu\u0070");
_cfgag .Ref =_agedc .Get ("\u0052\u0065\u0066");_cfgag .MetaData =_agedc .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_cfgag .PieceInfo =_agedc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cfgag .LastModified =_agedc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_cfgag .StructParent =_agedc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cfgag .StructParents =_agedc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cfgag .OPI =_agedc .Get ("\u004f\u0050\u0049");
_cfgag .OC =_agedc .Get ("\u004f\u0043");_cfgag .Name =_agedc .Get ("\u004e\u0061\u006d\u0065");_cfgag .Stream =stream .Stream ;return _cfgag ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_dgaff *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_ddcf :=0.3*_dgaff .R ()+0.59*_dgaff .G ()+0.11*_dgaff .B ();_ddcf =_bb .Min (_bb .Max (_ddcf ,0.0),1.0);return NewPdfColorDeviceGray (_ddcf );};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_afbd *PdfTilingPattern )ToPdfObject ()_cg .PdfObject {_afbd .PdfPattern .ToPdfObject ();_egagd :=_afbd .getDict ();if _afbd .PaintType !=nil {_egagd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_afbd .PaintType );};if _afbd .TilingType !=nil {_egagd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_afbd .TilingType );
};if _afbd .BBox !=nil {_egagd .Set ("\u0042\u0042\u006f\u0078",_afbd .BBox .ToPdfObject ());};if _afbd .XStep !=nil {_egagd .Set ("\u0058\u0053\u0074e\u0070",_afbd .XStep );};if _afbd .YStep !=nil {_egagd .Set ("\u0059\u0053\u0074e\u0070",_afbd .YStep );
};if _afbd .Resources !=nil {_egagd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_afbd .Resources .ToPdfObject ());};if _afbd .Matrix !=nil {_egagd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afbd .Matrix );};return _afbd ._edebc ;};var _ pdfFont =(*pdfFontSimple )(nil );
func (_cdbec *PdfWriter )mapObjectStreams (_fafeb bool )(map[_cg .PdfObject ]bool ,bool ){_ggbgd :=make (map[_cg .PdfObject ]bool );for _ ,_befad :=range _cdbec ._ebgeg {if _fcgdge ,_dbdgd :=_befad .(*_cg .PdfObjectStreams );_dbdgd {_fafeb =true ;for _ ,_ggeag :=range _fcgdge .Elements (){_ggbgd [_ggeag ]=true ;
if _fafef ,_efeff :=_ggeag .(*_cg .PdfIndirectObject );_efeff {_ggbgd [_fafef .PdfObject ]=true ;};};};};return _ggbgd ,_fafeb ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cgbgf :=&PdfColorspaceSpecialSeparation {};return _cgbgf ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_fcac :=NewPdfAnnotation ();_cdcg :=&PdfAnnotationSound {};_cdcg .PdfAnnotation =_fcac ;_cdcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcac .SetContext (_cdcg );return _cdcg ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _cg .StreamEncoder )(*XObjectImage ,error ){_geagc :=NewXObjectImage ();return UpdateXObjectImageFromImage (_geagc ,img ,cs ,encoder );};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_cg .PdfIndirectObject )*PdfOutlineItem {_aagaa :=PdfOutlineItem {};_aagaa ._egbcb =&_aagaa ;_aagaa .Title =_cg .MakeString (title );_facfg :=_cg .MakeArray ();_facfg .Append (page );_facfg .Append (_cg .MakeName ("\u0046\u0069\u0074"));
_aagaa .Dest =_facfg ;return &_aagaa ;};func _bbfcf (_gcgb _cg .PdfObject )(*PdfShading ,error ){_bdbb :=&PdfShading {};var _bbbag *_cg .PdfObjectDictionary ;if _faccd ,_egdd :=_cg .GetIndirect (_gcgb );_egdd {_bdbb ._cagea =_faccd ;_feaaf ,_dfgg :=_faccd .PdfObject .(*_cg .PdfObjectDictionary );
if !_dfgg {_bc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cg .ErrTypeError ;};_bbbag =_feaaf ;}else if _ceee ,_fadae :=_cg .GetStream (_gcgb );
_fadae {_bdbb ._cagea =_ceee ;_bbbag =_ceee .PdfObjectDictionary ;}else if _ccge ,_ceagd :=_cg .GetDict (_gcgb );_ceagd {_bdbb ._cagea =_ccge ;_bbbag =_ccge ;}else {_bc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gcgb );
return nil ,_cg .ErrTypeError ;};if _bbbag ==nil {_bc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_cc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gcgb =_bbbag .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gcgb ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gcgb =_cg .TraceToDirectObject (_gcgb );_fagbg ,_gbdgf :=_gcgb .(*_cg .PdfObjectInteger );if !_gbdgf {_bc .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gcgb );
return nil ,_cg .ErrTypeError ;};if *_fagbg < 1||*_fagbg > 7{_bc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fagbg );
return nil ,_cg .ErrTypeError ;};_bdbb .ShadingType =_fagbg ;_gcgb =_bbbag .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gcgb ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdfeb ,_cfdae :=NewPdfColorspaceFromPdfObject (_gcgb );if _cfdae !=nil {_bc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cfdae );
return nil ,_cfdae ;};_bdbb .ColorSpace =_gdfeb ;_gcgb =_bbbag .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gcgb !=nil {_gcgb =_cg .TraceToDirectObject (_gcgb );_aece ,_dfaee :=_gcgb .(*_cg .PdfObjectArray );if !_dfaee {_bc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gcgb );
return nil ,_cg .ErrTypeError ;};_bdbb .Background =_aece ;};_gcgb =_bbbag .Get ("\u0042\u0042\u006f\u0078");if _gcgb !=nil {_gcgb =_cg .TraceToDirectObject (_gcgb );_ecebge ,_gggd :=_gcgb .(*_cg .PdfObjectArray );if !_gggd {_bc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gcgb );
return nil ,_cg .ErrTypeError ;};_fbefc ,_eafbc :=NewPdfRectangle (*_ecebge );if _eafbc !=nil {_bc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_eafbc );return nil ,_eafbc ;};_bdbb .BBox =_fbefc ;};_gcgb =_bbbag .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _gcgb !=nil {_gcgb =_cg .TraceToDirectObject (_gcgb );_dafff ,_dcebg :=_gcgb .(*_cg .PdfObjectBool );if !_dcebg {_bc .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcgb );
return nil ,_cg .ErrTypeError ;};_bdbb .AntiAlias =_dafff ;};switch *_fagbg {case 1:_fdeff ,_ggedg :=_cgcc (_bbbag );if _ggedg !=nil {return nil ,_ggedg ;};_fdeff .PdfShading =_bdbb ;_bdbb ._bcbf =_fdeff ;return _bdbb ,nil ;case 2:_ccgdg ,_ddfbaf :=_aeadgf (_bbbag );
if _ddfbaf !=nil {return nil ,_ddfbaf ;};_ccgdg .PdfShading =_bdbb ;_bdbb ._bcbf =_ccgdg ;return _bdbb ,nil ;case 3:_gdbdf ,_cfeed :=_ecde (_bbbag );if _cfeed !=nil {return nil ,_cfeed ;};_gdbdf .PdfShading =_bdbb ;_bdbb ._bcbf =_gdbdf ;return _bdbb ,nil ;
case 4:_bacdd ,_gaabg :=_gbege (_bbbag );if _gaabg !=nil {return nil ,_gaabg ;};_bacdd .PdfShading =_bdbb ;_bdbb ._bcbf =_bacdd ;return _bdbb ,nil ;case 5:_afdbac ,_cgddb :=_aegf (_bbbag );if _cgddb !=nil {return nil ,_cgddb ;};_afdbac .PdfShading =_bdbb ;
_bdbb ._bcbf =_afdbac ;return _bdbb ,nil ;case 6:_cdedc ,_ffdaa :=_acada (_bbbag );if _ffdaa !=nil {return nil ,_ffdaa ;};_cdedc .PdfShading =_bdbb ;_bdbb ._bcbf =_cdedc ;return _bdbb ,nil ;case 7:_bdcac ,_gegacf :=_eggb (_bbbag );if _gegacf !=nil {return nil ,_gegacf ;
};_bdcac .PdfShading =_bdbb ;_bdbb ._bcbf =_bdcac ;return _bdbb ,nil ;};return nil ,_cc .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};var _ pdfFont =(*pdfFontType0 )(nil );func _gabg (_bgade *_cg .PdfObjectDictionary ){_fcffg ,_bebbg :=_cg .GetArray (_bgade .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_ceaf ,_egbf :=_cg .GetIntVal (_bgade .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_aacbe ,_fcbd :=_cg .GetIntVal (_bgade .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _bebbg &&_egbf &&_fcbd {_bece :=_fcffg .Len ();if _bece !=_aacbe -_ceaf +1{_bc .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_bece ,_aacbe );
_bacc :=_cg .PdfObjectInteger (_ceaf +_bece -1);_bgade .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_bacc );};};};func (_gdbd *LTV )enable (_fagf ,_dcda []*_eb .Certificate ,_ggbfg string )error {_ffbbe ,_bgfg ,_fdgaae :=_gdbd .buildCertChain (_fagf ,_dcda );
if _fdgaae !=nil {return _fdgaae ;};_babfa ,_fdgaae :=_gdbd .getCerts (_ffbbe );if _fdgaae !=nil {return _fdgaae ;};_cfbga ,_fdgaae :=_gdbd .getOCSPs (_ffbbe ,_bgfg );if _fdgaae !=nil {return _fdgaae ;};_aeeb ,_fdgaae :=_gdbd .getCRLs (_ffbbe );if _fdgaae !=nil {return _fdgaae ;
};_cabce :=_gdbd ._cbaeg ;_ebaab ,_fdgaae :=_cabce .addCerts (_babfa );if _fdgaae !=nil {return _fdgaae ;};_dedf ,_fdgaae :=_cabce .addOCSPs (_cfbga );if _fdgaae !=nil {return _fdgaae ;};_cffga ,_fdgaae :=_cabce .addCRLs (_aeeb );if _fdgaae !=nil {return _fdgaae ;
};if _ggbfg !=""{_cabce .VRI [_ggbfg ]=&VRI {Cert :_ebaab ,OCSP :_dedf ,CRL :_cffga };};_gdbd ._cgeg .SetDSS (_cabce );return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_gbb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_ddbfa *PdfReader )buildOutlineTree (_dfadg _cg .PdfObject ,_bbce *PdfOutlineTreeNode ,_defff *PdfOutlineTreeNode ,_gfcgee map[_cg .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gfcgee ==nil {_gfcgee =map[_cg .PdfObject ]struct{}{};
};_gfcgee [_dfadg ]=struct{}{};_daadd ,_cfbb :=_dfadg .(*_cg .PdfIndirectObject );if !_cfbb {return nil ,nil ,_f .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dfadg );
};_faag ,_egcg :=_daadd .PdfObject .(*_cg .PdfObjectDictionary );if !_egcg {return nil ,nil ,_cc .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_faag ,_daadd ,_daadd );
if _ecfcga :=_faag .Get ("\u0054\u0069\u0074l\u0065");_ecfcga !=nil {_ecdbb ,_effe :=_ddbfa .newPdfOutlineItemFromIndirectObject (_daadd );if _effe !=nil {return nil ,nil ,_effe ;};_ecdbb .Parent =_bbce ;_ecdbb .Prev =_defff ;_fdace :=_cg .ResolveReference (_faag .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_gbfeg :=_gfcgee [_fdace ];_fdace !=nil &&_fdace !=_daadd &&!_gbfeg {if !_cg .IsNullObject (_fdace ){_agdcg ,_bdgdc ,_eacdb :=_ddbfa .buildOutlineTree (_fdace ,&_ecdbb .PdfOutlineTreeNode ,nil ,_gfcgee );if _eacdb !=nil {_bc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_eacdb );
}else {_ecdbb .First =_agdcg ;_ecdbb .Last =_bdgdc ;};};};_defdd :=_cg .ResolveReference (_faag .Get ("\u004e\u0065\u0078\u0074"));if _ ,_aebec :=_gfcgee [_defdd ];_defdd !=nil &&_defdd !=_daadd &&!_aebec {if !_cg .IsNullObject (_defdd ){_caefc ,_adafd ,_aceae :=_ddbfa .buildOutlineTree (_defdd ,_bbce ,&_ecdbb .PdfOutlineTreeNode ,_gfcgee );
if _aceae !=nil {_bc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_aceae );
}else {_ecdbb .Next =_caefc ;return &_ecdbb .PdfOutlineTreeNode ,_adafd ,nil ;};};};return &_ecdbb .PdfOutlineTreeNode ,&_ecdbb .PdfOutlineTreeNode ,nil ;};_cgcdf ,_fbdcec :=_edgc (_daadd );if _fbdcec !=nil {return nil ,nil ,_fbdcec ;};_cgcdf .Parent =_bbce ;
if _eaddb :=_faag .Get ("\u0046\u0069\u0072s\u0074");_eaddb !=nil {_eaddb =_cg .ResolveReference (_eaddb );if _ ,_bfcde :=_gfcgee [_eaddb ];_eaddb !=nil &&_eaddb !=_daadd &&!_bfcde {_efegc :=_cg .TraceToDirectObject (_eaddb );if _ ,_dggeg :=_efegc .(*_cg .PdfObjectNull );
!_dggeg &&_efegc !=nil {_bdbcf ,_ebded ,_gfcd :=_ddbfa .buildOutlineTree (_eaddb ,&_cgcdf .PdfOutlineTreeNode ,nil ,_gfcgee );if _gfcd !=nil {_bc .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gfcd );
}else {_cgcdf .First =_bdbcf ;_cgcdf .Last =_ebded ;};};};};return &_cgcdf .PdfOutlineTreeNode ,&_cgcdf .PdfOutlineTreeNode ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _cg .PdfObject ;Flags _cg .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gbdd *PdfAnnotation )GetContainingPdfObject ()_cg .PdfObject {return _gbdd ._bgf };

// GetTrailer returns the PDF's trailer dictionary.
func (_acfce *PdfReader )GetTrailer ()(*_cg .PdfObjectDictionary ,error ){_aeage :=_acfce ._adfcb .GetTrailer ();if _aeage ==nil {return nil ,_cc .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _aeage ,nil ;
};type pdfFont interface{_af .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_cg .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ebbeg :_cg .MakeIndirectObject (_cg .MakeDict ())};};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bdba *PdfPage )GetContainingPdfObject ()_cg .PdfObject {return _bdba ._afeaa };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_abec ,_ccdba :=_fgc .ParsePdfTime (dateStr );if _ccdba !=nil {return PdfDate {},_ccdba ;};return NewPdfDateFromTime (_abec );};func _acf (_cac _cg .PdfObject )(*PdfFilespec ,error ){if _cac ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_cac );};

// PdfVersion returns version of the PDF file.
func (_bbdgg *PdfReader )PdfVersion ()_cg .Version {return _bbdgg ._adfcb .PdfVersion ()};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_debdg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _debdg ._fabdb !=nil {return _debdg ._fabdb ,nil ;};if _debdg .ColorSpace ==nil {return nil ,nil ;};_gdgacg ,_dagec :=_abad (_debdg .ColorSpace );if _dagec !=nil {return nil ,_dagec ;
};_debdg ._fabdb =_gdgacg ;return _debdg ._fabdb ,nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_gdaad *PdfWriter )SetCatalogMetadata (meta _cg .PdfObject )error {if meta ==nil {_gdaad ._feafc .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_aaeaf ,_ddedf :=_cg .GetStream (meta );if !_ddedf {return _cc .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_gdaad .addObject (_aaeaf );_gdaad ._feafc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aaeaf );return nil ;};func (_ceegf *PdfReader )newPdfFieldSignatureFromDict (_cdcf *_cg .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cccgg :=&PdfFieldSignature {};
_fbae ,_ccdfd :=_cg .GetIndirect (_cdcf .Get ("\u0056"));if _ccdfd {var _afda error ;_cccgg .V ,_afda =_ceegf .newPdfSignatureFromIndirect (_fbae );if _afda !=nil {return nil ,_afda ;};};_cccgg .Lock ,_ =_cg .GetIndirect (_cdcf .Get ("\u004c\u006f\u0063\u006b"));
_cccgg .SV ,_ =_cg .GetIndirect (_cdcf .Get ("\u0053\u0056"));return _cccgg ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dfegc pdfCIDFontType2 )GetCharMetrics (code _ad .CharCode )(_af .CharMetrics ,bool ){if _egced ,_dcad :=_dfegc ._gfbfb [code ];_dcad {return _af .CharMetrics {Wx :_egced },true ;};_bbddc :=rune (code );_faded ,_aefd :=_dfegc ._ddcd [_bbddc ];if !_aefd {_faded =int (_dfegc ._fgeg );
};return _af .CharMetrics {Wx :float64 (_faded )},true ;};func (_gaccc *PdfReader )newPdfAnnotationStrikeOut (_fgf *_cg .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_ccee :=PdfAnnotationStrikeOut {};_cegb ,_afbf :=_gaccc .newPdfAnnotationMarkupFromDict (_fgf );
if _afbf !=nil {return nil ,_afbf ;};_ccee .PdfAnnotationMarkup =_cegb ;_ccee .QuadPoints =_fgf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ccee ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gac :=NewPdfAction ();_cb :=&PdfActionGoToE {};_cb .PdfAction =_gac ;_gac .SetContext (_cb );return _cb ;};type pdfFontType0 struct{fontCommon ;_becg *_cg .PdfIndirectObject ;_efac _ad .TextEncoder ;Encoding _cg .PdfObject ;
DescendantFont *PdfFont ;_fade *_cag .CMap ;};func (_gabfg *PdfWriter )copyObjects (){_cfdea :=make (map[_cg .PdfObject ]_cg .PdfObject );_efffbf :=make ([]_cg .PdfObject ,0,len (_gabfg ._ebgeg ));_cfedb :=make (map[_cg .PdfObject ]struct{},len (_gabfg ._ebgeg ));
_cdede :=make (map[_cg .PdfObject ]struct{});for _ ,_fgffb :=range _gabfg ._ebgeg {_egdaf :=_gabfg .copyObject (_fgffb ,_cfdea ,_cdede ,false );if _ ,_gdgdec :=_cdede [_fgffb ];_gdgdec {continue ;};_efffbf =append (_efffbf ,_egdaf );_cfedb [_egdaf ]=struct{}{};
};_gabfg ._ebgeg =_efffbf ;_gabfg ._cgedd =_cfedb ;_gabfg ._gfecf =_gabfg .copyObject (_gabfg ._gfecf ,_cfdea ,nil ,false ).(*_cg .PdfIndirectObject );_gabfg ._fffdf =_gabfg .copyObject (_gabfg ._fffdf ,_cfdea ,nil ,false ).(*_cg .PdfIndirectObject );if _gabfg ._dcceb !=nil {_gabfg ._dcceb =_gabfg .copyObject (_gabfg ._dcceb ,_cfdea ,nil ,false ).(*_cg .PdfIndirectObject );
};if _gabfg ._egaa {_edecf :=make (map[_cg .PdfObject ]int64 );for _beedf ,_caffc :=range _gabfg ._gagef {if _aabcb ,_ddgca :=_cfdea [_beedf ];_ddgca {_edecf [_aabcb ]=_caffc ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_gabfg ._gagef =_edecf ;};};func _debbc (_aagbe *_cg .PdfObjectDictionary )(*PdfTilingPattern ,error ){_edfag :=&PdfTilingPattern {};_feea :=_aagbe .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _feea ==nil {_bc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_begc ,_fagd :=_feea .(*_cg .PdfObjectInteger );if !_fagd {_bc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_feea );
return nil ,_cg .ErrTypeError ;};_edfag .PaintType =_begc ;_feea =_aagbe .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _feea ==nil {_bc .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aafafe ,_fagd :=_feea .(*_cg .PdfObjectInteger );if !_fagd {_bc .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_feea );
return nil ,_cg .ErrTypeError ;};_edfag .TilingType =_aafafe ;_feea =_aagbe .Get ("\u0042\u0042\u006f\u0078");if _feea ==nil {_bc .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_feea =_cg .TraceToDirectObject (_feea );_fdgbbc ,_fagd :=_feea .(*_cg .PdfObjectArray );if !_fagd {_bc .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_feea );
return nil ,_cg .ErrTypeError ;};_bdeff ,_ddac :=NewPdfRectangle (*_fdgbbc );if _ddac !=nil {_bc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ddac );return nil ,_ddac ;};_edfag .BBox =_bdeff ;_feea =_aagbe .Get ("\u0058\u0053\u0074e\u0070");
if _feea ==nil {_bc .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fddcd ,_ddac :=_cg .GetNumberAsFloat (_feea );if _ddac !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fddcd );
return nil ,_ddac ;};_edfag .XStep =_cg .MakeFloat (_fddcd );_feea =_aagbe .Get ("\u0059\u0053\u0074e\u0070");if _feea ==nil {_bc .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_eagb ,_ddac :=_cg .GetNumberAsFloat (_feea );if _ddac !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_eagb );
return nil ,_ddac ;};_edfag .YStep =_cg .MakeFloat (_eagb );_feea =_aagbe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _feea ==nil {_bc .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aagbe ,_fagd =_cg .TraceToDirectObject (_feea ).(*_cg .PdfObjectDictionary );if !_fagd {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_feea );
};_gfagf ,_ddac :=NewPdfPageResourcesFromDict (_aagbe );if _ddac !=nil {return nil ,_ddac ;};_edfag .Resources =_gfagf ;if _cabdc :=_aagbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cabdc !=nil {_cgaea ,_aafbc :=_cabdc .(*_cg .PdfObjectArray );if !_aafbc {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cabdc );
return nil ,_cg .ErrTypeError ;};_edfag .Matrix =_cgaea ;};return _edfag ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gae :=NewPdfAction ();_ede :=&PdfActionGoToR {};_ede .PdfAction =_gae ;_gae .SetContext (_ede );return _ede ;};

// ToPdfObject implements interface PdfModel.
func (_bddg *PdfSignature )ToPdfObject ()_cg .PdfObject {_ggagfb :=_bddg ._dcfef ;var _gebgb *_cg .PdfObjectDictionary ;if _ggafc ,_gccc :=_ggagfb .PdfObject .(*pdfSignDictionary );_gccc {_gebgb =_ggafc .PdfObjectDictionary ;}else {_gebgb =_ggagfb .PdfObject .(*_cg .PdfObjectDictionary );
};_gebgb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bddg .Type );_gebgb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_bddg .Filter );_gebgb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_bddg .SubFilter );_gebgb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bddg .ByteRange );
_gebgb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bddg .Contents );_gebgb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_bddg .Cert );_gebgb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bddg .Name );_gebgb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_bddg .Reason );
_gebgb .SetIfNotNil ("\u004d",_bddg .M );_gebgb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_bddg .Reference );_gebgb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_bddg .Changes );_gebgb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_bddg .ContactInfo );
return _ggagfb ;};func (_dgdfg *PdfWriter )checkLicense ()error {_cdadg :=_ebd .GetLicenseKey ();if (_cdadg ==nil ||!_cdadg .IsLicensed ())&&!_fdfac {_f .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_f .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cc .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func (_agcfa *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_befgb *PdfPageResources )GetXObjectByName (keyName _cg .PdfObjectName )(*_cg .PdfObjectStream ,XObjectType ){if _befgb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_feaef ,_fgdbfa :=_cg .TraceToDirectObject (_befgb .XObject ).(*_cg .PdfObjectDictionary );
if !_fgdbfa {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cg .TraceToDirectObject (_befgb .XObject ));
return nil ,XObjectTypeUndefined ;};if _gbeca :=_feaef .Get (keyName );_gbeca !=nil {_eccff ,_dbcee :=_cg .GetStream (_gbeca );if !_dbcee {_bc .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_gbeca );
return nil ,XObjectTypeUndefined ;};_egfbc :=_eccff .PdfObjectDictionary ;_afdbcc ,_dbcee :=_cg .TraceToDirectObject (_egfbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_cg .PdfObjectName );if !_dbcee {_bc .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_egfbc .String ());
return nil ,XObjectTypeUndefined ;};if *_afdbcc =="\u0049\u006d\u0061g\u0065"{return _eccff ,XObjectTypeImage ;}else if *_afdbcc =="\u0046\u006f\u0072\u006d"{return _eccff ,XObjectTypeForm ;}else if *_afdbcc =="\u0050\u0053"{return _eccff ,XObjectTypePS ;
}else {_bc .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_afdbcc );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_caab *PdfColorspaceDeviceGray )ToPdfObject ()_cg .PdfObject {return _cg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_agdd *PdfAnnotation )ToPdfObject ()_cg .PdfObject {_cbd :=_agdd ._bgf ;_bdeg :=_cbd .PdfObject .(*_cg .PdfObjectDictionary );_bdeg .Clear ();_bdeg .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0041\u006e\u006eo\u0074"));_bdeg .SetIfNotNil ("\u0052\u0065\u0063\u0074",_agdd .Rect );
_bdeg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_agdd .Contents );_bdeg .SetIfNotNil ("\u0050",_agdd .P );_bdeg .SetIfNotNil ("\u004e\u004d",_agdd .NM );_bdeg .SetIfNotNil ("\u004d",_agdd .M );_bdeg .SetIfNotNil ("\u0046",_agdd .F );
_bdeg .SetIfNotNil ("\u0041\u0050",_agdd .AP );_bdeg .SetIfNotNil ("\u0041\u0053",_agdd .AS );_bdeg .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_agdd .Border );_bdeg .SetIfNotNil ("\u0043",_agdd .C );_bdeg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_agdd .StructParent );
_bdeg .SetIfNotNil ("\u004f\u0043",_agdd .OC );return _cbd ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_babdb *PdfPageResources )SetXObjectImageByName (keyName _cg .PdfObjectName ,ximg *XObjectImage )error {_beffcb :=ximg .ToPdfObject ().(*_cg .PdfObjectStream );_afba :=_babdb .SetXObjectByName (keyName ,_beffcb );return _afba ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_cbfd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_dega :=_df .NewReader (img .getBase ());_accee :=_dg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_cbfd .AlternateSpace .GetNumComponents (),nil ,img ._cfdb ,nil );
_gefa :=_df .NewWriter (_accee );_dedd :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_bc .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_bc .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_cbfd .TintTransform );_fccd :=_cbfd .AlternateSpace .DecodeArray ();var (_baage uint32 ;_bcee error ;);for {_baage ,_bcee =_dega .ReadSample ();
if _bcee ==_eda .EOF {break ;};if _bcee !=nil {return img ,_bcee ;};_cfae :=float64 (_baage )/_dedd ;_fadba ,_badac :=_cbfd .TintTransform .Evaluate ([]float64 {_cfae });if _badac !=nil {return img ,_badac ;};for _gbcf ,_fedeb :=range _fadba {_fggee :=_dg .LinearInterpolate (_fedeb ,_fccd [_gbcf *2],_fccd [_gbcf *2+1],0,1);
if _badac =_gefa .WriteSample (uint32 (_fggee *_dedd ));_badac !=nil {return img ,_badac ;};};};return _cbfd .AlternateSpace .ImageToRGB (_fdbed (&_accee ));};func (_adea *DSS )add (_cffc *[]*_cg .PdfObjectStream ,_bcaf map[string ]*_cg .PdfObjectStream ,_ceae [][]byte )([]*_cg .PdfObjectStream ,error ){_fcfa :=make ([]*_cg .PdfObjectStream ,0,len (_ceae ));
for _ ,_fced :=range _ceae {_febf ,_fgcbe :=_dffg (_fced );if _fgcbe !=nil {return nil ,_fgcbe ;};_dcde ,_aaad :=_bcaf [string (_febf )];if !_aaad {_dcde ,_fgcbe =_cg .MakeStream (_fced ,_cg .NewRawEncoder ());if _fgcbe !=nil {return nil ,_fgcbe ;};_bcaf [string (_febf )]=_dcde ;
*_cffc =append (*_cffc ,_dcde );};_fcfa =append (_fcfa ,_dcde );};return _fcfa ,nil ;};func (_cdad *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_dag :=NewPdfAnnotation ();_aff :=&PdfAnnotationCaret {};_aff .PdfAnnotation =_dag ;_aff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dag .SetContext (_aff );return _aff ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eabab *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_eabab .NumInputs {_bc .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _eabab ._fagbf ==nil {_aggcd :=_eabab .processSamples ();if _aggcd !=nil {return nil ,_aggcd ;};};_efgg :=_eabab .Encode ;if _efgg ==nil {_efgg =[]float64 {};
for _ggfa :=0;_ggfa < len (_eabab .Size );_ggfa ++{_efgg =append (_efgg ,0);_efgg =append (_efgg ,float64 (_eabab .Size [_ggfa ]-1));};};_adbbb :=_eabab .Decode ;if _adbbb ==nil {_adbbb =_eabab .Range ;};_cffcd :=make ([]int ,len (x ));for _egee :=0;_egee < len (x );
_egee ++{_aaef :=x [_egee ];_bagge :=_bb .Min (_bb .Max (_aaef ,_eabab .Domain [2*_egee ]),_eabab .Domain [2*_egee +1]);_aafae :=_dg .LinearInterpolate (_bagge ,_eabab .Domain [2*_egee ],_eabab .Domain [2*_egee +1],_efgg [2*_egee ],_efgg [2*_egee +1]);
_ddaa :=_bb .Min (_bb .Max (_aafae ,0),float64 (_eabab .Size [_egee ]-1));_efaef :=int (_bb .Floor (_ddaa +0.5));if _efaef < 0{_efaef =0;}else if _efaef > _eabab .Size [_egee ]{_efaef =_eabab .Size [_egee ]-1;};_cffcd [_egee ]=_efaef ;};_febc :=_cffcd [0];
for _eegbea :=1;_eegbea < _eabab .NumInputs ;_eegbea ++{_ggcdb :=_cffcd [_eegbea ];for _dace :=0;_dace < _eegbea ;_dace ++{_ggcdb *=_eabab .Size [_dace ];};_febc +=_ggcdb ;};_febc *=_eabab .NumOutputs ;var _dbcg []float64 ;for _bbcbd :=0;_bbcbd < _eabab .NumOutputs ;
_bbcbd ++{_cgdc :=_febc +_bbcbd ;if _cgdc >=len (_eabab ._fagbf ){_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_adegb :=_eabab ._fagbf [_cgdc ];_abbae :=_dg .LinearInterpolate (float64 (_adegb ),0,_bb .Pow (2,float64 (_eabab .BitsPerSample )),_adbbb [2*_bbcbd ],_adbbb [2*_bbcbd +1]);_eccc :=_bb .Min (_bb .Max (_abbae ,_eabab .Range [2*_bbcbd ]),_eabab .Range [2*_bbcbd +1]);
_dbcg =append (_dbcg ,_eccc );};return _dbcg ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func (_bedcd PdfFont )actualFont ()pdfFont {if _bedcd ._dfaba ==nil {_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bedcd );
};return _bedcd ._dfaba ;};func (_fbe *PdfReader )newPdfActionNamedFromDict (_cff *_cg .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_cff .Get ("\u004e")},nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ccdb *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _cg .GetNumberAsFloat (_ccdb .Descent );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cbf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baga ,_bafd :=_cg .GetNumbersAsFloat (objects );
if _bafd !=nil {return nil ,_bafd ;};return _cbf .ColorFromFloats (_baga );};

// ImageToRGB convert an indexed image to RGB.
func (_bdegd *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_bdegd .Base .GetNumComponents ();if N < 1{return Image {},_f .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_daab :=_dg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._cfdb ,img ._abbba );_ebda :=_df .NewReader (img .getBase ());_gdafe :=_df .NewWriter (_daab );var (_cdfb uint32 ;_ffffe int ;_ddfbe error ;);for {_cdfb ,_ddfbe =_ebda .ReadSample ();
if _ddfbe ==_eda .EOF {break ;}else if _ddfbe !=nil {return img ,_ddfbe ;};_ffffe =int (_cdfb );_bc .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_ffffe ,N ,len (_bdegd ._fadb ));
if (_ffffe +1)*N > len (_bdegd ._fadb ){_ffffe =len (_bdegd ._fadb )/N -1;_bc .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_ffffe );if _ffffe < 0{_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _dfad :=_ffffe *N ;_dfad < (_ffffe +1)*N ;_dfad ++{if _ddfbe =_gdafe .WriteSample (uint32 (_bdegd ._fadb [_dfad ]));_ddfbe !=nil {return img ,_ddfbe ;};};};return _bdegd .Base .ImageToRGB (_fdbed (&_daab ));};func (_ceca *PdfReader )newPdfActionMovieFromDict (_dcb *_cg .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dcb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dcb .Get ("\u0054"),Operation :_dcb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_cg .PdfObjectBool ;SigFlags *_cg .PdfObjectInteger ;CO *_cg .PdfObjectArray ;DR *PdfPageResources ;DA *_cg .PdfObjectString ;Q *_cg .PdfObjectInteger ;XFA _cg .PdfObject ;_ebbeg *_cg .PdfIndirectObject ;
};

// ColorToRGB converts gray -> rgb for a single color component.
func (_fdbc *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_afbg ,_dadbc :=color .(*PdfColorDeviceGray );if !_dadbc {_bc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_afbg ),float64 (*_afbg ),float64 (*_afbg )),nil ;};func (_acade *PdfWriter )setDocumentIDs (_ceaea ,_gbeaa string ){_acade ._fegea =_cg .MakeArray (_cg .MakeHexString (_ceaea ),_cg .MakeHexString (_gbeaa ));
};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gabe :=NewPdfAction ();_bed :=&PdfActionTrans {};_bed .PdfAction =_gabe ;_gabe .SetContext (_bed );return _bed ;};func (_fcfbb *PdfPage )setContainer (_fgdc *_cg .PdfIndirectObject ){_fgdc .PdfObject =_fcfbb ._egge ;
_fcfbb ._afeaa =_fgdc ;};

// ToPdfObject returns the PDF representation of the function.
func (_cegcg *PdfFunctionType3 )ToPdfObject ()_cg .PdfObject {_badcf :=_cg .MakeDict ();_badcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (3));_dcfge :=&_cg .PdfObjectArray {};for _ ,_edcbc :=range _cegcg .Domain {_dcfge .Append (_cg .MakeFloat (_edcbc ));
};_badcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcfge );if _cegcg .Range !=nil {_cagff :=&_cg .PdfObjectArray {};for _ ,_ffce :=range _cegcg .Range {_cagff .Append (_cg .MakeFloat (_ffce ));};_badcf .Set ("\u0052\u0061\u006eg\u0065",_cagff );};if _cegcg .Functions !=nil {_cfcad :=&_cg .PdfObjectArray {};
for _ ,_fabeb :=range _cegcg .Functions {_cfcad .Append (_fabeb .ToPdfObject ());};_badcf .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_cfcad );};if _cegcg .Bounds !=nil {_agbde :=&_cg .PdfObjectArray {};for _ ,_bfafa :=range _cegcg .Bounds {_agbde .Append (_cg .MakeFloat (_bfafa ));
};_badcf .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_agbde );};if _cegcg .Encode !=nil {_abfgb :=&_cg .PdfObjectArray {};for _ ,_fbgga :=range _cegcg .Encode {_abfgb .Append (_cg .MakeFloat (_fbgga ));};_badcf .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_abfgb );
};if _cegcg ._aeaaa !=nil {_cegcg ._aeaaa .PdfObject =_badcf ;return _cegcg ._aeaaa ;};return _badcf ;};

// GetContentStream returns the XObject Form's content stream.
func (_cbcda *XObjectForm )GetContentStream ()([]byte ,error ){_gagga ,_ddfab :=_cg .DecodeStream (_cbcda ._debbe );if _ddfab !=nil {return nil ,_ddfab ;};return _gagga ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_cbfgg :=&XObjectForm {};_daabdb :=&_cg .PdfObjectStream {};_daabdb .PdfObjectDictionary =_cg .MakeDict ();_cbfgg ._debbe =_daabdb ;return _cbfgg ;};

// ToPdfObject implements interface PdfModel.
func (_ece *PdfAnnotationStamp )ToPdfObject ()_cg .PdfObject {_ece .PdfAnnotation .ToPdfObject ();_feafa :=_ece ._bgf ;_dac :=_feafa .PdfObject .(*_cg .PdfObjectDictionary );_ece .PdfAnnotationMarkup .appendToPdfDictionary (_dac );_dac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0074\u0061m\u0070"));
_dac .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ece .Name );return _feafa ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_cfeeb *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_egbb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// GetFontDescriptor returns the font descriptor for `font`.
func (_dbgf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _dbgf ._dfaba .getFontDescriptor (),nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_bbdgc ,_cagef :=_af .NewStdFontByName (HelveticaName );if !_cagef {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_cabc :=_abgd (_bbdgc );return &PdfFont {_dfaba :&_cabc };};

// ToPdfObject implements interface PdfModel.
func (_gcbd *PdfAnnotationSquare )ToPdfObject ()_cg .PdfObject {_gcbd .PdfAnnotation .ToPdfObject ();_aceb :=_gcbd ._bgf ;_dbd :=_aceb .PdfObject .(*_cg .PdfObjectDictionary );if _gcbd .PdfAnnotationMarkup !=nil {_gcbd .PdfAnnotationMarkup .appendToPdfDictionary (_dbd );
};_dbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_dbd .SetIfNotNil ("\u0042\u0053",_gcbd .BS );_dbd .SetIfNotNil ("\u0049\u0043",_gcbd .IC );_dbd .SetIfNotNil ("\u0042\u0045",_gcbd .BE );
_dbd .SetIfNotNil ("\u0052\u0044",_gcbd .RD );return _aceb ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bfeebc *PdfPattern )IsTiling ()bool {return _bfeebc .PatternType ==1};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_adfcb *_cg .PdfParser ;_agaca _cg .PdfObject ;_dbecb *_cg .PdfIndirectObject ;_fcgeg *_cg .PdfObjectDictionary ;_fdaee []*_cg .PdfIndirectObject ;PageList []*PdfPage ;_afee int ;_egdgf *_cg .PdfObjectDictionary ;_ccdbb *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_ecgd *modelManager ;_ebebf bool ;_ffbed map[_cg .PdfObject ]struct{};_bgde _eda .ReadSeeker ;_ggcgd string ;_dgeab bool ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_dea _cg .ParserMetadata ;};func _cdgd ()string {_ebfgf .Lock ();defer _ebfgf .Unlock ();_gfbga :=_ebd .GetLicenseKey ();if len (_ccdda )> 0&&(_gfbga .IsLicensed ()||_fdfac ){return _ccdda ;};return _f .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_bgdf (),_gfbga .TypeToString ());
};func (_fdgea *PdfWriter )writeObject (_gcfdd int ,_aabaa _cg .PdfObject ){_bc .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gcfdd );if _faab ,_ecfff :=_aabaa .(*_cg .PdfIndirectObject );_ecfff {_fdgea ._eebbe [_gcfdd ]=crossReference {Type :1,Offset :_fdgea ._ebce ,Generation :_faab .GenerationNumber };
_dafef :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gcfdd );if _cffec ,_bcega :=_faab .PdfObject .(*pdfSignDictionary );_bcega {_cffec ._egfbcd =_fdgea ._ebce +int64 (len (_dafef ));};if _faab .PdfObject ==nil {_bc .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_faab .PdfObject =_cg .MakeNull ();};_dafef +=_faab .PdfObject .WriteString ();_dafef +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_fdgea .writeString (_dafef );return ;};if _dggce ,_bcaac :=_aabaa .(*_cg .PdfObjectStream );_bcaac {_fdgea ._eebbe [_gcfdd ]=crossReference {Type :1,Offset :_fdgea ._ebce ,Generation :_dggce .GenerationNumber };
_ccgaf :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gcfdd );_ccgaf +=_dggce .PdfObjectDictionary .WriteString ();_ccgaf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fdgea .writeString (_ccgaf );_fdgea .writeBytes (_dggce .Stream );
_fdgea .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _adaec ,_accd :=_aabaa .(*_cg .PdfObjectStreams );_accd {_fdgea ._eebbe [_gcfdd ]=crossReference {Type :1,Offset :_fdgea ._ebce ,Generation :_adaec .GenerationNumber };
_gdda :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gcfdd );var _dfccb []string ;var _bcbac string ;var _egeg int64 ;for _fdceff ,_fdcc :=range _adaec .Elements (){_facgd ,_gbgef :=_fdcc .(*_cg .PdfIndirectObject );if !_gbgef {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gcfdd ,_fdcc );
continue ;};_egedb :=_facgd .PdfObject .WriteString ()+"\u0020";_bcbac =_bcbac +_egedb ;_dfccb =append (_dfccb ,_f .Sprintf ("\u0025\u0064\u0020%\u0064",_facgd .ObjectNumber ,_egeg ));_fdgea ._eebbe [int (_facgd .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gcfdd ,Index :_fdceff };
_egeg =_egeg +int64 (len ([]byte (_egedb )));};_eddb :=_eaf .Join (_dfccb ,"\u0020")+"\u0020";_fbedf :=_cg .NewFlateEncoder ();_ccfaf :=_fbedf .MakeStreamDict ();_ccfaf .Set (_cg .PdfObjectName ("\u0054\u0079\u0070\u0065"),_cg .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_feecg :=int64 (_adaec .Len ());_ccfaf .Set (_cg .PdfObjectName ("\u004e"),_cg .MakeInteger (_feecg ));_gdac :=int64 (len (_eddb ));_ccfaf .Set (_cg .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_cg .MakeInteger (_gdac ));_cgfgb ,_ :=_fbedf .EncodeBytes ([]byte (_eddb +_bcbac ));
_bbefc :=int64 (len (_cgfgb ));_ccfaf .Set (_cg .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_cg .MakeInteger (_bbefc ));_gdda +=_ccfaf .WriteString ();_gdda +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fdgea .writeString (_gdda );_fdgea .writeBytes (_cgfgb );
_fdgea .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_fdgea .writeString (_aabaa .WriteString ());};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ebbf *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ebbf .MediaBox !=nil {return _ebbf .MediaBox ,nil ;};_cdeeg :=_ebbf .Parent ;for _cdeeg !=nil {_fcdb ,_efgga :=_cg .GetDict (_cdeeg );if !_efgga {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ecfcc :=_fcdb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ecfcc !=nil {_efedf ,_adcfa :=_cg .GetArray (_ecfcc );if !_adcfa {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_adgbdd ,_cdffa :=NewPdfRectangle (*_efedf );if _cdffa !=nil {return nil ,_cdffa ;};return _adgbdd ,nil ;};_cdeeg =_fcdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cc .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func _fdbef (_eefd _eda .ReadSeeker ,_cfbca *ReaderOpts ,_fcfce bool ,_edbd string )(*PdfReader ,error ){if _cfbca ==nil {_cfbca =NewReaderOpts ();};_cdcc :=&PdfReader {_bgde :_eefd ,_ffbed :map[_cg .PdfObject ]struct{}{},_ecgd :_ffaba (),_ebebf :_cfbca .LazyLoad ,_dgeab :_cfbca .ComplianceMode };
_decfd ,_bgcgc :=_ebcd ("\u0072");if _bgcgc !=nil {return nil ,_bgcgc ;};_bgcgc =_ebd .Track (_decfd ,_edbd );if _bgcgc !=nil {return nil ,_bgcgc ;};_cdcc ._ggcgd =_decfd ;var _fdgac *_cg .PdfParser ;if !_cdcc ._dgeab {_fdgac ,_bgcgc =_cg .NewParser (_eefd );
}else {_fdgac ,_bgcgc =_cg .NewCompliancePdfParser (_eefd );};if _bgcgc !=nil {return nil ,_bgcgc ;};_cdcc ._adfcb =_fdgac ;_abdd ,_bgcgc :=_cdcc .IsEncrypted ();if _bgcgc !=nil {return nil ,_bgcgc ;};if !_abdd {_bgcgc =_cdcc .loadStructure ();if _bgcgc !=nil {return nil ,_bgcgc ;
};}else if _fcfce {_egafg ,_cfgb :=_cdcc .Decrypt ([]byte (_cfbca .Password ));if _cfgb !=nil {return nil ,_cfgb ;};if !_egafg {return nil ,_cc .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _cdcc ,nil ;};

// String implements interface PdfObject.
func (_ec *PdfAction )String ()string {_gbgd ,_dc :=_ec .ToPdfObject ().(*_cg .PdfIndirectObject );if _dc {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ec ._eee ,_gbgd .PdfObject .String ());};return "";};func (_aegca *Image )samplesTrimPadding (_dfebe []uint32 )[]uint32 {_fcga :=_aegca .ColorComponents *int (_aegca .Width )*int (_aegca .Height );
if len (_dfebe )==_fcga {return _dfebe ;};_gbacf :=make ([]uint32 ,_fcga );_dafe :=int (_aegca .Width )*_aegca .ColorComponents ;var _ffafb ,_cgfbb ,_adaf ,_egbcgd int ;_cgca :=_dg .BytesPerLine (int (_aegca .Width ),int (_aegca .BitsPerComponent ),_aegca .ColorComponents );
for _ffafb =0;_ffafb < int (_aegca .Height );_ffafb ++{_cgfbb =_ffafb *int (_aegca .Width );_adaf =_ffafb *_cgca ;for _egbcgd =0;_egbcgd < _dafe ;_egbcgd ++{_gbacf [_cgfbb +_egbcgd ]=_dfebe [_adaf +_egbcgd ];};};return _gbacf ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_eaaf ,_efadf :=_dgaa (basefont );if _efadf !=nil {return nil ,_efadf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_eaaf ._bfcd =_ad .NewWinAnsiEncoder ();};return &PdfFont {_dfaba :&_eaaf },nil ;
};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ccbdc *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ToPdfObject implements interface PdfModel.
func (_ggea *PdfActionLaunch )ToPdfObject ()_cg .PdfObject {_ggea .PdfAction .ToPdfObject ();_ccdf :=_ggea ._eab ;_dbg :=_ccdf .PdfObject .(*_cg .PdfObjectDictionary );_dbg .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeLaunch )));if _ggea .F !=nil {_dbg .Set ("\u0046",_ggea .F .ToPdfObject ());
};_dbg .SetIfNotNil ("\u0057\u0069\u006e",_ggea .Win );_dbg .SetIfNotNil ("\u004d\u0061\u0063",_ggea .Mac );_dbg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ggea .Unix );_dbg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ggea .NewWindow );
return _ccdf ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_cg .PdfObjectString ;Q *_cg .PdfObjectInteger ;DS *_cg .PdfObjectString ;RV _cg .PdfObject ;MaxLen *_cg .PdfObjectInteger ;};

// AddWatermarkImage adds a watermark to the page.
func (_eaaed *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_bcaaa ,_abfdc :=_eaaed .GetMediaBox ();if _abfdc !=nil {return _abfdc ;};_ggagf :=_bcaaa .Urx -_bcaaa .Llx ;_agcc :=_bcaaa .Ury -_bcaaa .Lly ;_cedgg :=float64 (*ximg .Width );
_cbcdcb :=(_ggagf -_cedgg )/2;if opt .FitToWidth {_cedgg =_ggagf ;_cbcdcb =0;};_ccca :=_agcc ;_fbagc :=float64 (0);if opt .PreserveAspectRatio {_ccca =_cedgg *float64 (*ximg .Height )/float64 (*ximg .Width );_fbagc =(_agcc -_ccca )/2;};if _eaaed .Resources ==nil {_eaaed .Resources =NewPdfPageResources ();
};_febb :=0;_gccgd :=_cg .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_febb ));for _eaaed .Resources .HasXObjectByName (_gccgd ){_febb ++;_gccgd =_cg .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_febb ));};_abfdc =_eaaed .AddImageResource (_gccgd ,ximg );
if _abfdc !=nil {return _abfdc ;};_febb =0;_aadcf :=_cg .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_febb ));for _eaaed .HasExtGState (_aadcf ){_febb ++;_aadcf =_cg .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_febb ));};_abgc :=_cg .MakeDict ();
_abgc .Set ("\u0042\u004d",_cg .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_abgc .Set ("\u0043\u0041",_cg .MakeFloat (opt .Alpha ));_abgc .Set ("\u0063\u0061",_cg .MakeFloat (opt .Alpha ));_abfdc =_eaaed .AddExtGState (_aadcf ,_abgc );if _abfdc !=nil {return _abfdc ;
};_baagf :=_f .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_aadcf ,_cedgg ,_ccca ,_cbcdcb ,_fbagc ,_gccgd );
_eaaed .AddContentStreamByString (_baagf );return nil ;};func (_aded *PdfReader )newPdfAnnotationWatermarkFromDict (_faf *_cg .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cfcg :=PdfAnnotationWatermark {};_cfcg .FixedPrint =_faf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_cfcg ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_feeg pdfFontType3 )GetCharMetrics (code _ad .CharCode )(_af .CharMetrics ,bool ){if _afge ,_feaga :=_feeg ._bacg [code ];_feaga {return _af .CharMetrics {Wx :_afge },true ;};if _af .IsStdFont (_af .StdFontName (_feeg ._gbfc )){return _af .CharMetrics {Wx :250},true ;
};return _af .CharMetrics {},false ;};func _ggagc (_bbff _cg .PdfObject )(*PdfFontDescriptor ,error ){_deage :=&PdfFontDescriptor {};_bbff =_cg .ResolveReference (_bbff );if _edgg ,_fccea :=_bbff .(*_cg .PdfIndirectObject );_fccea {_deage ._dggae =_edgg ;
_bbff =_edgg .PdfObject ;};_fcee ,_gagb :=_cg .GetDict (_bbff );if !_gagb {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bbff );
return nil ,_cg .ErrTypeError ;};if _dggff :=_fcee .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_dggff !=nil {_deage .FontName =_dggff ;}else {_bc .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_debge ,_ :=_cg .GetName (_deage .FontName );if _bbdfd :=_fcee .Get ("\u0054\u0079\u0070\u0065");_bbdfd !=nil {_acef ,_acad :=_bbdfd .(*_cg .PdfObjectName );if !_acad ||string (*_acef )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_bc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bbdfd ,_debge ,_deage .FontName );
};}else {_bc .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_debge ,_deage .FontName );
};_deage .FontFamily =_fcee .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_deage .FontStretch =_fcee .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_deage .FontWeight =_fcee .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_deage .Flags =_fcee .Get ("\u0046\u006c\u0061g\u0073");_deage .FontBBox =_fcee .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_deage .ItalicAngle =_fcee .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_deage .Ascent =_fcee .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_deage .Descent =_fcee .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_deage .Leading =_fcee .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_deage .CapHeight =_fcee .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_deage .XHeight =_fcee .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_deage .StemV =_fcee .Get ("\u0053\u0074\u0065m\u0056");_deage .StemH =_fcee .Get ("\u0053\u0074\u0065m\u0048");_deage .AvgWidth =_fcee .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_deage .MaxWidth =_fcee .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_deage .MissingWidth =_fcee .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_deage .FontFile =_fcee .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_deage .FontFile2 =_fcee .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_deage .FontFile3 =_fcee .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_deage .CharSet =_fcee .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_deage .Style =_fcee .Get ("\u0053\u0074\u0079l\u0065");_deage .Lang =_fcee .Get ("\u004c\u0061\u006e\u0067");
_deage .FD =_fcee .Get ("\u0046\u0044");_deage .CIDSet =_fcee .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _deage .Flags !=nil {if _defa ,_eadf :=_cg .GetIntVal (_deage .Flags );_eadf {_deage ._bcag =_defa ;};};if _deage .MissingWidth !=nil {if _agbc ,_ecgea :=_cg .GetNumberAsFloat (_deage .MissingWidth );
_ecgea ==nil {_deage ._fdag =_agbc ;};};if _deage .FontFile !=nil {_badcb ,_eeabbg :=_aabeg (_deage .FontFile );if _eeabbg !=nil {return _deage ,_eeabbg ;};_bc .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_badcb );_deage .fontFile =_badcb ;
};if _deage .FontFile2 !=nil {_dgbbf ,_debga :=_af .NewFontFile2FromPdfObject (_deage .FontFile2 );if _debga !=nil {return _deage ,_debga ;};_bc .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dgbbf .String ());_deage ._gafg =&_dgbbf ;
};return _deage ,nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_bgfbe int ,_baddc *PdfPage )error ;

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ecgb pdfFontType3 )GetRuneMetrics (r rune )(_af .CharMetrics ,bool ){_cedac :=_ecgb .Encoder ();if _cedac ==nil {_bc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ecgb );
return _af .CharMetrics {},false ;};_fgfb ,_fdffgf :=_cedac .RuneToCharcode (r );if !_fdffgf {if r !=' '{_bc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ecgb );
};return _af .CharMetrics {},false ;};_fgfbg ,_gdfff :=_ecgb .GetCharMetrics (_fgfb );return _fgfbg ,_gdfff ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _cg .PdfObject ;Flags _cg .PdfObject ;};func (_bbefca *PdfWriter )writeObjectsInStreams (_ccdga map[_cg .PdfObject ]bool )error {for _ ,_cccfg :=range _bbefca ._ebgeg {if _eccgf :=_ccdga [_cccfg ];
_eccgf {continue ;};_afffc :=int64 (0);switch _dbgdc :=_cccfg .(type ){case *_cg .PdfIndirectObject :_afffc =_dbgdc .ObjectNumber ;case *_cg .PdfObjectStream :_afffc =_dbgdc .ObjectNumber ;case *_cg .PdfObjectStreams :_afffc =_dbgdc .ObjectNumber ;default:_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_cccfg );
return ErrTypeCheck ;};if _bbefca ._gagda !=nil &&_cccfg !=_bbefca ._dcceb {_cfbfd :=_bbefca ._gagda .Encrypt (_cccfg ,_afffc ,0);if _cfbfd !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_cfbfd );
return _cfbfd ;};};_bbefca .writeObject (int (_afffc ),_cccfg );};return nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_edbe *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ad .CharCode )(_gfbf []rune ,_fefee ,_ddag int ){_bdaad ,_fefee ,_ddag :=_edbe .CharcodesToStrings (charcodes );return []rune (_eaf .Join (_bdaad ,"")),_fefee ,_ddag ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_agcfd *PdfFont )ToUnicode ()string {if _agcfd .baseFields ()._cgcg ==nil {return "";};return _agcfd .baseFields ()._cgcg .Name ();};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);
FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);
FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);
FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););func (_cgabf Image )getBase ()_dg .ImageBase {return _dg .NewImageBase (int (_cgabf .Width ),int (_cgabf .Height ),int (_cgabf .BitsPerComponent ),_cgabf .ColorComponents ,_cgabf .Data ,_cgabf ._cfdb ,_cgabf ._abbba );
};

// ColorToRGB converts an Indexed color to an RGB color.
func (_cdbb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdbb .Base ==nil {return nil ,_cc .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cdbb .Base .ColorToRGB (color );};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _cg .PdfObject )(*PdfFont ,error ){return _degfe (fontObj ,true )};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_cfdb []byte ;_abbba []float64 ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_abfgg *PdfWriter )SetOptimizer (optimizer Optimizer ){_abfgg ._ecgdg =optimizer };func (_adfg SignatureValidationResult )String ()string {var _dbcfc _cd .Buffer ;_dbcfc .WriteString (_f .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_adfg .Name ));
if _adfg .Date ._bedd > 0{_dbcfc .WriteString (_f .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_adfg .Date .ToGoTime ().String ()));}else {_dbcfc .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_adfg .Reason )> 0{_dbcfc .WriteString (_f .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_adfg .Reason ));}else {_dbcfc .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_adfg .Location )> 0{_dbcfc .WriteString (_f .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_adfg .Location ));}else {_dbcfc .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_adfg .ContactInfo )> 0{_dbcfc .WriteString (_f .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_adfg .ContactInfo ));}else {_dbcfc .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_dbcfc .WriteString (_f .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_adfg .Fields )));if _adfg .IsSigned {_dbcfc .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_dbcfc .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _adfg .IsVerified {_dbcfc .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_dbcfc .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _adfg .IsTrusted {_dbcfc .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_dbcfc .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_adfg .GeneralizedTime .IsZero (){_dbcfc .WriteString (_f .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_adfg .GeneralizedTime .String ()));
};return _dbcfc .String ();};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_bgdg *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_gaeg :=_bgdg .fill (provider ,appGen );if _gaeg !=nil {return _gaeg ;};if _ ,_cdbd :=provider .(FieldImageProvider );_cdbd {_gaeg =_bgdg .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _gaeg ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_ggcg *PdfPage )SetContentStreams (cStreams []string ,encoder _cg .StreamEncoder )error {if len (cStreams )==0{_ggcg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_cg .NewRawEncoder ();};var _fdbcaf []*_cg .PdfObjectStream ;for _ ,_eecca :=range cStreams {_dbga :=&_cg .PdfObjectStream {};
_gfcba :=encoder .MakeStreamDict ();_cgef ,_effdc :=encoder .EncodeBytes ([]byte (_eecca ));if _effdc !=nil {return _effdc ;};_gfcba .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_cgef ))));_dbga .PdfObjectDictionary =_gfcba ;
_dbga .Stream =_cgef ;_fdbcaf =append (_fdbcaf ,_dbga );};if len (_fdbcaf )==1{_ggcg .Contents =_fdbcaf [0];}else {_gcebe :=_cg .MakeArray ();for _ ,_bbdfb :=range _fdbcaf {_gcebe .Append (_bbdfb );};_ggcg .Contents =_gcebe ;};return nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _cg .PdfObject ;Name _cg .PdfObject ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cdbc *PdfReader )GetEncryptionMethod ()string {_gdfeg :=_cdbc ._adfcb .GetCrypter ();return _gdfeg .String ();};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_gdc :=NewPdfAnnotation ();_deb :=&PdfAnnotationCircle {};_deb .PdfAnnotation =_gdc ;_deb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdc .SetContext (_deb );return _deb ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _eda .ReadSeeker )(*PdfFont ,error ){_ecffb ,_begge :=_fg .ReadAll (r );if _begge !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_begge );
return nil ,_begge ;};_cgced ,_begge :=_af .TtfParse (_cd .NewReader (_ecffb ));if _begge !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_begge );
return nil ,_begge ;};_fcddc :=&pdfCIDFontType2 {fontCommon :fontCommon {_dbba :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_cg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_cgced .Widths )<=0{return nil ,_cc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bfcc :=1000.0/float64 (_cgced .UnitsPerEm );_egcbb :=_bfcc *float64 (_cgced .Widths [0]);_cfbd :=make (map[rune ]int );_egcdf :=make (map[_af .GID ]int );_efeb :=_af .GID (len (_cgced .Widths ));for _fbec ,_fgeag :=range _cgced .Chars {if _fgeag > _efeb -1{continue ;
};_aedfd :=int (_bfcc *float64 (_cgced .Widths [_fgeag ]));_cfbd [_fbec ]=_aedfd ;_egcdf [_fgeag ]=_aedfd ;};_fcddc ._ddcd =_cfbd ;_fcddc .DW =_cg .MakeInteger (int64 (_egcbb ));_gbedc :=_caaeg (_egcdf ,uint16 (_efeb ));_fcddc .W =_cg .MakeIndirectObject (_gbedc );
_dbacf :=_cg .MakeDict ();_dbacf .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_cg .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_dbacf .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_cg .MakeString ("\u0041\u0064\u006fb\u0065"));
_dbacf .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_cg .MakeInteger (0));_fcddc .CIDSystemInfo =_dbacf ;_adecf :=&PdfFontDescriptor {FontName :_cg .MakeName (_cgced .PostScriptName ),Ascent :_cg .MakeFloat (_bfcc *float64 (_cgced .TypoAscender )),Descent :_cg .MakeFloat (_bfcc *float64 (_cgced .TypoDescender )),CapHeight :_cg .MakeFloat (_bfcc *float64 (_cgced .CapHeight )),FontBBox :_cg .MakeArrayFromFloats ([]float64 {_bfcc *float64 (_cgced .Xmin ),_bfcc *float64 (_cgced .Ymin ),_bfcc *float64 (_cgced .Xmax ),_bfcc *float64 (_cgced .Ymax )}),ItalicAngle :_cg .MakeFloat (_cgced .ItalicAngle ),MissingWidth :_cg .MakeFloat (_egcbb )};
_cedc ,_begge :=_cg .MakeStream (_ecffb ,_cg .NewFlateEncoder ());if _begge !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_begge );
return nil ,_begge ;};_cedc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cg .MakeInteger (int64 (len (_ecffb ))));_adecf .FontFile2 =_cedc ;if _cgced .Bold {_adecf .StemV =_cg .MakeInteger (120);}else {_adecf .StemV =_cg .MakeInteger (70);
};_gagcg :=_dbcdc ;if _cgced .IsFixedPitch {_gagcg |=_afdba ;};if _cgced .ItalicAngle !=0{_gagcg |=_febd ;};_adecf .Flags =_cg .MakeInteger (int64 (_gagcg ));_fcddc ._gbfc =_cgced .PostScriptName ;_fcddc ._ffab =_adecf ;_fcgd :=pdfFontType0 {fontCommon :fontCommon {_dbba :"\u0054\u0079\u0070e\u0030",_gbfc :_cgced .PostScriptName },DescendantFont :&PdfFont {_dfaba :_fcddc },Encoding :_cg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_efac :_cgced .NewEncoder ()};
if len (_cgced .Chars )> 0{_ccdd :=make (map[_cag .CharCode ]rune ,len (_cgced .Chars ));for _beag ,_fcbbc :=range _cgced .Chars {_abbaa :=_cag .CharCode (_fcbbc );if _cced ,_bcgbd :=_ccdd [_abbaa ];!_bcgbd ||(_bcgbd &&_cced > _beag ){_ccdd [_abbaa ]=_beag ;
};};_fcgd ._cgcg =_cag .NewToUnicodeCMap (_ccdd );};_beff :=PdfFont {_dfaba :&_fcgd };return &_beff ,nil ;};

// L returns the value of the L component of the color.
func (_aggec *PdfColorLab )L ()float64 {return _aggec [0]};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_cg .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_cade *_cg .PdfIndirectObject ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_bade :=NewPdfAnnotation ();_ffdc :=&PdfAnnotationPolygon {};_ffdc .PdfAnnotation =_bade ;_ffdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bade .SetContext (_ffdc );return _ffdc ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_befg *PdfPageResources )AddExtGState (gsName _cg .PdfObjectName ,gsDict _cg .PdfObject )error {if _befg .ExtGState ==nil {_befg .ExtGState =_cg .MakeDict ();};_gaga :=_befg .ExtGState ;_gegd ,_cbbac :=_cg .TraceToDirectObject (_gaga ).(*_cg .PdfObjectDictionary );
if !_cbbac {_bc .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gaga ,_cg .TraceToDirectObject (_gaga ));
return _cg .ErrTypeError ;};_gegd .Set (gsName ,gsDict );return nil ;};func (_cgcd *PdfReader )newPdfAnnotationTrapNetFromDict (_dada *_cg .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_adc :=PdfAnnotationTrapNet {};return &_adc ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bdgc *PdfColorspaceDeviceRGB )ToPdfObject ()_cg .PdfObject {return _cg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func _cceea (_fbfeb *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fbfeb }};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _cg .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _cg .PdfObject ;Contents _cg .PdfObject ;
Rotate *int64 ;Group _cg .PdfObject ;Thumb _cg .PdfObject ;B _cg .PdfObject ;Dur _cg .PdfObject ;Trans _cg .PdfObject ;AA _cg .PdfObject ;Metadata _cg .PdfObject ;PieceInfo _cg .PdfObject ;StructParents _cg .PdfObject ;ID _cg .PdfObject ;PZ _cg .PdfObject ;
SeparationInfo _cg .PdfObject ;Tabs _cg .PdfObject ;TemplateInstantiated _cg .PdfObject ;PresSteps _cg .PdfObject ;UserUnit _cg .PdfObject ;VP _cg .PdfObject ;Annots _cg .PdfObject ;_abbce []*PdfAnnotation ;_egge *_cg .PdfObjectDictionary ;_afeaa *_cg .PdfIndirectObject ;
_dfef *PdfReader ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_eecga *XObjectForm )GetContainingPdfObject ()_cg .PdfObject {return _eecga ._debbe };

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _cg .PdfObject ;Q _cg .PdfObject ;RC _cg .PdfObject ;DS _cg .PdfObject ;CL _cg .PdfObject ;IT _cg .PdfObject ;BE _cg .PdfObject ;RD _cg .PdfObject ;BS _cg .PdfObject ;LE _cg .PdfObject ;
};func (_debb *PdfReader )newPdfAnnotationMovieFromDict (_gfgd *_cg .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_bfae :=PdfAnnotationMovie {};_bfae .T =_gfgd .Get ("\u0054");_bfae .Movie =_gfgd .Get ("\u004d\u006f\u0076i\u0065");_bfae .A =_gfgd .Get ("\u0041");
return &_bfae ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;BitsPerFlag *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};

// SetBorderWidth sets the style's border width.
func (_dfcb *PdfBorderStyle )SetBorderWidth (width float64 ){_dfcb .W =&width };func (_abgf fontCommon )asPdfObjectDictionary (_faefg string )*_cg .PdfObjectDictionary {if _faefg !=""&&_abgf ._dbba !=""&&_faefg !=_abgf ._dbba {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_faefg ,_abgf );
}else if _faefg ==""&&_abgf ._dbba ==""{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_abgf );
}else if _abgf ._dbba ==""{_abgf ._dbba =_faefg ;};_gegfc :=_cg .MakeDict ();_gegfc .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u006e\u0074"));_gegfc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cg .MakeName (_abgf ._gbfc ));
_gegfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName (_abgf ._dbba ));if _abgf ._ffab !=nil {_gegfc .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_abgf ._ffab .ToPdfObject ());};if _abgf ._cccgf !=nil {_gegfc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_abgf ._cccgf );
}else if _abgf ._cgcg !=nil {_efce ,_ccdfeg :=_abgf ._cgcg .Stream ();if _ccdfeg !=nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_ccdfeg );
}else {_gegfc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_efce );};};return _gegfc ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_feaad :=&PdfSignature {Type :_cg .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bbbcg :=&pdfSignDictionary {PdfObjectDictionary :_cg .MakeDict (),_fcefdb :&handler ,_cgeeff :_feaad };
_feaad ._dcfef =_cg .MakeIndirectObject (_bbbcg );return _feaad ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bbc :=NewPdfAnnotation ();_ddf :=&PdfAnnotationFreeText {};_ddf .PdfAnnotation =_bbc ;_ddf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbc .SetContext (_ddf );return _ddf ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_eedea pdfFontSimple )GetCharMetrics (code _ad .CharCode )(_af .CharMetrics ,bool ){if _fceb ,_cbbaf :=_eedea ._cegee [code ];_cbbaf {return _af .CharMetrics {Wx :_fceb },true ;};if _af .IsStdFont (_af .StdFontName (_eedea ._gbfc )){return _af .CharMetrics {Wx :250},true ;
};return _af .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_dba *PdfAnnotationLink )ToPdfObject ()_cg .PdfObject {_dba .PdfAnnotation .ToPdfObject ();_ggdec :=_dba ._bgf ;_ebeb :=_ggdec .PdfObject .(*_cg .PdfObjectDictionary );_ebeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u004c\u0069\u006e\u006b"));
if _dba ._baa !=nil &&_dba ._baa ._eee !=nil {_ebeb .Set ("\u0041",_dba ._baa ._eee .ToPdfObject ());}else if _dba .A !=nil {_ebeb .Set ("\u0041",_dba .A );};_ebeb .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dba .Dest );_ebeb .SetIfNotNil ("\u0048",_dba .H );
_ebeb .SetIfNotNil ("\u0050\u0041",_dba .PA );_ebeb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dba .QuadPoints );_ebeb .SetIfNotNil ("\u0042\u0053",_dba .BS );return _ggdec ;};func (_bdga *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bdga ._adfcb .GetCrypter ()!=nil &&!_bdga ._adfcb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_baed :=_bdga ._egdgf ;_efcfe :=_baed .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _efcfe ==nil {return nil ,nil ;};_aabfe ,_ :=_cg .GetIndirect (_efcfe );_efcfe =_cg .TraceToDirectObject (_efcfe );if _cg .IsNullObject (_efcfe ){_bc .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bbgcg ,_afdcb :=_cg .GetDict (_efcfe );if !_afdcb {_bc .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_efcfe );_bc .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_efcfe );};_bc .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_bc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bdga ._ebebf {_gfeed :=_bdga .traverseObjectData (_bbgcg );
if _gfeed !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gfeed );
return nil ,_gfeed ;};};_agcff ,_deec :=_bdga .newPdfAcroFormFromDict (_aabfe ,_bbgcg );if _deec !=nil {return nil ,_deec ;};return _agcff ,nil ;};

// ToPdfObject returns a stream object.
func (_efbec *XObjectForm )ToPdfObject ()_cg .PdfObject {_dfcac :=_efbec ._debbe ;_aacad :=_dfcac .PdfObjectDictionary ;if _efbec .Filter !=nil {_aacad =_efbec .Filter .MakeStreamDict ();_dfcac .PdfObjectDictionary =_aacad ;};_aacad .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_aacad .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u0072\u006d"));_aacad .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_efbec .FormType );_aacad .SetIfNotNil ("\u0042\u0042\u006f\u0078",_efbec .BBox );_aacad .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_efbec .Matrix );
if _efbec .Resources !=nil {_aacad .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_efbec .Resources .ToPdfObject ());};_aacad .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_efbec .Group );_aacad .SetIfNotNil ("\u0052\u0065\u0066",_efbec .Ref );
_aacad .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_efbec .MetaData );_aacad .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_efbec .PieceInfo );_aacad .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_efbec .LastModified );
_aacad .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_efbec .StructParent );_aacad .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_efbec .StructParents );_aacad .SetIfNotNil ("\u004f\u0050\u0049",_efbec .OPI );
_aacad .SetIfNotNil ("\u004f\u0043",_efbec .OC );_aacad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_efbec .Name );_aacad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_efbec .Stream ))));_dfcac .Stream =_efbec .Stream ;return _dfcac ;
};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fcba *PdfWriter )SetNamedDestinations (dests _cg .PdfObject )error {if dests ==nil {return nil ;};_bc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_fcba ._feafc .Set ("\u0044\u0065\u0073t\u0073",dests );return _fcba .addObjects (dests );};

// GetXObjectByName gets XObject by name.
func (_acedg *PdfPage )GetXObjectByName (name _cg .PdfObjectName )(_cg .PdfObject ,bool ){_bgdd ,_faee :=_acedg .Resources .XObject .(*_cg .PdfObjectDictionary );if !_faee {return nil ,false ;};if _gcdfd :=_bgdd .Get (name );_gcdfd !=nil {return _gcdfd ,true ;
};return nil ,false ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _cg .PdfObject ;T3DV _cg .PdfObject ;T3DA _cg .PdfObject ;T3DI _cg .PdfObject ;T3DB _cg .PdfObject ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gedb *_cg .PdfIndirectObject ;Certs []*_cg .PdfObjectStream ;OCSPs []*_cg .PdfObjectStream ;CRLs []*_cg .PdfObjectStream ;VRI map[string ]*VRI ;_beaf map[string ]*_cg .PdfObjectStream ;_afaab map[string ]*_cg .PdfObjectStream ;_fgdbg map[string ]*_cg .PdfObjectStream ;
};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _cg .PdfObject ;NewWindow _cg .PdfObject ;T _cg .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_ceec *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgae :=vals [0];if _dgae < 0.0||_dgae > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgae );
return nil ,ErrColorOutOfRange ;};_affg :=vals [1];if _affg < 0.0||_affg > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgae );return nil ,ErrColorOutOfRange ;
};_eebb :=vals [2];if _eebb < 0.0||_eebb > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgae );return nil ,ErrColorOutOfRange ;};_bgbg :=NewPdfColorDeviceRGB (_dgae ,_affg ,_eebb );
return _bgbg ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gdec *PdfOutlineTreeNode )GetContext ()PdfModel {if _defec ,_cbedb :=_gdec ._egbcb .(*PdfOutline );_cbedb {return _defec ;};if _edefd ,_cbdgf :=_gdec ._egbcb .(*PdfOutlineItem );_cbdgf {return _edefd ;};_bc .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dfea :=&PdfAppender {_gaa :reader ._bgde ,Reader :reader ,_ecb :reader ._adfcb ,_dgee :reader ._ffbed };_cabb ,_fagb :=_dfea ._gaa .Seek (0,_eda .SeekEnd );if _fagb !=nil {return nil ,_fagb ;
};_dfea ._afcde =_cabb ;if _ ,_fagb =_dfea ._gaa .Seek (0,_eda .SeekStart );_fagb !=nil {return nil ,_fagb ;};_dfea ._cbba ,_fagb =NewPdfReader (_dfea ._gaa );if _fagb !=nil {return nil ,_fagb ;};for _ ,_efbf :=range _dfea .Reader .GetObjectNums (){if _dfea ._debeg < _efbf {_dfea ._debeg =_efbf ;
};};_dfea ._gfc =_dfea ._ecb .GetXrefTable ();_dfea ._bacd =_dfea ._ecb .GetXrefOffset ();_dfea ._gccd =append (_dfea ._gccd ,_dfea ._cbba .PageList ...);_dfea ._gdcc =make (map[_cg .PdfObject ]struct{});_dfea ._aaab =make (map[_cg .PdfObject ]int64 );
_dfea ._badf =make (map[_cg .PdfObject ]struct{});_dfea ._dgfd =_dfea ._cbba .AcroForm ;_dfea ._cagf =_dfea ._cbba .DSS ;return _dfea ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_eace *Outline )Insert (index uint ,item *OutlineItem ){_bbfgd :=uint (len (_eace .Entries ));if index > _bbfgd {index =_bbfgd ;};_eace .Entries =append (_eace .Entries [:index ],append ([]*OutlineItem {item },_eace .Entries [index :]...)...);};type fontCommon struct{_gbfc string ;
_dbba string ;_badcg string ;_cccgf _cg .PdfObject ;_cgcg *_cag .CMap ;_ffab *PdfFontDescriptor ;_ccfe int64 ;};

// SetOCProperties sets the optional content properties.
func (_cecdg *PdfWriter )SetOCProperties (ocProperties _cg .PdfObject )error {_dgbaf :=_cecdg ._feafc ;if ocProperties !=nil {_bc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_dgbaf .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cecdg .addObjects (ocProperties );};return nil ;};

// Encoder returns the font's text encoder.
func (_ceged pdfCIDFontType2 )Encoder ()_ad .TextEncoder {return _ceged ._bedae };

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bgeb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// SetDate sets the `M` field of the signature.
func (_agbb *PdfSignature )SetDate (date _a .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_agbb .M =_cg .MakeString (date .Format (format ));
};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_cceeb *PdfPageResources )SetXObjectByName (keyName _cg .PdfObjectName ,stream *_cg .PdfObjectStream )error {if _cceeb .XObject ==nil {_cceeb .XObject =_cg .MakeDict ();};_facggg :=_cg .TraceToDirectObject (_cceeb .XObject );_adgc ,_cdcead :=_facggg .(*_cg .PdfObjectDictionary );
if !_cdcead {_bc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_cceeb .XObject ,_facggg );return _cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_adgc .Set (keyName ,stream );return nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_agfee *PdfFieldButton )IsRadio ()bool {return _agfee .GetType ()==ButtonTypeRadio };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bcgf *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bcgf .UnderlyingCS ==nil {return nil ,_cc .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _bcgf .UnderlyingCS .ColorFromFloats (vals );};func (_abba *PdfReader )newPdfActionResetFormFromDict (_fbg *_cg .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_fbg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fbg .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_cg .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_fffgf *_cg .PdfIndirectObject ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_cfefcd :=&XObjectImage {};_dfgbfb :=&_cg .PdfObjectStream {};_dfgbfb .PdfObjectDictionary =_cg .MakeDict ();_cfefcd ._cdfcc =_dfgbfb ;return _cfefcd ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _cg .PdfObject )(*PdfFilespec ,error ){_cbde :=&PdfFilespec {};var _gdcad *_cg .PdfObjectDictionary ;if _fagbe ,_gcbe :=_cg .GetIndirect (obj );_gcbe {_cbde ._cbdf =_fagbe ;_eefc ,_egebb :=_cg .GetDict (_fagbe .PdfObject );
if !_egebb {_bc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cg .ErrTypeError ;};_gdcad =_eefc ;}else if _edgec ,_aafc :=_cg .GetDict (obj );
_aafc {_cbde ._cbdf =_edgec ;_gdcad =_edgec ;}else {_bc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_cg .ErrTypeError ;};if _gdcad ==nil {_bc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fefdf :=_gdcad .Get ("\u0054\u0079\u0070\u0065");_fefdf !=nil {_fgab ,_aeca :=_fefdf .(*_cg .PdfObjectName );if !_aeca {_bc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fefdf );
}else {if *_fgab !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_bc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_fgab );
};};};if _cgbcg :=_gdcad .Get ("\u0046\u0053");_cgbcg !=nil {_cbde .FS =_cgbcg ;};if _ebgc :=_gdcad .Get ("\u0046");_ebgc !=nil {_cbde .F =_ebgc ;};if _aced :=_gdcad .Get ("\u0055\u0046");_aced !=nil {_cbde .UF =_aced ;};if _bbgd :=_gdcad .Get ("\u0044\u004f\u0053");
_bbgd !=nil {_cbde .DOS =_bbgd ;};if _bdca :=_gdcad .Get ("\u004d\u0061\u0063");_bdca !=nil {_cbde .Mac =_bdca ;};if _ffef :=_gdcad .Get ("\u0055\u006e\u0069\u0078");_ffef !=nil {_cbde .Unix =_ffef ;};if _bagf :=_gdcad .Get ("\u0049\u0044");_bagf !=nil {_cbde .ID =_bagf ;
};if _ddgbc :=_gdcad .Get ("\u0056");_ddgbc !=nil {_cbde .V =_ddgbc ;};if _cacf :=_gdcad .Get ("\u0045\u0046");_cacf !=nil {_cbde .EF =_cacf ;};if _ebaca :=_gdcad .Get ("\u0052\u0046");_ebaca !=nil {_cbde .RF =_ebaca ;};if _egac :=_gdcad .Get ("\u0044\u0065\u0073\u0063");
_egac !=nil {_cbde .Desc =_egac ;};if _gbdfd :=_gdcad .Get ("\u0043\u0049");_gbdfd !=nil {_cbde .CI =_gbdfd ;};return _cbde ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bebbe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_cg .PdfObject {_egce :=_cg .MakeDict ();if _bebbe .Subtype !=nil {_egce .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bebbe .Subtype );};_egce .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bebbe .Colorants );
_egce .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bebbe .Process );_egce .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bebbe .MixingHints );if _bebbe ._ccffg !=nil {_bebbe ._ccffg .PdfObject =_egce ;return _bebbe ._ccffg ;
};return _egce ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _eda .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _fgde ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _fdbef (rs ,opts ,true ,_fgde );
};func (_abbdg *LTV )getCerts (_cada []*_eb .Certificate )([][]byte ,error ){_gfbca :=make ([][]byte ,0,len (_cada ));for _ ,_ddfbg :=range _cada {_gfbca =append (_gfbca ,_ddfbg .Raw );};return _gfbca ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_fcce *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// B returns the value of the B component of the color.
func (_fgbcc *PdfColorLab )B ()float64 {return _fgbcc [2]};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_gbgbc :=&PdfPageResourcesColorspaces {};_gbgbc .Names =[]string {};_gbgbc .Colorspaces =map[string ]PdfColorspace {};_gbgbc ._dffee =&_cg .PdfIndirectObject {};return _gbgbc ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_dbfeg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dcbf *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_ceeb :=&PdfColorPattern {};_ccfb ,_cefb :=objects [len (objects )-1].(*_cg .PdfObjectName );if !_cefb {_bc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_ceeb .PatternName =*_ccfb ;if len (objects )> 1{_afea :=objects [0:len (objects )-1];if _dcbf .UnderlyingCS ==nil {_bc .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_ddcfc ,_aaec :=_dcbf .UnderlyingCS .ColorFromPdfObjects (_afea );if _aaec !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_aaec );
return nil ,_aaec ;};_ceeb .Color =_ddcfc ;};return _ceeb ,nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _cg .PdfObject ;Popup *PdfAnnotationPopup ;CA _cg .PdfObject ;RC _cg .PdfObject ;CreationDate _cg .PdfObject ;IRT _cg .PdfObject ;Subj _cg .PdfObject ;RT _cg .PdfObject ;IT _cg .PdfObject ;ExData _cg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbdg *PdfAnnotationUnderline )ToPdfObject ()_cg .PdfObject {_bbdg .PdfAnnotation .ToPdfObject ();_befd :=_bbdg ._bgf ;_ffc :=_befd .PdfObject .(*_cg .PdfObjectDictionary );_bbdg .PdfAnnotationMarkup .appendToPdfDictionary (_ffc );_ffc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ffc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbdg .QuadPoints );return _befd ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_dfeac :=PdfColorCalGray (grayVal );return &_dfeac ;};

// HasExtGState checks if ExtGState name is available.
func (_gfebb *PdfPage )HasExtGState (name _cg .PdfObjectName )bool {if _gfebb .Resources ==nil {return false ;};if _gfebb .Resources .ExtGState ==nil {return false ;};_dgfe ,_cbffbg :=_cg .TraceToDirectObject (_gfebb .Resources .ExtGState ).(*_cg .PdfObjectDictionary );
if !_cbffbg {_bc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cg .TraceToDirectObject (_gfebb .Resources .ExtGState ));
return false ;};_fcef :=_dgfe .Get (name );_fgbccb :=_fcef !=nil ;return _fgbccb ;};func _caca (_cgbc _cg .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_eeefd :=NewPdfColorspaceSpecialIndexed ();if _badba ,_aefc :=_cgbc .(*_cg .PdfIndirectObject );
_aefc {_eeefd ._bcgd =_badba ;};_cgbc =_cg .TraceToDirectObject (_cgbc );_gegf ,_gbfa :=_cgbc .(*_cg .PdfObjectArray );if !_gbfa {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gegf .Len ()!=4{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_cgbc =_gegf .Get (0);_cedag ,_gbfa :=_cgbc .(*_cg .PdfObjectName );if !_gbfa {return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_cedag !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_cgbc =_gegf .Get (1);_ecff ,_eeda :=DetermineColorspaceNameFromPdfObject (_cgbc );if _eeda !=nil {return nil ,_eeda ;};if _ecff =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_ecff =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bc .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_ecff );
return nil ,_ebadd ;};_gbac ,_eeda :=NewPdfColorspaceFromPdfObject (_cgbc );if _eeda !=nil {return nil ,_eeda ;};_eeefd .Base =_gbac ;_cgbc =_gegf .Get (2);_feag ,_eeda :=_cg .GetNumberAsInt64 (_cgbc );if _eeda !=nil {return nil ,_eeda ;};if _feag > 255{return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_eeefd .HiVal =int (_feag );_cgbc =_gegf .Get (3);_eeefd .Lookup =_cgbc ;_cgbc =_cg .TraceToDirectObject (_cgbc );var _ddae []byte ;if _bfef ,_fcacgb :=_cgbc .(*_cg .PdfObjectString );_fcacgb {_ddae =_bfef .Bytes ();_bc .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ddae );
}else if _agbe ,_daff :=_cgbc .(*_cg .PdfObjectStream );_daff {_bc .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cgbc .String ());_bc .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_agbe .Stream ),_agbe .Stream );
_dafc ,_acdd :=_cg .DecodeStream (_agbe );if _acdd !=nil {return nil ,_acdd ;};_bc .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dafc ),_dafc );_ddae =_dafc ;}else {_bc .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cgbc );
return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ddae )< _eeefd .Base .GetNumComponents ()*(_eeefd .HiVal +1){_bc .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_bc .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ddae ),_eeefd .Base .GetNumComponents (),_eeefd .HiVal );
}else {_ddae =_ddae [:_eeefd .Base .GetNumComponents ()*(_eeefd .HiVal +1)];};_eeefd ._fadb =_ddae ;return _eeefd ,nil ;};func _ggef (_fbgd _cg .PdfObject ,_adeaga *fontCommon )(*_cag .CMap ,error ){_cfcdf ,_egbc :=_cg .GetStream (_fbgd );if !_egbc {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_fbgd );
return nil ,_cg .ErrTypeError ;};_fgcbd ,_bdcd :=_cg .DecodeStream (_cfcdf );if _bdcd !=nil {return nil ,_bdcd ;};_bcdfa ,_bdcd :=_cag .LoadCmapFromData (_fgcbd ,!_adeaga .isCIDFont ());if _bdcd !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_cfcdf .ObjectNumber ,_bdcd );
};return _bcdfa ,_bdcd ;};func (_edegb *PdfWriter )copyObject (_ecdbd _cg .PdfObject ,_faca map[_cg .PdfObject ]_cg .PdfObject ,_ebefe map[_cg .PdfObject ]struct{},_dcbba bool )_cg .PdfObject {_egaac :=!_edegb ._egaa &&_ebefe !=nil ;if _eagbg ,_cbcfg :=_faca [_ecdbd ];
_cbcfg {if _egaac &&!_dcbba {delete (_ebefe ,_ecdbd );};return _eagbg ;};_ebcc :=_ecdbd ;switch _afbeb :=_ecdbd .(type ){case *_cg .PdfObjectArray :_cbddf :=_cg .MakeArray ();_ebcc =_cbddf ;_faca [_ecdbd ]=_ebcc ;for _ ,_eadc :=range _afbeb .Elements (){_cbddf .Append (_edegb .copyObject (_eadc ,_faca ,_ebefe ,_dcbba ));
};case *_cg .PdfObjectStreams :_dffbf :=&_cg .PdfObjectStreams {PdfObjectReference :_afbeb .PdfObjectReference };_ebcc =_dffbf ;_faca [_ecdbd ]=_ebcc ;for _ ,_gfeee :=range _afbeb .Elements (){_dffbf .Append (_edegb .copyObject (_gfeee ,_faca ,_ebefe ,_dcbba ));
};case *_cg .PdfObjectStream :_daecd :=&_cg .PdfObjectStream {Stream :_afbeb .Stream ,PdfObjectReference :_afbeb .PdfObjectReference };_ebcc =_daecd ;_faca [_ecdbd ]=_ebcc ;_daecd .PdfObjectDictionary =_edegb .copyObject (_afbeb .PdfObjectDictionary ,_faca ,_ebefe ,_dcbba ).(*_cg .PdfObjectDictionary );
case *_cg .PdfObjectDictionary :var _caag bool ;if _egaac &&!_dcbba {if _dadf ,_ :=_cg .GetNameVal (_afbeb .Get ("\u0054\u0079\u0070\u0065"));_dadf =="\u0050\u0061\u0067\u0065"{_ ,_gdgbb :=_edegb ._gbdfe [_afbeb ];_dcbba =!_gdgbb ;_caag =_dcbba ;};};_cfbgc :=_cg .MakeDict ();
_ebcc =_cfbgc ;_faca [_ecdbd ]=_ebcc ;for _ ,_dcbda :=range _afbeb .Keys (){_cfbgc .Set (_dcbda ,_edegb .copyObject (_afbeb .Get (_dcbda ),_faca ,_ebefe ,_dcbba ));};if _caag {_ebcc =_cg .MakeNull ();_dcbba =false ;};case *_cg .PdfIndirectObject :_ecfdd :=&_cg .PdfIndirectObject {PdfObjectReference :_afbeb .PdfObjectReference };
_ebcc =_ecfdd ;_faca [_ecdbd ]=_ebcc ;_ecfdd .PdfObject =_edegb .copyObject (_afbeb .PdfObject ,_faca ,_ebefe ,_dcbba );case *_cg .PdfObjectString :_ggcgf :=*_afbeb ;_ebcc =&_ggcgf ;_faca [_ecdbd ]=_ebcc ;case *_cg .PdfObjectName :_ffbg :=*_afbeb ;_ebcc =&_ffbg ;
_faca [_ecdbd ]=_ebcc ;case *_cg .PdfObjectNull :_ebcc =_cg .MakeNull ();_faca [_ecdbd ]=_ebcc ;case *_cg .PdfObjectInteger :_gagbf :=*_afbeb ;_ebcc =&_gagbf ;_faca [_ecdbd ]=_ebcc ;case *_cg .PdfObjectReference :_ccbga :=*_afbeb ;_ebcc =&_ccbga ;_faca [_ecdbd ]=_ebcc ;
case *_cg .PdfObjectFloat :_efcgg :=*_afbeb ;_ebcc =&_efcgg ;_faca [_ecdbd ]=_ebcc ;case *_cg .PdfObjectBool :_gdcg :=*_afbeb ;_ebcc =&_gdcg ;_faca [_ecdbd ]=_ebcc ;case *pdfSignDictionary :_ffeea :=&pdfSignDictionary {PdfObjectDictionary :_cg .MakeDict (),_fcefdb :_afbeb ._fcefdb ,_cgeeff :_afbeb ._cgeeff };
_ebcc =_ffeea ;_faca [_ecdbd ]=_ebcc ;for _ ,_effg :=range _afbeb .Keys (){_ffeea .Set (_effg ,_edegb .copyObject (_afbeb .Get (_effg ),_faca ,_ebefe ,_dcbba ));};default:_bc .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ecdbd );
};if _egaac &&_dcbba {_ebefe [_ecdbd ]=struct{}{};};return _ebcc ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;RD _cg .PdfObject ;};func (_bfeg *XObjectImage )getParamsDict ()*_cg .PdfObjectDictionary {_adbfc :=_cg .MakeDict ();_adbfc .Set ("\u0057\u0069\u0064t\u0068",_cg .MakeInteger (*_bfeg .Width ));
_adbfc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cg .MakeInteger (*_bfeg .Height ));_adbfc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cg .MakeInteger (int64 (_bfeg .ColorSpace .GetNumComponents ())));_adbfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cg .MakeInteger (*_bfeg .BitsPerComponent ));
return _adbfc ;};func (_ggfdb *PdfWriter )setCatalogVersion (){_ggfdb ._feafc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cg .MakeName (_f .Sprintf ("\u0025\u0064\u002e%\u0064",_ggfdb ._baefbc .Major ,_ggfdb ._baefbc .Minor )));};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gbcfa *PdfPage )GetPageDict ()*_cg .PdfObjectDictionary {_dgge :=_gbcfa ._egge ;_dgge .Clear ();_dgge .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050\u0061\u0067\u0065"));_dgge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbcfa .Parent );
if _gbcfa .LastModified !=nil {_dgge .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gbcfa .LastModified .ToPdfObject ());};if _gbcfa .Resources !=nil {_dgge .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gbcfa .Resources .ToPdfObject ());
};if _gbcfa .CropBox !=nil {_dgge .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gbcfa .CropBox .ToPdfObject ());};if _gbcfa .MediaBox !=nil {_dgge .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gbcfa .MediaBox .ToPdfObject ());};if _gbcfa .BleedBox !=nil {_dgge .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gbcfa .BleedBox .ToPdfObject ());
};if _gbcfa .TrimBox !=nil {_dgge .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gbcfa .TrimBox .ToPdfObject ());};if _gbcfa .ArtBox !=nil {_dgge .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gbcfa .ArtBox .ToPdfObject ());};_dgge .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gbcfa .BoxColorInfo );
_dgge .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gbcfa .Contents );if _gbcfa .Rotate !=nil {_dgge .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cg .MakeInteger (*_gbcfa .Rotate ));};_dgge .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gbcfa .Group );
_dgge .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gbcfa .Thumb );_dgge .SetIfNotNil ("\u0042",_gbcfa .B );_dgge .SetIfNotNil ("\u0044\u0075\u0072",_gbcfa .Dur );_dgge .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gbcfa .Trans );_dgge .SetIfNotNil ("\u0041\u0041",_gbcfa .AA );
_dgge .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gbcfa .Metadata );_dgge .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gbcfa .PieceInfo );_dgge .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gbcfa .StructParents );
_dgge .SetIfNotNil ("\u0049\u0044",_gbcfa .ID );_dgge .SetIfNotNil ("\u0050\u005a",_gbcfa .PZ );_dgge .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gbcfa .SeparationInfo );_dgge .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gbcfa .Tabs );
_dgge .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gbcfa .TemplateInstantiated );_dgge .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gbcfa .PresSteps );_dgge .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gbcfa .UserUnit );
_dgge .SetIfNotNil ("\u0056\u0050",_gbcfa .VP );if _gbcfa ._abbce !=nil {_ebag :=_cg .MakeArray ();for _ ,_ffee :=range _gbcfa ._abbce {if _eabc :=_ffee .GetContext ();_eabc !=nil {_ebag .Append (_eabc .ToPdfObject ());}else {_ebag .Append (_ffee .ToPdfObject ());
};};if _ebag .Len ()> 0{_dgge .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_ebag );};}else if _gbcfa .Annots !=nil {_dgge .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gbcfa .Annots );};return _dgge ;};

// ToInteger convert to an integer format.
func (_adfa *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ebfg :=_bb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ebfg *_adfa .A ()),uint32 (_ebfg *_adfa .B ()),uint32 (_ebfg *_adfa .C ())};};func (_ebadb *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_acfac *PdfReader )newPdfActionJavaScriptFromDict (_cdc *_cg .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cdc .Get ("\u004a\u0053")},nil ;
};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cccf _eda .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_ebga _fe .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dcfc _fe .Image )(*Image ,error );

// Compress an image.
Compress (_cbfef *Image ,_adecc int64 )(*Image ,error );};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cda :=NewPdfAnnotation ();_aac :=&PdfAnnotationMovie {};_aac .PdfAnnotation =_cda ;_cda .SetContext (_aac );return _aac ;};

// K returns the value of the key component of the color.
func (_cdcec *PdfColorDeviceCMYK )K ()float64 {return _cdcec [3]};

// ToPdfObject converts the font to a PDF representation.
func (_agee *pdfFontType3 )ToPdfObject ()_cg .PdfObject {if _agee ._aabf ==nil {_agee ._aabf =&_cg .PdfIndirectObject {};};_afdac :=_agee .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_agee ._aabf .PdfObject =_afdac ;if _agee .FirstChar !=nil {_afdac .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_agee .FirstChar );
};if _agee .LastChar !=nil {_afdac .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_agee .LastChar );};if _agee .Widths !=nil {_afdac .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_agee .Widths );};if _agee .Encoding !=nil {_afdac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_agee .Encoding );
}else if _agee ._dgggg !=nil {_edbf :=_agee ._dgggg .ToPdfObject ();if _edbf !=nil {_afdac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_edbf );};};if _agee .FontBBox !=nil {_afdac .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_agee .FontBBox );
};if _agee .FontMatrix !=nil {_afdac .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_agee .FontMatrix );};if _agee .CharProcs !=nil {_afdac .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_agee .CharProcs );};if _agee .Resources !=nil {_afdac .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_agee .Resources );
};return _agee ._aabf ;};

// IsShading specifies if the pattern is a shading pattern.
func (_affbc *PdfPattern )IsShading ()bool {return _affbc .PatternType ==2};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_aaedb *PdfFieldButton )ToPdfObject ()_cg .PdfObject {_aaedb .PdfField .ToPdfObject ();_edfca :=_aaedb ._edge ;_ebbd :=_edfca .PdfObject .(*_cg .PdfObjectDictionary );_ebbd .Set ("\u0046\u0054",_cg .MakeName ("\u0042\u0074\u006e"));if _aaedb .Opt !=nil {_ebbd .Set ("\u004f\u0070\u0074",_aaedb .Opt );
};return _edfca ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_eabag *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _eabag ._abbce !=nil {return _eabag ._abbce ,nil ;};if _eabag .Annots ==nil {_eabag ._abbce =[]*PdfAnnotation {};return nil ,nil ;};if _eabag ._dfef ==nil {_eabag ._abbce =[]*PdfAnnotation {};
return nil ,nil ;};_ecebg ,_ecaea :=_eabag ._dfef .loadAnnotations (_eabag .Annots );if _ecaea !=nil {return nil ,_ecaea ;};if _ecebg ==nil {_eabag ._abbce =[]*PdfAnnotation {};};_eabag ._abbce =_ecebg ;return _eabag ._abbce ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cabae pdfCIDFontType0 )GetCharMetrics (code _ad .CharCode )(_af .CharMetrics ,bool ){_daecg :=_cabae ._dgcb ;if _ccfd ,_fbbcf :=_cabae ._eggf [code ];_fbbcf {_daecg =_ccfd ;};return _af .CharMetrics {Wx :_daecg },true ;};func _cecde (_efcfd []byte )[]byte {const _cabfc =52845;
const _dgfff =22719;_cfggc :=55665;for _ ,_cdcge :=range _efcfd [:4]{_cfggc =(int (_cdcge )+_cfggc )*_cabfc +_dgfff ;};_debbf :=make ([]byte ,len (_efcfd )-4);for _agbad ,_gacd :=range _efcfd [4:]{_debbf [_agbad ]=byte (int (_gacd )^_cfggc >>8);_cfggc =(int (_gacd )+_cfggc )*_cabfc +_dgfff ;
};return _debbf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_abfgf *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeef ,_gfdcg :=_cg .GetNumbersAsFloat (objects );
if _gfdcg !=nil {return nil ,_gfdcg ;};return _abfgf .ColorFromFloats (_aeef );};func (_aagd *PdfReader )newPdfAnnotationSoundFromDict (_fbfb *_cg .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_ccef :=PdfAnnotationSound {};_efcb ,_badc :=_aagd .newPdfAnnotationMarkupFromDict (_fbfb );
if _badc !=nil {return nil ,_badc ;};_ccef .PdfAnnotationMarkup =_efcb ;_ccef .Name =_fbfb .Get ("\u004e\u0061\u006d\u0065");_ccef .Sound =_fbfb .Get ("\u0053\u006f\u0075n\u0064");return &_ccef ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _cg .PdfObject ;ColorSpace _cg .PdfObject ;Pattern _cg .PdfObject ;Shading _cg .PdfObject ;XObject _cg .PdfObject ;Font _cg .PdfObject ;ProcSet _cg .PdfObject ;Properties _cg .PdfObject ;_eaada *_cg .PdfObjectDictionary ;
_fabdb *PdfPageResourcesColorspaces ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_cg .PdfObjectStream )(*XObjectImage ,error ){_fccb :=&XObjectImage {};_fccb ._cdfcc =stream ;_dfdafa :=*(stream .PdfObjectDictionary );_eccb ,_dcbdaf :=_cg .NewEncoderFromStream (stream );if _dcbdaf !=nil {return nil ,_dcbdaf ;
};_fccb .Filter =_eccb ;if _bcad :=_cg .TraceToDirectObject (_dfdafa .Get ("\u0057\u0069\u0064t\u0068"));_bcad !=nil {_fedba ,_fcaag :=_bcad .(*_cg .PdfObjectInteger );if !_fcaag {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_eecbe :=int64 (*_fedba );_fccb .Width =&_eecbe ;}else {return nil ,_cc .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gfgge :=_cg .TraceToDirectObject (_dfdafa .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gfgge !=nil {_fgcga ,_gefg :=_gfgge .(*_cg .PdfObjectInteger );if !_gefg {return nil ,_cc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_befaf :=int64 (*_fgcga );
_fccb .Height =&_befaf ;}else {return nil ,_cc .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _acffa :=_cg .TraceToDirectObject (_dfdafa .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_acffa !=nil {_bcca ,_baagd :=NewPdfColorspaceFromPdfObject (_acffa );if _baagd !=nil {return nil ,_baagd ;};_fccb .ColorSpace =_bcca ;}else {_bc .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_fccb .ColorSpace =NewPdfColorspaceDeviceGray ();};if _cfbgf :=_cg .TraceToDirectObject (_dfdafa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cfbgf !=nil {_edbg ,_adfge :=_cfbgf .(*_cg .PdfObjectInteger );
if !_adfge {return nil ,_cc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dbaae :=int64 (*_edbg );_fccb .BitsPerComponent =&_dbaae ;};_fccb .Intent =_dfdafa .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_fccb .ImageMask =_dfdafa .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fccb .Mask =_dfdafa .Get ("\u004d\u0061\u0073\u006b");_fccb .Decode =_dfdafa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fccb .Interpolate =_dfdafa .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_fccb .Alternatives =_dfdafa .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fccb .SMask =_dfdafa .Get ("\u0053\u004d\u0061s\u006b");_fccb .SMaskInData =_dfdafa .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_fccb .Matte =_dfdafa .Get ("\u004d\u0061\u0074t\u0065");_fccb .Name =_dfdafa .Get ("\u004e\u0061\u006d\u0065");_fccb .StructParent =_dfdafa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fccb .ID =_dfdafa .Get ("\u0049\u0044");
_fccb .OPI =_dfdafa .Get ("\u004f\u0050\u0049");_fccb .Metadata =_dfdafa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fccb .OC =_dfdafa .Get ("\u004f\u0043");_fccb .Stream =stream .Stream ;return _fccb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ced *PdfActionTrans )ToPdfObject ()_cg .PdfObject {_ced .PdfAction .ToPdfObject ();_bcb :=_ced ._eab ;_gffa :=_bcb .PdfObject .(*_cg .PdfObjectDictionary );_gffa .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeTrans )));_gffa .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ced .Trans );
return _bcb ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_gccgg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _gccgg .UnderlyingCS .GetNumComponents ();};func _babf ()string {_bfda :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _fdcef _cd .Buffer ;for _dgab :=0;_dgab < 6;_dgab ++{_fdcef .WriteRune (rune (_bfda [_gb .Intn (len (_bfda ))]));};return _fdcef .String ();};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_fefe *PdfFieldButton )IsCheckbox ()bool {return _fefe .GetType ()==ButtonTypeCheckbox };

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// GetAscent returns the Ascent of the font `descriptor`.
func (_gceg *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _cg .GetNumberAsFloat (_gceg .Ascent );};func (_dgdfe *PdfWriter )writeXRefStreams (_efcfaa int ,_fabc int64 )error {_addc :=_efcfaa +1;_dgdfe ._eebbe [_addc ]=crossReference {Type :1,ObjectNumber :_addc ,Offset :_fabc };
_cbgg :=_cd .NewBuffer (nil );_dgadgg :=_cg .MakeArray ();for _cadfge :=0;_cadfge <=_efcfaa ;{for ;_cadfge <=_efcfaa ;_cadfge ++{_afacc ,_fdedd :=_dgdfe ._eebbe [_cadfge ];if _fdedd &&(!_dgdfe ._egaa ||_dgdfe ._egaa &&(_afacc .Type ==1&&_afacc .Offset >=_dgdfe ._gcgea ||_afacc .Type ==0)){break ;
};};var _gdabeb int ;for _gdabeb =_cadfge +1;_gdabeb <=_efcfaa ;_gdabeb ++{_fcacc ,_bdfg :=_dgdfe ._eebbe [_gdabeb ];if _bdfg &&(!_dgdfe ._egaa ||_dgdfe ._egaa &&(_fcacc .Type ==1&&_fcacc .Offset > _dgdfe ._gcgea )){continue ;};break ;};_dgadgg .Append (_cg .MakeInteger (int64 (_cadfge )),_cg .MakeInteger (int64 (_gdabeb -_cadfge )));
for _ccbeee :=_cadfge ;_ccbeee < _gdabeb ;_ccbeee ++{_feafg :=_dgdfe ._eebbe [_ccbeee ];switch _feafg .Type {case 0:_ed .Write (_cbgg ,_ed .BigEndian ,byte (0));_ed .Write (_cbgg ,_ed .BigEndian ,uint32 (0));_ed .Write (_cbgg ,_ed .BigEndian ,uint16 (0xFFFF));
case 1:_ed .Write (_cbgg ,_ed .BigEndian ,byte (1));_ed .Write (_cbgg ,_ed .BigEndian ,uint32 (_feafg .Offset ));_ed .Write (_cbgg ,_ed .BigEndian ,uint16 (_feafg .Generation ));case 2:_ed .Write (_cbgg ,_ed .BigEndian ,byte (2));_ed .Write (_cbgg ,_ed .BigEndian ,uint32 (_feafg .ObjectNumber ));
_ed .Write (_cbgg ,_ed .BigEndian ,uint16 (_feafg .Index ));};};_cadfge =_gdabeb +1;};_gffbf ,_bffff :=_cg .MakeStream (_cbgg .Bytes (),_cg .NewFlateEncoder ());if _bffff !=nil {return _bffff ;};_gffbf .ObjectNumber =int64 (_addc );_gffbf .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0058\u0052\u0065\u0066"));
_gffbf .PdfObjectDictionary .Set ("\u0057",_cg .MakeArray (_cg .MakeInteger (1),_cg .MakeInteger (4),_cg .MakeInteger (2)));_gffbf .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_dgadgg );_gffbf .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_cg .MakeInteger (int64 (_addc +1)));
_gffbf .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_dgdfe ._gfecf );_gffbf .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_dgdfe ._fffdf );if _dgdfe ._egaa &&_dgdfe ._ccfbe > 0{_gffbf .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_cg .MakeInteger (_dgdfe ._ccfbe ));
};if _dgdfe ._gagda !=nil {_gffbf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dgdfe ._dcceb );};if _dgdfe ._fegea ==nil &&_dgdfe ._gcccf !=""&&_dgdfe ._efbb !=""{_dgdfe ._fegea =_cg .MakeArray (_cg .MakeHexString (_dgdfe ._gcccf ),_cg .MakeHexString (_dgdfe ._efbb ));
};if _dgdfe ._fegea !=nil {_bc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dgdfe ._fegea );_gffbf .Set ("\u0049\u0044",_dgdfe ._fegea );};_dgdfe .writeObject (int (_gffbf .ObjectNumber ),_gffbf );return nil ;};func (_dcbaa *PdfReader )buildPageList (_gbacd *_cg .PdfIndirectObject ,_dcaff *_cg .PdfIndirectObject ,_agcbf map[_cg .PdfObject ]struct{})error {if _gbacd ==nil {return nil ;
};if _ ,_faeba :=_agcbf [_gbacd ];_faeba {_bc .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gbacd .ObjectNumber );
return nil ;};_agcbf [_gbacd ]=struct{}{};_dfbd ,_edadfe :=_gbacd .PdfObject .(*_cg .PdfObjectDictionary );if !_edadfe {return _cc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_agbdc ,_edadfe :=(*_dfbd ).Get ("\u0054\u0079\u0070\u0065").(*_cg .PdfObjectName );
if !_edadfe {if _dfbd .Get ("\u004b\u0069\u0064\u0073")==nil {return _cc .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_bc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_agbdc =_cg .MakeName ("\u0050\u0061\u0067e\u0073");_dfbd .Set ("\u0054\u0079\u0070\u0065",_agbdc );};_bc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_agbdc ,_gbacd );
if *_agbdc =="\u0050\u0061\u0067\u0065"{_fbff ,_gbddb :=_dcbaa .newPdfPageFromDict (_dfbd );if _gbddb !=nil {return _gbddb ;};_fbff .setContainer (_gbacd );if _dcaff !=nil {_dfbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcaff );};_dcbaa ._fdaee =append (_dcbaa ._fdaee ,_gbacd );
_dcbaa .PageList =append (_dcbaa .PageList ,_fbff );return nil ;};if *_agbdc !="\u0050\u0061\u0067e\u0073"{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_agbdc );
return _cc .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _dcaff !=nil {_dfbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcaff );};if !_dcbaa ._ebebf {_fdabd :=_dcbaa .traverseObjectData (_gbacd );if _fdabd !=nil {return _fdabd ;};};_edeba ,_caedg :=_dcbaa ._adfcb .Resolve (_dfbd .Get ("\u004b\u0069\u0064\u0073"));
if _caedg !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _caedg ;};var _gbacdd *_cg .PdfObjectArray ;
_gbacdd ,_edadfe =_edeba .(*_cg .PdfObjectArray );if !_edadfe {_efffc ,_eaee :=_edeba .(*_cg .PdfIndirectObject );if !_eaee {return _cc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_gbacdd ,_edadfe =_efffc .PdfObject .(*_cg .PdfObjectArray );if !_edadfe {return _cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_bc .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gbacdd );
for _fffb ,_bgdcg :=range _gbacdd .Elements (){_bcgcc ,_afeda :=_cg .GetIndirect (_bgdcg );if !_afeda {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_bcgcc );
return _cc .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gbacdd .Set (_fffb ,_bcgcc );_caedg =_dcbaa .buildPageList (_bcgcc ,_gbacd ,_agcbf );if _caedg !=nil {return _caedg ;
};};return nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_cegd *PdfAppender )Write (w _eda .Writer )error {if _cegd ._fafb {return _cc .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_fdce :=NewPdfWriter ();_afce ,_adbc :=_cg .GetDict (_fdce ._egeag );if !_adbc {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bgfa ,_adbc :=_afce .Get ("\u004b\u0069\u0064\u0073").(*_cg .PdfObjectArray );if !_adbc {return _cc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_aebd ,_adbc :=_afce .Get ("\u0043\u006f\u0075n\u0074").(*_cg .PdfObjectInteger );if !_adbc {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fgge :=_cegd ._cbba ._adfcb ;_bcbdf :=_fgge .GetTrailer ();if _bcbdf ==nil {return _cc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bbec ,_adbc :=_cg .GetIndirect (_bcbdf .Get ("\u0052\u006f\u006f\u0074"));
if !_adbc {return _cc .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_acg ,_adbc :=_cg .GetDict (_bbec );if !_adbc {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bbec ,*_bcbdf );
return _cc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_eeab :=range _acg .Keys (){if _fdce ._feafc .Get (_eeab )==nil {_dbcd :=_acg .Get (_eeab );_fdce ._feafc .Set (_eeab ,_dbcd );};};if _cegd ._dgfd !=nil {_fdce ._feafc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cegd ._dgfd .ToPdfObject ());
_cegd .updateObjectsDeep (_cegd ._dgfd .ToPdfObject (),nil );};if _cegd ._cagf !=nil {_cegd .updateObjectsDeep (_cegd ._cagf .ToPdfObject (),nil );_fdce ._feafc .Set ("\u0044\u0053\u0053",_cegd ._cagf .GetContainingPdfObject ());};if _fdce ._baefbc .Major < 2{_fdce .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_fdce .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_cegd .addNewObject (_fdce ._gfecf );_cegd .addNewObject (_fdce ._fffdf );_dadb :=false ;if len (_cegd ._cbba .PageList )!=len (_cegd ._gccd ){_dadb =true ;}else {for _cdde :=range _cegd ._cbba .PageList {switch {case _cegd ._gccd [_cdde ]==_cegd ._cbba .PageList [_cdde ]:case _cegd ._gccd [_cdde ]==_cegd .Reader .PageList [_cdde ]:default:_dadb =true ;
};if _dadb {break ;};};};if _dadb {_cegd .updateObjectsDeep (_fdce ._egeag ,nil );}else {_cegd ._badf [_fdce ._egeag ]=struct{}{};};_fdce ._egeag .ObjectNumber =_cegd .Reader ._dbecb .ObjectNumber ;_cegd ._aaab [_fdce ._egeag ]=_cegd .Reader ._dbecb .ObjectNumber ;
_cdag :=[]_cg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_dcfd :=range _cegd ._gccd {_abbcc :=_dcfd .ToPdfObject ();
*_aebd =*_aebd +1;if _gegb ,_cdfa :=_abbcc .(*_cg .PdfIndirectObject );_cdfa &&_gegb .GetParser ()==_cegd ._cbba ._adfcb {_bgfa .Append (&_gegb .PdfObjectReference );continue ;};if _abae ,_bfgb :=_cg .GetDict (_abbcc );_bfgb {_bfaeg ,_dgbd :=_abae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cg .PdfIndirectObject );
for _dgbd {_bc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfaeg );_fede ,_fdaa :=_bfaeg .PdfObject .(*_cg .PdfObjectDictionary );if !_fdaa {return _cc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_feeb :=range _cdag {_bc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_feeb );if _abae .Get (_feeb )!=nil {_bc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _bedg :=_fede .Get (_feeb );_bedg !=nil {_bc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_feeb );_abae .Set (_feeb ,_bedg );};};_bfaeg ,_dgbd =_fede .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cg .PdfIndirectObject );
_bc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fede .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_abae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdce ._egeag );};_cegd .updateObjectsDeep (_abbcc ,nil );
_bgfa .Append (_abbcc );};if _ ,_bdcfb :=_cegd ._gaa .Seek (0,_eda .SeekStart );_bdcfb !=nil {return _bdcfb ;};_afff :=make (map[SignatureHandler ]_eda .Writer );_dcdfa :=_cg .MakeArray ();for _ ,_gbeg :=range _cegd ._eegc {if _dfdg ,_gagdb :=_cg .GetIndirect (_gbeg );
_gagdb {if _dafb ,_fafbc :=_dfdg .PdfObject .(*pdfSignDictionary );_fafbc {_dadbg :=*_dafb ._fcefdb ;var _eedc error ;_afff [_dadbg ],_eedc =_dadbg .NewDigest (_dafb ._cgeeff );if _eedc !=nil {return _eedc ;};_dcdfa .Append (_cg .MakeInteger (0xfffff),_cg .MakeInteger (0xfffff));
};};};if _dcdfa .Len ()> 0{_dcdfa .Append (_cg .MakeInteger (0xfffff),_cg .MakeInteger (0xfffff));};for _ ,_dcga :=range _cegd ._eegc {if _cadb ,_bccd :=_cg .GetIndirect (_dcga );_bccd {if _eadb ,_fedd :=_cadb .PdfObject .(*pdfSignDictionary );_fedd {_eadb .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dcdfa );
};};};_gdfe :=len (_afff )> 0;var _bgbe _eda .Reader =_cegd ._gaa ;if _gdfe {_cdfd :=make ([]_eda .Writer ,0,len (_afff ));for _ ,_ccbe :=range _afff {_cdfd =append (_cdfd ,_ccbe );};_bgbe =_eda .TeeReader (_cegd ._gaa ,_eda .MultiWriter (_cdfd ...));};
_cdba ,_cbaf :=_eda .Copy (w ,_bgbe );if _cbaf !=nil {return _cbaf ;};if len (_cegd ._eegc )==0{return nil ;};_fdce ._bdcfcd =_cdba ;_fdce .ObjNumOffset =_cegd ._debeg ;_fdce ._egaa =true ;_fdce ._fcfcg =_cegd ._gfc ;_fdce ._ccfbe =_cegd ._bacd ;_fdce ._gcgea =_cegd ._afcde ;
_fdce ._baefbc =_cegd ._cbba .PdfVersion ();_fdce ._gagef =_cegd ._aaab ;_fdce ._gagda =_cegd ._ecb .GetCrypter ();_fdce ._dcceb =_cegd ._ecb .GetEncryptObj ();_ggac :=_cegd ._ecb .GetXrefType ();if _ggac !=nil {_efab :=*_ggac ==_cg .XrefTypeObjectStream ;
_fdce ._feega =&_efab ;};_fdce ._cgedd =map[_cg .PdfObject ]struct{}{};_fdce ._ebgeg =[]_cg .PdfObject {};for _ ,_bdaf :=range _cegd ._eegc {if _ ,_dcaf :=_cegd ._badf [_bdaf ];_dcaf {continue ;};_fdce .addObject (_bdaf );};_dgff :=w ;if _gdfe {_dgff =_cd .NewBuffer (nil );
};if _cegd ._eaab !=""&&_fdce ._gagda ==nil {_fdce .Encrypt ([]byte (_cegd ._eaab ),[]byte (_cegd ._eaab ),_cegd ._efcd );};if _cgaab :=_bcbdf .Get ("\u0049\u0044");_cgaab !=nil {if _bcgc ,_aaea :=_cg .GetArray (_cgaab );_aaea {_fdce ._fegea =_bcgc ;};
};if _cdee :=_fdce .Write (_dgff );_cdee !=nil {return _cdee ;};if _gdfe {_ecaba :=_dgff .(*_cd .Buffer ).Bytes ();_agfd :=_cg .MakeArray ();var _fefb []*pdfSignDictionary ;var _bffb int64 ;for _ ,_afgb :=range _fdce ._ebgeg {if _eafa ,_bgd :=_cg .GetIndirect (_afgb );
_bgd {if _bfaec ,_aegg :=_eafa .PdfObject .(*pdfSignDictionary );_aegg {_fefb =append (_fefb ,_bfaec );_ffb :=_bfaec ._egfbcd +int64 (_bfaec ._daacb );_agfd .Append (_cg .MakeInteger (_bffb ),_cg .MakeInteger (_ffb -_bffb ));_bffb =_bfaec ._egfbcd +int64 (_bfaec ._agcbd );
};};};_agfd .Append (_cg .MakeInteger (_bffb ),_cg .MakeInteger (_cdba +int64 (len (_ecaba ))-_bffb ));_adfd :=[]byte (_agfd .WriteString ());for _ ,_aeab :=range _fefb {_baeg :=int (_aeab ._egfbcd -_cdba );for _dabg :=_aeab ._acadf ;_dabg < _aeab ._fggce ;
_dabg ++{_ecaba [_baeg +_dabg ]=' ';};_cbca :=_ecaba [_baeg +_aeab ._acadf :_baeg +_aeab ._fggce ];copy (_cbca ,_adfd );};var _ecee int ;for _ ,_daage :=range _fefb {_deg :=int (_daage ._egfbcd -_cdba );_cgfa :=_ecaba [_ecee :_deg +_daage ._daacb ];_adcc :=*_daage ._fcefdb ;
_afff [_adcc ].Write (_cgfa );_ecee =_deg +_daage ._agcbd ;};for _ ,_dcdc :=range _fefb {_afaa :=_ecaba [_ecee :];_ccbb :=*_dcdc ._fcefdb ;_afff [_ccbb ].Write (_afaa );};for _ ,_ebdgc :=range _fefb {_fagbd :=int (_ebdgc ._egfbcd -_cdba );_ecdd :=*_ebdgc ._fcefdb ;
_ffdd :=_afff [_ecdd ];if _ceed :=_ecdd .Sign (_ebdgc ._cgeeff ,_ffdd );_ceed !=nil {return _ceed ;};_ebdgc ._cgeeff .ByteRange =_agfd ;_gage :=[]byte (_ebdgc ._cgeeff .Contents .WriteString ());for _ddbb :=_ebdgc ._acadf ;_ddbb < _ebdgc ._fggce ;_ddbb ++{_ecaba [_fagbd +_ddbb ]=' ';
};for _aagb :=_ebdgc ._daacb ;_aagb < _ebdgc ._agcbd ;_aagb ++{_ecaba [_fagbd +_aagb ]=' ';};_fdfa :=_ecaba [_fagbd +_ebdgc ._acadf :_fagbd +_ebdgc ._fggce ];copy (_fdfa ,_adfd );_fdfa =_ecaba [_fagbd +_ebdgc ._daacb :_fagbd +_ebdgc ._agcbd ];copy (_fdfa ,_gage );
};_cafb :=_cd .NewBuffer (_ecaba );_ ,_cbaf =_eda .Copy (w ,_cafb );if _cbaf !=nil {return _cbaf ;};};_cegd ._fafb =true ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccf *PdfActionGoTo3DView )ToPdfObject ()_cg .PdfObject {_ccf .PdfAction .ToPdfObject ();_agda :=_ccf ._eab ;_edg :=_agda .PdfObject .(*_cg .PdfObjectDictionary );_edg .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoTo3DView )));_edg .SetIfNotNil ("\u0054\u0041",_ccf .TA );
_edg .SetIfNotNil ("\u0056",_ccf .V );return _agda ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_eebbb *PdfColorCalGray )GetNumComponents ()int {return 1};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_cacaf *Image )GetParamsDict ()*_cg .PdfObjectDictionary {_fdebf :=_cg .MakeDict ();_fdebf .Set ("\u0057\u0069\u0064t\u0068",_cg .MakeInteger (_cacaf .Width ));_fdebf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cg .MakeInteger (_cacaf .Height ));
_fdebf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cg .MakeInteger (int64 (_cacaf .ColorComponents )));_fdebf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cg .MakeInteger (_cacaf .BitsPerComponent ));
return _fdebf ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _cg .PdfObject ;RichMediaContent _cg .PdfObject ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_eeec :=NewPdfAnnotation ();_dgb :=&PdfAnnotationRedact {};_dgb .PdfAnnotation =_eeec ;_dgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeec .SetContext (_dgb );return _dgb ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_ffbd *PdfWriter )ApplyStandard (optimizer StandardApplier ){_ffbd ._gaegf =optimizer };

// WriteToFile writes the Appender output to file specified by path.
func (_bcfb *PdfAppender )WriteToFile (outputPath string )error {_ddgb ,_ddbef :=_ce .Create (outputPath );if _ddbef !=nil {return _ddbef ;};defer _ddgb .Close ();return _bcfb .Write (_ddgb );};func (_gcgag *PdfReader )loadStructure ()error {if _gcgag ._adfcb .GetCrypter ()!=nil &&!_gcgag ._adfcb .IsAuthenticated (){return _f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_adegf :=_gcgag ._adfcb .GetTrailer ();if _adegf ==nil {return _f .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_acaaa ,_defgf :=_adegf .Get ("\u0052\u006f\u006f\u0074").(*_cg .PdfObjectReference );if !_defgf {return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_adegf );
};_daeff ,_fdeac :=_gcgag ._adfcb .LookupByReference (*_acaaa );if _fdeac !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fdeac );
return _fdeac ;};_aagfb ,_defgf :=_daeff .(*_cg .PdfIndirectObject );if !_defgf {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_daeff ,*_adegf );
return _cc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gdfef ,_defgf :=(*_aagfb ).PdfObject .(*_cg .PdfObjectDictionary );if !_defgf {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_aagfb .PdfObject );
return _cc .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bc .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gdfef );_cgffd ,_defgf :=_gdfef .Get ("\u0050\u0061\u0067e\u0073").(*_cg .PdfObjectReference );
if !_defgf {return _cc .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_abbe ,_fdeac :=_gcgag ._adfcb .LookupByReference (*_cgffd );
if _fdeac !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _fdeac ;};_fcdcc ,_defgf :=_abbe .(*_cg .PdfIndirectObject );if !_defgf {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_bc .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fcdcc );return _cc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_decbe ,_defgf :=_fcdcc .PdfObject .(*_cg .PdfObjectDictionary );if !_defgf {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fcdcc );
return _cc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_daegd ,_defgf :=_cg .GetInt (_decbe .Get ("\u0043\u006f\u0075n\u0074"));if !_defgf {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cc .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_defgf =_cg .GetName (_decbe .Get ("\u0054\u0079\u0070\u0065"));!_defgf {_bc .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_decbe .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050\u0061\u0067e\u0073"));};if _cgfbg ,_eabfa :=_cg .GetInt (_decbe .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_eabfa {_cbdd :=int64 (*_cgfbg );_gcgag .Rotate =&_cbdd ;};_gcgag ._agaca =_acaaa ;
_gcgag ._egdgf =_gdfef ;_gcgag ._fcgeg =_decbe ;_gcgag ._dbecb =_fcdcc ;_gcgag ._afee =int (*_daegd );_gcgag ._fdaee =[]*_cg .PdfIndirectObject {};_geeaee :=map[_cg .PdfObject ]struct{}{};_fdeac =_gcgag .buildPageList (_fcdcc ,nil ,_geeaee );if _fdeac !=nil {return _fdeac ;
};_bc .Log .Trace ("\u002d\u002d\u002d");_bc .Log .Trace ("\u0054\u004f\u0043");_bc .Log .Trace ("\u0050\u0061\u0067e\u0073");_bc .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_gcgag ._fdaee ),_gcgag ._fdaee );_gcgag ._ccdbb ,_fdeac =_gcgag .loadOutlines ();
if _fdeac !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_fdeac );
return _fdeac ;};_gcgag .AcroForm ,_fdeac =_gcgag .loadForms ();if _fdeac !=nil {return _fdeac ;};_gcgag .DSS ,_fdeac =_gcgag .loadDSS ();if _fdeac !=nil {return _fdeac ;};return nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_ecgg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ecgg .AcroForm ==nil {return nil ,nil ;};if _ecgg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ggaba *PdfSignature ;
_ddabd *PdfField ;_cdcdg SignatureHandler ;};var _ffcd []*sigFieldPair ;for _ ,_dbeae :=range _ecgg .AcroForm .AllFields (){if _dbeae .V ==nil {continue ;};if _fdefa ,_efbee :=_cg .GetDict (_dbeae .V );_efbee {if _gcded ,_agfdc :=_cg .GetNameVal (_fdefa .Get ("\u0054\u0079\u0070\u0065"));
_agfdc &&_gcded =="\u0053\u0069\u0067"{_daeffe ,_gbbg :=_cg .GetIndirect (_dbeae .V );if !_gbbg {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_fdfbf ,_baaab :=_ecgg .newPdfSignatureFromIndirect (_daeffe );if _baaab !=nil {return nil ,_baaab ;};var _gcgaa SignatureHandler ;for _ ,_gdcd :=range handlers {if _gdcd .IsApplicable (_fdfbf ){_gcgaa =_gdcd ;break ;};};_ffcd =append (_ffcd ,&sigFieldPair {_ggaba :_fdfbf ,_ddabd :_dbeae ,_cdcdg :_gcgaa });
};};};var _beae []SignatureValidationResult ;for _ ,_bbfgb :=range _ffcd {_dggdc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_bbfgb ._ddabd }};if _bbfgb ._cdcdg ==nil {_dggdc .Errors =append (_dggdc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_beae =append (_beae ,_dggdc );continue ;};_befa ,_gddbg :=_bbfgb ._cdcdg .NewDigest (_bbfgb ._ggaba );if _gddbg !=nil {_dggdc .Errors =append (_dggdc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gddbg .Error ());_beae =append (_beae ,_dggdc );
continue ;};_cdbag :=_bbfgb ._ggaba .ByteRange ;if _cdbag ==nil {_dggdc .Errors =append (_dggdc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_beae =append (_beae ,_dggdc );continue ;};for _cfeaf :=0;
_cfeaf < _cdbag .Len ();_cfeaf =_cfeaf +2{_agfff ,_ :=_cg .GetNumberAsInt64 (_cdbag .Get (_cfeaf ));_bbbfcf ,_ :=_cg .GetIntVal (_cdbag .Get (_cfeaf +1));if _ ,_degda :=_ecgg ._bgde .Seek (_agfff ,_eda .SeekStart );_degda !=nil {return nil ,_degda ;};_agdfa :=make ([]byte ,_bbbfcf );
if _ ,_begcd :=_ecgg ._bgde .Read (_agdfa );_begcd !=nil {return nil ,_begcd ;};_befa .Write (_agdfa );};_dfabc ,_gddbg :=_bbfgb ._cdcdg .Validate (_bbfgb ._ggaba ,_befa );if _gddbg !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_gddbg ,_bbfgb ._cdcdg );
_dfabc .Errors =append (_dfabc .Errors ,_gddbg .Error ());};_dfabc .Name =_bbfgb ._ggaba .Name .Decoded ();_dfabc .Reason =_bbfgb ._ggaba .Reason .Decoded ();if _bbfgb ._ggaba .M !=nil {_ddcb ,_cagg :=NewPdfDate (_bbfgb ._ggaba .M .String ());if _cagg !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cagg );
_dfabc .Errors =append (_dfabc .Errors ,_cagg .Error ());continue ;};_dfabc .Date =_ddcb ;};_dfabc .ContactInfo =_bbfgb ._ggaba .ContactInfo .Decoded ();_dfabc .Location =_bbfgb ._ggaba .Location .Decoded ();_dfabc .Fields =_dggdc .Fields ;_beae =append (_beae ,_dfabc );
};return _beae ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_aggeb ,_cfcd :=NewStandard14Font (basefont );if _cfcd !=nil {panic (_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _aggeb ;};func (_aaeef fontCommon )isCIDFont ()bool {if _aaeef ._dbba ==""{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aaeef );
};_bebg :=false ;switch _aaeef ._dbba {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bebg =true ;};_bc .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bebg ,_aaeef );
return _bebg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_agag *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_agag .Base .GetNumComponents ();_gdfa :=int (vals [0])*N ;
if _gdfa < 0||(_gdfa +N -1)>=len (_agag ._fadb ){_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdfa );return nil ,ErrColorOutOfRange ;};_ggbb :=_agag ._fadb [_gdfa :_gdfa +N ];
var _beac []float64 ;for _ ,_adccf :=range _ggbb {_beac =append (_beac ,float64 (_adccf )/255.0);};_cgee ,_bedf :=_agag .Base .ColorFromFloats (_beac );if _bedf !=nil {return nil ,_bedf ;};return _cgee ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bgcbf *PdfFunctionType2 )ToPdfObject ()_cg .PdfObject {_cccd :=_cg .MakeDict ();_cccd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (2));_babd :=&_cg .PdfObjectArray {};for _ ,_bdef :=range _bgcbf .Domain {_babd .Append (_cg .MakeFloat (_bdef ));
};_cccd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_babd );if _bgcbf .Range !=nil {_aegcd :=&_cg .PdfObjectArray {};for _ ,_cfffb :=range _bgcbf .Range {_aegcd .Append (_cg .MakeFloat (_cfffb ));};_cccd .Set ("\u0052\u0061\u006eg\u0065",_aegcd );};if _bgcbf .C0 !=nil {_fgaac :=&_cg .PdfObjectArray {};
for _ ,_begae :=range _bgcbf .C0 {_fgaac .Append (_cg .MakeFloat (_begae ));};_cccd .Set ("\u0043\u0030",_fgaac );};if _bgcbf .C1 !=nil {_ceccd :=&_cg .PdfObjectArray {};for _ ,_babbc :=range _bgcbf .C1 {_ceccd .Append (_cg .MakeFloat (_babbc ));};_cccd .Set ("\u0043\u0031",_ceccd );
};_cccd .Set ("\u004e",_cg .MakeFloat (_bgcbf .N ));if _bgcbf ._ffegf !=nil {_bgcbf ._ffegf .PdfObject =_cccd ;return _bgcbf ._ffegf ;};return _cccd ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;
);func _aabeg (_bceca _cg .PdfObject )(*fontFile ,error ){_bc .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bceca );
_gfbg :=&fontFile {};_bceca =_cg .TraceToDirectObject (_bceca );_bgfeb ,_abbd :=_bceca .(*_cg .PdfObjectStream );if !_abbd {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bceca );
return nil ,_cg .ErrTypeError ;};_cfefb :=_bgfeb .PdfObjectDictionary ;_bafcd ,_abgff :=_cg .DecodeStream (_bgfeb );if _abgff !=nil {return nil ,_abgff ;};_abaef ,_abbd :=_cg .GetNameVal (_cfefb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_abbd {_gfbg ._gdced =_abaef ;
if _abaef =="\u0054\u0079\u0070\u0065\u0031\u0043"{_bc .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_dfbc ,_ :=_cg .GetIntVal (_cfefb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_agdf ,_ :=_cg .GetIntVal (_cfefb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dfbc > len (_bafcd ){_dfbc =len (_bafcd );
};if _dfbc +_agdf > len (_bafcd ){_agdf =len (_bafcd )-_dfbc ;};_ccgaa :=_bafcd [:_dfbc ];var _cddcb []byte ;if _agdf > 0{_cddcb =_bafcd [_dfbc :_dfbc +_agdf ];};if _dfbc > 0&&_agdf > 0{_aadbc :=_gfbg .loadFromSegments (_ccgaa ,_cddcb );if _aadbc !=nil {return nil ,_aadbc ;
};};return _gfbg ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _cg .PdfObject ;Dest _cg .PdfObject ;H _cg .PdfObject ;PA _cg .PdfObject ;QuadPoints _cg .PdfObject ;BS _cg .PdfObject ;_baa *PdfAction ;_eac *PdfReader ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_cgbgb *PdfColorspaceICCBased )GetContainingPdfObject ()_cg .PdfObject {return _cgbgb ._bdbd };func (_abde *PdfWriter )optimizeDocument ()error {if _abde ._gaegf ==nil {return nil ;};_cbffcb ,_dgfb :=_cg .GetDict (_abde ._gfecf );if !_dgfb {return _cc .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efabe :=_ga .Document {ID :[2]string {_abde ._gcccf ,_abde ._efbb },Version :_abde ._baefbc ,Objects :_abde ._ebgeg ,Info :_cbffcb ,Crypt :_abde ._gagda ,UseHashBasedID :_abde ._abecd };if _acfga :=_abde ._gaegf .ApplyStandard (&_efabe );_acfga !=nil {return _acfga ;
};_abde ._gcccf ,_abde ._efbb =_efabe .ID [0],_efabe .ID [1];_abde ._baefbc =_efabe .Version ;_abde ._ebgeg =_efabe .Objects ;_abde ._gfecf .PdfObject =_efabe .Info ;_abde ._abecd =_efabe .UseHashBasedID ;_abde ._gagda =_efabe .Crypt ;_fabgc :=make (map[_cg .PdfObject ]struct{},len (_abde ._ebgeg ));
for _ ,_aacfb :=range _abde ._ebgeg {_fabgc [_aacfb ]=struct{}{};};_abde ._cgedd =_fabgc ;return nil ;};func (_bgee *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func _adbd ()_a .Time {_ebfgf .Lock ();defer _ebfgf .Unlock ();
return _cabbd };

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func _bdgd (_eefa *_cg .PdfObjectDictionary )*VRI {_egeb ,_ :=_cg .GetString (_eefa .Get ("\u0054\u0055"));_cbff ,_ :=_cg .GetString (_eefa .Get ("\u0054\u0053"));return &VRI {Cert :_bgbgf (_eefa .Get ("\u0043\u0065\u0072\u0074")),OCSP :_bgbgf (_eefa .Get ("\u004f\u0043\u0053\u0050")),CRL :_bgbgf (_eefa .Get ("\u0043\u0052\u004c")),TU :_egeb ,TS :_cbff };
};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_cegbd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _cegbd .baseFields ()._ffab !=nil {return _cegbd .baseFields ()._ffab ;};if _gbea :=_cegbd ._dfaba .getFontDescriptor ();_gbea !=nil {return _gbea ;};_bc .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_cegbd );
return nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_bfge *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _bfge ._bfgd ==nil {_bfge ._bfgd =_edab .NewPSExecutor (_bfge .Program );};var _beedd []_edab .PSObject ;for _ ,_eeeca :=range xVec {_beedd =append (_beedd ,_edab .MakeReal (_eeeca ));
};_gcadc ,_fdbgd :=_bfge ._bfgd .Execute (_beedd );if _fdbgd !=nil {return nil ,_fdbgd ;};_face ,_fdbgd :=_edab .PSObjectArrayToFloat64Array (_gcadc );if _fdbgd !=nil {return nil ,_fdbgd ;};return _face ,nil ;};func _ddccf (_cfbe _cg .PdfObject )(PdfFunction ,error ){_cfbe =_cg .ResolveReference (_cfbe );
if _ggbef ,_acgec :=_cfbe .(*_cg .PdfObjectStream );_acgec {_fgdbf :=_ggbef .PdfObjectDictionary ;_gcfd ,_cddfg :=_fgdbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cg .PdfObjectInteger );if !_cddfg {_bc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gcfd ==0{return _eebd (_ggbef );}else if *_gcfd ==4{return _dgeb (_ggbef );
}else {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bbbaa ,_gdfbg :=_cfbe .(*_cg .PdfIndirectObject );_gdfbg {_bbcaf ,_ffdg :=_bbbaa .PdfObject .(*_cg .PdfObjectDictionary );
if !_ffdg {_bc .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_gbbe ,_ffdg :=_bbcaf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cg .PdfObjectInteger );
if !_ffdg {_bc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_gbbe ==2{return _bbecc (_bbbaa );}else if *_gbbe ==3{return _eadd (_bbbaa );}else {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _adabf ,_cadd :=_cfbe .(*_cg .PdfObjectDictionary );
_cadd {_fccfc ,_cefbg :=_adabf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cg .PdfObjectInteger );if !_cefbg {_bc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fccfc ==2{return _bbecc (_adabf );}else if *_fccfc ==3{return _eadd (_adabf );
}else {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_bc .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cfbe );
return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_cg .PdfObjectArray ;Domain *_cg .PdfObjectArray ;Function []PdfFunction ;Extend *_cg .PdfObjectArray ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cddb pdfFontType0 )GetRuneMetrics (r rune )(_af .CharMetrics ,bool ){if _cddb .DescendantFont ==nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cddb );
return _af .CharMetrics {},false ;};return _cddb .DescendantFont .GetRuneMetrics (r );};func (_badab PdfOutputIntentType )String ()string {switch _badab {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";
case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";
};};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_cg .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_cg .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_cg .PdfObjectBool ;_bcbf PdfModel ;_cagea _cg .PdfObject ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_acdge *PdfReader )GetObjectNums ()[]int {return _acdge ._adfcb .GetObjectNums ()};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_fafg *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _cc .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_fafg .S =subtype ;return nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gba *PdfAnnotation )GetContext ()PdfModel {if _gba ==nil {return nil ;};return _gba ._dfc ;};func (_feebfg *PdfWriter )setWriter (_daabd _eda .Writer ){_feebfg ._ebce =_feebfg ._bdcfcd ;_feebfg ._fcgdgb =_c .NewWriter (_daabd );};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_aeaaa *_cg .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ddece *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcf ,_bbef :=_cg .GetNumbersAsFloat (objects );
if _bbef !=nil {return nil ,_bbef ;};return _ddece .ColorFromFloats (_bgcf );};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_defba *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _eaff []*PdfField ;_efedg :=map[*_cg .PdfIndirectObject ]struct{}{};for _ ,_dcdbe :=range _defba .PageList {_dgeaa ,_baaaa :=_dcdbe .GetAnnotations ();if _baaaa !=nil {return _baaaa ;
};for _ ,_ecga :=range _dgeaa {var _dafgg *PdfField ;switch _ecfe :=_ecga .GetContext ().(type ){case *PdfAnnotationWidget :if _ecfe ._dad !=nil {_dafgg =_ecfe ._dad ;break ;};if _fdfb ,_gdgge :=_cg .GetIndirect (_ecfe .Parent );_gdgge {_dafgg ,_baaaa =_defba .newPdfFieldFromIndirectObject (_fdfb ,nil );
if _baaaa ==nil {break ;};_bc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fdfb ,_baaaa );
};if _ecfe ._bgf !=nil {_dafgg ,_baaaa =_defba .newPdfFieldFromIndirectObject (_ecfe ._bgf ,nil );if _baaaa ==nil {break ;};_bc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecfe ._bgf ,_baaaa );
};};if _dafgg ==nil {continue ;};if _ ,_abebbc :=_efedg [_dafgg ._edge ];_abebbc {continue ;};_efedg [_dafgg ._edge ]=struct{}{};_eaff =append (_eaff ,_dafgg );};};if len (_eaff )==0{return nil ;};if _defba .AcroForm ==nil {_defba .AcroForm =NewPdfAcroForm ();
};_defba .AcroForm .Fields =&_eaff ;return nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gdbb :=NewPdfAction ();_cecc :=&PdfActionLaunch {};_cecc .PdfAction =_gdbb ;_gdbb .SetContext (_cecc );return _cecc ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_fbab *OutlineItem )ToPdfObject ()_cg .PdfObject {_efeea ,_ :=_fbab .ToPdfOutlineItem ();return _efeea .ToPdfObject ();};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _cg .PdfObject )(*PdfInfo ,error ){var _afag PdfInfo ;_daacc ,_fefd :=obj .(*_cg .PdfObjectDictionary );if !_fefd {return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_fgfca :=range _daacc .Keys (){switch _fgfca {case "\u0054\u0069\u0074l\u0065":_afag .Title ,_ =_cg .GetString (_daacc .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_afag .Author ,_ =_cg .GetString (_daacc .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_afag .Subject ,_ =_cg .GetString (_daacc .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_afag .Keywords ,_ =_cg .GetString (_daacc .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_afag .Creator ,_ =_cg .GetString (_daacc .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_afag .Producer ,_ =_cg .GetString (_daacc .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_afag .Trapped ,_ =_cg .GetName (_daacc .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _aegge ,_bfed :=_cg .GetString (_daacc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_bfed &&_aegge .String ()!=""{_cecd ,_efccc :=NewPdfDate (_aegge .String ());if _efccc !=nil {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_efccc );
};_afag .CreationDate =&_cecd ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _ebbc ,_degf :=_cg .GetString (_daacc .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_degf &&_ebbc .String ()!=""{_degd ,_dfbe :=NewPdfDate (_ebbc .String ());if _dfbe !=nil {return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_dfbe );
};_afag .ModifiedDate =&_degd ;};default:_gcgd ,_ :=_cg .GetString (_daacc .Get (_fgfca ));if _afag ._baagc ==nil {_afag ._baagc =_cg .MakeDict ();};_afag ._baagc .Set (_fgfca ,_gcgd );};};return &_afag ,nil ;};func (_febgb *fontFile )loadFromSegments (_abgb ,_dcfga []byte )error {_bc .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_abgb ),len (_dcfga ));
_efdf :=_febgb .parseASCIIPart (_abgb );if _efdf !=nil {return _efdf ;};_bc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_febgb );if len (_dcfga )==0{return nil ;};_bc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_febgb );
return nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_bedc *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_ccdda =producer };

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_adcf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_adcf .N =N ;return _adcf ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fccf ,_eegf :=_ce .Open (filePath );if _eegf !=nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_eegf );
return nil ,_eegf ;};defer _fccf .Close ();return NewCompositePdfFontFromTTF (_fccf );};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ffbed :map[_cg .PdfObject ]struct{}{},_ecgd :_ffaba (),_adfcb :_cg .NewParserFromString (txt )};};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _cg .PdfObjectName ;};

// SetFillImage attach a model.Image to push button.
func (_abdcc *PdfFieldButton )SetFillImage (image *Image ){if _abdcc .IsPush (){_abdcc ._fdedf =image ;};};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_bbe :=NewPdfAnnotation ();_cgg :=&PdfAnnotationInk {};_cgg .PdfAnnotation =_bbe ;_cgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbe .SetContext (_cgg );return _cgg ;};

// String returns a string representation of what flags are set.
func (_aabe FieldFlag )String ()string {_bbed :="";if _aabe ==FieldFlagClear {_bbed ="\u0043\u006c\u0065a\u0072";return _bbed ;};if _aabe &FieldFlagReadOnly > 0{_bbed +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _aabe &FieldFlagRequired > 0{_bbed +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _aabe &FieldFlagNoExport > 0{_bbed +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _aabe &FieldFlagNoToggleToOff > 0{_bbed +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _aabe &FieldFlagRadio > 0{_bbed +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _aabe &FieldFlagPushbutton > 0{_bbed +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _aabe &FieldFlagRadiosInUnision > 0{_bbed +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _aabe &FieldFlagMultiline > 0{_bbed +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _aabe &FieldFlagPassword > 0{_bbed +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _aabe &FieldFlagFileSelect > 0{_bbed +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _aabe &FieldFlagDoNotScroll > 0{_bbed +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _aabe &FieldFlagComb > 0{_bbed +="\u007c\u0043\u006fm\u0062";};if _aabe &FieldFlagRichText > 0{_bbed +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _aabe &FieldFlagDoNotSpellCheck > 0{_bbed +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _aabe &FieldFlagCombo > 0{_bbed +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _aabe &FieldFlagEdit > 0{_bbed +="\u007c\u0045\u0064i\u0074";};if _aabe &FieldFlagSort > 0{_bbed +="\u007c\u0053\u006fr\u0074";};if _aabe &FieldFlagMultiSelect > 0{_bbed +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _aabe &FieldFlagCommitOnSelChange > 0{_bbed +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _eaf .Trim (_bbed ,"\u007c");};func (_acfd *pdfFontType0 )subsetRegistered ()error {_dead ,_bbdd :=_acfd .DescendantFont ._dfaba .(*pdfCIDFontType2 );
if !_bbdd {_bc .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_acfd .DescendantFont );return nil ;};if _dead ==nil {return nil ;
};if _dead ._ffab ==nil {_bc .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _acfd ._efac ==nil {_bc .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_dbcbc ,_bbdd :=_cg .GetStream (_dead ._ffab .FontFile2 );if !_bbdd {_bc .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cc .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_abfc ,_gada :=_cg .DecodeStream (_dbcbc );if _gada !=nil {_bc .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gada );
return _gada ;};_defb ,_gada :=_ffd .Parse (_cd .NewReader (_abfc ));if _gada !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dbcbc .Stream ));
return _gada ;};var _cefgb []rune ;var _efca *_ffd .Font ;switch _gfeb :=_acfd ._efac .(type ){case *_ad .TrueTypeFontEncoder :_cefgb =_gfeb .RegisteredRunes ();_efca ,_gada =_defb .SubsetKeepRunes (_cefgb );if _gada !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gada );
return _gada ;};_gfeb .SubsetRegistered ();case *_ad .IdentityEncoder :_cefgb =_gfeb .RegisteredRunes ();_ecfc :=make ([]_ffd .GlyphIndex ,len (_cefgb ));for _badgg ,_ccbee :=range _cefgb {_ecfc [_badgg ]=_ffd .GlyphIndex (_ccbee );};_efca ,_gada =_defb .SubsetKeepIndices (_ecfc );
if _gada !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gada );return _gada ;};case _ad .SimpleEncoder :_cfbab :=_gfeb .Charcodes ();for _ ,_geba :=range _cfbab {_agbeb ,_acgee :=_gfeb .CharcodeToRune (_geba );if !_acgee {_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_geba );
continue ;};_cefgb =append (_cefgb ,_agbeb );};default:return _f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_acfd ._efac );
};var _cfcb _cd .Buffer ;_gada =_efca .Write (&_cfcb );if _gada !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gada );return _gada ;};if _acfd ._cgcg !=nil {_ffege :=make (map[_cag .CharCode ]rune ,len (_cefgb ));for _ ,_becd :=range _cefgb {_dfdb ,_ccac :=_acfd ._efac .RuneToCharcode (_becd );
if !_ccac {continue ;};_ffege [_cag .CharCode (_dfdb )]=_becd ;};_acfd ._cgcg =_cag .NewToUnicodeCMap (_ffege );};_dbcbc ,_gada =_cg .MakeStream (_cfcb .Bytes (),_cg .NewFlateEncoder ());if _gada !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gada );
return _gada ;};_dbcbc .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cg .MakeInteger (int64 (_cfcb .Len ())));if _dfade ,_fgbd :=_cg .GetStream (_dead ._ffab .FontFile2 );_fgbd {*_dfade =*_dbcbc ;}else {_dead ._ffab .FontFile2 =_dbcbc ;};_bgcbe :=_babf ();
if len (_acfd ._gbfc )> 0{_acfd ._gbfc =_gcge (_acfd ._gbfc ,_bgcbe );};if len (_dead ._gbfc )> 0{_dead ._gbfc =_gcge (_dead ._gbfc ,_bgcbe );};if len (_acfd ._badcg )> 0{_acfd ._badcg =_gcge (_acfd ._badcg ,_bgcbe );};if _dead ._ffab !=nil {_afbgd ,_fcfc :=_cg .GetName (_dead ._ffab .FontName );
if _fcfc &&len (_afbgd .String ())> 0{_ggcc :=_gcge (_afbgd .String (),_bgcbe );_dead ._ffab .FontName =_cg .MakeName (_ggcc );};};return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ebcb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_bge *PdfAnnotationProjection )ToPdfObject ()_cg .PdfObject {_bge .PdfAnnotation .ToPdfObject ();_gabd :=_bge ._bgf ;_aba :=_gabd .PdfObject .(*_cg .PdfObjectDictionary );_bge .PdfAnnotationMarkup .appendToPdfDictionary (_aba );return _gabd ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_aafaa *PdfReader )PageFromIndirectObject (ind *_cg .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_aafaa .PageList )!=len (_aafaa ._fdaee ){return nil ,0,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _bcded ,_cabfdg :=range _aafaa ._fdaee {if _cabfdg ==ind {return _aafaa .PageList [_bcded ],_bcded +1,nil ;};};return nil ,0,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dgbe *PdfColorspaceLab )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbcf ,_cggcc :=_cg .GetNumbersAsFloat (objects );
if _cggcc !=nil {return nil ,_cggcc ;};return _dgbe .ColorFromFloats (_dbcf );};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gcfe *PdfPageResourcesColorspaces )ToPdfObject ()_cg .PdfObject {_gbebe :=_cg .MakeDict ();for _ ,_gabbd :=range _gcfe .Names {_gbebe .Set (_cg .PdfObjectName (_gabbd ),_gcfe .Colorspaces [_gabbd ].ToPdfObject ());};if _gcfe ._dffee !=nil {_gcfe ._dffee .PdfObject =_gbebe ;
return _gcfe ._dffee ;};return _gbebe ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gged *PdfPattern )GetContext ()PdfModel {return _gged ._cafbb };

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_eadbb *PdfPageResources )HasXObjectByName (keyName _cg .PdfObjectName )bool {_gecaf ,_ :=_eadbb .GetXObjectByName (keyName );return _gecaf !=nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fdcf *Image )ColorAt (x ,y int )(_ea .Color ,error ){_dbefc :=_dg .BytesPerLine (int (_fdcf .Width ),int (_fdcf .BitsPerComponent ),_fdcf .ColorComponents );switch _fdcf .ColorComponents {case 1:return _dg .ColorAtGrayscale (x ,y ,int (_fdcf .BitsPerComponent ),_dbefc ,_fdcf .Data ,_fdcf ._abbba );
case 3:return _dg .ColorAtNRGBA (x ,y ,int (_fdcf .Width ),_dbefc ,int (_fdcf .BitsPerComponent ),_fdcf .Data ,_fdcf ._cfdb ,_fdcf ._abbba );case 4:return _dg .ColorAtCMYK (x ,y ,int (_fdcf .Width ),_fdcf .Data ,_fdcf ._abbba );};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdcf .ColorComponents ,_fdcf .BitsPerComponent );
return nil ,_cc .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// SetContext set the sub annotation (context).
func (_ffdb *PdfShading )SetContext (ctx PdfModel ){_ffdb ._bcbf =ctx };

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_fdbca *pdfFontSimple )ToPdfObject ()_cg .PdfObject {if _fdbca ._bggb ==nil {_fdbca ._bggb =&_cg .PdfIndirectObject {};};_cbad :=_fdbca .baseFields ().asPdfObjectDictionary ("");_fdbca ._bggb .PdfObject =_cbad ;if _fdbca .FirstChar !=nil {_cbad .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fdbca .FirstChar );
};if _fdbca .LastChar !=nil {_cbad .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fdbca .LastChar );};if _fdbca .Widths !=nil {_cbad .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fdbca .Widths );};if _fdbca .Encoding !=nil {_cbad .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fdbca .Encoding );
}else if _fdbca ._bfcd !=nil {_bcbee :=_fdbca ._bfcd .ToPdfObject ();if _bcbee !=nil {_cbad .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bcbee );};};return _fdbca ._bggb ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bffcb PdfModel ;_edge *_cg .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_cg .PdfObjectName ;T *_cg .PdfObjectString ;TU *_cg .PdfObjectString ;TM *_cg .PdfObjectString ;Ff *_cg .PdfObjectInteger ;
V _cg .PdfObject ;DV _cg .PdfObject ;AA _cg .PdfObject ;VariableText *VariableText ;};func _dbea (_acebc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_acebc }};type pdfCIDFontType2 struct{fontCommon ;_dgade *_cg .PdfIndirectObject ;
_bedae _ad .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_cg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cg .PdfObject ;W _cg .PdfObject ;DW2 _cg .PdfObject ;W2 _cg .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _cg .PdfObject ;_gfbfb map[_ad .CharCode ]float64 ;_fgeg float64 ;_ddcd map[rune ]int ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_begacb *PdfReader )GetOutlines ()(*Outline ,error ){if _begacb ==nil {return nil ,_cc .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fgdda :=_begacb .GetOutlineTree ();if _fgdda ==nil {return nil ,_cc .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _efdd func (_eeed *PdfOutlineTreeNode ,_ccege *[]*OutlineItem );_efdd =func (_fgfce *PdfOutlineTreeNode ,_dgebbc *[]*OutlineItem ){if _fgfce ==nil {return ;};if _fgfce ._egbcb ==nil {_bc .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _ffae *OutlineItem ;if _gegbb ,_fddf :=_fgfce ._egbcb .(*PdfOutlineItem );_fddf {_abebb :=_gegbb .Dest ;if (_abebb ==nil ||_cg .IsNullObject (_abebb ))&&_gegbb .A !=nil {if _ecfcd ,_aaffb :=_cg .GetDict (_gegbb .A );_aaffb {_abebb ,_ =_cg .GetArray (_ecfcd .Get ("\u0044"));
};};var _ebacad OutlineDest ;if _abebb !=nil &&!_cg .IsNullObject (_abebb ){if _degdg ,_ebddb :=_fbdeb (_abebb ,_begacb );_ebddb ==nil {_ebacad =*_degdg ;}else {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_abebb ,_ebddb );
};};_ffae =NewOutlineItem (_gegbb .Title .Decoded (),_ebacad );*_dgebbc =append (*_dgebbc ,_ffae );if _gegbb .Next !=nil {_efdd (_gegbb .Next ,_dgebbc );};};if _fgfce .First !=nil {if _ffae !=nil {_dgebbc =&_ffae .Entries ;};_efdd (_fgfce .First ,_dgebbc );
};};_acbfa :=NewOutline ();_efdd (_fgdda ,&_acbfa .Entries );return _acbfa ,nil ;};func (_fffcg *PdfReader )newPdfAnnotation3DFromDict (_aeb *_cg .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_baab :=PdfAnnotation3D {};_baab .T3DD =_aeb .Get ("\u0033\u0044\u0044");
_baab .T3DV =_aeb .Get ("\u0033\u0044\u0056");_baab .T3DA =_aeb .Get ("\u0033\u0044\u0041");_baab .T3DI =_aeb .Get ("\u0033\u0044\u0049");_baab .T3DB =_aeb .Get ("\u0033\u0044\u0042");return &_baab ,nil ;};func (_ecgeb *PdfAppender )mergeResources (_cfef ,_gagc _cg .PdfObject ,_gdga map[_cg .PdfObjectName ]_cg .PdfObjectName )_cg .PdfObject {if _gagc ==nil &&_cfef ==nil {return nil ;
};if _gagc ==nil {return _cfef ;};_cbcg ,_acac :=_cg .GetDict (_gagc );if !_acac {return _cfef ;};if _cfef ==nil {_faaf :=_cg .MakeDict ();_faaf .Merge (_cbcg );return _gagc ;};_daaf ,_acac :=_cg .GetDict (_cfef );if !_acac {_bc .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_daaf =_cg .MakeDict ();};for _ ,_dcd :=range _cbcg .Keys (){if _bdcf ,_gbaa :=_gdga [_dcd ];_gbaa {_daaf .Set (_bdcf ,_cbcg .Get (_dcd ));}else {_daaf .Set (_dcd ,_cbcg .Get (_dcd ));};};return _daaf ;};func (_bgb *PdfReader )newPdfActionURIFromDict (_afcd *_cg .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_afcd .Get ("\u0055\u0052\u0049"),IsMap :_afcd .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aebff pdfFontSimple )GetRuneMetrics (r rune )(_af .CharMetrics ,bool ){if _aebff ._eadbf !=nil {_dagf ,_bbgf :=_aebff ._eadbf .Read (r );if _bbgf {return _dagf ,true ;};};_fadc :=_aebff .Encoder ();if _fadc ==nil {_bc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_aebff );
return _af .CharMetrics {},false ;};_ccab ,_efegd :=_fadc .RuneToCharcode (r );if !_efegd {if r !=' '{_bc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_aebff );
};return _af .CharMetrics {},false ;};_bdcda ,_bafee :=_aebff .GetCharMetrics (_ccab );return _bdcda ,_bafee ;};

// ToInteger convert to an integer format.
func (_afgf *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_fdba :=_bb .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_fdba *_afgf .C ()),uint32 (_fdba *_afgf .M ()),uint32 (_fdba *_afgf .Y ()),uint32 (_fdba *_afgf .K ())};};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_egga *LTV )EnableByName (name string ,extraCerts []*_eb .Certificate )error {_gbefc :=_egga ._cgeg ._cbba .AcroForm ;for _ ,_dddf :=range _gbefc .AllFields (){_gcgfe ,_ :=_dddf .GetContext ().(*PdfFieldSignature );if _gcgfe ==nil {continue ;};if _adae :=_gcgfe .PartialName ();
_adae !=name {continue ;};return _egga .Enable (_gcgfe .V ,extraCerts );};return nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bec *PdfAnnotationWidget )Field ()*PdfField {return _bec ._dad };func _eebd (_bddaa *_cg .PdfObjectStream )(*PdfFunctionType0 ,error ){_bafa :=&PdfFunctionType0 {};_bafa ._affge =_bddaa ;_aaead :=_bddaa .PdfObjectDictionary ;_eccecb ,_defef :=_cg .TraceToDirectObject (_aaead .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );
if !_defef {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eccecb .Len ()< 0||_eccecb .Len ()%2!=0{_bc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_bafa .NumInputs =_eccecb .Len ()/2;_gaacg ,_dbfae :=_eccecb .ToFloat64Array ();if _dbfae !=nil {return nil ,_dbfae ;};_bafa .Domain =_gaacg ;_eccecb ,_defef =_cg .TraceToDirectObject (_aaead .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );
if !_defef {_bc .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eccecb .Len ()< 0||_eccecb .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bafa .NumOutputs =_eccecb .Len ()/2;_aeaf ,_dbfae :=_eccecb .ToFloat64Array ();if _dbfae !=nil {return nil ,_dbfae ;
};_bafa .Range =_aeaf ;_eccecb ,_defef =_cg .TraceToDirectObject (_aaead .Get ("\u0053\u0069\u007a\u0065")).(*_cg .PdfObjectArray );if !_defef {_bc .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aeec ,_dbfae :=_eccecb .ToIntegerArray ();
if _dbfae !=nil {return nil ,_dbfae ;};if len (_aeec )!=_bafa .NumInputs {_bc .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bafa .Size =_aeec ;_gefag ,_defef :=_cg .TraceToDirectObject (_aaead .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_cg .PdfObjectInteger );
if !_defef {_bc .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_gefag !=1&&*_gefag !=2&&*_gefag !=4&&*_gefag !=8&&*_gefag !=12&&*_gefag !=16&&*_gefag !=24&&*_gefag !=32{_bc .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_gefag );
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bafa .BitsPerSample =int (*_gefag );_bafa .Order =1;_facge ,_defef :=_cg .TraceToDirectObject (_aaead .Get ("\u004f\u0072\u0064e\u0072")).(*_cg .PdfObjectInteger );
if _defef {if *_facge !=1&&*_facge !=3{_bc .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_facge );return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bafa .Order =int (*_facge );
};_eccecb ,_defef =_cg .TraceToDirectObject (_aaead .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cg .PdfObjectArray );if _defef {_ecgc ,_afcb :=_eccecb .ToFloat64Array ();if _afcb !=nil {return nil ,_afcb ;};_bafa .Encode =_ecgc ;};_eccecb ,_defef =_cg .TraceToDirectObject (_aaead .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_cg .PdfObjectArray );
if _defef {_cedd ,_efegg :=_eccecb .ToFloat64Array ();if _efegg !=nil {return nil ,_efegg ;};_bafa .Decode =_cedd ;};_deac ,_dbfae :=_cg .DecodeStream (_bddaa );if _dbfae !=nil {return nil ,_dbfae ;};_bafa ._bbfb =_deac ;return _bafa ,nil ;};

// Items returns all children outline items.
func (_gbda *OutlineItem )Items ()[]*OutlineItem {return _gbda .Entries };func (_bfbgd *fontFile )parseASCIIPart (_dbcde []byte )error {if len (_dbcde )< 2||string (_dbcde [:2])!="\u0025\u0021"{return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_ceaae ,_fecc ,_egbbb :=_adaa (_dbcde );if _egbbb !=nil {return _egbbb ;};_fdaac :=_caaeab (_ceaae );_bfbgd ._geeae =_fdaac ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _bfbgd ._geeae ==""{_bc .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _fecc !=""{_ccace ,_fgabf :=_gbede (_fecc );if _fgabf !=nil {return _fgabf ;};_cefaf ,_fgabf :=_ad .NewCustomSimpleTextEncoder (_ccace ,nil );if _fgabf !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_fgabf );
return nil ;};_bfbgd ._eadfe =_cefaf ;};return nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_deefd *PdfPageResources )SetXObjectFormByName (keyName _cg .PdfObjectName ,xform *XObjectForm )error {_ddbgd :=xform .ToPdfObject ().(*_cg .PdfObjectStream );_bdde :=_deefd .SetXObjectByName (keyName ,_ddbgd );return _bdde ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_ddgea *_cg .PdfIndirectObject ;};func (_gdba *PdfFilespec )getDict ()*_cg .PdfObjectDictionary {if _bbade ,_cecf :=_gdba ._cbdf .(*_cg .PdfIndirectObject );_cecf {_gagea ,_fgbb :=_bbade .PdfObject .(*_cg .PdfObjectDictionary );
if !_fgbb {return nil ;};return _gagea ;}else if _geaea ,_fggec :=_gdba ._cbdf .(*_cg .PdfObjectDictionary );_fggec {return _geaea ;}else {_bc .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_gdba ._cbdf );
return nil ;};};

// ToPdfObject implements interface PdfModel.
func (_gdaf *PdfAnnotationLine )ToPdfObject ()_cg .PdfObject {_gdaf .PdfAnnotation .ToPdfObject ();_abbg :=_gdaf ._bgf ;_ddfb :=_abbg .PdfObject .(*_cg .PdfObjectDictionary );_gdaf .PdfAnnotationMarkup .appendToPdfDictionary (_ddfb );_ddfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u004c\u0069\u006e\u0065"));
_ddfb .SetIfNotNil ("\u004c",_gdaf .L );_ddfb .SetIfNotNil ("\u0042\u0053",_gdaf .BS );_ddfb .SetIfNotNil ("\u004c\u0045",_gdaf .LE );_ddfb .SetIfNotNil ("\u0049\u0043",_gdaf .IC );_ddfb .SetIfNotNil ("\u004c\u004c",_gdaf .LL );_ddfb .SetIfNotNil ("\u004c\u004c\u0045",_gdaf .LLE );
_ddfb .SetIfNotNil ("\u0043\u0061\u0070",_gdaf .Cap );_ddfb .SetIfNotNil ("\u0049\u0054",_gdaf .IT );_ddfb .SetIfNotNil ("\u004c\u004c\u004f",_gdaf .LLO );_ddfb .SetIfNotNil ("\u0043\u0050",_gdaf .CP );_ddfb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gdaf .Measure );
_ddfb .SetIfNotNil ("\u0043\u004f",_gdaf .CO );return _abbg ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _cg .PdfObject ;BS _cg .PdfObject ;LE _cg .PdfObject ;IC _cg .PdfObject ;LL _cg .PdfObject ;LLE _cg .PdfObject ;Cap _cg .PdfObject ;IT _cg .PdfObject ;LLO _cg .PdfObject ;CP _cg .PdfObject ;
Measure _cg .PdfObject ;CO _cg .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aafafeb *PdfShadingType3 )ToPdfObject ()_cg .PdfObject {_aafafeb .PdfShading .ToPdfObject ();_fagafc ,_dfgbf :=_aafafeb .getShadingDict ();if _dfgbf !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aafafeb .Coords !=nil {_fagafc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_aafafeb .Coords );};if _aafafeb .Domain !=nil {_fagafc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aafafeb .Domain );};if _aafafeb .Function !=nil {if len (_aafafeb .Function )==1{_fagafc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aafafeb .Function [0].ToPdfObject ());
}else {_ccagd :=_cg .MakeArray ();for _ ,_fafgf :=range _aafafeb .Function {_ccagd .Append (_fafgf .ToPdfObject ());};_fagafc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ccagd );};};if _aafafeb .Extend !=nil {_fagafc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_aafafeb .Extend );
};return _aafafeb ._cagea ;};

// ToPdfObject implements interface PdfModel.
func (_gadc *PdfAnnotationText )ToPdfObject ()_cg .PdfObject {_gadc .PdfAnnotation .ToPdfObject ();_ffeb :=_gadc ._bgf ;_aae :=_ffeb .PdfObject .(*_cg .PdfObjectDictionary );if _gadc .PdfAnnotationMarkup !=nil {_gadc .PdfAnnotationMarkup .appendToPdfDictionary (_aae );
};_aae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0054\u0065\u0078\u0074"));_aae .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gadc .Open );_aae .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gadc .Name );_aae .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gadc .State );
_aae .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gadc .StateModel );return _ffeb ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bfde *PdfReader )IsEncrypted ()(bool ,error ){return _bfde ._adfcb .IsEncrypted ()};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_ggbf *PdfColorCalRGB )GetNumComponents ()int {return 3};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_dgcbg byte )byte ;

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_bdag *PdfPageResources )HasColorspaceByName (keyName _cg .PdfObjectName )bool {_ggba ,_effed :=_bdag .GetColorspaces ();if _effed !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_effed );
return false ;};if _ggba ==nil {return false ;};_ ,_dacad :=_ggba .Colorspaces [string (keyName )];return _dacad ;};

// Items returns all children outline items.
func (_bfcff *Outline )Items ()[]*OutlineItem {return _bfcff .Entries };func (_cbda *PdfAppender )updateObjectsDeep (_fffg _cg .PdfObject ,_dceb map[_cg .PdfObject ]struct{}){if _dceb ==nil {_dceb =map[_cg .PdfObject ]struct{}{};};if _ ,_efbfe :=_dceb [_fffg ];
_efbfe ||_fffg ==nil {return ;};_dceb [_fffg ]=struct{}{};_gbdf :=_cg .ResolveReferencesDeep (_fffg ,_cbda ._dgee );if _gbdf !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbdf );};switch _aegag :=_fffg .(type ){case *_cg .PdfIndirectObject :switch {case _aegag .GetParser ()==_cbda ._cbba ._adfcb :return ;
case _aegag .GetParser ()==_cbda .Reader ._adfcb :_gdcf ,_ :=_cbda ._cbba .GetIndirectObjectByNumber (int (_aegag .ObjectNumber ));_fcca ,_cdfed :=_gdcf .(*_cg .PdfIndirectObject );if _cdfed &&_fcca !=nil {if _fcca .PdfObject !=_aegag .PdfObject &&_fcca .PdfObject .WriteString ()!=_aegag .PdfObject .WriteString (){_cbda .addNewObject (_fffg );
_cbda ._aaab [_fffg ]=_aegag .ObjectNumber ;};};default:_cbda .addNewObject (_fffg );};_cbda .updateObjectsDeep (_aegag .PdfObject ,_dceb );case *_cg .PdfObjectArray :for _ ,_bdc :=range _aegag .Elements (){_cbda .updateObjectsDeep (_bdc ,_dceb );};case *_cg .PdfObjectDictionary :for _ ,_bgef :=range _aegag .Keys (){_cbda .updateObjectsDeep (_aegag .Get (_bgef ),_dceb );
};case *_cg .PdfObjectStreams :if _aegag .GetParser ()!=_cbda ._cbba ._adfcb {for _ ,_bgaf :=range _aegag .Elements (){_cbda .updateObjectsDeep (_bgaf ,_dceb );};};case *_cg .PdfObjectStream :switch {case _aegag .GetParser ()==_cbda ._cbba ._adfcb :return ;
case _aegag .GetParser ()==_cbda .Reader ._adfcb :if _cgbd ,_fdda :=_cbda ._cbba ._adfcb .LookupByReference (_aegag .PdfObjectReference );_fdda ==nil {var _cacc bool ;if _fdfc ,_ffad :=_cg .GetStream (_cgbd );_ffad &&_cd .Equal (_fdfc .Stream ,_aegag .Stream ){_cacc =true ;
};if _ebbb ,_ggf :=_cg .GetDict (_cgbd );_cacc &&_ggf {_cacc =_ebbb .WriteString ()==_aegag .PdfObjectDictionary .WriteString ();};if _cacc {return ;};};if _aegag .ObjectNumber !=0{_cbda ._aaab [_fffg ]=_aegag .ObjectNumber ;};default:if _ ,_eaabd :=_cbda ._gdcc [_fffg ];
!_eaabd {_cbda .addNewObject (_fffg );};};_cbda .updateObjectsDeep (_aegag .PdfObjectDictionary ,_dceb );};};

// Val returns the value of the color.
func (_bgfe *PdfColorCalGray )Val ()float64 {return float64 (*_bgfe )};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_eaabe *modelManager )GetPrimitiveFromModel (model PdfModel )_cg .PdfObject {_fcde ,_baac :=_eaabe ._daagb [model ];if !_baac {return nil ;};return _fcde ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_be :=NewPdfAction ();_bd :=&PdfActionSubmitForm {};_bd .PdfAction =_be ;_be .SetContext (_bd );return _bd ;};type pdfSignDictionary struct{*_cg .PdfObjectDictionary ;_fcefdb *SignatureHandler ;_cgeeff *PdfSignature ;
_egfbcd int64 ;_daacb int ;_agcbd int ;_acadf int ;_fggce int ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_gaa _eda .ReadSeeker ;_ecb *_cg .PdfParser ;_cbba *PdfReader ;Reader *PdfReader ;_gccd []*PdfPage ;_dgfd *PdfAcroForm ;_cagf *DSS ;_gfc _cg .XrefTable ;_bacd int64 ;_debeg int ;_eegc []_cg .PdfObject ;_gdcc map[_cg .PdfObject ]struct{};
_aaab map[_cg .PdfObject ]int64 ;_badf map[_cg .PdfObject ]struct{};_dgee map[_cg .PdfObject ]struct{};_afcde int64 ;_fafb bool ;_eaab string ;_efcd *EncryptOptions ;};func (_eeba *pdfFontSimple )updateStandard14Font (){_affcf ,_ecdbgg :=_eeba .Encoder ().(_ad .SimpleEncoder );
if !_ecdbgg {_bc .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eeba .Encoder (),_eeba );return ;};_fbdce :=_affcf .Charcodes ();
_eeba ._cegee =make (map[_ad .CharCode ]float64 ,len (_fbdce ));for _ ,_gbafa :=range _fbdce {_dbefg ,_ :=_affcf .CharcodeToRune (_gbafa );_gcbdf ,_ :=_eeba ._eadbf .Read (_dbefg );_eeba ._cegee [_gbafa ]=_gcbdf .Wx ;};};func (_ecda *PdfAppender )replaceObject (_fbce ,_adec _cg .PdfObject ){switch _aabc :=_fbce .(type ){case *_cg .PdfIndirectObject :_ecda ._aaab [_adec ]=_aabc .ObjectNumber ;
case *_cg .PdfObjectStream :_ecda ._aaab [_adec ]=_aabc .ObjectNumber ;};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cfgd *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eebec :=vals [0];if _eebec < 0.0||_eebec > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eebec );
return nil ,ErrColorOutOfRange ;};_cae :=NewPdfColorCalGray (_eebec );return _cae ,nil ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bebad *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_gdfec ,_fbdc :=color .(*PdfColorDeviceCMYK );if !_fbdc {_bc .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccga :=_gdfec .C ();_dcafb :=_gdfec .M ();_acca :=_gdfec .Y ();_acag :=_gdfec .K ();_ccga =_ccga *(1-_acag )+_acag ;_dcafb =_dcafb *(1-_acag )+_acag ;
_acca =_acca *(1-_acag )+_acag ;_fabg :=1-_ccga ;_aafe :=1-_dcafb ;_agbf :=1-_acca ;return NewPdfColorDeviceRGB (_fabg ,_aafe ,_agbf ),nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_cbgeg :_cg .MakeDict ()};
};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_dfdcc *PdfPageResources )HasExtGState (keyName _cg .PdfObjectName )bool {_ ,_cgegg :=_dfdcc .GetFontByName (keyName );return _cgegg ;};

// A returns the value of the A component of the color.
func (_egbe *PdfColorCalRGB )A ()float64 {return _egbe [0]};func (_dfaa *PdfReader )newPdfActionSubmitFormFromDict (_bca *_cg .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gcg ,_dbgd :=_acf (_bca .Get ("\u0046"));if _dbgd !=nil {return nil ,_dbgd ;
};return &PdfActionSubmitForm {F :_gcg ,Fields :_bca .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bca .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func (_bedeb *PdfAcroForm )filteredFields (_ddfgf FieldFilterFunc ,_egbfe bool )[]*PdfField {if _bedeb ==nil {return nil ;
};return _cece (_bedeb .Fields ,_ddfgf ,_egbfe );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _cg .PdfObject ;_fadb []byte ;_bcgd *_cg .PdfIndirectObject ;};func (_ggfb *DSS )generateHashMap (_bddd []*_cg .PdfObjectStream )(map[string ]*_cg .PdfObjectStream ,error ){_dgca :=map[string ]*_cg .PdfObjectStream {};
for _ ,_caaea :=range _bddd {_cceg ,_gaed :=_cg .DecodeStream (_caaea );if _gaed !=nil {return nil ,_gaed ;};_daec ,_gaed :=_dffg (_cceg );if _gaed !=nil {return nil ,_gaed ;};_dgca [string (_daec )]=_caaea ;};return _dgca ,nil ;};func (_egf *PdfReader )newPdfAnnotationInkFromDict (_fag *_cg .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_abffa :=PdfAnnotationInk {};
_ccce ,_edaa :=_egf .newPdfAnnotationMarkupFromDict (_fag );if _edaa !=nil {return nil ,_edaa ;};_abffa .PdfAnnotationMarkup =_ccce ;_abffa .InkList =_fag .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_abffa .BS =_fag .Get ("\u0042\u0053");return &_abffa ,nil ;
};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_geac *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dfeg :=_geac .actualFont ();if _dfeg ==nil {_bc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_geac ._dfaba );
return _af .CharMetrics {},false ;};if _gadfa ,_gaba :=_dfeg .GetRuneMetrics (r );_gaba {return _gadfa ,true ;};if _gbcfd ,_dbac :=_geac .GetFontDescriptor ();_dbac ==nil &&_gbcfd !=nil {return _af .CharMetrics {Wx :_gbcfd ._fdag },true ;};_bc .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_geac );
return _af .CharMetrics {},false ;};

// ToInteger convert to an integer format.
func (_cgbb *PdfColorLab )ToInteger (bits int )[3]uint32 {_fbcfg :=_bb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fbcfg *_cgbb .L ()),uint32 (_fbcfg *_cgbb .A ()),uint32 (_fbcfg *_cgbb .B ())};};

// SetContentStream sets the pattern cell's content stream.
func (_ebdgb *PdfTilingPattern )SetContentStream (content []byte ,encoder _cg .StreamEncoder )error {_eggg ,_cffee :=_ebdgb ._edebc .(*_cg .PdfObjectStream );if !_cffee {_bc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebdgb ._edebc );
return _cg .ErrTypeError ;};if encoder ==nil {encoder =_cg .NewRawEncoder ();};_bebe :=_eggg .PdfObjectDictionary ;_dfdce :=encoder .MakeStreamDict ();_bebe .Merge (_dfdce );_edecg ,_cbbgg :=encoder .EncodeBytes (content );if _cbbgg !=nil {return _cbbgg ;
};_bebe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_edecg ))));_eggg .Stream =_edecg ;return nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_deeaf *pdfSignDictionary )GetSubFilter ()string {_aebfff :=_deeaf .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _aebfff ==nil {return "";};if _cgeba ,_afcgf :=_cg .GetNameVal (_aebfff );_afcgf {return _cgeba ;};return "";};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_bagc :=&PdfBorderStyle {};return _bagc };

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_cbgeg *_cg .PdfObjectDictionary ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _cg .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _fdbg *_cg .PdfIndirectObject ;var _dcba *_cg .PdfObjectName ;var _afdb *_cg .PdfObjectArray ;if _ccgff ,_ged :=obj .(*_cg .PdfIndirectObject );
_ged {_fdbg =_ccgff ;};obj =_cg .TraceToDirectObject (obj );switch _ddbbf :=obj .(type ){case *_cg .PdfObjectArray :_afdb =_ddbbf ;case *_cg .PdfObjectName :_dcba =_ddbbf ;};if _dcba !=nil {switch *_dcba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_bc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_dcba );return nil ,_ebadd ;};};if _afdb !=nil &&_afdb .Len ()> 0{var _dbdb _cg .PdfObject =_fdbg ;
if _fdbg ==nil {_dbdb =_afdb ;};if _affb ,_daee :=_cg .GetName (_afdb .Get (0));_daee {switch _affb .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _afdb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _afdb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _afdb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ecdf (_dbdb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ddgd (_dbdb );
case "\u004c\u0061\u0062":return _ggca (_dbdb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _efcf (_dbdb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _agfb (_dbdb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _caca (_dbdb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _cbec (_dbdb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _addf (_dbdb );default:_bc .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_affb );
};};};_bc .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_bbga *PdfReader )newPdfAnnotationRichMediaFromDict (_gefca *_cg .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_dgf :=&PdfAnnotationRichMedia {};_dgf .RichMediaSettings =_gefca .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_dgf .RichMediaContent =_gefca .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _dgf ,nil ;};func _acaa (_ebegc *_cg .PdfObjectDictionary ,_bagae *fontCommon ,_bbfg _ad .TextEncoder )(*pdfFontSimple ,error ){_edfb :=_cceea (_bagae );
_edfb ._cfgg =_bbfg ;if _bbfg ==nil {_beed :=_ebegc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _beed ==nil {_beed =_cg .MakeInteger (0);};_edfb .FirstChar =_beed ;_bgac ,_bddf :=_cg .GetIntVal (_beed );if !_bddf {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_beed );
return nil ,_cg .ErrTypeError ;};_beab :=_ad .CharCode (_bgac );_beed =_ebegc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _beed ==nil {_beed =_cg .MakeInteger (255);};_edfb .LastChar =_beed ;_bgac ,_bddf =_cg .GetIntVal (_beed );if !_bddf {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_beed );
return nil ,_cg .ErrTypeError ;};_edffa :=_ad .CharCode (_bgac );_edfb ._cegee =make (map[_ad .CharCode ]float64 );_beed =_ebegc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _beed !=nil {_edfb .Widths =_beed ;_ccfdb ,_cadf :=_cg .GetArray (_beed );
if !_cadf {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_beed );return nil ,_cg .ErrTypeError ;
};_becge ,_ecbg :=_ccfdb .ToFloat64Array ();if _ecbg !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ecbg ;};if len (_becge )!=int (_edffa -_beab +1){_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_edffa -_beab +1,len (_becge ));
return nil ,_cg .ErrRangeError ;};for _fcbbe ,_bgdc :=range _becge {_edfb ._cegee [_beab +_ad .CharCode (_fcbbe )]=_bgdc ;};};};_edfb .Encoding =_cg .TraceToDirectObject (_ebegc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _edfb ,nil ;
};func _ffffd (_fgfd *_cg .PdfObjectDictionary )(*PdfFieldButton ,error ){_egdg :=&PdfFieldButton {};_egdg .PdfField =NewPdfField ();_egdg .PdfField .SetContext (_egdg );_egdg .Opt ,_ =_cg .GetArray (_fgfd .Get ("\u004f\u0070\u0074"));_fcgg :=NewPdfAnnotationWidget ();
_fcgg .A ,_ =_cg .GetDict (_fgfd .Get ("\u0041"));_fcgg .AP ,_ =_cg .GetDict (_fgfd .Get ("\u0041\u0050"));_fcgg .SetContext (_egdg );_egdg .PdfField .Annotations =append (_egdg .PdfField .Annotations ,_fcgg );return _egdg ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_dbce *PdfPage )error ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_baeca *PdfFont )ToPdfObject ()_cg .PdfObject {if _baeca ._dfaba ==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _cg .MakeNull ();
};return _baeca ._dfaba .ToPdfObject ();};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_feeda *Image )GetSamples ()[]uint32 {_dgebb :=_df .ResampleBytes (_feeda .Data ,int (_feeda .BitsPerComponent ));if _feeda .BitsPerComponent < 8{_dgebb =_feeda .samplesTrimPadding (_dgebb );};_faeaf :=int (_feeda .Width )*int (_feeda .Height )*_feeda .ColorComponents ;
if len (_dgebb )< _faeaf {_bc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dgebb ),_faeaf );
return _dgebb ;}else if len (_dgebb )> _faeaf {_bc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dgebb ),_faeaf );
_dgebb =_dgebb [:_faeaf ];};return _dgebb ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ef .Permissions ;Algorithm EncryptionAlgorithm ;};func (_eegb *DSS )addCerts (_dbfab [][]byte )([]*_cg .PdfObjectStream ,error ){return _eegb .add (&_eegb .Certs ,_eegb ._beaf ,_dbfab );};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_cg .PdfObject ;GetContainingPdfObject ()_cg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gadce *PdfAnnotationInk )ToPdfObject ()_cg .PdfObject {_gadce .PdfAnnotation .ToPdfObject ();_bfdd :=_gadce ._bgf ;_cfcgg :=_bfdd .PdfObject .(*_cg .PdfObjectDictionary );_gadce .PdfAnnotationMarkup .appendToPdfDictionary (_cfcgg );_cfcgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0049\u006e\u006b"));
_cfcgg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_gadce .InkList );_cfcgg .SetIfNotNil ("\u0042\u0053",_gadce .BS );return _bfdd ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_egea *PdfPageResources )HasFontByName (keyName _cg .PdfObjectName )bool {_ ,_eecg :=_egea .GetFontByName (keyName );return _eecg ;};

// ToPdfObject implements interface PdfModel.
func (_agg *PdfAnnotationCaret )ToPdfObject ()_cg .PdfObject {_agg .PdfAnnotation .ToPdfObject ();_geab :=_agg ._bgf ;_agdg :=_geab .PdfObject .(*_cg .PdfObjectDictionary );_agg .PdfAnnotationMarkup .appendToPdfDictionary (_agdg );_agdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0043\u0061\u0072e\u0074"));
_agdg .SetIfNotNil ("\u0052\u0044",_agg .RD );_agdg .SetIfNotNil ("\u0053\u0079",_agg .Sy );return _geab ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_cgeda *PdfOutputIntent )ParsePdfObject (object _cg .PdfObject )error {_cbeaec ,_dafbf :=_cg .GetDict (object );if !_dafbf {_bc .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cc .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_cgeda ._cbgeg =_cbeaec ;_cgeda .Type ,_ =_cbeaec .GetString ("\u0054\u0079\u0070\u0065");_afdacc ,_dafbf :=_cbeaec .GetString ("\u0053");if _dafbf {switch _afdacc {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_cgeda .S =PdfOutputIntentTypeA1 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_cgeda .S =PdfOutputIntentTypeA2 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_cgeda .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_cgeda .S =PdfOutputIntentTypeA4 ;
case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_cgeda .S =PdfOutputIntentTypeX ;};};_cgeda .OutputCondition ,_ =_cbeaec .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_cgeda .OutputConditionIdentifier ,_ =_cbeaec .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_cgeda .RegistryName ,_ =_cbeaec .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_cgeda .Info ,_ =_cbeaec .GetString ("\u0049\u006e\u0066\u006f");if _bbbbf ,_gaeae :=_cg .GetStream (_cbeaec .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_gaeae {_cgeda .ColorComponents ,_ =_cg .GetIntVal (_bbbbf .Get ("\u004e"));_efcfa ,_fdeg :=_cg .DecodeStream (_bbbbf );if _fdeg !=nil {return _fdeg ;};_cgeda .DestOutputProfile =_efcfa ;};return nil ;};

// Encoder returns the font's text encoder.
func (_deff *pdfFontSimple )Encoder ()_ad .TextEncoder {if _deff ._bfcd !=nil {return _deff ._bfcd ;};if _deff ._cfgg !=nil {return _deff ._cfgg ;};_babfb ,_ :=_ad .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _babfb ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gdafb *PdfReader )Decrypt (password []byte )(bool ,error ){_ebbbe ,_defca :=_gdafb ._adfcb .Decrypt (password );if _defca !=nil {return false ,_defca ;};if !_ebbbe {return false ,nil ;};_defca =_gdafb .loadStructure ();if _defca !=nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_defca );
return false ,_defca ;};return true ,nil ;};func (_dgadc *PdfReader )newPdfActionTransFromDict (_ffde *_cg .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ffde .Get ("\u0054\u0072\u0061n\u0073")},nil ;};func (_gaedd *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _gafdg []*PdfFieldSignature ;
for _ ,_cdbe :=range _gaedd .AllFields (){switch _gfbgc :=_cdbe .GetContext ().(type ){case *PdfFieldSignature :_dfdf :=_gfbgc ;_gafdg =append (_gafdg ,_dfdf );};};return _gafdg ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _cg .PdfObject ;V _cg .PdfObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_edfgc *PdfFont )SubsetRegistered ()error {switch _efge :=_edfgc ._dfaba .(type ){case *pdfFontType0 :_eeag :=_efge .subsetRegistered ();if _eeag !=nil {_bc .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eeag );
return _eeag ;};if _efge ._becg !=nil {if _efge ._efac !=nil {_efge ._efac .ToPdfObject ();};_efge .ToPdfObject ();};default:_bc .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_efge );
};return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_egbcb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_fbcfb *XObjectImage )GetContainingPdfObject ()_cg .PdfObject {return _fbcfb ._cdfcc };

// SetPatternByName sets a pattern resource specified by keyName.
func (_beeg *PdfPageResources )SetPatternByName (keyName _cg .PdfObjectName ,pattern _cg .PdfObject )error {if _beeg .Pattern ==nil {_beeg .Pattern =_cg .MakeDict ();};_daaa ,_gagg :=_beeg .Pattern .(*_cg .PdfObjectDictionary );if !_gagg {return _cg .ErrTypeError ;
};_daaa .Set (keyName ,pattern );return nil ;};func (_cfb *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_ddfbc *PdfColorspaceDeviceN )GetNumComponents ()int {return _ddfbc .ColorantNames .Len ()};func (_adfcd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _adfcd ._ffab };

// SetAlpha sets the alpha layer for the image.
func (_bfdgg *Image )SetAlpha (alpha []byte ){_bfdgg ._cfdb =alpha };

// SetImage updates XObject Image with new image data.
func (_adfea *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_adfea .Filter .UpdateParams (img .GetParamsDict ());_cebb ,_ecfec :=_adfea .Filter .EncodeBytes (img .Data );if _ecfec !=nil {return _ecfec ;};_adfea .Stream =_cebb ;_gbcgd :=img .Width ;
_adfea .Width =&_gbcgd ;_eefcb :=img .Height ;_adfea .Height =&_eefcb ;_eecda :=img .BitsPerComponent ;_adfea .BitsPerComponent =&_eecda ;if cs ==nil {if img .ColorComponents ==1{_adfea .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_adfea .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_adfea .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_adfea .ColorSpace =cs ;};return nil ;
};

// Initialize initializes the PdfSignature.
func (_egafbg *PdfSignature )Initialize ()error {if _egafbg .Handler ==nil {return _cc .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _egafbg .Handler .InitSignature (_egafbg );};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_gcec *PdfField )Flags ()FieldFlag {var _dbgcg FieldFlag ;_ccba ,_cega :=_gcec .inherit (func (_dcacf *PdfField )bool {if _dcacf .Ff !=nil {_dbgcg =FieldFlag (*_dcacf .Ff );return true ;};return false ;});if _cega !=nil {_bc .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_cega );
};if !_ccba {_bc .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _dbgcg ;};func (_cfbaa *PdfWriter )checkPendingObjects (){for _accad ,_gbbea :=range _cfbaa ._adbec {if !_cfbaa .hasObject (_accad ){_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_accad ,_accad ,_accad );
for _ ,_dfcaf :=range _gbbea {for _ ,_ccgge :=range _dfcaf .Keys (){_bcfdg :=_dfcaf .Get (_ccgge );if _bcfdg ==_accad {_bc .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_dfcaf .Set (_ccgge ,_cg .MakeNull ());break ;};};};};};};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_agb :=NewPdfAction ();_fbb :=&PdfActionSound {};_fbb .PdfAction =_agb ;_agb .SetContext (_fbb );return _fbb ;};func _ggca (_ddab _cg .PdfObject )(*PdfColorspaceLab ,error ){_fbbf :=NewPdfColorspaceLab ();if _cbfe ,_bebb :=_ddab .(*_cg .PdfIndirectObject );
_bebb {_fbbf ._dbef =_cbfe ;};_ddab =_cg .TraceToDirectObject (_ddab );_ecfad ,_fecf :=_ddab .(*_cg .PdfObjectArray );if !_fecf {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ecfad .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_ddab =_cg .TraceToDirectObject (_ecfad .Get (0));_gebg ,_fecf :=_ddab .(*_cg .PdfObjectName );if !_fecf {return nil ,_f .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_gebg !="\u004c\u0061\u0062"{return nil ,_f .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_ddab =_cg .TraceToDirectObject (_ecfad .Get (1));_edff ,_fecf :=_ddab .(*_cg .PdfObjectDictionary );
if !_fecf {return nil ,_f .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_ddab =_edff .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_ddab =_cg .TraceToDirectObject (_ddab );_fdbea ,_fecf :=_ddab .(*_cg .PdfObjectArray );if !_fecf {return nil ,_f .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _fdbea .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_egfc ,_fbbbg :=_fdbea .GetAsFloat64Slice ();if _fbbbg !=nil {return nil ,_fbbbg ;};_fbbf .WhitePoint =_egfc ;_ddab =_edff .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ddab !=nil {_ddab =_cg .TraceToDirectObject (_ddab );
_gffb ,_gdae :=_ddab .(*_cg .PdfObjectArray );if !_gdae {return nil ,_f .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gffb .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_ffff ,_aagc :=_gffb .GetAsFloat64Slice ();if _aagc !=nil {return nil ,_aagc ;};_fbbf .BlackPoint =_ffff ;};_ddab =_edff .Get ("\u0052\u0061\u006eg\u0065");if _ddab !=nil {_ddab =_cg .TraceToDirectObject (_ddab );_egbef ,_edca :=_ddab .(*_cg .PdfObjectArray );
if !_edca {_bc .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_f .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egbef .Len ()!=4{_bc .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gffd ,_ggaf :=_egbef .GetAsFloat64Slice ();if _ggaf !=nil {return nil ,_ggaf ;};_fbbf .Range =_gffd ;};return _fbbf ,nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ceaa FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ceaa .Mask ()|fl .Mask ())};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_aecc *PdfAcroForm )ToPdfObject ()_cg .PdfObject {_badga :=_aecc ._ebbeg ;_abce :=_badga .PdfObject .(*_cg .PdfObjectDictionary );if _aecc .Fields !=nil {_fccee :=_cg .PdfObjectArray {};for _ ,_fceaa :=range *_aecc .Fields {_bgce :=_fceaa .GetContext ();
if _bgce !=nil {_fccee .Append (_bgce .ToPdfObject ());}else {_fccee .Append (_fceaa .ToPdfObject ());};};_abce .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_fccee );};if _aecc .NeedAppearances !=nil {_abce .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_aecc .NeedAppearances );
};if _aecc .SigFlags !=nil {_abce .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_aecc .SigFlags );};if _aecc .CO !=nil {_abce .Set ("\u0043\u004f",_aecc .CO );};if _aecc .DR !=nil {_abce .Set ("\u0044\u0052",_aecc .DR .ToPdfObject ());};if _aecc .DA !=nil {_abce .Set ("\u0044\u0041",_aecc .DA );
};if _aecc .Q !=nil {_abce .Set ("\u0051",_aecc .Q );};if _aecc .XFA !=nil {_abce .Set ("\u0058\u0046\u0041",_aecc .XFA );};return _badga ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _cg .PdfObject ;BS _cg .PdfObject ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ddbc *PdfPageResources )SetColorspaceByName (keyName _cg .PdfObjectName ,cs PdfColorspace )error {_fdbgb ,_fagaf :=_ddbc .GetColorspaces ();if _fagaf !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fagaf );
return _fagaf ;};if _fdbgb ==nil {_fdbgb =NewPdfPageResourcesColorspaces ();_ddbc .SetColorSpace (_fdbgb );};_fdbgb .Set (keyName ,cs );return nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_bbcf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_bbcf .HiVal )};};func (_eebae *PdfWriter )adjustXRefAffectedVersion (_agfag bool ){if _agfag &&_eebae ._baefbc .Major ==1&&_eebae ._baefbc .Minor < 5{_eebae ._baefbc .Minor =5;
};};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cdce *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gfaad *PdfShadingPattern )ToPdfObject ()_cg .PdfObject {_gfaad .PdfPattern .ToPdfObject ();_deebf :=_gfaad .getDict ();if _gfaad .Shading !=nil {_deebf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gfaad .Shading .ToPdfObject ());};if _gfaad .Matrix !=nil {_deebf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfaad .Matrix );
};if _gfaad .ExtGState !=nil {_deebf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gfaad .ExtGState );};return _gfaad ._edebc ;};func _bgbgf (_gcddf _cg .PdfObject )[]*_cg .PdfObjectStream {if _gcddf ==nil {return nil ;};_fffbb ,_eaade :=_cg .GetArray (_gcddf );
if !_eaade ||_fffbb .Len ()==0{return nil ;};_ddceg :=make ([]*_cg .PdfObjectStream ,0,_fffbb .Len ());for _ ,_fedeg :=range _fffbb .Elements (){if _fefdde ,_fcfgf :=_cg .GetStream (_fedeg );_fcfgf {_ddceg =append (_ddceg ,_fefdde );};};return _ddceg ;
};

// AddAnnotation appends `annot` to the list of page annotations.
func (_fdfgf *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fdfgf ._abbce ==nil {_fdfgf .GetAnnotations ();};_fdfgf ._abbce =append (_fdfgf ._abbce ,annot );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dccg pdfCIDFontType0 )GetRuneMetrics (r rune )(_af .CharMetrics ,bool ){return _af .CharMetrics {Wx :_dccg ._dgcb },true ;};func (_fdcbb *Image )resampleLowBits (_bddaf []uint32 ){_fabgg :=_dg .BytesPerLine (int (_fdcbb .Width ),int (_fdcbb .BitsPerComponent ),_fdcbb .ColorComponents );
_bcde :=make ([]byte ,_fdcbb .ColorComponents *_fabgg *int (_fdcbb .Height ));_bgggb :=int (_fdcbb .BitsPerComponent )*_fdcbb .ColorComponents *int (_fdcbb .Width );_dcddg :=uint8 (8);var (_ffcgb ,_eeaga int ;_feaaa uint32 ;);for _becdg :=0;_becdg < int (_fdcbb .Height );
_becdg ++{_eeaga =_becdg *_fabgg ;for _agbdg :=0;_agbdg < _bgggb ;_agbdg ++{_feaaa =_bddaf [_ffcgb ];_dcddg -=uint8 (_fdcbb .BitsPerComponent );_bcde [_eeaga ]|=byte (_feaaa )<<_dcddg ;if _dcddg ==0{_dcddg =8;_eeaga ++;};_ffcgb ++;};};_fdcbb .Data =_bcde ;
};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_cg .PdfObjectArray ;Matrix *_cg .PdfObjectArray ;Function []PdfFunction ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_dfaba pdfFont };

// GetContainingPdfObject implements model.PdfModel interface.
func (_fbdba *PdfOutputIntent )GetContainingPdfObject ()_cg .PdfObject {return _fbdba ._cbgeg };

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _eda .ReadSeeker )(*PdfFont ,error ){const _eeaa =_ad .CharCode (32);const _adccfg =_ad .CharCode (255);_agbda ,_dfec :=_fg .ReadAll (r );if _dfec !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dfec );
return nil ,_dfec ;};_agdge ,_dfec :=_af .TtfParse (_cd .NewReader (_agbda ));if _dfec !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_dfec );
return nil ,_dfec ;};_edaf :=&pdfFontSimple {_cegee :make (map[_ad .CharCode ]float64 ),fontCommon :fontCommon {_dbba :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_edaf ._bfcd =_ad .NewWinAnsiEncoder ();_edaf ._gbfc =_agdge .PostScriptName ;_edaf .FirstChar =_cg .MakeInteger (int64 (_eeaa ));
_edaf .LastChar =_cg .MakeInteger (int64 (_adccfg ));_fgaba :=1000.0/float64 (_agdge .UnitsPerEm );if len (_agdge .Widths )<=0{return nil ,_cc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cdbg :=_fgaba *float64 (_agdge .Widths [0]);_bcdgf :=make ([]float64 ,0,_adccfg -_eeaa +1);for _gffcd :=_eeaa ;_gffcd <=_adccfg ;_gffcd ++{_bffe ,_ggdgf :=_edaf .Encoder ().CharcodeToRune (_gffcd );if !_ggdgf {_bc .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gffcd );
_bcdgf =append (_bcdgf ,_cdbg );continue ;};_bcgab ,_ggefa :=_agdge .Chars [_bffe ];if !_ggefa {_bc .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_bcdgf =append (_bcdgf ,_cdbg );continue ;
};_fcaf :=_fgaba *float64 (_agdge .Widths [_bcgab ]);_bcdgf =append (_bcdgf ,_fcaf );};_edaf .Widths =_cg .MakeIndirectObject (_cg .MakeArrayFromFloats (_bcdgf ));if len (_bcdgf )< int (_adccfg -_eeaa +1){_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_bcdgf ),255-32+1);
return nil ,_cg .ErrRangeError ;};for _cbdb :=_eeaa ;_cbdb <=_adccfg ;_cbdb ++{_edaf ._cegee [_cbdb ]=_bcdgf [_cbdb -_eeaa ];};_edaf .Encoding =_cg .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bfbg :=&PdfFontDescriptor {};
_bfbg .FontName =_cg .MakeName (_agdge .PostScriptName );_bfbg .Ascent =_cg .MakeFloat (_fgaba *float64 (_agdge .TypoAscender ));_bfbg .Descent =_cg .MakeFloat (_fgaba *float64 (_agdge .TypoDescender ));_bfbg .CapHeight =_cg .MakeFloat (_fgaba *float64 (_agdge .CapHeight ));
_bfbg .FontBBox =_cg .MakeArrayFromFloats ([]float64 {_fgaba *float64 (_agdge .Xmin ),_fgaba *float64 (_agdge .Ymin ),_fgaba *float64 (_agdge .Xmax ),_fgaba *float64 (_agdge .Ymax )});_bfbg .ItalicAngle =_cg .MakeFloat (_agdge .ItalicAngle );_bfbg .MissingWidth =_cg .MakeFloat (_fgaba *float64 (_agdge .Widths [0]));
_bdcdg ,_dfec :=_cg .MakeStream (_agbda ,_cg .NewFlateEncoder ());if _dfec !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dfec );
return nil ,_dfec ;};_bdcdg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cg .MakeInteger (int64 (len (_agbda ))));_bfbg .FontFile2 =_bdcdg ;if _agdge .Bold {_bfbg .StemV =_cg .MakeInteger (120);}else {_bfbg .StemV =_cg .MakeInteger (70);
};_gagcd :=_dgbda ;if _agdge .IsFixedPitch {_gagcd |=_afdba ;};if _agdge .ItalicAngle !=0{_gagcd |=_febd ;};_bfbg .Flags =_cg .MakeInteger (int64 (_gagcd ));_edaf ._ffab =_bfbg ;_bagg :=&PdfFont {_dfaba :_edaf };return _bagg ,nil ;};func (_abbf *PdfReader )newPdfActionSoundFromDict (_bdbc *_cg .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bdbc .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bdbc .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bdbc .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bdbc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bdbc .Get ("\u004d\u0069\u0078")},nil ;
};func (_eaad *PdfReader )newPdfAnnotationFreeTextFromDict (_cgec *_cg .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_acff :=PdfAnnotationFreeText {};_fda ,_agcb :=_eaad .newPdfAnnotationMarkupFromDict (_cgec );if _agcb !=nil {return nil ,_agcb ;
};_acff .PdfAnnotationMarkup =_fda ;_acff .DA =_cgec .Get ("\u0044\u0041");_acff .Q =_cgec .Get ("\u0051");_acff .RC =_cgec .Get ("\u0052\u0043");_acff .DS =_cgec .Get ("\u0044\u0053");_acff .CL =_cgec .Get ("\u0043\u004c");_acff .IT =_cgec .Get ("\u0049\u0054");
_acff .BE =_cgec .Get ("\u0042\u0045");_acff .RD =_cgec .Get ("\u0052\u0044");_acff .BS =_cgec .Get ("\u0042\u0053");_acff .LE =_cgec .Get ("\u004c\u0045");return &_acff ,nil ;};func _beeeb ()_a .Time {_ebfgf .Lock ();defer _ebfgf .Unlock ();return _debgg };


// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_bbdab :=map[rune ]int {};for _ ,_faege :=range text {_bbdab [_faege ]++;};return _bbdab ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fbfcf :=&PdfFieldSignature {};_fbfcf .PdfField =NewPdfField ();_fbfcf .PdfField .SetContext (_fbfcf );_fbfcf .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fbfcf .PdfAnnotationWidget .SetContext (_fbfcf );
_fbfcf .PdfAnnotationWidget ._bgf =_fbfcf .PdfField ._edge ;_fbfcf .T =_cg .MakeString ("");_fbfcf .F =_cg .MakeInteger (132);_fbfcf .V =signature ;return _fbfcf ;};func _aeadgf (_egdeg *_cg .PdfObjectDictionary )(*PdfShadingType2 ,error ){_edggf :=PdfShadingType2 {};
_cbaac :=_egdeg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cbaac ==nil {_bc .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ccea ,_gfcdg :=_cbaac .(*_cg .PdfObjectArray );if !_gfcdg {_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbaac );
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _ccea .Len ()!=4{_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ccea .Len ());
return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_edggf .Coords =_ccea ;if _aabfg :=_egdeg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_aabfg !=nil {_aabfg =_cg .TraceToDirectObject (_aabfg );
_aeaab ,_aafff :=_aabfg .(*_cg .PdfObjectArray );if !_aafff {_bc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aabfg );return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_edggf .Domain =_aeaab ;};_cbaac =_egdeg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cbaac ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_edggf .Function =[]PdfFunction {};if _deab ,_edcg :=_cbaac .(*_cg .PdfObjectArray );_edcg {for _ ,_fbdg :=range _deab .Elements (){_egad ,_agef :=_ddccf (_fbdg );if _agef !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agef );
return nil ,_agef ;};_edggf .Function =append (_edggf .Function ,_egad );};}else {_afggg ,_dgdce :=_ddccf (_cbaac );if _dgdce !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgdce );
return nil ,_dgdce ;};_edggf .Function =append (_edggf .Function ,_afggg );};if _aefa :=_egdeg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aefa !=nil {_aefa =_cg .TraceToDirectObject (_aefa );_addfe ,_agbcg :=_aefa .(*_cg .PdfObjectArray );if !_agbcg {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aefa );
return nil ,_cg .ErrTypeError ;};if _addfe .Len ()!=2{_bc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_addfe .Len ());return nil ,ErrInvalidAttribute ;
};_edggf .Extend =_addfe ;};return &_edggf ,nil ;};func _faabd (_abaca *_cg .PdfObjectArray )(float64 ,error ){_cfgcg ,_cebec :=_abaca .ToFloat64Array ();if _cebec !=nil {_bc .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abaca ,_cebec );
};switch len (_cfgcg ){case 1:return _cfgcg [0],nil ;case 3:_bgbde :=PdfColorspaceDeviceRGB {};_dgfc ,_gfefc :=_bgbde .ColorFromFloats (_cfgcg );if _gfefc !=nil {return 0.0,_gfefc ;};return _dgfc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_bdgbf :=PdfColorspaceDeviceCMYK {};
_bcgeb ,_bgfdb :=_bdgbf .ColorFromFloats (_cfgcg );if _bgfdb !=nil {return 0.0,_bgfdb ;};_gcae ,_bgfdb :=_bdgbf .ColorToRGB (_bcgeb .(*PdfColorDeviceCMYK ));if _bgfdb !=nil {return 0.0,_bgfdb ;};return _gcae .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_cebec =_cc .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_bc .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abaca ,_cebec );
return 0.0,_cebec ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _cg .PdfObject ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_eeea *Image )SetSamples (samples []uint32 ){if _eeea .BitsPerComponent < 8{samples =_eeea .samplesAddPadding (samples );};_fcace :=_df .ResampleUint32 (samples ,int (_eeea .BitsPerComponent ),8);_cfeaa :=make ([]byte ,len (_fcace ));for _cbfag ,_egaca :=range _fcace {_cfeaa [_cbfag ]=byte (_egaca );
};_eeea .Data =_cfeaa ;};

// ToPdfObject implements interface PdfModel.
func (_cdb *PdfAnnotationHighlight )ToPdfObject ()_cg .PdfObject {_cdb .PdfAnnotation .ToPdfObject ();_dge :=_cdb ._bgf ;_ccbd :=_dge .PdfObject .(*_cg .PdfObjectDictionary );_cdb .PdfAnnotationMarkup .appendToPdfDictionary (_ccbd );_ccbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_ccbd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cdb .QuadPoints );return _dge ;};

// String returns a string that describes `font`.
func (_aecd *PdfFont )String ()string {_ecfd :="";if _aecd ._dfaba .Encoder ()!=nil {_ecfd =_aecd ._dfaba .Encoder ().String ();};return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_aecd ._dfaba ,_aecd .baseFields ().coreString (),_ecfd );
};func _addf (_gfcg _cg .PdfObject )(*PdfColorspaceDeviceN ,error ){_ccdg :=NewPdfColorspaceDeviceN ();if _bdbe ,_fdbb :=_gfcg .(*_cg .PdfIndirectObject );_fdbb {_ccdg ._fffgf =_bdbe ;};_gfcg =_cg .TraceToDirectObject (_gfcg );_caabb ,_dbfef :=_gfcg .(*_cg .PdfObjectArray );
if !_dbfef {return nil ,_f .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _caabb .Len ()!=4&&_caabb .Len ()!=5{return nil ,_f .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gfcg =_caabb .Get (0);_cebd ,_dbfef :=_gfcg .(*_cg .PdfObjectName );if !_dbfef {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cebd !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_f .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gfcg =_caabb .Get (1);
_gfcg =_cg .TraceToDirectObject (_gfcg );_edae ,_dbfef :=_gfcg .(*_cg .PdfObjectArray );if !_dbfef {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_ccdg .ColorantNames =_edae ;_gfcg =_caabb .Get (2);_aaff ,_addb :=NewPdfColorspaceFromPdfObject (_gfcg );if _addb !=nil {return nil ,_addb ;};_ccdg .AlternateSpace =_aaff ;_cfab ,_addb :=_ddccf (_caabb .Get (3));if _addb !=nil {return nil ,_addb ;};
_ccdg .TintTransform =_cfab ;if _caabb .Len ()==5{_beca ,_ebfb :=_gead (_caabb .Get (4));if _ebfb !=nil {return nil ,_ebfb ;};_ccdg .Attributes =_beca ;};return _ccdg ,nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cge :=NewPdfAnnotation ();_bbdb :=&PdfAnnotationStamp {};_bbdb .PdfAnnotation =_cge ;_bbdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cge .SetContext (_bbdb );return _bbdb ;};

// Fill populates `form` with values provided by `provider`.
func (_gbef *PdfAcroForm )Fill (provider FieldValueProvider )error {return _gbef .fill (provider ,nil )};

// ToPdfObject returns the PDF representation of the colorspace.
func (_daba *PdfColorspaceDeviceCMYK )ToPdfObject ()_cg .PdfObject {return _cg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_aebe :=PdfColorCalRGB {a ,b ,c };return &_aebe ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_af .CharMetrics ;func (_becec *PdfReader )loadDSS ()(*DSS ,error ){if _becec ._adfcb .GetCrypter ()!=nil &&!_becec ._adfcb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gcdag :=_becec ._egdgf .Get ("\u0044\u0053\u0053");if _gcdag ==nil {return nil ,nil ;};_ffadc ,_ :=_cg .GetIndirect (_gcdag );_gcdag =_cg .TraceToDirectObject (_gcdag );switch _dggb :=_gcdag .(type ){case *_cg .PdfObjectNull :return nil ,nil ;case *_cg .PdfObjectDictionary :return _adeag (_ffadc ,_dggb );
};return nil ,_f .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_gcdag );};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_efffb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _efcg []*PdfField ;if _efffb .AcroForm !=nil {_efcg =_efffb .AcroForm .AllFields ();};_gcfb :=make (map[*PdfField ]struct{},len (_efcg ));for _ ,_cdage :=range _efcg {_gcfb [_cdage ]=struct{}{};
};for _ ,_gbgbbc :=range _efffb .PageList {_afabe ,_feec :=_gbgbbc .GetAnnotations ();if _feec !=nil {return false ,_feec ;};for _ ,_ffaabc :=range _afabe {_dfebee ,_fdagg :=_ffaabc .GetContext ().(*PdfAnnotationWidget );if !_fdagg {continue ;};_ecafg :=_dfebee .Field ();
if _ecafg ==nil {return true ,nil ;};if _ ,_eebbbg :=_gcfb [_ecafg ];!_eebbbg {return true ,nil ;};};};return false ,nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_gfb *PdfAcroForm ,_bcaa *PdfField ,_fceg *PdfAnnotationWidget )(*_cg .PdfObjectDictionary ,error );};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _cg .PdfObject ;T _cg .PdfObject ;Operation _cg .PdfObject ;};

// Subtype returns the font's "Subtype" field.
func (_bcbdfd *PdfFont )Subtype ()string {_aead :=_bcbdfd .baseFields ()._dbba ;if _fcbf ,_bcgac :=_bcbdfd ._dfaba .(*pdfFontType0 );_bcgac {_aead =_aead +"\u003a"+_fcbf .DescendantFont .Subtype ();};return _aead ;};

// SetName sets the `Name` field of the signature.
func (_fggb *PdfSignature )SetName (name string ){_fggb .Name =_cg .MakeString (name )};func (_afbb *PdfPage )getParentResources ()(*PdfPageResources ,error ){_eaadd :=_afbb .Parent ;for _eaadd !=nil {_bage ,_bfbce :=_cg .GetDict (_eaadd );if !_bfbce {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _eadbd :=_bage .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eadbd !=nil {_cceeaf ,_gafec :=_cg .GetDict (_eadbd );
if !_gafec {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_aeecb ,_eggad :=NewPdfPageResourcesFromDict (_cceeaf );if _eggad !=nil {return nil ,_eggad ;};return _aeecb ,nil ;
};_eaadd =_bage .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// AddOutlineTree adds outlines to a PDF file.
func (_fgcec *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fgcec ._acgc =outlineTree };

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_cbecd *PdfPageResources )GetXObjectFormByName (keyName _cg .PdfObjectName )(*XObjectForm ,error ){_gfaaa ,_eaga :=_cbecd .GetXObjectByName (keyName );if _gfaaa ==nil {return nil ,nil ;};if _eaga !=XObjectTypeForm {return nil ,_cc .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_bfdcf ,_abacg :=NewXObjectFormFromStream (_gfaaa );if _abacg !=nil {return nil ,_abacg ;};return _bfdcf ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func (_bfcfa *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bfcfa ._ffab };

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_dced DefaultImageHandler )Read (reader _eda .Reader )(*Image ,error ){_gggfga ,_ ,_dade :=_fe .Decode (reader );if _dade !=nil {_bc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_dade );
return nil ,_dade ;};return _dced .NewImageFromGoImage (_gggfga );};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_gdafbf *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_fcbfa *PdfSignature ,_cfgba Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_gbge *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_egcdb *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_dfdgb *PdfSignature ,_bddag Hasher )error ;};func _gbae (_aaeg *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_aaeg }};

// ToPdfObject implements interface PdfModel.
func (_cbgb *PdfAnnotationPolyLine )ToPdfObject ()_cg .PdfObject {_cbgb .PdfAnnotation .ToPdfObject ();_aedf :=_cbgb ._bgf ;_eae :=_aedf .PdfObject .(*_cg .PdfObjectDictionary );_cbgb .PdfAnnotationMarkup .appendToPdfDictionary (_eae );_eae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_eae .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cbgb .Vertices );_eae .SetIfNotNil ("\u004c\u0045",_cbgb .LE );_eae .SetIfNotNil ("\u0042\u0053",_cbgb .BS );_eae .SetIfNotNil ("\u0049\u0043",_cbgb .IC );_eae .SetIfNotNil ("\u0042\u0045",_cbgb .BE );
_eae .SetIfNotNil ("\u0049\u0054",_cbgb .IT );_eae .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbgb .Measure );return _aedf ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_cgfda *PdfFont )BytesToCharcodes (data []byte )[]_ad .CharCode {_bc .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _gdaa ,_cdga :=_cgfda ._dfaba .(*pdfFontType0 );_cdga &&_gdaa ._fade !=nil {if _fffga ,_aagbf :=_gdaa .bytesToCharcodes (data );_aagbf {return _fffga ;};};_dggg :=make ([]_ad .CharCode ,0,len (data )+len (data )%2);if _cgfda .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _eegac :=0;_eegac < len (data );_eegac +=2{_acagf :=uint16 (data [_eegac ])<<8|uint16 (data [_eegac +1]);_dggg =append (_dggg ,_ad .CharCode (_acagf ));};}else {for _ ,_beeba :=range data {_dggg =append (_dggg ,_ad .CharCode (_beeba ));
};};return _dggg ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_fagg *PdfPageResources )GetColorspaceByName (keyName _cg .PdfObjectName )(PdfColorspace ,bool ){_edfbf ,_aaeca :=_fagg .GetColorspaces ();if _aaeca !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_aaeca );
return nil ,false ;};if _edfbf ==nil {return nil ,false ;};_dabd ,_ecbae :=_edfbf .Colorspaces [string (keyName )];if !_ecbae {return nil ,false ;};return _dabd ,true ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ccdc :=&PdfColorspaceCalGray {};_ccdc .BlackPoint =[]float64 {0.0,0.0,0.0};_ccdc .Gamma =1;return _ccdc ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cbfg *PdfPage )Duplicate ()*PdfPage {_edcd :=*_cbfg ;_edcd ._egge =_cg .MakeDict ();_edcd ._afeaa =_cg .MakeIndirectObject (_edcd ._egge );return &_edcd ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_cefc *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _cefc .Range };func (_fef *PdfReader )newPdfAnnotationFromIndirectObject (_baec *_cg .PdfIndirectObject )(*PdfAnnotation ,error ){_bcga ,_cdg :=_baec .PdfObject .(*_cg .PdfObjectDictionary );
if !_cdg {return nil ,_f .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fef ._ecgd .GetModelFromPrimitive (_bcga );model !=nil {_afg ,_ddc :=model .(*PdfAnnotation );if !_ddc {return nil ,_f .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _afg ,nil ;};_eabb :=&PdfAnnotation {};_eabb ._bgf =_baec ;_fef ._ecgd .Register (_bcga ,_eabb );if _bgc :=_bcga .Get ("\u0054\u0079\u0070\u0065");_bgc !=nil {_dca ,_ggbg :=_bgc .(*_cg .PdfObjectName );if !_ggbg {_bc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bgc );
}else {if *_dca !="\u0041\u006e\u006eo\u0074"{_bc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dca );};};};if _cbeb :=_bcga .Get ("\u0052\u0065\u0063\u0074");
_cbeb !=nil {_eabb .Rect =_cbeb ;};if _bce :=_bcga .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bce !=nil {_eabb .Contents =_bce ;};if _dcge :=_bcga .Get ("\u0050");_dcge !=nil {_eabb .P =_dcge ;};if _eedb :=_bcga .Get ("\u004e\u004d");_eedb !=nil {_eabb .NM =_eedb ;
};if _aacf :=_bcga .Get ("\u004d");_aacf !=nil {_eabb .M =_aacf ;};if _gfg :=_bcga .Get ("\u0046");_gfg !=nil {_eabb .F =_gfg ;};if _baf :=_bcga .Get ("\u0041\u0050");_baf !=nil {_eabb .AP =_baf ;};if _bgcb :=_bcga .Get ("\u0041\u0053");_bgcb !=nil {_eabb .AS =_bgcb ;
};if _ceg :=_bcga .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_ceg !=nil {_eabb .Border =_ceg ;};if _dfde :=_bcga .Get ("\u0043");_dfde !=nil {_eabb .C =_dfde ;};if _gdca :=_bcga .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gdca !=nil {_eabb .StructParent =_gdca ;};if _dcac :=_bcga .Get ("\u004f\u0043");_dcac !=nil {_eabb .OC =_dcac ;};_abfb :=_bcga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _abfb ==nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_eabb ._dfc =nil ;return _eabb ,nil ;};_bee ,_dbgb :=_abfb .(*_cg .PdfObjectName );if !_dbgb {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_abfb );
return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_abfb );};switch *_bee {case "\u0054\u0065\u0078\u0074":_bde ,_bcf :=_fef .newPdfAnnotationTextFromDict (_bcga );
if _bcf !=nil {return nil ,_bcf ;};_bde .PdfAnnotation =_eabb ;_eabb ._dfc =_bde ;return _eabb ,nil ;case "\u004c\u0069\u006e\u006b":_beb ,_gfdc :=_fef .newPdfAnnotationLinkFromDict (_bcga );if _gfdc !=nil {return nil ,_gfdc ;};_beb .PdfAnnotation =_eabb ;
_eabb ._dfc =_beb ;return _eabb ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_agf ,_dcbb :=_fef .newPdfAnnotationFreeTextFromDict (_bcga );if _dcbb !=nil {return nil ,_dcbb ;};_agf .PdfAnnotation =_eabb ;_eabb ._dfc =_agf ;return _eabb ,nil ;
case "\u004c\u0069\u006e\u0065":_agfe ,_edc :=_fef .newPdfAnnotationLineFromDict (_bcga );if _edc !=nil {return nil ,_edc ;};_agfe .PdfAnnotation =_eabb ;_eabb ._dfc =_agfe ;_bc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_eabb ,_eabb );
_bc .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_agfe ,_agfe );_bc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_agfe .PdfAnnotationMarkup ,_agfe .PdfAnnotationMarkup );
return _eabb ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bcgb ,_cdd :=_fef .newPdfAnnotationSquareFromDict (_bcga );if _cdd !=nil {return nil ,_cdd ;};_bcgb .PdfAnnotation =_eabb ;_eabb ._dfc =_bcgb ;return _eabb ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_gcgc ,_afe :=_fef .newPdfAnnotationCircleFromDict (_bcga );
if _afe !=nil {return nil ,_afe ;};_gcgc .PdfAnnotation =_eabb ;_eabb ._dfc =_gcgc ;return _eabb ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ead ,_aafa :=_fef .newPdfAnnotationPolygonFromDict (_bcga );if _aafa !=nil {return nil ,_aafa ;};_ead .PdfAnnotation =_eabb ;
_eabb ._dfc =_ead ;return _eabb ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fgg ,_ebdd :=_fef .newPdfAnnotationPolyLineFromDict (_bcga );if _ebdd !=nil {return nil ,_ebdd ;};_fgg .PdfAnnotation =_eabb ;_eabb ._dfc =_fgg ;return _eabb ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ffe ,_ded :=_fef .newPdfAnnotationHighlightFromDict (_bcga );if _ded !=nil {return nil ,_ded ;};_ffe .PdfAnnotation =_eabb ;_eabb ._dfc =_ffe ;return _eabb ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gcgg ,_agae :=_fef .newPdfAnnotationUnderlineFromDict (_bcga );
if _agae !=nil {return nil ,_agae ;};_gcgg .PdfAnnotation =_eabb ;_eabb ._dfc =_gcgg ;return _eabb ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_ggg ,_cga :=_fef .newPdfAnnotationSquigglyFromDict (_bcga );if _cga !=nil {return nil ,_cga ;
};_ggg .PdfAnnotation =_eabb ;_eabb ._dfc =_ggg ;return _eabb ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_abbab ,_efc :=_fef .newPdfAnnotationStrikeOut (_bcga );if _efc !=nil {return nil ,_efc ;};_abbab .PdfAnnotation =_eabb ;_eabb ._dfc =_abbab ;
return _eabb ,nil ;case "\u0043\u0061\u0072e\u0074":_befb ,_cbeg :=_fef .newPdfAnnotationCaretFromDict (_bcga );if _cbeg !=nil {return nil ,_cbeg ;};_befb .PdfAnnotation =_eabb ;_eabb ._dfc =_befb ;return _eabb ,nil ;case "\u0053\u0074\u0061m\u0070":_edec ,_fbf :=_fef .newPdfAnnotationStampFromDict (_bcga );
if _fbf !=nil {return nil ,_fbf ;};_edec .PdfAnnotation =_eabb ;_eabb ._dfc =_edec ;return _eabb ,nil ;case "\u0049\u006e\u006b":_aecg ,_cfee :=_fef .newPdfAnnotationInkFromDict (_bcga );if _cfee !=nil {return nil ,_cfee ;};_aecg .PdfAnnotation =_eabb ;
_eabb ._dfc =_aecg ;return _eabb ,nil ;case "\u0050\u006f\u0070u\u0070":_cggc ,_acd :=_fef .newPdfAnnotationPopupFromDict (_bcga );if _acd !=nil {return nil ,_acd ;};_cggc .PdfAnnotation =_eabb ;_eabb ._dfc =_cggc ;return _eabb ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_eebc ,_ccad :=_fef .newPdfAnnotationFileAttachmentFromDict (_bcga );
if _ccad !=nil {return nil ,_ccad ;};_eebc .PdfAnnotation =_eabb ;_eabb ._dfc =_eebc ;return _eabb ,nil ;case "\u0053\u006f\u0075n\u0064":_fad ,_ddgc :=_fef .newPdfAnnotationSoundFromDict (_bcga );if _ddgc !=nil {return nil ,_ddgc ;};_fad .PdfAnnotation =_eabb ;
_eabb ._dfc =_fad ;return _eabb ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gfae ,_dbf :=_fef .newPdfAnnotationRichMediaFromDict (_bcga );if _dbf !=nil {return nil ,_dbf ;};_gfae .PdfAnnotation =_eabb ;_eabb ._dfc =_gfae ;return _eabb ,nil ;
case "\u004d\u006f\u0076i\u0065":_cce ,_cddf :=_fef .newPdfAnnotationMovieFromDict (_bcga );if _cddf !=nil {return nil ,_cddf ;};_cce .PdfAnnotation =_eabb ;_eabb ._dfc =_cce ;return _eabb ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bfee ,_dfg :=_fef .newPdfAnnotationScreenFromDict (_bcga );
if _dfg !=nil {return nil ,_dfg ;};_bfee .PdfAnnotation =_eabb ;_eabb ._dfc =_bfee ;return _eabb ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_ebfe ,_eaa :=_fef .newPdfAnnotationWidgetFromDict (_bcga );if _eaa !=nil {return nil ,_eaa ;};_ebfe .PdfAnnotation =_eabb ;
_eabb ._dfc =_ebfe ;return _eabb ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gfdf ,_bfc :=_fef .newPdfAnnotationPrinterMarkFromDict (_bcga );if _bfc !=nil {return nil ,_bfc ;};_gfdf .PdfAnnotation =_eabb ;_eabb ._dfc =_gfdf ;
return _eabb ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_dbcb ,_beg :=_fef .newPdfAnnotationTrapNetFromDict (_bcga );if _beg !=nil {return nil ,_beg ;};_dbcb .PdfAnnotation =_eabb ;_eabb ._dfc =_dbcb ;return _eabb ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_abe ,_ebe :=_fef .newPdfAnnotationWatermarkFromDict (_bcga );
if _ebe !=nil {return nil ,_ebe ;};_abe .PdfAnnotation =_eabb ;_eabb ._dfc =_abe ;return _eabb ,nil ;case "\u0033\u0044":_afb ,_gbgb :=_fef .newPdfAnnotation3DFromDict (_bcga );if _gbgb !=nil {return nil ,_gbgb ;};_afb .PdfAnnotation =_eabb ;_eabb ._dfc =_afb ;
return _eabb ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_gdcaa ,_ega :=_fef .newPdfAnnotationProjectionFromDict (_bcga );if _ega !=nil {return nil ,_ega ;};_gdcaa .PdfAnnotation =_eabb ;_eabb ._dfc =_gdcaa ;return _eabb ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_bgg ,_fcd :=_fef .newPdfAnnotationRedactFromDict (_bcga );if _fcd !=nil {return nil ,_fcd ;};_bgg .PdfAnnotation =_eabb ;_eabb ._dfc =_bgg ;return _eabb ,nil ;};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_bee );
return nil ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_eced *OutlineItem )Add (item *OutlineItem ){_eced .Entries =append (_eced .Entries ,item )};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _cg .PdfObject ;MK _cg .PdfObject ;A _cg .PdfObject ;AA _cg .PdfObject ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_egae *PdfField )IsTerminal ()bool {return len (_egae .Kids )==0};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gfd :=NewPdfAction ();_ccd :=&PdfActionJavaScript {};_ccd .PdfAction =_gfd ;_gfd .SetContext (_ccd );return _ccd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdega *PdfShadingType2 )ToPdfObject ()_cg .PdfObject {_fdega .PdfShading .ToPdfObject ();_fdefg ,_caabf :=_fdega .getShadingDict ();if _caabf !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdefg ==nil {_bc .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _fdega .Coords !=nil {_fdefg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fdega .Coords );
};if _fdega .Domain !=nil {_fdefg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fdega .Domain );};if _fdega .Function !=nil {if len (_fdega .Function )==1{_fdefg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdega .Function [0].ToPdfObject ());
}else {_cfbde :=_cg .MakeArray ();for _ ,_babab :=range _fdega .Function {_cfbde .Append (_babab .ToPdfObject ());};_fdefg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfbde );};};if _fdega .Extend !=nil {_fdefg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fdega .Extend );
};return _fdega ._cagea ;};

// String returns a string that describes `base`.
func (_cgba fontCommon )String ()string {return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_cgba .coreString ());};

// ToPdfObject converts date to a PDF string object.
func (_cafcd *PdfDate )ToPdfObject ()_cg .PdfObject {_bbbagc :=_f .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_cafcd ._bedd ,_cafcd ._bdebg ,_cafcd ._dcce ,_cafcd ._afbab ,_cafcd ._cagfd ,_cafcd ._cecfc ,_cafcd ._fdffgb ,_cafcd ._gcgddc ,_cafcd ._edcgb );
return _cg .MakeString (_bbbagc );};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_adad *PdfPage )Size ()(float64 ,float64 ,error ){_bfdgf ,_deffb :=_adad .GetMediaBox ();if _deffb !=nil {return 0,0,_deffb ;};_faffa ,_dcacc :=_bfdgf .Width (),_bfdgf .Height ();_ccfaa ,_deffb :=_adad .GetRotate ();if _deffb !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_deffb .Error ());
};if _bbbfc :=_ccfaa ;_bbbfc %360!=0&&_bbbfc %90==0{if _ddbfb :=(360+_bbbfc %360)%360;_ddbfb ==90||_ddbfb ==270{_faffa ,_dcacc =_dcacc ,_faffa ;};};return _faffa ,_dcacc ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdef *PdfShadingType1 )ToPdfObject ()_cg .PdfObject {_cdef .PdfShading .ToPdfObject ();_dbdcf ,_dfggg :=_cdef .getShadingDict ();if _dfggg !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cdef .Domain !=nil {_dbdcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cdef .Domain );};if _cdef .Matrix !=nil {_dbdcf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cdef .Matrix );};if _cdef .Function !=nil {if len (_cdef .Function )==1{_dbdcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdef .Function [0].ToPdfObject ());
}else {_dcgg :=_cg .MakeArray ();for _ ,_ggacc :=range _cdef .Function {_dcgg .Append (_ggacc .ToPdfObject ());};_dbdcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcgg );};};return _cdef ._cagea ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_eccdg *PdfReader )GetPageLabels ()(_cg .PdfObject ,error ){_agfc :=_cg .ResolveReference (_eccdg ._egdgf .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _agfc ==nil {return nil ,nil ;};if !_eccdg ._ebebf {_gebf :=_eccdg .traverseObjectData (_agfc );
if _gebf !=nil {return nil ,_gebf ;};};return _agfc ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bagcf pdfCIDFontType2 )GetRuneMetrics (r rune )(_af .CharMetrics ,bool ){_fcdc ,_cdfda :=_bagcf ._ddcd [r ];if !_cdfda {_geadd ,_dffb :=_cg .GetInt (_bagcf .DW );if !_dffb {return _af .CharMetrics {},false ;};_fcdc =int (*_geadd );};return _af .CharMetrics {Wx :float64 (_fcdc )},true ;
};func (_ffddf *pdfFontSimple )getFontEncoding ()(_aegb string ,_gadaf map[_ad .CharCode ]_ad .GlyphName ,_efbfc error ){_aegb ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _aceg ,_gfafd :=_fage [_ffddf ._gbfc ];
_gfafd {_aegb =_aceg ;}else if _ffddf .fontFlags ()&_dbcdc !=0{for _dage ,_aggd :=range _fage {if _eaf .Contains (_ffddf ._gbfc ,_dage ){_aegb =_aggd ;break ;};};};if _ffddf .Encoding ==nil {return _aegb ,nil ,nil ;};switch _abca :=_ffddf .Encoding .(type ){case *_cg .PdfObjectName :return string (*_abca ),nil ,nil ;
case *_cg .PdfObjectDictionary :_bcegd ,_adac :=_cg .GetName (_abca .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _adac {_aegb =_bcegd .String ();};if _bdgdg :=_abca .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_bdgdg !=nil {_fcfff ,_dgffc :=_cg .GetArray (_bdgdg );if !_dgffc {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_abca ,_abca .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_cg .ErrTypeError ;};_gadaf ,_efbfc =_ad .FromFontDifferences (_fcfff );};return _aegb ,_gadaf ,_efbfc ;default:_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ffddf .Encoding ,_ffddf .Encoding );
return "",nil ,_cg .ErrTypeError ;};};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _cg .PdfObject ;FontFamily _cg .PdfObject ;FontStretch _cg .PdfObject ;FontWeight _cg .PdfObject ;Flags _cg .PdfObject ;FontBBox _cg .PdfObject ;ItalicAngle _cg .PdfObject ;Ascent _cg .PdfObject ;Descent _cg .PdfObject ;
Leading _cg .PdfObject ;CapHeight _cg .PdfObject ;XHeight _cg .PdfObject ;StemV _cg .PdfObject ;StemH _cg .PdfObject ;AvgWidth _cg .PdfObject ;MaxWidth _cg .PdfObject ;MissingWidth _cg .PdfObject ;FontFile _cg .PdfObject ;FontFile2 _cg .PdfObject ;FontFile3 _cg .PdfObject ;
CharSet _cg .PdfObject ;_bcag int ;_fdag float64 ;*fontFile ;_gafg *_af .TtfType ;

// Additional entries for CIDFonts
Style _cg .PdfObject ;Lang _cg .PdfObject ;FD _cg .PdfObject ;CIDSet _cg .PdfObject ;_dggae *_cg .PdfIndirectObject ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_cg .PdfObjectArray ;ExtGState _cg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gece *PdfAnnotationFreeText )ToPdfObject ()_cg .PdfObject {_gece .PdfAnnotation .ToPdfObject ();_ccfa :=_gece ._bgf ;_bag :=_ccfa .PdfObject .(*_cg .PdfObjectDictionary );_gece .PdfAnnotationMarkup .appendToPdfDictionary (_bag );_bag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_bag .SetIfNotNil ("\u0044\u0041",_gece .DA );_bag .SetIfNotNil ("\u0051",_gece .Q );_bag .SetIfNotNil ("\u0052\u0043",_gece .RC );_bag .SetIfNotNil ("\u0044\u0053",_gece .DS );_bag .SetIfNotNil ("\u0043\u004c",_gece .CL );_bag .SetIfNotNil ("\u0049\u0054",_gece .IT );
_bag .SetIfNotNil ("\u0042\u0045",_gece .BE );_bag .SetIfNotNil ("\u0052\u0044",_gece .RD );_bag .SetIfNotNil ("\u0042\u0053",_gece .BS );_bag .SetIfNotNil ("\u004c\u0045",_gece .LE );return _ccfa ;};func _ebcd (_deabe string )(string ,error ){var _cegg _cd .Buffer ;
_cegg .WriteString (_deabe );_ccbad :=make ([]byte ,8+16);_dddd :=_a .Now ().UTC ().UnixNano ();_ed .BigEndian .PutUint64 (_ccbad ,uint64 (_dddd ));_ ,_bggbf :=_ca .Read (_ccbad [8:]);if _bggbf !=nil {return "",_bggbf ;};_cegg .WriteString (_g .EncodeToString (_ccbad ));
return _cegg .String (),nil ;};func _caaeg (_baefb map[_af .GID ]int ,_agagd uint16 )*_cg .PdfObjectArray {_aeefe :=&_cg .PdfObjectArray {};_geagg :=_af .GID (_agagd );for _degfb :=_af .GID (0);_degfb < _geagg ;{_dagg ,_bgcfc :=_baefb [_degfb ];if !_bgcfc {_degfb ++;
continue ;};_efdc :=_degfb ;for _cbfba :=_efdc +1;_cbfba < _geagg ;_cbfba ++{if _adcbg ,_bgeae :=_baefb [_cbfba ];!_bgeae ||_dagg !=_adcbg {break ;};_efdc =_cbfba ;};_aeefe .Append (_cg .MakeInteger (int64 (_degfb )));_aeefe .Append (_cg .MakeInteger (int64 (_efdc )));
_aeefe .Append (_cg .MakeInteger (int64 (_dagg )));_degfb =_efdc +1;};return _aeefe ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_acfc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbdf :=vals [0];if _fbdf < 0.0||_fbdf > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fbdf );
return nil ,ErrColorOutOfRange ;};_caad :=vals [1];if _caad < 0.0||_caad > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_caad );return nil ,ErrColorOutOfRange ;
};_ecce :=vals [2];if _ecce < 0.0||_ecce > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecce );return nil ,ErrColorOutOfRange ;};_bafe :=NewPdfColorCalRGB (_fbdf ,_caad ,_ecce );
return _bafe ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func _adaa (_debaf []byte )(_caaeb ,_dgdc string ,_gdcef error ){_bc .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_debaf ));
_bfaega :=_dccfa .FindIndex (_debaf );if _bfaega ==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_cg .ErrTypeError ;};_gcecb :=_bfaega [1];_eddd :=_eaf .Index (string (_debaf [_gcecb :]),_ceaec );if _eddd < 0{_caaeb =string (_debaf [_gcecb :]);return _caaeb ,"",nil ;};_eefb :=_gcecb +_eddd ;_caaeb =string (_debaf [_gcecb :_eefb ]);_faffc :=_eefb ;
_eddd =_eaf .Index (string (_debaf [_faffc :]),_fbdef );if _eddd < 0{_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdcef );
return "","",_cg .ErrTypeError ;};_bgec :=_faffc +_eddd ;_dgdc =string (_debaf [_faffc :_bgec ]);return _caaeb ,_dgdc ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_ccdgd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_ccdgd ._fabdb =colorspace ;};func (_egb *PdfReader )newPdfActionThreadFromDict (_fba *_cg .PdfObjectDictionary )(*PdfActionThread ,error ){_agdcf ,_abbc :=_acf (_fba .Get ("\u0046"));
if _abbc !=nil {return nil ,_abbc ;};return &PdfActionThread {D :_fba .Get ("\u0044"),B :_fba .Get ("\u0042"),F :_agdcf },nil ;};

// ToPdfObject implements interface PdfModel.
func (_feab *PdfAnnotationSquiggly )ToPdfObject ()_cg .PdfObject {_feab .PdfAnnotation .ToPdfObject ();_cgaa :=_feab ._bgf ;_bdg :=_cgaa .PdfObject .(*_cg .PdfObjectDictionary );_feab .PdfAnnotationMarkup .appendToPdfDictionary (_bdg );_bdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_bdg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_feab .QuadPoints );return _cgaa ;};func (_ecdb *PdfReader )newPdfAnnotationStampFromDict (_adg *_cg .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_debg :=PdfAnnotationStamp {};
_fffd ,_bcbd :=_ecdb .newPdfAnnotationMarkupFromDict (_adg );if _bcbd !=nil {return nil ,_bcbd ;};_debg .PdfAnnotationMarkup =_fffd ;_debg .Name =_adg .Get ("\u004e\u0061\u006d\u0065");return &_debg ,nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// GetOutlineTree returns the outline tree.
func (_dbgdf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _dbgdf ._ccdbb };

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_gdfffe *PdfReader )Inspect ()(map[string ]int ,error ){return _gdfffe ._adfcb .Inspect ()};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dadg *PdfColorspaceCalRGB )ToPdfObject ()_cg .PdfObject {_ecfa :=&_cg .PdfObjectArray {};_ecfa .Append (_cg .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_bdaa :=_cg .MakeDict ();if _dadg .WhitePoint !=nil {_bega :=_cg .MakeArray (_cg .MakeFloat (_dadg .WhitePoint [0]),_cg .MakeFloat (_dadg .WhitePoint [1]),_cg .MakeFloat (_dadg .WhitePoint [2]));
_bdaa .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bega );}else {_bc .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _dadg .BlackPoint !=nil {_eafb :=_cg .MakeArray (_cg .MakeFloat (_dadg .BlackPoint [0]),_cg .MakeFloat (_dadg .BlackPoint [1]),_cg .MakeFloat (_dadg .BlackPoint [2]));_bdaa .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_eafb );
};if _dadg .Gamma !=nil {_dgg :=_cg .MakeArray (_cg .MakeFloat (_dadg .Gamma [0]),_cg .MakeFloat (_dadg .Gamma [1]),_cg .MakeFloat (_dadg .Gamma [2]));_bdaa .Set ("\u0047\u0061\u006dm\u0061",_dgg );};if _dadg .Matrix !=nil {_bffbd :=_cg .MakeArray (_cg .MakeFloat (_dadg .Matrix [0]),_cg .MakeFloat (_dadg .Matrix [1]),_cg .MakeFloat (_dadg .Matrix [2]),_cg .MakeFloat (_dadg .Matrix [3]),_cg .MakeFloat (_dadg .Matrix [4]),_cg .MakeFloat (_dadg .Matrix [5]),_cg .MakeFloat (_dadg .Matrix [6]),_cg .MakeFloat (_dadg .Matrix [7]),_cg .MakeFloat (_dadg .Matrix [8]));
_bdaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bffbd );};_ecfa .Append (_bdaa );if _dadg ._fdec !=nil {_dadg ._fdec .PdfObject =_ecfa ;return _dadg ._fdec ;};return _ecfa ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _cg .PdfObject )(_cg .PdfObjectName ,error ){var _dec *_cg .PdfObjectName ;var _beecb *_cg .PdfObjectArray ;if _abbac ,_fgcb :=obj .(*_cg .PdfIndirectObject );_fgcb {if _ggae ,_gfde :=_abbac .PdfObject .(*_cg .PdfObjectArray );
_gfde {_beecb =_ggae ;}else if _bbdf ,_edb :=_abbac .PdfObject .(*_cg .PdfObjectName );_edb {_dec =_bbdf ;};}else if _efff ,_aaed :=obj .(*_cg .PdfObjectArray );_aaed {_beecb =_efff ;}else if _cgdb ,_cgff :=obj .(*_cg .PdfObjectName );_cgff {_dec =_cgdb ;
};if _dec !=nil {switch *_dec {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_dec ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_dec ,nil ;
};};if _beecb !=nil &&_beecb .Len ()> 0{if _agff ,_gffg :=_beecb .Get (0).(*_cg .PdfObjectName );_gffg {switch *_agff {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _beecb .Len ()==1{return *_agff ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_agff ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_agff ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_agff ,nil ;};};};return "",nil ;};

// Write writes out the PDF.
func (_dfeda *PdfWriter )Write (writer _eda .Writer )error {_bc .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ddgdb :=_dfeda .checkLicense ();if _ddgdb !=nil {return _ddgdb ;};if _ddgdb =_dfeda .writeOutlines ();_ddgdb !=nil {return _ddgdb ;};
if _ddgdb =_dfeda .writeAcroFormFields ();_ddgdb !=nil {return _ddgdb ;};_dfeda .checkPendingObjects ();if _ddgdb =_dfeda .writeOutputIntents ();_ddgdb !=nil {return _ddgdb ;};_dfeda .setCatalogVersion ();_dfeda .copyObjects ();if _ddgdb =_dfeda .optimize ();
_ddgdb !=nil {return _ddgdb ;};if _ddgdb =_dfeda .optimizeDocument ();_ddgdb !=nil {return _ddgdb ;};var _bbadd _bf .Hash ;if _dfeda ._abecd {_bbadd =_eba .New ();writer =_eda .MultiWriter (_bbadd ,writer );};_dfeda .setWriter (writer );_cdbf :=_dfeda .checkCrossReferenceStream ();
_dbacd ,_cdbf :=_dfeda .mapObjectStreams (_cdbf );_dfeda .adjustXRefAffectedVersion (_cdbf );_dfeda .writeDocumentVersion ();_dfeda .updateObjectNumbers ();_dfeda .writeObjects ();if _ddgdb =_dfeda .writeObjectsInStreams (_dbacd );_ddgdb !=nil {return _ddgdb ;
};_daebc :=_dfeda ._ebce ;var _ffdgf int ;for _abed :=range _dfeda ._eebbe {if _abed > _ffdgf {_ffdgf =_abed ;};};if _dfeda ._abecd {if _ddgdb =_dfeda .setHashIDs (_bbadd );_ddgdb !=nil {return _ddgdb ;};};if _cdbf {if _ddgdb =_dfeda .writeXRefStreams (_ffdgf ,_daebc );
_ddgdb !=nil {return _ddgdb ;};}else {_dfeda .writeTrailer (_ffdgf );};_dfeda .makeOffSetReference (_daebc );if _ddgdb =_dfeda .flushWriter ();_ddgdb !=nil {return _ddgdb ;};return nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bgfb :=PdfColorDeviceRGB {r ,g ,b };return &_bgfb ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _cg .PdfObject ;};func (_dfgd *Image )samplesAddPadding (_egec []uint32 )[]uint32 {_agecg :=_dg .BytesPerLine (int (_dfgd .Width ),int (_dfgd .BitsPerComponent ),_dfgd .ColorComponents )*(8/int (_dfgd .BitsPerComponent ));
_gfcb :=_agecg *int (_dfgd .Height );if len (_egec )==_gfcb {return _egec ;};_dgcaa :=make ([]uint32 ,_gfcb );_gace :=int (_dfgd .Width )*_dfgd .ColorComponents ;for _bcbg :=0;_bcbg < int (_dfgd .Height );_bcbg ++{_gcgdd :=_bcbg *int (_dfgd .Width );_cfcge :=_bcbg *_agecg ;
for _egab :=0;_egab < _gace ;_egab ++{_dgcaa [_cfcge +_egab ]=_egec [_gcgdd +_egab ];};};return _dgcaa ;};

// ToPdfObject returns the PDF representation of the function.
func (_eaed *PdfFunctionType0 )ToPdfObject ()_cg .PdfObject {if _eaed ._affge ==nil {_eaed ._affge =&_cg .PdfObjectStream {};};_bdcfc :=_cg .MakeDict ();_bdcfc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (0));
_dgaba :=&_cg .PdfObjectArray {};for _ ,_cfedg :=range _eaed .Domain {_dgaba .Append (_cg .MakeFloat (_cfedg ));};_bdcfc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgaba );_cbffg :=&_cg .PdfObjectArray {};for _ ,_befda :=range _eaed .Range {_cbffg .Append (_cg .MakeFloat (_befda ));
};_bdcfc .Set ("\u0052\u0061\u006eg\u0065",_cbffg );_fbdfe :=&_cg .PdfObjectArray {};for _ ,_gbaad :=range _eaed .Size {_fbdfe .Append (_cg .MakeInteger (int64 (_gbaad )));};_bdcfc .Set ("\u0053\u0069\u007a\u0065",_fbdfe );_bdcfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_cg .MakeInteger (int64 (_eaed .BitsPerSample )));
if _eaed .Order !=1{_bdcfc .Set ("\u004f\u0072\u0064e\u0072",_cg .MakeInteger (int64 (_eaed .Order )));};_bdcfc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_eaed ._bbfb ))));_eaed ._affge .Stream =_eaed ._bbfb ;_eaed ._affge .PdfObjectDictionary =_bdcfc ;
return _eaed ._affge ;};func _abgd (_baddd _af .StdFont )pdfFontSimple {_cfgf :=_baddd .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_dbba :"\u0054\u0079\u0070e\u0031",_gbfc :_baddd .Name ()},_eadbf :_baddd .GetMetricsTable (),_fbeeg :&PdfFontDescriptor {FontName :_cg .MakeName (string (_cfgf .Name )),FontFamily :_cg .MakeName (_cfgf .Family ),FontWeight :_cg .MakeFloat (float64 (_cfgf .Weight )),Flags :_cg .MakeInteger (int64 (_cfgf .Flags )),FontBBox :_cg .MakeArrayFromFloats (_cfgf .BBox [:]),ItalicAngle :_cg .MakeFloat (_cfgf .ItalicAngle ),Ascent :_cg .MakeFloat (_cfgf .Ascent ),Descent :_cg .MakeFloat (_cfgf .Descent ),CapHeight :_cg .MakeFloat (_cfgf .CapHeight ),XHeight :_cg .MakeFloat (_cfgf .XHeight ),StemV :_cg .MakeFloat (_cfgf .StemV ),StemH :_cg .MakeFloat (_cfgf .StemH )},_cfgg :_baddd .Encoder ()};
};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_egda *PdfPageResources )GetShadingByName (keyName _cg .PdfObjectName )(*PdfShading ,bool ){if _egda .Shading ==nil {return nil ,false ;};_gbfee ,_cccdf :=_cg .TraceToDirectObject (_egda .Shading ).(*_cg .PdfObjectDictionary );if !_cccdf {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egda .Shading );
return nil ,false ;};if _bcafa :=_gbfee .Get (keyName );_bcafa !=nil {_aaebc ,_gacea :=_bbfcf (_bcafa );if _gacea !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_gacea );
return nil ,false ;};return _aaebc ,true ;};return nil ,false ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dddb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ageg ,_agagc :=_cg .GetNumbersAsFloat (objects );
if _agagc !=nil {return nil ,_agagc ;};return _dddb .ColorFromFloats (_ageg );};

// ToPdfObject implements interface PdfModel.
func (_dccd *PdfAnnotationSound )ToPdfObject ()_cg .PdfObject {_dccd .PdfAnnotation .ToPdfObject ();_egbd :=_dccd ._bgf ;_bbda :=_egbd .PdfObject .(*_cg .PdfObjectDictionary );_dccd .PdfAnnotationMarkup .appendToPdfDictionary (_bbda );_bbda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u006f\u0075n\u0064"));
_bbda .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dccd .Sound );_bbda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dccd .Name );return _egbd ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// CustomKeys returns all custom info keys as list.
func (_dggaa *PdfInfo )CustomKeys ()[]string {if _dggaa ._baagc ==nil {return nil ;};_bfca :=make ([]string ,len (_dggaa ._baagc .Keys ()));for _ ,_gafe :=range _dggaa ._baagc .Keys (){_bfca =append (_bfca ,_gafe .String ());};return _bfca ;};

// C returns the value of the cyan component of the color.
func (_fdff *PdfColorDeviceCMYK )C ()float64 {return _fdff [0]};func (_fdac *DSS )addOCSPs (_gbdce [][]byte )([]*_cg .PdfObjectStream ,error ){return _fdac .add (&_fdac .OCSPs ,_fdac ._afaab ,_gbdce );};

// AllFields returns a flattened list of all fields in the form.
func (_ebbdc *PdfAcroForm )AllFields ()[]*PdfField {if _ebbdc ==nil {return nil ;};var _cdffc []*PdfField ;if _ebbdc .Fields !=nil {for _ ,_ecdaf :=range *_ebbdc .Fields {_cdffc =append (_cdffc ,_gabad (_ecdaf )...);};};return _cdffc ;};

// ToPdfObject implements model.PdfModel interface.
func (_ebffb *PdfOutputIntent )ToPdfObject ()_cg .PdfObject {if _ebffb ._cbgeg ==nil {_ebffb ._cbgeg =_cg .MakeDict ();};_cbaed :=_ebffb ._cbgeg ;if _ebffb .Type !=""{_cbaed .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName (_ebffb .Type ));};_cbaed .Set ("\u0053",_cg .MakeName (_ebffb .S .String ()));
if _ebffb .OutputCondition !=""{_cbaed .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_cg .MakeString (_ebffb .OutputCondition ));};_cbaed .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_cg .MakeString (_ebffb .OutputConditionIdentifier ));
_cbaed .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_cg .MakeString (_ebffb .RegistryName ));if _ebffb .Info !=""{_cbaed .Set ("\u0049\u006e\u0066\u006f",_cg .MakeString (_ebffb .Info ));};if len (_ebffb .DestOutputProfile )!=0{_bdgbd ,_fbbge :=_cg .MakeStream (_ebffb .DestOutputProfile ,_cg .NewFlateEncoder ());
if _fbbge !=nil {_bc .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fbbge );
};_bdgbd .PdfObjectDictionary .Set ("\u004e",_cg .MakeInteger (int64 (_ebffb .ColorComponents )));_edgcc :=make ([]float64 ,_ebffb .ColorComponents *2);for _cfcgf :=0;_cfcgf < _ebffb .ColorComponents *2;_cfcgf ++{_aaaf :=0.0;if _cfcgf %2!=0{_aaaf =1.0;
};_edgcc [_cfcgf ]=_aaaf ;};_bdgbd .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_cg .MakeArrayFromFloats (_edgcc ));_cbaed .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_bdgbd );};return _cbaed ;
};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_agadc *Image )ConvertToBinary ()error {if _agadc .ColorComponents ==1&&_agadc .BitsPerComponent ==1{return nil ;};_dgba ,_efcca :=_agadc .ToGoImage ();if _efcca !=nil {return _efcca ;};_daeba ,_efcca :=_dg .MonochromeConverter .Convert (_dgba );
if _efcca !=nil {return _efcca ;};_agadc .Data =_daeba .Base ().Data ;_agadc ._cfdb ,_efcca =_dg .ScaleAlphaToMonochrome (_agadc ._cfdb ,int (_agadc .Width ),int (_agadc .Height ));if _efcca !=nil {return _efcca ;};_agadc .BitsPerComponent =1;_agadc .ColorComponents =1;
_agadc ._abbba =nil ;return nil ;};func (_cbcgb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cbcgb .fontCommon };

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gedb :_cg .MakeIndirectObject (_cg .MakeDict ()),VRI :map[string ]*VRI {}};};

// GetNumPages returns the number of pages in the document.
func (_bgeafb *PdfReader )GetNumPages ()(int ,error ){if _bgeafb ._adfcb .GetCrypter ()!=nil &&!_bgeafb ._adfcb .IsAuthenticated (){return 0,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_bgeafb ._fdaee ),nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fbbga *PdfColorspaceLab )ToPdfObject ()_cg .PdfObject {_dfda :=_cg .MakeArray ();_dfda .Append (_cg .MakeName ("\u004c\u0061\u0062"));_aeaa :=_cg .MakeDict ();if _fbbga .WhitePoint !=nil {_adga :=_cg .MakeArray (_cg .MakeFloat (_fbbga .WhitePoint [0]),_cg .MakeFloat (_fbbga .WhitePoint [1]),_cg .MakeFloat (_fbbga .WhitePoint [2]));
_aeaa .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_adga );}else {_bc .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fbbga .BlackPoint !=nil {_aedae :=_cg .MakeArray (_cg .MakeFloat (_fbbga .BlackPoint [0]),_cg .MakeFloat (_fbbga .BlackPoint [1]),_cg .MakeFloat (_fbbga .BlackPoint [2]));_aeaa .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aedae );
};if _fbbga .Range !=nil {_abcb :=_cg .MakeArray (_cg .MakeFloat (_fbbga .Range [0]),_cg .MakeFloat (_fbbga .Range [1]),_cg .MakeFloat (_fbbga .Range [2]),_cg .MakeFloat (_fbbga .Range [3]));_aeaa .Set ("\u0052\u0061\u006eg\u0065",_abcb );};_dfda .Append (_aeaa );
if _fbbga ._dbef !=nil {_fbbga ._dbef .PdfObject =_dfda ;return _fbbga ._dbef ;};return _dfda ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_ffcc _cg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cbdg *PdfAnnotationRichMedia )ToPdfObject ()_cg .PdfObject {_cbdg .PdfAnnotation .ToPdfObject ();_ceda :=_cbdg ._bgf ;_dffdf :=_ceda .PdfObject .(*_cg .PdfObjectDictionary );_dffdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_dffdf .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_cbdg .RichMediaSettings );_dffdf .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_cbdg .RichMediaContent );
return _ceda ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _a .Time ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_debgg =modifiedDate ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_fcaa :=NewPdfAnnotation ();_bbge :=&PdfAnnotationPopup {};_bbge .PdfAnnotation =_fcaa ;_fcaa .SetContext (_bbge );return _bbge ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_gafgd *PdfReader )GetCatalogMetadata ()(_cg .PdfObject ,bool ){if _gafgd ._egdgf ==nil {return nil ,false ;};_cedfa :=_gafgd ._egdgf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _cedfa ,_cedfa !=nil ;};func (_aea *PdfReader )newPdfActionGotoFromDict (_cab *_cg .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_cab .Get ("\u0044")},nil ;
};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _cg .PdfObject ;};func (_gbgdf *PdfReader )newPdfAnnotationTextFromDict (_gea *_cg .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gad :=PdfAnnotationText {};_gdd ,_cabd :=_gbgdf .newPdfAnnotationMarkupFromDict (_gea );
if _cabd !=nil {return nil ,_cabd ;};_gad .PdfAnnotationMarkup =_gdd ;_gad .Open =_gea .Get ("\u004f\u0070\u0065\u006e");_gad .Name =_gea .Get ("\u004e\u0061\u006d\u0065");_gad .State =_gea .Get ("\u0053\u0074\u0061t\u0065");_gad .StateModel =_gea .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_gad ,nil ;};func (_cbcfe *PdfWriter )writeOutlines ()error {if _cbcfe ._acgc ==nil {return nil ;};_bc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cbcfe ._acgc );_fadf :=_cbcfe ._acgc .ToPdfObject ();
_bc .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fadf ,_fadf ,_fadf );_cbcfe ._feafc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fadf );
_ffbcd :=_cbcfe .addObjects (_fadf );if _ffbcd !=nil {return _ffbcd ;};return nil ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// SetDecode sets the decode image float slice.
func (_gdafg *Image )SetDecode (decode []float64 ){_gdafg ._abbba =decode };func _bbffc (_caga *XObjectImage )error {if _caga .SMask ==nil {return nil ;};_gefde ,_ccgfff :=_caga .SMask .(*_cg .PdfObjectStream );if !_ccgfff {_bc .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _cg .ErrTypeError ;};_cgaacb :=_gefde .PdfObjectDictionary ;_bgfga :=_cgaacb .Get ("\u004d\u0061\u0074t\u0065");if _bgfga ==nil {return nil ;};_gcac ,_fgfe :=_faabd (_bgfga .(*_cg .PdfObjectArray ));if _fgfe !=nil {return _fgfe ;};_fbedd :=_cg .MakeArrayFromFloats ([]float64 {_gcac });
_cgaacb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fbedd );return nil ;};

// SetAnnotations sets the annotations list.
func (_gfadb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gfadb ._abbce =annotations };

// GetContainingPdfObject implements interface PdfModel.
func (_eaegb *PdfSignature )GetContainingPdfObject ()_cg .PdfObject {return _eaegb ._dcfef };

// ToPdfObject implements interface PdfModel.
func (_gfag *PdfAnnotationWidget )ToPdfObject ()_cg .PdfObject {_gfag .PdfAnnotation .ToPdfObject ();_fccc :=_gfag ._bgf ;_gdee :=_fccc .PdfObject .(*_cg .PdfObjectDictionary );if _gfag ._fgbc {return _fccc ;};_gfag ._fgbc =true ;_gdee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_gdee .SetIfNotNil ("\u0048",_gfag .H );_gdee .SetIfNotNil ("\u004d\u004b",_gfag .MK );_gdee .SetIfNotNil ("\u0041",_gfag .A );_gdee .SetIfNotNil ("\u0041\u0041",_gfag .AA );_gdee .SetIfNotNil ("\u0042\u0053",_gfag .BS );_adgf :=_gfag .Parent ;if _gfag ._dad !=nil {if _gfag ._dad ._edge ==_gfag ._bgf {_gfag ._dad .ToPdfObject ();
};_adgf =_gfag ._dad .GetContainingPdfObject ();};if _adgf !=_fccc {_gdee .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_adgf );};_gfag ._fgbc =false ;return _fccc ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _a .Time ;};func (_bcef *PdfReader )newPdfAnnotationCaretFromDict (_aega *_cg .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_fffc :=PdfAnnotationCaret {};_cebf ,_cde :=_bcef .newPdfAnnotationMarkupFromDict (_aega );if _cde !=nil {return nil ,_cde ;
};_fffc .PdfAnnotationMarkup =_cebf ;_fffc .RD =_aega .Get ("\u0052\u0044");_fffc .Sy =_aega .Get ("\u0053\u0079");return &_fffc ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_ffebe *PdfAcroForm )GetContainingPdfObject ()_cg .PdfObject {return _ffebe ._ebbeg };

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _cg .StreamEncoder ;FormType _cg .PdfObject ;BBox _cg .PdfObject ;Matrix _cg .PdfObject ;Resources *PdfPageResources ;Group _cg .PdfObject ;Ref _cg .PdfObject ;MetaData _cg .PdfObject ;PieceInfo _cg .PdfObject ;LastModified _cg .PdfObject ;
StructParent _cg .PdfObject ;StructParents _cg .PdfObject ;OPI _cg .PdfObject ;OC _cg .PdfObject ;Name _cg .PdfObject ;

// Stream data.
Stream []byte ;_debbe *_cg .PdfObjectStream ;};func (_dbfe *PdfReader )newPdfAnnotationUnderlineFromDict (_cfdc *_cg .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_eabe :=PdfAnnotationUnderline {};_cbea ,_abee :=_dbfe .newPdfAnnotationMarkupFromDict (_cfdc );
if _abee !=nil {return nil ,_abee ;};_eabe .PdfAnnotationMarkup =_cbea ;_eabe .QuadPoints =_cfdc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eabe ,nil ;};var _dedb =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cdagd :=PdfColorLab {l ,a ,b };return &_cdagd };func (_bbdaa *pdfFontType0 )baseFields ()*fontCommon {return &_bbdaa .fontCommon };

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_aafeg *PdfField )ToPdfObject ()_cg .PdfObject {_eccec :=_aafeg ._edge ;_aafd :=_eccec .PdfObject .(*_cg .PdfObjectDictionary );_agcef :=_cg .MakeArray ();for _ ,_acb :=range _aafeg .Kids {_agcef .Append (_acb .ToPdfObject ());};for _ ,_cefcd :=range _aafeg .Annotations {if _cefcd ._bgf !=_aafeg ._edge {_agcef .Append (_cefcd .GetContext ().ToPdfObject ());
};};if _aafeg .Parent !=nil {_aafd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_aafeg .Parent .GetContainingPdfObject ());};if _agcef .Len ()> 0{_aafd .Set ("\u004b\u0069\u0064\u0073",_agcef );};_aafd .SetIfNotNil ("\u0046\u0054",_aafeg .FT );
_aafd .SetIfNotNil ("\u0054",_aafeg .T );_aafd .SetIfNotNil ("\u0054\u0055",_aafeg .TU );_aafd .SetIfNotNil ("\u0054\u004d",_aafeg .TM );_aafd .SetIfNotNil ("\u0046\u0066",_aafeg .Ff );_aafd .SetIfNotNil ("\u0056",_aafeg .V );_aafd .SetIfNotNil ("\u0044\u0056",_aafeg .DV );
_aafd .SetIfNotNil ("\u0041\u0041",_aafeg .AA );if _aafeg .VariableText !=nil {_aafd .SetIfNotNil ("\u0044\u0041",_aafeg .VariableText .DA );_aafd .SetIfNotNil ("\u0051",_aafeg .VariableText .Q );_aafd .SetIfNotNil ("\u0044\u0053",_aafeg .VariableText .DS );
_aafd .SetIfNotNil ("\u0052\u0056",_aafeg .VariableText .RV );};return _eccec ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_feegg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fgdage :=[]float64 {0.0};if _feegg .C0 !=nil {_fgdage =_feegg .C0 ;};_affee :=[]float64 {1.0};if _feegg .C1 !=nil {_affee =_feegg .C1 ;};var _faffe []float64 ;for _eada :=0;_eada < len (_fgdage );_eada ++{_acebgd :=_fgdage [_eada ]+_bb .Pow (x [0],_feegg .N )*(_affee [_eada ]-_fgdage [_eada ]);
_faffe =append (_faffe ,_acebgd );};return _faffe ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_cgdff *PdfPageResources )GetFontByName (keyName _cg .PdfObjectName )(_cg .PdfObject ,bool ){if _cgdff .Font ==nil {return nil ,false ;};_gdgde ,_dcfda :=_cg .TraceToDirectObject (_cgdff .Font ).(*_cg .PdfObjectDictionary );if !_dcfda {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cg .TraceToDirectObject (_cgdff .Font ));
return nil ,false ;};if _afeaaf :=_gdgde .Get (keyName );_afeaaf !=nil {return _afeaaf ,true ;};return nil ,false ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bdeb *PdfPage )AddContentStreamByString (contentStr string )error {_adceg ,_adbggf :=_cg .MakeStream ([]byte (contentStr ),_cg .NewFlateEncoder ());if _adbggf !=nil {return _adbggf ;};if _bdeb .Contents ==nil {_bdeb .Contents =_adceg ;}else {_ebaaf :=_cg .TraceToDirectObject (_bdeb .Contents );
_gedfc ,_edaee :=_ebaaf .(*_cg .PdfObjectArray );if !_edaee {_gedfc =_cg .MakeArray (_ebaaf );};_gedfc .Append (_adceg );_bdeb .Contents =_gedfc ;};return nil ;};func (_adccag fontCommon )fontFlags ()int {if _adccag ._ffab ==nil {return 0;};return _adccag ._ffab ._bcag ;
};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_fde :=NewPdfAction ();_gdf :=&PdfActionSetOCGState {};_gdf .PdfAction =_fde ;_fde .SetContext (_gdf );return _gdf ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_dfac :=&PdfPageResources {};_dfac ._eaada =_cg .MakeDict ();return _dfac ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_eee PdfModel ;Type _cg .PdfObject ;S _cg .PdfObject ;Next _cg .PdfObject ;_eab *_cg .PdfIndirectObject ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fgabed *PdfPageResourcesColorspaces )Set (key _cg .PdfObjectName ,val PdfColorspace ){if _ ,_bbbad :=_fgabed .Colorspaces [string (key )];!_bbbad {_fgabed .Names =append (_fgabed .Names ,string (key ));};_fgabed .Colorspaces [string (key )]=val ;
};var _fage =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_gbf :=&PdfAction {};_gbf ._eab =_cg .MakeIndirectObject (_cg .MakeDict ());return _gbf ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_caba *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgae ,_aggf :=_cg .GetNumbersAsFloat (objects );
if _aggf !=nil {return nil ,_aggf ;};return _caba .ColorFromFloats (_bgae );};func (_afa *PdfReader )newPdfAnnotationMarkupFromDict (_geg *_cg .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dbfa :=&PdfAnnotationMarkup {};if _dbgc :=_geg .Get ("\u0054");
_dbgc !=nil {_dbfa .T =_dbgc ;};if _aaa :=_geg .Get ("\u0050\u006f\u0070u\u0070");_aaa !=nil {_bda ,_dfe :=_aaa .(*_cg .PdfIndirectObject );if !_dfe {if _ ,_ggdc :=_aaa .(*_cg .PdfObjectNull );!_ggdc {return nil ,_cc .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_dcfg ,_fecg :=_afa .newPdfAnnotationFromIndirectObject (_bda );if _fecg !=nil {return nil ,_fecg ;};if _dcfg !=nil {_gef ,_abfd :=_dcfg ._dfc .(*PdfAnnotationPopup );if !_abfd {return nil ,_cc .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dbfa .Popup =_gef ;};};};if _cdfg :=_geg .Get ("\u0043\u0041");_cdfg !=nil {_dbfa .CA =_cdfg ;};if _bccg :=_geg .Get ("\u0052\u0043");_bccg !=nil {_dbfa .RC =_bccg ;};if _abd :=_geg .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_abd !=nil {_dbfa .CreationDate =_abd ;};if _adb :=_geg .Get ("\u0049\u0052\u0054");_adb !=nil {_dbfa .IRT =_adb ;};if _ddgce :=_geg .Get ("\u0053\u0075\u0062\u006a");_ddgce !=nil {_dbfa .Subj =_ddgce ;};if _fcc :=_geg .Get ("\u0052\u0054");_fcc !=nil {_dbfa .RT =_fcc ;
};if _cgf :=_geg .Get ("\u0049\u0054");_cgf !=nil {_dbfa .IT =_cgf ;};if _dffd :=_geg .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_dffd !=nil {_dbfa .ExData =_dffd ;};return _dbfa ,nil ;};func (_gbag *PdfReader )newPdfAnnotationPrinterMarkFromDict (_becf *_cg .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_fgaa :=PdfAnnotationPrinterMark {};
_fgaa .MN =_becf .Get ("\u004d\u004e");return &_fgaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgad *PdfActionGoTo )ToPdfObject ()_cg .PdfObject {_dgad .PdfAction .ToPdfObject ();_bbb :=_dgad ._eab ;_gda :=_bbb .PdfObject .(*_cg .PdfObjectDictionary );_gda .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoTo )));_gda .SetIfNotNil ("\u0044",_dgad .D );
return _bbb ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_ccdce *PdfFieldText )ToPdfObject ()_cg .PdfObject {_ccdce .PdfField .ToPdfObject ();_fabf :=_ccdce ._edge ;_afbfe :=_fabf .PdfObject .(*_cg .PdfObjectDictionary );_afbfe .Set ("\u0046\u0054",_cg .MakeName ("\u0054\u0078"));if _ccdce .DA !=nil {_afbfe .Set ("\u0044\u0041",_ccdce .DA );
};if _ccdce .Q !=nil {_afbfe .Set ("\u0051",_ccdce .Q );};if _ccdce .DS !=nil {_afbfe .Set ("\u0044\u0053",_ccdce .DS );};if _ccdce .RV !=nil {_afbfe .Set ("\u0052\u0056",_ccdce .RV );};if _ccdce .MaxLen !=nil {_afbfe .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_ccdce .MaxLen );
};return _fabf ;};func _acada (_dbgbe *_cg .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fggcgg :=PdfShadingType6 {};_aaeec :=_dbgbe .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aaeec ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_becca ,_bedce :=_aaeec .(*_cg .PdfObjectInteger );if !_bedce {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaeec );
return nil ,_cg .ErrTypeError ;};_fggcgg .BitsPerCoordinate =_becca ;_aaeec =_dbgbe .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aaeec ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_becca ,_bedce =_aaeec .(*_cg .PdfObjectInteger );if !_bedce {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aaeec );
return nil ,_cg .ErrTypeError ;};_fggcgg .BitsPerComponent =_becca ;_aaeec =_dbgbe .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aaeec ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_becca ,_bedce =_aaeec .(*_cg .PdfObjectInteger );if !_bedce {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aaeec );
return nil ,_cg .ErrTypeError ;};_fggcgg .BitsPerComponent =_becca ;_aaeec =_dbgbe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aaeec ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecbce ,_bedce :=_aaeec .(*_cg .PdfObjectArray );if !_bedce {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aaeec );
return nil ,_cg .ErrTypeError ;};_fggcgg .Decode =_ecbce ;if _eceeeb :=_dbgbe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eceeeb !=nil {_fggcgg .Function =[]PdfFunction {};if _aafbb ,_gbebd :=_eceeeb .(*_cg .PdfObjectArray );_gbebd {for _ ,_ddefa :=range _aafbb .Elements (){_cdfea ,_agbeg :=_ddccf (_ddefa );
if _agbeg !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agbeg );return nil ,_agbeg ;};_fggcgg .Function =append (_fggcgg .Function ,_cdfea );
};}else {_cgea ,_aefb :=_ddccf (_eceeeb );if _aefb !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aefb );return nil ,_aefb ;};
_fggcgg .Function =append (_fggcgg .Function ,_cgea );};};return &_fggcgg ,nil ;};func _dgeb (_fgaaca *_cg .PdfObjectStream )(*PdfFunctionType4 ,error ){_gacgg :=&PdfFunctionType4 {};_gacgg ._ebde =_fgaaca ;_bdf :=_fgaaca .PdfObjectDictionary ;_gdgc ,_fabd :=_cg .TraceToDirectObject (_bdf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );
if !_fabd {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gdgc .Len ()%2!=0{_bc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gcag ,_eabgc :=_gdgc .ToFloat64Array ();
if _eabgc !=nil {return nil ,_eabgc ;};_gacgg .Domain =_gcag ;_gdgc ,_fabd =_cg .TraceToDirectObject (_bdf .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );if _fabd {if _gdgc .Len ()< 0||_gdgc .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_edef ,_ggdcg :=_gdgc .ToFloat64Array ();if _ggdcg !=nil {return nil ,_ggdcg ;};_gacgg .Range =_edef ;};_gbeba ,_eabgc :=_cg .DecodeStream (_fgaaca );if _eabgc !=nil {return nil ,_eabgc ;};_gacgg ._bdcfa =_gbeba ;_bcea :=_edab .NewPSParser (_gbeba );
_bgggf ,_eabgc :=_bcea .Parse ();if _eabgc !=nil {return nil ,_eabgc ;};_gacgg .Program =_bgggf ;return _gacgg ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_dggd *PdfField )GetContext ()PdfModel {return _dggd ._bffcb };

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_gdffd *PdfPageResources )GetXObjectImageByName (keyName _cg .PdfObjectName )(*XObjectImage ,error ){_afdef ,_eccea :=_gdffd .GetXObjectByName (keyName );if _afdef ==nil {return nil ,nil ;};if _eccea !=XObjectTypeImage {return nil ,_cc .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_gfdd ,_ddabc :=NewXObjectImageFromStream (_afdef );if _ddabc !=nil {return nil ,_ddabc ;};return _gfdd ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_dcddb *Outline )ToPdfOutline ()*PdfOutline {_afec :=NewPdfOutline ();var _dcfcf []*PdfOutlineItem ;var _addg int64 ;var _ffffc *PdfOutlineItem ;for _ ,_efaea :=range _dcddb .Entries {_bbaded ,_eegad :=_efaea .ToPdfOutlineItem ();_bbaded .Parent =&_afec .PdfOutlineTreeNode ;
if _ffffc !=nil {_ffffc .Next =&_bbaded .PdfOutlineTreeNode ;_bbaded .Prev =&_ffffc .PdfOutlineTreeNode ;};_dcfcf =append (_dcfcf ,_bbaded );_addg +=_eegad ;_ffffc =_bbaded ;};_ffdcc :=int64 (len (_dcfcf ));_addg +=_ffdcc ;if _ffdcc > 0{_afec .First =&_dcfcf [0].PdfOutlineTreeNode ;
_afec .Last =&_dcfcf [_ffdcc -1].PdfOutlineTreeNode ;_afec .Count =&_addg ;};return _afec ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_acga *PdfColorspaceLab )DecodeArray ()[]float64 {_gfef :=[]float64 {0,100};if _acga .Range !=nil &&len (_acga .Range )==4{_gfef =append (_gfef ,_acga .Range ...);}else {_gfef =append (_gfef ,-100,100,-100,100);};return _gfef ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gcaa DefaultImageHandler )NewGrayImageFromGoImage (goimg _fe .Image )(*Image ,error ){_eegca :=goimg .Bounds ();_befde :=&Image {Width :int64 (_eegca .Dx ()),Height :int64 (_eegca .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fadbe :=goimg .(type ){case *_fe .Gray :if len (_fadbe .Pix )!=_eegca .Dx ()*_eegca .Dy (){_cbbeb ,_abeea :=_dg .GrayConverter .Convert (goimg );
if _abeea !=nil {return nil ,_abeea ;};_befde .Data =_cbbeb .Pix ();}else {_befde .Data =_fadbe .Pix ;};case *_fe .Gray16 :_befde .BitsPerComponent =16;if len (_fadbe .Pix )!=_eegca .Dx ()*_eegca .Dy ()*2{_eeaeb ,_ecffbg :=_dg .Gray16Converter .Convert (goimg );
if _ecffbg !=nil {return nil ,_ecffbg ;};_befde .Data =_eeaeb .Pix ();}else {_befde .Data =_fadbe .Pix ;};case _dg .Image :_dfeaa :=_fadbe .Base ();if _dfeaa .ColorComponents ==1{_befde .BitsPerComponent =int64 (_dfeaa .BitsPerComponent );_befde .Data =_dfeaa .Data ;
return _befde ,nil ;};_bgebca ,_fdgbb :=_dg .GrayConverter .Convert (goimg );if _fdgbb !=nil {return nil ,_fdgbb ;};_befde .Data =_bgebca .Pix ();default:_defcb ,_cgece :=_dg .GrayConverter .Convert (goimg );if _cgece !=nil {return nil ,_cgece ;};_befde .Data =_defcb .Pix ();
};return _befde ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);func _bbecc (_aafb _cg .PdfObject )(*PdfFunctionType2 ,error ){_gdgd :=&PdfFunctionType2 {};var _cgbca *_cg .PdfObjectDictionary ;if _cgbcc ,_caef :=_aafb .(*_cg .PdfIndirectObject );
_caef {_bbdfa ,_adegbe :=_cgbcc .PdfObject .(*_cg .PdfObjectDictionary );if !_adegbe {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdgd ._ffegf =_cgbcc ;_cgbca =_bbdfa ;}else if _eged ,_bgeag :=_aafb .(*_cg .PdfObjectDictionary );
_bgeag {_cgbca =_eged ;}else {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bc .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_cgbca .String ());_cdea ,_cfacg :=_cg .TraceToDirectObject (_cgbca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );
if !_cfacg {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cdea .Len ()< 0||_cdea .Len ()%2!=0{_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_degg ,_dbbgb :=_cdea .ToFloat64Array ();if _dbbgb !=nil {return nil ,_dbbgb ;};_gdgd .Domain =_degg ;_cdea ,_cfacg =_cg .TraceToDirectObject (_cgbca .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );if _cfacg {if _cdea .Len ()< 0||_cdea .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gebc ,_gcdf :=_cdea .ToFloat64Array ();if _gcdf !=nil {return nil ,_gcdf ;};_gdgd .Range =_gebc ;};_cdea ,_cfacg =_cg .TraceToDirectObject (_cgbca .Get ("\u0043\u0030")).(*_cg .PdfObjectArray );if _cfacg {_aggcg ,_cgdbf :=_cdea .ToFloat64Array ();if _cgdbf !=nil {return nil ,_cgdbf ;
};_gdgd .C0 =_aggcg ;};_cdea ,_cfacg =_cg .TraceToDirectObject (_cgbca .Get ("\u0043\u0031")).(*_cg .PdfObjectArray );if _cfacg {_faebd ,_eaeg :=_cdea .ToFloat64Array ();if _eaeg !=nil {return nil ,_eaeg ;};_gdgd .C1 =_faebd ;};if len (_gdgd .C0 )!=len (_gdgd .C1 ){_bc .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_cg .ErrRangeError ;};N ,_dbbgb :=_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_cgbca .Get ("\u004e")));if _dbbgb !=nil {_bc .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_cgbca .String ());
return nil ,_dbbgb ;};_gdgd .N =N ;return _gdgd ,nil ;};func (_cagec *PdfWriter )checkCrossReferenceStream ()bool {_gcedg :=_cagec ._baefbc .Major > 1||(_cagec ._baefbc .Major ==1&&_cagec ._baefbc .Minor > 4);if _cagec ._feega !=nil {_gcedg =*_cagec ._feega ;
};return _gcedg ;};

// WriteString outputs the object as it is to be written to file.
func (_dfegf *pdfSignDictionary )WriteString ()string {_dfegf ._daacb =0;_dfegf ._agcbd =0;_dfegf ._acadf =0;_dfegf ._fggce =0;_cafc :=_cd .NewBuffer (nil );_cafc .WriteString ("\u003c\u003c");for _ ,_ecad :=range _dfegf .Keys (){_ddee :=_dfegf .Get (_ecad );
switch _ecad {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cafc .WriteString (_ecad .WriteString ());_cafc .WriteString ("\u0020");_dfegf ._acadf =_cafc .Len ();_cafc .WriteString (_ddee .WriteString ());_cafc .WriteString ("\u0020");_dfegf ._fggce =_cafc .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cafc .WriteString (_ecad .WriteString ());_cafc .WriteString ("\u0020");_dfegf ._daacb =_cafc .Len ();_cafc .WriteString (_ddee .WriteString ());_cafc .WriteString ("\u0020");_dfegf ._agcbd =_cafc .Len ()-1;
default:_cafc .WriteString (_ecad .WriteString ());_cafc .WriteString ("\u0020");_cafc .WriteString (_ddee .WriteString ());};};_cafc .WriteString ("\u003e\u003e");return _cafc .String ();};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_cacg :=NewPdfAnnotation ();_dcfa :=&PdfAnnotationLink {};_dcfa .PdfAnnotation =_cacg ;_cacg .SetContext (_dcfa );return _dcfa ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fcffc *DSS )ToPdfObject ()_cg .PdfObject {_gabfe :=_fcffc ._gedb .PdfObject .(*_cg .PdfObjectDictionary );_gabfe .Clear ();_ecfag :=_cg .MakeDict ();for _afgcb ,_fddb :=range _fcffc .VRI {_ecfag .Set (*_cg .MakeName (_afgcb ),_fddb .ToPdfObject ());
};_gabfe .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_dfdga (_fcffc .Certs ));_gabfe .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_dfdga (_fcffc .OCSPs ));_gabfe .SetIfNotNil ("\u0043\u0052\u004c\u0073",_dfdga (_fcffc .CRLs ));_gabfe .Set ("\u0056\u0052\u0049",_ecfag );
return _fcffc ._gedb ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dgbb *PdfInfo )AddCustomInfo (name string ,value string )error {if _dgbb ._baagc ==nil {_dgbb ._baagc =_cg .MakeDict ();};if _ ,_cebdf :=_bbba [name ];_cebdf {return _f .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dgbb ._baagc .SetIfNotNil (*_cg .MakeName (name ),_cg .MakeString (value ));return nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ccc :=NewPdfAction ();_gaec :=&PdfActionGoTo3DView {};_gaec .PdfAction =_ccc ;_ccc .SetContext (_gaec );return _gaec ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_ecbc *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if _ecbc .Alternate ==nil {if _ecbc .N ==1{_dcfdc :=NewPdfColorspaceDeviceGray ();return _dcfdc .ColorFromPdfObjects (objects );}else if _ecbc .N ==3{_edfga :=NewPdfColorspaceDeviceRGB ();
return _edfga .ColorFromPdfObjects (objects );}else if _ecbc .N ==4{_ggcdf :=NewPdfColorspaceDeviceCMYK ();return _ggcdf .ColorFromPdfObjects (objects );}else {return nil ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ecbc .Alternate .ColorFromPdfObjects (objects );};func (_bbbac *DSS )addCRLs (_fggcb [][]byte )([]*_cg .PdfObjectStream ,error ){return _bbbac .add (&_bbbac .CRLs ,_bbbac ._fgdbg ,_fggcb );};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// B returns the value of the B component of the color.
func (_adbf *PdfColorCalRGB )B ()float64 {return _adbf [1]};func _degfe (_defc _cg .PdfObject ,_bcba bool )(*PdfFont ,error ){_gedf ,_dfee ,_dbdfc :=_fdee (_defc );if _gedf !=nil {_gabg (_gedf );};if _dbdfc !=nil {if _dbdfc ==ErrType1CFontNotSupported {_beeb ,_abfbc :=_acaa (_gedf ,_dfee ,nil );
if _abfbc !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dfee ,_abfbc );
return nil ,_dbdfc ;};return &PdfFont {_dfaba :_beeb },_dbdfc ;};return nil ,_dbdfc ;};_cdbaf :=&PdfFont {};switch _dfee ._dbba {case "\u0054\u0079\u0070e\u0030":if !_bcba {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dfee );
return nil ,_cc .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_fece ,_eafaf :=_baaac (_gedf ,_dfee );if _eafaf !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfee ,_eafaf );
return nil ,_eafaf ;};_cdbaf ._dfaba =_fece ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dbaf *pdfFontSimple ;_efbag ,_eegbe :=_af .NewStdFontByName (_af .StdFontName (_dfee ._gbfc ));
if _eegbe {_adede :=_abgd (_efbag );_cdbaf ._dfaba =&_adede ;_bafg :=_cg .TraceToDirectObject (_adede .ToPdfObject ());_ebfc ,_cccea ,_fbbe :=_fdee (_bafg );if _fbbe !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dfee ,_adede );
return nil ,_fbbe ;};for _ ,_fbfdd :=range _gedf .Keys (){_ebfc .Set (_fbfdd ,_gedf .Get (_fbfdd ));};_dbaf ,_fbbe =_acaa (_ebfc ,_cccea ,_adede ._cfgg );if _fbbe !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dfee ,_adede );
return nil ,_fbbe ;};_dbaf ._cegee =_adede ._cegee ;_dbaf ._eadbf =_adede ._eadbf ;if _dbaf ._fbeeg ==nil {_dbaf ._fbeeg =_adede ._fbeeg ;};}else {_dbaf ,_dbdfc =_acaa (_gedf ,_dfee ,nil );if _dbdfc !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dfee ,_dbdfc );
return nil ,_dbdfc ;};};_dbdfc =_dbaf .addEncoding ();if _dbdfc !=nil {return nil ,_dbdfc ;};if _eegbe {_dbaf .updateStandard14Font ();};if _eegbe &&_dbaf ._bfcd ==nil &&_dbaf ._cfgg ==nil {_bc .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbaf );
_bc .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_efbag );};if len (_dbaf ._cegee )==0{_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dbaf );};_cdbaf ._dfaba =_dbaf ;
case "\u0054\u0079\u0070e\u0033":_gaddd ,_gdbbg :=_ggce (_gedf ,_dfee );if _gdbbg !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gdbbg );
return nil ,_gdbbg ;};_cdbaf ._dfaba =_gaddd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ggfg ,_aecb :=_eacb (_gedf ,_dfee );if _aecb !=nil {_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_aecb );
return nil ,_aecb ;};_cdbaf ._dfaba =_ggfg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gfec ,_eded :=_aecgcc (_gedf ,_dfee );if _eded !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfee ,_eded );
return nil ,_eded ;};_cdbaf ._dfaba =_gfec ;default:_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_dfee );
return nil ,_f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dfee );};return _cdbaf ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_dbdc *pdfFontType0 )ToPdfObject ()_cg .PdfObject {if _dbdc ._becg ==nil {_dbdc ._becg =&_cg .PdfIndirectObject {};};_gecb :=_dbdc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_dbdc ._becg .PdfObject =_gecb ;if _dbdc .Encoding !=nil {_gecb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbdc .Encoding );
}else if _dbdc ._efac !=nil {_gecb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbdc ._efac .ToPdfObject ());};if _dbdc .DescendantFont !=nil {_gecb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_cg .MakeArray (_dbdc .DescendantFont .ToPdfObject ()));
};return _dbdc ._becg ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_abbga *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccgd ,_dda :=color .(*PdfColorDeviceRGB );if !_dda {_bc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ccgd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddcc *PdfAnnotationPolygon )ToPdfObject ()_cg .PdfObject {_ddcc .PdfAnnotation .ToPdfObject ();_faa :=_ddcc ._bgf ;_fdg :=_faa .PdfObject .(*_cg .PdfObjectDictionary );_ddcc .PdfAnnotationMarkup .appendToPdfDictionary (_fdg );_fdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fdg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ddcc .Vertices );_fdg .SetIfNotNil ("\u004c\u0045",_ddcc .LE );_fdg .SetIfNotNil ("\u0042\u0053",_ddcc .BS );_fdg .SetIfNotNil ("\u0049\u0043",_ddcc .IC );_fdg .SetIfNotNil ("\u0042\u0045",_ddcc .BE );
_fdg .SetIfNotNil ("\u0049\u0054",_ddcc .IT );_fdg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ddcc .Measure );return _faa ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bffc *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=_bffc .GetNumComponents (){return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfgc ,_ceedd :=_cg .GetNumbersAsFloat (objects );
if _ceedd !=nil {return nil ,_ceedd ;};return _bffc .ColorFromFloats (_cfgc );};

// ToPdfObject implements interface PdfModel.
func (_eabg *PdfAnnotationMovie )ToPdfObject ()_cg .PdfObject {_eabg .PdfAnnotation .ToPdfObject ();_dgda :=_eabg ._bgf ;_feed :=_dgda .PdfObject .(*_cg .PdfObjectDictionary );_feed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u004d\u006f\u0076i\u0065"));
_feed .SetIfNotNil ("\u0054",_eabg .T );_feed .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_eabg .Movie );_feed .SetIfNotNil ("\u0041",_eabg .A );return _dgda ;};

// ToPdfObject implements interface PdfModel.
func (_bbgc *PdfAnnotationWatermark )ToPdfObject ()_cg .PdfObject {_bbgc .PdfAnnotation .ToPdfObject ();_abfg :=_bbgc ._bgf ;_eag :=_abfg .PdfObject .(*_cg .PdfObjectDictionary );_eag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_eag .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_bbgc .FixedPrint );return _abfg ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bffad :=PdfWriter {};_bffad ._cgedd =map[_cg .PdfObject ]struct{}{};_bffad ._ebgeg =[]_cg .PdfObject {};_bffad ._adbec =map[_cg .PdfObject ][]*_cg .PdfObjectDictionary {};_bffad ._bcbeb =map[_cg .PdfObject ]struct{}{};_bffad ._baefbc .Major =1;
_bffad ._baefbc .Minor =3;_bfgba :=_cg .MakeDict ();_eedab :=[]struct{_baff _cg .PdfObjectName ;_ggdf string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cdgd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_dedfe ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_edgb ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_ecead ()},{"\u0054\u0069\u0074l\u0065",_cgcee ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ebcgd ()}};
for _ ,_cdbdf :=range _eedab {if _cdbdf ._ggdf !=""{_bfgba .Set (_cdbdf ._baff ,_cg .MakeString (_cdbdf ._ggdf ));};};if _abdda :=_adbd ();!_abdda .IsZero (){if _ecddcb ,_ecgdb :=NewPdfDateFromTime (_abdda );_ecgdb ==nil {_bfgba .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ecddcb .ToPdfObject ());
};};if _eagg :=_beeeb ();!_eagg .IsZero (){if _afagf ,_bged :=NewPdfDateFromTime (_eagg );_bged ==nil {_bfgba .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_afagf .ToPdfObject ());};};_eacee :=_cg .PdfIndirectObject {};_eacee .PdfObject =_bfgba ;_bffad ._gfecf =&_eacee ;
_bffad .addObject (&_eacee );_fcgde :=_cg .PdfIndirectObject {};_fbfddf :=_cg .MakeDict ();_fbfddf .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fcgde .PdfObject =_fbfddf ;_bffad ._fffdf =&_fcgde ;_bffad .addObject (_bffad ._fffdf );
_fcacf ,_dcdce :=_ebcd ("\u0077");if _dcdce !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcdce );};_bffad ._gccbc =_fcacf ;_acgeca :=_cg .PdfIndirectObject {};_cbaea :=_cg .MakeDict ();_cbaea .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050\u0061\u0067e\u0073"));
_egcga :=_cg .PdfObjectArray {};_cbaea .Set ("\u004b\u0069\u0064\u0073",&_egcga );_cbaea .Set ("\u0043\u006f\u0075n\u0074",_cg .MakeInteger (0));_acgeca .PdfObject =_cbaea ;_bffad ._egeag =&_acgeca ;_bffad ._gbdfe =map[_cg .PdfObject ]struct{}{};_bffad .addObject (_bffad ._egeag );
_fbfddf .Set ("\u0050\u0061\u0067e\u0073",&_acgeca );_bffad ._feafc =_fbfddf ;_bc .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fcgde );return _bffad ;};func (_abaadg *PdfWriter )optimize ()error {if _abaadg ._ecgdg ==nil {return nil ;
};var _febebg error ;_abaadg ._ebgeg ,_febebg =_abaadg ._ecgdg .Optimize (_abaadg ._ebgeg );if _febebg !=nil {return _febebg ;};_gaaea :=make (map[_cg .PdfObject ]struct{},len (_abaadg ._ebgeg ));for _ ,_afgga :=range _abaadg ._ebgeg {_gaaea [_afgga ]=struct{}{};
};_abaadg ._cgedd =_gaaea ;return nil ;};func _gageb (_ddgdg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_ddgdg }};func (_bcdg *PdfReader )newPdfAnnotationSquigglyFromDict (_gbed *_cg .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_ggde :=PdfAnnotationSquiggly {};
_aag ,_geag :=_bcdg .newPdfAnnotationMarkupFromDict (_gbed );if _geag !=nil {return nil ,_geag ;};_ggde .PdfAnnotationMarkup =_aag ;_ggde .QuadPoints =_gbed .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ggde ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbfbb *PdfShadingType7 )ToPdfObject ()_cg .PdfObject {_dbfbb .PdfShading .ToPdfObject ();_degc ,_aedgf :=_dbfbb .getShadingDict ();if _aedgf !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbfbb .BitsPerCoordinate !=nil {_degc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dbfbb .BitsPerCoordinate );};if _dbfbb .BitsPerComponent !=nil {_degc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbfbb .BitsPerComponent );
};if _dbfbb .BitsPerFlag !=nil {_degc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dbfbb .BitsPerFlag );};if _dbfbb .Decode !=nil {_degc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbfbb .Decode );};if _dbfbb .Function !=nil {if len (_dbfbb .Function )==1{_degc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbfbb .Function [0].ToPdfObject ());
}else {_eabd :=_cg .MakeArray ();for _ ,_afdefc :=range _dbfbb .Function {_eabd .Append (_afdefc .ToPdfObject ());};_degc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eabd );};};return _dbfbb ._cagea ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_dggf *PdfFieldButton )SetType (btype ButtonType ){_cabdf :=uint32 (0);if _dggf .Ff !=nil {_cabdf =uint32 (*_dggf .Ff );};switch btype {case ButtonTypePush :_cabdf |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_cabdf |=FieldFlagRadio .Mask ();
};_dggf .Ff =_cg .MakeInteger (int64 (_cabdf ));};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_eefdd *PdfShading )GetContext ()PdfModel {return _eefdd ._bcbf };

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_ageb *PdfOutline )GetContainingPdfObject ()_cg .PdfObject {return _ageb ._ccgb };

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _cg .PdfObject ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gccf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bdad int ,_bffec *PdfPage );

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_dcfef *_cg .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_cg .PdfObjectName ;Filter *_cg .PdfObjectName ;SubFilter *_cg .PdfObjectName ;Contents *_cg .PdfObjectString ;Cert _cg .PdfObject ;ByteRange *_cg .PdfObjectArray ;Reference *_cg .PdfObjectArray ;Changes *_cg .PdfObjectArray ;Name *_cg .PdfObjectString ;
M *_cg .PdfObjectString ;Location *_cg .PdfObjectString ;Reason *_cg .PdfObjectString ;ContactInfo *_cg .PdfObjectString ;R *_cg .PdfObjectInteger ;V *_cg .PdfObjectInteger ;PropBuild *_cg .PdfObjectDictionary ;PropAuthTime *_cg .PdfObjectInteger ;PropAuthType *_cg .PdfObjectName ;
};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fec :=NewPdfAnnotation ();_gcgf :=&PdfAnnotationPrinterMark {};_gcgf .PdfAnnotation =_fec ;_fec .SetContext (_gcgf );return _gcgf ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};var (CourierName =_af .CourierName ;CourierBoldName =_af .CourierBoldName ;CourierObliqueName =_af .CourierObliqueName ;CourierBoldObliqueName =_af .CourierBoldObliqueName ;HelveticaName =_af .HelveticaName ;
HelveticaBoldName =_af .HelveticaBoldName ;HelveticaObliqueName =_af .HelveticaObliqueName ;HelveticaBoldObliqueName =_af .HelveticaBoldObliqueName ;SymbolName =_af .SymbolName ;ZapfDingbatsName =_af .ZapfDingbatsName ;TimesRomanName =_af .TimesRomanName ;
TimesBoldName =_af .TimesBoldName ;TimesItalicName =_af .TimesItalicName ;TimesBoldItalicName =_af .TimesBoldItalicName ;);

// GetAction returns the PDF action for the annotation link.
func (_gbdb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _gbdb ._baa !=nil {return _gbdb ._baa ,nil ;};if _gbdb .A ==nil {return nil ,nil ;};if _gbdb ._eac ==nil {return nil ,nil ;};_ceea ,_efg :=_gbdb ._eac .loadAction (_gbdb .A );if _efg !=nil {return nil ,_efg ;
};_gbdb ._baa =_ceea ;return _gbdb ._baa ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_bdac *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _daace []*PdfOutlineTreeNode ;var _gcbdg []string ;var _dcace func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_dcace =func (_gcbfa *PdfOutlineTreeNode ,_aegbef *[]*PdfOutlineTreeNode ,_edggc *[]string ,_edgge int ){if _gcbfa ==nil {return ;
};if _gcbfa ._egbcb ==nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_gfgc ,_dbecbd :=_gcbfa ._egbcb .(*PdfOutlineItem );if _dbecbd {*_aegbef =append (*_aegbef ,&_gfgc .PdfOutlineTreeNode );
_fadgd :=_eaf .Repeat ("\u0020",_edgge *2)+_gfgc .Title .Decoded ();*_edggc =append (*_edggc ,_fadgd );};if _gcbfa .First !=nil {_ageee :=_eaf .Repeat ("\u0020",_edgge *2)+"\u002b";*_edggc =append (*_edggc ,_ageee );_dcace (_gcbfa .First ,_aegbef ,_edggc ,_edgge +1);
};if _dbecbd &&_gfgc .Next !=nil {_dcace (_gfgc .Next ,_aegbef ,_edggc ,_edgge );};};_dcace (_bdac ._ccdbb ,&_daace ,&_gcbdg ,0);return _daace ,_gcbdg ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dfd :=NewPdfAnnotation ();_fee :=&PdfAnnotationPolyLine {};_fee .PdfAnnotation =_dfd ;_fee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfd .SetContext (_fee );return _fee ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_defd *PdfInfo )ToPdfObject ()_cg .PdfObject {_egcdg :=_cg .MakeDict ();_egcdg .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_defd .Title );_egcdg .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_defd .Author );_egcdg .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_defd .Subject );
_egcdg .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_defd .Keywords );_egcdg .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_defd .Creator );_egcdg .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_defd .Producer );
_egcdg .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_defd .Trapped );if _defd .CreationDate !=nil {_egcdg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_defd .CreationDate .ToPdfObject ());};if _defd .ModifiedDate !=nil {_egcdg .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_defd .ModifiedDate .ToPdfObject ());
};for _ ,_efadg :=range _defd ._baagc .Keys (){_egcdg .SetIfNotNil (_efadg ,_defd ._baagc .Get (_efadg ));};return _egcdg ;};func (_aaacg *pdfFontSimple )baseFields ()*fontCommon {return &_aaacg .fontCommon };func (_bbgfb *LTV )buildCertChain (_dfgfe ,_acfe []*_eb .Certificate )([]*_eb .Certificate ,map[string ]*_eb .Certificate ,error ){_bccgda :=map[string ]*_eb .Certificate {};
for _ ,_ggage :=range _dfgfe {_bccgda [_ggage .Subject .CommonName ]=_ggage ;};_bagfc :=_dfgfe ;for _ ,_gafa :=range _acfe {_gebcf :=_gafa .Subject .CommonName ;if _ ,_dfbf :=_bccgda [_gebcf ];_dfbf {continue ;};_bccgda [_gebcf ]=_gafa ;_bagfc =append (_bagfc ,_gafa );
};if len (_bagfc )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ffaab error ;for _cccbc :=_bagfc [0];_cccbc !=nil &&!_bbgfb .CertClient .IsCA (_cccbc );{_cafd ,_dcadf :=_bccgda [_cccbc .Issuer .CommonName ];if !_dcadf {if _cafd ,_ffaab =_bbgfb .CertClient .GetIssuer (_cccbc );
_ffaab !=nil {_bc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ffaab );
break ;};_bccgda [_cccbc .Issuer .CommonName ]=_cafd ;_bagfc =append (_bagfc ,_cafd );};_cccbc =_cafd ;};return _bagfc ,_bccgda ,nil ;};

// IsCID returns true if the underlying font is CID.
func (_dgeg *PdfFont )IsCID ()bool {return _dgeg .baseFields ().isCIDFont ()};

// Register registers (caches) a model to primitive object relationship.
func (_gdabe *modelManager )Register (primitive _cg .PdfObject ,model PdfModel ){_gdabe ._daagb [model ]=primitive ;_gdabe ._cdcfc [primitive ]=model ;};type pdfFontType3 struct{fontCommon ;_aabf *_cg .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _cg .PdfObject ;Encoding _cg .PdfObject ;FontBBox _cg .PdfObject ;FontMatrix _cg .PdfObject ;FirstChar _cg .PdfObject ;LastChar _cg .PdfObject ;Widths _cg .PdfObject ;Resources _cg .PdfObject ;_bacg map[_ad .CharCode ]float64 ;_dgggg _ad .TextEncoder ;
};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_dffee *_cg .PdfIndirectObject ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_efb :=NewPdfAnnotation ();_bbg :=&PdfAnnotationSquare {};_bbg .PdfAnnotation =_efb ;_bbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efb .SetContext (_bbg );return _bbg ;};func (_cdfaf *PdfWriter )writeObjects (){_bc .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cdfaf ._ebgeg ));
_cdfaf ._eebbe =make (map[int ]crossReference );_cdfaf ._eebbe [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _cdfaf ._fcfcg .ObjectMap !=nil {for _ffded ,_cefae :=range _cdfaf ._fcfcg .ObjectMap {if _ffded ==0{continue ;};if _cefae .XType ==_cg .XrefTypeObjectStream {_cebc :=crossReference {Type :2,ObjectNumber :_cefae .OsObjNumber ,Index :_cefae .OsObjIndex };
_cdfaf ._eebbe [_ffded ]=_cebc ;};if _cefae .XType ==_cg .XrefTypeTableEntry {_fcdae :=crossReference {Type :1,ObjectNumber :_cefae .ObjectNumber ,Offset :_cefae .Offset };_cdfaf ._eebbe [_ffded ]=_fcdae ;};};};};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _cg .PdfObject ;Sy _cg .PdfObject ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_db :=NewPdfAction ();_ddg :=&PdfActionURI {};_ddg .PdfAction =_db ;_db .SetContext (_ddg );return _ddg ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_eaca *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _eaca .Alternate ==nil {_bc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _eaca .N ==1{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_abga :=NewPdfColorspaceDeviceGray ();return _abga .ImageToRGB (img );}else if _eaca .N ==3{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _eaca .N ==4{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gee :=NewPdfColorspaceDeviceCMYK ();return _gee .ImageToRGB (img );}else {return img ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_eaca );
_gbaaa ,_faga :=_eaca .Alternate .ImageToRGB (img );_bc .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_bc .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_gbaaa );
return _gbaaa ,_faga ;};func _gadf (_efeg *_cg .PdfObjectDictionary )bool {for _ ,_cbede :=range _efeg .Keys (){if _ ,_deee :=_gcbf [_cbede .String ()];_deee {return true ;};};return false ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_dcee *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_edge :_cg .MakeIndirectObject (_cg .MakeDict ())}};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ffaf :=NewPdfAnnotation ();_gacc :=&PdfAnnotationSquiggly {};_gacc .PdfAnnotation =_ffaf ;_gacc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffaf .SetContext (_gacc );return _gacc ;};func (_ccb *PdfReader )newPdfAnnotationPolyLineFromDict (_gfe *_cg .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_fdeb :=PdfAnnotationPolyLine {};
_fab ,_cbb :=_ccb .newPdfAnnotationMarkupFromDict (_gfe );if _cbb !=nil {return nil ,_cbb ;};_fdeb .PdfAnnotationMarkup =_fab ;_fdeb .Vertices =_gfe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fdeb .LE =_gfe .Get ("\u004c\u0045");_fdeb .BS =_gfe .Get ("\u0042\u0053");
_fdeb .IC =_gfe .Get ("\u0049\u0043");_fdeb .BE =_gfe .Get ("\u0042\u0045");_fdeb .IT =_gfe .Get ("\u0049\u0054");_fdeb .Measure =_gfe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fdeb ,nil ;};func _becc (_eagd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_agaeea ,_bacad :=_cg .GetDict (_eagd .AP );
if !_bacad {return nil ,nil ,_cc .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _agaeea ==nil {return nil ,nil ,nil ;};_ebdf ,_bacad :=_cg .GetArray (_eagd .Rect );
if !_bacad ||_ebdf .Len ()!=4{return nil ,nil ,_cc .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_egaed ,_ceag :=NewPdfRectangle (*_ebdf );if _ceag !=nil {return nil ,nil ,_ceag ;};_bbcfe :=_cg .TraceToDirectObject (_agaeea .Get ("\u004e"));
switch _fdffg :=_bbcfe .(type ){case *_cg .PdfObjectStream :_cafe :=_fdffg ;_febe ,_fggdg :=NewXObjectFormFromStream (_cafe );return _febe ,_egaed ,_fggdg ;case *_cg .PdfObjectDictionary :_fbcae :=_fdffg ;_fgef ,_bdbg :=_cg .GetName (_eagd .AS );if !_bdbg {return nil ,nil ,nil ;
};if _fbcae .Get (*_fgef )==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_fdca ,_bdbg :=_cg .GetStream (_fbcae .Get (*_fgef ));if !_bdbg {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_fgef );
return nil ,nil ,_cc .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_caed ,_agac :=NewXObjectFormFromStream (_fdca );return _caed ,_egaed ,_agac ;};_bc .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bbcfe );
return nil ,nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_eccg *PdfReader )newPdfActionGotoEFromDict (_dfa *_cg .PdfObjectDictionary )(*PdfActionGoToE ,error ){_acfa ,_ba :=_acf (_dfa .Get ("\u0046"));
if _ba !=nil {return nil ,_ba ;};return &PdfActionGoToE {D :_dfa .Get ("\u0044"),NewWindow :_dfa .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_dfa .Get ("\u0054"),F :_acfa },nil ;};func _fbdeb (_cccfe _cg .PdfObject ,_cefe *PdfReader )(*OutlineDest ,error ){_aegbe ,_facgg :=_cg .GetArray (_cccfe );
if !_facgg {return nil ,_cc .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_caaca :=_aegbe .Len ();if _caaca < 2{return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_caaca );
};_feaea :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_acdbg :=_aegbe .Get (0);if _cdffb ,_ebdac :=_cg .GetIndirect (_acdbg );_ebdac {if _ ,_cabee ,_ccgcc :=_cefe .PageFromIndirectObject (_cdffb );_ccgcc ==nil {_feaea .Page =int64 (_cabee -1);}else {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_cdffb );
};_feaea .PageObj =_cdffb ;}else if _gdgg ,_ddbbc :=_cg .GetIntVal (_acdbg );_ddbbc {if _gdgg >=0&&_gdgg < len (_cefe .PageList ){_feaea .PageObj =_cefe .PageList [_gdgg ].GetPageAsIndirectObject ();}else {_bc .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gdgg );
};_feaea .Page =int64 (_gdgg );}else {return nil ,_f .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_acdbg );};_baecae ,_facgg :=_cg .GetNameVal (_aegbe .Get (1));
if !_facgg {_bc .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aegbe .Get (1));
return _feaea ,nil ;};switch _baecae {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _caaca > 2{_feaea .Y ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_aegbe .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _caaca > 2{_feaea .X ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_aegbe .Get (2)));
};case "\u0058\u0059\u005a":if _caaca > 4{_feaea .X ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_aegbe .Get (2)));_feaea .Y ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_aegbe .Get (3)));_feaea .Zoom ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_aegbe .Get (4)));
};default:_baecae ="\u0046\u0069\u0074";};_feaea .Mode =_baecae ;return _feaea ,nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_fcgdf *XObjectImage )SetFilter (encoder _cg .StreamEncoder )error {_acbbe :=_fcgdf .Stream ;_dagea ,_dggda :=_fcgdf .Filter .DecodeBytes (_acbbe );if _dggda !=nil {return _dggda ;};_fcgdf .Filter =encoder ;encoder .UpdateParams (_fcgdf .getParamsDict ());
_acbbe ,_dggda =encoder .EncodeBytes (_dagea );if _dggda !=nil {return _dggda ;};_fcgdf .Stream =_acbbe ;return nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gbg *PdfAction )GetContext ()PdfModel {if _gbg ==nil {return nil ;};return _gbg ._eee ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cfcgde *PdfFilespec )GetContainingPdfObject ()_cg .PdfObject {return _cfcgde ._cbdf };

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_cg .PdfObjectArray ;TI *_cg .PdfObjectInteger ;I *_cg .PdfObjectArray ;};func _eacb (_aabd *_cg .PdfObjectDictionary ,_fcab *fontCommon )(*pdfCIDFontType0 ,error ){if _fcab ._dbba !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fcab );
return nil ,_cg .ErrRangeError ;};_adbb :=_dbea (_fcab );_efgde ,_fcec :=_cg .GetDict (_aabd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fcec {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fcab );
return nil ,ErrRequiredAttributeMissing ;};_adbb .CIDSystemInfo =_efgde ;_adbb .DW =_aabd .Get ("\u0044\u0057");_adbb .W =_aabd .Get ("\u0057");_adbb .DW2 =_aabd .Get ("\u0044\u0057\u0032");_adbb .W2 =_aabd .Get ("\u0057\u0032");_adbb ._dgcb =1000.0;if _bgebce ,_dgecc :=_cg .GetNumberAsFloat (_adbb .DW );
_dgecc ==nil {_adbb ._dgcb =_bgebce ;};_fbegf ,_aged :=_aeffe (_adbb .W );if _aged !=nil {return nil ,_aged ;};if _fbegf ==nil {_fbegf =map[_ad .CharCode ]float64 {};};_adbb ._eggf =_fbegf ;return _adbb ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_agabb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_faegg ,_bbae :=_cg .GetDict (_agabb ._feafc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_bbae {_faegg =_cg .MakeDict ();_agabb ._feafc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_faegg );
};_acacc ,_bbae :=_cg .GetDict (_faegg .Get (_cg .PdfObjectName (extName )));if !_bbae {_acacc =_cg .MakeDict ();_faegg .Set (_cg .PdfObjectName (extName ),_acacc );};if _abdfd ,_ :=_cg .GetNameVal (_acacc .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_abdfd !=baseVersion {_acacc .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_cg .MakeName (baseVersion ));};if _eafbd ,_ :=_cg .GetIntVal (_acacc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_eafbd !=extLevel {_acacc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_cg .MakeInteger (int64 (extLevel )));};};func (_cfecg *PdfReader )traverseObjectData (_cgaad _cg .PdfObject )error {return _cg .ResolveReferencesDeep (_cgaad ,_cfecg ._ffbed );
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aagf *PdfOutlineItem )ToPdfObject ()_cg .PdfObject {_befbe :=_aagf ._afcdab ;_cgagc :=_befbe .PdfObject .(*_cg .PdfObjectDictionary );_cgagc .Set ("\u0054\u0069\u0074l\u0065",_aagf .Title );if _aagf .A !=nil {_cgagc .Set ("\u0041",_aagf .A );};if _fccadf :=_cgagc .Get ("\u0053\u0045");
_fccadf !=nil {_cgagc .Remove ("\u0053\u0045");};if _aagf .C !=nil {_cgagc .Set ("\u0043",_aagf .C );};if _aagf .Dest !=nil {_cgagc .Set ("\u0044\u0065\u0073\u0074",_aagf .Dest );};if _aagf .F !=nil {_cgagc .Set ("\u0046",_aagf .F );};if _aagf .Count !=nil {_cgagc .Set ("\u0043\u006f\u0075n\u0074",_cg .MakeInteger (*_aagf .Count ));
};if _aagf .Next !=nil {_cgagc .Set ("\u004e\u0065\u0078\u0074",_aagf .Next .ToPdfObject ());};if _aagf .First !=nil {_cgagc .Set ("\u0046\u0069\u0072s\u0074",_aagf .First .ToPdfObject ());};if _aagf .Prev !=nil {_cgagc .Set ("\u0050\u0072\u0065\u0076",_aagf .Prev .GetContext ().GetContainingPdfObject ());
};if _aagf .Last !=nil {_cgagc .Set ("\u004c\u0061\u0073\u0074",_aagf .Last .GetContext ().GetContainingPdfObject ());};if _aagf .Parent !=nil {_cgagc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aagf .Parent .GetContext ().GetContainingPdfObject ());
};return _befbe ;};const (_afdba =0x00001;_cbffc =0x00002;_dbcdc =0x00004;_facbd =0x00008;_dgbda =0x00020;_febd =0x00040;_fcceb =0x10000;_gcdd =0x20000;_dbee =0x40000;);func _cece (_dfdaf *[]*PdfField ,_gccfbc FieldFilterFunc ,_dbdff bool )[]*PdfField {if _dfdaf ==nil {return nil ;
};_ggaa :=*_dfdaf ;if len (*_dfdaf )==0{return nil ;};_acfbg :=_ggaa [:0];if _gccfbc ==nil {_gccfbc =func (*PdfField )bool {return true };};var _ecbgc []*PdfField ;for _ ,_gfcf :=range _ggaa {_decae :=_gccfbc (_gfcf );if _decae {_ecbgc =append (_ecbgc ,_gfcf );
if len (_gfcf .Kids )> 0{_ecbgc =append (_ecbgc ,_cece (&_gfcf .Kids ,_gccfbc ,_dbdff )...);};};if !_dbdff ||!_decae ||len (_gfcf .Kids )> 0{_acfbg =append (_acfbg ,_gfcf );};};*_dfdaf =_acfbg ;return _ecbgc ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_cdbad *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fbabd :=RC4_128bit ;if options !=nil {_fbabd =options .Algorithm ;};_bgbgc :=_ef .PermOwner ;if options !=nil {_bgbgc =options .Permissions ;};var _afebd _gg .Filter ;
switch _fbabd {case RC4_128bit :_afebd =_gg .NewFilterV2 (16);case AES_128bit :_afebd =_gg .NewFilterAESV2 ();case AES_256bit :_afebd =_gg .NewFilterAESV3 ();default:return _f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_defefg ,_gdbag ,_cdggb :=_cg .PdfCryptNewEncrypt (_afebd ,userPass ,ownerPass ,_bgbgc );if _cdggb !=nil {return _cdggb ;};_cdbad ._gagda =_defefg ;if _gdbag .Major !=0{_cdbad .SetVersion (_gdbag .Major ,_gdbag .Minor );};_cdbad ._eegag =_gdbag .Encrypt ;
_cdbad ._gcccf ,_cdbad ._efbb =_gdbag .ID0 ,_gdbag .ID1 ;_affdd :=_cg .MakeIndirectObject (_gdbag .Encrypt );_cdbad ._dcceb =_affdd ;_cdbad .addObject (_affdd );return nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_ccgb *_cg .PdfIndirectObject ;};func _fdee (_aefg _cg .PdfObject )(*_cg .PdfObjectDictionary ,*fontCommon ,error ){_ddfa :=&fontCommon {};if _ebge ,_efee :=_aefg .(*_cg .PdfIndirectObject );
_efee {_ddfa ._ccfe =_ebge .ObjectNumber ;};_ceeba ,_gffde :=_cg .GetDict (_aefg );if !_gffde {_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aefg );
return nil ,nil ,ErrFontNotSupported ;};_abdf ,_gffde :=_cg .GetNameVal (_ceeba .Get ("\u0054\u0079\u0070\u0065"));if !_gffde {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _abdf !="\u0046\u006f\u006e\u0074"{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_abdf ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_cg .ErrTypeError ;};_eabbf ,_gffde :=_cg .GetNameVal (_ceeba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gffde {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ddfa ._dbba =_eabbf ;_ddef ,_gffde :=_cg .GetNameVal (_ceeba .Get ("\u004e\u0061\u006d\u0065"));if _gffde {_ddfa ._badcg =_ddef ;};_dfadc :=_ceeba .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dfadc !=nil {_ddfa ._cccgf =_cg .TraceToDirectObject (_dfadc );
_ffcbb ,_feage :=_ggef (_ddfa ._cccgf ,_ddfa );if _feage !=nil {return _ceeba ,_ddfa ,_feage ;};_ddfa ._cgcg =_ffcbb ;}else if _eabbf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_eabbf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dddca ,_ffgb :=_cag .NewCIDSystemInfo (_ceeba .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _ffgb !=nil {return _ceeba ,_ddfa ,_ffgb ;};_gaac :=_f .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dddca .Registry ,_dddca .Ordering );if _cag .IsPredefinedCMap (_gaac ){_ddfa ._cgcg ,_ffgb =_cag .LoadPredefinedCMap (_gaac );
if _ffgb !=nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gaac ,_ffgb );
};};};_dfcd :=_ceeba .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dfcd !=nil {_gabb ,_bbcg :=_ggagc (_dfcd );if _bbcg !=nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbcg );
return _ceeba ,_ddfa ,_bbcg ;};_ddfa ._ffab =_gabb ;};if _eabbf !="\u0054\u0079\u0070e\u0033"{_ecae ,_fdcb :=_cg .GetNameVal (_ceeba .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fdcb {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _ceeba ,_ddfa ,ErrRequiredAttributeMissing ;};_ddfa ._gbfc =_ecae ;};return _ceeba ,_ddfa ,nil ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cadc *PdfReader )GetNameDictionary ()(_cg .PdfObject ,error ){_ccbab :=_cg .ResolveReference (_cadc ._egdgf .Get ("\u004e\u0061\u006de\u0073"));if _ccbab ==nil {return nil ,nil ;};if !_cadc ._ebebf {_fgce :=_cadc .traverseObjectData (_ccbab );if _fgce !=nil {return nil ,_fgce ;
};};return _ccbab ,nil ;};

// B returns the value of the blue component of the color.
func (_fbgg *PdfColorDeviceRGB )B ()float64 {return _fbgg [2]};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_gedd *PdfWriter )SetDocInfo (info *PdfInfo ){_gedd .setDocInfo (info .ToPdfObject ())};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_fbfd *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeccg :=vals [0];if _eeccg < 0.0||_eeccg > 100.0{_bc .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_eeccg );
return nil ,ErrColorOutOfRange ;};_cfcgd :=vals [1];_daegc :=float64 (-100);_bcbe :=float64 (100);if len (_fbfd .Range )> 1{_daegc =_fbfd .Range [0];_bcbe =_fbfd .Range [1];};if _cfcgd < _daegc ||_cfcgd > _bcbe {_bc .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cfcgd ,_daegc ,_bcbe );
return nil ,ErrColorOutOfRange ;};_gcd :=vals [2];_cbeae :=float64 (-100);_cgfd :=float64 (100);if len (_fbfd .Range )> 3{_cbeae =_fbfd .Range [2];_cgfd =_fbfd .Range [3];};if _gcd < _cbeae ||_gcd > _cgfd {_bc .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gcd ,_cbeae ,_cgfd );
return nil ,ErrColorOutOfRange ;};_egdf :=NewPdfColorLab (_eeccg ,_cfcgd ,_gcd );return _egdf ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_agggf *PdfPage )AppendContentStream (contentStr string )error {_gcdgb ,_fefg :=_agggf .GetContentStreams ();if _fefg !=nil {return _fefg ;};if len (_gcdgb )==0{_gcdgb =[]string {contentStr };return _agggf .SetContentStreams (_gcdgb ,_cg .NewFlateEncoder ());
};var _adbeg _cd .Buffer ;_adbeg .WriteString (_gcdgb [len (_gcdgb )-1]);_adbeg .WriteString ("\u000a");_adbeg .WriteString (contentStr );_gcdgb [len (_gcdgb )-1]=_adbeg .String ();return _agggf .SetContentStreams (_gcdgb ,_cg .NewFlateEncoder ());};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_ebdag =title };

// ToInteger convert to an integer format.
func (_dbbc *PdfColorDeviceGray )ToInteger (bits int )uint32 {_abeag :=_bb .Pow (2,float64 (bits ))-1;return uint32 (_abeag *_dbbc .Val ());};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cg .PdfObject ;LE _cg .PdfObject ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;IT _cg .PdfObject ;Measure _cg .PdfObject ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_afbe *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cc .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_agba ,_egfg :=_dg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cfdb ,img ._abbba );if _egfg !=nil {return img ,_egfg ;};_gfgg ,_egfg :=_dg .NRGBAConverter .Convert (_agba );if _egfg !=nil {return img ,_egfg ;
};_abg :=_fdbed (_gfgg .Base ());_bc .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_bc .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_bc .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_abg .Data );
_bc .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_abg );return _abg ,nil ;};

// SetContext sets the sub action (context).
func (_aa *PdfAction )SetContext (ctx PdfModel ){_aa ._eee =ctx };func (_beaab *PdfWriter )makeOffSetReference (_acfaf int64 ){_dcfdg :=_f .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_acfaf );_beaab .writeString (_dcfdg );
_beaab .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;BitsPerFlag *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};type pdfFontSimple struct{fontCommon ;
_bggb *_cg .PdfIndirectObject ;_cegee map[_ad .CharCode ]float64 ;_bfcd _ad .TextEncoder ;_cfgg _ad .TextEncoder ;_fbeeg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _cg .PdfObject ;LastChar _cg .PdfObject ;Widths _cg .PdfObject ;Encoding _cg .PdfObject ;_eadbf *_af .RuneCharSafeMap ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gdb *PdfAction )GetContainingPdfObject ()_cg .PdfObject {return _gdb ._eab };

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_cgfab *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ecdbe []_ad .TextEncoder ;var _eegda _ad .CMapEncoder ;if _baaaf :=_cgfab .baseFields ()._cgcg ;_baaaf !=nil {_eegda =_ad .NewCMapEncoder ("",nil ,_baaaf );};_fabe :=_cgfab .Encoder ();
if _fabe !=nil {switch _cccee :=_fabe .(type ){case _ad .SimpleEncoder :_gfdbc :=_cccee .BaseName ();if _ ,_ggcb :=_dedb [_gfdbc ];_ggcb {_ecdbe =append (_ecdbe ,_fabe );};};};if len (_ecdbe )==0{if _cgfab .baseFields ()._cgcg !=nil {_ecdbe =append (_ecdbe ,_eegda );
};if _fabe !=nil {_ecdbe =append (_ecdbe ,_fabe );};};var _efgd _cd .Buffer ;var _cfdcf int ;for _ ,_afgg :=range data {var _bfcaf bool ;for _ ,_cbgab :=range _ecdbe {if _dccaf :=_cbgab .Encode (string (_afgg ));len (_dccaf )> 0{_efgd .Write (_dccaf );
_bfcaf =true ;break ;};};if !_bfcaf {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_afgg );
_cfdcf ++;};};if _cfdcf !=0{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cfdcf ,_cgfab ,_ecdbe );
};return _efgd .Bytes (),_cfdcf ;};func _bggce (_cgeef _cg .PdfObject )(string ,error ){_cgeef =_cg .TraceToDirectObject (_cgeef );switch _afaba :=_cgeef .(type ){case *_cg .PdfObjectString :return _afaba .Str (),nil ;case *_cg .PdfObjectStream :_caff ,_beaga :=_cg .DecodeStream (_afaba );
if _beaga !=nil {return "",_beaga ;};return string (_caff ),nil ;};return "",_f .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cgeef );
};

// String returns a human readable description of `fontfile`.
func (_cgfb *fontFile )String ()string {_bfga :="\u005b\u004e\u006f\u006e\u0065\u005d";if _cgfb ._eadfe !=nil {_bfga =_cgfb ._eadfe .String ();};return _f .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_cgfb ._geeae ,_bfga );
};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_edabge *modelManager )GetModelFromPrimitive (primitive _cg .PdfObject )PdfModel {model ,_eefbc :=_edabge ._cdcfc [primitive ];if !_eefbc {return nil ;};return model ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// GetContentStream returns the pattern cell's content stream
func (_ggdga *PdfTilingPattern )GetContentStream ()([]byte ,error ){_dgeed ,_ ,_fgdbgg :=_ggdga .GetContentStreamWithEncoder ();return _dgeed ,_fgdbgg ;};

// ToGoTime returns the date in time.Time format.
func (_egagc PdfDate )ToGoTime ()_a .Time {_cgeee :=int (_egagc ._gcgddc *60*60+_egagc ._edcgb *60);switch _egagc ._fdffgb {case '-':_cgeee =-_cgeee ;case 'Z':_cgeee =0;};_faeac :=_f .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_egagc ._fdffgb ,_egagc ._gcgddc ,_egagc ._edcgb );
_caabc :=_a .FixedZone (_faeac ,_cgeee );return _a .Date (int (_egagc ._bedd ),_a .Month (_egagc ._bdebg ),int (_egagc ._dcce ),int (_egagc ._afbab ),int (_egagc ._cagfd ),int (_egagc ._cecfc ),0,_caabc );};

// Encoder returns the font's text encoder.
func (_cbdaec pdfFontType0 )Encoder ()_ad .TextEncoder {return _cbdaec ._efac };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ecac :=&PdfAnnotation {};_ecac ._bgf =_cg .MakeIndirectObject (_cg .MakeDict ());return _ecac ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_bfa :=NewPdfAnnotation ();_efba :=&PdfAnnotationScreen {};_efba .PdfAnnotation =_bfa ;_bfa .SetContext (_efba );return _efba ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;VerticesPerRow *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_geae *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gefcg :=vals [0];if _gefcg < 0.0||_gefcg > 1.0{_bc .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _gefcg < 0.0{_gefcg =0.0;}else if _gefcg > 1.0{_gefcg =1.0;};return NewPdfColorDeviceGray (_gefcg ),nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_edede :=&PdfOutline {_ccgb :_cg .MakeIndirectObject (_cg .MakeDict ())};_edede ._egbcb =_edede ;return _edede ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;
);

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_cabca *PdfPattern )GetContainingPdfObject ()_cg .PdfObject {return _cabca ._edebc };func (_cgega *PdfSignature )extractChainFromPKCS7 ()([]*_eb .Certificate ,error ){_bbeccc ,_bcff :=_ff .Parse (_cgega .Contents .Bytes ());if _bcff !=nil {return nil ,_bcff ;
};return _bbeccc .Certificates ,nil ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_cafa *PdfWriter )SetOpenAction (dest _cg .PdfObject )error {if dest ==nil ||_cg .IsNullObject (dest ){return nil ;};_cafa ._feafc .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _cafa .addObjects (dest );};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_edcaa :=&PdfOutlineItem {_afcdab :_cg .MakeIndirectObject (_cg .MakeDict ())};_edcaa ._egbcb =_edcaa ;return _edcaa ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_cbgeg :_cg .MakeDict (),ColorComponents :colorComponents };
};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_bbcd *PdfPage )GetRotate ()(int64 ,error ){if _bbcd .Rotate !=nil {return *_bbcd .Rotate ,nil ;};_cdcea :=_bbcd .Parent ;for _cdcea !=nil {_cdac ,_gced :=_cg .GetDict (_cdcea );if !_gced {return 0,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cfeb :=_cdac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cfeb !=nil {_cacd ,_cdfab :=_cg .GetInt (_cfeb );if !_cdfab {return 0,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _cacd !=nil {return int64 (*_cacd ),nil ;
};return 0,_cc .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_cdcea =_cdac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_cc .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_aace *PdfPage )ToPdfObject ()_cg .PdfObject {_abbbf :=_aace ._afeaa ;_aace .GetPageDict ();return _abbbf ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_ffag *PdfPattern )ToPdfObject ()_cg .PdfObject {_eadbe :=_ffag .getDict ();_eadbe .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_eadbe .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (_ffag .PatternType ));
return _ffag ._edebc ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_afabb *Image )Resample (targetBitsPerComponent int64 ){if _afabb .BitsPerComponent ==targetBitsPerComponent {return ;};_addd :=_afabb .GetSamples ();if targetBitsPerComponent < _afabb .BitsPerComponent {_gfdeb :=_afabb .BitsPerComponent -targetBitsPerComponent ;
for _gdeee :=range _addd {_addd [_gdeee ]>>=uint (_gfdeb );};}else if targetBitsPerComponent > _afabb .BitsPerComponent {_fbba :=targetBitsPerComponent -_afabb .BitsPerComponent ;for _cgdf :=range _addd {_addd [_cgdf ]<<=uint (_fbba );};};_afabb .BitsPerComponent =targetBitsPerComponent ;
if _afabb .BitsPerComponent < 8{_afabb .resampleLowBits (_addd );return ;};_eface :=_dg .BytesPerLine (int (_afabb .Width ),int (_afabb .BitsPerComponent ),_afabb .ColorComponents );_fbdea :=make ([]byte ,_eface *int (_afabb .Height ));var (_ccde ,_bcaab ,_fbcc ,_debec int ;
_eccf uint32 ;);for _fbcc =0;_fbcc < int (_afabb .Height );_fbcc ++{_ccde =_fbcc *_eface ;_bcaab =(_fbcc +1)*_eface -1;_bccf :=_df .ResampleUint32 (_addd [_ccde :_bcaab ],int (targetBitsPerComponent ),8);for _debec ,_eccf =range _bccf {_fbdea [_debec +_ccde ]=byte (_eccf );
};};_afabb .Data =_fbdea ;};

// GetContentStreams returns the content stream as an array of strings.
func (_egbeb *PdfPage )GetContentStreams ()([]string ,error ){_cafdb :=_egbeb .GetContentStreamObjs ();var _ddgcf []string ;for _ ,_gbec :=range _cafdb {_cgbf ,_dgbcb :=_bggce (_gbec );if _dgbcb !=nil {return nil ,_dgbcb ;};_ddgcf =append (_ddgcf ,_cgbf );
};return _ddgcf ,nil ;};

// GetStandardApplier gets currently used StandardApplier..
func (_dcgfa *PdfWriter )GetStandardApplier ()StandardApplier {return _dcgfa ._gaegf };

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_fbda :=PdfPage {};_fbda ._egge =_cg .MakeDict ();_fbda .Resources =NewPdfPageResources ();_acbd :=_cg .PdfIndirectObject {};_acbd .PdfObject =_fbda ._egge ;_fbda ._afeaa =&_acbd ;return &_fbda ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cdead *PdfPage )GetAllContentStreams ()(string ,error ){_cffe ,_dgbcg :=_cdead .GetContentStreams ();if _dgbcg !=nil {return "",_dgbcg ;};return _eaf .Join (_cffe ,"\u0020"),nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _eda .ReadSeeker )(*PdfReader ,error ){const _aecfg ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _fdbef (rs ,&ReaderOpts {},false ,_aecfg );};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fdgad *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fdgad .GetNumComponents (){return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cebfb ,_ddaeg :=_fdgad .TintTransform .Evaluate (vals );
if _ddaeg !=nil {return nil ,_ddaeg ;};_bffba ,_ddaeg :=_fdgad .AlternateSpace .ColorFromFloats (_cebfb );if _ddaeg !=nil {return nil ,_ddaeg ;};return _bffba ,nil ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_aada *LTV )EnableAll (extraCerts []*_eb .Certificate )error {_bcddb :=_aada ._cgeg ._cbba .AcroForm ;for _ ,_geeaa :=range _bcddb .AllFields (){_aefcf ,_ :=_geeaa .GetContext ().(*PdfFieldSignature );if _aefcf ==nil {continue ;};_dbfea :=_aefcf .V ;
if _fdfaf :=_aada .validateSig (_dbfea );_fdfaf !=nil {_bc .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fdfaf );
};if _geede :=_aada .Enable (_dbfea ,extraCerts );_geede !=nil {return _geede ;};};return nil ;};func (_dcgegf *PdfReader )loadAnnotations (_gaedc _cg .PdfObject )([]*PdfAnnotation ,error ){_gaedb ,_agbg :=_cg .GetArray (_gaedc );if !_agbg {return nil ,_f .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _geadc []*PdfAnnotation ;for _ ,_cddcc :=range _gaedb .Elements (){_cddcc =_cg .ResolveReference (_cddcc );if _ ,_gdef :=_cddcc .(*_cg .PdfObjectNull );_gdef {continue ;};_aceca ,_ffbaa :=_cddcc .(*_cg .PdfObjectDictionary );_ffbae ,_acea :=_cddcc .(*_cg .PdfIndirectObject );
if _ffbaa {_ffbae =&_cg .PdfIndirectObject {};_ffbae .PdfObject =_aceca ;}else {if !_acea {return nil ,_f .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_abeg ,_efcbc :=_dcgegf .newPdfAnnotationFromIndirectObject (_ffbae );if _efcbc !=nil {return nil ,_efcbc ;};switch _agaac :=_abeg .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_cabfd :=range _dcgegf .AcroForm .AllFields (){if _cabfd ._edge ==_agaac .Parent {_agaac ._dad =_cabfd ;
break ;};};};if _abeg !=nil {_geadc =append (_geadc ,_abeg );};};return _geadc ,nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_cg .PdfObjectStream ;Data []byte ;_gddc *_cg .PdfIndirectObject ;_bdbd *_cg .PdfObjectStream ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_ebaa *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ceedb ,_fggcg :=color .(*PdfColorCalGray );if !_fggcg {_bc .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ceedb .Val ();X :=_ebaa .WhitePoint [0]*_bb .Pow (ANorm ,_ebaa .Gamma );Y :=_ebaa .WhitePoint [1]*_bb .Pow (ANorm ,_ebaa .Gamma );
Z :=_ebaa .WhitePoint [2]*_bb .Pow (ANorm ,_ebaa .Gamma );_gefd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_caec :=-0.969256*X +1.875992*Y +0.041556*Z ;_agge :=0.055648*X +-0.204043*Y +1.057311*Z ;_gefd =_bb .Min (_bb .Max (_gefd ,0),1.0);_caec =_bb .Min (_bb .Max (_caec ,0),1.0);
_agge =_bb .Min (_bb .Max (_agge ,0),1.0);return NewPdfColorDeviceRGB (_gefd ,_caec ,_agge ),nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_aggfg *PdfRectangle )Normalize (){if _aggfg .Llx > _aggfg .Urx {_aggfg .Llx ,_aggfg .Urx =_aggfg .Urx ,_aggfg .Llx ;};if _aggfg .Lly > _aggfg .Ury {_aggfg .Lly ,_aggfg .Ury =_aggfg .Ury ,_aggfg .Lly ;};};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ccdfe :=NewPdfAnnotation ();_edabg :=&PdfAnnotationFileAttachment {};_edabg .PdfAnnotation =_ccdfe ;_edabg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccdfe .SetContext (_edabg );return _edabg ;
};func _agfb (_baaa _cg .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_bc .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_baaa .String (),_baaa );
_acfag :=NewPdfColorspaceSpecialPattern ();if _ffcb ,_bbdbf :=_baaa .(*_cg .PdfIndirectObject );_bbdbf {_acfag ._ddgea =_ffcb ;};_baaa =_cg .TraceToDirectObject (_baaa );if _agbd ,_acffc :=_baaa .(*_cg .PdfObjectName );_acffc {if *_agbd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _acfag ,nil ;};_bdaab ,_edeb :=_baaa .(*_cg .PdfObjectArray );if !_edeb {_bc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_baaa );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bdaab .Len ()!=1&&_bdaab .Len ()!=2{_bc .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bdaab );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_baaa =_bdaab .Get (0);if _ddbf ,_cbbf :=_baaa .(*_cg .PdfObjectName );_cbbf {if *_ddbf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bc .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_ddbf );
return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bdaab .Len ()> 1{_baaa =_bdaab .Get (1);_baaa =_cg .TraceToDirectObject (_baaa );_cabaa ,_aafee :=NewPdfColorspaceFromPdfObject (_baaa );if _aafee !=nil {return nil ,_aafee ;
};_acfag .UnderlyingCS =_cabaa ;};_bc .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_acfag .UnderlyingCS );
return _acfag ,nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_def :=NewPdfAnnotation ();_abf :=&PdfAnnotationTrapNet {};_abf .PdfAnnotation =_def ;_def .SetContext (_abf );return _abf ;};var (_ebfgf _e .Mutex ;_gfac ="";_cabbd _a .Time ;_gdabd ="";_bcddf ="";
_debgg _a .Time ;_ccdda ="";_gcdaa ="";_ebdag ="";);var _ccbde =_fcf .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _cg .PdfObject ;FS _cg .PdfObject ;F _cg .PdfObject ;UF _cg .PdfObject ;DOS _cg .PdfObject ;Mac _cg .PdfObject ;Unix _cg .PdfObject ;ID _cg .PdfObject ;V _cg .PdfObject ;EF _cg .PdfObject ;RF _cg .PdfObject ;Desc _cg .PdfObject ;
CI _cg .PdfObject ;_cbdf _cg .PdfObject ;};

// Encoder returns the font's text encoder.
func (_ggffg pdfFontType3 )Encoder ()_ad .TextEncoder {return _ggffg ._dgggg };

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// SetAction sets the PDF action for the annotation link.
func (_cgb *PdfAnnotationLink )SetAction (action *PdfAction ){_cgb ._baa =action ;if action ==nil {_cgb .A =nil ;};};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_eeb :=NewPdfAction ();_gge :=&PdfActionGoTo {};_gge .PdfAction =_eeb ;_eeb .SetContext (_gge );return _gge ;};func (_bbbc *PdfReader )newPdfActionGotoRFromDict (_daf *_cg .PdfObjectDictionary )(*PdfActionGoToR ,error ){_gdbe ,_de :=_acf (_daf .Get ("\u0046"));
if _de !=nil {return nil ,_de ;};return &PdfActionGoToR {D :_daf .Get ("\u0044"),NewWindow :_daf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gdbe },nil ;};func (_bcafc *pdfFontSimple )addEncoding ()error {var (_cbgf string ;_eeaee map[_ad .CharCode ]_ad .GlyphName ;
_ceffd _ad .SimpleEncoder ;);if _bcafc .Encoder ()!=nil {_dfegcc ,_cabag :=_bcafc .Encoder ().(_ad .SimpleEncoder );if _cabag &&_dfegcc !=nil {_cbgf =_dfegcc .BaseName ();};};if _bcafc .Encoding !=nil {_dgbbd ,_ebfd ,_cbcdc :=_bcafc .getFontEncoding ();
if _cbcdc !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcafc ._gbfc ,_bcafc ._dbba ,_bcafc .Encoding ,_bcafc .Encoding ,_cbcdc );
return _cbcdc ;};if _dgbbd !=""{_cbgf =_dgbbd ;};_eeaee =_ebfd ;_ceffd ,_cbcdc =_ad .NewSimpleTextEncoder (_cbgf ,_eeaee );if _cbcdc !=nil {return _cbcdc ;};};if _ceffd ==nil {_dgbfc :=_bcafc ._ffab ;if _dgbfc !=nil {switch _bcafc ._dbba {case "\u0054\u0079\u0070e\u0031":if _dgbfc .fontFile !=nil &&_dgbfc .fontFile ._eadfe !=nil {_bc .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_ceffd =_dgbfc .fontFile ._eadfe ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _dgbfc ._gafg !=nil {_bc .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_ffaad ,_fagbde :=_dgbfc ._gafg .MakeEncoder ();
if _fagbde ==nil {_ceffd =_ffaad ;};};};};};if _ceffd !=nil {if _eeaee !=nil {_bc .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eeaee ,_bcafc .baseFields ());
_ceffd =_ad .ApplyDifferences (_ceffd ,_eeaee );};_bcafc .SetEncoder (_ceffd );};return nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;var (_dccfa =_fcf .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_ffafd =_fcf .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_bddc =_fcf .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_ceaec ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fbdef ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gbfg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_afga *PdfWriter )writeString (_ebgbc string ){if _afga ._dafgb !=nil {return ;};_gaegc ,_dddegc :=_afga ._fcgdgb .WriteString (_ebgbc );_afga ._ebce +=int64 (_gaegc );_afga ._dafgb =_dddegc ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_cbbfg *PdfPage )GetContentStreamObjs ()[]_cg .PdfObject {if _cbbfg .Contents ==nil {return nil ;};_dece :=_cg .TraceToDirectObject (_cbbfg .Contents );if _dgbc ,_egfbd :=_dece .(*_cg .PdfObjectArray );_egfbd {return _dgbc .Elements ();};return []_cg .PdfObject {_dece };
};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _cg .PdfObject ;B _cg .PdfObject ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_cg .PdfObject ;};func _fcag (_faba *PdfField ,_aaga _cg .PdfObject ){for _ ,_gbeb :=range _faba .Annotations {_gbeb .AS =_aaga ;_gbeb .ToPdfObject ();};};var _fdfac =false ;


// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_cg .PdfIndirectObject ;SV *_cg .PdfIndirectObject ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _cg .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_cg .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_dbefa ,_cbbbc :=encoder .EncodeBytes (img .Data );
if _cbbbc !=nil {_bc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cbbbc );return nil ,_cbbbc ;};_ecef :=NewXObjectImage ();_efgf :=img .Width ;_bcbab :=img .Height ;
_ecef .Width =&_efgf ;_ecef .Height =&_bcbab ;_fbeb :=img .BitsPerComponent ;_ecef .BitsPerComponent =&_fbeb ;_ecef .Filter =encoder ;_ecef .Stream =_dbefa ;if cs ==nil {if img .ColorComponents ==1{_ecef .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_ecef .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_ecef .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_cc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ecef .ColorSpace =cs ;};if len (img ._cfdb )!=0{_fcgfa :=NewXObjectImage ();
_fcgfa .Filter =encoder ;_aeddaf ,_edcad :=encoder .EncodeBytes (img ._cfdb );if _edcad !=nil {_bc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_edcad );
return nil ,_edcad ;};_fcgfa .Stream =_aeddaf ;_fcgfa .BitsPerComponent =_ecef .BitsPerComponent ;_fcgfa .Width =&img .Width ;_fcgfa .Height =&img .Height ;_fcgfa .ColorSpace =NewPdfColorspaceDeviceGray ();_ecef .SMask =_fcgfa .ToPdfObject ();}else {_ecef .SMask =xobjIn .SMask ;
_ecef .ImageMask =xobjIn .ImageMask ;if _ecef .ColorSpace .GetNumComponents ()==1{_bbffc (_ecef );};};return _ecef ,nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_gfac =author };func _gead (_dcebb _cg .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_fecd :=&PdfColorspaceDeviceNAttributes {};var _dcafc *_cg .PdfObjectDictionary ;switch _dbdd :=_dcebb .(type ){case *_cg .PdfIndirectObject :_fecd ._ccffg =_dbdd ;
var _accac bool ;_dcafc ,_accac =_dbdd .PdfObject .(*_cg .PdfObjectDictionary );if !_accac {_bc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_cg .PdfObjectDictionary :_dcafc =_dbdd ;case *_cg .PdfObjectReference :_eeae :=_dbdd .Resolve ();return _gead (_eeae );default:_bc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdcd :=_dcafc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fdcd !=nil {_debea ,_fdbbe :=_cg .TraceToDirectObject (_fdcd ).(*_cg .PdfObjectName );if !_fdbbe {_bc .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fecd .Subtype =_debea ;};if _fgdd :=_dcafc .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fgdd !=nil {_fecd .Colorants =_fgdd ;};if _eega :=_dcafc .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_eega !=nil {_fecd .Process =_eega ;};if _abaa :=_dcafc .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_abaa !=nil {_fecd .MixingHints =_abaa ;};return _fecd ,nil ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;
PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// WriteToFile writes the output PDF to file.
func (_bffaf *PdfWriter )WriteToFile (outputFilePath string )error {_gbgge ,_fcebbd :=_ce .Create (outputFilePath );if _fcebbd !=nil {return _fcebbd ;};defer _gbgge .Close ();return _bffaf .Write (_gbgge );};

// ToPdfObject implements interface PdfModel.
func (_gff *PdfActionURI )ToPdfObject ()_cg .PdfObject {_gff .PdfAction .ToPdfObject ();_eff :=_gff ._eab ;_ab :=_eff .PdfObject .(*_cg .PdfObjectDictionary );_ab .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeURI )));_ab .SetIfNotNil ("\u0055\u0052\u0049",_gff .URI );
_ab .SetIfNotNil ("\u0049\u0073\u004da\u0070",_gff .IsMap );return _eff ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cged *PdfColorspaceSpecialPattern )ToPdfObject ()_cg .PdfObject {if _cged .UnderlyingCS ==nil {return _cg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_ggee :=_cg .MakeArray (_cg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ggee .Append (_cged .UnderlyingCS .ToPdfObject ());
if _cged ._ddgea !=nil {_cged ._ddgea .PdfObject =_ggee ;return _cged ._ddgea ;};return _ggee ;};func _fgbccf (_fdadf _cg .PdfObject )(*PdfPattern ,error ){_bcfd :=&PdfPattern {};var _agded *_cg .PdfObjectDictionary ;if _gfba ,_ceba :=_cg .GetIndirect (_fdadf );
_ceba {_bcfd ._edebc =_gfba ;_bfcb ,_fgfad :=_gfba .PdfObject .(*_cg .PdfObjectDictionary );if !_fgfad {_bc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_gfba .PdfObject );
return nil ,_cg .ErrTypeError ;};_agded =_bfcb ;}else if _cabecg ,_bgff :=_cg .GetStream (_fdadf );_bgff {_bcfd ._edebc =_cabecg ;_agded =_cabecg .PdfObjectDictionary ;}else {_bc .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fdadf );
return nil ,_cg .ErrTypeError ;};_beffc :=_agded .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _beffc ==nil {_bc .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbadaa ,_abggd :=_beffc .(*_cg .PdfObjectInteger );if !_abggd {_bc .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_beffc );
return nil ,_cg .ErrTypeError ;};if *_gbadaa !=1&&*_gbadaa !=2{_bc .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gbadaa );return nil ,_cg .ErrRangeError ;
};_bcfd .PatternType =int64 (*_gbadaa );switch *_gbadaa {case 1:_bbfcd ,_aagcb :=_debbc (_agded );if _aagcb !=nil {return nil ,_aagcb ;};_bbfcd .PdfPattern =_bcfd ;_bcfd ._cafbb =_bbfcd ;return _bcfd ,nil ;case 2:_cgbdb ,_aede :=_dfcc (_agded );if _aede !=nil {return nil ,_aede ;
};_cgbdb .PdfPattern =_bcfd ;_bcfd ._cafbb =_cgbdb ;return _bcfd ,nil ;};return nil ,_cc .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func (_bbdae *pdfFontType0 )bytesToCharcodes (_eafd []byte )([]_ad .CharCode ,bool ){if _bbdae ._fade ==nil {return nil ,false ;
};_bfaf ,_fdcea :=_bbdae ._fade .BytesToCharcodes (_eafd );if !_fdcea {return nil ,false ;};_gedc :=make ([]_ad .CharCode ,len (_bfaf ));for _gbbf ,_fdcead :=range _bfaf {_gedc [_gbbf ]=_ad .CharCode (_fdcead );};return _gedc ,true ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_adccaf *CompliancePdfReader )error ;};

// IsColored specifies if the pattern is colored.
func (_abge *PdfTilingPattern )IsColored ()bool {if _abge .PaintType !=nil &&*_abge .PaintType ==1{return true ;};return false ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_gabff *PdfInfo )GetCustomInfo (name string )*_cg .PdfObjectString {var _gcda *_cg .PdfObjectString ;if _gabff ._baagc ==nil {return _gcda ;};if _becag ,_eaba :=_gabff ._baagc .Get (*_cg .MakeName (name )).(*_cg .PdfObjectString );_eaba {_gcda =_becag ;
};return _gcda ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_bfefd *PdfPageResources )ToPdfObject ()_cg .PdfObject {_ffebc :=_bfefd ._eaada ;_ffebc .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bfefd .ExtGState );if _bfefd ._fabdb !=nil {_bfefd .ColorSpace =_bfefd ._fabdb .ToPdfObject ();};
_ffebc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bfefd .ColorSpace );_ffebc .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_bfefd .Pattern );_ffebc .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bfefd .Shading );
_ffebc .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_bfefd .XObject );_ffebc .SetIfNotNil ("\u0046\u006f\u006e\u0074",_bfefd .Font );_ffebc .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_bfefd .ProcSet );_ffebc .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_bfefd .Properties );
return _ffebc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bdaff *PdfColorspaceSpecialSeparation )ToPdfObject ()_cg .PdfObject {_ccfc :=_cg .MakeArray (_cg .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_ccfc .Append (_bdaff .ColorantName );_ccfc .Append (_bdaff .AlternateSpace .ToPdfObject ());
_ccfc .Append (_bdaff .TintTransform .ToPdfObject ());if _bdaff ._cade !=nil {_bdaff ._cade .PdfObject =_ccfc ;return _bdaff ._cade ;};return _ccfc ;};

// ToInteger convert to an integer format.
func (_bfcfd *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_cgac :=_bb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cgac *_bfcfd .R ()),uint32 (_cgac *_bfcfd .G ()),uint32 (_cgac *_bfcfd .B ())};};var ImageHandling ImageHandler =DefaultImageHandler {};


// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _cg .PdfObject ;IsMap _cg .PdfObject ;};

// Y returns the value of the yellow component of the color.
func (_gbbc *PdfColorDeviceCMYK )Y ()float64 {return _gbbc [2]};

// ToPdfObject implements interface PdfModel.
func (_eed *PdfActionSubmitForm )ToPdfObject ()_cg .PdfObject {_eed .PdfAction .ToPdfObject ();_fdf :=_eed ._eab ;_fa :=_fdf .PdfObject .(*_cg .PdfObjectDictionary );_fa .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeSubmitForm )));if _eed .F !=nil {_fa .Set ("\u0046",_eed .F .ToPdfObject ());
};_fa .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_eed .Fields );_fa .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_eed .Flags );return _fdf ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fbbb *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cc .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_egfa ,_cbab :=_dg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cfdb ,img ._abbba );if _cbab !=nil {return img ,_cbab ;};_fded ,_cbab :=_dg .GrayConverter .Convert (_egfa );if _cbab !=nil {return img ,_cbab ;
};return _fdbed (_fded .Base ()),nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_agd :=NewPdfAction ();_fgbe :=&PdfActionHide {};_fgbe .PdfAction =_agd ;_agd .SetContext (_fgbe );return _fgbe ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_ggega *XObjectForm )SetContentStream (content []byte ,encoder _cg .StreamEncoder )error {_cgegb :=content ;if encoder ==nil {if _ggega .Filter !=nil {encoder =_ggega .Filter ;}else {encoder =_cg .NewRawEncoder ();};};_dacb ,_fdfafb :=encoder .EncodeBytes (_cgegb );
if _fdfafb !=nil {return _fdfafb ;};_cgegb =_dacb ;_ggega .Stream =_cgegb ;_ggega .Filter =encoder ;return nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_adag *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _adag .AlternateSpace ==nil {return nil ,_cc .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _adag .AlternateSpace .ColorToRGB (color );};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_faafb *PdfColorspaceDeviceN )ToPdfObject ()_cg .PdfObject {_ggded :=_cg .MakeArray (_cg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_ggded .Append (_faafb .ColorantNames );_ggded .Append (_faafb .AlternateSpace .ToPdfObject ());_ggded .Append (_faafb .TintTransform .ToPdfObject ());
if _faafb .Attributes !=nil {_ggded .Append (_faafb .Attributes .ToPdfObject ());};if _faafb ._fffgf !=nil {_faafb ._fffgf .PdfObject =_ggded ;return _faafb ._fffgf ;};return _ggded ;};func (_abaf *PdfReader )newPdfAcroFormFromDict (_fefdc *_cg .PdfIndirectObject ,_gefaf *_cg .PdfObjectDictionary )(*PdfAcroForm ,error ){_dfeba :=NewPdfAcroForm ();
if _fefdc !=nil {_dfeba ._ebbeg =_fefdc ;_fefdc .PdfObject =_cg .MakeDict ();};if _cbbg :=_gefaf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cbbg !=nil &&!_cg .IsNullObject (_cbbg ){_fdfe ,_gffge :=_cg .GetArray (_cbbg );if !_gffge {return nil ,_f .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cbbg );
};var _dabf []*PdfField ;for _ ,_fbea :=range _fdfe .Elements (){_bfeb ,_fgace :=_cg .GetIndirect (_fbea );if !_fgace {if _ ,_caaa :=_fbea .(*_cg .PdfObjectNull );_caaa {_bc .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_bc .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fbea );
return nil ,_f .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fcgdg ,_ebfdd :=_abaf .newPdfFieldFromIndirectObject (_bfeb ,nil );
if _ebfdd !=nil {return nil ,_ebfdd ;};_bc .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fcgdg );_dabf =append (_dabf ,_fcgdg );};_dfeba .Fields =&_dabf ;};if _bcdc :=_gefaf .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_bcdc !=nil {_abaad ,_fedg :=_cg .GetBool (_bcdc );if _fedg {_dfeba .NeedAppearances =_abaad ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bcdc );
};};if _dcdec :=_gefaf .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_dcdec !=nil {_dcdee ,_aggg :=_cg .GetInt (_dcdec );if _aggg {_dfeba .SigFlags =_dcdee ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcdec );
};};if _cfbfa :=_gefaf .Get ("\u0043\u004f");_cfbfa !=nil {_agbcf ,_gcga :=_cg .GetArray (_cfbfa );if _gcga {_dfeba .CO =_agbcf ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cfbfa );
};};if _gcfcg :=_gefaf .Get ("\u0044\u0052");_gcfcg !=nil {if _bgcc ,_egacc :=_cg .GetDict (_gcfcg );_egacc {_eedbg ,_afega :=NewPdfPageResourcesFromDict (_bgcc );if _afega !=nil {_bc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_afega );
return nil ,_afega ;};_dfeba .DR =_eedbg ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gcfcg );};};if _abcgc :=_gefaf .Get ("\u0044\u0041");
_abcgc !=nil {_fadcd ,_acdba :=_cg .GetString (_abcgc );if _acdba {_dfeba .DA =_fadcd ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_abcgc );
};};if _ecaac :=_gefaf .Get ("\u0051");_ecaac !=nil {_ecdab ,_gfcc :=_cg .GetInt (_ecaac );if _gfcc {_dfeba .Q =_ecdab ;}else {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ecaac );
};};if _cbdee :=_gefaf .Get ("\u0058\u0046\u0041");_cbdee !=nil {_dfeba .XFA =_cbdee ;};_dfeba .ToPdfObject ();return _dfeba ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_gdabd =creator };func (_gfbe *PdfWriter )setHashIDs (_bbefg _bf .Hash )error {_gaadfe :=_bbefg .Sum (nil );if _gfbe ._gcccf ==""{_gfbe ._gcccf =_g .EncodeToString (_gaadfe [:8]);
};_gfbe .setDocumentIDs (_gfbe ._gcccf ,_g .EncodeToString (_gaadfe [8:]));return nil ;};func (_bcdd *PdfAcroForm )fill (_fegaba FieldValueProvider ,_bcgcf FieldAppearanceGenerator )error {if _bcdd ==nil {return nil ;};_cadfg ,_baee :=_fegaba .FieldValues ();
if _baee !=nil {return _baee ;};for _ ,_daegb :=range _bcdd .AllFields (){_debf :=_daegb .PartialName ();_dbeee ,_dccde :=_cadfg [_debf ];if !_dccde {if _decf ,_dgcc :=_daegb .FullName ();_dgcc ==nil {_dbeee ,_dccde =_cadfg [_decf ];};};if !_dccde {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_debf );
continue ;};if _aeadg :=_ggfge (_daegb ,_dbeee );_aeadg !=nil {return _aeadg ;};if _bcgcf ==nil {continue ;};for _ ,_cbafd :=range _daegb .Annotations {_fdbf ,_dadc :=_bcgcf .GenerateAppearanceDict (_bcdd ,_daegb ,_cbafd );if _dadc !=nil {return _dadc ;
};_cbafd .AP =_fdbf ;_cbafd .ToPdfObject ();};};return nil ;};func (_dccfg *PdfWriter )writeOutputIntents ()error {if len (_dccfg ._bgcga )==0{return nil ;};_ffgff :=make ([]_cg .PdfObject ,len (_dccfg ._bgcga ));for _ddbcg ,_fccfe :=range _dccfg ._bgcga {_ccfbcf :=_fccfe .ToPdfObject ();
_ffgff [_ddbcg ]=_cg .MakeIndirectObject (_ccfbcf );};_fadcba :=_cg .MakeIndirectObject (_cg .MakeArray (_ffgff ...));_dccfg ._feafc .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_fadcba );if _eceg :=_dccfg .addObjects (_fadcba );
_eceg !=nil {return _eceg ;};return nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_cea :=NewPdfAction ();_ddb :=&PdfActionResetForm {};_ddb .PdfAction =_cea ;_cea .SetContext (_ddb );return _ddb ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_bcddf =keywords };func (_adccfa *LTV )validateSig (_bbeeg *PdfSignature )error {if _bbeeg ==nil ||_bbeeg .Contents ==nil ||len (_bbeeg .Contents .Bytes ())==0{return _f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_bbeeg );
};return nil ;};

// Encoder returns the font's text encoder.
func (_deba pdfCIDFontType0 )Encoder ()_ad .TextEncoder {return _deba ._fbded };func (_bfgc *PdfFont )baseFields ()*fontCommon {if _bfgc ._dfaba ==nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _bfgc ._dfaba .baseFields ();};func _gdab (_ffea *_cg .PdfObjectDictionary )(*PdfFieldText ,error ){_bceg :=&PdfFieldText {};_bceg .DA ,_ =_cg .GetString (_ffea .Get ("\u0044\u0041"));_bceg .Q ,_ =_cg .GetInt (_ffea .Get ("\u0051"));
_bceg .DS ,_ =_cg .GetString (_ffea .Get ("\u0044\u0053"));_bceg .RV =_ffea .Get ("\u0052\u0056");_bceg .MaxLen ,_ =_cg .GetInt (_ffea .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _bceg ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gddg *PdfField )GetContainingPdfObject ()_cg .PdfObject {return _gddg ._edge };func (_efacec *LTV )getOCSPs (_aaefa []*_eb .Certificate ,_bedfc map[string ]*_eb .Certificate )([][]byte ,error ){_deacc :=make ([][]byte ,0,len (_aaefa ));for _ ,_ffba :=range _aaefa {for _ ,_bacab :=range _ffba .OCSPServer {if _efacec .CertClient .IsCA (_ffba ){continue ;
};_cdfgeb ,_aaecg :=_bedfc [_ffba .Issuer .CommonName ];if !_aaecg {_bc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_cfcf ,_adgbd :=_efacec .OCSPClient .MakeRequest (_bacab ,_ffba ,_cdfgeb );if _adgbd !=nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_adgbd );
continue ;};_deacc =append (_deacc ,_cfcf );};};return _deacc ,nil ;};

// ToInteger convert to an integer format.
func (_acdg *PdfColorCalGray )ToInteger (bits int )uint32 {_fedb :=_bb .Pow (2,float64 (bits ))-1;return uint32 (_fedb *_acdg .Val ());};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _cg .PdfObject ;};

// R returns the value of the red component of the color.
func (_ebff *PdfColorDeviceRGB )R ()float64 {return _ebff [0]};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ggfdd *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ggfdd ._cafbb .(*PdfTilingPattern );};func _ggce (_cacb *_cg .PdfObjectDictionary ,_ggbe *fontCommon )(*pdfFontType3 ,error ){_ceef :=_gbae (_ggbe );_gbde :=_cacb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _gbde ==nil {_gbde =_cg .MakeInteger (0);};_ceef .FirstChar =_gbde ;_dege ,_ecgfd :=_cg .GetIntVal (_gbde );if !_ecgfd {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gbde );
return nil ,_cg .ErrTypeError ;};_deaa :=_ad .CharCode (_dege );_gbde =_cacb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gbde ==nil {_gbde =_cg .MakeInteger (255);};_ceef .LastChar =_gbde ;_dege ,_ecgfd =_cg .GetIntVal (_gbde );if !_ecgfd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gbde );
return nil ,_cg .ErrTypeError ;};_fdgbf :=_ad .CharCode (_dege );_gbde =_cacb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gbde !=nil {_ceef .Resources =_gbde ;};_gbde =_cacb .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _gbde ==nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_gbde );
return nil ,_cg .ErrNotSupported ;};_ceef .CharProcs =_gbde ;_gbde =_cacb .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _gbde ==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_gbde );
return nil ,_cg .ErrNotSupported ;};_ceef .FontMatrix =_gbde ;_ceef ._bacg =make (map[_ad .CharCode ]float64 );_gbde =_cacb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gbde !=nil {_ceef .Widths =_gbde ;_aecbe ,_facf :=_cg .GetArray (_gbde );if !_facf {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gbde );
return nil ,_cg .ErrTypeError ;};_cfdd ,_ebaf :=_aecbe .ToFloat64Array ();if _ebaf !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ebaf ;};if len (_cfdd )!=int (_fdgbf -_deaa +1){_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fdgbf -_deaa +1,len (_cfdd ));
return nil ,_cg .ErrRangeError ;};_aadb ,_facf :=_cg .GetArray (_ceef .FontMatrix );if !_facf {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_aadb );
return nil ,_ebaf ;};_dgegd ,_ebaf :=_aadb .ToFloat64Array ();if _ebaf !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ebaf ;};_aggcc :=_cca .NewMatrix (_dgegd [0],_dgegd [1],_dgegd [2],_dgegd [3],_dgegd [4],_dgegd [5]);for _cbadd ,_adbg :=range _cfdd {_fgac ,_ :=_aggcc .Transform (_adbg ,_adbg );_ceef ._bacg [_deaa +_ad .CharCode (_cbadd )]=_fgac ;};};_ceef .Encoding =_cg .TraceToDirectObject (_cacb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_ebgf :=_cacb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ebgf !=nil {_ceef ._cccgf =_cg .TraceToDirectObject (_ebgf );_edfe ,_gdeg :=_ggef (_ceef ._cccgf ,&_ceef .fontCommon );if _gdeg !=nil {return nil ,_gdeg ;};_ceef ._cgcg =_edfe ;};if _fbcdd :=_ceef ._cgcg ;
_fbcdd !=nil {_ceef ._dgggg =_ad .NewCMapEncoder ("",nil ,_fbcdd );}else {_ceef ._dgggg =_ad .NewPdfDocEncoder ();};return _ceef ,nil ;};func (_aegc *PdfReader )newPdfAnnotationCircleFromDict (_fcaae *_cg .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_aad :=PdfAnnotationCircle {};
_ebada ,_ebb :=_aegc .newPdfAnnotationMarkupFromDict (_fcaae );if _ebb !=nil {return nil ,_ebb ;};_aad .PdfAnnotationMarkup =_ebada ;_aad .BS =_fcaae .Get ("\u0042\u0053");_aad .IC =_fcaae .Get ("\u0049\u0043");_aad .BE =_fcaae .Get ("\u0042\u0045");_aad .RD =_fcaae .Get ("\u0052\u0044");
return &_aad ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_fdeab *PdfFieldButton )GetFillImage ()*Image {if _fdeab .IsPush (){return _fdeab ._fdedf ;};return nil ;};func _dfcc (_gafae *_cg .PdfObjectDictionary )(*PdfShadingPattern ,error ){_cgdd :=&PdfShadingPattern {};_eacd :=_gafae .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _eacd ==nil {_bc .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fegeb ,_edfbd :=_bbfcf (_eacd );if _edfbd !=nil {_bc .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_edfbd );
return nil ,_edfbd ;};_cgdd .Shading =_fegeb ;if _gddbb :=_gafae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gddbb !=nil {_ebcge ,_caaab :=_gddbb .(*_cg .PdfObjectArray );if !_caaab {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gddbb );
return nil ,_cg .ErrTypeError ;};_cgdd .Matrix =_ebcge ;};if _afegab :=_gafae .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_afegab !=nil {_cgdd .ExtGState =_afegab ;};return _cgdd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fd *PdfAction )ToPdfObject ()_cg .PdfObject {_ag :=_fd ._eab ;_bfe :=_ag .PdfObject .(*_cg .PdfObjectDictionary );_bfe .Clear ();_bfe .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_bfe .SetIfNotNil ("\u0053",_fd .S );
_bfe .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fd .Next );return _ag ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_dfed *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_agfbd :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_dfgb ,_ecfcg :=_dfed .GetNumPages ();if _ecfcg !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecfcg );
return nil ,_ecfcg ;};for _dbfda :=1;_dbfda <=_dfgb ;_dbfda ++{_gfdab ,_aagae :=_dfed .GetPage (_dbfda );if _aagae !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aagae );return nil ,_aagae ;};if opts .PageProcessCallback !=nil {_aagae =opts .PageProcessCallback (_dbfda ,_gfdab );
if _aagae !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aagae );return nil ,_aagae ;};}else if opts .PageCallback !=nil {opts .PageCallback (_dbfda ,_gfdab );};_aagae =_agfbd .AddPage (_gfdab );if _aagae !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aagae );
return nil ,_aagae ;};};_agfbd ._baefbc =_dfed .PdfVersion ();if !opts .SkipInfo {_deaabe ,_ebefd :=_dfed .GetPdfInfo ();if _ebefd !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebefd );}else {_agfbd ._gfecf .PdfObject =_deaabe .ToPdfObject ();
};};if !opts .SkipMetadata {if _bgfd :=_dfed ._egdgf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bgfd !=nil {_agfbd ._feafc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgfd );};};if !opts .SkipAcroForm {_cceb :=_agfbd .SetForms (_dfed .AcroForm );
if _cceb !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cceb );return nil ,_cceb ;};};if !opts .SkipOutlines {_agfbd .AddOutlineTree (_dfed .GetOutlineTree ());};if !opts .SkipOCProperties {_gbgf ,_aacg :=_dfed .GetOCProperties ();
if _aacg !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aacg );}else {_aacg =_agfbd .SetOCProperties (_gbgf );if _aacg !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aacg );};};};if !opts .SkipPageLabels {_cgfdc ,_afcee :=_dfed .GetPageLabels ();
if _afcee !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afcee );}else {_afcee =_agfbd .SetPageLabels (_cgfdc );if _afcee !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afcee );};};};if !opts .SkipNamedDests {_bcfbg ,_bbfcb :=_dfed .GetNamedDestinations ();
if _bbfcb !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbfcb );}else {_bbfcb =_agfbd .SetNamedDestinations (_bcfbg );if _bbfcb !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbfcb );};};};if !opts .SkipNameDictionary {_bfcdc ,_daedg :=_dfed .GetNameDictionary ();
if _daedg !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daedg );}else {_daedg =_agfbd .SetNameDictionary (_bfcdc );if _daedg !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daedg );};};};if !opts .SkipRotation &&_dfed .Rotate !=nil {if _bafeb :=_agfbd .SetRotation (*_dfed .Rotate );
_bafeb !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bafeb );};};return &_agfbd ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_ggff *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};var (ErrRequiredAttributeMissing =_cc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_ebadd =_cc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_cc .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cc .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_ac .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_cg .ErrNotSupported );ErrType1CFontNotSupported =_ac .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cg .ErrNotSupported );
ErrType3FontNotSupported =_ac .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_cg .ErrNotSupported );
ErrTTCmapNotSupported =_ac .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_cg .ErrNotSupported );
ErrSignNotEnoughSpace =_ac .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ac .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_gdeb :=&PdfAppender {_gaa :reader ._bgde ,Reader :reader ,_ecb :reader ._adfcb ,_dgee :reader ._ffbed };_acce ,_cba :=_gdeb ._gaa .Seek (0,_eda .SeekEnd );
if _cba !=nil {return nil ,_cba ;};_gdeb ._afcde =_acce ;if _ ,_cba =_gdeb ._gaa .Seek (0,_eda .SeekStart );_cba !=nil {return nil ,_cba ;};_gdeb ._cbba ,_cba =NewPdfReaderWithOpts (_gdeb ._gaa ,opts );if _cba !=nil {return nil ,_cba ;};for _ ,_abac :=range _gdeb .Reader .GetObjectNums (){if _gdeb ._debeg < _abac {_gdeb ._debeg =_abac ;
};};_gdeb ._gfc =_gdeb ._ecb .GetXrefTable ();_gdeb ._bacd =_gdeb ._ecb .GetXrefOffset ();_gdeb ._gccd =append (_gdeb ._gccd ,_gdeb ._cbba .PageList ...);_gdeb ._gdcc =make (map[_cg .PdfObject ]struct{});_gdeb ._aaab =make (map[_cg .PdfObject ]int64 );
_gdeb ._badf =make (map[_cg .PdfObject ]struct{});_gdeb ._dgfd =_gdeb ._cbba .AcroForm ;_gdeb ._cagf =_gdeb ._cbba .DSS ;if opts !=nil {_gdeb ._eaab =opts .Password ;};if encryptOptions !=nil {_gdeb ._efcd =encryptOptions ;};return _gdeb ,nil ;};func (_afeg *PdfAnnotationMarkup )appendToPdfDictionary (_gbcc *_cg .PdfObjectDictionary ){_gbcc .SetIfNotNil ("\u0054",_afeg .T );
if _afeg .Popup !=nil {_gbcc .Set ("\u0050\u006f\u0070u\u0070",_afeg .Popup .ToPdfObject ());};_gbcc .SetIfNotNil ("\u0043\u0041",_afeg .CA );_gbcc .SetIfNotNil ("\u0052\u0043",_afeg .RC );_gbcc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_afeg .CreationDate );
_gbcc .SetIfNotNil ("\u0049\u0052\u0054",_afeg .IRT );_gbcc .SetIfNotNil ("\u0053\u0075\u0062\u006a",_afeg .Subj );_gbcc .SetIfNotNil ("\u0052\u0054",_afeg .RT );_gbcc .SetIfNotNil ("\u0049\u0054",_afeg .IT );_gbcc .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_afeg .ExData );
};

// Add appends a top level outline item to the outline.
func (_dadae *Outline )Add (item *OutlineItem ){_dadae .Entries =append (_dadae .Entries ,item )};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_cg .PdfObject ,error );};func _ecdf (_deccd _cg .PdfObject )(*PdfColorspaceCalGray ,error ){_bgefd :=NewPdfColorspaceCalGray ();if _deef ,_bbeb :=_deccd .(*_cg .PdfIndirectObject );_bbeb {_bgefd ._ecf =_deef ;
};_deccd =_cg .TraceToDirectObject (_deccd );_fbad ,_fcg :=_deccd .(*_cg .PdfObjectArray );if !_fcg {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbad .Len ()!=2{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_deccd =_cg .TraceToDirectObject (_fbad .Get (0));_bdcb ,_fcg :=_deccd .(*_cg .PdfObjectName );if !_fcg {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_bdcb !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_f .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_deccd =_cg .TraceToDirectObject (_fbad .Get (1));
_cabe ,_fcg :=_deccd .(*_cg .PdfObjectDictionary );if !_fcg {return nil ,_f .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_deccd =_cabe .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_deccd =_cg .TraceToDirectObject (_deccd );_baef ,_fcg :=_deccd .(*_cg .PdfObjectArray );if !_fcg {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _baef .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ggbc ,_bfeeac :=_baef .GetAsFloat64Slice ();
if _bfeeac !=nil {return nil ,_bfeeac ;};_bgefd .WhitePoint =_ggbc ;_deccd =_cabe .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _deccd !=nil {_deccd =_cg .TraceToDirectObject (_deccd );_fdad ,_gagcf :=_deccd .(*_cg .PdfObjectArray );
if !_gagcf {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _fdad .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_bdgg ,_ebef :=_fdad .GetAsFloat64Slice ();if _ebef !=nil {return nil ,_ebef ;};_bgefd .BlackPoint =_bdgg ;};_deccd =_cabe .Get ("\u0047\u0061\u006dm\u0061");if _deccd !=nil {_deccd =_cg .TraceToDirectObject (_deccd );_daac ,_fgbeb :=_cg .GetNumberAsFloat (_deccd );
if _fgbeb !=nil {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_bgefd .Gamma =_daac ;};return _bgefd ,nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_dd :=NewPdfAction ();_ebdg :=&PdfActionThread {};_ebdg .PdfAction =_dd ;_dd .SetContext (_ebdg );return _ebdg ;};func (_efad *PdfReader )loadAction (_egc _cg .PdfObject )(*PdfAction ,error ){if _cfd ,_ccaa :=_cg .GetIndirect (_egc );
_ccaa {_bdd ,_ggag :=_efad .newPdfActionFromIndirectObject (_cfd );if _ggag !=nil {return nil ,_ggag ;};return _bdd ,nil ;}else if !_cg .IsNullObject (_egc ){return nil ,_cc .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func (_dbcdd *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _dbcdd ._ffab ==nil &&_dbcdd .DescendantFont !=nil {return _dbcdd .DescendantFont .FontDescriptor ();};return _dbcdd ._ffab ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_bgacg *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_cdaf :=_bgacg .GetContentStreamObjs ();wrapContents =wrapContents &&len (_cdaf )> 0;_dcgc :=_cg .NewFlateEncoder ();_efcfda :=_cg .MakeArray ();if wrapContents {_bbcba ,_fcgaf :=_cg .MakeStream ([]byte ("\u0071\u000a"),_dcgc );
if _fcgaf !=nil {return _fcgaf ;};_efcfda .Append (_bbcba );};_efcfda .Append (_cdaf ...);if wrapContents {_ggfd ,_bedaf :=_cg .MakeStream ([]byte ("\u000a\u0051\u000a"),_dcgc );if _bedaf !=nil {return _bedaf ;};_efcfda .Append (_ggfd );};_dcag ,_bdcc :=_cg .MakeStream (cs ,_dcgc );
if _bdcc !=nil {return _bdcc ;};_efcfda .Append (_dcag );_bgacg .Contents =_efcfda ;return nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cg .PdfObject ;LE _cg .PdfObject ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;IT _cg .PdfObject ;Measure _cg .PdfObject ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_fddc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _fddc .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_caedb OutlineDest )ToPdfObject ()_cg .PdfObject {if (_caedb .PageObj ==nil &&_caedb .Page < 0)||_caedb .Mode ==""{return _cg .MakeNull ();};_edfcc :=_cg .MakeArray ();if _caedb .PageObj !=nil {_edfcc .Append (_caedb .PageObj );}else {_edfcc .Append (_cg .MakeInteger (_caedb .Page ));
};_edfcc .Append (_cg .MakeName (_caedb .Mode ));switch _caedb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_edfcc .Append (_cg .MakeFloat (_caedb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_edfcc .Append (_cg .MakeFloat (_caedb .X ));
case "\u0058\u0059\u005a":_edfcc .Append (_cg .MakeFloat (_caedb .X ));_edfcc .Append (_cg .MakeFloat (_caedb .Y ));_edfcc .Append (_cg .MakeFloat (_caedb .Zoom ));default:_edfcc .Set (1,_cg .MakeName ("\u0046\u0069\u0074"));};return _edfcc ;};func (_fgdg *PdfWriter )flushWriter ()error {if _fgdg ._dafgb ==nil {_fgdg ._dafgb =_fgdg ._fcgdgb .Flush ();
};return _fgdg ._dafgb ;};

// ToPdfObject implements interface PdfModel.
func (_cbgc *PdfActionJavaScript )ToPdfObject ()_cg .PdfObject {_cbgc .PdfAction .ToPdfObject ();_aec :=_cbgc ._eab ;_fdb :=_aec .PdfObject .(*_cg .PdfObjectDictionary );_fdb .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeJavaScript )));_fdb .SetIfNotNil ("\u004a\u0053",_cbgc .JS );
return _aec ;};func _baaac (_agbdb *_cg .PdfObjectDictionary ,_eccd *fontCommon )(*pdfFontType0 ,error ){_ceaeg ,_bcecg :=_cg .GetArray (_agbdb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_bcecg {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_eccd );
return nil ,_cg .ErrRangeError ;};if _ceaeg .Len ()!=1{_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ceaeg .Len ());return nil ,_cg .ErrRangeError ;
};_efcec ,_gfee :=_degfe (_ceaeg .Get (0),false );if _gfee !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_gfee ,_eccd );
return nil ,_gfee ;};_dccf :=_gebgc (_eccd );_dccf .DescendantFont =_efcec ;_gaab ,_bcecg :=_cg .GetNameVal (_agbdb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bcecg {if _gaab =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gaab =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_dccf ._efac =_ad .NewIdentityTextEncoder (_gaab );
}else if _cag .IsPredefinedCMap (_gaab ){_dccf ._fade ,_gfee =_cag .LoadPredefinedCMap (_gaab );if _gfee !=nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gaab ,_gfee );
};}else {_bc .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gaab );};};if _edabe :=_efcec .baseFields ()._cgcg ;_edabe !=nil {if _baea :=_edabe .Name ();_baea =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_baea =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_baea =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_baea =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_dccf ._efac =_ad .NewCMapEncoder (_gaab ,_dccf ._fade ,_edabe );
};};return _dccf ,nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_aefcd *LTV )EnableChain (chain []*_eb .Certificate )error {return _aefcd .enable (nil ,chain ,"")};

// GetPage returns the PdfPage model for the specified page number.
func (_bbea *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _bbea ._adfcb .GetCrypter ()!=nil &&!_bbea ._adfcb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_bbea ._fdaee )< pageNumber {return nil ,_cc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_cbccb :=pageNumber -1;if _cbccb < 0{return nil ,_f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_baggc :=_bbea .PageList [_cbccb ];
return _baggc ,nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_eabec *PdfAnnotationPopup )ToPdfObject ()_cg .PdfObject {_eabec .PdfAnnotation .ToPdfObject ();_bgbc :=_eabec ._bgf ;_dgea :=_bgbc .PdfObject .(*_cg .PdfObjectDictionary );_dgea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0050\u006f\u0070u\u0070"));
_dgea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eabec .Parent );_dgea .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eabec .Open );return _bgbc ;};func (_agbed *PdfField )inherit (_acfca func (*PdfField )bool )(bool ,error ){_cdbbg :=map[*PdfField ]bool {};
_gbcg :=false ;_dbfb :=_agbed ;for _dbfb !=nil {if _ ,_gceb :=_cdbbg [_dbfb ];_gceb {return false ,_cc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_deca :=_acfca (_dbfb );if _deca {_gbcg =true ;
break ;};_cdbbg [_dbfb ]=true ;_dbfb =_dbfb .Parent ;};return _gbcg ,nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gcc :=NewPdfAnnotation ();_bgad :=&PdfAnnotationText {};_bgad .PdfAnnotation =_gcc ;_bgad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcc .SetContext (_bgad );return _bgad ;};func (_cgdbgb *PdfWriter )getPdfVersion ()string {return _f .Sprintf ("\u0025\u0064\u002e%\u0064",_cgdbgb ._baefbc .Major ,_cgdbgb ._baefbc .Minor );
};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_gaded :=&PdfColorspaceDeviceN {};return _gaded ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ebc :=NewPdfAnnotation ();_bea :=&PdfAnnotationWidget {};_bea .PdfAnnotation =_ebc ;_ebc .SetContext (_bea );return _bea ;};func _eggb (_egfe *_cg .PdfObjectDictionary )(*PdfShadingType7 ,error ){_aedcf :=PdfShadingType7 {};
_egbbaf :=_egfe .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _egbbaf ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecbcd ,_cbddd :=_egbbaf .(*_cg .PdfObjectInteger );if !_cbddd {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egbbaf );
return nil ,_cg .ErrTypeError ;};_aedcf .BitsPerCoordinate =_ecbcd ;_egbbaf =_egfe .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _egbbaf ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ecbcd ,_cbddd =_egbbaf .(*_cg .PdfObjectInteger );if !_cbddd {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_egbbaf );
return nil ,_cg .ErrTypeError ;};_aedcf .BitsPerComponent =_ecbcd ;_egbbaf =_egfe .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _egbbaf ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ecbcd ,_cbddd =_egbbaf .(*_cg .PdfObjectInteger );if !_cbddd {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_egbbaf );
return nil ,_cg .ErrTypeError ;};_aedcf .BitsPerComponent =_ecbcd ;_egbbaf =_egfe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _egbbaf ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddbefa ,_cbddd :=_egbbaf .(*_cg .PdfObjectArray );if !_cbddd {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egbbaf );
return nil ,_cg .ErrTypeError ;};_aedcf .Decode =_ddbefa ;if _dbbcb :=_egfe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dbbcb !=nil {_aedcf .Function =[]PdfFunction {};if _gffbc ,_dgfgc :=_dbbcb .(*_cg .PdfObjectArray );_dgfgc {for _ ,_adbfg :=range _gffbc .Elements (){_gedag ,_eagag :=_ddccf (_adbfg );
if _eagag !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eagag );return nil ,_eagag ;};_aedcf .Function =append (_aedcf .Function ,_gedag );
};}else {_bdfc ,_cacfa :=_ddccf (_dbbcb );if _cacfa !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cacfa );return nil ,_cacfa ;
};_aedcf .Function =append (_aedcf .Function ,_bdfc );};};return &_aedcf ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_egccf *PdfWriter )SetRotation (rotate int64 )error {_cfebe ,_efcgb :=_cg .GetDict (_egccf ._egeag );if !_efcgb {return ErrTypeCheck ;};_cfebe .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cg .MakeInteger (rotate ));return nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_gdgcg *PdfRectangle )ToPdfObject ()_cg .PdfObject {return _cg .MakeArray (_cg .MakeFloat (_gdgcg .Llx ),_cg .MakeFloat (_gdgcg .Lly ),_cg .MakeFloat (_gdgcg .Urx ),_cg .MakeFloat (_gdgcg .Ury ));};func (_fgd *PdfReader )newPdfActionImportDataFromDict (_bga *_cg .PdfObjectDictionary )(*PdfActionImportData ,error ){_feae ,_gfff :=_acf (_bga .Get ("\u0046"));
if _gfff !=nil {return nil ,_gfff ;};return &PdfActionImportData {F :_feae },nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_aebb *PdfWriter )AddPage (page *PdfPage )error {const _ddba ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gfbd (page );_accba :=page .ToPdfObject ();_bc .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_bc .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_accba );_ecbfd ,_afcgd :=_cg .GetIndirect (_accba );if !_afcgd {return _cc .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bc .Log .Trace ("\u0025\u0073",_ecbfd );_bc .Log .Trace ("\u0025\u0073",_ecbfd .PdfObject );_ffaadg ,_afcgd :=_cg .GetDict (_ecbfd .PdfObject );if !_afcgd {return _cc .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_edccb ,_afcgd :=_cg .GetName (_ffaadg .Get ("\u0054\u0079\u0070\u0065"));if !_afcgd {return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_ffaadg .Get ("\u0054\u0079\u0070\u0065"));
};if _edccb .String ()!="\u0050\u0061\u0067\u0065"{return _cc .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_agcee :=[]_cg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_ebgdg ,_dbaaf :=_cg .GetIndirect (_ffaadg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bc .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_ffaadg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_dbaaf );
for _dbaaf {_bc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebgdg );_ggdcf ,_dgcad :=_cg .GetDict (_ebgdg .PdfObject );if !_dgcad {return _cc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_adceb :=range _agcee {_bc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adceb );if _ffaadg .Get (_adceb )!=nil {_bc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gagec :=_ggdcf .Get (_adceb );_gagec !=nil {_bc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adceb );_ffaadg .Set (_adceb ,_gagec );};};_ebgdg ,_dbaaf =_cg .GetIndirect (_ggdcf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_bc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ggdcf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_ffaadg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aebb ._egeag );_ecbfd .PdfObject =_ffaadg ;_afbea ,_afcgd :=_cg .GetDict (_aebb ._egeag .PdfObject );if !_afcgd {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_fbgge ,_afcgd :=_cg .GetArray (_afbea .Get ("\u004b\u0069\u0064\u0073"));if !_afcgd {return _cc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_fbgge .Append (_ecbfd );_aebb ._gbdfe [_ffaadg ]=struct{}{};_defbaf ,_afcgd :=_cg .GetInt (_afbea .Get ("\u0043\u006f\u0075n\u0074"));if !_afcgd {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_defbaf =*_defbaf +1;if page ._dfef ==nil {_dffa :=_ebd .Track (_aebb ._gccbc ,_ddba );if _dffa !=nil {return _dffa ;};}else {_ecdafd :=_ebd .Track (page ._dfef ._ggcgd ,_ddba );if _ecdafd !=nil {return _ecdafd ;};};_aebb .addObject (_ecbfd );_ddca :=_aebb .addObjects (_ffaadg );
if _ddca !=nil {return _ddca ;};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_caaee *PdfFont )GetCharMetrics (code _ad .CharCode )(CharMetrics ,bool ){var _aecgc _af .CharMetrics ;switch _dedg :=_caaee ._dfaba .(type ){case *pdfFontSimple :if _edde ,_dacd :=_dedg .GetCharMetrics (code );_dacd {return _edde ,_dacd ;};case *pdfFontType0 :if _afdeb ,_ecdfe :=_dedg .GetCharMetrics (code );
_ecdfe {return _afdeb ,_ecdfe ;};case *pdfCIDFontType0 :if _cbef ,_gecg :=_dedg .GetCharMetrics (code );_gecg {return _cbef ,_gecg ;};case *pdfCIDFontType2 :if _cfec ,_cfbg :=_dedg .GetCharMetrics (code );_cfbg {return _cfec ,_cfbg ;};case *pdfFontType3 :if _agfba ,_cbee :=_dedg .GetCharMetrics (code );
_cbee {return _agfba ,_cbee ;};default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_caaee ._dfaba );
return _aecgc ,false ;};if _gcf ,_fefa :=_caaee .GetFontDescriptor ();_fefa ==nil &&_gcf !=nil {return _af .CharMetrics {Wx :_gcf ._fdag },true ;};_bc .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_caaee );
return _aecgc ,false ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_geabf *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// C returns the value of the C component of the color.
func (_gccg *PdfColorCalRGB )C ()float64 {return _gccg [2]};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_aebfe *PdfReader )GetIndirectObjectByNumber (number int )(_cg .PdfObject ,error ){_egdeb ,_ccag :=_aebfe ._adfcb .LookupByNumber (number );return _egdeb ,_ccag ;};

// AddImageResource adds an image to the XObject resources.
func (_ccabda *PdfPage )AddImageResource (name _cg .PdfObjectName ,ximg *XObjectImage )error {var _eecbg *_cg .PdfObjectDictionary ;if _ccabda .Resources .XObject ==nil {_eecbg =_cg .MakeDict ();_ccabda .Resources .XObject =_eecbg ;}else {var _fdedb bool ;
_eecbg ,_fdedb =(_ccabda .Resources .XObject ).(*_cg .PdfObjectDictionary );if !_fdedb {return _cc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_eecbg .Set (name ,ximg .ToPdfObject ());
return nil ;};

// Val returns the color value.
func (_fcb *PdfColorDeviceGray )Val ()float64 {return float64 (*_fcb )};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_fdcec *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_cg .StreamEncoder ,error ){_cceeac ,_cgbfb :=_fdcec ._edebc .(*_cg .PdfObjectStream );if !_cgbfb {_bc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdcec ._edebc );
return nil ,nil ,_cg .ErrTypeError ;};_gbbb ,_bfccd :=_cg .DecodeStream (_cceeac );if _bfccd !=nil {_bc .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bfccd );
return nil ,nil ,_bfccd ;};_cdeag ,_bfccd :=_cg .NewEncoderFromStream (_cceeac );if _bfccd !=nil {_bc .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bfccd );
return nil ,nil ,_bfccd ;};return _gbbb ,_cdeag ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _eda .ReadSeeker )(*PdfReader ,error ){const _edfec ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _fdbef (rs ,&ReaderOpts {LazyLoad :true },false ,_edfec );
};

// GetOCProperties returns the optional content properties PdfObject.
func (_bagaec *PdfReader )GetOCProperties ()(_cg .PdfObject ,error ){_acacg :=_bagaec ._egdgf ;_gdgac :=_acacg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gdgac =_cg .ResolveReference (_gdgac );if !_bagaec ._ebebf {_dgeccb :=_bagaec .traverseObjectData (_gdgac );
if _dgeccb !=nil {return nil ,_dgeccb ;};};return _gdgac ,nil ;};func (_fcad *PdfReader )newPdfAnnotationPolygonFromDict (_cdgg *_cg .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_adab :=PdfAnnotationPolygon {};_defe ,_ddce :=_fcad .newPdfAnnotationMarkupFromDict (_cdgg );
if _ddce !=nil {return nil ,_ddce ;};_adab .PdfAnnotationMarkup =_defe ;_adab .Vertices =_cdgg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_adab .LE =_cdgg .Get ("\u004c\u0045");_adab .BS =_cdgg .Get ("\u0042\u0053");_adab .IC =_cdgg .Get ("\u0049\u0043");
_adab .BE =_cdgg .Get ("\u0042\u0045");_adab .IT =_cdgg .Get ("\u0049\u0054");_adab .Measure =_cdgg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_adab ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_cecee *PdfWriter )SetForms (form *PdfAcroForm )error {_cecee ._gaccg =form ;return nil };func (_egcb *PdfAppender )addNewObject (_ebea _cg .PdfObject ){if _ ,_bfcf :=_egcb ._gdcc [_ebea ];!_bfcf {_egcb ._eegc =append (_egcb ._eegc ,_ebea );_egcb ._gdcc [_ebea ]=struct{}{};
};};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_eddf :=NewPdfAnnotation ();_agce :=&PdfAnnotationWatermark {};_agce .PdfAnnotation =_eddf ;_eddf .SetContext (_agce );return _agce ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gcfc *PdfFontDescriptor )ToPdfObject ()_cg .PdfObject {_aeggg :=_cg .MakeDict ();if _gcfc ._dggae ==nil {_gcfc ._dggae =&_cg .PdfIndirectObject {};};_gcfc ._dggae .PdfObject =_aeggg ;_aeggg .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _gcfc .FontName !=nil {_aeggg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gcfc .FontName );};if _gcfc .FontFamily !=nil {_aeggg .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gcfc .FontFamily );};if _gcfc .FontStretch !=nil {_aeggg .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gcfc .FontStretch );
};if _gcfc .FontWeight !=nil {_aeggg .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gcfc .FontWeight );};if _gcfc .Flags !=nil {_aeggg .Set ("\u0046\u006c\u0061g\u0073",_gcfc .Flags );};if _gcfc .FontBBox !=nil {_aeggg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gcfc .FontBBox );
};if _gcfc .ItalicAngle !=nil {_aeggg .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gcfc .ItalicAngle );};if _gcfc .Ascent !=nil {_aeggg .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gcfc .Ascent );};if _gcfc .Descent !=nil {_aeggg .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gcfc .Descent );
};if _gcfc .Leading !=nil {_aeggg .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gcfc .Leading );};if _gcfc .CapHeight !=nil {_aeggg .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gcfc .CapHeight );};if _gcfc .XHeight !=nil {_aeggg .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gcfc .XHeight );
};if _gcfc .StemV !=nil {_aeggg .Set ("\u0053\u0074\u0065m\u0056",_gcfc .StemV );};if _gcfc .StemH !=nil {_aeggg .Set ("\u0053\u0074\u0065m\u0048",_gcfc .StemH );};if _gcfc .AvgWidth !=nil {_aeggg .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gcfc .AvgWidth );
};if _gcfc .MaxWidth !=nil {_aeggg .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gcfc .MaxWidth );};if _gcfc .MissingWidth !=nil {_aeggg .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gcfc .MissingWidth );};if _gcfc .FontFile !=nil {_aeggg .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gcfc .FontFile );
};if _gcfc .FontFile2 !=nil {_aeggg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gcfc .FontFile2 );};if _gcfc .FontFile3 !=nil {_aeggg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gcfc .FontFile3 );};if _gcfc .CharSet !=nil {_aeggg .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gcfc .CharSet );
};if _gcfc .Style !=nil {_aeggg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gcfc .FontName );};if _gcfc .Lang !=nil {_aeggg .Set ("\u004c\u0061\u006e\u0067",_gcfc .Lang );};if _gcfc .FD !=nil {_aeggg .Set ("\u0046\u0044",_gcfc .FD );};if _gcfc .CIDSet !=nil {_aeggg .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gcfc .CIDSet );
};return _gcfc ._dggae ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;IC _cg .PdfObject ;RO _cg .PdfObject ;OverlayText _cg .PdfObject ;Repeat _cg .PdfObject ;DA _cg .PdfObject ;Q _cg .PdfObject ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _eda .ReadSeeker )(*CompliancePdfReader ,error ){const _fbdd ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_gdff ,_cbfa :=_fdbef (rs ,&ReaderOpts {ComplianceMode :true },false ,_fbdd );
if _cbfa !=nil {return nil ,_cbfa ;};return &CompliancePdfReader {PdfReader :_gdff },nil ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_geaa *_ga .Document )error ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ColorToRGB converts a CalRGB color to an RGB color.
func (_eagc *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_adbe ,_daga :=color .(*PdfColorCalRGB );if !_daga {_bc .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afab :=_adbe .A ();_gaad :=_adbe .B ();_ebeg :=_adbe .C ();X :=_eagc .Matrix [0]*_bb .Pow (_afab ,_eagc .Gamma [0])+_eagc .Matrix [3]*_bb .Pow (_gaad ,_eagc .Gamma [1])+_eagc .Matrix [6]*_bb .Pow (_ebeg ,_eagc .Gamma [2]);
Y :=_eagc .Matrix [1]*_bb .Pow (_afab ,_eagc .Gamma [0])+_eagc .Matrix [4]*_bb .Pow (_gaad ,_eagc .Gamma [1])+_eagc .Matrix [7]*_bb .Pow (_ebeg ,_eagc .Gamma [2]);Z :=_eagc .Matrix [2]*_bb .Pow (_afab ,_eagc .Gamma [0])+_eagc .Matrix [5]*_bb .Pow (_gaad ,_eagc .Gamma [1])+_eagc .Matrix [8]*_bb .Pow (_ebeg ,_eagc .Gamma [2]);
_abcd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_aeac :=-0.969256*X +1.875992*Y +0.041556*Z ;_aeff :=0.055648*X +-0.204043*Y +1.057311*Z ;_abcd =_bb .Min (_bb .Max (_abcd ,0),1.0);_aeac =_bb .Min (_bb .Max (_aeac ,0),1.0);_aeff =_bb .Min (_bb .Max (_aeff ,0),1.0);
return NewPdfColorDeviceRGB (_abcd ,_aeac ,_aeff ),nil ;};func _cgcee ()string {_ebfgf .Lock ();defer _ebfgf .Unlock ();return _ebdag };

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_gcbff *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _cg .GetNumberAsFloat (_gcbff .CapHeight );};

// ReplacePage replaces the original page to a new page.
func (_fgda *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_abeeg :=pageNum -1;for _fbfbb :=range _fgda ._gccd {if _fbfbb ==_abeeg {_cgag :=page .Duplicate ();_gfbd (_cgag );_fgda ._gccd [_fbfbb ]=_cgag ;};};};func (_bgebc *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// ToPdfObject implements interface PdfModel.
func (_ccaag *PdfAnnotationStrikeOut )ToPdfObject ()_cg .PdfObject {_ccaag .PdfAnnotation .ToPdfObject ();_cgce :=_ccaag ._bgf ;_efd :=_cgce .PdfObject .(*_cg .PdfObjectDictionary );_ccaag .PdfAnnotationMarkup .appendToPdfDictionary (_efd );_efd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_efd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ccaag .QuadPoints );return _cgce ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bace *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bace .Alternate ==nil {if _bace .N ==1{_faeg :=NewPdfColorspaceDeviceGray ();return _faeg .ColorFromFloats (vals );}else if _bace .N ==3{_eebbf :=NewPdfColorspaceDeviceRGB ();
return _eebbf .ColorFromFloats (vals );}else if _bace .N ==4{_edfc :=NewPdfColorspaceDeviceCMYK ();return _edfc .ColorFromFloats (vals );}else {return nil ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bace .Alternate .ColorFromFloats (vals );};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_daacce *PdfOutlineTreeNode )GetContainingPdfObject ()_cg .PdfObject {return _daacce .GetContext ().GetContainingPdfObject ();};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cfc :=NewPdfAnnotation ();_cfe :=&PdfAnnotationStrikeOut {};_cfe .PdfAnnotation =_cfc ;_cfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfc .SetContext (_cfe );return _cfe ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_daed *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_agfg ,_ ,_ecdad :=_daed .CharcodesToUnicodeWithStats (_daed .BytesToCharcodes (data ));_beee :=_ad .ExpandLigatures (_agfg );return _beee ,_ee .RuneCountInString (_beee ),_ecdad ;
};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_fecbe :=appender .Reader .DSS ;if _fecbe ==nil {_fecbe =NewDSS ();};if _ebec :=_fecbe .generateHashMaps ();_ebec !=nil {return nil ,_ebec ;};return &LTV {CertClient :_cec .NewCertClient (),OCSPClient :_cec .NewOCSPClient (),CRLClient :_cec .NewCRLClient (),SkipExisting :true ,_cgeg :appender ,_cbaeg :_fecbe },nil ;
};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_adcb :=PdfColorDeviceGray (grayVal );return &_adcb ;};func _cgcc (_fdbaf *_cg .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cfcdb :=PdfShadingType1 {};if _cdda :=_fdbaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_cdda !=nil {_cdda =_cg .TraceToDirectObject (_cdda );_egbaf ,_dagab :=_cdda .(*_cg .PdfObjectArray );if !_dagab {_bc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdda );
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfcdb .Domain =_egbaf ;};if _gcca :=_fdbaf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gcca !=nil {_gcca =_cg .TraceToDirectObject (_gcca );
_cfffe ,_egbac :=_gcca .(*_cg .PdfObjectArray );if !_egbac {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcca );return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cfcdb .Matrix =_cfffe ;};_ecbfc :=_fdbaf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ecbfc ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cfcdb .Function =[]PdfFunction {};if _gceee ,_cccab :=_ecbfc .(*_cg .PdfObjectArray );_cccab {for _ ,_cbccc :=range _gceee .Elements (){_accbc ,_ggagff :=_ddccf (_cbccc );if _ggagff !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggagff );
return nil ,_ggagff ;};_cfcdb .Function =append (_cfcdb .Function ,_accbc );};}else {_acaab ,_facca :=_ddccf (_ecbfc );if _facca !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_facca );
return nil ,_facca ;};_cfcdb .Function =append (_cfcdb .Function ,_acaab );};return &_cfcdb ,nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_cgdg PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_cg .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_dbcdf []_cg .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_eacg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_adeee *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_fdea :=_df .NewReader (img .getBase ());_faea :=_dg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fcae :=_df .NewWriter (_faea );
_egd :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_fdebg :=make ([]uint32 ,3);var (_fce uint32 ;ANorm ,X ,Y ,Z ,_beea ,_ddgg ,_bdgcb float64 ;_eecb error ;);for {_fce ,_eecb =_fdea .ReadSample ();if _eecb ==_eda .EOF {break ;}else if _eecb !=nil {return img ,_eecb ;
};ANorm =float64 (_fce )/_egd ;X =_adeee .WhitePoint [0]*_bb .Pow (ANorm ,_adeee .Gamma );Y =_adeee .WhitePoint [1]*_bb .Pow (ANorm ,_adeee .Gamma );Z =_adeee .WhitePoint [2]*_bb .Pow (ANorm ,_adeee .Gamma );_beea =3.240479*X +-1.537150*Y +-0.498535*Z ;
_ddgg =-0.969256*X +1.875992*Y +0.041556*Z ;_bdgcb =0.055648*X +-0.204043*Y +1.057311*Z ;_beea =_bb .Min (_bb .Max (_beea ,0),1.0);_ddgg =_bb .Min (_bb .Max (_ddgg ,0),1.0);_bdgcb =_bb .Min (_bb .Max (_bdgcb ,0),1.0);_fdebg [0]=uint32 (_beea *_egd );_fdebg [1]=uint32 (_ddgg *_egd );
_fdebg [2]=uint32 (_bdgcb *_egd );if _eecb =_fcae .WriteSamples (_fdebg );_eecb !=nil {return img ,_eecb ;};};return _fdbed (&_faea ),nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_fgfc *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdfg ,_badb :=_cg .GetNumbersAsFloat (objects );
if _badb !=nil {return nil ,_badb ;};return _fgfc .ColorFromFloats (_gdfg );};

// String returns a string describing the font descriptor.
func (_gbfcd *PdfFontDescriptor )String ()string {var _aafeb []string ;if _gbfcd .FontName !=nil {_aafeb =append (_aafeb ,_gbfcd .FontName .String ());};if _gbfcd .FontFamily !=nil {_aafeb =append (_aafeb ,_gbfcd .FontFamily .String ());};if _gbfcd .fontFile !=nil {_aafeb =append (_aafeb ,_gbfcd .fontFile .String ());
};if _gbfcd ._gafg !=nil {_aafeb =append (_aafeb ,_gbfcd ._gafg .String ());};_aafeb =append (_aafeb ,_f .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gbfcd .FontFile3 !=nil ));return _f .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_eaf .Join (_aafeb ,"\u002c\u0020"));
};func _dfdga (_gdeca []*_cg .PdfObjectStream )*_cg .PdfObjectArray {if len (_gdeca )==0{return nil ;};_eefaa :=make ([]_cg .PdfObject ,0,len (_gdeca ));for _ ,_fegca :=range _gdeca {_eefaa =append (_eefaa ,_fegca );};return _cg .MakeArray (_eefaa ...);
};

// String returns the name of the colorspace (DeviceN).
func (_acde *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_cg .PdfObjectDictionary )(*PdfPageResources ,error ){_agcd :=NewPdfPageResources ();if _ecebd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ecebd !=nil {_agcd .ExtGState =_ecebd ;};if _fegga :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_fegga !=nil &&!_cg .IsNullObject (_fegga ){_agcd .ColorSpace =_fegga ;};if _bcge :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_bcge !=nil {_agcd .Pattern =_bcge ;};if _afeaad :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_afeaad !=nil {_agcd .Shading =_afeaad ;
};if _gdfgc :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_gdfgc !=nil {_agcd .XObject =_gdfgc ;};if _dedee :=_cg .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_dedee !=nil {_agcd .Font =_dedee ;};if _dgffff :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_dgffff !=nil {_agcd .ProcSet =_dgffff ;};if _dfcg :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dfcg !=nil {_agcd .Properties =_dfcg ;};return _agcd ,nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_efea *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_efea .ToPdfOutline ().PdfOutlineTreeNode ;};func (_gaff *PdfWriter )writeBytes (_faaeb []byte ){if _gaff ._dafgb !=nil {return ;};_fgeab ,_caea :=_gaff ._fcgdgb .Write (_faaeb );_gaff ._ebce +=int64 (_fgeab );
_gaff ._dafgb =_caea ;};

// ToPdfObject implements interface PdfModel.
func (_adee *PdfActionGoToE )ToPdfObject ()_cg .PdfObject {_adee .PdfAction .ToPdfObject ();_age :=_adee ._eab ;_ae :=_age .PdfObject .(*_cg .PdfObjectDictionary );_ae .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoToE )));if _adee .F !=nil {_ae .Set ("\u0046",_adee .F .ToPdfObject ());
};_ae .SetIfNotNil ("\u0044",_adee .D );_ae .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_adee .NewWindow );_ae .SetIfNotNil ("\u0054",_adee .T );return _age ;};

// SetVersion sets the PDF version of the output file.
func (_cgebb *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cgebb ._baefbc .Major =majorVersion ;_cgebb ._baefbc .Minor =minorVersion ;};

// GetBorderWidth returns the border style's width.
func (_debe *PdfBorderStyle )GetBorderWidth ()float64 {if _debe .W ==nil {return 1;};return *_debe .W ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _cg .PdfObject ;Mac _cg .PdfObject ;Unix _cg .PdfObject ;NewWindow _cg .PdfObject ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_bfeea *BorderStyle )GetPdfName ()string {switch *_bfeea {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;BitsPerFlag *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_ebgd *Outline )ToPdfObject ()_cg .PdfObject {return _ebgd .ToPdfOutline ().ToPdfObject ()};func _gbege (_bdcca *_cg .PdfObjectDictionary )(*PdfShadingType4 ,error ){_bffed :=PdfShadingType4 {};_gaaeb :=_bdcca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gaaeb ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_deea ,_fefdfg :=_gaaeb .(*_cg .PdfObjectInteger );if !_fefdfg {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gaaeb );
return nil ,_cg .ErrTypeError ;};_bffed .BitsPerCoordinate =_deea ;_gaaeb =_bdcca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gaaeb ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_deea ,_fefdfg =_gaaeb .(*_cg .PdfObjectInteger );if !_fefdfg {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gaaeb );
return nil ,_cg .ErrTypeError ;};_bffed .BitsPerComponent =_deea ;_gaaeb =_bdcca .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gaaeb ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_deea ,_fefdfg =_gaaeb .(*_cg .PdfObjectInteger );if !_fefdfg {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gaaeb );
return nil ,_cg .ErrTypeError ;};_bffed .BitsPerComponent =_deea ;_gaaeb =_bdcca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gaaeb ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecagf ,_fefdfg :=_gaaeb .(*_cg .PdfObjectArray );if !_fefdfg {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaaeb );
return nil ,_cg .ErrTypeError ;};_bffed .Decode =_ecagf ;_gaaeb =_bdcca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gaaeb ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bffed .Function =[]PdfFunction {};if _abbfa ,_bfcdb :=_gaaeb .(*_cg .PdfObjectArray );_bfcdb {for _ ,_ecbbd :=range _abbfa .Elements (){_aafbf ,_gbcba :=_ddccf (_ecbbd );if _gbcba !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbcba );
return nil ,_gbcba ;};_bffed .Function =append (_bffed .Function ,_aafbf );};}else {_edbeb ,_cdagcc :=_ddccf (_gaaeb );if _cdagcc !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdagcc );
return nil ,_cdagcc ;};_bffed .Function =append (_bffed .Function ,_edbeb );};return &_bffed ,nil ;};func _dbfg (_eecc *PdfPage )map[_cg .PdfObjectName ]_cg .PdfObject {_fac :=make (map[_cg .PdfObjectName ]_cg .PdfObject );if _eecc .Resources ==nil {return _fac ;
};if _eecc .Resources .Font !=nil {if _fgcc ,_dfca :=_cg .GetDict (_eecc .Resources .Font );_dfca {for _ ,_bgbf :=range _fgcc .Keys (){_fac [_bgbf ]=_fgcc .Get (_bgbf );};};};if _eecc .Resources .ExtGState !=nil {if _fdgc ,_ccgc :=_cg .GetDict (_eecc .Resources .ExtGState );
_ccgc {for _ ,_aagda :=range _fdgc .Keys (){_fac [_aagda ]=_fdgc .Get (_aagda );};};};if _eecc .Resources .XObject !=nil {if _abc ,_eebe :=_cg .GetDict (_eecc .Resources .XObject );_eebe {for _ ,_efae :=range _abc .Keys (){_fac [_efae ]=_abc .Get (_efae );
};};};if _eecc .Resources .Pattern !=nil {if _abda ,_ecge :=_cg .GetDict (_eecc .Resources .Pattern );_ecge {for _ ,_ecec :=range _abda .Keys (){_fac [_ecec ]=_abda .Get (_ecec );};};};if _eecc .Resources .Shading !=nil {if _gade ,_daag :=_cg .GetDict (_eecc .Resources .Shading );
_daag {for _ ,_bccga :=range _gade .Keys (){_fac [_bccga ]=_gade .Get (_bccga );};};};if _eecc .Resources .ProcSet !=nil {if _acc ,_acfb :=_cg .GetDict (_eecc .Resources .ProcSet );_acfb {for _ ,_fbde :=range _acc .Keys (){_fac [_fbde ]=_acc .Get (_fbde );
};};};if _eecc .Resources .Properties !=nil {if _afd ,_cgae :=_cg .GetDict (_eecc .Resources .Properties );_cgae {for _ ,_eebef :=range _afd .Keys (){_fac [_eebef ]=_afd .Get (_eebef );};};};return _fac ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ade :=NewPdfAction ();_fgbeg :=&PdfActionRendition {};_fgbeg .PdfAction =_ade ;_ade .SetContext (_fgbeg );return _fgbeg ;};func (_gggfg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gggfg .fontCommon };


// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_bcbad *pdfCIDFontType2 )ToPdfObject ()_cg .PdfObject {if _bcbad ._dgade ==nil {_bcbad ._dgade =&_cg .PdfIndirectObject {};};_eaag :=_bcbad .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_bcbad ._dgade .PdfObject =_eaag ;if _bcbad .CIDSystemInfo !=nil {_eaag .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_bcbad .CIDSystemInfo );};if _bcbad .DW !=nil {_eaag .Set ("\u0044\u0057",_bcbad .DW );};if _bcbad .DW2 !=nil {_eaag .Set ("\u0044\u0057\u0032",_bcbad .DW2 );
};if _bcbad .W !=nil {_eaag .Set ("\u0057",_bcbad .W );};if _bcbad .W2 !=nil {_eaag .Set ("\u0057\u0032",_bcbad .W2 );};if _bcbad .CIDToGIDMap !=nil {_eaag .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_bcbad .CIDToGIDMap );};return _bcbad ._dgade ;
};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_fabfd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _fabfd .RunesToCharcodeBytes ([]rune (str ));};

// StdFontName represents name of a standard font.
type StdFontName =_af .StdFontName ;

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gdce *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beef :=vals [0];if _beef < 0.0||_beef > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_beef );
return nil ,ErrColorOutOfRange ;};_gdgb :=vals [1];if _gdgb < 0.0||_gdgb > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdgb );return nil ,ErrColorOutOfRange ;
};_cbbe :=vals [2];if _cbbe < 0.0||_cbbe > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cbbe );return nil ,ErrColorOutOfRange ;};_egfaf :=vals [3];
if _egfaf < 0.0||_egfaf > 1.0{_bc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_egfaf );return nil ,ErrColorOutOfRange ;};_cbge :=NewPdfColorDeviceCMYK (_beef ,_gdgb ,_cbbe ,_egfaf );
return _cbge ,nil ;};func (_gcdc *PdfReader )flattenFieldsWithOpts (_bccb bool ,_ecddc FieldAppearanceGenerator ,_bcce *FieldFlattenOpts )error {if _bcce ==nil {_bcce =&FieldFlattenOpts {};};var _cbeaf bool ;_eece :=map[*PdfAnnotation ]bool {};{var _eebecg []*PdfField ;
_fefcc :=_gcdc .AcroForm ;if _fefcc !=nil {if _bcce .FilterFunc !=nil {_eebecg =_fefcc .filteredFields (_bcce .FilterFunc ,true );_cbeaf =_fefcc .Fields !=nil &&len (*_fefcc .Fields )> 0;}else {_eebecg =_fefcc .AllFields ();};};for _ ,_ccaec :=range _eebecg {for _ ,_affba :=range _ccaec .Annotations {_eece [_affba .PdfAnnotation ]=_ccaec .V !=nil ;
if _ecddc !=nil {_fdgb ,_acgf :=_ecddc .GenerateAppearanceDict (_fefcc ,_ccaec ,_affba );if _acgf !=nil {return _acgf ;};_affba .AP =_fdgb ;};};};};if _bccb {for _ ,_ebcbg :=range _gcdc .PageList {_bbag ,_cfba :=_ebcbg .GetAnnotations ();if _cfba !=nil {return _cfba ;
};for _ ,_adcca :=range _bbag {_eece [_adcca ]=true ;};};};for _ ,_aeba :=range _gcdc .PageList {var _babb []*PdfAnnotation ;if _ecddc !=nil {if _fbcd :=_ecddc .WrapContentStream (_aeba );_fbcd !=nil {return _fbcd ;};};_agaf ,_gadb :=_aeba .GetAnnotations ();
if _gadb !=nil {return _gadb ;};for _ ,_cbegb :=range _agaf {_bfgg ,_cagde :=_eece [_cbegb ];if !_cagde &&_bcce .AnnotFilterFunc !=nil {if _ ,_dgbf :=_cbegb .GetContext ().(*PdfAnnotationWidget );!_dgbf {_cagde =_bcce .AnnotFilterFunc (_cbegb );};};if !_cagde {_babb =append (_babb ,_cbegb );
continue ;};switch _cbegb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_deefe ,_eecba ,_fegf :=_becc (_cbegb );if _fegf !=nil {if !_bfgg {_bc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_fegf );
continue ;};if _deefe ==nil {continue ;};_fegab :=_aeba .Resources .GenerateXObjectName ();_aeba .Resources .SetXObjectFormByName (_fegab ,_deefe );_geee :=_bb .Min (_eecba .Llx ,_eecba .Urx );_cedfg :=_bb .Min (_eecba .Lly ,_eecba .Ury );var _aadg []string ;
_aadg =append (_aadg ,"\u0071");_aadg =append (_aadg ,_f .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_geee ,_cedfg ));
_aadg =append (_aadg ,_f .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_fegab .String ()));_aadg =append (_aadg ,"\u0051");_aaee :=_eaf .Join (_aadg ,"\u000a");_fegf =_aeba .AppendContentStream (_aaee );if _fegf !=nil {return _fegf ;};if _deefe .Resources !=nil {_dgddf ,_ggbd :=_cg .GetDict (_deefe .Resources .Font );
if _ggbd {for _ ,_gbacc :=range _dgddf .Keys (){if !_aeba .Resources .HasFontByName (_gbacc ){_aeba .Resources .SetFontByName (_gbacc ,_dgddf .Get (_gbacc ));};};};};};if len (_babb )> 0{_aeba ._abbce =_babb ;}else {_aeba ._abbce =[]*PdfAnnotation {};};
};if !_cbeaf {_gcdc .AcroForm =nil ;};return nil ;};func _ffaba ()*modelManager {_agaaa :=modelManager {};_agaaa ._daagb =map[PdfModel ]_cg .PdfObject {};_agaaa ._cdcfc =map[_cg .PdfObject ]PdfModel {};return &_agaaa ;};

// HasXObjectByName checks if has XObject resource by name.
func (_fbccd *PdfPage )HasXObjectByName (name _cg .PdfObjectName )bool {_bfea ,_gdaaf :=_fbccd .Resources .XObject .(*_cg .PdfObjectDictionary );if !_gdaaf {return false ;};if _cfga :=_bfea .Get (name );_cfga !=nil {return true ;};return false ;};func (_gaea *PdfReader )newPdfAnnotationScreenFromDict (_cad *_cg .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bfg :=PdfAnnotationScreen {};
_bfg .T =_cad .Get ("\u0054");_bfg .MK =_cad .Get ("\u004d\u004b");_bfg .A =_cad .Get ("\u0041");_bfg .AA =_cad .Get ("\u0041\u0041");return &_bfg ,nil ;};var _ pdfFont =(*pdfFontType3 )(nil );func (_bbfbd *PdfReader )newPdfSignatureFromIndirect (_fbefa *_cg .PdfIndirectObject )(*PdfSignature ,error ){_feged ,_cgda :=_fbefa .PdfObject .(*_cg .PdfObjectDictionary );
if !_cgda {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _dgdf ,_bgaca :=_bbfbd ._ecgd .GetModelFromPrimitive (_fbefa ).(*PdfSignature );_bgaca {return _dgdf ,nil ;};_aagg :=&PdfSignature {};_aagg ._dcfef =_fbefa ;_aagg .Type ,_ =_cg .GetName (_feged .Get ("\u0054\u0079\u0070\u0065"));
_aagg .Filter ,_cgda =_cg .GetName (_feged .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cgda {_bc .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_aagg .SubFilter ,_ =_cg .GetName (_feged .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_aagg .Contents ,_cgda =_cg .GetString (_feged .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cgda {_bc .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_aagg .Cert =_feged .Get ("\u0043\u0065\u0072\u0074");_aagg .ByteRange ,_ =_cg .GetArray (_feged .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_aagg .Reference ,_ =_cg .GetArray (_feged .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_aagg .Changes ,_ =_cg .GetArray (_feged .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_aagg .Name ,_ =_cg .GetString (_feged .Get ("\u004e\u0061\u006d\u0065"));_aagg .M ,_ =_cg .GetString (_feged .Get ("\u004d"));_aagg .Location ,_ =_cg .GetString (_feged .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_aagg .Reason ,_ =_cg .GetString (_feged .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_aagg .ContactInfo ,_ =_cg .GetString (_feged .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_aagg .R ,_ =_cg .GetInt (_feged .Get ("\u0052"));
_aagg .V ,_ =_cg .GetInt (_feged .Get ("\u0056"));_aagg .PropBuild ,_ =_cg .GetDict (_feged .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_aagg .PropAuthTime ,_ =_cg .GetInt (_feged .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_aagg .PropAuthType ,_ =_cg .GetName (_feged .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _aagg ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_cec .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_cec .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_cec .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_cgeg *PdfAppender ;_cbaeg *DSS ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _cg .PdfObject )(*PdfOutputIntent ,error ){_eddce :=&PdfOutputIntent {};if _ededb :=_eddce .ParsePdfObject (object );_ededb !=nil {return nil ,_ededb ;};return _eddce ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_cgbg *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func _edgc (_ccabd *_cg .PdfIndirectObject )(*PdfOutline ,error ){_cdagb ,_dbbf :=_ccabd .PdfObject .(*_cg .PdfObjectDictionary );if !_dbbf {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dbefbb :=NewPdfOutline ();if _dddbg :=_cdagb .Get ("\u0054\u0079\u0070\u0065");_dddbg !=nil {_cded ,_ecbb :=_dddbg .(*_cg .PdfObjectName );if _ecbb {if *_cded !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_cded );
};};};if _ebdab :=_cdagb .Get ("\u0043\u006f\u0075n\u0074");_ebdab !=nil {_cfeg ,_aaca :=_cg .GetNumberAsInt64 (_ebdab );if _aaca !=nil {return nil ,_aaca ;};_dbefbb .Count =&_cfeg ;};return _dbefbb ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bbcb :=NewPdfAnnotation ();_gbcb :=&PdfAnnotationRichMedia {};_gbcb .PdfAnnotation =_bbcb ;_bbcb .SetContext (_gbcb );return _gbcb ;};type fontFile struct{_geeae string ;_gdced string ;_eadfe _ad .SimpleEncoder ;
};type modelManager struct{_daagb map[PdfModel ]_cg .PdfObject ;_cdcfc map[_cg .PdfObject ]PdfModel ;};func (_ebdgg *PdfReader )newPdfActionSetOCGStateFromDict (_bbbd *_cg .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bbbd .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bbbd .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _a .Time ){_ebfgf .Lock ();defer _ebfgf .Unlock ();_cabbd =creationDate ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ffegf *_cg .PdfIndirectObject ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_feege *LTV )generateVRIKey (_efec *PdfSignature )(string ,error ){_eggda ,_bbbb :=_dffg (_efec .Contents .Bytes ());if _bbbb !=nil {return "",_bbbb ;};return _eaf .ToUpper (_g .EncodeToString (_eggda )),nil ;};func (_gacca *PdfWriter )writeTrailer (_bbgaa int ){_gacca .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _fcdccd :=0;_fcdccd <=_bbgaa ;{for ;_fcdccd <=_bbgaa ;_fcdccd ++{_bcbdfa ,_eeadg :=_gacca ._eebbe [_fcdccd ];if _eeadg &&(!_gacca ._egaa ||_gacca ._egaa &&(_bcbdfa .Type ==1&&_bcbdfa .Offset >=_gacca ._gcgea ||_bcbdfa .Type ==0)){break ;};};var _aabg int ;
for _aabg =_fcdccd +1;_aabg <=_bbgaa ;_aabg ++{_gcfa ,_aebbc :=_gacca ._eebbe [_aabg ];if _aebbc &&(!_gacca ._egaa ||_gacca ._egaa &&(_gcfa .Type ==1&&_gcfa .Offset > _gacca ._gcgea )){continue ;};break ;};_gfeff :=_f .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_fcdccd ,_aabg -_fcdccd );
_gacca .writeString (_gfeff );for _fcda :=_fcdccd ;_fcda < _aabg ;_fcda ++{_bgdfd :=_gacca ._eebbe [_fcda ];switch _bgdfd .Type {case 0:_gfeff =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_gacca .writeString (_gfeff );
case 1:_gfeff =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bgdfd .Offset ,0);_gacca .writeString (_gfeff );};};_fcdccd =_aabg +1;};_afead :=_cg .MakeDict ();_afead .Set ("\u0049\u006e\u0066\u006f",_gacca ._gfecf );
_afead .Set ("\u0052\u006f\u006f\u0074",_gacca ._fffdf );_afead .Set ("\u0053\u0069\u007a\u0065",_cg .MakeInteger (int64 (_bbgaa +1)));if _gacca ._egaa &&_gacca ._ccfbe > 0{_afead .Set ("\u0050\u0072\u0065\u0076",_cg .MakeInteger (_gacca ._ccfbe ));};if _gacca ._gagda !=nil {_afead .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gacca ._dcceb );
};if _gacca ._fegea ==nil &&_gacca ._gcccf !=""&&_gacca ._efbb !=""{_gacca ._fegea =_cg .MakeArray (_cg .MakeHexString (_gacca ._gcccf ),_cg .MakeHexString (_gacca ._efbb ));};if _gacca ._fegea !=nil {_afead .Set ("\u0049\u0044",_gacca ._fegea );_bc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gacca ._fegea );
};_gacca .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gacca .writeString (_afead .WriteString ());_gacca .writeString ("\u000a");};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gabfc *VRI )ToPdfObject ()*_cg .PdfObjectDictionary {_cfbcg :=_cg .MakeDict ();_cfbcg .SetIfNotNil (_cg .PdfObjectName ("\u0043\u0065\u0072\u0074"),_dfdga (_gabfc .Cert ));_cfbcg .SetIfNotNil (_cg .PdfObjectName ("\u004f\u0043\u0053\u0050"),_dfdga (_gabfc .OCSP ));
_cfbcg .SetIfNotNil (_cg .PdfObjectName ("\u0043\u0052\u004c"),_dfdga (_gabfc .CRL ));_cfbcg .SetIfNotNil ("\u0054\u0055",_gabfc .TU );_cfbcg .SetIfNotNil ("\u0054\u0053",_gabfc .TS );return _cfbcg ;};

// ToPdfObject implements interface PdfModel.
func (_gaca *PdfActionThread )ToPdfObject ()_cg .PdfObject {_gaca .PdfAction .ToPdfObject ();_ecd :=_gaca ._eab ;_bbf :=_ecd .PdfObject .(*_cg .PdfObjectDictionary );_bbf .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeThread )));if _gaca .F !=nil {_bbf .Set ("\u0046",_gaca .F .ToPdfObject ());
};_bbf .SetIfNotNil ("\u0044",_gaca .D );_bbf .SetIfNotNil ("\u0042",_gaca .B );return _ecd ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_baeb []_cg .PdfObject )([]_cg .PdfObject ,error );};func _dffg (_fcgb []byte )([]byte ,error ){_cgedb :=_gd .New ();if _ ,_aeeee :=_eda .Copy (_cgedb ,_cd .NewReader (_fcgb ));_aeeee !=nil {return nil ,_aeeee ;};return _cgedb .Sum (nil ),nil ;
};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_bcab *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_fgdag :=_df .NewReader (img .getBase ());_fgbcf :=_dg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ccaea :=_df .NewWriter (_fgbcf );
_faeb :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_gadca :=make ([]uint32 ,3);var (_cgaef error ;_geb ,_deeb ,_gffc ,_aade ,_dcca ,_dcdb float64 ;);for {_cgaef =_fgdag .ReadSamples (_gadca );if _cgaef ==_eda .EOF {break ;}else if _cgaef !=nil {return img ,_cgaef ;
};_geb =float64 (_gadca [0])/_faeb ;_deeb =float64 (_gadca [1])/_faeb ;_gffc =float64 (_gadca [2])/_faeb ;_aade =_bcab .Matrix [0]*_bb .Pow (_geb ,_bcab .Gamma [0])+_bcab .Matrix [3]*_bb .Pow (_deeb ,_bcab .Gamma [1])+_bcab .Matrix [6]*_bb .Pow (_gffc ,_bcab .Gamma [2]);
_dcca =_bcab .Matrix [1]*_bb .Pow (_geb ,_bcab .Gamma [0])+_bcab .Matrix [4]*_bb .Pow (_deeb ,_bcab .Gamma [1])+_bcab .Matrix [7]*_bb .Pow (_gffc ,_bcab .Gamma [2]);_dcdb =_bcab .Matrix [2]*_bb .Pow (_geb ,_bcab .Gamma [0])+_bcab .Matrix [5]*_bb .Pow (_deeb ,_bcab .Gamma [1])+_bcab .Matrix [8]*_bb .Pow (_gffc ,_bcab .Gamma [2]);
_geb =3.240479*_aade +-1.537150*_dcca +-0.498535*_dcdb ;_deeb =-0.969256*_aade +1.875992*_dcca +0.041556*_dcdb ;_gffc =0.055648*_aade +-0.204043*_dcca +1.057311*_dcdb ;_geb =_bb .Min (_bb .Max (_geb ,0),1.0);_deeb =_bb .Min (_bb .Max (_deeb ,0),1.0);_gffc =_bb .Min (_bb .Max (_gffc ,0),1.0);
_gadca [0]=uint32 (_geb *_faeb );_gadca [1]=uint32 (_deeb *_faeb );_gadca [2]=uint32 (_gffc *_faeb );if _cgaef =_ccaea .WriteSamples (_gadca );_cgaef !=nil {return img ,_cgaef ;};};return _fdbed (&_fgbcf ),nil ;};func _gcge (_beace ,_cdfc string )string {if _eaf .Contains (_beace ,"\u002b"){_ggad :=_eaf .Split (_beace ,"\u002b");
if len (_ggad )==2{_beace =_ggad [1];};};return _cdfc +"\u002b"+_beace ;};func _dgec (_dfaga *_cg .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dddc :=&PdfFieldChoice {};_dddc .Opt ,_ =_cg .GetArray (_dfaga .Get ("\u004f\u0070\u0074"));_dddc .TI ,_ =_cg .GetInt (_dfaga .Get ("\u0054\u0049"));
_dddc .I ,_ =_cg .GetArray (_dfaga .Get ("\u0049"));return _dddc ,nil ;};func (_deaab *PdfAcroForm )fillImageWithAppearance (_efdb FieldImageProvider ,_cdffd FieldAppearanceGenerator )error {if _deaab ==nil {return nil ;};_adabc ,_gageae :=_efdb .FieldImageValues ();
if _gageae !=nil {return _gageae ;};for _ ,_fdab :=range _deaab .AllFields (){_cdcd :=_fdab .PartialName ();_bgefa ,_edbb :=_adabc [_cdcd ];if !_edbb {if _cbbge ,_bfcg :=_fdab .FullName ();_bfcg ==nil {_bgefa ,_edbb =_adabc [_cbbge ];};};if !_edbb {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cdcd );
continue ;};switch _fgaag :=_fdab .GetContext ().(type ){case *PdfFieldButton :if _fgaag .IsPush (){_fgaag .SetFillImage (_bgefa );};};if _cdffd ==nil {continue ;};for _ ,_gcaf :=range _fdab .Annotations {_geaf ,_agfgf :=_cdffd .GenerateAppearanceDict (_deaab ,_fdab ,_gcaf );
if _agfgf !=nil {return _agfgf ;};_gcaf .AP =_geaf ;_gcaf .ToPdfObject ();};};return nil ;};

// SetLocation sets the `Location` field of the signature.
func (_adabfa *PdfSignature )SetLocation (location string ){_adabfa .Location =_cg .MakeString (location );};

// String returns a string representation of the field.
func (_deae *PdfField )String ()string {if _edebd ,_fdaf :=_deae .ToPdfObject ().(*_cg .PdfIndirectObject );_fdaf {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_deae ._bffcb ,_edebd .PdfObject .String ());};return "";};

// A returns the value of the A component of the color.
func (_fbcf *PdfColorLab )A ()float64 {return _fbcf [1]};func _gfbd (_gdebc *PdfPage ){_eabagd :=_ebd .GetLicenseKey ();if _eabagd !=nil &&_eabagd .IsLicensed (){return ;};_fcffe :=_cg .PdfObjectName ("\u0055\u0046\u0031");if !_gdebc .Resources .HasFontByName (_fcffe ){_gdebc .Resources .SetFontByName (_fcffe ,DefaultFont ().ToPdfObject ());
};var _bdgad []string ;_bdgad =append (_bdgad ,"\u0071");_bdgad =append (_bdgad ,"\u0042\u0054");_bdgad =append (_bdgad ,_f .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_fcffe .String ()));_bdgad =append (_bdgad ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_bdgad =append (_bdgad ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_dfcfb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_bdgad =append (_bdgad ,_f .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dfcfb ));_bdgad =append (_bdgad ,"\u0045\u0054");_bdgad =append (_bdgad ,"\u0051");_ebbge :=_eaf .Join (_bdgad ,"\u000a");_gdebc .AddContentStreamByString (_ebbge );_gdebc .ToPdfObject ();
};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_dgfa *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_bc .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_bc .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_bc .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_bc .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_aee ,_dbeb :=_dg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cfdb ,img ._abbba );if _dbeb !=nil {return Image {},_dbeb ;};_fbac ,_dbeb :=_dg .NRGBAConverter .Convert (_aee );if _dbeb !=nil {return Image {},_dbeb ;
};return _fdbed (_fbac .Base ()),nil ;};

// IsValid checks if the given pdf output intent type is valid.
func (_dbde PdfOutputIntentType )IsValid ()bool {return _dbde >=PdfOutputIntentTypeA1 &&_dbde <=PdfOutputIntentTypeX ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_gbgg *PdfPageResources )SetFontByName (keyName _cg .PdfObjectName ,obj _cg .PdfObject )error {if _gbgg .Font ==nil {_gbgg .Font =_cg .MakeDict ();};_fddca ,_efcff :=_cg .TraceToDirectObject (_gbgg .Font ).(*_cg .PdfObjectDictionary );if !_efcff {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cg .TraceToDirectObject (_gbgg .Font ));
return _cg .ErrTypeError ;};_fddca .Set (keyName ,obj );return nil ;};func (_cadaa *PdfWriter )addObjects (_fbdfg _cg .PdfObject )error {_bc .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _egabg ,_faeeg :=_fbdfg .(*_cg .PdfIndirectObject );
_faeeg {_bc .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_bc .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fbdfg ,_egabg );_bc .Log .Trace ("\u002d\u0020\u0025\u0073",_egabg .PdfObject );if _cadaa .addObject (_egabg ){_fbeag :=_cadaa .addObjects (_egabg .PdfObject );
if _fbeag !=nil {return _fbeag ;};};return nil ;};if _cbbgb ,_cfeba :=_fbdfg .(*_cg .PdfObjectStream );_cfeba {_bc .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_bc .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fbdfg ,_fbdfg );if _cadaa .addObject (_cbbgb ){_cacaa :=_cadaa .addObjects (_cbbgb .PdfObjectDictionary );
if _cacaa !=nil {return _cacaa ;};};return nil ;};if _aabbb ,_cfcca :=_fbdfg .(*_cg .PdfObjectDictionary );_cfcca {_bc .Log .Trace ("\u0044\u0069\u0063\u0074");_bc .Log .Trace ("\u002d\u0020\u0025\u0073",_fbdfg );for _ ,_fbgb :=range _aabbb .Keys (){_ggbad :=_aabbb .Get (_fbgb );
if _gebcg ,_fbffb :=_ggbad .(*_cg .PdfObjectReference );_fbffb {_ggbad =_gebcg .Resolve ();_aabbb .Set (_fbgb ,_ggbad );};if _fbgb !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ecced :=_cadaa .addObjects (_ggbad );_ecced !=nil {return _ecced ;};}else {if _ ,_gggfe :=_ggbad .(*_cg .PdfObjectNull );
_gggfe {continue ;};if _cfdfb :=_cadaa .hasObject (_ggbad );!_cfdfb {_bc .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ggbad ,_ggbad ,_ggbad );
_cadaa ._adbec [_ggbad ]=append (_cadaa ._adbec [_ggbad ],_aabbb );};};};return nil ;};if _ecfeb ,_cggga :=_fbdfg .(*_cg .PdfObjectArray );_cggga {_bc .Log .Trace ("\u0041\u0072\u0072a\u0079");_bc .Log .Trace ("\u002d\u0020\u0025\u0073",_fbdfg );if _ecfeb ==nil {return _cc .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _ddcbg ,_acdeg :=range _ecfeb .Elements (){if _aadf ,_cedaa :=_acdeg .(*_cg .PdfObjectReference );_cedaa {_acdeg =_aadf .Resolve ();_ecfeb .Set (_ddcbg ,_acdeg );};if _dgce :=_cadaa .addObjects (_acdeg );_dgce !=nil {return _dgce ;};};return nil ;
};if _ ,_gaccd :=_fbdfg .(*_cg .PdfObjectReference );_gaccd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fbdfg );
return _cc .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// SetFlag sets the flag for the field.
func (_dfeb *PdfField )SetFlag (flag FieldFlag ){_dfeb .Ff =_cg .MakeInteger (int64 (flag ))};func _ggfge (_bdae *PdfField ,_gegfcf _cg .PdfObject )error {switch _bdae .GetContext ().(type ){case *PdfFieldText :switch _aaebg :=_gegfcf .(type ){case *_cg .PdfObjectName :_bgfed :=_aaebg ;
_bc .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_bgfed .String ());
_bdae .V =_cg .MakeEncodedString (_aaebg .String (),true );case *_cg .PdfObjectString :_bdae .V =_cg .MakeEncodedString (_aaebg .String (),true );default:_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_aaebg ,_aaebg );
};case *PdfFieldButton :switch _gegfcf .(type ){case *_cg .PdfObjectName :if len (_gegfcf .String ())> 0{_bdae .V =_gegfcf ;_fcag (_bdae ,_gegfcf );};case *_cg .PdfObjectString :if len (_gegfcf .String ())> 0{_bdae .V =_cg .MakeName (_gegfcf .String ());
_fcag (_bdae ,_bdae .V );};default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bdae .PartialName (),_gegfcf );_bdae .V =_gegfcf ;
};case *PdfFieldChoice :switch _gegfcf .(type ){case *_cg .PdfObjectName :if len (_gegfcf .String ())> 0{_bdae .V =_cg .MakeString (_gegfcf .String ());_fcag (_bdae ,_gegfcf );};case *_cg .PdfObjectString :if len (_gegfcf .String ())> 0{_bdae .V =_gegfcf ;
_fcag (_bdae ,_cg .MakeName (_gegfcf .String ()));};default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bdae .PartialName (),_gegfcf );
_bdae .V =_gegfcf ;};case *PdfFieldSignature :_bc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bdae .PartialName (),_gegfcf );
};return nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ParserMetadata gets the parser  metadata.
func (_gcad *CompliancePdfReader )ParserMetadata ()_cg .ParserMetadata {if _gcad ._dea ==(_cg .ParserMetadata {}){_gcad ._dea ,_ =_gcad ._adfcb .ParserMetadata ();};return _gcad ._dea ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_bbbf DefaultImageHandler )NewImageFromGoImage (goimg _fe .Image )(*Image ,error ){_ebgb ,_cgcfg :=_dg .FromGoImage (goimg );if _cgcfg !=nil {return nil ,_cgcfg ;};_bdegf :=_fdbed (_ebgb .Base ());return &_bdegf ,nil ;};func (_geda *PdfReader )lookupPageByObject (_fgfada _cg .PdfObject )(*PdfPage ,error ){return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func (_decc *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ToPdfObject implements interface PdfModel.
func (_fdd *PdfBorderStyle )ToPdfObject ()_cg .PdfObject {_gddb :=_cg .MakeDict ();if _fdd ._ffcc !=nil {if _dee ,_eaea :=_fdd ._ffcc .(*_cg .PdfIndirectObject );_eaea {_dee .PdfObject =_gddb ;};};_gddb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fdd .W !=nil {_gddb .Set ("\u0057",_cg .MakeFloat (*_fdd .W ));};if _fdd .S !=nil {_gddb .Set ("\u0053",_cg .MakeName (_fdd .S .GetPdfName ()));};if _fdd .D !=nil {_gddb .Set ("\u0044",_cg .MakeArrayFromIntegers (*_fdd .D ));};if _fdd ._ffcc !=nil {return _fdd ._ffcc ;
};return _gddb ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bfdg FieldFlag )Has (fl FieldFlag )bool {return (_bfdg .Mask ()&fl .Mask ())> 0};func (_ffec *PdfSignature )extractChainFromCert ()([]*_eb .Certificate ,error ){var _dcgeb *_cg .PdfObjectArray ;switch _gdcfa :=_ffec .Cert .(type ){case *_cg .PdfObjectString :_dcgeb =_cg .MakeArray (_gdcfa );
case *_cg .PdfObjectArray :_dcgeb =_gdcfa ;default:return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gdcfa );
};var _acdbc _cd .Buffer ;for _ ,_ccdgc :=range _dcgeb .Elements (){_dgadg ,_fdacg :=_cg .GetString (_ccdgc );if !_fdacg {return nil ,_f .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_ccdgc );
};if _ ,_aafcd :=_acdbc .Write (_dgadg .Bytes ());_aafcd !=nil {return nil ,_aafcd ;};};return _eb .ParseCertificates (_acdbc .Bytes ());};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_bbee *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbee .Alternate ==nil {_bc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bbee .N ==1{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cgbdg :=NewPdfColorspaceDeviceGray ();return _cgbdg .ColorToRGB (color );}else if _bbee .N ==3{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _bbee .N ==4{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_febg :=NewPdfColorspaceDeviceCMYK ();return _febg .ColorToRGB (color );}else {return nil ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bbee );
return _bbee .Alternate .ColorToRGB (color );};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_acgfb *pdfFontSimple )SetEncoder (encoder _ad .TextEncoder ){_acgfb ._bfcd =encoder };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgaceg *PdfShadingType5 )ToPdfObject ()_cg .PdfObject {_cgaceg .PdfShading .ToPdfObject ();_bdff ,_dfbee :=_cgaceg .getShadingDict ();if _dfbee !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgaceg .BitsPerCoordinate !=nil {_bdff .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgaceg .BitsPerCoordinate );};if _cgaceg .BitsPerComponent !=nil {_bdff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgaceg .BitsPerComponent );
};if _cgaceg .VerticesPerRow !=nil {_bdff .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cgaceg .VerticesPerRow );};if _cgaceg .Decode !=nil {_bdff .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgaceg .Decode );
};if _cgaceg .Function !=nil {if len (_cgaceg .Function )==1{_bdff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgaceg .Function [0].ToPdfObject ());}else {_eaadb :=_cg .MakeArray ();for _ ,_ggedd :=range _cgaceg .Function {_eaadb .Append (_ggedd .ToPdfObject ());
};_bdff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eaadb );};};return _cgaceg ._cagea ;};func (_cbc *PdfReader )newPdfAnnotationPopupFromDict (_dgc *_cg .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_eeef :=PdfAnnotationPopup {};_eeef .Parent =_dgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_eeef .Open =_dgc .Get ("\u004f\u0070\u0065\u006e");return &_eeef ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ecf *_cg .PdfIndirectObject ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _cg .PdfObject ;PreserveRB _cg .PdfObject ;};

// ToPdfObject returns a stream object.
func (_fddfc *XObjectImage )ToPdfObject ()_cg .PdfObject {_fbdae :=_fddfc ._cdfcc ;_ecabag :=_fbdae .PdfObjectDictionary ;if _fddfc .Filter !=nil {_ecabag =_fddfc .Filter .MakeStreamDict ();_fbdae .PdfObjectDictionary =_ecabag ;};_ecabag .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ecabag .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0049\u006d\u0061g\u0065"));_ecabag .Set ("\u0057\u0069\u0064t\u0068",_cg .MakeInteger (*(_fddfc .Width )));_ecabag .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cg .MakeInteger (*(_fddfc .Height )));
if _fddfc .BitsPerComponent !=nil {_ecabag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cg .MakeInteger (*(_fddfc .BitsPerComponent )));};if _fddfc .ColorSpace !=nil {_ecabag .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fddfc .ColorSpace .ToPdfObject ());
};_ecabag .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_fddfc .Intent );_ecabag .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_fddfc .ImageMask );_ecabag .SetIfNotNil ("\u004d\u0061\u0073\u006b",_fddfc .Mask );_dbgdb :=_ecabag .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _fddfc .Decode ==nil &&_dbgdb {_ecabag .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _fddfc .Decode !=nil {_ecabag .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fddfc .Decode );};_ecabag .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_fddfc .Interpolate );
_ecabag .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_fddfc .Alternatives );_ecabag .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_fddfc .SMask );_ecabag .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_fddfc .SMaskInData );
_ecabag .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fddfc .Matte );_ecabag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fddfc .Name );_ecabag .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fddfc .StructParent );_ecabag .SetIfNotNil ("\u0049\u0044",_fddfc .ID );
_ecabag .SetIfNotNil ("\u004f\u0050\u0049",_fddfc .OPI );_ecabag .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fddfc .Metadata );_ecabag .SetIfNotNil ("\u004f\u0043",_fddfc .OC );_ecabag .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_fddfc .Stream ))));
_fbdae .Stream =_fddfc .Stream ;return _fbdae ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ebffc :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ebffc ;};

// ToPdfObject implements interface PdfModel.
func (_badg *PdfAnnotation3D )ToPdfObject ()_cg .PdfObject {_badg .PdfAnnotation .ToPdfObject ();_bada :=_badg ._bgf ;_daeb :=_bada .PdfObject .(*_cg .PdfObjectDictionary );_daeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0033\u0044"));
_daeb .SetIfNotNil ("\u0033\u0044\u0044",_badg .T3DD );_daeb .SetIfNotNil ("\u0033\u0044\u0056",_badg .T3DV );_daeb .SetIfNotNil ("\u0033\u0044\u0041",_badg .T3DA );_daeb .SetIfNotNil ("\u0033\u0044\u0049",_badg .T3DI );_daeb .SetIfNotNil ("\u0033\u0044\u0042",_badg .T3DB );
return _bada ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_aabee ,_ceega :=_ce .Open (filePath );if _ceega !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ceega );
return nil ,_ceega ;};defer _aabee .Close ();return NewPdfFontFromTTF (_aabee );};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _cg .PdfObject ;Movie _cg .PdfObject ;A _cg .PdfObject ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_abfa :=NewPdfOutline ();_abfa ._egbcb =&_abfa ;return _abfa };

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gab :=NewPdfAction ();_cee :=&PdfActionNamed {};_cee .PdfAction =_gab ;_gab .SetContext (_cee );return _cee ;};

// MergePageWith appends page content to source Pdf file page content.
func (_fggd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_feac :=pageNum -1;var _fccad *PdfPage ;for _bddb ,_dbfc :=range _fggd ._gccd {if _bddb ==_feac {_fccad =_dbfc ;};};if _fccad ==nil {return _f .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _fccad ._afeaa !=nil &&_fccad ._afeaa .GetParser ()==_fggd ._cbba ._adfcb {_fccad =_fccad .Duplicate ();_fggd ._gccd [_feac ]=_fccad ;};page =page .Duplicate ();_gfbd (page );_cgbe :=_dbfg (_fccad );_abfdb :=_dbfg (page );_ecgf :=make (map[_cg .PdfObjectName ]_cg .PdfObjectName );
for _abdae :=range _abfdb {if _ ,_dfag :=_cgbe [_abdae ];_dfag {for _afde :=1;true ;_afde ++{_feb :=_cg .PdfObjectName (string (_abdae )+_ge .Itoa (_afde ));if _ ,_fdgf :=_cgbe [_feb ];!_fdgf {_ecgf [_abdae ]=_feb ;break ;};};};};_gbaab ,_aabb :=page .GetContentStreams ();
if _aabb !=nil {return _aabb ;};_cfca ,_aabb :=_fccad .GetContentStreams ();if _aabb !=nil {return _aabb ;};for _bbca ,_ceac :=range _gbaab {for _cfg ,_fafe :=range _ecgf {_ceac =_eaf .Replace (_ceac ,"\u002f"+string (_cfg ),"\u002f"+string (_fafe ),-1);
};_gbaab [_bbca ]=_ceac ;};_cfca =append (_cfca ,_gbaab ...);if _afeb :=_fccad .SetContentStreams (_cfca ,_cg .NewFlateEncoder ());_afeb !=nil {return _afeb ;};_fccad ._abbce =append (_fccad ._abbce ,page ._abbce ...);if _fccad .Resources ==nil {_fccad .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_fccad .Resources .Font =_fggd .mergeResources (_fccad .Resources .Font ,page .Resources .Font ,_ecgf );_fccad .Resources .XObject =_fggd .mergeResources (_fccad .Resources .XObject ,page .Resources .XObject ,_ecgf );_fccad .Resources .Properties =_fggd .mergeResources (_fccad .Resources .Properties ,page .Resources .Properties ,_ecgf );
if _fccad .Resources .ProcSet ==nil {_fccad .Resources .ProcSet =page .Resources .ProcSet ;};_fccad .Resources .Shading =_fggd .mergeResources (_fccad .Resources .Shading ,page .Resources .Shading ,_ecgf );_fccad .Resources .ExtGState =_fggd .mergeResources (_fccad .Resources .ExtGState ,page .Resources .ExtGState ,_ecgf );
};_ecab ,_aabb :=_fccad .GetMediaBox ();if _aabb !=nil {return _aabb ;};_bcae ,_aabb :=page .GetMediaBox ();if _aabb !=nil {return _aabb ;};var _eeca bool ;if _ecab .Llx > _bcae .Llx {_ecab .Llx =_bcae .Llx ;_eeca =true ;};if _ecab .Lly > _bcae .Lly {_ecab .Lly =_bcae .Lly ;
_eeca =true ;};if _ecab .Urx < _bcae .Urx {_ecab .Urx =_bcae .Urx ;_eeca =true ;};if _ecab .Ury < _bcae .Ury {_ecab .Ury =_bcae .Ury ;_eeca =true ;};if _eeca {_fccad .MediaBox =_ecab ;};return nil ;};

// HasFontByName checks if has font resource by name.
func (_agbec *PdfPage )HasFontByName (name _cg .PdfObjectName )bool {_egafb ,_dfbce :=_agbec .Resources .Font .(*_cg .PdfObjectDictionary );if !_dfbce {return false ;};if _fcgc :=_egafb .Get (name );_fcgc !=nil {return true ;};return false ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bbfb []byte ;_fagbf []uint32 ;_affge *_cg .PdfObjectStream ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dbef *_cg .PdfIndirectObject ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_cg .PdfObjectString ;Author *_cg .PdfObjectString ;Subject *_cg .PdfObjectString ;Keywords *_cg .PdfObjectString ;Creator *_cg .PdfObjectString ;Producer *_cg .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_cg .PdfObjectName ;
_baagc *_cg .PdfObjectDictionary ;};func _fdbed (_cdaga *_dg .ImageBase )(_cagb Image ){_cagb .Width =int64 (_cdaga .Width );_cagb .Height =int64 (_cdaga .Height );_cagb .BitsPerComponent =int64 (_cdaga .BitsPerComponent );_cagb .ColorComponents =_cdaga .ColorComponents ;
_cagb .Data =_cdaga .Data ;_cagb ._abbba =_cdaga .Decode ;_cagb ._cfdb =_cdaga .Alpha ;return _cagb ;};func (_fed *PdfReader )newPdfAnnotationWidgetFromDict (_ddge *_cg .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_eea :=PdfAnnotationWidget {};
_eea .H =_ddge .Get ("\u0048");_eea .MK =_ddge .Get ("\u004d\u004b");_eea .A =_ddge .Get ("\u0041");_eea .AA =_ddge .Get ("\u0041\u0041");_eea .BS =_ddge .Get ("\u0042\u0053");_eea .Parent =_ddge .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_eea ,nil ;
};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ecaf *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_adde *PdfReader )newPdfOutlineItemFromIndirectObject (_dfagc *_cg .PdfIndirectObject )(*PdfOutlineItem ,error ){_feee ,_gcdcc :=_dfagc .PdfObject .(*_cg .PdfObjectDictionary );
if !_gcdcc {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fcdfc :=NewPdfOutlineItem ();_fbabg :=_feee .Get ("\u0054\u0069\u0074l\u0065");
if _fbabg ==nil {return nil ,_f .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_adce ,_bddfe :=_cg .GetString (_fbabg );if !_bddfe {return nil ,_f .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_fbabg );};_fcdfc .Title =_adce ;if _baebc :=_feee .Get ("\u0043\u006f\u0075n\u0074");
_baebc !=nil {_cfabe ,_bbfa :=_baebc .(*_cg .PdfObjectInteger );if !_bbfa {return nil ,_f .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_baebc );};_ffcf :=int64 (*_cfabe );
_fcdfc .Count =&_ffcf ;};if _cbbfb :=_feee .Get ("\u0044\u0065\u0073\u0074");_cbbfb !=nil {_fcdfc .Dest =_cg .ResolveReference (_cbbfb );if !_adde ._ebebf {_cacgd :=_adde .traverseObjectData (_fcdfc .Dest );if _cacgd !=nil {return nil ,_cacgd ;};};};if _eeada :=_feee .Get ("\u0041");
_eeada !=nil {_fcdfc .A =_cg .ResolveReference (_eeada );if !_adde ._ebebf {_bfff :=_adde .traverseObjectData (_fcdfc .A );if _bfff !=nil {return nil ,_bfff ;};};};if _daedf :=_feee .Get ("\u0053\u0045");_daedf !=nil {_fcdfc .SE =nil ;};if _bgcba :=_feee .Get ("\u0043");
_bgcba !=nil {_fcdfc .C =_cg .ResolveReference (_bgcba );};if _gccb :=_feee .Get ("\u0046");_gccb !=nil {_fcdfc .F =_cg .ResolveReference (_gccb );};return _fcdfc ,nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_daeg *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_gbfce *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gbfce ._ffab };

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cddd *PdfWriter )SetNameDictionary (names _cg .PdfObject )error {if names ==nil {return nil ;};_bc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_cddd ._feafc .Set ("\u004e\u0061\u006de\u0073",names );return _cddd .addObjects (names );};

// ToPdfObject implements interface PdfModel.
func (_dfge *PdfAnnotationScreen )ToPdfObject ()_cg .PdfObject {_dfge .PdfAnnotation .ToPdfObject ();_fgbg :=_dfge ._bgf ;_edf :=_fgbg .PdfObject .(*_cg .PdfObjectDictionary );_edf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_edf .SetIfNotNil ("\u0054",_dfge .T );_edf .SetIfNotNil ("\u004d\u004b",_dfge .MK );_edf .SetIfNotNil ("\u0041",_dfge .A );_edf .SetIfNotNil ("\u0041\u0041",_dfge .AA );return _fgbg ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gaddc *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bbdba :=func (_gbfe float64 )float64 {if _gbfe >=6.0/29{return _gbfe *_gbfe *_gbfe ;};return 108.0/841*(_gbfe -4/29);};_abeb :=img ._abbba ;if len (_abeb )!=6{_bc .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_abeb =_gaddc .DecodeArray ();};_afcda :=_df .NewReader (img .getBase ());_cdeg :=_dg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._cfdb ,img ._abbba );_afdbc :=_df .NewWriter (_cdeg );_baag :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;
_ececf :=make ([]uint32 ,3);var (_fegc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_cege ,_fbfa ,_bab float64 ;);for {_fegc =_afcda .ReadSamples (_ececf );if _fegc ==_eda .EOF {break ;}else if _fegc !=nil {return img ,_fegc ;};Ls =float64 (_ececf [0])/_baag ;
As =float64 (_ececf [1])/_baag ;Bs =float64 (_ececf [2])/_baag ;Ls =_dg .LinearInterpolate (Ls ,0.0,1.0,_abeb [0],_abeb [1]);As =_dg .LinearInterpolate (As ,0.0,1.0,_abeb [2],_abeb [3]);Bs =_dg .LinearInterpolate (Bs ,0.0,1.0,_abeb [4],_abeb [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_gaddc .WhitePoint [0]*_bbdba (L );Y =_gaddc .WhitePoint [1]*_bbdba (M );Z =_gaddc .WhitePoint [2]*_bbdba (N );_cege =3.240479*X +-1.537150*Y +-0.498535*Z ;_fbfa =-0.969256*X +1.875992*Y +0.041556*Z ;_bab =0.055648*X +-0.204043*Y +1.057311*Z ;
_cege =_bb .Min (_bb .Max (_cege ,0),1.0);_fbfa =_bb .Min (_bb .Max (_fbfa ,0),1.0);_bab =_bb .Min (_bb .Max (_bab ,0),1.0);_ececf [0]=uint32 (_cege *_baag );_ececf [1]=uint32 (_fbfa *_baag );_ececf [2]=uint32 (_bab *_baag );if _fegc =_afdbc .WriteSamples (_ececf );
_fegc !=nil {return img ,_fegc ;};};return _fdbed (&_cdeg ),nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_aedde *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cc .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_abbag :=field .V ;if _abbag ==nil {return _cc .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gdgaf :=pageNum -1;
if _gdgaf < 0||_gdgaf > len (_aedde ._gccd )-1{return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_eggdc :=_aedde .Reader .PageList [_gdgaf ];field .P =_eggdc .ToPdfObject ();
if field .T ==nil ||field .T .String ()==""{field .T =_cg .MakeString (_f .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_eggdc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _aedde ._dgfd ==_aedde ._cbba .AcroForm {_aedde ._dgfd =_aedde .Reader .AcroForm ;
};_gefe :=_aedde ._dgfd ;if _gefe ==nil {_gefe =NewPdfAcroForm ();};_gefe .SigFlags =_cg .MakeInteger (3);_fcacg :=append (_gefe .AllFields (),field .PdfField );_gefe .Fields =&_fcacg ;_aedde .ReplaceAcroForm (_gefe );_aedde .UpdatePage (_eggdc );_aedde ._gccd [_gdgaf ]=_eggdc ;
return nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dbe *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_egcf :=range pages {_egcf =_egcf .Duplicate ();_gfbd (_egcf );_dbe ._gccd =append (_dbe ._gccd ,_egcf );};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbbee *PdfShadingType4 )ToPdfObject ()_cg .PdfObject {_dbbee .PdfShading .ToPdfObject ();_gfadg ,_bbabe :=_dbbee .getShadingDict ();if _bbabe !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbbee .BitsPerCoordinate !=nil {_gfadg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dbbee .BitsPerCoordinate );};if _dbbee .BitsPerComponent !=nil {_gfadg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbbee .BitsPerComponent );
};if _dbbee .BitsPerFlag !=nil {_gfadg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dbbee .BitsPerFlag );};if _dbbee .Decode !=nil {_gfadg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbbee .Decode );};if _dbbee .Function !=nil {if len (_dbbee .Function )==1{_gfadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbbee .Function [0].ToPdfObject ());
}else {_acfeb :=_cg .MakeArray ();for _ ,_gbgcg :=range _dbbee .Function {_acfeb .Append (_gbgcg .ToPdfObject ());};_gfadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acfeb );};};return _dbbee ._cagea ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_cbdff *PdfWriter )GetPdfVersion ()string {return _cbdff .getPdfVersion ()};

// ToPdfObject implements interface PdfModel.
func (_ffbe *PdfFilespec )ToPdfObject ()_cg .PdfObject {_agabf :=_ffbe .getDict ();_agabf .Clear ();_agabf .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_agabf .SetIfNotNil ("\u0046\u0053",_ffbe .FS );
_agabf .SetIfNotNil ("\u0046",_ffbe .F );_agabf .SetIfNotNil ("\u0055\u0046",_ffbe .UF );_agabf .SetIfNotNil ("\u0044\u004f\u0053",_ffbe .DOS );_agabf .SetIfNotNil ("\u004d\u0061\u0063",_ffbe .Mac );_agabf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ffbe .Unix );
_agabf .SetIfNotNil ("\u0049\u0044",_ffbe .ID );_agabf .SetIfNotNil ("\u0056",_ffbe .V );_agabf .SetIfNotNil ("\u0045\u0046",_ffbe .EF );_agabf .SetIfNotNil ("\u0052\u0046",_ffbe .RF );_agabf .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ffbe .Desc );_agabf .SetIfNotNil ("\u0043\u0049",_ffbe .CI );
return _ffbe ._cbdf ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _cg .StreamEncoder ;Intent _cg .PdfObject ;ImageMask _cg .PdfObject ;Mask _cg .PdfObject ;Matte _cg .PdfObject ;Decode _cg .PdfObject ;Interpolate _cg .PdfObject ;Alternatives _cg .PdfObject ;
SMask _cg .PdfObject ;SMaskInData _cg .PdfObject ;Name _cg .PdfObject ;StructParent _cg .PdfObject ;ID _cg .PdfObject ;OPI _cg .PdfObject ;Metadata _cg .PdfObject ;OC _cg .PdfObject ;Stream []byte ;_cdfcc *_cg .PdfObjectStream ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _cg .PdfObject ;};func (_eef *PdfReader )newPdfAnnotationSquareFromDict (_fbbg *_cg .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fbd :=PdfAnnotationSquare {};_cddc ,_gefc :=_eef .newPdfAnnotationMarkupFromDict (_fbbg );
if _gefc !=nil {return nil ,_gefc ;};_fbd .PdfAnnotationMarkup =_cddc ;_fbd .BS =_fbbg .Get ("\u0042\u0053");_fbd .IC =_fbbg .Get ("\u0049\u0043");_fbd .BE =_fbbg .Get ("\u0042\u0045");_fbd .RD =_fbbg .Get ("\u0052\u0044");return &_fbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddd *PdfActionImportData )ToPdfObject ()_cg .PdfObject {_ddd .PdfAction .ToPdfObject ();_bfd :=_ddd ._eab ;_ecc :=_bfd .PdfObject .(*_cg .PdfObjectDictionary );_ecc .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeImportData )));if _ddd .F !=nil {_ecc .Set ("\u0046",_ddd .F .ToPdfObject ());
};return _bfd ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dcab *PdfColorspaceCalGray )ToPdfObject ()_cg .PdfObject {_acebg :=&_cg .PdfObjectArray {};_acebg .Append (_cg .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_cgffg :=_cg .MakeDict ();if _dcab .WhitePoint !=nil {_cgffg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cg .MakeArray (_cg .MakeFloat (_dcab .WhitePoint [0]),_cg .MakeFloat (_dcab .WhitePoint [1]),_cg .MakeFloat (_dcab .WhitePoint [2])));
}else {_bc .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dcab .BlackPoint !=nil {_cgffg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cg .MakeArray (_cg .MakeFloat (_dcab .BlackPoint [0]),_cg .MakeFloat (_dcab .BlackPoint [1]),_cg .MakeFloat (_dcab .BlackPoint [2])));
};_cgffg .Set ("\u0047\u0061\u006dm\u0061",_cg .MakeFloat (_dcab .Gamma ));_acebg .Append (_cgffg );if _dcab ._ecf !=nil {_dcab ._ecf .PdfObject =_acebg ;return _dcab ._ecf ;};return _acebg ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_acfg :=NewPdfAnnotation ();_feaf :=&PdfAnnotation3D {};_feaf .PdfAnnotation =_acfg ;_acfg .SetContext (_feaf );return _feaf ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_geec *OutlineItem )Insert (index uint ,item *OutlineItem ){_ecbe :=uint (len (_geec .Entries ));if index > _ecbe {index =_ecbe ;};_geec .Entries =append (_geec .Entries [:index ],append ([]*OutlineItem {item },_geec .Entries [index :]...)...);};
func (_fdffd *PdfWriter )writeAcroFormFields ()error {if _fdffd ._gaccg ==nil {return nil ;};_bc .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_bffg :=_fdffd ._gaccg .ToPdfObject ();_bc .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bffg );
_fdffd ._feafc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bffg );_deccc :=_fdffd .addObjects (_bffg );if _deccc !=nil {return _deccc ;};return nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bced *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bced .flattenFieldsWithOpts (false ,appgen ,opts );};func _ebcgd ()string {_ebfgf .Lock ();defer _ebfgf .Unlock ();return _bcddf };

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// IsPush returns true if the button field represents a push button, false otherwise.
func (_cbfb *PdfFieldButton )IsPush ()bool {return _cbfb .GetType ()==ButtonTypePush };

// ToPdfObject implements interface PdfModel.
func (_da *PdfActionNamed )ToPdfObject ()_cg .PdfObject {_da .PdfAction .ToPdfObject ();_ebad :=_da ._eab ;_aaf :=_ebad .PdfObject .(*_cg .PdfObjectDictionary );_aaf .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeNamed )));_aaf .SetIfNotNil ("\u004e",_da .N );
return _ebad ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_cg .PdfObjectArray ;_fdedf *Image ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_aeag *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdggc ,_decb :=_cg .GetNumbersAsFloat (objects );
if _decb !=nil {return nil ,_decb ;};return _aeag .ColorFromFloats (_bdggc );};func _aecgcc (_bgaea *_cg .PdfObjectDictionary ,_gdfdd *fontCommon )(*pdfCIDFontType2 ,error ){if _gdfdd ._dbba !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gdfdd );
return nil ,_cg .ErrRangeError ;};_dcbg :=_gageb (_gdfdd );_dffc ,_ddfgd :=_cg .GetDict (_bgaea .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ddfgd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gdfdd );
return nil ,ErrRequiredAttributeMissing ;};_dcbg .CIDSystemInfo =_dffc ;_dcbg .DW =_bgaea .Get ("\u0044\u0057");_dcbg .W =_bgaea .Get ("\u0057");_dcbg .DW2 =_bgaea .Get ("\u0044\u0057\u0032");_dcbg .W2 =_bgaea .Get ("\u0057\u0032");_dcbg .CIDToGIDMap =_bgaea .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_dcbg ._fgeg =1000.0;if _fdgaa ,_dgfg :=_cg .GetNumberAsFloat (_dcbg .DW );_dgfg ==nil {_dcbg ._fgeg =_fdgaa ;};_gfbb ,_abdcce :=_aeffe (_dcbg .W );if _abdcce !=nil {return nil ,_abdcce ;};if _gfbb ==nil {_gfbb =map[_ad .CharCode ]float64 {};};_dcbg ._gfbfb =_gfbb ;
return _dcbg ,nil ;};func (_ebbe *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_bfgbag *PdfWriter )updateObjectNumbers (){_ggdb :=_bfgbag .ObjNumOffset ;_bbagd :=0;for _ ,_gceeg :=range _bfgbag ._ebgeg {_gccgb :=int64 (_bbagd +1+_ggdb );
_ffgbe :=true ;if _bfgbag ._egaa {if _eegdb ,_dfcbb :=_bfgbag ._gagef [_gceeg ];_dfcbb {_gccgb =_eegdb ;_ffgbe =false ;};};switch _fadcb :=_gceeg .(type ){case *_cg .PdfIndirectObject :_fadcb .ObjectNumber =_gccgb ;_fadcb .GenerationNumber =0;case *_cg .PdfObjectStream :_fadcb .ObjectNumber =_gccgb ;
_fadcb .GenerationNumber =0;case *_cg .PdfObjectStreams :_fadcb .ObjectNumber =_gccgb ;_fadcb .GenerationNumber =0;default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_fadcb );
continue ;};if _ffgbe {_bbagd ++;};};_aacbg :=func (_cafbd _cg .PdfObject )int64 {switch _bfce :=_cafbd .(type ){case *_cg .PdfIndirectObject :return _bfce .ObjectNumber ;case *_cg .PdfObjectStream :return _bfce .ObjectNumber ;case *_cg .PdfObjectStreams :return _bfce .ObjectNumber ;
};return 0;};_fb .SliceStable (_bfgbag ._ebgeg ,func (_gfgb ,_bddaae int )bool {return _aacbg (_bfgbag ._ebgeg [_gfgb ])< _aacbg (_bfgbag ._ebgeg [_bddaae ])});};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_cafbb PdfModel ;_edebc _cg .PdfObject ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_eegbb *PdfReader )GetNamedDestinations ()(_cg .PdfObject ,error ){_efga :=_cg .ResolveReference (_eegbb ._egdgf .Get ("\u0044\u0065\u0073t\u0073"));if _efga ==nil {return nil ,nil ;};if !_eegbb ._ebebf {_bcdfag :=_eegbb .traverseObjectData (_efga );
if _bcdfag !=nil {return nil ,_bcdfag ;};};return _efga ,nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_cecb *PdfFieldButton )GetType ()ButtonType {_ddfg :=ButtonTypeCheckbox ;if _cecb .Ff !=nil {if (uint32 (*_cecb .Ff )&FieldFlagPushbutton .Mask ())> 0{_ddfg =ButtonTypePush ;}else if (uint32 (*_cecb .Ff )&FieldFlagRadio .Mask ())> 0{_ddfg =ButtonTypeRadio ;
};};return _ddfg ;};func _gabad (_ggege *PdfField )[]*PdfField {_cdcae :=[]*PdfField {_ggege };for _ ,_bfbc :=range _ggege .Kids {_cdcae =append (_cdcae ,_gabad (_bfbc )...);};return _cdcae ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_afdc *Image )AlphaMap (mapFunc AlphaMapFunc ){for _cggg ,_adeec :=range _afdc ._cfdb {_afdc ._cfdb [_cggg ]=mapFunc (_adeec );};};func (_dgbeg *PdfReader )resolveReference (_abega *_cg .PdfObjectReference )(_cg .PdfObject ,bool ,error ){_edcc ,_ffdce :=_dgbeg ._adfcb .ObjCache [int (_abega .ObjectNumber )];
if !_ffdce {_bc .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_abega );_cedfaa ,_gfabc :=_dgbeg ._adfcb .LookupByReference (*_abega );if _gfabc !=nil {return nil ,false ,_gfabc ;};_dgbeg ._adfcb .ObjCache [int (_abega .ObjectNumber )]=_cedfaa ;
return _cedfaa ,false ,nil ;};return _edcc ,true ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_dfc PdfModel ;Rect _cg .PdfObject ;Contents _cg .PdfObject ;P _cg .PdfObject ;NM _cg .PdfObject ;M _cg .PdfObject ;F _cg .PdfObject ;AP _cg .PdfObject ;AS _cg .PdfObject ;Border _cg .PdfObject ;C _cg .PdfObject ;StructParent _cg .PdfObject ;
OC _cg .PdfObject ;_bgf *_cg .PdfIndirectObject ;};func (_dfbfb *PdfWriter )writeDocumentVersion (){if _dfbfb ._egaa {_dfbfb .writeString ("\u000a");}else {_dfbfb .writeString (_f .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_dfbfb ._baefbc .Major ,_dfbfb ._baefbc .Minor ));
_dfbfb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// ToPdfObject implements interface PdfModel.
func (_fgdb *PdfAnnotationTrapNet )ToPdfObject ()_cg .PdfObject {_fgdb .PdfAnnotation .ToPdfObject ();_aebf :=_fgdb ._bgf ;_dgadca :=_aebf .PdfObject .(*_cg .PdfObjectDictionary );_dgadca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _aebf ;};func _cgad (_faae []byte )bool {if len (_faae )< 4{return true ;};for _cgaac :=range _faae [:4]{_dcgeg :=rune (_cgaac );if !_d .Is (_d .ASCII_Hex_Digit ,_dcgeg )&&!_d .IsSpace (_dcgeg ){return true ;};};return false ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gfeg *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_abdc *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_abdc .updateObjectsDeep (dss .ToPdfObject (),nil );};_abdc ._cagf =dss ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_bfgbc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_dfb :=_df .NewReader (img .getBase ());_dcdba :=_dg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._cfdb ,img ._abbba );
_afacf :=_df .NewWriter (_dcdba );_gcbg :=_bb .Pow (2,float64 (img .BitsPerComponent ))-1;_debgd :=_bfgbc .GetNumComponents ();_fcdg :=make ([]uint32 ,_debgd );_fbca :=make ([]float64 ,_debgd );for {_dged :=_dfb .ReadSamples (_fcdg );if _dged ==_eda .EOF {break ;
}else if _dged !=nil {return img ,_dged ;};for _cadeg :=0;_cadeg < _debgd ;_cadeg ++{_eefe :=float64 (_fcdg [_cadeg ])/_gcbg ;_fbca [_cadeg ]=_eefe ;};_dgdd ,_dged :=_bfgbc .TintTransform .Evaluate (_fbca );if _dged !=nil {return img ,_dged ;};for _ ,_fcea :=range _dgdd {_fcea =_bb .Min (_bb .Max (0,_fcea ),1.0);
if _dged =_afacf .WriteSample (uint32 (_fcea *_gcbg ));_dged !=nil {return img ,_dged ;};};};return _bfgbc .AlternateSpace .ImageToRGB (_fdbed (&_dcdba ));};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_dfcf *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _cdfgd []float64 ;for _ddfba :=0;_ddfba < _dfcf .GetNumComponents ();_ddfba ++{_cdfgd =append (_cdfgd ,0.0,1.0);};return _cdfgd ;};func (_dagfe *PdfWriter )seekByName (_gcgba _cg .PdfObject ,_fbge []string ,_gacdg string )([]_cg .PdfObject ,error ){_bc .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gcgba );
var _edced []_cg .PdfObject ;if _eecd ,_faaec :=_gcgba .(*_cg .PdfIndirectObject );_faaec {return _dagfe .seekByName (_eecd .PdfObject ,_fbge ,_gacdg );};if _dfefe ,_bfdee :=_gcgba .(*_cg .PdfObjectStream );_bfdee {return _dagfe .seekByName (_dfefe .PdfObjectDictionary ,_fbge ,_gacdg );
};if _acgba ,_eedba :=_gcgba .(*_cg .PdfObjectDictionary );_eedba {_bc .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gfeef :=range _acgba .Keys (){_efbbc :=_acgba .Get (_gfeef );if string (_gfeef )==_gacdg {_edced =append (_edced ,_efbbc );};for _ ,_dfdfd :=range _fbge {if string (_gfeef )==_dfdfd {_bc .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_dfdfd );
_dfegd ,_cfbcgc :=_dagfe .seekByName (_efbbc ,_fbge ,_gacdg );if _cfbcgc !=nil {return _edced ,_cfbcgc ;};_edced =append (_edced ,_dfegd ...);break ;};};};return _edced ,nil ;};return _edced ,nil ;};func _ecde (_gceda *_cg .PdfObjectDictionary )(*PdfShadingType3 ,error ){_egdb :=PdfShadingType3 {};
_eadg :=_gceda .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _eadg ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_cgbbd ,_aabdg :=_eadg .(*_cg .PdfObjectArray );if !_aabdg {_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eadg );
return nil ,_cg .ErrTypeError ;};if _cgbbd .Len ()!=6{_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cgbbd .Len ());return nil ,ErrInvalidAttribute ;
};_egdb .Coords =_cgbbd ;if _dbfca :=_gceda .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dbfca !=nil {_dbfca =_cg .TraceToDirectObject (_dbfca );_fcgff ,_geggc :=_dbfca .(*_cg .PdfObjectArray );if !_geggc {_bc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbfca );
return nil ,_cg .ErrTypeError ;};_egdb .Domain =_fcgff ;};_eadg =_gceda .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eadg ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_egdb .Function =[]PdfFunction {};if _bfcgg ,_fcecc :=_eadg .(*_cg .PdfObjectArray );_fcecc {for _ ,_fcffb :=range _bfcgg .Elements (){_babfae ,_ebdga :=_ddccf (_fcffb );if _ebdga !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebdga );
return nil ,_ebdga ;};_egdb .Function =append (_egdb .Function ,_babfae );};}else {_fdbefg ,_aaedf :=_ddccf (_eadg );if _aaedf !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aaedf );
return nil ,_aaedf ;};_egdb .Function =append (_egdb .Function ,_fdbefg );};if _dbbcf :=_gceda .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dbbcf !=nil {_dbbcf =_cg .TraceToDirectObject (_dbbcf );_cccdb ,_ggeacc :=_dbbcf .(*_cg .PdfObjectArray );if !_ggeacc {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbbcf );
return nil ,_cg .ErrTypeError ;};if _cccdb .Len ()!=2{_bc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cccdb .Len ());return nil ,ErrInvalidAttribute ;
};_egdb .Extend =_cccdb ;};return &_egdb ,nil ;};

// SetContext sets the sub annotation (context).
func (_ceb *PdfAnnotation )SetContext (ctx PdfModel ){_ceb ._dfc =ctx };func _aeffe (_cdcag _cg .PdfObject )(map[_ad .CharCode ]float64 ,error ){if _cdcag ==nil {return nil ,nil ;};_aggc ,_cfcc :=_cg .GetArray (_cdcag );if !_cfcc {return nil ,nil ;};_dcef :=map[_ad .CharCode ]float64 {};
_geea :=_aggc .Len ();for _egba :=0;_egba < _geea -1;_egba ++{_gbad :=_cg .TraceToDirectObject (_aggc .Get (_egba ));_cbcb ,_efbc :=_cg .GetIntVal (_gbad );if !_efbc {return nil ,_f .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_egba ,_gbad );
};_egba ++;if _egba > _geea -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_aggc );};_aaeee :=_cg .TraceToDirectObject (_aggc .Get (_egba ));
switch _aaeee .(type ){case *_cg .PdfObjectArray :_cfda ,_ :=_cg .GetArray (_aaeee );if _gaadf ,_dfada :=_cfda .ToFloat64Array ();_dfada ==nil {for _adgbg :=0;_adgbg < len (_gaadf );_adgbg ++{_dcef [_ad .CharCode (_cbcb +_adgbg )]=_gaadf [_adgbg ];};}else {return nil ,_f .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_egba ,_aaeee );
};case *_cg .PdfObjectInteger :_gfbc ,_cgceg :=_cg .GetIntVal (_aaeee );if !_cgceg {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_egba ,_aaeee );
};_egba ++;if _egba > _geea -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_aggc );};_fgfa :=_aggc .Get (_egba );_agdab ,_gfdg :=_cg .GetNumberAsFloat (_fgfa );
if _gfdg !=nil {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_egba ,_fgfa );};for _eaagb :=_cbcb ;_eaagb <=_gfbc ;
_eaagb ++{_dcef [_ad .CharCode (_eaagb )]=_agdab ;};default:return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_egba ,_aaeee );
};};return _dcef ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cgab *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cgab .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cgab ._dgfd =acroForm ;};func _abad (_aadef _cg .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cbbd :=&PdfPageResourcesColorspaces {};
if _fgbf ,_fadd :=_aadef .(*_cg .PdfIndirectObject );_fadd {_cbbd ._dffee =_fgbf ;_aadef =_fgbf .PdfObject ;};_bgeg ,_fbcac :=_cg .GetDict (_aadef );if !_fbcac {return nil ,_cc .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_cbbd .Names =[]string {};_cbbd .Colorspaces =map[string ]PdfColorspace {};for _ ,_adfag :=range _bgeg .Keys (){_adbbcd :=_bgeg .Get (_adfag );_cbbd .Names =append (_cbbd .Names ,string (_adfag ));_gfegb ,_abbaf :=NewPdfColorspaceFromPdfObject (_adbbcd );
if _abbaf !=nil {return nil ,_abbaf ;};_cbbd .Colorspaces [string (_adfag )]=_gfegb ;};return _cbbd ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_aege *PdfReader )newPdfActionHideFromDict (_gcee *_cg .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gcee .Get ("\u0054"),H :_gcee .Get ("\u0048")},nil ;};func (_gcb *PdfReader )newPdfAnnotationLinkFromDict (_fgbca *_cg .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_fgga :=PdfAnnotationLink {};
_fgga .A =_fgbca .Get ("\u0041");_fgga .Dest =_fgbca .Get ("\u0044\u0065\u0073\u0074");_fgga .H =_fgbca .Get ("\u0048");_fgga .PA =_fgbca .Get ("\u0050\u0041");_fgga .QuadPoints =_fgbca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");
_fgga .BS =_fgbca .Get ("\u0042\u0053");return &_fgga ,nil ;};func _cbec (_gfaa _cg .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gdbc :=NewPdfColorspaceSpecialSeparation ();if _dddbc ,_fdef :=_gfaa .(*_cg .PdfIndirectObject );_fdef {_gdbc ._cade =_dddbc ;
};_gfaa =_cg .TraceToDirectObject (_gfaa );_facb ,_fbfc :=_gfaa .(*_cg .PdfObjectArray );if !_fbfc {return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _facb .Len ()!=4{return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gfaa =_facb .Get (0);
_daad ,_fbfc :=_gfaa .(*_cg .PdfObjectName );if !_fbfc {return nil ,_f .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_daad !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_f .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gfaa =_facb .Get (1);_daad ,_fbfc =_gfaa .(*_cg .PdfObjectName );if !_fbfc {return nil ,_f .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gdbc .ColorantName =_daad ;_gfaa =_facb .Get (2);_fbfef ,_cbcf :=NewPdfColorspaceFromPdfObject (_gfaa );if _cbcf !=nil {return nil ,_cbcf ;};_gdbc .AlternateSpace =_fbfef ;_gfdcf ,_cbcf :=_ddccf (_facb .Get (3));if _cbcf !=nil {return nil ,_cbcf ;};
_gdbc .TintTransform =_gfdcf ;return _gdbc ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_cg .PdfObjectStream ;OCSP []*_cg .PdfObjectStream ;CRL []*_cg .PdfObjectStream ;TU *_cg .PdfObjectString ;TS *_cg .PdfObjectString ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_beaa *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _beaa .AlternateSpace ==nil {return nil ,_cc .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _beaa .AlternateSpace .ColorToRGB (color );};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _cg .PdfObject ;MK _cg .PdfObject ;A _cg .PdfObject ;AA _cg .PdfObject ;BS _cg .PdfObject ;Parent _cg .PdfObject ;_dad *PdfField ;_fgbc bool ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_effa *Image )ToGoImage ()(_fe .Image ,error ){_bc .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_cdffdc ,_feff :=_dg .NewImage (int (_effa .Width ),int (_effa .Height ),int (_effa .BitsPerComponent ),_effa .ColorComponents ,_effa .Data ,_effa ._cfdb ,_effa ._abbba );
if _feff !=nil {return nil ,_feff ;};return _cdffdc ,nil ;};func (_edee *PdfReader )newPdfActionRenditionFromDict (_dcf *_cg .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dcf .Get ("\u0052"),AN :_dcf .Get ("\u0041\u004e"),OP :_dcf .Get ("\u004f\u0050"),JS :_dcf .Get ("\u004a\u0053")},nil ;
};func (_fdfcb *pdfFontType3 )baseFields ()*fontCommon {return &_fdfcb .fontCommon };func _ecead ()string {_ebfgf .Lock ();defer _ebfgf .Unlock ();return _gcdaa };func (_fdc *PdfReader )newPdfAnnotationLineFromDict (_ceeg *_cg .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_gaf :=PdfAnnotationLine {};
_adeg ,_gbe :=_fdc .newPdfAnnotationMarkupFromDict (_ceeg );if _gbe !=nil {return nil ,_gbe ;};_gaf .PdfAnnotationMarkup =_adeg ;_gaf .L =_ceeg .Get ("\u004c");_gaf .BS =_ceeg .Get ("\u0042\u0053");_gaf .LE =_ceeg .Get ("\u004c\u0045");_gaf .IC =_ceeg .Get ("\u0049\u0043");
_gaf .LL =_ceeg .Get ("\u004c\u004c");_gaf .LLE =_ceeg .Get ("\u004c\u004c\u0045");_gaf .Cap =_ceeg .Get ("\u0043\u0061\u0070");_gaf .IT =_ceeg .Get ("\u0049\u0054");_gaf .LLO =_ceeg .Get ("\u004c\u004c\u004f");_gaf .CP =_ceeg .Get ("\u0043\u0050");_gaf .Measure =_ceeg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_gaf .CO =_ceeg .Get ("\u0043\u004f");return &_gaf ,nil ;};func _bgdf ()string {return _bc .Version };

// DecodeArray returns the component range values for the Separation colorspace.
func (_fgeea *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// ColorToRGB converts a Lab color to an RGB color.
func (_fbfe *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdagc :=func (_ebca float64 )float64 {if _ebca >=6.0/29{return _ebca *_ebca *_ebca ;};return 108.0/841*(_ebca -4/29);};_edfg ,_fadg :=color .(*PdfColorLab );if !_fadg {_bc .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_edfg .L ();AStar :=_edfg .A ();BStar :=_edfg .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_fbfe .WhitePoint [0]*_cdagc (L );Y :=_fbfe .WhitePoint [1]*_cdagc (M );Z :=_fbfe .WhitePoint [2]*_cdagc (N );_efe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dgeee :=-0.969256*X +1.875992*Y +0.041556*Z ;_dffe :=0.055648*X +-0.204043*Y +1.057311*Z ;_efe =_bb .Min (_bb .Max (_efe ,0),1.0);
_dgeee =_bb .Min (_bb .Max (_dgeee ,0),1.0);_dffe =_bb .Min (_bb .Max (_dffe ,0),1.0);return NewPdfColorDeviceRGB (_efe ,_dgeee ,_dffe ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_afc *PdfActionRendition )ToPdfObject ()_cg .PdfObject {_afc .PdfAction .ToPdfObject ();_aga :=_afc ._eab ;_dab :=_aga .PdfObject .(*_cg .PdfObjectDictionary );_dab .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeRendition )));_dab .SetIfNotNil ("\u0052",_afc .R );
_dab .SetIfNotNil ("\u0041\u004e",_afc .AN );_dab .SetIfNotNil ("\u004f\u0050",_afc .OP );_dab .SetIfNotNil ("\u004a\u0053",_afc .JS );return _aga ;};

// ToPdfObject implements interface PdfModel.
func (_ffeg *PdfAnnotationRedact )ToPdfObject ()_cg .PdfObject {_ffeg .PdfAnnotation .ToPdfObject ();_dfab :=_ffeg ._bgf ;_gcab :=_dfab .PdfObject .(*_cg .PdfObjectDictionary );_ffeg .PdfAnnotationMarkup .appendToPdfDictionary (_gcab );_gcab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_gcab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ffeg .QuadPoints );_gcab .SetIfNotNil ("\u0049\u0043",_ffeg .IC );_gcab .SetIfNotNil ("\u0052\u004f",_ffeg .RO );_gcab .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_ffeg .OverlayText );
_gcab .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ffeg .Repeat );_gcab .SetIfNotNil ("\u0044\u0041",_ffeg .DA );_gcab .SetIfNotNil ("\u0051",_ffeg .Q );return _dfab ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edadc *PdfShadingType6 )ToPdfObject ()_cg .PdfObject {_edadc .PdfShading .ToPdfObject ();_ddefaa ,_edgd :=_edadc .getShadingDict ();if _edgd !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edadc .BitsPerCoordinate !=nil {_ddefaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_edadc .BitsPerCoordinate );};if _edadc .BitsPerComponent !=nil {_ddefaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_edadc .BitsPerComponent );
};if _edadc .BitsPerFlag !=nil {_ddefaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_edadc .BitsPerFlag );};if _edadc .Decode !=nil {_ddefaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_edadc .Decode );};if _edadc .Function !=nil {if len (_edadc .Function )==1{_ddefaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edadc .Function [0].ToPdfObject ());
}else {_fcefd :=_cg .MakeArray ();for _ ,_aedcb :=range _edadc .Function {_fcefd .Append (_aedcb .ToPdfObject ());};_ddefaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcefd );};};return _edadc ._cagea ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _cg .PdfObject ;Volume _cg .PdfObject ;Synchronous _cg .PdfObject ;Repeat _cg .PdfObject ;Mix _cg .PdfObject ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_ecag *PdfReader )CheckAccessRights (password []byte )(bool ,_ef .Permissions ,error ){return _ecag ._adfcb .CheckAccessRights (password );};func _aegf (_bfac *_cg .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dfbcc :=PdfShadingType5 {};_cecef :=_bfac .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cecef ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffbec ,_dfefb :=_cecef .(*_cg .PdfObjectInteger );if !_dfefb {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cecef );
return nil ,_cg .ErrTypeError ;};_dfbcc .BitsPerCoordinate =_ffbec ;_cecef =_bfac .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cecef ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ffbec ,_dfefb =_cecef .(*_cg .PdfObjectInteger );if !_dfefb {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cecef );
return nil ,_cg .ErrTypeError ;};_dfbcc .BitsPerComponent =_ffbec ;_cecef =_bfac .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cecef ==nil {_bc .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ffbec ,_dfefb =_cecef .(*_cg .PdfObjectInteger );if !_dfefb {_bc .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cecef );
return nil ,_cg .ErrTypeError ;};_dfbcc .VerticesPerRow =_ffbec ;_cecef =_bfac .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cecef ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efbaa ,_dfefb :=_cecef .(*_cg .PdfObjectArray );if !_dfefb {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cecef );
return nil ,_cg .ErrTypeError ;};_dfbcc .Decode =_efbaa ;if _cefad :=_bfac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cefad !=nil {_dfbcc .Function =[]PdfFunction {};if _eafgd ,_gbcfdc :=_cefad .(*_cg .PdfObjectArray );_gbcfdc {for _ ,_cfdcb :=range _eafgd .Elements (){_beccc ,_fdgd :=_ddccf (_cfdcb );
if _fdgd !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdgd );return nil ,_fdgd ;};_dfbcc .Function =append (_dfbcc .Function ,_beccc );
};}else {_acdf ,_feebf :=_ddccf (_cefad );if _feebf !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_feebf );return nil ,_feebf ;
};_dfbcc .Function =append (_dfbcc .Function ,_acdf );};};return &_dfbcc ,nil ;};func (_feaa *PdfReader )newPdfActionGoTo3DViewFromDict (_gbdc *_cg .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_gbdc .Get ("\u0054\u0041"),V :_gbdc .Get ("\u0056")},nil ;
};func (_ffbcc *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _ffbcc ._adfcb .GetCrypter ()!=nil &&!_ffbcc ._adfcb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_becab :=_ffbcc ._egdgf ;_ecbeg :=_becab .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _ecbeg ==nil {return nil ,nil ;};_bc .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fagdf :=_cg .ResolveReference (_ecbeg );
_bc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fagdf );if _affbd :=_cg .IsNullObject (_fagdf );_affbd {_bc .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_afgcf ,_dbfgg :=_fagdf .(*_cg .PdfIndirectObject );if !_dbfgg {if _ ,_abcf :=_cg .GetDict (_fagdf );!_abcf {_bc .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_bc .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_afgcf =_cg .MakeIndirectObject (_fagdf );};_cead ,_dbfgg :=_afgcf .PdfObject .(*_cg .PdfObjectDictionary );if !_dbfgg {return nil ,_cc .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_bc .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_cead );_fbaef ,_ ,_fadac :=_ffbcc .buildOutlineTree (_afgcf ,nil ,nil ,nil );if _fadac !=nil {return nil ,_fadac ;};_bc .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_fbaef );
return _fbaef ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fedf :=&PdfColorspaceCalRGB {};_fedf .BlackPoint =[]float64 {0.0,0.0,0.0};_fedf .Gamma =[]float64 {1.0,1.0,1.0};_fedf .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fedf ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_bccff *XObjectImage )ToImage ()(*Image ,error ){_bcbeec :=&Image {};if _bccff .Height ==nil {return nil ,_cc .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bcbeec .Height =*_bccff .Height ;if _bccff .Width ==nil {return nil ,_cc .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bcbeec .Width =*_bccff .Width ;if _bccff .BitsPerComponent ==nil {switch _bccff .Filter .(type ){case *_cg .CCITTFaxEncoder ,*_cg .JBIG2Encoder :_bcbeec .BitsPerComponent =1;
case *_cg .LZWEncoder ,*_cg .RunLengthEncoder :_bcbeec .BitsPerComponent =8;default:return nil ,_cc .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_bcbeec .BitsPerComponent =*_bccff .BitsPerComponent ;};_bcbeec .ColorComponents =_bccff .ColorSpace .GetNumComponents ();_bccff ._cdfcc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cg .MakeInteger (int64 (_bcbeec .ColorComponents )));
_dddcf ,_cefac :=_cg .DecodeStream (_bccff ._cdfcc );if _cefac !=nil {return nil ,_cefac ;};_bcbeec .Data =_dddcf ;if _bccff .Decode !=nil {_ccda ,_aabcba :=_bccff .Decode .(*_cg .PdfObjectArray );if !_aabcba {_bc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ddgbb ,_bececb :=_ccda .ToFloat64Array ();if _bececb !=nil {return nil ,_bececb ;};_bcbeec ._abbba =_ddgbb ;};return _bcbeec ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_eafc *PdfPageResources )GetExtGState (keyName _cg .PdfObjectName )(_cg .PdfObject ,bool ){if _eafc .ExtGState ==nil {return nil ,false ;};_aadd ,_edfgae :=_cg .TraceToDirectObject (_eafc .ExtGState ).(*_cg .PdfObjectDictionary );if !_edfgae {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eafc .ExtGState );
return nil ,false ;};if _ffda :=_aadd .Get (keyName );_ffda !=nil {return _ffda ,true ;};return nil ,false ;};func _adeag (_gdfb *_cg .PdfIndirectObject ,_ffbc *_cg .PdfObjectDictionary )(*DSS ,error ){if _gdfb ==nil {_gdfb =_cg .MakeIndirectObject (nil );
};_gdfb .PdfObject =_cg .MakeDict ();_dabb :=map[string ]*VRI {};if _bbac ,_gedg :=_cg .GetDict (_ffbc .Get ("\u0056\u0052\u0049"));_gedg {for _ ,_ddff :=range _bbac .Keys (){if _fgcd ,_gbfed :=_cg .GetDict (_bbac .Get (_ddff ));_gbfed {_dabb [_eaf .ToUpper (_ddff .String ())]=_bdgd (_fgcd );
};};};return &DSS {Certs :_bgbgf (_ffbc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_bgbgf (_ffbc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_bgbgf (_ffbc .Get ("\u0043\u0052\u004c\u0073")),VRI :_dabb ,_gedb :_gdfb },nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccae *PdfActionGoToR )ToPdfObject ()_cg .PdfObject {_ccae .PdfAction .ToPdfObject ();_dce :=_ccae ._eab ;_dde :=_dce .PdfObject .(*_cg .PdfObjectDictionary );_dde .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoToR )));if _ccae .F !=nil {_dde .Set ("\u0046",_ccae .F .ToPdfObject ());
};_dde .SetIfNotNil ("\u0044",_ccae .D );_dde .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ccae .NewWindow );return _dce ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bdefff *PdfPageResources )GetContainingPdfObject ()_cg .PdfObject {return _bdefff ._eaada };

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_edad *PdfFieldChoice )ToPdfObject ()_cg .PdfObject {_edad .PdfField .ToPdfObject ();_fdbeaa :=_edad ._edge ;_cdab :=_fdbeaa .PdfObject .(*_cg .PdfObjectDictionary );_cdab .Set ("\u0046\u0054",_cg .MakeName ("\u0043\u0068"));if _edad .Opt !=nil {_cdab .Set ("\u004f\u0070\u0074",_edad .Opt );
};if _edad .TI !=nil {_cdab .Set ("\u0054\u0049",_edad .TI );};if _edad .I !=nil {_cdab .Set ("\u0049",_edad .I );};return _fdbeaa ;};

// GetPdfInfo returns the PDF info dictionary.
func (_eaagf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bgcfe ,_dbaab :=_eaagf .GetTrailer ();if _dbaab !=nil {return nil ,_dbaab ;};var _bfbb *_cg .PdfObjectDictionary ;_ceccae :=_bgcfe .Get ("\u0049\u006e\u0066\u006f");switch _bebga :=_ceccae .(type ){case *_cg .PdfObjectReference :_bagaa :=_bebga ;
_ceccae ,_dbaab =_eaagf .GetIndirectObjectByNumber (int (_bagaa .ObjectNumber ));_ceccae =_cg .TraceToDirectObject (_ceccae );if _dbaab !=nil {return nil ,_dbaab ;};_bfbb ,_ =_ceccae .(*_cg .PdfObjectDictionary );case *_cg .PdfObjectDictionary :_bfbb =_bebga ;
};if _bfbb ==nil {return nil ,_cc .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_cbfcf ,_dbaab :=NewPdfInfoFromObject (_bfbb );if _dbaab !=nil {return nil ,_dbaab ;
};return _cbfcf ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_fadgc *PdfFont )CharcodesToStrings (charcodes []_ad .CharCode )([]string ,int ,int ){_bedga :=_fadgc .baseFields ();_bdda :=make ([]string ,0,len (charcodes ));_fdaaf :=0;_bgbb :=_fadgc .Encoder ();if _bgbb !=nil {switch _cbbb :=_bgbb .(type ){case _ad .SimpleEncoder :_cegc :=_cbbb .BaseName ();
if _ ,_ggfgb :=_dedb [_cegc ];_ggfgb {for _ ,_gbaf :=range charcodes {if _cefd ,_gccfc :=_bgbb .CharcodeToRune (_gbaf );_gccfc {_bdda =append (_bdda ,string (_cefd ));}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gbaf ,charcodes ,_bedga .isCIDFont (),_fadgc ,_bgbb );
_fdaaf ++;_bdda =append (_bdda ,_cag .MissingCodeString );};};return _bdda ,len (_bdda ),_fdaaf ;};};};for _ ,_fgae :=range charcodes {if _bedga ._cgcg !=nil {if _fbcda ,_bgaab :=_bedga ._cgcg .CharcodeToUnicode (_cag .CharCode (_fgae ));_bgaab {_bdda =append (_bdda ,_fbcda );
continue ;};};if _bgbb !=nil {if _edfd ,_fdgfa :=_bgbb .CharcodeToRune (_fgae );_fdgfa {_bdda =append (_bdda ,string (_edfd ));continue ;};};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fgae ,charcodes ,_bedga .isCIDFont (),_fadgc ,_bgbb );
_fdaaf ++;_bdda =append (_bdda ,_cag .MissingCodeString );};if _fdaaf !=0{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fdaaf ,_fadgc );
};return _bdda ,len (_bdda ),_fdaaf ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_cecca *PdfFont )CharcodesToUnicode (charcodes []_ad .CharCode )[]rune {_ceccb ,_ ,_ :=_cecca .CharcodesToUnicodeWithStats (charcodes );return _ceccb ;};func _caaeab (_ccaed string )map[string ]string {_fdcg :=_ccbde .Split (_ccaed ,-1);_fgff :=map[string ]string {};
for _ ,_fcbe :=range _fdcg {_bggd :=_ffafd .FindStringSubmatch (_fcbe );if _bggd ==nil {continue ;};_bcdb ,_adfaa :=_bggd [1],_bggd [2];_fgff [_bcdb ]=_adfaa ;};return _fgff ;};func _gbede (_agad string )(map[_ad .CharCode ]_ad .GlyphName ,error ){_adgdg :=_eaf .Split (_agad ,"\u000a");
_aabdb :=make (map[_ad .CharCode ]_ad .GlyphName );for _ ,_fege :=range _adgdg {_abdag :=_bddc .FindStringSubmatch (_fege );if _abdag ==nil {continue ;};_bbabf ,_dfae :=_abdag [1],_abdag [2];_bfdc ,_aebef :=_ge .Atoi (_bbabf );if _aebef !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_fege );
return nil ,_cg .ErrTypeError ;};_aabdb [_ad .CharCode (_bfdc )]=_ad .GlyphName (_dfae );};_bc .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_aabdb );
return _aabdb ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_bfedg []byte )(_aaaad int ,_egbea error );};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_edgcb *PdfPageResources )GetPatternByName (keyName _cg .PdfObjectName )(*PdfPattern ,bool ){if _edgcb .Pattern ==nil {return nil ,false ;};_gbagc ,_dbfgc :=_cg .TraceToDirectObject (_edgcb .Pattern ).(*_cg .PdfObjectDictionary );if !_dbfgc {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgcb .Pattern );
return nil ,false ;};if _gaage :=_gbagc .Get (keyName );_gaage !=nil {_deece ,_cbfagb :=_fgbccf (_gaage );if _cbfagb !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_cbfagb );
return nil ,false ;};return _deece ,true ;};return nil ,false ;};

// Width returns the width of `rect`.
func (_feabe *PdfRectangle )Width ()float64 {return _bb .Abs (_feabe .Urx -_feabe .Llx )};func (_dbeg *DSS )generateHashMaps ()error {_dcbd ,_eegd :=_dbeg .generateHashMap (_dbeg .Certs );if _eegd !=nil {return _eegd ;};_egbba ,_eegd :=_dbeg .generateHashMap (_dbeg .OCSPs );
if _eegd !=nil {return _eegd ;};_dcff ,_eegd :=_dbeg .generateHashMap (_dbeg .CRLs );if _eegd !=nil {return _eegd ;};_dbeg ._beaf =_dcbd ;_dbeg ._afaab =_egbba ;_dbeg ._fgdbg =_dcff ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_faef *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgeeea :=vals [0];_gbgbb :=[]float64 {_dgeeea };
_ecbd ,_bbbcc :=_faef .TintTransform .Evaluate (_gbgbb );if _bbbcc !=nil {_bc .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bbbcc );
_bc .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_faef .TintTransform );return nil ,_bbbcc ;};_bc .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_ecbd ,_faef .AlternateSpace );
_bdgb ,_bbbcc :=_faef .AlternateSpace .ColorFromFloats (_ecbd );if _bbbcc !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bbbcc );
return nil ,_bbbcc ;};return _bdgb ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _cg .PdfObject ;Name _cg .PdfObject ;State _cg .PdfObject ;StateModel _cg .PdfObject ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_egaedc *PdfPage )GetPageAsIndirectObject ()*_cg .PdfIndirectObject {return _egaedc ._afeaa };

// Mask returns the uin32 bitmask for the specific flag.
func (_bgcg FieldFlag )Mask ()uint32 {return uint32 (_bgcg )};

// SetShadingByName sets a shading resource specified by keyName.
func (_aeged *PdfPageResources )SetShadingByName (keyName _cg .PdfObjectName ,shadingObj _cg .PdfObject )error {if _aeged .Shading ==nil {_aeged .Shading =_cg .MakeDict ();};_bgaaa ,_aadde :=_aeged .Shading .(*_cg .PdfObjectDictionary );if !_aadde {return _cg .ErrTypeError ;
};_bgaaa .Set (keyName ,shadingObj );return nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_cggd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_aedc *PdfPattern )SetContext (ctx PdfModel ){_aedc ._cafbb =ctx };

// AddExtGState adds a graphics state to the XObject resources.
func (_dfba *PdfPage )AddExtGState (name _cg .PdfObjectName ,egs *_cg .PdfObjectDictionary )error {if _dfba .Resources ==nil {_dfba .Resources =NewPdfPageResources ();};if _dfba .Resources .ExtGState ==nil {_dfba .Resources .ExtGState =_cg .MakeDict ();
};_efdg ,_abgg :=_cg .TraceToDirectObject (_dfba .Resources .ExtGState ).(*_cg .PdfObjectDictionary );if !_abgg {_bc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cg .TraceToDirectObject (_dfba .Resources .ExtGState ));
return _cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efdg .Set (name ,egs );return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bdbfc *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cc .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_fffdf *_cg .PdfIndirectObject ;_egeag *_cg .PdfIndirectObject ;_gbdfe map[_cg .PdfObject ]struct{};_ebgeg []_cg .PdfObject ;_cgedd map[_cg .PdfObject ]struct{};_afgbg []*_cg .PdfIndirectObject ;_acgc *PdfOutlineTreeNode ;_feafc *_cg .PdfObjectDictionary ;
_aefgc []_cg .PdfObject ;_gfecf *_cg .PdfIndirectObject ;_fcgdgb *_c .Writer ;_ebce int64 ;_dafgb error ;_gagda *_cg .PdfCrypt ;_eegag *_cg .PdfObjectDictionary ;_dcceb *_cg .PdfIndirectObject ;_fegea *_cg .PdfObjectArray ;_baefbc _cg .Version ;_feega *bool ;
_adbec map[_cg .PdfObject ][]*_cg .PdfObjectDictionary ;_gaccg *PdfAcroForm ;_ecgdg Optimizer ;_gaegf StandardApplier ;_eebbe map[int ]crossReference ;_bdcfcd int64 ;ObjNumOffset int ;_egaa bool ;_fcfcg _cg .XrefTable ;_ccfbe int64 ;_gcgea int64 ;_gagef map[_cg .PdfObject ]int64 ;
_bcbeb map[_cg .PdfObject ]struct{};_gccbc string ;_bgcga []*PdfOutputIntent ;_abecd bool ;_gcccf ,_efbb string ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ecba *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func _edce (_abfac _cg .PdfObject ){_bc .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_abfac ,_abfac .String ());if _eeccgc ,_cfcgded :=_abfac .(*_cg .PdfObjectStream );
_cfcgded {_afbc ,_bfggc :=_cg .DecodeStream (_eeccgc );if _bfggc !=nil {_bc .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_bfggc );return ;};_bc .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_afbc );}else if _ffabc ,_bfafb :=_abfac .(*_cg .PdfIndirectObject );
_bfafb {_bc .Log .Debug ("\u0025\u0054\u0020%\u0076",_ffabc .PdfObject ,_ffabc .PdfObject );_bc .Log .Debug ("\u0025\u0073",_ffabc .PdfObject .String ());};};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_bedgg :=&PdfFilespec {};_bedgg ._cbdf =_cg .MakeIndirectObject (_cg .MakeDict ());return _bedgg ;};func (_fbed *PdfReader )newPdfAnnotationProjectionFromDict (_cffg *_cg .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fecb :=&PdfAnnotationProjection {};
_ggdg ,_bcfc :=_fbed .newPdfAnnotationMarkupFromDict (_cffg );if _bcfc !=nil {return nil ,_bcfc ;};_fecb .PdfAnnotationMarkup =_ggdg ;return _fecb ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_aaeb *PdfAnnotationPrinterMark )ToPdfObject ()_cg .PdfObject {_aaeb .PdfAnnotation .ToPdfObject ();_cagd :=_aaeb ._bgf ;_feg :=_cagd .PdfObject .(*_cg .PdfObjectDictionary );_feg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_feg .SetIfNotNil ("\u004d\u004e",_aaeb .MN );return _cagd ;};func (_acfde *PdfWriter )setDocInfo (_dcaffd _cg .PdfObject ){if _acfde .hasObject (_acfde ._gfecf ){delete (_acfde ._cgedd ,_acfde ._gfecf );delete (_acfde ._bcbeb ,_acfde ._gfecf );for _egfbe ,_dbcfe :=range _acfde ._ebgeg {if _dbcfe ==_acfde ._gfecf {copy (_acfde ._ebgeg [_egfbe :],_acfde ._ebgeg [_egfbe +1:]);
_acfde ._ebgeg [len (_acfde ._ebgeg )-1]=nil ;_acfde ._ebgeg =_acfde ._ebgeg [:len (_acfde ._ebgeg )-1];break ;};};};_ebgaf :=_cg .PdfIndirectObject {};_ebgaf .PdfObject =_dcaffd ;_acfde ._gfecf =&_ebgaf ;_acfde .addObject (&_ebgaf );};

// BaseFont returns the font's "BaseFont" field.
func (_gccfb *PdfFont )BaseFont ()string {return _gccfb .baseFields ()._gbfc };

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_eaabdf *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_gddec :=NewPdfOutlineItem ();_gddec .Title =_cg .MakeEncodedString (_eaabdf .Title ,true );_gddec .Dest =_eaabdf .Dest .ToPdfObject ();var _cbcc []*PdfOutlineItem ;var _acdee int64 ;
var _efda *PdfOutlineItem ;for _ ,_dbccg :=range _eaabdf .Entries {_ffdf ,_gggc :=_dbccg .ToPdfOutlineItem ();_ffdf .Parent =&_gddec .PdfOutlineTreeNode ;if _efda !=nil {_efda .Next =&_ffdf .PdfOutlineTreeNode ;_ffdf .Prev =&_efda .PdfOutlineTreeNode ;
};_cbcc =append (_cbcc ,_ffdf );_acdee +=_gggc ;_efda =_ffdf ;};_efged :=len (_cbcc );_acdee +=int64 (_efged );if _efged > 0{_gddec .First =&_cbcc [0].PdfOutlineTreeNode ;_gddec .Last =&_cbcc [_efged -1].PdfOutlineTreeNode ;_gddec .Count =&_acdee ;};return _gddec ,_acdee ;
};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;RD _cg .PdfObject ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_cg .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bacf *PdfShading )ToPdfObject ()_cg .PdfObject {_gdaba :=_bacf ._cagea ;_adeeg ,_dbfad :=_bacf .getShadingDict ();if _dbfad !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bacf .ShadingType !=nil {_adeeg .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bacf .ShadingType );};if _bacf .ColorSpace !=nil {_adeeg .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bacf .ColorSpace .ToPdfObject ());
};if _bacf .Background !=nil {_adeeg .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bacf .Background );};if _bacf .BBox !=nil {_adeeg .Set ("\u0042\u0042\u006f\u0078",_bacf .BBox .ToPdfObject ());};if _bacf .AntiAlias !=nil {_adeeg .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bacf .AntiAlias );
};return _gdaba ;};func (_fegfg *PdfWriter )hasObject (_egedc _cg .PdfObject )bool {_ ,_bbfcaa :=_fegfg ._cgedd [_egedc ];return _bbfcaa ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_fgafa *PdfPageResources )GenerateXObjectName ()_cg .PdfObjectName {_gege :=1;for {_bbbff :=_cg .MakeName (_f .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_gege ));if !_fgafa .HasXObjectByName (*_bbbff ){return *_bbbff ;};_gege ++;};};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_ffca *PdfField )FullName ()(string ,error ){var _fcfb _cd .Buffer ;_gfcge :=[]string {};if _ffca .T !=nil {_gfcge =append (_gfcge ,_ffca .T .Decoded ());};_ddde :=map[*PdfField ]bool {};_ddde [_ffca ]=true ;_cfdf :=_ffca .Parent ;for _cfdf !=nil {if _ ,_edfa :=_ddde [_cfdf ];
_edfa {return _fcfb .String (),_cc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _cfdf .T ==nil {return _fcfb .String (),_cc .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_gfcge =append (_gfcge ,_cfdf .T .Decoded ());_ddde [_cfdf ]=true ;_cfdf =_cfdf .Parent ;};for _cbga :=len (_gfcge )-1;_cbga >=0;_cbga --{_fcfb .WriteString (_gfcge [_cbga ]);if _cbga > 0{_fcfb .WriteString ("\u002e");};};return _fcfb .String (),nil ;
};var _bbba =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_cdfe *PdfReader )newPdfActionLaunchFromDict (_gce *_cg .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ggeaf ,_agc :=_acf (_gce .Get ("\u0046"));if _agc !=nil {return nil ,_agc ;};return &PdfActionLaunch {Win :_gce .Get ("\u0057\u0069\u006e"),Mac :_gce .Get ("\u004d\u0061\u0063"),Unix :_gce .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_gce .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ggeaf },nil ;
};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_cg .PdfObjectString ;Q *_cg .PdfObjectInteger ;DS *_cg .PdfObjectString ;RV _cg .PdfObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _cg .PdfObject ;};

// PartialName returns the partial name of the field.
func (_cfefc *PdfField )PartialName ()string {_cfdeb :="";if _cfefc .T !=nil {_cfdeb =_cfefc .T .Decoded ();}else {_bc .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _cfdeb ;};

// GetNumComponents returns the number of color components.
func (_eage *PdfColorspaceICCBased )GetNumComponents ()int {return _eage .N };

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_cdfac *PdfColorspaceSpecialIndexed )ToPdfObject ()_cg .PdfObject {_bbfca :=_cg .MakeArray (_cg .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_bbfca .Append (_cdfac .Base .ToPdfObject ());_bbfca .Append (_cg .MakeInteger (int64 (_cdfac .HiVal )));
_bbfca .Append (_cdfac .Lookup );if _cdfac ._bcgd !=nil {_cdfac ._bcgd .PdfObject =_bbfca ;return _cdfac ._bcgd ;};return _bbfca ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_fbeg :=&PdfColorspaceLab {};_fbeg .BlackPoint =[]float64 {0.0,0.0,0.0};_fbeg .Range =[]float64 {-100,100,-100,100};return _fbeg ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _cg .PdfObject ;AN _cg .PdfObject ;OP _cg .PdfObject ;JS _cg .PdfObject ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _cg .PdfObjectArray )(*PdfRectangle ,error ){_aecdf :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _eefbd error ;_aecdf .Llx ,_eefbd =_cg .GetNumberAsFloat (arr .Get (0));if _eefbd !=nil {return nil ,_eefbd ;};_aecdf .Lly ,_eefbd =_cg .GetNumberAsFloat (arr .Get (1));if _eefbd !=nil {return nil ,_eefbd ;};_aecdf .Urx ,_eefbd =_cg .GetNumberAsFloat (arr .Get (2));
if _eefbd !=nil {return nil ,_eefbd ;};_aecdf .Ury ,_eefbd =_cg .GetNumberAsFloat (arr .Get (3));if _eefbd !=nil {return nil ,_eefbd ;};return &_aecdf ,nil ;};func (_dbfd *PdfReader )newPdfAnnotationRedactFromDict (_gfaf *_cg .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_ccbc :=PdfAnnotationRedact {};
_gdbea ,_gde :=_dbfd .newPdfAnnotationMarkupFromDict (_gfaf );if _gde !=nil {return nil ,_gde ;};_ccbc .PdfAnnotationMarkup =_gdbea ;_ccbc .QuadPoints =_gfaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ccbc .IC =_gfaf .Get ("\u0049\u0043");
_ccbc .RO =_gfaf .Get ("\u0052\u004f");_ccbc .OverlayText =_gfaf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_ccbc .Repeat =_gfaf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_ccbc .DA =_gfaf .Get ("\u0044\u0041");_ccbc .Q =_gfaf .Get ("\u0051");
return &_ccbc ,nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ad .SimpleEncoder ,error ){_cbeaeb ,_cbdae :=_dgaa (basefont );if _cbdae !=nil {return nil ,nil ,_cbdae ;};_bbdag ,_ceaad :=_cbeaeb .Encoder ().(_ad .SimpleEncoder );
if !_ceaad {return nil ,nil ,_f .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cbeaeb .Encoder ());
};_fbdb :=make (map[rune ]_ad .GlyphName );for _aaba :=range alphabet {if _ ,_aeeg :=_bbdag .RuneToCharcode (_aaba );!_aeeg {_ ,_aacb :=_cbeaeb ._eadbf .Read (_aaba );if !_aacb {_bc .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_aaba ,_aaba );
continue ;};_cceef ,_aacb :=_ad .RuneToGlyph (_aaba );if !_aacb {_bc .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_aaba ,_aaba );continue ;};if len (_fbdb )>=255{return nil ,nil ,_cc .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_fbdb [_aaba ]=_cceef ;};};var (_dcgaa []_ad .CharCode ;_cfaf []_ad .CharCode ;);for _ffgf :=_ad .CharCode (1);_ffgf <=0xff;_ffgf ++{_ccgg ,_gabda :=_bbdag .CharcodeToRune (_ffgf );if !_gabda {_dcgaa =append (_dcgaa ,_ffgf );continue ;};if _ ,_gabda =alphabet [_ccgg ];
!_gabda {_cfaf =append (_cfaf ,_ffgf );};};_dbdf :=append (_dcgaa ,_cfaf ...);if len (_dbdf )< len (_fbdb ){return nil ,nil ,_f .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_fbdb ),len (_dbdf ));
};_ffddc :=make ([]rune ,0,len (_fbdb ));for _gfab :=range _fbdb {_ffddc =append (_ffddc ,_gfab );};_fb .Slice (_ffddc ,func (_dbbg ,_fcfe int )bool {return _ffddc [_dbbg ]< _ffddc [_fcfe ]});_cbaa :=make (map[_ad .CharCode ]_ad .GlyphName ,len (_ffddc ));
for _ ,_bccgd :=range _ffddc {_bgcfa :=_dbdf [0];_dbdf =_dbdf [1:];_cbaa [_bgcfa ]=_fbdb [_bccgd ];};_bbdag =_ad .ApplyDifferences (_bbdag ,_cbaa );_cbeaeb .SetEncoder (_bbdag );return &PdfFont {_dfaba :&_cbeaeb },_bbdag ,nil ;};func _edgb ()string {_ebfgf .Lock ();
defer _ebfgf .Unlock ();return _gfac };

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dbgg *PdfWriter )SetPageLabels (pageLabels _cg .PdfObject )error {if pageLabels ==nil {return nil ;};_bc .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_dbgg ._feafc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _dbgg .addObjects (pageLabels );};

// AddFont adds a font dictionary to the Font resources.
func (_egfb *PdfPage )AddFont (name _cg .PdfObjectName ,font _cg .PdfObject )error {if _egfb .Resources ==nil {_egfb .Resources =NewPdfPageResources ();};if _egfb .Resources .Font ==nil {_egfb .Resources .Font =_cg .MakeDict ();};_feccf ,_fcfcc :=_cg .TraceToDirectObject (_egfb .Resources .Font ).(*_cg .PdfObjectDictionary );
if !_fcfcc {_bc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_cg .TraceToDirectObject (_egfb .Resources .Font ));
return _cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_feccf .Set (name ,font );return nil ;};

// GetVersion gets the document version.
func (_cdcecc *PdfWriter )GetVersion ()_cg .Version {return _cdcecc ._baefbc };func (_bgab *PdfShading )getShadingDict ()(*_cg .PdfObjectDictionary ,error ){_eagea :=_bgab ._cagea ;if _ccdcg ,_ggeac :=_eagea .(*_cg .PdfIndirectObject );_ggeac {_edbfg ,_dfadgb :=_ccdcg .PdfObject .(*_cg .PdfObjectDictionary );
if !_dfadgb {return nil ,_cg .ErrTypeError ;};return _edbfg ,nil ;}else if _fbfg ,_dcec :=_eagea .(*_cg .PdfObjectStream );_dcec {return _fbfg .PdfObjectDictionary ,nil ;}else if _bafaf ,_fbedb :=_eagea .(*_cg .PdfObjectDictionary );_fbedb {return _bafaf ,nil ;
}else {_bc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_cg .ErrTypeError ;};};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject returns the PDF representation of the function.
func (_fbdcf *PdfFunctionType4 )ToPdfObject ()_cg .PdfObject {_cbae :=_fbdcf ._ebde ;if _cbae ==nil {_fbdcf ._ebde =&_cg .PdfObjectStream {};_cbae =_fbdcf ._ebde ;};_cbcaf :=_cg .MakeDict ();_cbcaf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (4));
_dgggc :=&_cg .PdfObjectArray {};for _ ,_adgaf :=range _fbdcf .Domain {_dgggc .Append (_cg .MakeFloat (_adgaf ));};_cbcaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgggc );_gdbeg :=&_cg .PdfObjectArray {};for _ ,_fdabg :=range _fbdcf .Range {_gdbeg .Append (_cg .MakeFloat (_fdabg ));
};_cbcaf .Set ("\u0052\u0061\u006eg\u0065",_gdbeg );if _fbdcf ._bdcfa ==nil &&_fbdcf .Program !=nil {_fbdcf ._bdcfa =[]byte (_fbdcf .Program .String ());};_cbcaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_fbdcf ._bdcfa ))));
_cbae .Stream =_fbdcf ._bdcfa ;_cbae .PdfObjectDictionary =_cbcaf ;return _cbae ;};