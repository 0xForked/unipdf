//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_d "bufio";_ffa "bytes";_dgb "crypto/rand";_cf "crypto/sha1";_dgd "crypto/x509";_dg "encoding/binary";_c "encoding/hex";_fd "errors";_a "fmt";_ef "github.com/unidoc/pkcs7";_bg "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/core";
_gef "github.com/unidoc/unipdf/v3/core/security";_daf "github.com/unidoc/unipdf/v3/core/security/crypt";_bd "github.com/unidoc/unipdf/v3/internal/cmap";_ea "github.com/unidoc/unipdf/v3/internal/imageutil";_bb "github.com/unidoc/unipdf/v3/internal/license";
_gab "github.com/unidoc/unipdf/v3/internal/sampling";_fgd "github.com/unidoc/unipdf/v3/internal/textencoding";_ed "github.com/unidoc/unipdf/v3/internal/transform";_eb "github.com/unidoc/unipdf/v3/model/internal/fonts";_afg "github.com/unidoc/unipdf/v3/model/sigutil";
_ba "github.com/unidoc/unipdf/v3/ps";_ffaf "github.com/unidoc/unitype";_dga "golang.org/x/xerrors";_af "image";_fb "image/color";_ "image/gif";_ "image/png";_fa "io";_ga "io/ioutil";_ged "math";_cc "math/rand";_ff "os";_cd "regexp";_ge "sort";_da "strconv";
_db "strings";_fg "sync";_g "time";_ca "unicode";_ccf "unicode/utf8";);func (_daegb *DSS )addCerts (_befa [][]byte )([]*_dc .PdfObjectStream ,error ){return _daegb .add (&_daegb .Certs ,_daegb ._afdfg ,_befa );};

// ToInteger convert to an integer format.
func (_adbga *PdfColorLab )ToInteger (bits int )[3]uint32 {_dddde :=_ged .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dddde *_adbga .L ()),uint32 (_dddde *_adbga .A ()),uint32 (_dddde *_adbga .B ())};};

// ToPdfObject returns the PDF representation of the function.
func (_fccf *PdfFunctionType3 )ToPdfObject ()_dc .PdfObject {_deegg :=_dc .MakeDict ();_deegg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dc .MakeInteger (3));_cabda :=&_dc .PdfObjectArray {};for _ ,_gegba :=range _fccf .Domain {_cabda .Append (_dc .MakeFloat (_gegba ));
};_deegg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cabda );if _fccf .Range !=nil {_afbaf :=&_dc .PdfObjectArray {};for _ ,_gfee :=range _fccf .Range {_afbaf .Append (_dc .MakeFloat (_gfee ));};_deegg .Set ("\u0052\u0061\u006eg\u0065",_afbaf );};if _fccf .Functions !=nil {_edfce :=&_dc .PdfObjectArray {};
for _ ,_dfcgg :=range _fccf .Functions {_edfce .Append (_dfcgg .ToPdfObject ());};_deegg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_edfce );};if _fccf .Bounds !=nil {_edbeg :=&_dc .PdfObjectArray {};for _ ,_fbbgb :=range _fccf .Bounds {_edbeg .Append (_dc .MakeFloat (_fbbgb ));
};_deegg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_edbeg );};if _fccf .Encode !=nil {_agaeeg :=&_dc .PdfObjectArray {};for _ ,_ddac :=range _fccf .Encode {_agaeeg .Append (_dc .MakeFloat (_ddac ));};_deegg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_agaeeg );
};if _fccf ._dfggd !=nil {_fccf ._dfggd .PdfObject =_deegg ;return _fccf ._dfggd ;};return _deegg ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_badd *PdfPageResources )GetExtGState (keyName _dc .PdfObjectName )(_dc .PdfObject ,bool ){if _badd .ExtGState ==nil {return nil ,false ;};_acecg ,_bage :=_dc .TraceToDirectObject (_badd .ExtGState ).(*_dc .PdfObjectDictionary );if !_bage {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_badd .ExtGState );
return nil ,false ;};if _gffff :=_acecg .Get (keyName );_gffff !=nil {return _gffff ,true ;};return nil ,false ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gbagd *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gbagd ._egccdf .(*PdfShadingPattern );};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_bgcca :=&PdfOutlineItem {_gagf :_dc .MakeIndirectObject (_dc .MakeDict ())};_bgcca ._abcc =_bgcca ;return _bgcca ;};type pdfFontSimple struct{fontCommon ;_babac *_dc .PdfIndirectObject ;_dbaad map[_fgd .CharCode ]float64 ;
_geecg _fgd .TextEncoder ;_dcbbb _fgd .TextEncoder ;_bgbba *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _dc .PdfObject ;LastChar _dc .PdfObject ;Widths _dc .PdfObject ;Encoding _dc .PdfObject ;_afeeg *_eb .RuneCharSafeMap ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _dc .PdfObject ;Name _dc .PdfObject ;State _dc .PdfObject ;StateModel _dc .PdfObject ;};func (_gace *PdfReader )newPdfAnnotationRichMediaFromDict (_cddb *_dc .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_gabb :=&PdfAnnotationRichMedia {};
_gabb .RichMediaSettings =_cddb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_gabb .RichMediaContent =_cddb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _gabb ,nil ;};type pdfSignDictionary struct{*_dc .PdfObjectDictionary ;_ccdec *SignatureHandler ;_bfcef *PdfSignature ;_gefadg int64 ;_ddag int ;_fbfcg int ;_bcgg int ;_ggbba int ;};func _ddfdag (_decf *_dc .PdfObjectDictionary )(*PdfFieldButton ,error ){_fcdge :=&PdfFieldButton {};
_fcdge .Opt ,_ =_dc .GetArray (_decf .Get ("\u004f\u0070\u0074"));return _fcdge ,nil ;};func (_cfc *PdfReader )newPdfAnnotationLineFromDict (_ccff *_dc .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_aeef :=PdfAnnotationLine {};_facd ,_ccfa :=_cfc .newPdfAnnotationMarkupFromDict (_ccff );
if _ccfa !=nil {return nil ,_ccfa ;};_aeef .PdfAnnotationMarkup =_facd ;_aeef .L =_ccff .Get ("\u004c");_aeef .BS =_ccff .Get ("\u0042\u0053");_aeef .LE =_ccff .Get ("\u004c\u0045");_aeef .IC =_ccff .Get ("\u0049\u0043");_aeef .LL =_ccff .Get ("\u004c\u004c");
_aeef .LLE =_ccff .Get ("\u004c\u004c\u0045");_aeef .Cap =_ccff .Get ("\u0043\u0061\u0070");_aeef .IT =_ccff .Get ("\u0049\u0054");_aeef .LLO =_ccff .Get ("\u004c\u004c\u004f");_aeef .CP =_ccff .Get ("\u0043\u0050");_aeef .Measure =_ccff .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_aeef .CO =_ccff .Get ("\u0043\u004f");return &_aeef ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gdaa :=PdfColorCalGray (grayVal );return &_gdaa ;};

// MergePageWith appends page content to source Pdf file page content.
func (_gdgf *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ede :=pageNum -1;var _bceaf *PdfPage ;for _dcb ,_agcb :=range _gdgf ._aebf {if _dcb ==_ede {_bceaf =_agcb ;};};if _bceaf ==nil {return _a .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _bceaf ._eeffa !=nil &&_bceaf ._eeffa .GetParser ()==_gdgf ._fcca ._ecead {_bceaf =_bceaf .Duplicate ();_gdgf ._aebf [_ede ]=_bceaf ;};page =page .Duplicate ();_befgf (page );_gfdf :=_cfgc (_bceaf );_bcce :=_cfgc (page );_cdbf :=make (map[_dc .PdfObjectName ]_dc .PdfObjectName );
for _ffbc :=range _bcce {if _ ,_afbg :=_gfdf [_ffbc ];_afbg {for _cfcc :=1;true ;_cfcc ++{_gea :=_dc .PdfObjectName (string (_ffbc )+_da .Itoa (_cfcc ));if _ ,_fdeff :=_gfdf [_gea ];!_fdeff {_cdbf [_ffbc ]=_gea ;break ;};};};};_fadc ,_egde :=page .GetContentStreams ();
if _egde !=nil {return _egde ;};_edce ,_egde :=_bceaf .GetContentStreams ();if _egde !=nil {return _egde ;};for _feaa ,_cfdb :=range _fadc {for _egfa ,_egge :=range _cdbf {_cfdb =_db .Replace (_cfdb ,"\u002f"+string (_egfa ),"\u002f"+string (_egge ),-1);
};_fadc [_feaa ]=_cfdb ;};_edce =append (_edce ,_fadc ...);if _agbfd :=_bceaf .SetContentStreams (_edce ,_dc .NewFlateEncoder ());_agbfd !=nil {return _agbfd ;};_bceaf ._gbacf =append (_bceaf ._gbacf ,page ._gbacf ...);if _bceaf .Resources ==nil {_bceaf .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_bceaf .Resources .Font =_gdgf .mergeResources (_bceaf .Resources .Font ,page .Resources .Font ,_cdbf );_bceaf .Resources .XObject =_gdgf .mergeResources (_bceaf .Resources .XObject ,page .Resources .XObject ,_cdbf );_bceaf .Resources .Properties =_gdgf .mergeResources (_bceaf .Resources .Properties ,page .Resources .Properties ,_cdbf );
if _bceaf .Resources .ProcSet ==nil {_bceaf .Resources .ProcSet =page .Resources .ProcSet ;};_bceaf .Resources .Shading =_gdgf .mergeResources (_bceaf .Resources .Shading ,page .Resources .Shading ,_cdbf );_bceaf .Resources .ExtGState =_gdgf .mergeResources (_bceaf .Resources .ExtGState ,page .Resources .ExtGState ,_cdbf );
};_dgad ,_egde :=_bceaf .GetMediaBox ();if _egde !=nil {return _egde ;};_cgfg ,_egde :=page .GetMediaBox ();if _egde !=nil {return _egde ;};var _dbeb bool ;if _dgad .Llx > _cgfg .Llx {_dgad .Llx =_cgfg .Llx ;_dbeb =true ;};if _dgad .Lly > _cgfg .Lly {_dgad .Lly =_cgfg .Lly ;
_dbeb =true ;};if _dgad .Urx < _cgfg .Urx {_dgad .Urx =_cgfg .Urx ;_dbeb =true ;};if _dgad .Ury < _cgfg .Ury {_dgad .Ury =_cgfg .Ury ;_dbeb =true ;};if _dbeb {_bceaf .MediaBox =_dgad ;};return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_beae *PdfColorspaceSpecialSeparation )ToPdfObject ()_dc .PdfObject {_fgcb :=_dc .MakeArray (_dc .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fgcb .Append (_beae .ColorantName );_fgcb .Append (_beae .AlternateSpace .ToPdfObject ());
_fgcb .Append (_beae .TintTransform .ToPdfObject ());if _beae ._dadf !=nil {_beae ._dadf .PdfObject =_fgcb ;return _beae ._dadf ;};return _fgcb ;};

// SetContentStream sets the pattern cell's content stream.
func (_gfed *PdfTilingPattern )SetContentStream (content []byte ,encoder _dc .StreamEncoder )error {_deffg ,_cegaa :=_gfed ._dbcag .(*_dc .PdfObjectStream );if !_cegaa {_bg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfed ._dbcag );
return _dc .ErrTypeError ;};if encoder ==nil {encoder =_dc .NewRawEncoder ();};_eefee :=_deffg .PdfObjectDictionary ;_feaac :=encoder .MakeStreamDict ();_eefee .Merge (_feaac );_badba ,_egeb :=encoder .EncodeBytes (content );if _egeb !=nil {return _egeb ;
};_eefee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dc .MakeInteger (int64 (len (_badba ))));_deffg .Stream =_badba ;return nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ccd :=NewPdfAction ();_bag :=&PdfActionSound {};_bag .PdfAction =_ccd ;_ccd .SetContext (_bag );return _bag ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_gbeef *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _dc .GetNumberAsFloat (_gbeef .Ascent );};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_fcbc int ,_eeafc *PdfPage );

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _g .Time ){_bbaae .Lock ();defer _bbaae .Unlock ();_ggbed =creationDate ;};func (_bcf *PdfReader )newPdfAnnotationUnderlineFromDict (_cabf *_dc .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fcf :=PdfAnnotationUnderline {};
_gcbd ,_abb :=_bcf .newPdfAnnotationMarkupFromDict (_cabf );if _abb !=nil {return nil ,_abb ;};_fcf .PdfAnnotationMarkup =_gcbd ;_fcf .QuadPoints =_cabf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fcf ,nil ;};

// B returns the value of the blue component of the color.
func (_gfgc *PdfColorDeviceRGB )B ()float64 {return _gfgc [2]};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _fa .ReadSeeker )(*PdfReader ,error ){const _cbdaa ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";_baebb :=&PdfReader {_aeag :rs ,_agde :map[_dc .PdfObject ]struct{}{},_abaeb :_bdbad (),_egfdf :true };
_bffac ,_fgec :=_fgebb ("\u0072");if _fgec !=nil {return nil ,_fgec ;};_fgec =_bb .Track (_bffac ,_cbdaa );if _fgec !=nil {return nil ,_fgec ;};_baebb ._dccac =_bffac ;_dcgfg ,_fgec :=_dc .NewParser (rs );if _fgec !=nil {return nil ,_fgec ;};_baebb ._ecead =_dcgfg ;
_edaag ,_fgec :=_baebb .IsEncrypted ();if _fgec !=nil {return nil ,_fgec ;};if !_edaag {_fgec =_baebb .loadStructure ();if _fgec !=nil {return nil ,_fgec ;};};return _baebb ,nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_egad *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_bg .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_bg .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_bg .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_bg .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_agff ,_cagg :=_ea .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cecag ,img ._bbde );if _cagg !=nil {return Image {},_cagg ;};_dcge ,_cagg :=_ea .NRGBAConverter .Convert (_agff );if _cagg !=nil {return Image {},_cagg ;
};return _ggff (_dcge .Base ()),nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_adcc *Image )Resample (targetBitsPerComponent int64 ){if _adcc .BitsPerComponent ==targetBitsPerComponent {return ;};_ebgeg :=_adcc .GetSamples ();if targetBitsPerComponent < _adcc .BitsPerComponent {_fbfe :=_adcc .BitsPerComponent -targetBitsPerComponent ;
for _dfbc :=range _ebgeg {_ebgeg [_dfbc ]>>=uint (_fbfe );};}else if targetBitsPerComponent > _adcc .BitsPerComponent {_aacae :=targetBitsPerComponent -_adcc .BitsPerComponent ;for _gdgcb :=range _ebgeg {_ebgeg [_gdgcb ]<<=uint (_aacae );};};_adcc .BitsPerComponent =targetBitsPerComponent ;
if _adcc .BitsPerComponent < 8{_adcc .resampleLowBits (_ebgeg );return ;};_addbc :=_ea .BytesPerLine (int (_adcc .Width ),int (_adcc .BitsPerComponent ),_adcc .ColorComponents );_fdde :=make ([]byte ,_addbc *int (_adcc .Height ));var (_gafa ,_eggg ,_ddba ,_fgafd int ;
_bbbb uint32 ;);for _ddba =0;_ddba < int (_adcc .Height );_ddba ++{_gafa =_ddba *_addbc ;_eggg =(_ddba +1)*_addbc -1;_dgdbf :=_gab .ResampleUint32 (_ebgeg [_gafa :_eggg ],int (targetBitsPerComponent ),8);for _fgafd ,_bbbb =range _dgdbf {_fdde [_fgafd +_gafa ]=byte (_bbbb );
};};_adcc .Data =_fdde ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bffaf *Outline )Insert (index uint ,item *OutlineItem ){_cadcc :=uint (len (_bffaf .Entries ));if index > _cadcc {index =_cadcc ;};_bffaf .Entries =append (_bffaf .Entries [:index ],append ([]*OutlineItem {item },_bffaf .Entries [index :]...)...);
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bggg *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bged ,_dfcg :=_dc .GetNumbersAsFloat (objects );
if _dfcg !=nil {return nil ,_dfcg ;};return _bggg .ColorFromFloats (_bged );};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_bbc *PdfAction )GetContext ()PdfModel {if _bbc ==nil {return nil ;};return _bbc ._efa ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bdgbc *PdfField )FullName ()(string ,error ){var _dfbaf _ffa .Buffer ;_edcd :=[]string {};if _bdgbc .T !=nil {_edcd =append (_edcd ,_bdgbc .T .Decoded ());};_bbgf :=map[*PdfField ]bool {};_bbgf [_bdgbc ]=true ;_dgega :=_bdgbc .Parent ;for _dgega !=nil {if _ ,_gfad :=_bbgf [_dgega ];
_gfad {return _dfbaf .String (),_fd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _dgega .T ==nil {return _dfbaf .String (),_fd .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_edcd =append (_edcd ,_dgega .T .Decoded ());_bbgf [_dgega ]=true ;_dgega =_dgega .Parent ;};for _efgf :=len (_edcd )-1;_efgf >=0;_efgf --{_dfbaf .WriteString (_edcd [_efgf ]);if _efgf > 0{_dfbaf .WriteString ("\u002e");};};return _dfbaf .String (),nil ;
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_agfc pdfCIDFontType2 )GetCharMetrics (code _fgd .CharCode )(_eb .CharMetrics ,bool ){if _dbfc ,_dgec :=_agfc ._dbcbg [code ];_dgec {return _eb .CharMetrics {Wx :_dbfc },true ;};_ffdcg :=rune (code );_dadb ,_fggad :=_agfc ._fggfd [_ffdcg ];if !_fggad {_dadb =int (_agfc ._aefc );
};return _eb .CharMetrics {Wx :float64 (_dadb )},true ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_dc .PdfObjectStream )(*XObjectImage ,error ){_aecaea :=&XObjectImage {};_aecaea ._gdfbe =stream ;_efedc :=*(stream .PdfObjectDictionary );_bcbad ,_cfgef :=_dc .NewEncoderFromStream (stream );if _cfgef !=nil {return nil ,_cfgef ;
};_aecaea .Filter =_bcbad ;if _cbgcc :=_dc .TraceToDirectObject (_efedc .Get ("\u0057\u0069\u0064t\u0068"));_cbgcc !=nil {_adcgc ,_bcag :=_cbgcc .(*_dc .PdfObjectInteger );if !_bcag {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cebaa :=int64 (*_adcgc );_aecaea .Width =&_cebaa ;}else {return nil ,_fd .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cfgdcd :=_dc .TraceToDirectObject (_efedc .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_cfgdcd !=nil {_edfagg ,_cafec :=_cfgdcd .(*_dc .PdfObjectInteger );if !_cafec {return nil ,_fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cadgg :=int64 (*_edfagg );
_aecaea .Height =&_cadgg ;}else {return nil ,_fd .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _beffg :=_dc .TraceToDirectObject (_efedc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_beffg !=nil {_ffbfce ,_fefdf :=NewPdfColorspaceFromPdfObject (_beffg );if _fefdf !=nil {return nil ,_fefdf ;};_aecaea .ColorSpace =_ffbfce ;}else {_bg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_aecaea .ColorSpace =NewPdfColorspaceDeviceGray ();};if _dead :=_dc .TraceToDirectObject (_efedc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dead !=nil {_ffcd ,_cacfa :=_dead .(*_dc .PdfObjectInteger );
if !_cacfa {return nil ,_fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ceea :=int64 (*_ffcd );_aecaea .BitsPerComponent =&_ceea ;};_aecaea .Intent =_efedc .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_aecaea .ImageMask =_efedc .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_aecaea .Mask =_efedc .Get ("\u004d\u0061\u0073\u006b");_aecaea .Decode =_efedc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_aecaea .Interpolate =_efedc .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_aecaea .Alternatives =_efedc .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_aecaea .SMask =_efedc .Get ("\u0053\u004d\u0061s\u006b");_aecaea .SMaskInData =_efedc .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_aecaea .Matte =_efedc .Get ("\u004d\u0061\u0074t\u0065");_aecaea .Name =_efedc .Get ("\u004e\u0061\u006d\u0065");_aecaea .StructParent =_efedc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_aecaea .ID =_efedc .Get ("\u0049\u0044");
_aecaea .OPI =_efedc .Get ("\u004f\u0050\u0049");_aecaea .Metadata =_efedc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_aecaea .OC =_efedc .Get ("\u004f\u0043");_aecaea .Stream =stream .Stream ;return _aecaea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eg *PdfActionSound )ToPdfObject ()_dc .PdfObject {_eg .PdfAction .ToPdfObject ();_bda :=_eg ._be ;_fed :=_bda .PdfObject .(*_dc .PdfObjectDictionary );_fed .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeSound )));_fed .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_eg .Sound );
_fed .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_eg .Volume );_fed .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_eg .Synchronous );_fed .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_eg .Repeat );_fed .SetIfNotNil ("\u004d\u0069\u0078",_eg .Mix );
return _bda ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_daece *PdfColorCalRGB )GetNumComponents ()int {return 3};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _dc .PdfObject ;RichMediaContent _dc .PdfObject ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_ecg :=NewPdfAnnotation ();_adb :=&PdfAnnotationText {};_adb .PdfAnnotation =_ecg ;_adb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecg .SetContext (_adb );return _adb ;};

// Encoder returns the font's text encoder.
func (_fggfg pdfCIDFontType2 )Encoder ()_fgd .TextEncoder {return _fggfg ._bddfg };

// R returns the value of the red component of the color.
func (_ebdgf *PdfColorDeviceRGB )R ()float64 {return _ebdgf [0]};

// SetFontByName sets the font specified by keyName to the given object.
func (_adba *PdfPageResources )SetFontByName (keyName _dc .PdfObjectName ,obj _dc .PdfObject )error {if _adba .Font ==nil {_adba .Font =_dc .MakeDict ();};_gcgec ,_eafaa :=_dc .TraceToDirectObject (_adba .Font ).(*_dc .PdfObjectDictionary );if !_eafaa {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dc .TraceToDirectObject (_adba .Font ));
return _dc .ErrTypeError ;};_gcgec .Set (keyName ,obj );return nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_ffggg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _efabb []*PdfField ;_dceaa :=map[*_dc .PdfIndirectObject ]struct{}{};for _ ,_baecd :=range _ffggg .PageList {_eabag ,_eafee :=_baecd .GetAnnotations ();if _eafee !=nil {return _eafee ;
};for _ ,_geeba :=range _eabag {var _abdf *PdfField ;switch _ecfca :=_geeba .GetContext ().(type ){case *PdfAnnotationWidget :if _ecfca ._bea !=nil {_abdf =_ecfca ._bea ;break ;};if _eaace ,_gedca :=_dc .GetIndirect (_ecfca .Parent );_gedca {_abdf ,_eafee =_ffggg .newPdfFieldFromIndirectObject (_eaace ,nil );
if _eafee ==nil {break ;};_bg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eaace ,_eafee );
};if _ecfca ._cgcd !=nil {_abdf ,_eafee =_ffggg .newPdfFieldFromIndirectObject (_ecfca ._cgcd ,nil );if _eafee ==nil {break ;};_bg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecfca ._cgcd ,_eafee );
};};if _abdf ==nil {continue ;};if _ ,_cgffg :=_dceaa [_abdf ._fbaa ];_cgffg {continue ;};_dceaa [_abdf ._fbaa ]=struct{}{};_efabb =append (_efabb ,_abdf );};};if len (_efabb )==0{return nil ;};if _ffggg .AcroForm ==nil {_ffggg .AcroForm =NewPdfAcroForm ();
};_ffggg .AcroForm .Fields =&_efabb ;return nil ;};func (_edfcb fontCommon )isCIDFont ()bool {if _edfcb ._dgdeb ==""{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_edfcb );
};_efagc :=false ;switch _edfcb ._dgdeb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_efagc =true ;};_bg .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_efagc ,_edfcb );
return _efagc ;};

// ToPdfObject implements interface PdfModel.
func (_fdac *PdfAnnotationScreen )ToPdfObject ()_dc .PdfObject {_fdac .PdfAnnotation .ToPdfObject ();_fgef :=_fdac ._cgcd ;_ddfe :=_fgef .PdfObject .(*_dc .PdfObjectDictionary );_ddfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_ddfe .SetIfNotNil ("\u0054",_fdac .T );_ddfe .SetIfNotNil ("\u004d\u004b",_fdac .MK );_ddfe .SetIfNotNil ("\u0041",_fdac .A );_ddfe .SetIfNotNil ("\u0041\u0041",_fdac .AA );return _fgef ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_dgabe *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dgabe .AlternateSpace ==nil {return nil ,_fd .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _dgabe .AlternateSpace .ColorToRGB (color );};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_dc .PdfObjectName ;Colorants _dc .PdfObject ;Process _dc .PdfObject ;MixingHints _dc .PdfObject ;_gefaf *_dc .PdfIndirectObject ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gaag *PdfAnnotationWidget )Field ()*PdfField {return _gaag ._bea };

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_dc .PdfObjectString ;Q *_dc .PdfObjectInteger ;DS *_dc .PdfObjectString ;RV _dc .PdfObject ;MaxLen *_dc .PdfObjectInteger ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aaff pdfCIDFontType2 )GetRuneMetrics (r rune )(_eb .CharMetrics ,bool ){_agfdf ,_bfce :=_aaff ._fggfd [r ];if !_bfce {_aefda ,_aebga :=_dc .GetInt (_aaff .DW );if !_aebga {return _eb .CharMetrics {},false ;};_agfdf =int (*_aefda );};return _eb .CharMetrics {Wx :float64 (_agfdf )},true ;
};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func _fcace (_eafe _dc .PdfObject )(PdfFunction ,error ){_eafe =_dc .ResolveReference (_eafe );if _cebcd ,_dbaec :=_eafe .(*_dc .PdfObjectStream );_dbaec {_dadg :=_cebcd .PdfObjectDictionary ;_efae ,_gdcc :=_dadg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_dc .PdfObjectInteger );
if !_gdcc {_bg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_efae ==0{return _cfabg (_cebcd );}else if *_efae ==4{return _ddbeb (_cebcd );}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gccg ,_dbaaf :=_eafe .(*_dc .PdfIndirectObject );
_dbaaf {_bffbf ,_ggbaa :=_gccg .PdfObject .(*_dc .PdfObjectDictionary );if !_ggbaa {_bg .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bcgcg ,_ggbaa :=_bffbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_dc .PdfObjectInteger );
if !_ggbaa {_bg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_bcgcg ==2{return _eacdd (_gccg );}else if *_bcgcg ==3{return _bfcda (_gccg );}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dbcab ,_bedbc :=_eafe .(*_dc .PdfObjectDictionary );
_bedbc {_gdac ,_cbcgd :=_dbcab .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_dc .PdfObjectInteger );if !_cbcgd {_bg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gdac ==2{return _eacdd (_dbcab );}else if *_gdac ==3{return _bfcda (_dbcab );
}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_bg .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_eafe );
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToPdfObject implements interface PdfModel.
func (_cfd *PdfAnnotationSquare )ToPdfObject ()_dc .PdfObject {_cfd .PdfAnnotation .ToPdfObject ();_daba :=_cfd ._cgcd ;_ceg :=_daba .PdfObject .(*_dc .PdfObjectDictionary );if _cfd .PdfAnnotationMarkup !=nil {_cfd .PdfAnnotationMarkup .appendToPdfDictionary (_ceg );
};_ceg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ceg .SetIfNotNil ("\u0042\u0053",_cfd .BS );_ceg .SetIfNotNil ("\u0049\u0043",_cfd .IC );_ceg .SetIfNotNil ("\u0042\u0045",_cfd .BE );
_ceg .SetIfNotNil ("\u0052\u0044",_cfd .RD );return _daba ;};

// ToPdfObject implements interface PdfModel.
func (_dega *PdfActionGoTo3DView )ToPdfObject ()_dc .PdfObject {_dega .PdfAction .ToPdfObject ();_cbf :=_dega ._be ;_gaa :=_cbf .PdfObject .(*_dc .PdfObjectDictionary );_gaa .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeGoTo3DView )));_gaa .SetIfNotNil ("\u0054\u0041",_dega .TA );
_gaa .SetIfNotNil ("\u0056",_dega .V );return _cbf ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dad :=NewPdfAnnotation ();_afe :=&PdfAnnotationInk {};_afe .PdfAnnotation =_dad ;_afe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dad .SetContext (_afe );return _afe ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_dc .PdfObjectString ;Author *_dc .PdfObjectString ;Subject *_dc .PdfObjectString ;Keywords *_dc .PdfObjectString ;Creator *_dc .PdfObjectString ;Producer *_dc .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_dc .PdfObjectName ;
_bgcge *_dc .PdfObjectDictionary ;};func (_acee *PdfReader )loadAction (_cag _dc .PdfObject )(*PdfAction ,error ){if _bgfb ,_aeff :=_dc .GetIndirect (_cag );_aeff {_gaeg ,_ecfg :=_acee .newPdfActionFromIndirectObject (_bgfb );if _ecfg !=nil {return nil ,_ecfg ;
};return _gaeg ,nil ;}else if !_dc .IsNullObject (_cag ){return nil ,_fd .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func _dbgf (_ffdcbe _dc .PdfObject )(*PdfPageResourcesColorspaces ,error ){_bdfe :=&PdfPageResourcesColorspaces {};if _gafcd ,_fcdcg :=_ffdcbe .(*_dc .PdfIndirectObject );_fcdcg {_bdfe ._gafdb =_gafcd ;_ffdcbe =_gafcd .PdfObject ;};
_gbaf ,_cdbfb :=_dc .GetDict (_ffdcbe );if !_cdbfb {return nil ,_fd .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bdfe .Names =[]string {};_bdfe .Colorspaces =map[string ]PdfColorspace {};
for _ ,_egbea :=range _gbaf .Keys (){_abbad :=_gbaf .Get (_egbea );_bdfe .Names =append (_bdfe .Names ,string (_egbea ));_fdcde ,_ffbbb :=NewPdfColorspaceFromPdfObject (_abbad );if _ffbbb !=nil {return nil ,_ffbbb ;};_bdfe .Colorspaces [string (_egbea )]=_fdcde ;
};return _bdfe ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _dc .PdfObject ;FontFamily _dc .PdfObject ;FontStretch _dc .PdfObject ;FontWeight _dc .PdfObject ;Flags _dc .PdfObject ;FontBBox _dc .PdfObject ;ItalicAngle _dc .PdfObject ;Ascent _dc .PdfObject ;Descent _dc .PdfObject ;
Leading _dc .PdfObject ;CapHeight _dc .PdfObject ;XHeight _dc .PdfObject ;StemV _dc .PdfObject ;StemH _dc .PdfObject ;AvgWidth _dc .PdfObject ;MaxWidth _dc .PdfObject ;MissingWidth _dc .PdfObject ;FontFile _dc .PdfObject ;FontFile2 _dc .PdfObject ;FontFile3 _dc .PdfObject ;
CharSet _dc .PdfObject ;_adae int ;_gebaa float64 ;*fontFile ;_ccbce *_eb .TtfType ;

// Additional entries for CIDFonts
Style _dc .PdfObject ;Lang _dc .PdfObject ;FD _dc .PdfObject ;CIDSet _dc .PdfObject ;_abbgg *_dc .PdfIndirectObject ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_dddd :=NewPdfAnnotation ();_ccaf :=&PdfAnnotationProjection {};_ccaf .PdfAnnotation =_dddd ;_ccaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dddd .SetContext (_ccaf );return _ccaf ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _dc .PdfObject ;BS _dc .PdfObject ;LE _dc .PdfObject ;IC _dc .PdfObject ;LL _dc .PdfObject ;LLE _dc .PdfObject ;Cap _dc .PdfObject ;IT _dc .PdfObject ;LLO _dc .PdfObject ;CP _dc .PdfObject ;
Measure _dc .PdfObject ;CO _dc .PdfObject ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gaacf DefaultImageHandler )NewGrayImageFromGoImage (goimg _af .Image )(*Image ,error ){_fbdgd :=goimg .Bounds ();_aaab :=&Image {Width :int64 (_fbdgd .Dx ()),Height :int64 (_fbdgd .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _aabgf :=goimg .(type ){case *_af .Gray :if len (_aabgf .Pix )!=_fbdgd .Dx ()*_fbdgd .Dy (){_dcdb ,_ceffed :=_ea .GrayConverter .Convert (goimg );
if _ceffed !=nil {return nil ,_ceffed ;};_aaab .Data =_dcdb .Pix ();}else {_aaab .Data =_aabgf .Pix ;};case *_af .Gray16 :_aaab .BitsPerComponent =16;if len (_aabgf .Pix )!=_fbdgd .Dx ()*_fbdgd .Dy ()*2{_cfce ,_aacb :=_ea .Gray16Converter .Convert (goimg );
if _aacb !=nil {return nil ,_aacb ;};_aaab .Data =_cfce .Pix ();}else {_aaab .Data =_aabgf .Pix ;};case _ea .Image :_bfeaa :=_aabgf .Base ();if _bfeaa .ColorComponents ==1{_aaab .BitsPerComponent =int64 (_bfeaa .BitsPerComponent );_aaab .Data =_bfeaa .Data ;
return _aaab ,nil ;};_egecf ,_gabaa :=_ea .GrayConverter .Convert (goimg );if _gabaa !=nil {return nil ,_gabaa ;};_aaab .Data =_egecf .Pix ();default:_gcec ,_fgfd :=_ea .GrayConverter .Convert (goimg );if _fgfd !=nil {return nil ,_fgfd ;};_aaab .Data =_gcec .Pix ();
};return _aaab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acca *PdfActionSetOCGState )ToPdfObject ()_dc .PdfObject {_acca .PdfAction .ToPdfObject ();_eadd :=_acca ._be ;_feb :=_eadd .PdfObject .(*_dc .PdfObjectDictionary );_feb .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeSetOCGState )));_feb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_acca .State );
_feb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_acca .PreserveRB );return _eadd ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_egdg :=NewPdfAnnotation ();_agea :=&PdfAnnotationRedact {};_agea .PdfAnnotation =_egdg ;_agea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egdg .SetContext (_agea );return _agea ;};func (_cab *PdfReader )newPdfActionGotoEFromDict (_ggf *_dc .PdfObjectDictionary )(*PdfActionGoToE ,error ){_cee ,_bcb :=_adg (_ggf .Get ("\u0046"));
if _bcb !=nil {return nil ,_bcb ;};return &PdfActionGoToE {D :_ggf .Get ("\u0044"),NewWindow :_ggf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ggf .Get ("\u0054"),F :_cee },nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_efeg pdfFont };

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _dc .PdfObject ;Volume _dc .PdfObject ;Synchronous _dc .PdfObject ;Repeat _dc .PdfObject ;Mix _dc .PdfObject ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_cbae FieldFlag )Has (fl FieldFlag )bool {return (_cbae .Mask ()&fl .Mask ())> 0};func (_beefe fontCommon )coreString ()string {_cggfd :="";if _beefe ._dffc !=nil {_cggfd =_beefe ._dffc .String ();};return _a .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_beefe ._dgdeb ,_beefe ._bfbac ,_beefe ._ceee ,_beefe ._dbab ,_beefe ._effd !=nil ,_beefe .fontFlags (),_cggfd );
};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_eaefa *PdfPageResources )GetXObjectFormByName (keyName _dc .PdfObjectName )(*XObjectForm ,error ){_ggbc ,_dccgc :=_eaefa .GetXObjectByName (keyName );if _ggbc ==nil {return nil ,nil ;};if _dccgc !=XObjectTypeForm {return nil ,_fd .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_ggbge ,_aebdg :=NewXObjectFormFromStream (_ggbc );if _aebdg !=nil {return nil ,_aebdg ;};return _ggbge ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbd *PdfActionHide )ToPdfObject ()_dc .PdfObject {_gbd .PdfAction .ToPdfObject ();_dcgc :=_gbd ._be ;_gaf :=_dcgc .PdfObject .(*_dc .PdfObjectDictionary );_gaf .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeHide )));_gaf .SetIfNotNil ("\u0054",_gbd .T );
_gaf .SetIfNotNil ("\u0048",_gbd .H );return _dcgc ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_bcdbf *XObjectImage )GetContainingPdfObject ()_dc .PdfObject {return _bcdbf ._gdfbe };

// Add appends an outline item as a child of the current outline item.
func (_dcbgf *OutlineItem )Add (item *OutlineItem ){_dcbgf .Entries =append (_dcbgf .Entries ,item )};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dbcb :=NewPdfAnnotation ();_acec :=&PdfAnnotationSound {};_acec .PdfAnnotation =_dbcb ;_acec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbcb .SetContext (_acec );return _acec ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_ccbd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fd .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_afff ,_agfb :=_ea .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cecag ,img ._bbde );if _agfb !=nil {return img ,_agfb ;};_febb ,_agfb :=_ea .NRGBAConverter .Convert (_afff );if _agfb !=nil {return img ,_agfb ;
};_cedd :=_ggff (_febb .Base ());_bg .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_bg .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_bg .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cedd .Data );
_bg .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cedd );return _cedd ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _dc .PdfObject ;Dest _dc .PdfObject ;H _dc .PdfObject ;PA _dc .PdfObject ;QuadPoints _dc .PdfObject ;BS _dc .PdfObject ;_cgf *PdfAction ;_dcec *PdfReader ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dc .PdfObject ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_acc :=NewPdfAction ();_gc :=&PdfActionTrans {};_gc .PdfAction =_acc ;_acc .SetContext (_gc );return _gc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ffff *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agag ,_bbbg :=_dc .GetNumbersAsFloat (objects );
if _bbbg !=nil {return nil ,_bbbg ;};return _ffff .ColorFromFloats (_agag );};func (_aaa *PdfReader )newPdfActionURIFromDict (_edb *_dc .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_edb .Get ("\u0055\u0052\u0049"),IsMap :_edb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_dc .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _dc .PdfObject ;A _dc .PdfObject ;SE _dc .PdfObject ;C _dc .PdfObject ;F _dc .PdfObject ;
_gagf *_dc .PdfIndirectObject ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_cfbdc *PdfAppender )UpdatePage (page *PdfPage ){_cfbdc .updateObjectsDeep (page .ToPdfObject (),nil );};func _cfeba (_bggdb *_dc .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bfafe :=&PdfTilingPattern {};_fcggff :=_bggdb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _fcggff ==nil {_bg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccebccd ,_efffg :=_fcggff .(*_dc .PdfObjectInteger );if !_efffg {_bg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fcggff );
return nil ,_dc .ErrTypeError ;};_bfafe .PaintType =_ccebccd ;_fcggff =_bggdb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fcggff ==nil {_bg .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bbega ,_efffg :=_fcggff .(*_dc .PdfObjectInteger );if !_efffg {_bg .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcggff );
return nil ,_dc .ErrTypeError ;};_bfafe .TilingType =_bbega ;_fcggff =_bggdb .Get ("\u0042\u0042\u006f\u0078");if _fcggff ==nil {_bg .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fcggff =_dc .TraceToDirectObject (_fcggff );_eeeec ,_efffg :=_fcggff .(*_dc .PdfObjectArray );if !_efffg {_bg .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcggff );
return nil ,_dc .ErrTypeError ;};_bbcf ,_aegbgf :=NewPdfRectangle (*_eeeec );if _aegbgf !=nil {_bg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_aegbgf );return nil ,_aegbgf ;};_bfafe .BBox =_bbcf ;_fcggff =_bggdb .Get ("\u0058\u0053\u0074e\u0070");
if _fcggff ==nil {_bg .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_edaab ,_aegbgf :=_dc .GetNumberAsFloat (_fcggff );if _aegbgf !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_edaab );
return nil ,_aegbgf ;};_bfafe .XStep =_dc .MakeFloat (_edaab );_fcggff =_bggdb .Get ("\u0059\u0053\u0074e\u0070");if _fcggff ==nil {_bg .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_efdeg ,_aegbgf :=_dc .GetNumberAsFloat (_fcggff );if _aegbgf !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_efdeg );
return nil ,_aegbgf ;};_bfafe .YStep =_dc .MakeFloat (_efdeg );_fcggff =_bggdb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fcggff ==nil {_bg .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bggdb ,_efffg =_dc .TraceToDirectObject (_fcggff ).(*_dc .PdfObjectDictionary );if !_efffg {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fcggff );
};_cedge ,_aegbgf :=NewPdfPageResourcesFromDict (_bggdb );if _aegbgf !=nil {return nil ,_aegbgf ;};_bfafe .Resources =_cedge ;if _eeceff :=_bggdb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eeceff !=nil {_dgbdd ,_cabga :=_eeceff .(*_dc .PdfObjectArray );
if !_cabga {_bg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeceff );return nil ,_dc .ErrTypeError ;};_bfafe .Matrix =_dgbdd ;};return _bfafe ,nil ;
};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_gcdfa :=&XObjectImage {};_cfged :=&_dc .PdfObjectStream {};_cfged .PdfObjectDictionary =_dc .MakeDict ();_gcdfa ._gdfbe =_cfged ;return _gcdfa ;};func _afdd (_ggbaf *_dc .PdfObjectDictionary ,_gcc *fontCommon )(*pdfCIDFontType0 ,error ){if _gcc ._dgdeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_bg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gcc );
return nil ,_dc .ErrRangeError ;};_cgbff :=_eaefd (_gcc );_ebbeb ,_becd :=_dc .GetDict (_ggbaf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_becd {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcc );
return nil ,ErrRequiredAttributeMissing ;};_cgbff .CIDSystemInfo =_ebbeb ;_cgbff .DW =_ggbaf .Get ("\u0044\u0057");_cgbff .W =_ggbaf .Get ("\u0057");_cgbff .DW2 =_ggbaf .Get ("\u0044\u0057\u0032");_cgbff .W2 =_ggbaf .Get ("\u0057\u0032");_cgbff ._eddac =1000.0;
if _fbbd ,_adfgg :=_dc .GetNumberAsFloat (_cgbff .DW );_adfgg ==nil {_cgbff ._eddac =_fbbd ;};_adcf ,_agacg :=_bgaf (_cgbff .W );if _agacg !=nil {return nil ,_agacg ;};if _adcf ==nil {_adcf =map[_fgd .CharCode ]float64 {};};_cgbff ._fdag =_adcf ;return _cgbff ,nil ;
};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _dc .PdfObject ;Popup *PdfAnnotationPopup ;CA _dc .PdfObject ;RC _dc .PdfObject ;CreationDate _dc .PdfObject ;IRT _dc .PdfObject ;Subj _dc .PdfObject ;RT _dc .PdfObject ;IT _dc .PdfObject ;ExData _dc .PdfObject ;};

// GetBorderWidth returns the border style's width.
func (_eecc *PdfBorderStyle )GetBorderWidth ()float64 {if _eecc .W ==nil {return 1;};return *_eecc .W ;};func _adgbf (_ggdcc *_dc .PdfObjectDictionary )(*PdfShadingType2 ,error ){_bfgga :=PdfShadingType2 {};_gfae :=_ggdcc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _gfae ==nil {_bg .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_efdfb ,_agdg :=_gfae .(*_dc .PdfObjectArray );if !_agdg {_bg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfae );return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _efdfb .Len ()!=4{_bg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_efdfb .Len ());return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_bfgga .Coords =_efdfb ;if _ggbae :=_ggdcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggbae !=nil {_ggbae =_dc .TraceToDirectObject (_ggbae );_daaebf ,_gcdcg :=_ggbae .(*_dc .PdfObjectArray );if !_gcdcg {_bg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggbae );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfgga .Domain =_daaebf ;};_gfae =_ggdcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gfae ==nil {_bg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bfgga .Function =[]PdfFunction {};if _fdecd ,_fadd :=_gfae .(*_dc .PdfObjectArray );_fadd {for _ ,_edge :=range _fdecd .Elements (){_dgcca ,_dbaeca :=_fcace (_edge );if _dbaeca !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbaeca );
return nil ,_dbaeca ;};_bfgga .Function =append (_bfgga .Function ,_dgcca );};}else {_dedba ,_gdcgg :=_fcace (_gfae );if _gdcgg !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdcgg );
return nil ,_gdcgg ;};_bfgga .Function =append (_bfgga .Function ,_dedba );};if _cbfa :=_ggdcc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cbfa !=nil {_cbfa =_dc .TraceToDirectObject (_cbfa );_dbfg ,_bgffd :=_cbfa .(*_dc .PdfObjectArray );if !_bgffd {_bg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbfa );
return nil ,_dc .ErrTypeError ;};if _dbfg .Len ()!=2{_bg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dbfg .Len ());return nil ,ErrInvalidAttribute ;
};_bfgga .Extend =_dbfg ;};return &_bfgga ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bbdcb pdfCIDFontType0 )GetRuneMetrics (r rune )(_eb .CharMetrics ,bool ){return _eb .CharMetrics {Wx :_bbdcb ._eddac },true ;};

// GetContentStream returns the XObject Form's content stream.
func (_ecgge *XObjectForm )GetContentStream ()([]byte ,error ){_geafb ,_afbea :=_dc .DecodeStream (_ecgge ._dgfed );if _afbea !=nil {return nil ,_afbea ;};return _geafb ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ba .PSProgram ;_adbb *_ba .PSExecutor ;_efgbf []byte ;_dddag *_dc .PdfObjectStream ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _dc .PdfObject ;Flags _dc .PdfObject ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_gebc *PdfFieldChoice )ToPdfObject ()_dc .PdfObject {_gebc .PdfField .ToPdfObject ();_aagfc :=_gebc ._fbaa ;_adfd :=_aagfc .PdfObject .(*_dc .PdfObjectDictionary );_adfd .Set ("\u0046\u0054",_dc .MakeName ("\u0043\u0068"));if _gebc .Opt !=nil {_adfd .Set ("\u004f\u0070\u0074",_gebc .Opt );
};if _gebc .TI !=nil {_adfd .Set ("\u0054\u0049",_gebc .TI );};if _gebc .I !=nil {_adfd .Set ("\u0049",_gebc .I );};return _aagfc ;};

// ToPdfObject implements interface PdfModel.
func (_efd *PdfAnnotationStamp )ToPdfObject ()_dc .PdfObject {_efd .PdfAnnotation .ToPdfObject ();_agbfe :=_efd ._cgcd ;_dge :=_agbfe .PdfObject .(*_dc .PdfObjectDictionary );_efd .PdfAnnotationMarkup .appendToPdfDictionary (_dge );_dge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0053\u0074\u0061m\u0070"));
_dge .SetIfNotNil ("\u004e\u0061\u006d\u0065",_efd .Name );return _agbfe ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_gffda *PdfPattern )ToPdfObject ()_dc .PdfObject {_bebbe :=_gffda .getDict ();_bebbe .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bebbe .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_dc .MakeInteger (_gffda .PatternType ));
return _gffda ._dbcag ;};

// B returns the value of the B component of the color.
func (_cabfc *PdfColorLab )B ()float64 {return _cabfc [2]};func (_agcf *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dafe :=_agcf .Parent ;for _dafe !=nil {_effa ,_aacaf :=_dc .GetDict (_dafe );if !_aacaf {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _dfgcc :=_effa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dfgcc !=nil {_cfacg ,_ecebee :=_dc .GetDict (_dfgcc );
if !_ecebee {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bcfc ,_gfdfa :=NewPdfPageResourcesFromDict (_cfacg );if _gfdfa !=nil {return nil ,_gfdfa ;};return _bcfc ,nil ;
};_dafe =_effa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func _bgdda ()string {_bbaae .Lock ();defer _bbaae .Unlock ();return _egced };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _dc .PdfObject ;NewWindow _dc .PdfObject ;T _dc .PdfObject ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_dc .PdfObject ;GetContainingPdfObject ()_dc .PdfObject ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_fbea :=NewPdfAnnotation ();_dbc :=&PdfAnnotationSquare {};_dbc .PdfAnnotation =_fbea ;_dbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbea .SetContext (_dbc );return _dbc ;};func _eaec (_deead *[]*PdfField ,_gegbg FieldFilterFunc ,_cbba bool )[]*PdfField {if _deead ==nil {return nil ;
};_bgcbg :=*_deead ;if len (*_deead )==0{return nil ;};_cfabd :=_bgcbg [:0];if _gegbg ==nil {_gegbg =func (*PdfField )bool {return true };};var _fdbdg []*PdfField ;for _ ,_bedba :=range _bgcbg {_acgg :=_gegbg (_bedba );if _acgg {_fdbdg =append (_fdbdg ,_bedba );
if len (_bedba .Kids )> 0{_fdbdg =append (_fdbdg ,_eaec (&_bedba .Kids ,_gegbg ,_cbba )...);};};if !_cbba ||!_acgg ||len (_bedba .Kids )> 0{_cfabd =append (_cfabd ,_bedba );};};*_deead =_cfabd ;return _fdbdg ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_caagb *LTV )EnableAll (extraCerts []*_dgd .Certificate )error {_dbdf :=_caagb ._gccc ._fcca .AcroForm ;for _ ,_eabe :=range _dbdf .AllFields (){_cbffe ,_ :=_eabe .GetContext ().(*PdfFieldSignature );if _cbffe ==nil {continue ;};_bcge :=_cbffe .V ;
if _edbga :=_caagb .validateSig (_bcge );_edbga !=nil {_bg .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_edbga );
};if _aage :=_caagb .Enable (_bcge ,extraCerts );_aage !=nil {return _aage ;};};return nil ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_eede *PdfFieldButton )SetType (btype ButtonType ){_dbd :=uint32 (0);if _eede .Ff !=nil {_dbd =uint32 (*_eede .Ff );};switch btype {case ButtonTypePush :_dbd |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dbd |=FieldFlagRadio .Mask ();};_eede .Ff =_dc .MakeInteger (int64 (_dbd ));
};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ddeeb :=PdfPage {};_ddeeb ._bgfa =_dc .MakeDict ();_ddeeb .Resources =NewPdfPageResources ();_bffc :=_dc .PdfIndirectObject {};_bffc .PdfObject =_ddeeb ._bgfa ;_ddeeb ._eeffa =&_bffc ;return &_ddeeb ;};func (_eggac *PdfReader )buildPageList (_gdaea *_dc .PdfIndirectObject ,_bgfddg *_dc .PdfIndirectObject ,_gdbef map[_dc .PdfObject ]struct{})error {if _gdaea ==nil {return nil ;
};if _ ,_acfbg :=_gdbef [_gdaea ];_acfbg {_bg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gdaea .ObjectNumber );
return nil ;};_gdbef [_gdaea ]=struct{}{};_feccb ,_gbda :=_gdaea .PdfObject .(*_dc .PdfObjectDictionary );if !_gbda {return _fd .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_cefee ,_gbda :=(*_feccb ).Get ("\u0054\u0079\u0070\u0065").(*_dc .PdfObjectName );
if !_gbda {if _feccb .Get ("\u004b\u0069\u0064\u0073")==nil {return _fd .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_bg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_cefee =_dc .MakeName ("\u0050\u0061\u0067e\u0073");_feccb .Set ("\u0054\u0079\u0070\u0065",_cefee );};_bg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_cefee ,_gdaea );
if *_cefee =="\u0050\u0061\u0067\u0065"{_beffa ,_ebfeb :=_eggac .newPdfPageFromDict (_feccb );if _ebfeb !=nil {return _ebfeb ;};_beffa .setContainer (_gdaea );if _bgfddg !=nil {_feccb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgfddg );};_eggac ._eebef =append (_eggac ._eebef ,_gdaea );
_eggac .PageList =append (_eggac .PageList ,_beffa );return nil ;};if *_cefee !="\u0050\u0061\u0067e\u0073"{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_cefee );
return _fd .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _bgfddg !=nil {_feccb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgfddg );};if !_eggac ._egfdf {_gecfbb :=_eggac .traverseObjectData (_gdaea );if _gecfbb !=nil {return _gecfbb ;};};_edfdg ,_fgagce :=_eggac ._ecead .Resolve (_feccb .Get ("\u004b\u0069\u0064\u0073"));
if _fgagce !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _fgagce ;};var _edfag *_dc .PdfObjectArray ;
_edfag ,_gbda =_edfdg .(*_dc .PdfObjectArray );if !_gbda {_ffefc ,_edbbe :=_edfdg .(*_dc .PdfIndirectObject );if !_edbbe {return _fd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_edfag ,_gbda =_ffefc .PdfObject .(*_dc .PdfObjectArray );
if !_gbda {return _fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_bg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_edfag );
for _becgc ,_faaec :=range _edfag .Elements (){_eacdg ,_bcbc :=_dc .GetIndirect (_faaec );if !_bcbc {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_eacdg );
return _fd .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_edfag .Set (_becgc ,_eacdg );_fgagce =_eggac .buildPageList (_eacdg ,_gdaea ,_gdbef );if _fgagce !=nil {return _fgagce ;
};};return nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_eebe *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_eebe .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_eebe ._ggg =acroForm ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_bdebb *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gddgc :=_bdebb .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gddgc )> 0;_gega :=_dc .NewFlateEncoder ();_edege :=_dc .MakeArray ();if wrapContents {_cabgg ,_egfgd :=_dc .MakeStream ([]byte ("\u0071\u000a"),_gega );
if _egfgd !=nil {return _egfgd ;};_edege .Append (_cabgg );};_edege .Append (_gddgc ...);if wrapContents {_efbf ,_fbcbb :=_dc .MakeStream ([]byte ("\u000a\u0051\u000a"),_gega );if _fbcbb !=nil {return _fbcbb ;};_edege .Append (_efbf );};_dcdea ,_dacf :=_dc .MakeStream (cs ,_gega );
if _dacf !=nil {return _dacf ;};_edege .Append (_dcdea );_bdebb .Contents =_edege ;return nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gef .Permissions ;Algorithm EncryptionAlgorithm ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cfcda *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _cfcda .fill (provider ,appGen );};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_dc .PdfObjectStream ;OCSP []*_dc .PdfObjectStream ;CRL []*_dc .PdfObjectStream ;TU *_dc .PdfObjectString ;TS *_dc .PdfObjectString ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _dc .PdfObject ;PreserveRB _dc .PdfObject ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gcgf :=&PdfColorspaceSpecialSeparation {};return _gcgf ;};func (_ecegf *Image )samplesTrimPadding (_fdegd []uint32 )[]uint32 {_gcaf :=_ecegf .ColorComponents *int (_ecegf .Width )*int (_ecegf .Height );
if len (_fdegd )==_gcaf {return _fdegd ;};_bbfef :=make ([]uint32 ,_gcaf );_dfdff :=int (_ecegf .Width )*_ecegf .ColorComponents ;var _beabd ,_bdcf ,_egea ,_cbgcd int ;_ggeab :=_ea .BytesPerLine (int (_ecegf .Width ),int (_ecegf .BitsPerComponent ),_ecegf .ColorComponents );
for _beabd =0;_beabd < int (_ecegf .Height );_beabd ++{_bdcf =_beabd *int (_ecegf .Width );_egea =_beabd *_ggeab ;for _cbgcd =0;_cbgcd < _dfdff ;_cbgcd ++{_bbfef [_bdcf +_cbgcd ]=_fdegd [_egea +_cbgcd ];};};return _bbfef ;};

// HasExtGState checks if ExtGState name is available.
func (_dadea *PdfPage )HasExtGState (name _dc .PdfObjectName )bool {if _dadea .Resources ==nil {return false ;};if _dadea .Resources .ExtGState ==nil {return false ;};_ffbdd ,_fbddg :=_dc .TraceToDirectObject (_dadea .Resources .ExtGState ).(*_dc .PdfObjectDictionary );
if !_fbddg {_bg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_dc .TraceToDirectObject (_dadea .Resources .ExtGState ));
return false ;};_fbbgdd :=_ffbdd .Get (name );_ggaec :=_fbbgdd !=nil ;return _ggaec ;};

// SetName sets the `Name` field of the signature.
func (_fecd *PdfSignature )SetName (name string ){_fecd .Name =_dc .MakeString (name )};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _dc .PdfObject ;MK _dc .PdfObject ;A _dc .PdfObject ;AA _dc .PdfObject ;BS _dc .PdfObject ;Parent _dc .PdfObject ;_bea *PdfField ;_aef bool ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_fcae :=NewPdfAnnotation ();_beed :=&PdfAnnotationStamp {};_beed .PdfAnnotation =_fcae ;_beed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcae .SetContext (_beed );return _beed ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_edfe *PdfField )GetContainingPdfObject ()_dc .PdfObject {return _edfe ._fbaa };

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_fbafe *LTV )EnableChain (chain []*_dgd .Certificate )error {return _fbafe .enable (nil ,chain ,"")};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cefd *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gggf :=vals [0];_dedc :=[]float64 {_gggf };_cdbg ,_bfda :=_cefd .TintTransform .Evaluate (_dedc );
if _bfda !=nil {_bg .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bfda );_bg .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cefd .TintTransform );
return nil ,_bfda ;};_bg .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_cdbg ,_cefd .AlternateSpace );
_cbdab ,_bfda :=_cefd .AlternateSpace .ColorFromFloats (_cdbg );if _bfda !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bfda );
return nil ,_bfda ;};return _cbdab ,nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_beedb *PdfOutline )GetContainingPdfObject ()_dc .PdfObject {return _beedb ._cfdeb };

// GetOCProperties returns the optional content properties PdfObject.
func (_dcfdf *PdfReader )GetOCProperties ()(_dc .PdfObject ,error ){_acbee :=_dcfdf ._bedbcf ;_bagda :=_acbee .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bagda =_dc .ResolveReference (_bagda );if !_dcfdf ._egfdf {_bfef :=_dcfdf .traverseObjectData (_bagda );
if _bfef !=nil {return nil ,_bfef ;};};return _bagda ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_becac *PdfTilingPattern )ToPdfObject ()_dc .PdfObject {_becac .PdfPattern .ToPdfObject ();_ccgdd :=_becac .getDict ();if _becac .PaintType !=nil {_ccgdd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_becac .PaintType );};if _becac .TilingType !=nil {_ccgdd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_becac .TilingType );
};if _becac .BBox !=nil {_ccgdd .Set ("\u0042\u0042\u006f\u0078",_becac .BBox .ToPdfObject ());};if _becac .XStep !=nil {_ccgdd .Set ("\u0058\u0053\u0074e\u0070",_becac .XStep );};if _becac .YStep !=nil {_ccgdd .Set ("\u0059\u0053\u0074e\u0070",_becac .YStep );
};if _becac .Resources !=nil {_ccgdd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_becac .Resources .ToPdfObject ());};if _becac .Matrix !=nil {_ccgdd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_becac .Matrix );};return _becac ._dbcag ;};func _gbdea (_ageaf *_dc .PdfObjectDictionary )(*PdfShadingType4 ,error ){_ffegf :=PdfShadingType4 {};
_eggf :=_ageaf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eggf ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbgfb ,_bdccc :=_eggf .(*_dc .PdfObjectInteger );if !_bdccc {_bg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eggf );
return nil ,_dc .ErrTypeError ;};_ffegf .BitsPerCoordinate =_cbgfb ;_eggf =_ageaf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eggf ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cbgfb ,_bdccc =_eggf .(*_dc .PdfObjectInteger );if !_bdccc {_bg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eggf );
return nil ,_dc .ErrTypeError ;};_ffegf .BitsPerComponent =_cbgfb ;_eggf =_ageaf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eggf ==nil {_bg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbgfb ,_bdccc =_eggf .(*_dc .PdfObjectInteger );if !_bdccc {_bg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eggf );
return nil ,_dc .ErrTypeError ;};_ffegf .BitsPerComponent =_cbgfb ;_eggf =_ageaf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eggf ==nil {_bg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cgef ,_bdccc :=_eggf .(*_dc .PdfObjectArray );if !_bdccc {_bg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eggf );
return nil ,_dc .ErrTypeError ;};_ffegf .Decode =_cgef ;_eggf =_ageaf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eggf ==nil {_bg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ffegf .Function =[]PdfFunction {};if _fdgcb ,_bdbc :=_eggf .(*_dc .PdfObjectArray );_bdbc {for _ ,_cefbb :=range _fdgcb .Elements (){_daebc ,_bcfae :=_fcace (_cefbb );if _bcfae !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcfae );
return nil ,_bcfae ;};_ffegf .Function =append (_ffegf .Function ,_daebc );};}else {_gggfc ,_aggfg :=_fcace (_eggf );if _aggfg !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aggfg );
return nil ,_aggfg ;};_ffegf .Function =append (_ffegf .Function ,_gggfc );};return &_ffegf ,nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _fa .ReadSeeker )(*PdfFont ,error ){_fabf ,_dfbde :=_ga .ReadAll (r );if _dfbde !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dfbde );
return nil ,_dfbde ;};_bebef ,_dfbde :=_eb .TtfParse (_ffa .NewReader (_fabf ));if _dfbde !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_dfbde );
return nil ,_dfbde ;};_bgaab :=&pdfCIDFontType2 {fontCommon :fontCommon {_dgdeb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_dc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_bfdda :=make ([]rune ,0,len (_bebef .Chars ));
for _dfff :=range _bebef .Chars {_bfdda =append (_bfdda ,_dfff );};_ge .Slice (_bfdda ,func (_fcecc ,_bbcg int )bool {return _bfdda [_fcecc ]< _bfdda [_bbcg ]});_cbdde :=1000.0/float64 (_bebef .UnitsPerEm );if len (_bebef .Widths )<=0{return nil ,_fd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_dggbg :=_cbdde *float64 (_bebef .Widths [0]);_baed :=make (map[rune ]int );for _ ,_cfefd :=range _bfdda {_ebccb :=_bebef .Chars [_cfefd ];_dafag :=_cbdde *float64 (_bebef .Widths [_ebccb ]);_baed [_cfefd ]=int (_dafag );};_bgaab ._fggfd =_baed ;_bgaab .DW =_dc .MakeInteger (int64 (_dggbg ));
_bagc :=_bbdab (_bfdda ,_baed ,_bebef .Chars );_bgaab .W =_dc .MakeIndirectObject (_bagc );_bdbfc :=_dc .MakeDict ();_bdbfc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_dc .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_bdbfc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_dc .MakeString ("\u0041\u0064\u006fb\u0065"));
_bdbfc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_dc .MakeInteger (0));_bgaab .CIDSystemInfo =_bdbfc ;_cgbef :=&PdfFontDescriptor {FontName :_dc .MakeName (_bebef .PostScriptName ),Ascent :_dc .MakeFloat (_cbdde *float64 (_bebef .TypoAscender )),Descent :_dc .MakeFloat (_cbdde *float64 (_bebef .TypoDescender )),CapHeight :_dc .MakeFloat (_cbdde *float64 (_bebef .CapHeight )),FontBBox :_dc .MakeArrayFromFloats ([]float64 {_cbdde *float64 (_bebef .Xmin ),_cbdde *float64 (_bebef .Ymin ),_cbdde *float64 (_bebef .Xmax ),_cbdde *float64 (_bebef .Ymax )}),ItalicAngle :_dc .MakeFloat (_bebef .ItalicAngle ),MissingWidth :_dc .MakeFloat (_cbdde *float64 (_bebef .Widths [0]))};
_fafad ,_dfbde :=_dc .MakeStream (_fabf ,_dc .NewFlateEncoder ());if _dfbde !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dfbde );
return nil ,_dfbde ;};_fafad .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dc .MakeInteger (int64 (len (_fabf ))));_cgbef .FontFile2 =_fafad ;if _bebef .Bold {_cgbef .StemV =_dc .MakeInteger (120);}else {_cgbef .StemV =_dc .MakeInteger (70);
};_afgdg :=_dgdee ;if _bebef .IsFixedPitch {_afgdg |=_afdbb ;};if _bebef .ItalicAngle !=0{_afgdg |=_gbdfg ;};_cgbef .Flags =_dc .MakeInteger (int64 (_afgdg ));_bgaab ._bfbac =_bebef .PostScriptName ;_bgaab ._dffc =_cgbef ;_cgag :=pdfFontType0 {fontCommon :fontCommon {_dgdeb :"\u0054\u0079\u0070e\u0030",_bfbac :_bebef .PostScriptName },DescendantFont :&PdfFont {_efeg :_bgaab },Encoding :_dc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_efebb :_bebef .NewEncoder ()};
if len (_bebef .Chars )> 0{_cgdfb :=make (map[_bd .CharCode ]rune ,len (_bebef .Chars ));for _dgccbg ,_bggad :=range _bebef .Chars {_gfcag :=_bd .CharCode (_bggad );if _eabgg ,_afbde :=_cgdfb [_gfcag ];!_afbde ||(_afbde &&_eabgg > _dgccbg ){_cgdfb [_gfcag ]=_dgccbg ;
};};_cgag ._dcgae =_bd .NewToUnicodeCMap (_cgdfb );};_caaf :=PdfFont {_efeg :&_cgag };return &_caaf ,nil ;};func _dcag (_fada *_dc .PdfObjectDictionary ,_ggdf *fontCommon )(*pdfFontType0 ,error ){_bbagb ,_geca :=_dc .GetArray (_fada .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_geca {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ggdf );
return nil ,_dc .ErrRangeError ;};if _bbagb .Len ()!=1{_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_bbagb .Len ());return nil ,_dc .ErrRangeError ;
};_cedgd ,_acfcg :=_bgeb (_bbagb .Get (0),false );if _acfcg !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_acfcg ,_ggdf );
return nil ,_acfcg ;};_aeeb :=_efbad (_ggdf );_aeeb .DescendantFont =_cedgd ;_bccc ,_geca :=_dc .GetNameVal (_fada .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _geca {if _bccc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_bccc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_aeeb ._efebb =_fgd .NewIdentityTextEncoder (_bccc );
}else if _bd .IsPredefinedCMap (_bccc ){_aeeb ._adfa ,_acfcg =_bd .LoadPredefinedCMap (_bccc );if _acfcg !=nil {_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bccc ,_acfcg );
};}else {_bg .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_bccc );};};if _ddec :=_cedgd .baseFields ()._dcgae ;_ddec !=nil {if _cbeg :=_ddec .Name ();_cbeg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cbeg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cbeg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cbeg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_aeeb ._efebb =_fgd .NewCMapEncoder (_bccc ,_aeeb ._adfa ,_ddec );
};};return _aeeb ,nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _dc .PdfObject ;AN _dc .PdfObject ;OP _dc .PdfObject ;JS _dc .PdfObject ;};

// Subtype returns the font's "Subtype" field.
func (_aadac *PdfFont )Subtype ()string {_bgfdd :=_aadac .baseFields ()._dgdeb ;if _adfgc ,_ddgae :=_aadac ._efeg .(*pdfFontType0 );_ddgae {_bgfdd =_bgfdd +"\u003a"+_adfgc .DescendantFont .Subtype ();};return _bgfdd ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_bbaae .Lock ();defer _bbaae .Unlock ();_dgbb =title };

// ToPdfObject implements interface PdfModel.
func (_ega *PdfAnnotationHighlight )ToPdfObject ()_dc .PdfObject {_ega .PdfAnnotation .ToPdfObject ();_bfa :=_ega ._cgcd ;_eefg :=_bfa .PdfObject .(*_dc .PdfObjectDictionary );_ega .PdfAnnotationMarkup .appendToPdfDictionary (_eefg );_eefg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_eefg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ega .QuadPoints );return _bfa ;};func (_egdb *PdfReader )newPdfAnnotationCircleFromDict (_bcd *_dc .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_eaaa :=PdfAnnotationCircle {};
_aeg ,_bdf :=_egdb .newPdfAnnotationMarkupFromDict (_bcd );if _bdf !=nil {return nil ,_bdf ;};_eaaa .PdfAnnotationMarkup =_aeg ;_eaaa .BS =_bcd .Get ("\u0042\u0053");_eaaa .IC =_bcd .Get ("\u0049\u0043");_eaaa .BE =_bcd .Get ("\u0042\u0045");_eaaa .RD =_bcd .Get ("\u0052\u0044");
return &_eaaa ,nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _g .Time ;};type fontFile struct{_ggcddd string ;_ccee string ;_cafd _fgd .SimpleEncoder ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_abgda *PdfColorspaceDeviceNAttributes )ToPdfObject ()_dc .PdfObject {_gbfbg :=_dc .MakeDict ();if _abgda .Subtype !=nil {_gbfbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_abgda .Subtype );};_gbfbg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_abgda .Colorants );
_gbfbg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_abgda .Process );_gbfbg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_abgda .MixingHints );if _abgda ._gefaf !=nil {_abgda ._gefaf .PdfObject =_gbfbg ;return _abgda ._gefaf ;
};return _gbfbg ;};func (_addcb *PdfPattern )getDict ()*_dc .PdfObjectDictionary {if _gggfd ,_cfbdb :=_addcb ._dbcag .(*_dc .PdfIndirectObject );_cfbdb {_afebb ,_fdeeb :=_gggfd .PdfObject .(*_dc .PdfObjectDictionary );if !_fdeeb {return nil ;};return _afebb ;
}else if _ebgdg ,_gdae :=_addcb ._dbcag .(*_dc .PdfObjectStream );_gdae {return _ebgdg .PdfObjectDictionary ;}else {_bg .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_addcb ._dbcag );
return nil ;};};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_edcfb :=NewPdfOutline ();_edcfb ._abcc =&_edcfb ;return _edcfb ;};func (_cddg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_fgd .SimpleEncoder ,error ){_gdfg ,_efea :=_acedg (basefont );if _efea !=nil {return nil ,nil ,_efea ;};_bgagc ,_bgfba :=_gdfg .Encoder ().(_fgd .SimpleEncoder );
if !_bgfba {return nil ,nil ,_a .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_gdfg .Encoder ());
};_aaaee :=make (map[rune ]_fgd .GlyphName );for _addfc :=range alphabet {if _ ,_babe :=_bgagc .RuneToCharcode (_addfc );!_babe {_ ,_cdag :=_gdfg ._afeeg .Read (_addfc );if !_cdag {_bg .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_addfc ,_addfc );
continue ;};_bcfdc ,_cdag :=_fgd .RuneToGlyph (_addfc );if !_cdag {_bg .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_addfc ,_addfc );continue ;};if len (_aaaee )>=255{return nil ,nil ,_fd .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_aaaee [_addfc ]=_bcfdc ;};};var (_gfeg []_fgd .CharCode ;_fdfbd []_fgd .CharCode ;);for _gfegd :=_fgd .CharCode (1);_gfegd <=0xff;_gfegd ++{_fgaf ,_dded :=_bgagc .CharcodeToRune (_gfegd );if !_dded {_gfeg =append (_gfeg ,_gfegd );continue ;};if _ ,_dded =alphabet [_fgaf ];
!_dded {_fdfbd =append (_fdfbd ,_gfegd );};};_afbf :=append (_gfeg ,_fdfbd ...);if len (_afbf )< len (_aaaee ){return nil ,nil ,_a .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_aaaee ),len (_afbf ));
};_cbgc :=make ([]rune ,0,len (_aaaee ));for _dcbd :=range _aaaee {_cbgc =append (_cbgc ,_dcbd );};_ge .Slice (_cbgc ,func (_bfdad ,_gdbbf int )bool {return _cbgc [_bfdad ]< _cbgc [_gdbbf ]});_eagfg :=make (map[_fgd .CharCode ]_fgd .GlyphName ,len (_cbgc ));
for _ ,_cgbcf :=range _cbgc {_dfaaa :=_afbf [0];_afbf =_afbf [1:];_eagfg [_dfaaa ]=_aaaee [_cgbcf ];};_bgagc =_fgd .ApplyDifferences (_bgagc ,_eagfg );_gdfg .SetEncoder (_bgagc );return &PdfFont {_efeg :&_gdfg },_bgagc ,nil ;};func (_eafa *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_cdggc *PdfPageResources )HasXObjectByName (keyName _dc .PdfObjectName )bool {_eaccgb ,_ :=_cdggc .GetXObjectByName (keyName );return _eaccgb !=nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dff *PdfFieldButton )IsPush ()bool {return _dff .GetType ()==ButtonTypePush };

// GetNumComponents returns the number of color components (1 for grayscale).
func (_gbgf *PdfColorDeviceGray )GetNumComponents ()int {return 1};var _ pdfFont =(*pdfFontType3 )(nil );

// Evaluate runs the function. Input is [x1 x2 x3].
func (_acfb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _acfb ._adbb ==nil {_acfb ._adbb =_ba .NewPSExecutor (_acfb .Program );};var _bfge []_ba .PSObject ;for _ ,_addd :=range xVec {_bfge =append (_bfge ,_ba .MakeReal (_addd ));
};_bgcab ,_fgad :=_acfb ._adbb .Execute (_bfge );if _fgad !=nil {return nil ,_fgad ;};_gegf ,_fgad :=_ba .PSObjectArrayToFloat64Array (_bgcab );if _fgad !=nil {return nil ,_fgad ;};return _gegf ,nil ;};func _bgaf (_gfgee _dc .PdfObject )(map[_fgd .CharCode ]float64 ,error ){if _gfgee ==nil {return nil ,nil ;
};_bdcgf ,_dcdf :=_dc .GetArray (_gfgee );if !_dcdf {return nil ,nil ;};_cfagg :=map[_fgd .CharCode ]float64 {};_dfaf :=_bdcgf .Len ();for _agbb :=0;_agbb < _dfaf -1;_agbb ++{_gaecb :=_dc .TraceToDirectObject (_bdcgf .Get (_agbb ));_afggb ,_daca :=_dc .GetIntVal (_gaecb );
if !_daca {return nil ,_a .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_agbb ,_gaecb );};_agbb ++;if _agbb > _dfaf -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bdcgf );
};_fcdgb :=_dc .TraceToDirectObject (_bdcgf .Get (_agbb ));switch _fcdgb .(type ){case *_dc .PdfObjectArray :_fbagg ,_ :=_dc .GetArray (_fcdgb );if _dbcbb ,_dedcf :=_fbagg .ToFloat64Array ();_dedcf ==nil {for _fgae :=0;_fgae < len (_dbcbb );_fgae ++{_cfagg [_fgd .CharCode (_afggb +_fgae )]=_dbcbb [_fgae ];
};}else {return nil ,_a .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_agbb ,_fcdgb );};case *_dc .PdfObjectInteger :_cfeff ,_gaegf :=_dc .GetIntVal (_fcdgb );
if !_gaegf {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_agbb ,_fcdgb );};_agbb ++;if _agbb > _dfaf -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bdcgf );
};_ebgde :=_bdcgf .Get (_agbb );_eeecg ,_aaced :=_dc .GetNumberAsFloat (_ebgde );if _aaced !=nil {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_agbb ,_ebgde );
};for _cced :=_afggb ;_cced <=_cfeff ;_cced ++{_cfagg [_fgd .CharCode (_cced )]=_eeecg ;};default:return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_agbb ,_fcdgb );
};};return _cfagg ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _dc .PdfObjectName ;};func _cgeeg ()string {return _bg .Version };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_acbgc *_dc .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_dc .PdfObjectName ;Filter *_dc .PdfObjectName ;SubFilter *_dc .PdfObjectName ;Contents *_dc .PdfObjectString ;Cert _dc .PdfObject ;ByteRange *_dc .PdfObjectArray ;Reference *_dc .PdfObjectArray ;Changes *_dc .PdfObjectArray ;Name *_dc .PdfObjectString ;
M *_dc .PdfObjectString ;Location *_dc .PdfObjectString ;Reason *_dc .PdfObjectString ;ContactInfo *_dc .PdfObjectString ;R *_dc .PdfObjectInteger ;V *_dc .PdfObjectInteger ;PropBuild *_dc .PdfObjectDictionary ;PropAuthTime *_dc .PdfObjectInteger ;PropAuthType *_dc .PdfObjectName ;
};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_dc .PdfObjectArray ;TI *_dc .PdfObjectInteger ;I *_dc .PdfObjectArray ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_dggdd *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgda :=func (_ddeg float64 )float64 {if _ddeg >=6.0/29{return _ddeg *_ddeg *_ddeg ;};return 108.0/841*(_ddeg -4/29);};_gcgd ,_gdab :=color .(*PdfColorLab );if !_gdab {_bg .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gcgd .L ();AStar :=_gcgd .A ();BStar :=_gcgd .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_dggdd .WhitePoint [0]*_dgda (L );Y :=_dggdd .WhitePoint [1]*_dgda (M );Z :=_dggdd .WhitePoint [2]*_dgda (N );_dbagf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gbaa :=-0.969256*X +1.875992*Y +0.041556*Z ;_gafe :=0.055648*X +-0.204043*Y +1.057311*Z ;_dbagf =_ged .Min (_ged .Max (_dbagf ,0),1.0);
_gbaa =_ged .Min (_ged .Max (_gbaa ,0),1.0);_gafe =_ged .Min (_ged .Max (_gafe ,0),1.0);return NewPdfColorDeviceRGB (_dbagf ,_gbaa ,_gafe ),nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _dc .PdfObject )(*PdfFont ,error ){return _bgeb (fontObj ,true )};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fca :=NewPdfAction ();_afgd :=&PdfActionLaunch {};_afgd .PdfAction =_fca ;_fca .SetContext (_afgd );return _afgd ;};func (_bce *PdfReader )newPdfActionImportDataFromDict (_ecf *_dc .PdfObjectDictionary )(*PdfActionImportData ,error ){_dcae ,_dbe :=_adg (_ecf .Get ("\u0046"));
if _dbe !=nil {return nil ,_dbe ;};return &PdfActionImportData {F :_dcae },nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_adfga *VRI )ToPdfObject ()*_dc .PdfObjectDictionary {_bgaa :=_dc .MakeDict ();_bgaa .SetIfNotNil (_dc .PdfObjectName ("\u0043\u0065\u0072\u0074"),_dbbbb (_adfga .Cert ));_bgaa .SetIfNotNil (_dc .PdfObjectName ("\u004f\u0043\u0053\u0050"),_dbbbb (_adfga .OCSP ));
_bgaa .SetIfNotNil (_dc .PdfObjectName ("\u0043\u0052\u004c"),_dbbbb (_adfga .CRL ));_bgaa .SetIfNotNil ("\u0054\u0055",_adfga .TU );_bgaa .SetIfNotNil ("\u0054\u0053",_adfga .TS );return _bgaa ;};func (_bbca *PdfReader )newPdfAnnotationStampFromDict (_cebd *_dc .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fbda :=PdfAnnotationStamp {};
_fcfa ,_bbfc :=_bbca .newPdfAnnotationMarkupFromDict (_cebd );if _bbfc !=nil {return nil ,_bbfc ;};_fbda .PdfAnnotationMarkup =_fcfa ;_fbda .Name =_cebd .Get ("\u004e\u0061\u006d\u0065");return &_fbda ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gfgg :=NewPdfAnnotation ();_agb :=&PdfAnnotationPopup {};_agb .PdfAnnotation =_gfgg ;_gfgg .SetContext (_agb );return _agb ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _dc .PdfObject ;FS _dc .PdfObject ;F _dc .PdfObject ;UF _dc .PdfObject ;DOS _dc .PdfObject ;Mac _dc .PdfObject ;Unix _dc .PdfObject ;ID _dc .PdfObject ;V _dc .PdfObject ;EF _dc .PdfObject ;RF _dc .PdfObject ;Desc _dc .PdfObject ;
CI _dc .PdfObject ;_ddfa _dc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bdfgd *PdfAnnotation )ToPdfObject ()_dc .PdfObject {_cbeb :=_bdfgd ._cgcd ;_dba :=_cbeb .PdfObject .(*_dc .PdfObjectDictionary );_dba .Clear ();_dba .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0041\u006e\u006eo\u0074"));_dba .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bdfgd .Rect );
_dba .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bdfgd .Contents );_dba .SetIfNotNil ("\u0050",_bdfgd .P );_dba .SetIfNotNil ("\u004e\u004d",_bdfgd .NM );_dba .SetIfNotNil ("\u004d",_bdfgd .M );_dba .SetIfNotNil ("\u0046",_bdfgd .F );
_dba .SetIfNotNil ("\u0041\u0050",_bdfgd .AP );_dba .SetIfNotNil ("\u0041\u0053",_bdfgd .AS );_dba .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bdfgd .Border );_dba .SetIfNotNil ("\u0043",_bdfgd .C );_dba .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bdfgd .StructParent );
_dba .SetIfNotNil ("\u004f\u0043",_bdfgd .OC );return _cbeb ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_ddgb _dc .PdfObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _dc .PdfObject ;LE _dc .PdfObject ;BS _dc .PdfObject ;IC _dc .PdfObject ;BE _dc .PdfObject ;IT _dc .PdfObject ;Measure _dc .PdfObject ;};func _bedg (_ecffb _dc .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_dgga :=&PdfColorspaceDeviceNAttributes {};
var _dggb *_dc .PdfObjectDictionary ;switch _aebb :=_ecffb .(type ){case *_dc .PdfIndirectObject :_dgga ._gefaf =_aebb ;var _egfb bool ;_dggb ,_egfb =_aebb .PdfObject .(*_dc .PdfObjectDictionary );if !_egfb {_bg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_dc .PdfObjectDictionary :_dggb =_aebb ;case *_dc .PdfObjectReference :_ddff :=_aebb .Resolve ();return _bedg (_ddff );default:_bg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbec :=_dggb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fbec !=nil {_eadbf ,_abcb :=_dc .TraceToDirectObject (_fbec ).(*_dc .PdfObjectName );if !_abcb {_bg .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dgga .Subtype =_eadbf ;};if _aefe :=_dggb .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_aefe !=nil {_dgga .Colorants =_aefe ;};if _ggcd :=_dggb .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_ggcd !=nil {_dgga .Process =_ggcd ;};if _gcacc :=_dggb .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gcacc !=nil {_dgga .MixingHints =_gcacc ;};return _dgga ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_fffdd :=&PdfFilespec {};_fffdd ._ddfa =_dc .MakeIndirectObject (_dc .MakeDict ());return _fffdd ;};func (_edga *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _edga ._dffc };

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_ade *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fd .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_ggbd :=field .V ;if _ggbd ==nil {return _fd .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_dbf :=pageNum -1;if _dbf < 0||_dbf > len (_ade ._aebf )-1{return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_ffcf :=_ade .Reader .PageList [_dbf ];field .P =_ffcf .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_dc .MakeString (_a .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_ffcf .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _ade ._ggg ==_ade ._fcca .AcroForm {_ade ._ggg =_ade .Reader .AcroForm ;};_aggg :=_ade ._ggg ;if _aggg ==nil {_aggg =NewPdfAcroForm ();};_aggg .SigFlags =_dc .MakeInteger (3);_gefa :=append (_aggg .AllFields (),field .PdfField );_aggg .Fields =&_gefa ;
_ade .ReplaceAcroForm (_aggg );_ade .UpdatePage (_ffcf );_ade ._aebf [_dbf ]=_ffcf ;return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gfef PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_dc .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fagce []_dc .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bcbe []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dggea *PdfOutlineTreeNode )GetContext ()PdfModel {if _faag ,_fggaa :=_dggea ._abcc .(*PdfOutline );_fggaa {return _faag ;};if _cfcf ,_bdae :=_dggea ._abcc .(*PdfOutlineItem );_bdae {return _cfcf ;};_bg .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_facacd *PdfField )ToPdfObject ()_dc .PdfObject {_edde :=_facacd ._fbaa ;_ebbc :=_edde .PdfObject .(*_dc .PdfObjectDictionary );_dcced :=_dc .MakeArray ();for _ ,_gbfef :=range _facacd .Kids {_dcced .Append (_gbfef .ToPdfObject ());};for _ ,_fgba :=range _facacd .Annotations {if _fgba ._cgcd !=_facacd ._fbaa {_dcced .Append (_fgba .GetContext ().ToPdfObject ());
};};if _facacd .Parent !=nil {_ebbc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_facacd .Parent .GetContainingPdfObject ());};if _dcced .Len ()> 0{_ebbc .Set ("\u004b\u0069\u0064\u0073",_dcced );};_ebbc .SetIfNotNil ("\u0046\u0054",_facacd .FT );
_ebbc .SetIfNotNil ("\u0054",_facacd .T );_ebbc .SetIfNotNil ("\u0054\u0055",_facacd .TU );_ebbc .SetIfNotNil ("\u0054\u004d",_facacd .TM );_ebbc .SetIfNotNil ("\u0046\u0066",_facacd .Ff );_ebbc .SetIfNotNil ("\u0056",_facacd .V );_ebbc .SetIfNotNil ("\u0044\u0056",_facacd .DV );
_ebbc .SetIfNotNil ("\u0041\u0041",_facacd .AA );return _edde ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_gaccc :=&PdfBorderStyle {};return _gaccc };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _dc .PdfObject ;Name _dc .PdfObject ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_dcg :=NewPdfAction ();_cce :=&PdfActionGoToE {};_cce .PdfAction =_dcg ;_dcg .SetContext (_cce );return _cce ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ddfg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fd .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_fcbg ,_cafad :=_ea .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cecag ,img ._bbde );if _cafad !=nil {return img ,_cafad ;};_gged ,_cafad :=_ea .GrayConverter .Convert (_fcbg );if _cafad !=nil {return img ,_cafad ;
};return _ggff (_gged .Base ()),nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dddgb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_befd :=RC4_128bit ;if options !=nil {_befd =options .Algorithm ;};_fdfgb :=_gef .PermOwner ;if options !=nil {_fdfgb =options .Permissions ;};var _bbcgc _daf .Filter ;
switch _befd {case RC4_128bit :_bbcgc =_daf .NewFilterV2 (16);case AES_128bit :_bbcgc =_daf .NewFilterAESV2 ();case AES_256bit :_bbcgc =_daf .NewFilterAESV3 ();default:return _a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_accef ,_fcbac ,_faaaed :=_dc .PdfCryptNewEncrypt (_bbcgc ,userPass ,ownerPass ,_fdfgb );if _faaaed !=nil {return _faaaed ;};_dddgb ._abdfc =_accef ;if _fcbac .Major !=0{_dddgb .SetVersion (_fcbac .Major ,_fcbac .Minor );};_dddgb ._efgada =_fcbac .Encrypt ;
_dddgb ._fbead =_dc .MakeArray (_dc .MakeHexString (_fcbac .ID0 ),_dc .MakeHexString (_fcbac .ID1 ));_ccab :=_dc .MakeIndirectObject (_fcbac .Encrypt );_dddgb ._edaea =_ccab ;_dddgb .addObject (_ccab );return nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_babf :=&PdfFieldSignature {};_babf .PdfField =NewPdfField ();_babf .PdfField .SetContext (_babf );_babf .PdfAnnotationWidget =NewPdfAnnotationWidget ();_babf .PdfAnnotationWidget .SetContext (_babf );
_babf .PdfAnnotationWidget ._cgcd =_babf .PdfField ._fbaa ;_babf .T =_dc .MakeString ("");_babf .F =_dc .MakeInteger (132);_babf .V =signature ;return _babf ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_agaaf *pdfFontSimple )SetEncoder (encoder _fgd .TextEncoder ){_agaaf ._geecg =encoder };

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_gefdc *PdfShading )GetContainingPdfObject ()_dc .PdfObject {return _gefdc ._adbfg };func (_cadgc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bdgec *PdfPageResourcesColorspaces )ToPdfObject ()_dc .PdfObject {_cdfg :=_dc .MakeDict ();for _ ,_ebcfc :=range _bdgec .Names {_cdfg .Set (_dc .PdfObjectName (_ebcfc ),_bdgec .Colorspaces [_ebcfc ].ToPdfObject ());};if _bdgec ._gafdb !=nil {_bdgec ._gafdb .PdfObject =_cdfg ;
return _bdgec ._gafdb ;};return _cdfg ;};func (_bgeed *PdfWriter )writeObject (_afeg int ,_adag _dc .PdfObject ){_bg .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_afeg );if _dfege ,_acfcd :=_adag .(*_dc .PdfIndirectObject );
_acfcd {_bgeed ._acdc [_afeg ]=crossReference {Type :1,Offset :_bgeed ._agdaa ,Generation :_dfege .GenerationNumber };_bada :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_afeg );if _adaeg ,_befcg :=_dfege .PdfObject .(*pdfSignDictionary );
_befcg {_adaeg ._gefadg =_bgeed ._agdaa +int64 (len (_bada ));};if _dfege .PdfObject ==nil {_bg .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_dfege .PdfObject =_dc .MakeNull ();};_bada +=_dfege .PdfObject .WriteString ();_bada +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bgeed .writeString (_bada );return ;};if _dcgea ,_fdgac :=_adag .(*_dc .PdfObjectStream );_fdgac {_bgeed ._acdc [_afeg ]=crossReference {Type :1,Offset :_bgeed ._agdaa ,Generation :_dcgea .GenerationNumber };
_baaec :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_afeg );_baaec +=_dcgea .PdfObjectDictionary .WriteString ();_baaec +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bgeed .writeString (_baaec );_bgeed .writeBytes (_dcgea .Stream );
_bgeed .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _efedd ,_eegeg :=_adag .(*_dc .PdfObjectStreams );_eegeg {_bgeed ._acdc [_afeg ]=crossReference {Type :1,Offset :_bgeed ._agdaa ,Generation :_efedd .GenerationNumber };
_aaeac :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_afeg );var _egcae []string ;var _aedcg string ;var _aefcca int64 ;for _ddcg ,_aacdg :=range _efedd .Elements (){_fcbca ,_fccbe :=_aacdg .(*_dc .PdfIndirectObject );if !_fccbe {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_afeg ,_aacdg );
continue ;};_gecc :=_fcbca .PdfObject .WriteString ()+"\u0020";_aedcg =_aedcg +_gecc ;_egcae =append (_egcae ,_a .Sprintf ("\u0025\u0064\u0020%\u0064",_fcbca .ObjectNumber ,_aefcca ));_bgeed ._acdc [int (_fcbca .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_afeg ,Index :_ddcg };
_aefcca =_aefcca +int64 (len ([]byte (_gecc )));};_egccaf :=_db .Join (_egcae ,"\u0020")+"\u0020";_edff :=_dc .NewFlateEncoder ();_dged :=_edff .MakeStreamDict ();_dged .Set (_dc .PdfObjectName ("\u0054\u0079\u0070\u0065"),_dc .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_bcgaf :=int64 (_efedd .Len ());_dged .Set (_dc .PdfObjectName ("\u004e"),_dc .MakeInteger (_bcgaf ));_aaebc :=int64 (len (_egccaf ));_dged .Set (_dc .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_dc .MakeInteger (_aaebc ));_fagdef ,_ :=_edff .EncodeBytes ([]byte (_egccaf +_aedcg ));
_ebefg :=int64 (len (_fagdef ));_dged .Set (_dc .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_dc .MakeInteger (_ebefg ));_aaeac +=_dged .WriteString ();_aaeac +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bgeed .writeString (_aaeac );
_bgeed .writeBytes (_fagdef );_bgeed .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bgeed .writeString (_adag .WriteString ());};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gac :=NewPdfAction ();_fe :=&PdfActionJavaScript {};_fe .PdfAction =_gac ;_gac .SetContext (_fe );return _fe ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_aeggb :=&PdfColorspaceLab {};_aeggb .BlackPoint =[]float64 {0.0,0.0,0.0};_aeggb .Range =[]float64 {-100,100,-100,100};return _aeggb ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_gbgd *PdfColorspaceDeviceN )ToPdfObject ()_dc .PdfObject {_adfg :=_dc .MakeArray (_dc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_adfg .Append (_gbgd .ColorantNames );_adfg .Append (_gbgd .AlternateSpace .ToPdfObject ());_adfg .Append (_gbgd .TintTransform .ToPdfObject ());
if _gbgd .Attributes !=nil {_adfg .Append (_gbgd .Attributes .ToPdfObject ());};if _gbgd ._fceec !=nil {_gbgd ._fceec .PdfObject =_adfg ;return _gbgd ._fceec ;};return _adfg ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_dc .PdfIndirectObject ;SV *_dc .PdfIndirectObject ;};func _bbdab (_fffa []rune ,_aggdb map[rune ]int ,_effe map[rune ]_eb .GID )*_dc .PdfObjectArray {_befg :=&_dc .PdfObjectArray {};
for _fffb :=0;_fffb < len (_fffa );{_cecge :=_aggdb [_fffa [_fffb ]];_ccfc :=_fffb ;for _gegce :=_fffb +1;_gegce < len (_fffa );_gegce ++{_bgdb :=_aggdb [_fffa [_gegce ]];if _cecge ==_bgdb {_ccfc =_gegce ;}else {break ;};};_eggbc :=_effe [_fffa [_fffb ]];
_fbecd :=_effe [_fffa [_ccfc ]];_befg .Append (_dc .MakeInteger (int64 (_eggbc )));_befg .Append (_dc .MakeInteger (int64 (_fbecd )));_befg .Append (_dc .MakeInteger (int64 (_cecge )));_fffb =_ccfc +1;};return _befg ;};func _gcfbe (_bgbbe _dc .PdfObject )(string ,error ){_bgbbe =_dc .TraceToDirectObject (_bgbbe );
switch _gdcef :=_bgbbe .(type ){case *_dc .PdfObjectString :return _gdcef .Str (),nil ;case *_dc .PdfObjectStream :_dfcdb ,_acbecg :=_dc .DecodeStream (_gdcef );if _acbecg !=nil {return "",_acbecg ;};return string (_dfcdb ),nil ;};return "",_a .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_bgbbe );
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_cbac *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfed ,_cbad :=_dc .GetNumbersAsFloat (objects );
if _cbad !=nil {return nil ,_cbad ;};return _cbac .ColorFromFloats (_cfed );};func (_daegc *PdfAppender )replaceObject (_geag ,_agae _dc .PdfObject ){switch _aacd :=_geag .(type ){case *_dc .PdfIndirectObject :_daegc ._eggd [_agae ]=_aacd .ObjectNumber ;
case *_dc .PdfObjectStream :_daegc ._eggd [_agae ]=_aacd .ObjectNumber ;};};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_dgde :=NewPdfAction ();_eaf :=&PdfActionURI {};_eaf .PdfAction =_dgde ;_dgde .SetContext (_eaf );return _eaf ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_cgbge *PdfPage )GetPageAsIndirectObject ()*_dc .PdfIndirectObject {return _cgbge ._eeffa };

// ValidateSignatures validates digital signatures in the document.
func (_gbcea *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _gbcea .AcroForm ==nil {return nil ,nil ;};if _gbcea .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_afaac *PdfSignature ;
_ggdcb *PdfField ;_ffedg SignatureHandler ;};var _fcggb []*sigFieldPair ;for _ ,_ccdca :=range _gbcea .AcroForm .AllFields (){if _ccdca .V ==nil {continue ;};if _eecbf ,_gafgf :=_dc .GetDict (_ccdca .V );_gafgf {if _ecbe ,_ffaef :=_dc .GetNameVal (_eecbf .Get ("\u0054\u0079\u0070\u0065"));
_ffaef &&_ecbe =="\u0053\u0069\u0067"{_egbbd ,_efdcb :=_dc .GetIndirect (_ccdca .V );if !_efdcb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_beaa ,_ggbe :=_gbcea .newPdfSignatureFromIndirect (_egbbd );if _ggbe !=nil {return nil ,_ggbe ;};var _aedbc SignatureHandler ;for _ ,_eafcd :=range handlers {if _eafcd .IsApplicable (_beaa ){_aedbc =_eafcd ;break ;};};_fcggb =append (_fcggb ,&sigFieldPair {_afaac :_beaa ,_ggdcb :_ccdca ,_ffedg :_aedbc });
};};};var _fbaeg []SignatureValidationResult ;for _ ,_gddc :=range _fcggb {_cabeb :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gddc ._ggdcb }};if _gddc ._ffedg ==nil {_cabeb .Errors =append (_cabeb .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_fbaeg =append (_fbaeg ,_cabeb );continue ;};_cgfbd ,_gaaaa :=_gddc ._ffedg .NewDigest (_gddc ._afaac );if _gaaaa !=nil {_cabeb .Errors =append (_cabeb .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gaaaa .Error ());_fbaeg =append (_fbaeg ,_cabeb );
continue ;};_fdgcg :=_gddc ._afaac .ByteRange ;if _fdgcg ==nil {_cabeb .Errors =append (_cabeb .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_fbaeg =append (_fbaeg ,_cabeb );continue ;};for _egeca :=0;
_egeca < _fdgcg .Len ();_egeca =_egeca +2{_fbcbd ,_ :=_dc .GetNumberAsInt64 (_fdgcg .Get (_egeca ));_bbddf ,_ :=_dc .GetIntVal (_fdgcg .Get (_egeca +1));if _ ,_addad :=_gbcea ._aeag .Seek (_fbcbd ,_fa .SeekStart );_addad !=nil {return nil ,_addad ;};_deegd :=make ([]byte ,_bbddf );
if _ ,_gddee :=_gbcea ._aeag .Read (_deegd );_gddee !=nil {return nil ,_gddee ;};_cgfbd .Write (_deegd );};_beebfa ,_gaaaa :=_gddc ._ffedg .Validate (_gddc ._afaac ,_cgfbd );if _gaaaa !=nil {return nil ,_gaaaa ;};_beebfa .Name =_gddc ._afaac .Name .Decoded ();
_beebfa .Reason =_gddc ._afaac .Reason .Decoded ();if _gddc ._afaac .M !=nil {_gbgdfc ,_fbcg :=NewPdfDate (_gddc ._afaac .M .String ());if _fbcg !=nil {_beebfa .Errors =append (_beebfa .Errors ,_fbcg .Error ());continue ;};_beebfa .Date =_gbgdfc ;};_beebfa .ContactInfo =_gddc ._afaac .ContactInfo .Decoded ();
_beebfa .Location =_gddc ._afaac .Location .Decoded ();_beebfa .Fields =_cabeb .Fields ;_fbaeg =append (_fbaeg ,_beebfa );};return _fbaeg ,nil ;};type pdfFontType3 struct{fontCommon ;_dbac *_dc .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _dc .PdfObject ;Encoding _dc .PdfObject ;FontBBox _dc .PdfObject ;FontMatrix _dc .PdfObject ;FirstChar _dc .PdfObject ;LastChar _dc .PdfObject ;Widths _dc .PdfObject ;Resources _dc .PdfObject ;_beeb map[_fgd .CharCode ]float64 ;_acgfe _fgd .TextEncoder ;
};func (_gfgf *PdfReader )newPdfAnnotationInkFromDict (_fdgg *_dc .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cba :=PdfAnnotationInk {};_aaba ,_eefb :=_gfgf .newPdfAnnotationMarkupFromDict (_fdgg );if _eefb !=nil {return nil ,_eefb ;};_cba .PdfAnnotationMarkup =_aaba ;
_cba .InkList =_fdgg .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cba .BS =_fdgg .Get ("\u0042\u0053");return &_cba ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ege *PdfAnnotationPrinterMark )ToPdfObject ()_dc .PdfObject {_ege .PdfAnnotation .ToPdfObject ();_dbcc :=_ege ._cgcd ;_daac :=_dbcc .PdfObject .(*_dc .PdfObjectDictionary );_daac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_daac .SetIfNotNil ("\u004d\u004e",_ege .MN );return _dbcc ;};func (_ebfe *pdfCIDFontType0 )baseFields ()*fontCommon {return &_ebfe .fontCommon };

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// C returns the value of the cyan component of the color.
func (_babg *PdfColorDeviceCMYK )C ()float64 {return _babg [0]};

// ToPdfObject implements interface PdfModel.
func (_edbg *PdfAnnotationFileAttachment )ToPdfObject ()_dc .PdfObject {_edbg .PdfAnnotation .ToPdfObject ();_eegg :=_edbg ._cgcd ;_ffbd :=_eegg .PdfObject .(*_dc .PdfObjectDictionary );_edbg .PdfAnnotationMarkup .appendToPdfDictionary (_ffbd );_ffbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_ffbd .SetIfNotNil ("\u0046\u0053",_edbg .FS );_ffbd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edbg .Name );return _eegg ;};func (_gadc *PdfReader )newPdfAnnotationMarkupFromDict (_fefa *_dc .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_egc :=&PdfAnnotationMarkup {};
if _eaga :=_fefa .Get ("\u0054");_eaga !=nil {_egc .T =_eaga ;};if _acb :=_fefa .Get ("\u0050\u006f\u0070u\u0070");_acb !=nil {_fcea ,_badc :=_acb .(*_dc .PdfIndirectObject );if !_badc {if _ ,_ccfe :=_acb .(*_dc .PdfObjectNull );!_ccfe {return nil ,_fd .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_cdcd ,_feag :=_gadc .newPdfAnnotationFromIndirectObject (_fcea );if _feag !=nil {return nil ,_feag ;};if _cdcd !=nil {_ffcc ,_bfe :=_cdcd ._afgc .(*PdfAnnotationPopup );if !_bfe {return nil ,_fd .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_egc .Popup =_ffcc ;};};};if _agc :=_fefa .Get ("\u0043\u0041");_agc !=nil {_egc .CA =_agc ;};if _bfea :=_fefa .Get ("\u0052\u0043");_bfea !=nil {_egc .RC =_bfea ;};if _fedg :=_fefa .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_fedg !=nil {_egc .CreationDate =_fedg ;};if _afeb :=_fefa .Get ("\u0049\u0052\u0054");_afeb !=nil {_egc .IRT =_afeb ;};if _caf :=_fefa .Get ("\u0053\u0075\u0062\u006a");_caf !=nil {_egc .Subj =_caf ;};if _deb :=_fefa .Get ("\u0052\u0054");_deb !=nil {_egc .RT =_deb ;
};if _egb :=_fefa .Get ("\u0049\u0054");_egb !=nil {_egc .IT =_egb ;};if _eed :=_fefa .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_eed !=nil {_egc .ExData =_eed ;};return _egc ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _dc .PdfObject ;};

// String returns a human readable description of `fontfile`.
func (_gfddb *fontFile )String ()string {_geecc :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gfddb ._cafd !=nil {_geecc =_gfddb ._cafd .String ();};return _a .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gfddb ._ggcddd ,_geecc );
};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bgee *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bafd :=_gab .NewReader (img .getBase ());_dbga :=_ea .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gdbd :=_gab .NewWriter (_dbga );
_bcfd :=_ged .Pow (2,float64 (img .BitsPerComponent ))-1;_dgcc :=make ([]uint32 ,3);var (_adea uint32 ;ANorm ,X ,Y ,Z ,_cedb ,_accac ,_bbdf float64 ;_edfb error ;);for {_adea ,_edfb =_bafd .ReadSample ();if _edfb ==_fa .EOF {break ;}else if _edfb !=nil {return img ,_edfb ;
};ANorm =float64 (_adea )/_bcfd ;X =_bgee .WhitePoint [0]*_ged .Pow (ANorm ,_bgee .Gamma );Y =_bgee .WhitePoint [1]*_ged .Pow (ANorm ,_bgee .Gamma );Z =_bgee .WhitePoint [2]*_ged .Pow (ANorm ,_bgee .Gamma );_cedb =3.240479*X +-1.537150*Y +-0.498535*Z ;
_accac =-0.969256*X +1.875992*Y +0.041556*Z ;_bbdf =0.055648*X +-0.204043*Y +1.057311*Z ;_cedb =_ged .Min (_ged .Max (_cedb ,0),1.0);_accac =_ged .Min (_ged .Max (_accac ,0),1.0);_bbdf =_ged .Min (_ged .Max (_bbdf ,0),1.0);_dgcc [0]=uint32 (_cedb *_bcfd );
_dgcc [1]=uint32 (_accac *_bcfd );_dgcc [2]=uint32 (_bbdf *_bcfd );if _edfb =_gdbd .WriteSamples (_dgcc );_edfb !=nil {return img ,_edfb ;};};return _ggff (&_dbga ),nil ;};func (_bdef *PdfReader )newPdfFieldFromIndirectObject (_ececf *_dc .PdfIndirectObject ,_dgfea *PdfField )(*PdfField ,error ){if _edfac ,_fgfg :=_bdef ._abaeb .GetModelFromPrimitive (_ececf ).(*PdfField );
_fgfg {return _edfac ,nil ;};_ebfa ,_fbag :=_dc .GetDict (_ececf );if !_fbag {return nil ,_a .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aedc :=NewPdfField ();_aedc ._fbaa =_ececf ;_aedc ._fbaa .PdfObject =_ebfa ;if _dbdg ,_aceba :=_dc .GetName (_ebfa .Get ("\u0046\u0054"));_aceba {_aedc .FT =_dbdg ;};if _dgfea !=nil {_aedc .Parent =_dgfea ;};_aedc .T ,_ =_ebfa .Get ("\u0054").(*_dc .PdfObjectString );
_aedc .TU ,_ =_ebfa .Get ("\u0054\u0055").(*_dc .PdfObjectString );_aedc .TM ,_ =_ebfa .Get ("\u0054\u004d").(*_dc .PdfObjectString );_aedc .Ff ,_ =_ebfa .Get ("\u0046\u0066").(*_dc .PdfObjectInteger );_aedc .V =_ebfa .Get ("\u0056");_aedc .DV =_ebfa .Get ("\u0044\u0056");
_aedc .AA =_ebfa .Get ("\u0041\u0041");_ddbd :=_aedc .FT ;if _ddbd ==nil &&_dgfea !=nil {_ddbd =_dgfea .FT ;};if _ddbd !=nil {switch *_ddbd {case "\u0054\u0078":_efde ,_ebef :=_dfbac (_ebfa );if _ebef !=nil {return nil ,_ebef ;};_efde .PdfField =_aedc ;
_aedc ._fddc =_efde ;case "\u0043\u0068":_cbaba ,_bceb :=_cagfe (_ebfa );if _bceb !=nil {return nil ,_bceb ;};_cbaba .PdfField =_aedc ;_aedc ._fddc =_cbaba ;case "\u0042\u0074\u006e":_ccded ,_gagg :=_ddfdag (_ebfa );if _gagg !=nil {return nil ,_gagg ;};
_ccded .PdfField =_aedc ;_aedc ._fddc =_ccded ;case "\u0053\u0069\u0067":_cgdfc ,_ecgdd :=_bdef .newPdfFieldSignatureFromDict (_ebfa );if _ecgdd !=nil {return nil ,_ecgdd ;};_cgdfc .PdfField =_aedc ;_aedc ._fddc =_cgdfc ;default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_aedc .FT );
return nil ,_fd .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _cfec ,_ccge :=_dc .GetName (_ebfa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_ccge {if *_cfec =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cbedf ,_afee :=_bdef .newPdfAnnotationFromIndirectObject (_ececf );
if _afee !=nil {return nil ,_afee ;};_cfge ,_ddaf :=_cbedf .GetContext ().(*PdfAnnotationWidget );if !_ddaf {return nil ,_fd .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_cfge ._bea =_aedc ;_cfge .Parent =_aedc ._fbaa ;_aedc .Annotations =append (_aedc .Annotations ,_cfge );return _aedc ,nil ;};};_eeeaf :=true ;if _cdff ,_ceec :=_dc .GetArray (_ebfa .Get ("\u004b\u0069\u0064\u0073"));_ceec {_dcebc :=make ([]*_dc .PdfIndirectObject ,0,_cdff .Len ());
for _ ,_bebb :=range _cdff .Elements (){_dgge ,_gceb :=_dc .GetIndirect (_bebb );if !_gceb {_dddef ,_cgff :=_dc .GetStream (_bebb );if _cgff &&_dddef .PdfObjectDictionary !=nil {_beca ,_cceb :=_dc .GetNameVal (_dddef .Get ("\u0054\u0079\u0070\u0065"));
if _cceb &&_beca =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_bg .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fd .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cege ,_begdd :=_dc .GetDict (_dgge );
if !_begdd {return nil ,ErrTypeCheck ;};if _eeeaf {_eeeaf =!_aaec (_cege );};_dcebc =append (_dcebc ,_dgge );};for _ ,_bbggd :=range _dcebc {if _eeeaf {_cbfc ,_ecaa :=_bdef .newPdfAnnotationFromIndirectObject (_bbggd );if _ecaa !=nil {_bg .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ecaa );
return nil ,_ecaa ;};_efdg ,_acbec :=_cbfc ._afgc .(*PdfAnnotationWidget );if !_acbec {return nil ,ErrTypeCheck ;};_efdg ._bea =_aedc ;_aedc .Annotations =append (_aedc .Annotations ,_efdg );}else {_befe ,_bbad :=_bdef .newPdfFieldFromIndirectObject (_bbggd ,_aedc );
if _bbad !=nil {_bg .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_bbad );return nil ,_bbad ;};_aedc .Kids =append (_aedc .Kids ,_befe );
};};};return _aedc ,nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gg *PdfActionImportData )ToPdfObject ()_dc .PdfObject {_gg .PdfAction .ToPdfObject ();_gda :=_gg ._be ;_fcc :=_gda .PdfObject .(*_dc .PdfObjectDictionary );_fcc .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeImportData )));if _gg .F !=nil {_fcc .Set ("\u0046",_gg .F .ToPdfObject ());
};return _gda ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func (_add *PdfReader )newPdfAnnotationWatermarkFromDict (_fgcf *_dc .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ffe :=PdfAnnotationWatermark {};_ffe .FixedPrint =_fgcf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_ffe ,nil ;};func _aeggc (_dfbgf *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_dfbgf }};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;type pdfFont interface{_eb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_dc .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_adad pdfFontType3 )GetCharMetrics (code _fgd .CharCode )(_eb .CharMetrics ,bool ){if _fefaa ,_fbbgd :=_adad ._beeb [code ];_fbbgd {return _eb .CharMetrics {Wx :_fefaa },true ;};if _eb .IsStdFont (_eb .StdFontName (_adad ._bfbac )){return _eb .CharMetrics {Wx :250},true ;
};return _eb .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_gefg *PdfAnnotationRichMedia )ToPdfObject ()_dc .PdfObject {_gefg .PdfAnnotation .ToPdfObject ();_cfeg :=_gefg ._cgcd ;_bfd :=_cfeg .PdfObject .(*_dc .PdfObjectDictionary );_bfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_bfd .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gefg .RichMediaSettings );_bfd .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gefg .RichMediaContent );
return _cfeg ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_geege *PdfFont )ToPdfObject ()_dc .PdfObject {if _geege ._efeg ==nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _dc .MakeNull ();
};return _geege ._efeg .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_fdfcb *PdfAnnotationWatermark )ToPdfObject ()_dc .PdfObject {_fdfcb .PdfAnnotation .ToPdfObject ();_begd :=_fdfcb ._cgcd ;_gbce :=_begd .PdfObject .(*_dc .PdfObjectDictionary );_gbce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gbce .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fdfcb .FixedPrint );return _begd ;};func _cgdd ()_g .Time {_bbaae .Lock ();defer _bbaae .Unlock ();return _cgeca };func (_fbac *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_geb *PdfField )SetContext (ctx PdfModel ){_geb ._fddc =ctx };

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_baff *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_cbdd :=func (_cafab float64 )float64 {if _cafab >=6.0/29{return _cafab *_cafab *_cafab ;};return 108.0/841*(_cafab -4/29);};_agaee :=img ._bbde ;if len (_agaee )!=6{_bg .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_agaee =_baff .DecodeArray ();};_faaa :=_gab .NewReader (img .getBase ());_ecdd :=_ea .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._cecag ,img ._bbde );_adda :=_gab .NewWriter (_ecdd );_def :=_ged .Pow (2,float64 (img .BitsPerComponent ))-1;
_cgcab :=make ([]uint32 ,3);var (_fefbg error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_gdde ,_aceb ,_feed float64 ;);for {_fefbg =_faaa .ReadSamples (_cgcab );if _fefbg ==_fa .EOF {break ;}else if _fefbg !=nil {return img ,_fefbg ;};Ls =float64 (_cgcab [0])/_def ;
As =float64 (_cgcab [1])/_def ;Bs =float64 (_cgcab [2])/_def ;Ls =_ea .LinearInterpolate (Ls ,0.0,1.0,_agaee [0],_agaee [1]);As =_ea .LinearInterpolate (As ,0.0,1.0,_agaee [2],_agaee [3]);Bs =_ea .LinearInterpolate (Bs ,0.0,1.0,_agaee [4],_agaee [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_baff .WhitePoint [0]*_cbdd (L );Y =_baff .WhitePoint [1]*_cbdd (M );Z =_baff .WhitePoint [2]*_cbdd (N );_gdde =3.240479*X +-1.537150*Y +-0.498535*Z ;_aceb =-0.969256*X +1.875992*Y +0.041556*Z ;_feed =0.055648*X +-0.204043*Y +1.057311*Z ;
_gdde =_ged .Min (_ged .Max (_gdde ,0),1.0);_aceb =_ged .Min (_ged .Max (_aceb ,0),1.0);_feed =_ged .Min (_ged .Max (_feed ,0),1.0);_cgcab [0]=uint32 (_gdde *_def );_cgcab [1]=uint32 (_aceb *_def );_cgcab [2]=uint32 (_feed *_def );if _fefbg =_adda .WriteSamples (_cgcab );
_fefbg !=nil {return img ,_fefbg ;};};return _ggff (&_ecdd ),nil ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_agfg :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_agfg .N =N ;return _agfg ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_bbg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bbg ._cgf !=nil {return _bbg ._cgf ,nil ;};if _bbg .A ==nil {return nil ,nil ;};if _bbg ._dcec ==nil {return nil ,nil ;};_fdef ,_aac :=_bbg ._dcec .loadAction (_bbg .A );if _aac !=nil {return nil ,_aac ;
};_bbg ._cgf =_fdef ;return _bbg ._cgf ,nil ;};func _fdfg (_acgf _dc .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_bg .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_acgf .String (),_acgf );
_fdc :=NewPdfColorspaceSpecialPattern ();if _bdeb ,_fage :=_acgf .(*_dc .PdfIndirectObject );_fage {_fdc ._dgeb =_bdeb ;};_acgf =_dc .TraceToDirectObject (_acgf );if _bfbda ,_aefa :=_acgf .(*_dc .PdfObjectName );_aefa {if *_bfbda !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _fdc ,nil ;};_bebe ,_egfg :=_acgf .(*_dc .PdfObjectArray );if !_egfg {_bg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_acgf );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bebe .Len ()!=1&&_bebe .Len ()!=2{_bg .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bebe );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_acgf =_bebe .Get (0);if _afec ,_faebe :=_acgf .(*_dc .PdfObjectName );_faebe {if *_afec !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bg .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_afec );
return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bebe .Len ()> 1{_acgf =_bebe .Get (1);_acgf =_dc .TraceToDirectObject (_acgf );_bdbb ,_ebge :=NewPdfColorspaceFromPdfObject (_acgf );if _ebge !=nil {return nil ,_ebge ;
};_fdc .UnderlyingCS =_bdbb ;};_bg .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_fdc .UnderlyingCS );
return _fdc ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_gdbb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_gdbb .Mask ()&^fl .Mask ())};func (_gafbc *PdfWriter )seekByName (_gcacb _dc .PdfObject ,_cdbfg []string ,_gcba string )([]_dc .PdfObject ,error ){_bg .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gcacb );
var _edcad []_dc .PdfObject ;if _efacc ,_begcc :=_gcacb .(*_dc .PdfIndirectObject );_begcc {return _gafbc .seekByName (_efacc .PdfObject ,_cdbfg ,_gcba );};if _gfgb ,_dfbf :=_gcacb .(*_dc .PdfObjectStream );_dfbf {return _gafbc .seekByName (_gfgb .PdfObjectDictionary ,_cdbfg ,_gcba );
};if _dabgd ,_fdaeg :=_gcacb .(*_dc .PdfObjectDictionary );_fdaeg {_bg .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_eadbd :=range _dabgd .Keys (){_agefda :=_dabgd .Get (_eadbd );if string (_eadbd )==_gcba {_edcad =append (_edcad ,_agefda );};for _ ,_eccagb :=range _cdbfg {if string (_eadbd )==_eccagb {_bg .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_eccagb );
_cgede ,_gffdf :=_gafbc .seekByName (_agefda ,_cdbfg ,_gcba );if _gffdf !=nil {return _edcad ,_gffdf ;};_edcad =append (_edcad ,_cgede ...);break ;};};};return _edcad ,nil ;};return _edcad ,nil ;};func _dcfa (_dea _dc .PdfObject )(*PdfColorspaceCalRGB ,error ){_acgb :=NewPdfColorspaceCalRGB ();
if _gcd ,_gbec :=_dea .(*_dc .PdfIndirectObject );_gbec {_acgb ._caae =_gcd ;};_dea =_dc .TraceToDirectObject (_dea );_aebe ,_bbce :=_dea .(*_dc .PdfObjectArray );if !_bbce {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _aebe .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_dea =_dc .TraceToDirectObject (_aebe .Get (0));_dbed ,_bbce :=_dea .(*_dc .PdfObjectName );
if !_bbce {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_dbed !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_a .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_dea =_dc .TraceToDirectObject (_aebe .Get (1));_adfb ,_bbce :=_dea .(*_dc .PdfObjectDictionary );if !_bbce {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_dea =_adfb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dea =_dc .TraceToDirectObject (_dea );_daaec ,_bbce :=_dea .(*_dc .PdfObjectArray );if !_bbce {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _daaec .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_adfbf ,_aegg :=_daaec .GetAsFloat64Slice ();
if _aegg !=nil {return nil ,_aegg ;};_acgb .WhitePoint =_adfbf ;_dea =_adfb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dea !=nil {_dea =_dc .TraceToDirectObject (_dea );_cfad ,_cecg :=_dea .(*_dc .PdfObjectArray );if !_cecg {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _cfad .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ccgd ,_bdga :=_cfad .GetAsFloat64Slice ();
if _bdga !=nil {return nil ,_bdga ;};_acgb .BlackPoint =_ccgd ;};_dea =_adfb .Get ("\u0047\u0061\u006dm\u0061");if _dea !=nil {_dea =_dc .TraceToDirectObject (_dea );_bdac ,_adbcf :=_dea .(*_dc .PdfObjectArray );if !_adbcf {return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _bdac .Len ()!=3{return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_abee ,_cdbeb :=_bdac .GetAsFloat64Slice ();if _cdbeb !=nil {return nil ,_cdbeb ;
};_acgb .Gamma =_abee ;};_dea =_adfb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _dea !=nil {_dea =_dc .TraceToDirectObject (_dea );_ceff ,_dbeg :=_dea .(*_dc .PdfObjectArray );if !_dbeg {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _ceff .Len ()!=9{_bg .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_ceff .String ());return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_ccdb ,_ccfeb :=_ceff .GetAsFloat64Slice ();if _ccfeb !=nil {return nil ,_ccfeb ;};_acgb .Matrix =_ccdb ;};return _acgb ,nil ;};

// IsColored specifies if the pattern is colored.
func (_efgbfa *PdfTilingPattern )IsColored ()bool {if _efgbfa .PaintType !=nil &&*_efgbfa .PaintType ==1{return true ;};return false ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_abeec *_dc .PdfIndirectObject ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_ggc :=NewPdfAnnotation ();_acgc :=&PdfAnnotationPolyLine {};_acgc .PdfAnnotation =_ggc ;_acgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggc .SetContext (_acgc );return _acgc ;};

// Items returns all children outline items.
func (_ffdcb *Outline )Items ()[]*OutlineItem {return _ffdcb .Entries };

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_dced *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cbcef :=_dced .actualFont ();if _cbcef ==nil {_bg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dced ._efeg );
return _eb .CharMetrics {},false ;};if _dgcb ,_dedb :=_cbcef .GetRuneMetrics (r );_dedb {return _dgcb ,true ;};if _bcbdc ,_gedcg :=_dced .GetFontDescriptor ();_gedcg ==nil &&_bcbdc !=nil {return _eb .CharMetrics {Wx :_bcbdc ._gebaa },true ;};_bg .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dced );
return _eb .CharMetrics {},false ;};func _dacg (_gcfcf *PdfField )[]*PdfField {_bafde :=[]*PdfField {_gcfcf };for _ ,_gbfc :=range _gcfcf .Kids {_bafde =append (_bafde ,_dacg (_gbfc )...);};return _bafde ;};func (_dceed *PdfReader )loadStructure ()error {if _dceed ._ecead .GetCrypter ()!=nil &&!_dceed ._ecead .IsAuthenticated (){return _a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bacfb :=_dceed ._ecead .GetTrailer ();if _bacfb ==nil {return _a .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_deabf ,_dfdfb :=_bacfb .Get ("\u0052\u006f\u006f\u0074").(*_dc .PdfObjectReference );if !_dfdfb {return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bacfb );
};_aeceb ,_efcb :=_dceed ._ecead .LookupByReference (*_deabf );if _efcb !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_efcb );
return _efcb ;};_gbfa ,_dfdfb :=_aeceb .(*_dc .PdfIndirectObject );if !_dfdfb {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_aeceb ,*_bacfb );
return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aaabf ,_dfdfb :=(*_gbfa ).PdfObject .(*_dc .PdfObjectDictionary );if !_dfdfb {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_gbfa .PdfObject );
return _fd .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bg .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_aaabf );_fccbc ,_dfdfb :=_aaabf .Get ("\u0050\u0061\u0067e\u0073").(*_dc .PdfObjectReference );
if !_dfdfb {return _fd .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cagef ,_efcb :=_dceed ._ecead .LookupByReference (*_fccbc );
if _efcb !=nil {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _efcb ;};_egadf ,_dfdfb :=_cagef .(*_dc .PdfIndirectObject );if !_dfdfb {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_bg .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_egadf );return _fd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gabca ,_dfdfb :=_egadf .PdfObject .(*_dc .PdfObjectDictionary );if !_dfdfb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_egadf );
return _fd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gcgg ,_dfdfb :=_dc .GetInt (_gabca .Get ("\u0043\u006f\u0075n\u0074"));if !_dfdfb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fd .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_dfdfb =_dc .GetName (_gabca .Get ("\u0054\u0079\u0070\u0065"));!_dfdfb {_bg .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_gabca .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0050\u0061\u0067e\u0073"));};if _ffgee ,_eabd :=_dc .GetInt (_gabca .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_eabd {_acaf :=int64 (*_ffgee );_dceed .Rotate =&_acaf ;};_dceed ._gegad =_deabf ;
_dceed ._bedbcf =_aaabf ;_dceed ._dddc =_gabca ;_dceed ._daaebg =_egadf ;_dceed ._ebgc =int (*_gcgg );_dceed ._eebef =[]*_dc .PdfIndirectObject {};_gadce :=map[_dc .PdfObject ]struct{}{};_efcb =_dceed .buildPageList (_egadf ,nil ,_gadce );if _efcb !=nil {return _efcb ;
};_bg .Log .Trace ("\u002d\u002d\u002d");_bg .Log .Trace ("\u0054\u004f\u0043");_bg .Log .Trace ("\u0050\u0061\u0067e\u0073");_bg .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_dceed ._eebef ),_dceed ._eebef );_dceed ._babacc ,_efcb =_dceed .loadOutlines ();
if _efcb !=nil {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_efcb );
return _efcb ;};_dceed .AcroForm ,_efcb =_dceed .loadForms ();if _efcb !=nil {return _efcb ;};_dceed .DSS ,_efcb =_dceed .loadDSS ();if _efcb !=nil {return _efcb ;};return nil ;};func (_eeag *PdfAppender )mergeResources (_gabc ,_bbfe _dc .PdfObject ,_ccafaa map[_dc .PdfObjectName ]_dc .PdfObjectName )_dc .PdfObject {if _bbfe ==nil &&_gabc ==nil {return nil ;
};if _bbfe ==nil {return _gabc ;};_eddg ,_ffdd :=_dc .GetDict (_bbfe );if !_ffdd {return _gabc ;};if _gabc ==nil {_dgg :=_dc .MakeDict ();_dgg .Merge (_eddg );return _bbfe ;};_cfaca ,_ffdd :=_dc .GetDict (_gabc );if !_ffdd {_bg .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_cfaca =_dc .MakeDict ();};for _ ,_dgeg :=range _eddg .Keys (){if _gdbe ,_dfbe :=_ccafaa [_dgeg ];_dfbe {_cfaca .Set (_gdbe ,_eddg .Get (_dgeg ));}else {_cfaca .Set (_dgeg ,_eddg .Get (_dgeg ));};};return _cfaca ;};func (_eddd *PdfReader )newPdfAnnotationSquareFromDict (_cfe *_dc .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bfeb :=PdfAnnotationSquare {};
_dac ,_caaa :=_eddd .newPdfAnnotationMarkupFromDict (_cfe );if _caaa !=nil {return nil ,_caaa ;};_bfeb .PdfAnnotationMarkup =_dac ;_bfeb .BS =_cfe .Get ("\u0042\u0053");_bfeb .IC =_cfe .Get ("\u0049\u0043");_bfeb .BE =_cfe .Get ("\u0042\u0045");_bfeb .RD =_cfe .Get ("\u0052\u0044");
return &_bfeb ,nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gadb :=NewPdfAnnotation ();_fbf :=&PdfAnnotationWatermark {};_fbf .PdfAnnotation =_gadb ;_gadb .SetContext (_fbf );return _fbf ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_acga FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_acga .Mask ()|fl .Mask ())};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_df :=NewPdfAction ();_ae :=&PdfActionGoToR {};_ae .PdfAction =_df ;_df .SetContext (_ae );return _ae ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_cdebg *PdfPattern )GetContext ()PdfModel {return _cdebg ._egccdf };

// ToPdfObject implements interface PdfModel.
func (_bac *PdfActionResetForm )ToPdfObject ()_dc .PdfObject {_bac .PdfAction .ToPdfObject ();_fbd :=_bac ._be ;_ad :=_fbd .PdfObject .(*_dc .PdfObjectDictionary );_ad .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeResetForm )));_ad .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bac .Fields );
_ad .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bac .Flags );return _fbd ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ebce :=&PdfColorspaceCalGray {};_ebce .BlackPoint =[]float64 {0.0,0.0,0.0};_ebce .Gamma =1;return _ebce ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_bfcg *PdfPageResources )SetColorspaceByName (keyName _dc .PdfObjectName ,cs PdfColorspace )error {_dbaga ,_bdce :=_bfcg .GetColorspaces ();if _bdce !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bdce );
return _bdce ;};if _dbaga ==nil {_dbaga =NewPdfPageResourcesColorspaces ();_bfcg .SetColorSpace (_dbaga );};_dbaga .Set (keyName ,cs );return nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_aebd *pdfCIDFontType2 )ToPdfObject ()_dc .PdfObject {if _aebd ._bbgfa ==nil {_aebd ._bbgfa =&_dc .PdfIndirectObject {};};_edca :=_aebd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_aebd ._bbgfa .PdfObject =_edca ;
if _aebd .CIDSystemInfo !=nil {_edca .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_aebd .CIDSystemInfo );};if _aebd .DW !=nil {_edca .Set ("\u0044\u0057",_aebd .DW );};if _aebd .DW2 !=nil {_edca .Set ("\u0044\u0057\u0032",_aebd .DW2 );
};if _aebd .W !=nil {_edca .Set ("\u0057",_aebd .W );};if _aebd .W2 !=nil {_edca .Set ("\u0057\u0032",_aebd .W2 );};if _aebd .CIDToGIDMap !=nil {_edca .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_aebd .CIDToGIDMap );};return _aebd ._bbgfa ;
};func (_fcgd *pdfFontSimple )addEncoding ()error {var (_ecaaf string ;_eacc map[_fgd .CharCode ]_fgd .GlyphName ;_adace _fgd .SimpleEncoder ;);if _fcgd .Encoder ()!=nil {_edegg ,_gdgc :=_fcgd .Encoder ().(_fgd .SimpleEncoder );if _gdgc &&_edegg !=nil {_ecaaf =_edegg .BaseName ();
};};if _fcgd .Encoding !=nil {_bgfde ,_ddbbb ,_aafd :=_fcgd .getFontEncoding ();if _aafd !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcgd ._bfbac ,_fcgd ._dgdeb ,_fcgd .Encoding ,_fcgd .Encoding ,_aafd );
return _aafd ;};if _bgfde !=""{_ecaaf =_bgfde ;};_eacc =_ddbbb ;_adace ,_aafd =_fgd .NewSimpleTextEncoder (_ecaaf ,_eacc );if _aafd !=nil {return _aafd ;};};if _adace ==nil {_bcga :=_fcgd ._dffc ;if _bcga !=nil {switch _fcgd ._dgdeb {case "\u0054\u0079\u0070e\u0031":if _bcga .fontFile !=nil &&_bcga .fontFile ._cafd !=nil {_bg .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_adace =_bcga .fontFile ._cafd ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _bcga ._ccbce !=nil {_bg .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_ffeb ,_cgbg :=_bcga ._ccbce .MakeEncoder ();
if _cgbg ==nil {_adace =_ffeb ;};};};};};if _adace !=nil {if _eacc !=nil {_bg .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eacc ,_fcgd .baseFields ());_adace =_fgd .ApplyDifferences (_adace ,_eacc );
};_fcgd .SetEncoder (_adace );};return nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_afbag *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_cgg :=_gab .NewReader (img .getBase ());_fadg :=_ea .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._cecag ,img ._bbde );
_bbcac :=_gab .NewWriter (_fadg );_abfg :=_ged .Pow (2,float64 (img .BitsPerComponent ))-1;_dcadb :=_afbag .GetNumComponents ();_bdfd :=make ([]uint32 ,_dcadb );_cgeda :=make ([]float64 ,_dcadb );for {_gffa :=_cgg .ReadSamples (_bdfd );if _gffa ==_fa .EOF {break ;
}else if _gffa !=nil {return img ,_gffa ;};for _bffef :=0;_bffef < _dcadb ;_bffef ++{_cecec :=float64 (_bdfd [_bffef ])/_abfg ;_cgeda [_bffef ]=_cecec ;};_abbb ,_gffa :=_afbag .TintTransform .Evaluate (_cgeda );if _gffa !=nil {return img ,_gffa ;};for _ ,_gbea :=range _abbb {_gbea =_ged .Min (_ged .Max (0,_gbea ),1.0);
if _gffa =_bbcac .WriteSample (uint32 (_gbea *_abfg ));_gffa !=nil {return img ,_gffa ;};};};return _afbag .AlternateSpace .ImageToRGB (_ggff (&_fadg ));};func (_cadb *PdfReader )newPdfActionGoTo3DViewFromDict (_ace *_dc .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_ace .Get ("\u0054\u0041"),V :_ace .Get ("\u0056")},nil ;
};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ccdced *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gaab []*PdfOutlineTreeNode ;var _cegb []string ;var _cgaga func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_cgaga =func (_dabe *PdfOutlineTreeNode ,_afea *[]*PdfOutlineTreeNode ,_aefcc *[]string ,_ecae int ){if _dabe ==nil {return ;
};if _dabe ._abcc ==nil {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_befbc ,_cfbcf :=_dabe ._abcc .(*PdfOutlineItem );if _cfbcf {*_afea =append (*_afea ,&_befbc .PdfOutlineTreeNode );
_gbefee :=_db .Repeat ("\u0020",_ecae *2)+_befbc .Title .Decoded ();*_aefcc =append (*_aefcc ,_gbefee );};if _dabe .First !=nil {_gdfad :=_db .Repeat ("\u0020",_ecae *2)+"\u002b";*_aefcc =append (*_aefcc ,_gdfad );_cgaga (_dabe .First ,_afea ,_aefcc ,_ecae +1);
};if _cfbcf &&_befbc .Next !=nil {_cgaga (_befbc .Next ,_afea ,_aefcc ,_ecae );};};_cgaga (_ccdced ._babacc ,&_gaab ,&_cegb ,0);return _gaab ,_cegb ,nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_eebd :=&PdfPageResourcesColorspaces {};_eebd .Names =[]string {};_eebd .Colorspaces =map[string ]PdfColorspace {};_eebd ._gafdb =&_dc .PdfIndirectObject {};return _eebd ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_daeg :=NewPdfAnnotation ();_dafa :=&PdfAnnotationMovie {};_dafa .PdfAnnotation =_daeg ;_daeg .SetContext (_dafa );return _dafa ;};

// Encoder returns the font's text encoder.
func (_geegeb pdfFontType0 )Encoder ()_fgd .TextEncoder {return _geegeb ._efebb };

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_cef :=NewPdfAnnotation ();_ddg :=&PdfAnnotationLink {};_ddg .PdfAnnotation =_cef ;_cef .SetContext (_ddg );return _ddg ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_bbccdg *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_eacefg ,_gfgd :=_dc .GetDict (_bbccdg ._dfecf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_gfgd {_eacefg =_dc .MakeDict ();_bbccdg ._dfecf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_eacefg );
};_dage ,_gfgd :=_dc .GetDict (_eacefg .Get (_dc .PdfObjectName (extName )));if !_gfgd {_dage =_dc .MakeDict ();_eacefg .Set (_dc .PdfObjectName (extName ),_dage );};if _efbe ,_ :=_dc .GetNameVal (_dage .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_efbe !=baseVersion {_dage .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_dc .MakeName (baseVersion ));};if _aafcg ,_ :=_dc .GetIntVal (_dage .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_aafcg !=extLevel {_dage .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_dc .MakeInteger (int64 (extLevel )));};};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dgdfb ,_fdcf :=_ff .Open (filePath );if _fdcf !=nil {_bg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fdcf );
return nil ,_fdcf ;};defer _dgdfb .Close ();return NewCompositePdfFontFromTTF (_dgdfb );};

// SetAnnotations sets the annotations list.
func (_geadd *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_geadd ._gbacf =annotations };func (_ddgd fontCommon )fontFlags ()int {if _ddgd ._dffc ==nil {return 0;};return _ddgd ._dffc ._adae ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cg :=NewPdfAction ();_cfg :=&PdfActionMovie {};_cfg .PdfAction =_cg ;_cg .SetContext (_cfg );return _cfg ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_aeggd *PdfColorspaceCalRGB )ToPdfObject ()_dc .PdfObject {_becb :=&_dc .PdfObjectArray {};_becb .Append (_dc .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_acac :=_dc .MakeDict ();if _aeggd .WhitePoint !=nil {_gcdf :=_dc .MakeArray (_dc .MakeFloat (_aeggd .WhitePoint [0]),_dc .MakeFloat (_aeggd .WhitePoint [1]),_dc .MakeFloat (_aeggd .WhitePoint [2]));
_acac .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gcdf );}else {_bg .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _aeggd .BlackPoint !=nil {_aggd :=_dc .MakeArray (_dc .MakeFloat (_aeggd .BlackPoint [0]),_dc .MakeFloat (_aeggd .BlackPoint [1]),_dc .MakeFloat (_aeggd .BlackPoint [2]));_acac .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aggd );
};if _aeggd .Gamma !=nil {_ddfb :=_dc .MakeArray (_dc .MakeFloat (_aeggd .Gamma [0]),_dc .MakeFloat (_aeggd .Gamma [1]),_dc .MakeFloat (_aeggd .Gamma [2]));_acac .Set ("\u0047\u0061\u006dm\u0061",_ddfb );};if _aeggd .Matrix !=nil {_fcdg :=_dc .MakeArray (_dc .MakeFloat (_aeggd .Matrix [0]),_dc .MakeFloat (_aeggd .Matrix [1]),_dc .MakeFloat (_aeggd .Matrix [2]),_dc .MakeFloat (_aeggd .Matrix [3]),_dc .MakeFloat (_aeggd .Matrix [4]),_dc .MakeFloat (_aeggd .Matrix [5]),_dc .MakeFloat (_aeggd .Matrix [6]),_dc .MakeFloat (_aeggd .Matrix [7]),_dc .MakeFloat (_aeggd .Matrix [8]));
_acac .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fcdg );};_becb .Append (_acac );if _aeggd ._caae !=nil {_aeggd ._caae .PdfObject =_becb ;return _aeggd ._caae ;};return _becb ;};func (_ceef *pdfFontSimple )updateStandard14Font (){_eeeba ,_aecee :=_ceef .Encoder ().(_fgd .SimpleEncoder );
if !_aecee {_bg .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_ceef .Encoder (),_ceef );return ;};_geegb :=_eeeba .Charcodes ();
_ceef ._dbaad =make (map[_fgd .CharCode ]float64 ,len (_geegb ));for _ ,_cbdc :=range _geegb {_gcage ,_ :=_eeeba .CharcodeToRune (_cbdc );_cbbcc ,_ :=_ceef ._afeeg .Read (_gcage );_ceef ._dbaad [_cbdc ]=_cbbcc .Wx ;};};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ccfad *PdfPage )AddContentStreamByString (contentStr string )error {_ecggfe ,_gcdea :=_dc .MakeStream ([]byte (contentStr ),_dc .NewFlateEncoder ());if _gcdea !=nil {return _gcdea ;};if _ccfad .Contents ==nil {_ccfad .Contents =_ecggfe ;}else {_ecadc :=_dc .TraceToDirectObject (_ccfad .Contents );
_ddbg ,_fagfa :=_ecadc .(*_dc .PdfObjectArray );if !_fagfa {_ddbg =_dc .MakeArray (_ecadc );};_ddbg .Append (_ecggfe );_ccfad .Contents =_ddbg ;};return nil ;};func _fdbe (_aadf string )map[string ]string {_cgga :=_ageab .Split (_aadf ,-1);_fgce :=map[string ]string {};
for _ ,_acdgb :=range _cgga {_decb :=_ddbf .FindStringSubmatch (_acdgb );if _decb ==nil {continue ;};_gdaac ,_aeffb :=_decb [1],_decb [2];_fgce [_gdaac ]=_aeffb ;};return _fgce ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_aacga *PdfFieldButton )GetType ()ButtonType {_ggad :=ButtonTypeCheckbox ;if _aacga .Ff !=nil {if (uint32 (*_aacga .Ff )&FieldFlagPushbutton .Mask ())> 0{_ggad =ButtonTypePush ;}else if (uint32 (*_aacga .Ff )&FieldFlagRadio .Mask ())> 0{_ggad =ButtonTypeRadio ;
};};return _ggad ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eaabg *PdfOutline )ToPdfObject ()_dc .PdfObject {_eegf :=_eaabg ._cfdeb ;_fbbf :=_eegf .PdfObject .(*_dc .PdfObjectDictionary );_fbbf .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _eaabg .First !=nil {_fbbf .Set ("\u0046\u0069\u0072s\u0074",_eaabg .First .ToPdfObject ());
};if _eaabg .Last !=nil {_fbbf .Set ("\u004c\u0061\u0073\u0074",_eaabg .Last .GetContext ().GetContainingPdfObject ());};if _eaabg .Parent !=nil {_fbbf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaabg .Parent .GetContext ().GetContainingPdfObject ());
};if _eaabg .Count !=nil {_fbbf .Set ("\u0043\u006f\u0075n\u0074",_dc .MakeInteger (*_eaabg .Count ));};return _eegf ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_accbd :=PdfColorCalRGB {a ,b ,c };return &_accbd ;};func (_bdfc *pdfFontType3 )baseFields ()*fontCommon {return &_bdfc .fontCommon };

// M returns the value of the magenta component of the color.
func (_gbag *PdfColorDeviceCMYK )M ()float64 {return _gbag [1]};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_cabeg *_dc .PdfObjectDictionary ;_caae *_dc .PdfIndirectObject ;};func (_aabbc *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _aabbc ._dffc };


// ToPdfObject implements interface PdfModel.
func (_ggca *PdfAnnotationCaret )ToPdfObject ()_dc .PdfObject {_ggca .PdfAnnotation .ToPdfObject ();_abed :=_ggca ._cgcd ;_ggd :=_abed .PdfObject .(*_dc .PdfObjectDictionary );_ggca .PdfAnnotationMarkup .appendToPdfDictionary (_ggd );_ggd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0043\u0061\u0072e\u0074"));
_ggd .SetIfNotNil ("\u0052\u0044",_ggca .RD );_ggd .SetIfNotNil ("\u0053\u0079",_ggca .Sy );return _abed ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_afagb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _afagb ._efeg .getFontDescriptor (),nil ;};func (_dcecc *fontFile )parseASCIIPart (_efbga []byte )error {if len (_efbga )< 2||string (_efbga [:2])!="\u0025\u0021"{return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_dagff ,_ggga ,_gcfdg :=_ffbg (_efbga );if _gcfdg !=nil {return _gcfdg ;};_dgdb :=_fdbe (_dagff );_dcecc ._ggcddd =_dgdb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dcecc ._ggcddd ==""{_bg .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _ggga !=""{_bfcdc ,_bbddg :=_bacfe (_ggga );if _bbddg !=nil {return _bbddg ;};_agbe ,_bbddg :=_fgd .NewCustomSimpleTextEncoder (_bfcdc ,nil );if _bbddg !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_bbddg );
return nil ;};_dcecc ._cafd =_agbe ;};return nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_dc .PdfObjectBool ;SigFlags *_dc .PdfObjectInteger ;CO *_dc .PdfObjectArray ;DR *PdfPageResources ;DA *_dc .PdfObjectString ;Q *_dc .PdfObjectInteger ;XFA _dc .PdfObject ;_feaab *_dc .PdfIndirectObject ;
};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cea :=NewPdfAnnotation ();_fcbb :=&PdfAnnotationCaret {};_fcbb .PdfAnnotation =_cea ;_fcbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cea .SetContext (_fcbb );return _fcbb ;};func _agaf (_ccdg _dc .PdfObject )(*PdfColorspaceICCBased ,error ){_gcfd :=&PdfColorspaceICCBased {};
if _cdbc ,_faeb :=_ccdg .(*_dc .PdfIndirectObject );_faeb {_gcfd ._fdbf =_cdbc ;};_ccdg =_dc .TraceToDirectObject (_ccdg );_eegce ,_aaae :=_ccdg .(*_dc .PdfObjectArray );if !_aaae {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _eegce .Len ()!=2{return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_ccdg =_dc .TraceToDirectObject (_eegce .Get (0));_abgee ,_aaae :=_ccdg .(*_dc .PdfObjectName );
if !_aaae {return nil ,_a .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_abgee !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_a .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_ccdg =_eegce .Get (1);_efeb ,_aaae :=_dc .GetStream (_ccdg );if !_aaae {_bg .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_ccdg );
return nil ,_a .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dfcf :=_efeb .PdfObjectDictionary ;_dfdb ,_aaae :=_dfcf .Get ("\u004e").(*_dc .PdfObjectInteger );
if !_aaae {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_dfdb !=1&&*_dfdb !=3&&*_dfdb !=4{return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_gcfd .N =int (*_dfdb );if _acefa :=_dfcf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_acefa !=nil {_deae ,_ebaba :=NewPdfColorspaceFromPdfObject (_acefa );if _ebaba !=nil {return nil ,_ebaba ;};_gcfd .Alternate =_deae ;};if _afda :=_dfcf .Get ("\u0052\u0061\u006eg\u0065");
_afda !=nil {_afda =_dc .TraceToDirectObject (_afda );_cccgf ,_efed :=_afda .(*_dc .PdfObjectArray );if !_efed {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cccgf .Len ()!=2*_gcfd .N {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_eace ,_cfee :=_cccgf .GetAsFloat64Slice ();if _cfee !=nil {return nil ,_cfee ;};_gcfd .Range =_eace ;}else {_gcfd .Range =make ([]float64 ,2*_gcfd .N );for _gcac :=0;_gcac < _gcfd .N ;_gcac ++{_gcfd .Range [2*_gcac ]=0.0;_gcfd .Range [2*_gcac +1]=1.0;
};};if _fcdc :=_dfcf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fcdc !=nil {_ageg ,_gbcc :=_fcdc .(*_dc .PdfObjectStream );if !_gbcc {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_gcfd .Metadata =_ageg ;};_baba ,_gbcd :=_dc .DecodeStream (_efeb );if _gbcd !=nil {return nil ,_gbcd ;};_gcfd .Data =_baba ;_gcfd ._aebg =_efeb ;return _gcfd ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_dc .PdfIndirectObject )*PdfOutlineItem {_fegaf :=PdfOutlineItem {};_fegaf ._abcc =&_fegaf ;_fegaf .Title =_dc .MakeString (title );_adgcc :=_dc .MakeArray ();_adgcc .Append (page );_adgcc .Append (_dc .MakeName ("\u0046\u0069\u0074"));
_fegaf .Dest =_adgcc ;return &_fegaf ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);
FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);
FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26);
);

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_beag *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acd ,_egefd :=_dc .GetNumbersAsFloat (objects );
if _egefd !=nil {return nil ,_egefd ;};return _beag .ColorFromFloats (_acd );};

// ToInteger convert to an integer format.
func (_bgbb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_cdee :=_ged .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cdee *_bgbb .A ()),uint32 (_cdee *_bgbb .B ()),uint32 (_cdee *_bgbb .C ())};};func (_cgce *DSS )generateHashMap (_gffag []*_dc .PdfObjectStream )(map[string ]*_dc .PdfObjectStream ,error ){_abafa :=map[string ]*_dc .PdfObjectStream {};
for _ ,_acda :=range _gffag {_aced ,_gefc :=_dc .DecodeStream (_acda );if _gefc !=nil {return nil ,_gefc ;};_fdggg ,_gefc :=_defd (_aced );if _gefc !=nil {return nil ,_gefc ;};_abafa [string (_fdggg )]=_acda ;};return _abafa ,nil ;};func (_dbbcg Image )getBase ()_ea .ImageBase {return _ea .NewImageBase (int (_dbbcg .Width ),int (_dbbcg .Height ),int (_dbbcg .BitsPerComponent ),_dbbcg .ColorComponents ,_dbbcg .Data ,_dbbcg ._cecag ,_dbbcg ._bbde );
};func (_bdbf *PdfReader )newPdfActionThreadFromDict (_cdd *_dc .PdfObjectDictionary )(*PdfActionThread ,error ){_ddd ,_fac :=_adg (_cdd .Get ("\u0046"));if _fac !=nil {return nil ,_fac ;};return &PdfActionThread {D :_cdd .Get ("\u0044"),B :_cdd .Get ("\u0042"),F :_ddd },nil ;
};

// BaseFont returns the font's "BaseFont" field.
func (_gcagd *PdfFont )BaseFont ()string {return _gcagd .baseFields ()._bfbac };

// B returns the value of the B component of the color.
func (_fadbg *PdfColorCalRGB )B ()float64 {return _fadbg [1]};

// AddFont adds a font dictionary to the Font resources.
func (_ageda *PdfPage )AddFont (name _dc .PdfObjectName ,font _dc .PdfObject )error {if _ageda .Resources ==nil {_ageda .Resources =NewPdfPageResources ();};if _ageda .Resources .Font ==nil {_ageda .Resources .Font =_dc .MakeDict ();};_abaae ,_fbcb :=_dc .TraceToDirectObject (_ageda .Resources .Font ).(*_dc .PdfObjectDictionary );
if !_fbcb {_bg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_dc .TraceToDirectObject (_ageda .Resources .Font ));
return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abaae .Set (name ,font );return nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_bgfdb *PdfAcroForm )AllFields ()[]*PdfField {if _bgfdb ==nil {return nil ;};var _cdde []*PdfField ;if _bgfdb .Fields !=nil {for _ ,_ccagb :=range *_bgfdb .Fields {_cdde =append (_cdde ,_dacg (_ccagb )...);};};return _cdde ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_bccd *Image )ToGoImage ()(_af .Image ,error ){_bg .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_fagfb ,_gfffab :=_ea .NewImage (int (_bccd .Width ),int (_bccd .Height ),int (_bccd .BitsPerComponent ),_bccd .ColorComponents ,_bccd .Data ,_bccd ._cecag ,_bccd ._bbde );
if _gfffab !=nil {return nil ,_gfffab ;};return _fagfb ,nil ;};func (_adfe *PdfPage )setContainer (_fceff *_dc .PdfIndirectObject ){_fceff .PdfObject =_adfe ._bgfa ;_adfe ._eeffa =_fceff ;};

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfActionSubmitForm )ToPdfObject ()_dc .PdfObject {_fcg .PdfAction .ToPdfObject ();_bf :=_fcg ._be ;_dab :=_bf .PdfObject .(*_dc .PdfObjectDictionary );_dab .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeSubmitForm )));if _fcg .F !=nil {_dab .Set ("\u0046",_fcg .F .ToPdfObject ());
};_dab .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fcg .Fields );_dab .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fcg .Flags );return _bf ;};func (_ebea *PdfAcroForm )filteredFields (_gbfec FieldFilterFunc ,_dabga bool )[]*PdfField {if _ebea ==nil {return nil ;
};return _eaec (_ebea .Fields ,_gbfec ,_dabga );};func (_abgd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject convert PdfInfo to pdf object.
func (_fdgbe *PdfInfo )ToPdfObject ()_dc .PdfObject {_fddf :=_dc .MakeDict ();_fddf .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_fdgbe .Title );_fddf .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_fdgbe .Author );_fddf .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_fdgbe .Subject );
_fddf .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fdgbe .Keywords );_fddf .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_fdgbe .Creator );_fddf .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fdgbe .Producer );
_fddf .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_fdgbe .Trapped );if _fdgbe .CreationDate !=nil {_fddf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fdgbe .CreationDate .ToPdfObject ());};if _fdgbe .ModifiedDate !=nil {_fddf .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_fdgbe .ModifiedDate .ToPdfObject ());
};for _ ,_adbfd :=range _fdgbe ._bgcge .Keys (){_fddf .SetIfNotNil (_adbfd ,_fdgbe ._bgcge .Get (_adbfd ));};return _fddf ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_bceag FieldFlag )Mask ()uint32 {return uint32 (_bceag )};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gca *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _dgfg (_dfc _dc .PdfObject )(*PdfColorspaceLab ,error ){_eeccf :=NewPdfColorspaceLab ();if _cafae ,_cddbc :=_dfc .(*_dc .PdfIndirectObject );_cddbc {_eeccf ._dbbc =_cafae ;};_dfc =_dc .TraceToDirectObject (_dfc );_bdea ,_egga :=_dfc .(*_dc .PdfObjectArray );
if !_egga {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bdea .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_dfc =_dc .TraceToDirectObject (_bdea .Get (0));_fcgad ,_egga :=_dfc .(*_dc .PdfObjectName );if !_egga {return nil ,_a .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_fcgad !="\u004c\u0061\u0062"{return nil ,_a .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_dfc =_dc .TraceToDirectObject (_bdea .Get (1));_ccdf ,_egga :=_dfc .(*_dc .PdfObjectDictionary );
if !_egga {return nil ,_a .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_dfc =_ccdf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_dfc =_dc .TraceToDirectObject (_dfc );_agaa ,_egga :=_dfc .(*_dc .PdfObjectArray );if !_egga {return nil ,_a .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _agaa .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_bcab ,_dcgd :=_agaa .GetAsFloat64Slice ();if _dcgd !=nil {return nil ,_dcgd ;};_eeccf .WhitePoint =_bcab ;_dfc =_ccdf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dfc !=nil {_dfc =_dc .TraceToDirectObject (_dfc );_eeccc ,_eae :=_dfc .(*_dc .PdfObjectArray );
if !_eae {return nil ,_a .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _eeccc .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gafg ,_fgda :=_eeccc .GetAsFloat64Slice ();if _fgda !=nil {return nil ,_fgda ;};_eeccf .BlackPoint =_gafg ;};_dfc =_ccdf .Get ("\u0052\u0061\u006eg\u0065");if _dfc !=nil {_dfc =_dc .TraceToDirectObject (_dfc );_degdg ,_eaef :=_dfc .(*_dc .PdfObjectArray );
if !_eaef {_bg .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_a .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _degdg .Len ()!=4{_bg .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dcgdb ,_adgf :=_degdg .GetAsFloat64Slice ();if _adgf !=nil {return nil ,_adgf ;};_eeccf .Range =_dcgdb ;};return _eeccf ,nil ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gfffa :=map[rune ]int {};for _ ,_bgac :=range text {_gfffa [_bgac ]++;};return _gfffa ;};

// ToPdfObject returns the PDF representation of the function.
func (_eeeafa *PdfFunctionType2 )ToPdfObject ()_dc .PdfObject {_ddfegf :=_dc .MakeDict ();_ddfegf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dc .MakeInteger (2));_bbbe :=&_dc .PdfObjectArray {};for _ ,_bafca :=range _eeeafa .Domain {_bbbe .Append (_dc .MakeFloat (_bafca ));
};_ddfegf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbbe );if _eeeafa .Range !=nil {_edee :=&_dc .PdfObjectArray {};for _ ,_eeegf :=range _eeeafa .Range {_edee .Append (_dc .MakeFloat (_eeegf ));};_ddfegf .Set ("\u0052\u0061\u006eg\u0065",_edee );};
if _eeeafa .C0 !=nil {_ggggf :=&_dc .PdfObjectArray {};for _ ,_edgc :=range _eeeafa .C0 {_ggggf .Append (_dc .MakeFloat (_edgc ));};_ddfegf .Set ("\u0043\u0030",_ggggf );};if _eeeafa .C1 !=nil {_abbce :=&_dc .PdfObjectArray {};for _ ,_bdefe :=range _eeeafa .C1 {_abbce .Append (_dc .MakeFloat (_bdefe ));
};_ddfegf .Set ("\u0043\u0031",_abbce );};_ddfegf .Set ("\u004e",_dc .MakeFloat (_eeeafa .N ));if _eeeafa ._abeec !=nil {_eeeafa ._abeec .PdfObject =_ddfegf ;return _eeeafa ._abeec ;};return _ddfegf ;};

// RemovePage removes a page by number.
func (_adbc *PdfAppender )RemovePage (pageNum int ){_gedc :=pageNum -1;_adbc ._aebf =append (_adbc ._aebf [0:_gedc ],_adbc ._aebf [pageNum :]...);};func (_aggc *PdfReader )flattenFieldsWithOpts (_baef bool ,_ebefc FieldAppearanceGenerator ,_abaa *FieldFlattenOpts )error {if _abaa ==nil {_abaa =&FieldFlattenOpts {};
};var _dddb bool ;_dcea :=map[*PdfAnnotation ]bool {};{var _edgd []*PdfField ;_decg :=_aggc .AcroForm ;if _decg !=nil {if _abaa .FilterFunc !=nil {_edgd =_decg .filteredFields (_abaa .FilterFunc ,true );_dddb =_decg .Fields !=nil &&len (*_decg .Fields )> 0;
}else {_edgd =_decg .AllFields ();};};for _ ,_deac :=range _edgd {for _ ,_aeecfd :=range _deac .Annotations {_dcea [_aeecfd .PdfAnnotation ]=_deac .V !=nil ;if _ebefc !=nil {_edgdf ,_bgcbe :=_ebefc .GenerateAppearanceDict (_decg ,_deac ,_aeecfd );if _bgcbe !=nil {return _bgcbe ;
};_aeecfd .AP =_edgdf ;};};};};if _baef {for _ ,_fbge :=range _aggc .PageList {_aafg ,_eaffc :=_fbge .GetAnnotations ();if _eaffc !=nil {return _eaffc ;};for _ ,_bfad :=range _aafg {_dcea [_bfad ]=true ;};};};for _ ,_faec :=range _aggc .PageList {var _bfba []*PdfAnnotation ;
if _ebefc !=nil {if _feeb :=_ebefc .WrapContentStream (_faec );_feeb !=nil {return _feeb ;};};_dbcd ,_bbaa :=_faec .GetAnnotations ();if _bbaa !=nil {return _bbaa ;};for _ ,_cggf :=range _dbcd {_bagf ,_gddg :=_dcea [_cggf ];if !_gddg &&_abaa .AnnotFilterFunc !=nil {if _ ,_gfdfc :=_cggf .GetContext ().(*PdfAnnotationWidget );
!_gfdfc {_gddg =_abaa .AnnotFilterFunc (_cggf );};};if !_gddg {_bfba =append (_bfba ,_cggf );continue ;};switch _cggf .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dfga ,_ggbgd ,_agcbd :=_gdgd (_cggf );if _agcbd !=nil {if !_bagf {_bg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_agcbd );
continue ;};if _dfga ==nil {continue ;};_ecad :=_faec .Resources .GenerateXObjectName ();_faec .Resources .SetXObjectFormByName (_ecad ,_dfga );_dfabe :=_ged .Min (_ggbgd .Llx ,_ggbgd .Urx );_gcefc :=_ged .Min (_ggbgd .Lly ,_ggbgd .Ury );var _ebcd []string ;
_ebcd =append (_ebcd ,"\u0071");_ebcd =append (_ebcd ,_a .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_dfabe ,_gcefc ));
_ebcd =append (_ebcd ,_a .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ecad .String ()));_ebcd =append (_ebcd ,"\u0051");_dgccb :=_db .Join (_ebcd ,"\u000a");_agcbd =_faec .AppendContentStream (_dgccb );if _agcbd !=nil {return _agcbd ;};if _dfga .Resources !=nil {_dbce ,_bcfe :=_dc .GetDict (_dfga .Resources .Font );
if _bcfe {for _ ,_faad :=range _dbce .Keys (){if !_faec .Resources .HasFontByName (_faad ){_faec .Resources .SetFontByName (_faad ,_dbce .Get (_faad ));};};};};};if len (_bfba )> 0{_faec ._gbacf =_bfba ;}else {_faec ._gbacf =[]*PdfAnnotation {};};};if !_dddb {_aggc .AcroForm =nil ;
};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_bdbdb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_eeca :=_gab .NewReader (img .getBase ());_degda :=_ea .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dcde :=_gab .NewWriter (_degda );
_fgag :=_ged .Pow (2,float64 (img .BitsPerComponent ))-1;_ccde :=make ([]uint32 ,3);var (_aaafd error ;_ccdd ,_dcgg ,_cfbf ,_abeed ,_ecdg ,_aafe float64 ;);for {_aaafd =_eeca .ReadSamples (_ccde );if _aaafd ==_fa .EOF {break ;}else if _aaafd !=nil {return img ,_aaafd ;
};_ccdd =float64 (_ccde [0])/_fgag ;_dcgg =float64 (_ccde [1])/_fgag ;_cfbf =float64 (_ccde [2])/_fgag ;_abeed =_bdbdb .Matrix [0]*_ged .Pow (_ccdd ,_bdbdb .Gamma [0])+_bdbdb .Matrix [3]*_ged .Pow (_dcgg ,_bdbdb .Gamma [1])+_bdbdb .Matrix [6]*_ged .Pow (_cfbf ,_bdbdb .Gamma [2]);
_ecdg =_bdbdb .Matrix [1]*_ged .Pow (_ccdd ,_bdbdb .Gamma [0])+_bdbdb .Matrix [4]*_ged .Pow (_dcgg ,_bdbdb .Gamma [1])+_bdbdb .Matrix [7]*_ged .Pow (_cfbf ,_bdbdb .Gamma [2]);_aafe =_bdbdb .Matrix [2]*_ged .Pow (_ccdd ,_bdbdb .Gamma [0])+_bdbdb .Matrix [5]*_ged .Pow (_dcgg ,_bdbdb .Gamma [1])+_bdbdb .Matrix [8]*_ged .Pow (_cfbf ,_bdbdb .Gamma [2]);
_ccdd =3.240479*_abeed +-1.537150*_ecdg +-0.498535*_aafe ;_dcgg =-0.969256*_abeed +1.875992*_ecdg +0.041556*_aafe ;_cfbf =0.055648*_abeed +-0.204043*_ecdg +1.057311*_aafe ;_ccdd =_ged .Min (_ged .Max (_ccdd ,0),1.0);_dcgg =_ged .Min (_ged .Max (_dcgg ,0),1.0);
_cfbf =_ged .Min (_ged .Max (_cfbf ,0),1.0);_ccde [0]=uint32 (_ccdd *_fgag );_ccde [1]=uint32 (_dcgg *_fgag );_ccde [2]=uint32 (_cfbf *_fgag );if _aaafd =_dcde .WriteSamples (_ccde );_aaafd !=nil {return img ,_aaafd ;};};return _ggff (&_degda ),nil ;};


// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_dadeb *PdfFont )GetCharMetrics (code _fgd .CharCode )(CharMetrics ,bool ){var _dbff _eb .CharMetrics ;switch _cdfd :=_dadeb ._efeg .(type ){case *pdfFontSimple :if _deaa ,_dcee :=_cdfd .GetCharMetrics (code );_dcee {return _deaa ,_dcee ;};case *pdfFontType0 :if _geab ,_efdc :=_cdfd .GetCharMetrics (code );
_efdc {return _geab ,_efdc ;};case *pdfCIDFontType0 :if _ffbf ,_caef :=_cdfd .GetCharMetrics (code );_caef {return _ffbf ,_caef ;};case *pdfCIDFontType2 :if _fgafb ,_edcf :=_cdfd .GetCharMetrics (code );_edcf {return _fgafb ,_edcf ;};case *pdfFontType3 :if _daaeb ,_gefd :=_cdfd .GetCharMetrics (code );
_gefd {return _daaeb ,_gefd ;};default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_dadeb ._efeg );
return _dbff ,false ;};if _ddea ,_ceba :=_dadeb .GetFontDescriptor ();_ceba ==nil &&_ddea !=nil {return _eb .CharMetrics {Wx :_ddea ._gebaa },true ;};_bg .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_dadeb );
return _dbff ,false ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_aacce *PdfPageResources )HasExtGState (keyName _dc .PdfObjectName )bool {_ ,_dbcfd :=_aacce .GetFontByName (keyName );return _dbcfd ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bdgf *PdfColorLab )GetNumComponents ()int {return 3};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_dgeb *_dc .PdfIndirectObject ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_dc .PdfObjectInteger ;TilingType *_dc .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_dc .PdfObjectFloat ;YStep *_dc .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_dc .PdfObjectArray ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_bacd *PdfPageResources )SetXObjectImageByName (keyName _dc .PdfObjectName ,ximg *XObjectImage )error {_fbacg :=ximg .ToPdfObject ().(*_dc .PdfObjectStream );_fagdg :=_bacd .SetXObjectByName (keyName ,_fbacg );return _fagdg ;};

// ToGoTime returns the date in time.Time format.
func (_eeafa PdfDate )ToGoTime ()_g .Time {_eaccga :=int (_eeafa ._fbcec *60*60+_eeafa ._deeab *60);switch _eeafa ._gagd {case '-':_eaccga =-_eaccga ;case 'Z':_eaccga =0;};_bbfagd :=_a .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_eeafa ._gagd ,_eeafa ._fbcec ,_eeafa ._deeab );
_gcca :=_g .FixedZone (_bbfagd ,_eaccga );return _g .Date (int (_eeafa ._geaba ),_g .Month (_eeafa ._edade ),int (_eeafa ._eabcf ),int (_eeafa ._bccge ),int (_eeafa ._cbade ),int (_eeafa ._eggc ),0,_gcca );};

// K returns the value of the key component of the color.
func (_ccfeg *PdfColorDeviceCMYK )K ()float64 {return _ccfeg [3]};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_bbaae .Lock ();defer _bbaae .Unlock ();_egced =author };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ebbg *_dc .PdfIndirectObject ;};

// Fill populates `form` with values provided by `provider`.
func (_eefad *PdfAcroForm )Fill (provider FieldValueProvider )error {return _eefad .fill (provider ,nil )};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_dc .PdfObjectStream )(*XObjectForm ,error ){_fgggb :=&XObjectForm {};_fgggb ._dgfed =stream ;_babga :=*(stream .PdfObjectDictionary );_abfgc ,_cgaaca :=_dc .NewEncoderFromStream (stream );if _cgaaca !=nil {return nil ,_cgaaca ;
};_fgggb .Filter =_abfgc ;if _eedg :=_babga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_eedg !=nil {_gdfc ,_bdacf :=_eedg .(*_dc .PdfObjectName );if !_bdacf {return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_gdfc !="\u0046\u006f\u0072\u006d"{_bg .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _fbgb :=_babga .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_fbgb !=nil {_fgggb .FormType =_fbgb ;};if _ecegg :=_babga .Get ("\u0042\u0042\u006f\u0078");
_ecegg !=nil {_fgggb .BBox =_ecegg ;};if _dcfece :=_babga .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dcfece !=nil {_fgggb .Matrix =_dcfece ;};if _cdbda :=_babga .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cdbda !=nil {_cdbda =_dc .TraceToDirectObject (_cdbda );
_fgdbe ,_dcedf :=_cdbda .(*_dc .PdfObjectDictionary );if !_dcedf {_bg .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_dc .ErrTypeError ;};_feagf ,_cceed :=NewPdfPageResourcesFromDict (_fgdbe );if _cceed !=nil {_bg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_cceed ;};_fgggb .Resources =_feagf ;_bg .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_fgggb .Resources );};_fgggb .Group =_babga .Get ("\u0047\u0072\u006fu\u0070");
_fgggb .Ref =_babga .Get ("\u0052\u0065\u0066");_fgggb .MetaData =_babga .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_fgggb .PieceInfo =_babga .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fgggb .LastModified =_babga .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_fgggb .StructParent =_babga .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fgggb .StructParents =_babga .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fgggb .OPI =_babga .Get ("\u004f\u0050\u0049");
_fgggb .OC =_babga .Get ("\u004f\u0043");_fgggb .Name =_babga .Get ("\u004e\u0061\u006d\u0065");_fgggb .Stream =stream .Stream ;return _fgggb ,nil ;};

// String returns a string representation of what flags are set.
func (_eead FieldFlag )String ()string {_egade :="";if _eead ==FieldFlagClear {_egade ="\u0043\u006c\u0065a\u0072";return _egade ;};if _eead &FieldFlagReadOnly > 0{_egade +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _eead &FieldFlagRequired > 0{_egade +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _eead &FieldFlagNoExport > 0{_egade +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _eead &FieldFlagNoToggleToOff > 0{_egade +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _eead &FieldFlagRadio > 0{_egade +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _eead &FieldFlagPushbutton > 0{_egade +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _eead &FieldFlagRadiosInUnision > 0{_egade +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _eead &FieldFlagMultiline > 0{_egade +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _eead &FieldFlagPassword > 0{_egade +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _eead &FieldFlagFileSelect > 0{_egade +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _eead &FieldFlagDoNotScroll > 0{_egade +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _eead &FieldFlagComb > 0{_egade +="\u007c\u0043\u006fm\u0062";};if _eead &FieldFlagRichText > 0{_egade +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _eead &FieldFlagDoNotSpellCheck > 0{_egade +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _eead &FieldFlagCombo > 0{_egade +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _eead &FieldFlagEdit > 0{_egade +="\u007c\u0045\u0064i\u0074";};if _eead &FieldFlagSort > 0{_egade +="\u007c\u0053\u006fr\u0074";};if _eead &FieldFlagMultiSelect > 0{_egade +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _eead &FieldFlagCommitOnSelChange > 0{_egade +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _db .Trim (_egade ,"\u007c");};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cbegf byte )byte ;

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_badbe *PdfPageResources )SetXObjectByName (keyName _dc .PdfObjectName ,stream *_dc .PdfObjectStream )error {if _badbe .XObject ==nil {_badbe .XObject =_dc .MakeDict ();};_dbdga :=_dc .TraceToDirectObject (_badbe .XObject );_cgcdc ,_fbcbee :=_dbdga .(*_dc .PdfObjectDictionary );
if !_fbcbee {_bg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_badbe .XObject ,_dbdga );return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cgcdc .Set (keyName ,stream );return nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_dcfebb *PdfReader )GetOutlines ()(*Outline ,error ){if _dcfebb ==nil {return nil ,_fd .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_aaccg :=_dcfebb .GetOutlineTree ();if _aaccg ==nil {return nil ,_fd .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _cegga func (_gfcd *PdfOutlineTreeNode ,_cgab *[]*OutlineItem );_cegga =func (_egcb *PdfOutlineTreeNode ,_dcbf *[]*OutlineItem ){if _egcb ==nil {return ;};if _egcb ._abcc ==nil {_bg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _acfgbb *OutlineItem ;if _ceeb ,_abga :=_egcb ._abcc .(*PdfOutlineItem );_abga {_eddc :=_ceeb .Dest ;if (_eddc ==nil ||_dc .IsNullObject (_eddc ))&&_ceeb .A !=nil {if _bddfd ,_eabc :=_dc .GetDict (_ceeb .A );_eabc {_eddc ,_ =_dc .GetArray (_bddfd .Get ("\u0044"));
};};var _gffe OutlineDest ;if _eddc !=nil &&!_dc .IsNullObject (_eddc ){if _egaf ,_effcb :=_egda (_eddc ,_dcfebb );_effcb ==nil {_gffe =*_egaf ;}else {_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_eddc ,_effcb );
};};_acfgbb =NewOutlineItem (_ceeb .Title .Decoded (),_gffe );*_dcbf =append (*_dcbf ,_acfgbb );if _ceeb .Next !=nil {_cegga (_ceeb .Next ,_dcbf );};};if _egcb .First !=nil {if _acfgbb !=nil {_dcbf =&_acfgbb .Entries ;};_cegga (_egcb .First ,_dcbf );};
};_bfcfb :=NewOutline ();_cegga (_aaccg ,&_bfcfb .Entries );return _bfcfb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfAnnotationLink )ToPdfObject ()_dc .PdfObject {_gdc .PdfAnnotation .ToPdfObject ();_baa :=_gdc ._cgcd ;_fcgg :=_baa .PdfObject .(*_dc .PdfObjectDictionary );_fcgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u004c\u0069\u006e\u006b"));
if _gdc ._cgf !=nil &&_gdc ._cgf ._efa !=nil {_fcgg .Set ("\u0041",_gdc ._cgf ._efa .ToPdfObject ());}else if _gdc .A !=nil {_fcgg .Set ("\u0041",_gdc .A );};_fcgg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gdc .Dest );_fcgg .SetIfNotNil ("\u0048",_gdc .H );
_fcgg .SetIfNotNil ("\u0050\u0041",_gdc .PA );_fcgg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdc .QuadPoints );_fcgg .SetIfNotNil ("\u0042\u0053",_gdc .BS );return _baa ;};

// ToInteger convert to an integer format.
func (_gaec *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gcfba :=_ged .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gcfba *_gaec .R ()),uint32 (_gcfba *_gaec .G ()),uint32 (_gcfba *_gaec .B ())};};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ccb :=NewPdfAction ();_bed :=&PdfActionSetOCGState {};_bed .PdfAction =_ccb ;_ccb .SetContext (_bed );return _bed ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_aegbf *Outline )ToPdfOutline ()*PdfOutline {_bbac :=NewPdfOutline ();var _bebee []*PdfOutlineItem ;var _cgagd int64 ;var _deced *PdfOutlineItem ;for _ ,_gfbd :=range _aegbf .Entries {_ebfae ,_begdb :=_gfbd .ToPdfOutlineItem ();_ebfae .Parent =&_bbac .PdfOutlineTreeNode ;
if _deced !=nil {_deced .Next =&_ebfae .PdfOutlineTreeNode ;_ebfae .Prev =&_deced .PdfOutlineTreeNode ;};_bebee =append (_bebee ,_ebfae );_cgagd +=_begdb ;_deced =_ebfae ;};_faaeb :=int64 (len (_bebee ));_cgagd +=_faaeb ;if _faaeb > 0{_bbac .First =&_bebee [0].PdfOutlineTreeNode ;
_bbac .Last =&_bebee [_faaeb -1].PdfOutlineTreeNode ;_bbac .Count =&_cgagd ;};return _bbac ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_dabab *PdfColorspaceDeviceN )GetNumComponents ()int {return _dabab .ColorantNames .Len ()};func (_fde *PdfReader )newPdfActionSetOCGStateFromDict (_dee *_dc .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_dee .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_dee .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// Encoder returns the font's text encoder.
func (_cfdd pdfFontType3 )Encoder ()_fgd .TextEncoder {return _cfdd ._acgfe };

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _fa .ReadSeeker )(*PdfReader ,error ){const _cdded ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";_agdf :=&PdfReader {_aeag :rs ,_agde :map[_dc .PdfObject ]struct{}{},_abaeb :_bdbad (),_egfdf :false };
_gfegg ,_abcg :=_fgebb ("\u0072");if _abcg !=nil {return nil ,_abcg ;};_abcg =_bb .Track (_gfegg ,_cdded );if _abcg !=nil {return nil ,_abcg ;};_agdf ._dccac =_gfegg ;_edeac ,_abcg :=_dc .NewParser (rs );if _abcg !=nil {return nil ,_abcg ;};_agdf ._ecead =_edeac ;
_ffeg ,_abcg :=_agdf .IsEncrypted ();if _abcg !=nil {return nil ,_abcg ;};if !_ffeg {_abcg =_agdf .loadStructure ();if _abcg !=nil {return nil ,_abcg ;};};return _agdf ,nil ;};

// SetContext sets the sub annotation (context).
func (_ccbf *PdfAnnotation )SetContext (ctx PdfModel ){_ccbf ._afgc =ctx };func _ccdcg ()string {_bbaae .Lock ();defer _bbaae .Unlock ();return _dgbb };func _egffc ()string {_bbaae .Lock ();defer _bbaae .Unlock ();return _dggg };

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _dc .PdfObject )(*PdfFilespec ,error ){_gbabgg :=&PdfFilespec {};var _gbdf *_dc .PdfObjectDictionary ;if _fcda ,_bbbf :=_dc .GetIndirect (obj );_bbbf {_gbabgg ._ddfa =_fcda ;_addbb ,_cfbe :=_dc .GetDict (_fcda .PdfObject );
if !_cfbe {_bg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_dc .ErrTypeError ;};_gbdf =_addbb ;}else if _fbbb ,_cdbeg :=_dc .GetDict (obj );
_cdbeg {_gbabgg ._ddfa =_fbbb ;_gbdf =_fbbb ;}else {_bg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_dc .ErrTypeError ;};if _gbdf ==nil {_bg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _edfec :=_gbdf .Get ("\u0054\u0079\u0070\u0065");_edfec !=nil {_aegda ,_bfbe :=_edfec .(*_dc .PdfObjectName );if !_bfbe {_bg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_edfec );
}else {if *_aegda !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_bg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_aegda );
};};};if _dbca :=_gbdf .Get ("\u0046\u0053");_dbca !=nil {_gbabgg .FS =_dbca ;};if _edbb :=_gbdf .Get ("\u0046");_edbb !=nil {_gbabgg .F =_edbb ;};if _ebdag :=_gbdf .Get ("\u0055\u0046");_ebdag !=nil {_gbabgg .UF =_ebdag ;};if _cfgdc :=_gbdf .Get ("\u0044\u004f\u0053");
_cfgdc !=nil {_gbabgg .DOS =_cfgdc ;};if _ebdbf :=_gbdf .Get ("\u004d\u0061\u0063");_ebdbf !=nil {_gbabgg .Mac =_ebdbf ;};if _aaecg :=_gbdf .Get ("\u0055\u006e\u0069\u0078");_aaecg !=nil {_gbabgg .Unix =_aaecg ;};if _dgcfd :=_gbdf .Get ("\u0049\u0044");
_dgcfd !=nil {_gbabgg .ID =_dgcfd ;};if _gcdd :=_gbdf .Get ("\u0056");_gcdd !=nil {_gbabgg .V =_gcdd ;};if _gfdd :=_gbdf .Get ("\u0045\u0046");_gfdd !=nil {_gbabgg .EF =_gfdd ;};if _facaa :=_gbdf .Get ("\u0052\u0046");_facaa !=nil {_gbabgg .RF =_facaa ;
};if _dbbd :=_gbdf .Get ("\u0044\u0065\u0073\u0063");_dbbd !=nil {_gbabgg .Desc =_dbbd ;};if _aaad :=_gbdf .Get ("\u0043\u0049");_aaad !=nil {_gbabgg .CI =_aaad ;};return _gbabgg ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_degc *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _degc .Alternate ==nil {_bg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _degc .N ==1{_bg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_dgac :=NewPdfColorspaceDeviceGray ();return _dgac .ColorToRGB (color );}else if _degc .N ==3{_bg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _degc .N ==4{_bg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ffga :=NewPdfColorspaceDeviceCMYK ();return _ffga .ColorToRGB (color );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_degc );
return _degc .Alternate .ColorToRGB (color );};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_eegbb *PdfPage )GetContainingPdfObject ()_dc .PdfObject {return _eegbb ._eeffa };

// Encoder returns the font's text encoder.
func (_bfdb *PdfFont )Encoder ()_fgd .TextEncoder {_gdga :=_bfdb .actualFont ();if _gdga ==nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bfdb ._efeg );
return nil ;};return _gdga .Encoder ();};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_dc .PdfObjectArray ;ExtGState _dc .PdfObject ;};

// WriteToFile writes the Appender output to file specified by path.
func (_gfce *PdfAppender )WriteToFile (outputPath string )error {_beaf ,_bbfa :=_ff .Create (outputPath );if _bbfa !=nil {return _bbfa ;};defer _beaf .Close ();return _gfce .Write (_beaf );};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _g .Time )(PdfDate ,error ){_cbdg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_egaa ,_ :=_da .ParseInt (_cbdg [1:3],10,32);_geee ,_ :=_da .ParseInt (_cbdg [4:6],10,32);return PdfDate {_geaba :int64 (timeObj .Year ()),_edade :int64 (timeObj .Month ()),_eabcf :int64 (timeObj .Day ()),_bccge :int64 (timeObj .Hour ()),_cbade :int64 (timeObj .Minute ()),_eggc :int64 (timeObj .Second ()),_gagd :_cbdg [0],_fbcec :_egaa ,_deeab :_geee },nil ;
};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_dc .PdfObject ;};func _dbbbb (_edfcd []*_dc .PdfObjectStream )*_dc .PdfObjectArray {if len (_edfcd )==0{return nil ;};_fggd :=make ([]_dc .PdfObject ,0,len (_edfcd ));for _ ,_dgdd :=range _edfcd {_fggd =append (_fggd ,_dgdd );
};return _dc .MakeArray (_fggd ...);};var _ pdfFont =(*pdfFontSimple )(nil );

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bdbg :=NewPdfAction ();_edd :=&PdfActionGoTo3DView {};_edd .PdfAction =_bdbg ;_bdbg .SetContext (_edd );return _edd ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_gcefcf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _gcefcf ._gbacf !=nil {return _gcefcf ._gbacf ,nil ;};if _gcefcf .Annots ==nil {_gcefcf ._gbacf =[]*PdfAnnotation {};return nil ,nil ;};if _gcefcf ._ffda ==nil {_gcefcf ._gbacf =[]*PdfAnnotation {};
return nil ,nil ;};_fdece ,_ggdcd :=_gcefcf ._ffda .loadAnnotations (_gcefcf .Annots );if _ggdcd !=nil {return nil ,_ggdcd ;};if _fdece ==nil {_gcefcf ._gbacf =[]*PdfAnnotation {};};_gcefcf ._gbacf =_fdece ;return _gcefcf ._gbacf ,nil ;};func _gggd (_becg _dc .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_bfcbe :=NewPdfColorspaceSpecialIndexed ();
if _dcbg ,_bded :=_becg .(*_dc .PdfIndirectObject );_bded {_bfcbe ._ddgf =_dcbg ;};_becg =_dc .TraceToDirectObject (_becg );_ddegb ,_efef :=_becg .(*_dc .PdfObjectArray );if !_efef {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ddegb .Len ()!=4{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_becg =_ddegb .Get (0);
_febbd ,_efef :=_becg .(*_dc .PdfObjectName );if !_efef {return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_febbd !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_becg =_ddegb .Get (1);_agfba ,_fdbgd :=DetermineColorspaceNameFromPdfObject (_becg );if _fdbgd !=nil {return nil ,_fdbgd ;};if _agfba =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_agfba =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bg .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_agfba );
return nil ,_fdea ;};_effb ,_fdbgd :=NewPdfColorspaceFromPdfObject (_becg );if _fdbgd !=nil {return nil ,_fdbgd ;};_bfcbe .Base =_effb ;_becg =_ddegb .Get (2);_dbfbg ,_fdbgd :=_dc .GetNumberAsInt64 (_becg );if _fdbgd !=nil {return nil ,_fdbgd ;};if _dbfbg > 255{return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_bfcbe .HiVal =int (_dbfbg );_becg =_ddegb .Get (3);_bfcbe .Lookup =_becg ;_becg =_dc .TraceToDirectObject (_becg );var _efdd []byte ;if _gcgb ,_fdbga :=_becg .(*_dc .PdfObjectString );_fdbga {_efdd =_gcgb .Bytes ();_bg .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_efdd );
}else if _acbe ,_fcbgad :=_becg .(*_dc .PdfObjectStream );_fcbgad {_bg .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_becg .String ());_bg .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_acbe .Stream ),_acbe .Stream );
_cgea ,_eadb :=_dc .DecodeStream (_acbe );if _eadb !=nil {return nil ,_eadb ;};_bg .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_cgea ),_cgea );_efdd =_cgea ;}else {_bg .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_becg );
return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_efdd )< _bfcbe .Base .GetNumComponents ()*(_bfcbe .HiVal +1){_bg .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_bg .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_efdd ),_bfcbe .Base .GetNumComponents (),_bfcbe .HiVal );
}else {_efdd =_efdd [:_bfcbe .Base .GetNumComponents ()*(_bfcbe .HiVal +1)];};_bfcbe ._eefe =_efdd ;return _bfcbe ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _dc .PdfObject ;Flags _dc .PdfObject ;};func (_fbecfg *LTV )getCRLs (_feffc []*_dgd .Certificate )([][]byte ,error ){_fgca :=make ([][]byte ,0,len (_feffc ));for _ ,_cabdc :=range _feffc {for _ ,_egdef :=range _cabdc .CRLDistributionPoints {if _fbecfg .CertClient .IsCA (_cabdc ){continue ;
};_ccfd ,_fabb :=_fbecfg .CRLClient .MakeRequest (_egdef ,_cabdc );if _fabb !=nil {_bg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fabb );continue ;
};_fgca =append (_fgca ,_ccfd );};};return _fgca ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_gbeaf *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _gbeaf ._gbacf ==nil {_gbeaf .GetAnnotations ();};_gbeaf ._gbacf =append (_gbeaf ._gbacf ,annot );};

// ToPdfObject implements interface PdfModel.
func (_afd *PdfAction )ToPdfObject ()_dc .PdfObject {_ee :=_afd ._be ;_gf :=_ee .PdfObject .(*_dc .PdfObjectDictionary );_gf .Clear ();_gf .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gf .SetIfNotNil ("\u0053",_afd .S );
_gf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_afd .Next );return _ee ;};

// A returns the value of the A component of the color.
func (_dec *PdfColorCalRGB )A ()float64 {return _dec [0]};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_dc .PdfObjectArray ;Matrix *_dc .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_afgbb *PdfAnnotationWidget )ToPdfObject ()_dc .PdfObject {_afgbb .PdfAnnotation .ToPdfObject ();_dcgf :=_afgbb ._cgcd ;_fcebg :=_dcgf .PdfObject .(*_dc .PdfObjectDictionary );if _afgbb ._aef {return _dcgf ;};_afgbb ._aef =true ;_fcebg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_fcebg .SetIfNotNil ("\u0048",_afgbb .H );_fcebg .SetIfNotNil ("\u004d\u004b",_afgbb .MK );_fcebg .SetIfNotNil ("\u0041",_afgbb .A );_fcebg .SetIfNotNil ("\u0041\u0041",_afgbb .AA );_fcebg .SetIfNotNil ("\u0042\u0053",_afgbb .BS );_fbc :=_afgbb .Parent ;
if _afgbb ._bea !=nil {if _afgbb ._bea ._fbaa ==_afgbb ._cgcd {_afgbb ._bea .ToPdfObject ();};_fbc =_afgbb ._bea .GetContainingPdfObject ();};if _fbc !=_dcgf {_fcebg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbc );};_afgbb ._aef =false ;return _dcgf ;
};

// Encoder returns the font's text encoder.
func (_ccebc *pdfFontSimple )Encoder ()_fgd .TextEncoder {if _ccebc ._geecg !=nil {return _ccebc ._geecg ;};if _ccebc ._dcbbb !=nil {return _ccebc ._dcbbb ;};_bcfdcg ,_ :=_fgd .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bcfdcg ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_eeggf *PdfReader )GetObjectNums ()[]int {return _eeggf ._ecead .GetObjectNums ()};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_ggcde *PdfFieldText )ToPdfObject ()_dc .PdfObject {_ggcde .PdfField .ToPdfObject ();_efge :=_ggcde ._fbaa ;_adga :=_efge .PdfObject .(*_dc .PdfObjectDictionary );_adga .Set ("\u0046\u0054",_dc .MakeName ("\u0054\u0078"));if _ggcde .DA !=nil {_adga .Set ("\u0044\u0041",_ggcde .DA );
};if _ggcde .Q !=nil {_adga .Set ("\u0051",_ggcde .Q );};if _ggcde .DS !=nil {_adga .Set ("\u0044\u0053",_ggcde .DS );};if _ggcde .RV !=nil {_adga .Set ("\u0052\u0056",_ggcde .RV );};if _ggcde .MaxLen !=nil {_adga .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_ggcde .MaxLen );
};return _efge ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ggedb *PdfShadingType6 )ToPdfObject ()_dc .PdfObject {_ggedb .PdfShading .ToPdfObject ();_fgaef ,_gabcg :=_ggedb .getShadingDict ();if _gabcg !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ggedb .BitsPerCoordinate !=nil {_fgaef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ggedb .BitsPerCoordinate );};if _ggedb .BitsPerComponent !=nil {_fgaef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ggedb .BitsPerComponent );
};if _ggedb .BitsPerFlag !=nil {_fgaef .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ggedb .BitsPerFlag );};if _ggedb .Decode !=nil {_fgaef .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ggedb .Decode );};if _ggedb .Function !=nil {if len (_ggedb .Function )==1{_fgaef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggedb .Function [0].ToPdfObject ());
}else {_aegf :=_dc .MakeArray ();for _ ,_dadbg :=range _ggedb .Function {_aegf .Append (_dadbg .ToPdfObject ());};_fgaef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aegf );};};return _ggedb ._adbfg ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_eegaa *PdfFieldButton )IsCheckbox ()bool {return _eegaa .GetType ()==ButtonTypeCheckbox };

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_beab :=NewPdfAnnotation ();_edc :=&PdfAnnotationSquiggly {};_edc .PdfAnnotation =_beab ;_edc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_beab .SetContext (_edc );return _edc ;};func (_bcdc *PdfReader )newPdfAnnotationSoundFromDict (_gbb *_dc .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_fgb :=PdfAnnotationSound {};
_dcd ,_bbfb :=_bcdc .newPdfAnnotationMarkupFromDict (_gbb );if _bbfb !=nil {return nil ,_bbfb ;};_fgb .PdfAnnotationMarkup =_dcd ;_fgb .Name =_gbb .Get ("\u004e\u0061\u006d\u0065");_fgb .Sound =_gbb .Get ("\u0053\u006f\u0075n\u0064");return &_fgb ,nil ;
};func (_fgg *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func _dfbac (_egfab *_dc .PdfObjectDictionary )(*PdfFieldText ,error ){_bbfcg :=&PdfFieldText {};_bbfcg .DA ,_ =_dc .GetString (_egfab .Get ("\u0044\u0041"));
_bbfcg .Q ,_ =_dc .GetInt (_egfab .Get ("\u0051"));_bbfcg .DS ,_ =_dc .GetString (_egfab .Get ("\u0044\u0053"));_bbfcg .RV =_egfab .Get ("\u0052\u0056");_bbfcg .MaxLen ,_ =_dc .GetInt (_egfab .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _bbfcg ,nil ;
};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_adbf :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_adbf ;};

// ToPdfObject implements interface PdfModel.
func (_gaee *PdfActionRendition )ToPdfObject ()_dc .PdfObject {_gaee .PdfAction .ToPdfObject ();_fag :=_gaee ._be ;_ab :=_fag .PdfObject .(*_dc .PdfObjectDictionary );_ab .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeRendition )));_ab .SetIfNotNil ("\u0052",_gaee .R );
_ab .SetIfNotNil ("\u0041\u004e",_gaee .AN );_ab .SetIfNotNil ("\u004f\u0050",_gaee .OP );_ab .SetIfNotNil ("\u004a\u0053",_gaee .JS );return _fag ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _dc .PdfObject ;T3DV _dc .PdfObject ;T3DA _dc .PdfObject ;T3DI _dc .PdfObject ;T3DB _dc .PdfObject ;};func _bgeb (_ebaad _dc .PdfObject ,_dfgb bool )(*PdfFont ,error ){_degg ,_badb ,_acbg :=_ceffe (_ebaad );
if _acbg !=nil {if _acbg ==ErrType1CFontNotSupported {_fgee ,_ebfad :=_gadf (_degg ,_badb ,nil );if _ebfad !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_badb ,_ebfad );
return nil ,_acbg ;};return &PdfFont {_efeg :_fgee },_acbg ;};return nil ,_acbg ;};_fcaaa :=&PdfFont {};switch _badb ._dgdeb {case "\u0054\u0079\u0070e\u0030":if !_dfgb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_badb );
return nil ,_fd .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cebfd ,_ddef :=_dcag (_degg ,_badb );if _ddef !=nil {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_badb ,_ddef );
return nil ,_ddef ;};_fcaaa ._efeg =_cebfd ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bbbdg *pdfFontSimple ;_debg ,_deaba :=_eb .NewStdFontByName (_eb .StdFontName (_badb ._bfbac ));
if _deaba {_dcbb :=_bcbae (_debg );_fcaaa ._efeg =&_dcbb ;_bdbfg :=_dc .TraceToDirectObject (_dcbb .ToPdfObject ());_gdgge ,_bgcdb ,_eddee :=_ceffe (_bdbfg );if _eddee !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_badb ,_dcbb );
return nil ,_eddee ;};for _ ,_gfbbc :=range _degg .Keys (){_gdgge .Set (_gfbbc ,_degg .Get (_gfbbc ));};_bbbdg ,_eddee =_gadf (_gdgge ,_bgcdb ,_dcbb ._dcbbb );if _eddee !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_badb ,_dcbb );
return nil ,_eddee ;};_bbbdg ._dbaad =_dcbb ._dbaad ;_bbbdg ._afeeg =_dcbb ._afeeg ;}else {_bbbdg ,_acbg =_gadf (_degg ,_badb ,nil );if _acbg !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_badb ,_acbg );
return nil ,_acbg ;};};_acbg =_bbbdg .addEncoding ();if _acbg !=nil {return nil ,_acbg ;};if _deaba {_bbbdg .updateStandard14Font ();};if _deaba &&_bbbdg ._geecg ==nil &&_bbbdg ._dcbbb ==nil {_bg .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbbdg );
_bg .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_debg );};if len (_bbbdg ._dbaad )==0{_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bbbdg );};_fcaaa ._efeg =_bbbdg ;
case "\u0054\u0079\u0070e\u0033":_fgagf ,_acdag :=_abbbc (_degg ,_badb );if _acdag !=nil {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_acdag );
return nil ,_acdag ;};_fcaaa ._efeg =_fgagf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_eccaa ,_gbdb :=_afdd (_degg ,_badb );if _gbdb !=nil {_bg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_gbdb );
return nil ,_gbdb ;};_fcaaa ._efeg =_eccaa ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fcba ,_ebced :=_begadb (_degg ,_badb );if _ebced !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_badb ,_ebced );
return nil ,_ebced ;};_fcaaa ._efeg =_fcba ;default:_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_badb );
return nil ,_a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_badb );};return _fcaaa ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_acgce *Image )ToJBIG2Image ()(*_dc .JBIG2Image ,error ){_cgec ,_gcgdfb :=_acgce .ToGoImage ();if _gcgdfb !=nil {return nil ,_gcgdfb ;};return _dc .GoImageToJBIG2 (_cgec ,_dc .JB2ImageAutoThreshold );};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fbb :=&PdfAnnotation {};_fbb ._cgcd =_dc .MakeIndirectObject (_dc .MakeDict ());return _fbb ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_aeecf *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _aeecf .flattenFieldsWithOpts (false ,appgen ,opts );};func (_cfdfce *PdfWriter )hasObject (_dgfa _dc .PdfObject )bool {_ ,_cdeeb :=_cfdfce ._bgadg [_dgfa ];
return _cdeeb ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_agcd *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_ebaf *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};func (_dcga *PdfField )inherit (_cgdg func (*PdfField )bool )(bool ,error ){_cgbc :=map[*PdfField ]bool {};_ggegg :=false ;_dfed :=_dcga ;for _dfed !=nil {if _ ,_eagg :=_cgbc [_dfed ];_eagg {return false ,_fd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_ebfd :=_cgdg (_dfed );if _ebfd {_ggegg =true ;break ;};_cgbc [_dfed ]=true ;_dfed =_dfed .Parent ;};return _ggegg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbb *PdfActionGoTo )ToPdfObject ()_dc .PdfObject {_dbb .PdfAction .ToPdfObject ();_gdb :=_dbb ._be ;_ccc :=_gdb .PdfObject .(*_dc .PdfObjectDictionary );_ccc .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeGoTo )));_ccc .SetIfNotNil ("\u0044",_dbb .D );
return _gdb ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_dc .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_fceec *_dc .PdfIndirectObject ;};

// SetAction sets the PDF action for the annotation link.
func (_adgg *PdfAnnotationLink )SetAction (action *PdfAction ){_adgg ._cgf =action ;if action ==nil {_adgg .A =nil ;};};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_debf *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=_debf .GetNumComponents (){return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_befc ,_ddgbf :=_dc .GetNumbersAsFloat (objects );
if _ddgbf !=nil {return nil ,_ddgbf ;};return _debf .ColorFromFloats (_befc );};func (_dgbfd *DSS )addOCSPs (_cfbc [][]byte )([]*_dc .PdfObjectStream ,error ){return _dgbfd .add (&_dgbfd .OCSPs ,_dgbfd ._dagc ,_cfbc );};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _dc .PdfObject ;};func _eaefd (_fccda *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fccda }};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abgad *PdfShadingType4 )ToPdfObject ()_dc .PdfObject {_abgad .PdfShading .ToPdfObject ();_ggdee ,_cada :=_abgad .getShadingDict ();if _cada !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _abgad .BitsPerCoordinate !=nil {_ggdee .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_abgad .BitsPerCoordinate );};if _abgad .BitsPerComponent !=nil {_ggdee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_abgad .BitsPerComponent );
};if _abgad .BitsPerFlag !=nil {_ggdee .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_abgad .BitsPerFlag );};if _abgad .Decode !=nil {_ggdee .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_abgad .Decode );};if _abgad .Function !=nil {if len (_abgad .Function )==1{_ggdee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abgad .Function [0].ToPdfObject ());
}else {_gbcf :=_dc .MakeArray ();for _ ,_beebf :=range _abgad .Function {_gbcf .Append (_beebf .ToPdfObject ());};_ggdee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbcf );};};return _abgad ._adbfg ;};func (_agbf *PdfReader )newPdfAnnotationWidgetFromDict (_bdfg *_dc .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_efc :=PdfAnnotationWidget {};
_efc .H =_bdfg .Get ("\u0048");_efc .MK =_bdfg .Get ("\u004d\u004b");_efc .A =_bdfg .Get ("\u0041");_efc .AA =_bdfg .Get ("\u0041\u0041");_efc .BS =_bdfg .Get ("\u0042\u0053");_efc .Parent =_bdfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_efc ,nil ;
};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cbbg *LTV )EnableByName (name string ,extraCerts []*_dgd .Certificate )error {_gebfc :=_cbbg ._gccc ._fcca .AcroForm ;for _ ,_dfeg :=range _gebfc .AllFields (){_cega ,_ :=_dfeg .GetContext ().(*PdfFieldSignature );if _cega ==nil {continue ;};if _debdg :=_cega .PartialName ();
_debdg !=name {continue ;};return _cbbg .Enable (_cega .V ,extraCerts );};return nil ;};func (_gad *PdfReader )newPdfActionJavaScriptFromDict (_dae *_dc .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_dae .Get ("\u004a\u0053")},nil ;
};func _bacfe (_fgegag string )(map[_fgd .CharCode ]_fgd .GlyphName ,error ){_bcecc :=_db .Split (_fgegag ,"\u000a");_dbgc :=make (map[_fgd .CharCode ]_fgd .GlyphName );for _ ,_gedb :=range _bcecc {_dfgg :=_cacd .FindStringSubmatch (_gedb );if _dfgg ==nil {continue ;
};_aggdbd ,_faeg :=_dfgg [1],_dfgg [2];_becge ,_ccffb :=_da .Atoi (_aggdbd );if _ccffb !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gedb );
return nil ,_dc .ErrTypeError ;};_dbgc [_fgd .CharCode (_becge )]=_fgd .GlyphName (_faeg );};_bg .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_dbgc );
return _dbgc ,nil ;};func (_gdfa *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// GetContainingPdfObject implements interface PdfModel.
func (_cebdc *PdfFilespec )GetContainingPdfObject ()_dc .PdfObject {return _cebdc ._ddfa };type pdfCIDFontType2 struct{fontCommon ;_bbgfa *_dc .PdfIndirectObject ;_bddfg _fgd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_dc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _dc .PdfObject ;W _dc .PdfObject ;DW2 _dc .PdfObject ;W2 _dc .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _dc .PdfObject ;_dbcbg map[_fgd .CharCode ]float64 ;_aefc float64 ;_fggfd map[rune ]int ;};func (_bbafa *PdfWriter )updateObjectNumbers (){_dbaaa :=_bbafa .ObjNumOffset ;_aagc :=0;for _ ,_fbdgcb :=range _bbafa ._edfca {_dgbg :=int64 (_aagc +1+_dbaaa );
_bddef :=true ;if _bbafa ._gcbbg {if _dgbac ,_faaca :=_bbafa ._afgbd [_fbdgcb ];_faaca {_dgbg =_dgbac ;_bddef =false ;};};switch _bcbff :=_fbdgcb .(type ){case *_dc .PdfIndirectObject :_bcbff .ObjectNumber =_dgbg ;_bcbff .GenerationNumber =0;case *_dc .PdfObjectStream :_bcbff .ObjectNumber =_dgbg ;
_bcbff .GenerationNumber =0;case *_dc .PdfObjectStreams :_bcbff .ObjectNumber =_dgbg ;_bcbff .GenerationNumber =0;default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bcbff );
continue ;};if _bddef {_aagc ++;};};_adaed :=func (_facfg _dc .PdfObject )int64 {switch _adce :=_facfg .(type ){case *_dc .PdfIndirectObject :return _adce .ObjectNumber ;case *_dc .PdfObjectStream :return _adce .ObjectNumber ;case *_dc .PdfObjectStreams :return _adce .ObjectNumber ;
};return 0;};_ge .SliceStable (_bbafa ._edfca ,func (_begaf ,_cgaca int )bool {return _adaed (_bbafa ._edfca [_begaf ])< _adaed (_bbafa ._edfca [_cgaca ])});};func _fbdff (_ccdcf _dc .PdfObject )(*PdfFontDescriptor ,error ){_fabe :=&PdfFontDescriptor {};
_ccdcf =_dc .ResolveReference (_ccdcf );if _gfac ,_cgcac :=_ccdcf .(*_dc .PdfIndirectObject );_cgcac {_fabe ._abbgg =_gfac ;_ccdcf =_gfac .PdfObject ;};_cadgd ,_gcbg :=_dc .GetDict (_ccdcf );if !_gcbg {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ccdcf );
return nil ,_dc .ErrTypeError ;};if _accbdg :=_cadgd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_accbdg !=nil {_fabe .FontName =_accbdg ;}else {_bg .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_efbb ,_ :=_dc .GetName (_fabe .FontName );if _gedgb :=_cadgd .Get ("\u0054\u0079\u0070\u0065");_gedgb !=nil {_gbfg ,_cgfb :=_gedgb .(*_dc .PdfObjectName );if !_cgfb ||string (*_gbfg )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_bg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gedgb ,_efbb ,_fabe .FontName );
};}else {_bg .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_efbb ,_fabe .FontName );
};_fabe .FontFamily =_cadgd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fabe .FontStretch =_cadgd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fabe .FontWeight =_cadgd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_fabe .Flags =_cadgd .Get ("\u0046\u006c\u0061g\u0073");_fabe .FontBBox =_cadgd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fabe .ItalicAngle =_cadgd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fabe .Ascent =_cadgd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_fabe .Descent =_cadgd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fabe .Leading =_cadgd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fabe .CapHeight =_cadgd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fabe .XHeight =_cadgd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_fabe .StemV =_cadgd .Get ("\u0053\u0074\u0065m\u0056");_fabe .StemH =_cadgd .Get ("\u0053\u0074\u0065m\u0048");_fabe .AvgWidth =_cadgd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fabe .MaxWidth =_cadgd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_fabe .MissingWidth =_cadgd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fabe .FontFile =_cadgd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fabe .FontFile2 =_cadgd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_fabe .FontFile3 =_cadgd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fabe .CharSet =_cadgd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fabe .Style =_cadgd .Get ("\u0053\u0074\u0079l\u0065");_fabe .Lang =_cadgd .Get ("\u004c\u0061\u006e\u0067");
_fabe .FD =_cadgd .Get ("\u0046\u0044");_fabe .CIDSet =_cadgd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fabe .Flags !=nil {if _cfbb ,_dgaf :=_dc .GetIntVal (_fabe .Flags );_dgaf {_fabe ._adae =_cfbb ;};};if _fabe .MissingWidth !=nil {if _ebae ,_bace :=_dc .GetNumberAsFloat (_fabe .MissingWidth );
_bace ==nil {_fabe ._gebaa =_ebae ;};};if _fabe .FontFile !=nil {_ecaac ,_deec :=_gbabgf (_fabe .FontFile );if _deec !=nil {return _fabe ,_deec ;};_bg .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ecaac );_fabe .fontFile =_ecaac ;
};if _fabe .FontFile2 !=nil {_dada ,_dafge :=_eb .NewFontFile2FromPdfObject (_fabe .FontFile2 );if _dafge !=nil {return _fabe ,_dafge ;};_bg .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dada .String ());_fabe ._ccbce =&_dada ;
};return _fabe ,nil ;};

// C returns the value of the C component of the color.
func (_agfd *PdfColorCalRGB )C ()float64 {return _agfd [2]};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dbea *PdfField )IsTerminal ()bool {return len (_dbea .Kids )==0};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_cfddd *PdfPageResources )AddExtGState (gsName _dc .PdfObjectName ,gsDict _dc .PdfObject )error {if _cfddd .ExtGState ==nil {_cfddd .ExtGState =_dc .MakeDict ();};_bdggg :=_cfddd .ExtGState ;_aaeg ,_degab :=_dc .TraceToDirectObject (_bdggg ).(*_dc .PdfObjectDictionary );
if !_degab {_bg .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bdggg ,_dc .TraceToDirectObject (_bdggg ));
return _dc .ErrTypeError ;};_aaeg .Set (gsName ,gsDict );return nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_baccf *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_ebf *PdfAnnotationUnderline )ToPdfObject ()_dc .PdfObject {_ebf .PdfAnnotation .ToPdfObject ();_fefca :=_ebf ._cgcd ;_aea :=_fefca .PdfObject .(*_dc .PdfObjectDictionary );_ebf .PdfAnnotationMarkup .appendToPdfDictionary (_aea );_aea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_aea .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ebf .QuadPoints );return _fefca ;};func _abbbc (_bdgca *_dc .PdfObjectDictionary ,_bfcd *fontCommon )(*pdfFontType3 ,error ){_debfg :=_aeggc (_bfcd );_daded :=_bdgca .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _daded ==nil {_daded =_dc .MakeInteger (0);};_debfg .FirstChar =_daded ;_efgba ,_adcd :=_dc .GetIntVal (_daded );if !_adcd {_bg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_daded );
return nil ,_dc .ErrTypeError ;};_efabd :=_fgd .CharCode (_efgba );_daded =_bdgca .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _daded ==nil {_daded =_dc .MakeInteger (255);};_debfg .LastChar =_daded ;_efgba ,_adcd =_dc .GetIntVal (_daded );
if !_adcd {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_daded );return nil ,_dc .ErrTypeError ;
};_dcgaa :=_fgd .CharCode (_efgba );_daded =_bdgca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _daded !=nil {_debfg .Resources =_daded ;};_daded =_bdgca .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _daded ==nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_daded );
return nil ,_dc .ErrNotSupported ;};_debfg .CharProcs =_daded ;_daded =_bdgca .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _daded ==nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_daded );
return nil ,_dc .ErrNotSupported ;};_debfg .FontMatrix =_daded ;_debfg ._beeb =make (map[_fgd .CharCode ]float64 );_daded =_bdgca .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _daded !=nil {_debfg .Widths =_daded ;_dcgeb ,_fgeb :=_dc .GetArray (_daded );
if !_fgeb {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_daded );return nil ,_dc .ErrTypeError ;
};_ccedb ,_fdfdg :=_dcgeb .ToFloat64Array ();if _fdfdg !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fdfdg ;};if len (_ccedb )!=int (_dcgaa -_efabd +1){_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dcgaa -_efabd +1,len (_ccedb ));
return nil ,_dc .ErrRangeError ;};_fecadc ,_fgeb :=_dc .GetArray (_debfg .FontMatrix );if !_fgeb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fecadc );
return nil ,_fdfdg ;};_fbgd ,_fdfdg :=_fecadc .ToFloat64Array ();if _fdfdg !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fdfdg ;};_bfec :=_ed .NewMatrix (_fbgd [0],_fbgd [1],_fbgd [2],_fbgd [3],_fbgd [4],_fbgd [5]);for _bcgb ,_fgbc :=range _ccedb {_gegd ,_ :=_bfec .Transform (_fgbc ,_fgbc );_debfg ._beeb [_efabd +_fgd .CharCode (_bcgb )]=_gegd ;};};_debfg .Encoding =_dc .TraceToDirectObject (_bdgca .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_cfae :=_bdgca .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cfae !=nil {_debfg ._effd =_dc .TraceToDirectObject (_cfae );_cbbb ,_ddcce :=_gege (_debfg ._effd ,&_debfg .fontCommon );if _ddcce !=nil {return nil ,_ddcce ;};_debfg ._dcgae =_cbbb ;
};if _bbdaf :=_debfg ._dcgae ;_bbdaf !=nil {_debfg ._acgfe =_fgd .NewCMapEncoder ("",nil ,_bbdaf );}else {_debfg ._acgfe =_fgd .NewPdfDocEncoder ();};return _debfg ,nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fgbcf *XObjectForm )GetContainingPdfObject ()_dc .PdfObject {return _fgbcf ._dgfed };

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_ecgd *BorderStyle )GetPdfName ()string {switch *_ecgd {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_gafdb *_dc .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gbabe *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gbabe .UnderlyingCS ==nil {return nil ,_fd .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _gbabe .UnderlyingCS .ColorFromFloats (vals );};func (_cadf *PdfReader )newPdfActionSubmitFormFromDict (_gfb *_dc .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_febf ,_fea :=_adg (_gfb .Get ("\u0046"));if _fea !=nil {return nil ,_fea ;};
return &PdfActionSubmitForm {F :_febf ,Fields :_gfb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gfb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_beff *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _beff .Alternate ==nil {if _beff .N ==1{_bfcbg :=NewPdfColorspaceDeviceGray ();return _bfcbg .ColorFromFloats (vals );}else if _beff .N ==3{_dfee :=NewPdfColorspaceDeviceRGB ();
return _dfee .ColorFromFloats (vals );}else if _beff .N ==4{_ebcf :=NewPdfColorspaceDeviceCMYK ();return _ebcf .ColorFromFloats (vals );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _beff .Alternate .ColorFromFloats (vals );};func (_cgge *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ffcg []*PdfFieldSignature ;for _ ,_bedga :=range _cgge .AllFields (){switch _dcadga :=_bedga .GetContext ().(type ){case *PdfFieldSignature :_afaf :=_dcadga ;
_ffcg =append (_ffcg ,_afaf );};};return _ffcg ;};func (_fecg *DSS )add (_cbecd *[]*_dc .PdfObjectStream ,_gbba map[string ]*_dc .PdfObjectStream ,_aecg [][]byte )([]*_dc .PdfObjectStream ,error ){_dafd :=make ([]*_dc .PdfObjectStream ,0,len (_aecg ));
for _ ,_eebea :=range _aecg {_bgcf ,_cgbfg :=_defd (_eebea );if _cgbfg !=nil {return nil ,_cgbfg ;};_ddeb ,_abef :=_gbba [string (_bgcf )];if !_abef {_ddeb ,_cgbfg =_dc .MakeStream (_eebea ,_dc .NewRawEncoder ());if _cgbfg !=nil {return nil ,_cgbfg ;};
_gbba [string (_bgcf )]=_ddeb ;*_cbecd =append (*_cbecd ,_ddeb );};_dafd =append (_dafd ,_ddeb );};return _dafd ,nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_aababf :=&PdfPageResources {};_aababf ._bdgg =_dc .MakeDict ();return _aababf ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_eb .CharMetrics ;

// Add appends a top level outline item to the outline.
func (_fdecf *Outline )Add (item *OutlineItem ){_fdecf .Entries =append (_fdecf .Entries ,item )};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_efg *PdfReader )newPdfAnnotationHighlightFromDict (_ecbg *_dc .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_afbd :=PdfAnnotationHighlight {};
_fagc ,_aba :=_efg .newPdfAnnotationMarkupFromDict (_ecbg );if _aba !=nil {return nil ,_aba ;};_afbd .PdfAnnotationMarkup =_fagc ;_afbd .QuadPoints =_ecbg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afbd ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_egdefg *modelManager )GetModelFromPrimitive (primitive _dc .PdfObject )PdfModel {model ,_cefb :=_egdefg ._cedc [primitive ];if !_cefb {return nil ;};return model ;};func (_gfag *Image )samplesAddPadding (_accedc []uint32 )[]uint32 {_caaab :=_ea .BytesPerLine (int (_gfag .Width ),int (_gfag .BitsPerComponent ),_gfag .ColorComponents )*(8/int (_gfag .BitsPerComponent ));
_caabc :=_caaab *int (_gfag .Height );if len (_accedc )==_caabc {return _accedc ;};_egbgb :=make ([]uint32 ,_caabc );_bbbfb :=int (_gfag .Width )*_gfag .ColorComponents ;for _afbfe :=0;_afbfe < int (_gfag .Height );_afbfe ++{_geecb :=_afbfe *int (_gfag .Width );
_egac :=_afbfe *_caaab ;for _ecbcd :=0;_ecbcd < _bbbfb ;_ecbcd ++{_egbgb [_egac +_ecbcd ]=_accedc [_geecb +_ecbcd ];};};return _egbgb ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_deef *PdfPage )SetContentStreams (cStreams []string ,encoder _dc .StreamEncoder )error {if len (cStreams )==0{_deef .Contents =nil ;return nil ;};if encoder ==nil {encoder =_dc .NewRawEncoder ();};var _gcddb []*_dc .PdfObjectStream ;for _ ,_fggc :=range cStreams {_egceb :=&_dc .PdfObjectStream {};
_bfgg :=encoder .MakeStreamDict ();_gcbfe ,_bfaec :=encoder .EncodeBytes ([]byte (_fggc ));if _bfaec !=nil {return _bfaec ;};_bfgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dc .MakeInteger (int64 (len (_gcbfe ))));_egceb .PdfObjectDictionary =_bfgg ;
_egceb .Stream =_gcbfe ;_gcddb =append (_gcddb ,_egceb );};if len (_gcddb )==1{_deef .Contents =_gcddb [0];}else {_gfdea :=_dc .MakeArray ();for _ ,_dffcg :=range _gcddb {_gfdea .Append (_dffcg );};_deef .Contents =_gfdea ;};return nil ;};func _agebb ()string {_bbaae .Lock ();
defer _bbaae .Unlock ();return _cebdga };func _fbbgf (_aefabf *_dc .PdfObjectDictionary )(*PdfShadingType3 ,error ){_bgbbaf :=PdfShadingType3 {};_abcf :=_aefabf .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _abcf ==nil {_bg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_agebf ,_ggce :=_abcf .(*_dc .PdfObjectArray );if !_ggce {_bg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abcf );
return nil ,_dc .ErrTypeError ;};if _agebf .Len ()!=6{_bg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_agebf .Len ());return nil ,ErrInvalidAttribute ;
};_bgbbaf .Coords =_agebf ;if _dcadc :=_aefabf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dcadc !=nil {_dcadc =_dc .TraceToDirectObject (_dcadc );_aeed ,_adgde :=_dcadc .(*_dc .PdfObjectArray );if !_adgde {_bg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcadc );
return nil ,_dc .ErrTypeError ;};_bgbbaf .Domain =_aeed ;};_abcf =_aefabf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _abcf ==nil {_bg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bgbbaf .Function =[]PdfFunction {};if _cdaf ,_aegbgc :=_abcf .(*_dc .PdfObjectArray );_aegbgc {for _ ,_aaabd :=range _cdaf .Elements (){_cgcce ,_bfcac :=_fcace (_aaabd );if _bfcac !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfcac );
return nil ,_bfcac ;};_bgbbaf .Function =append (_bgbbaf .Function ,_cgcce );};}else {_dbegeg ,_ggdb :=_fcace (_abcf );if _ggdb !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggdb );
return nil ,_ggdb ;};_bgbbaf .Function =append (_bgbbaf .Function ,_dbegeg );};if _daaace :=_aefabf .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_daaace !=nil {_daaace =_dc .TraceToDirectObject (_daaace );_ggabf ,_eafce :=_daaace .(*_dc .PdfObjectArray );
if !_eafce {_bg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daaace );return nil ,_dc .ErrTypeError ;};if _ggabf .Len ()!=2{_bg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ggabf .Len ());
return nil ,ErrInvalidAttribute ;};_bgbbaf .Extend =_ggabf ;};return &_bgbbaf ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bfaa *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bfaa .Base ==nil {return nil ,_fd .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bfaa .Base .ColorToRGB (color );};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_ebefd :=appender .Reader .DSS ;if _ebefd ==nil {_ebefd =NewDSS ();};if _fbbcg :=_ebefd .generateHashMaps ();_fbbcg !=nil {return nil ,_fbbcg ;};return &LTV {CertClient :_afg .NewCertClient (),OCSPClient :_afg .NewOCSPClient (),CRLClient :_afg .NewCRLClient (),SkipExisting :true ,_gccc :appender ,_ebabb :_ebefd },nil ;
};

// GetOptimizer returns current PDF optimizer.
func (_bcgga *PdfWriter )GetOptimizer ()Optimizer {return _bcgga ._ggfdc };

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_egccdf PdfModel ;_dbcag _dc .PdfObject ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gbecd *PdfPage )error ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_abcc interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_egcc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cgc :=NewPdfAction ();_cbe :=&PdfActionSubmitForm {};_cbe .PdfAction =_cgc ;_cgc .SetContext (_cbe );return _cbe ;};func (_dgdf *PdfReader )newPdfActionGotoFromDict (_ccaa *_dc .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ccaa .Get ("\u0044")},nil ;
};type modelManager struct{_ggaf map[PdfModel ]_dc .PdfObject ;_cedc map[_dc .PdfObject ]PdfModel ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_dbcaf *LTV )Enable (sig *PdfSignature ,extraCerts []*_dgd .Certificate )error {if _cdae :=_dbcaf .validateSig (sig );_cdae !=nil {return _cdae ;};_afbca ,_debcb :=_dbcaf .generateVRIKey (sig );if _debcb !=nil {return _debcb ;};if _ ,_debec :=_dbcaf ._ebabb .VRI [_afbca ];
_debec &&_dbcaf .SkipExisting {return nil ;};_ebagf ,_debcb :=sig .GetCerts ();if _debcb !=nil {return _debcb ;};return _dbcaf .enable (_ebagf ,extraCerts ,_afbca );};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_aacg :=NewPdfAnnotation ();_cbecc :=&PdfAnnotationCircle {};_cbecc .PdfAnnotation =_aacg ;_cbecc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aacg .SetContext (_cbecc );return _cbecc ;};func (_bcdf *PdfReader )newPdfAnnotationTrapNetFromDict (_debb *_dc .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gbff :=PdfAnnotationTrapNet {};
return &_gbff ,nil ;};func (_fega *PdfReader )newPdfAnnotationRedactFromDict (_bfbdb *_dc .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_affc :=PdfAnnotationRedact {};_dfeb ,_acab :=_fega .newPdfAnnotationMarkupFromDict (_bfbdb );if _acab !=nil {return nil ,_acab ;
};_affc .PdfAnnotationMarkup =_dfeb ;_affc .QuadPoints =_bfbdb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_affc .IC =_bfbdb .Get ("\u0049\u0043");_affc .RO =_bfbdb .Get ("\u0052\u004f");_affc .OverlayText =_bfbdb .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_affc .Repeat =_bfbdb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_affc .DA =_bfbdb .Get ("\u0044\u0041");_affc .Q =_bfbdb .Get ("\u0051");return &_affc ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_ecef *PdfWriter )SetForms (form *PdfAcroForm )error {_ecef ._fbddd =form ;return nil };func _begadb (_aeefe *_dc .PdfObjectDictionary ,_afge *fontCommon )(*pdfCIDFontType2 ,error ){if _afge ._dgdeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_afge );
return nil ,_dc .ErrRangeError ;};_dfdeeg :=_cffbc (_afge );_gdda ,_bggb :=_dc .GetDict (_aeefe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bggb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_afge );
return nil ,ErrRequiredAttributeMissing ;};_dfdeeg .CIDSystemInfo =_gdda ;_dfdeeg .DW =_aeefe .Get ("\u0044\u0057");_dfdeeg .W =_aeefe .Get ("\u0057");_dfdeeg .DW2 =_aeefe .Get ("\u0044\u0057\u0032");_dfdeeg .W2 =_aeefe .Get ("\u0057\u0032");_dfdeeg .CIDToGIDMap =_aeefe .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_dfdeeg ._aefc =1000.0;if _efdf ,_acdg :=_dc .GetNumberAsFloat (_dfdeeg .DW );_acdg ==nil {_dfdeeg ._aefc =_efdf ;};_edbgb ,_ccbgf :=_bgaf (_dfdeeg .W );if _ccbgf !=nil {return nil ,_ccbgf ;};if _edbgb ==nil {_edbgb =map[_fgd .CharCode ]float64 {};};_dfdeeg ._dbcbg =_edbgb ;
return _dfdeeg ,nil ;};var (_bagg =_cd .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_ddbf =_cd .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_cacd =_cd .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_dccg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_adecc ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cbecb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// ToPdfObject implements interface PdfModel.
func (_babd *PdfAnnotationText )ToPdfObject ()_dc .PdfObject {_babd .PdfAnnotation .ToPdfObject ();_abaf :=_babd ._cgcd ;_afef :=_abaf .PdfObject .(*_dc .PdfObjectDictionary );if _babd .PdfAnnotationMarkup !=nil {_babd .PdfAnnotationMarkup .appendToPdfDictionary (_afef );
};_afef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0054\u0065\u0078\u0074"));_afef .SetIfNotNil ("\u004f\u0070\u0065\u006e",_babd .Open );_afef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_babd .Name );_afef .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_babd .State );
_afef .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_babd .StateModel );return _abaf ;};

// ToPdfObject implements interface PdfModel.
func (_afcg *PdfAnnotation3D )ToPdfObject ()_dc .PdfObject {_afcg .PdfAnnotation .ToPdfObject ();_afeff :=_afcg ._cgcd ;_aace :=_afeff .PdfObject .(*_dc .PdfObjectDictionary );_aace .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0033\u0044"));
_aace .SetIfNotNil ("\u0033\u0044\u0044",_afcg .T3DD );_aace .SetIfNotNil ("\u0033\u0044\u0056",_afcg .T3DV );_aace .SetIfNotNil ("\u0033\u0044\u0041",_afcg .T3DA );_aace .SetIfNotNil ("\u0033\u0044\u0049",_afcg .T3DI );_aace .SetIfNotNil ("\u0033\u0044\u0042",_afcg .T3DB );
return _afeff ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_afdage *PdfReader )GetNamedDestinations ()(_dc .PdfObject ,error ){_fggg :=_dc .ResolveReference (_afdage ._bedbcf .Get ("\u004e\u0061\u006de\u0073"));if _fggg ==nil {return nil ,nil ;};if !_afdage ._egfdf {_decc :=_afdage .traverseObjectData (_fggg );
if _decc !=nil {return nil ,_decc ;};};return _fggg ,nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetContainingPdfObject implements interface PdfModel.
func (_aegfc *PdfSignature )GetContainingPdfObject ()_dc .PdfObject {return _aegfc ._acbgc };

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ccg *PdfAnnotation )GetContext ()PdfModel {if _ccg ==nil {return nil ;};return _ccg ._afgc ;};func _fdfb (_gdcg *_dc .PdfObjectDictionary )*VRI {_dcca ,_ :=_dc .GetString (_gdcg .Get ("\u0054\u0055"));_cbg ,_ :=_dc .GetString (_gdcg .Get ("\u0054\u0053"));
return &VRI {Cert :_bgffb (_gdcg .Get ("\u0043\u0065\u0072\u0074")),OCSP :_bgffb (_gdcg .Get ("\u004f\u0043\u0053\u0050")),CRL :_bgffb (_gdcg .Get ("\u0043\u0052\u004c")),TU :_dcca ,TS :_cbg };};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gfdgd *pdfCIDFontType0 )ToPdfObject ()_dc .PdfObject {return _dc .MakeNull ()};func (_bdcb *PdfReader )newPdfAnnotationFromIndirectObject (_bec *_dc .PdfIndirectObject )(*PdfAnnotation ,error ){_aece ,_bgce :=_bec .PdfObject .(*_dc .PdfObjectDictionary );
if !_bgce {return nil ,_a .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bdcb ._abaeb .GetModelFromPrimitive (_aece );model !=nil {_gdd ,_aefd :=model .(*PdfAnnotation );if !_aefd {return nil ,_a .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gdd ,nil ;};_fgaa :=&PdfAnnotation {};_fgaa ._cgcd =_bec ;_bdcb ._abaeb .Register (_aece ,_fgaa );if _cgd :=_aece .Get ("\u0054\u0079\u0070\u0065");_cgd !=nil {_gedg ,_ffad :=_cgd .(*_dc .PdfObjectName );if !_ffad {_bg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cgd );
}else {if *_gedg !="\u0041\u006e\u006eo\u0074"{_bg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gedg );};};};
if _fbfd :=_aece .Get ("\u0052\u0065\u0063\u0074");_fbfd !=nil {_fgaa .Rect =_fbfd ;};if _aeca :=_aece .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_aeca !=nil {_fgaa .Contents =_aeca ;};if _ffada :=_aece .Get ("\u0050");_ffada !=nil {_fgaa .P =_ffada ;
};if _cddc :=_aece .Get ("\u004e\u004d");_cddc !=nil {_fgaa .NM =_cddc ;};if _cfac :=_aece .Get ("\u004d");_cfac !=nil {_fgaa .M =_cfac ;};if _fdge :=_aece .Get ("\u0046");_fdge !=nil {_fgaa .F =_fdge ;};if _dagd :=_aece .Get ("\u0041\u0050");_dagd !=nil {_fgaa .AP =_dagd ;
};if _bbgg :=_aece .Get ("\u0041\u0053");_bbgg !=nil {_fgaa .AS =_bbgg ;};if _fbfa :=_aece .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fbfa !=nil {_fgaa .Border =_fbfa ;};if _ced :=_aece .Get ("\u0043");_ced !=nil {_fgaa .C =_ced ;};if _aff :=_aece .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_aff !=nil {_fgaa .StructParent =_aff ;};if _ddf :=_aece .Get ("\u004f\u0043");_ddf !=nil {_fgaa .OC =_ddf ;};_accb :=_aece .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _accb ==nil {_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_fgaa ._afgc =nil ;return _fgaa ,nil ;};_gee ,_dfb :=_accb .(*_dc .PdfObjectName );if !_dfb {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_accb );
return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_accb );};switch *_gee {case "\u0054\u0065\u0078\u0074":_cdcc ,_eda :=_bdcb .newPdfAnnotationTextFromDict (_aece );
if _eda !=nil {return nil ,_eda ;};_cdcc .PdfAnnotation =_fgaa ;_fgaa ._afgc =_cdcc ;return _fgaa ,nil ;case "\u004c\u0069\u006e\u006b":_dfge ,_gfbb :=_bdcb .newPdfAnnotationLinkFromDict (_aece );if _gfbb !=nil {return nil ,_gfbb ;};_dfge .PdfAnnotation =_fgaa ;
_fgaa ._afgc =_dfge ;return _fgaa ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bfc ,_dfecb :=_bdcb .newPdfAnnotationFreeTextFromDict (_aece );if _dfecb !=nil {return nil ,_dfecb ;};_bfc .PdfAnnotation =_fgaa ;_fgaa ._afgc =_bfc ;return _fgaa ,nil ;
case "\u004c\u0069\u006e\u0065":_ddb ,_gbc :=_bdcb .newPdfAnnotationLineFromDict (_aece );if _gbc !=nil {return nil ,_gbc ;};_ddb .PdfAnnotation =_fgaa ;_fgaa ._afgc =_ddb ;_bg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_fgaa ,_fgaa );
_bg .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_ddb ,_ddb );_bg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_ddb .PdfAnnotationMarkup ,_ddb .PdfAnnotationMarkup );
return _fgaa ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bbfg ,_ggb :=_bdcb .newPdfAnnotationSquareFromDict (_aece );if _ggb !=nil {return nil ,_ggb ;};_bbfg .PdfAnnotation =_fgaa ;_fgaa ._afgc =_bbfg ;return _fgaa ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cbece ,_ddfd :=_bdcb .newPdfAnnotationCircleFromDict (_aece );
if _ddfd !=nil {return nil ,_ddfd ;};_cbece .PdfAnnotation =_fgaa ;_fgaa ._afgc =_cbece ;return _fgaa ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_bgb ,_cbd :=_bdcb .newPdfAnnotationPolygonFromDict (_aece );if _cbd !=nil {return nil ,_cbd ;};_bgb .PdfAnnotation =_fgaa ;
_fgaa ._afgc =_bgb ;return _fgaa ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_dgag ,_bcbd :=_bdcb .newPdfAnnotationPolyLineFromDict (_aece );if _bcbd !=nil {return nil ,_bcbd ;};_dgag .PdfAnnotation =_fgaa ;_fgaa ._afgc =_dgag ;return _fgaa ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_aaag ,_gfba :=_bdcb .newPdfAnnotationHighlightFromDict (_aece );if _gfba !=nil {return nil ,_gfba ;};_aaag .PdfAnnotation =_fgaa ;_fgaa ._afgc =_aaag ;return _fgaa ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gbe ,_ecc :=_bdcb .newPdfAnnotationUnderlineFromDict (_aece );
if _ecc !=nil {return nil ,_ecc ;};_gbe .PdfAnnotation =_fgaa ;_fgaa ._afgc =_gbe ;return _fgaa ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gba ,_ccbc :=_bdcb .newPdfAnnotationSquigglyFromDict (_aece );if _ccbc !=nil {return nil ,_ccbc ;
};_gba .PdfAnnotation =_fgaa ;_fgaa ._afgc =_gba ;return _fgaa ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_gaac ,_daa :=_bdcb .newPdfAnnotationStrikeOut (_aece );if _daa !=nil {return nil ,_daa ;};_gaac .PdfAnnotation =_fgaa ;_fgaa ._afgc =_gaac ;
return _fgaa ,nil ;case "\u0043\u0061\u0072e\u0074":_ecbc ,_bcaf :=_bdcb .newPdfAnnotationCaretFromDict (_aece );if _bcaf !=nil {return nil ,_bcaf ;};_ecbc .PdfAnnotation =_fgaa ;_fgaa ._afgc =_ecbc ;return _fgaa ,nil ;case "\u0053\u0074\u0061m\u0070":_feca ,_eaa :=_bdcb .newPdfAnnotationStampFromDict (_aece );
if _eaa !=nil {return nil ,_eaa ;};_feca .PdfAnnotation =_fgaa ;_fgaa ._afgc =_feca ;return _fgaa ,nil ;case "\u0049\u006e\u006b":_bcbg ,_bae :=_bdcb .newPdfAnnotationInkFromDict (_aece );if _bae !=nil {return nil ,_bae ;};_bcbg .PdfAnnotation =_fgaa ;
_fgaa ._afgc =_bcbg ;return _fgaa ,nil ;case "\u0050\u006f\u0070u\u0070":_fad ,_gfe :=_bdcb .newPdfAnnotationPopupFromDict (_aece );if _gfe !=nil {return nil ,_gfe ;};_fad .PdfAnnotation =_fgaa ;_fgaa ._afgc =_fad ;return _fgaa ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_cfgd ,_feba :=_bdcb .newPdfAnnotationFileAttachmentFromDict (_aece );
if _feba !=nil {return nil ,_feba ;};_cfgd .PdfAnnotation =_fgaa ;_fgaa ._afgc =_cfgd ;return _fgaa ,nil ;case "\u0053\u006f\u0075n\u0064":_gcb ,_ccac :=_bdcb .newPdfAnnotationSoundFromDict (_aece );if _ccac !=nil {return nil ,_ccac ;};_gcb .PdfAnnotation =_fgaa ;
_fgaa ._afgc =_gcb ;return _fgaa ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_fcga ,_ece :=_bdcb .newPdfAnnotationRichMediaFromDict (_aece );if _ece !=nil {return nil ,_ece ;};_fcga .PdfAnnotation =_fgaa ;_fgaa ._afgc =_fcga ;return _fgaa ,nil ;
case "\u004d\u006f\u0076i\u0065":_eebb ,_beb :=_bdcb .newPdfAnnotationMovieFromDict (_aece );if _beb !=nil {return nil ,_beb ;};_eebb .PdfAnnotation =_fgaa ;_fgaa ._afgc =_eebb ;return _fgaa ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ccgc ,_afc :=_bdcb .newPdfAnnotationScreenFromDict (_aece );
if _afc !=nil {return nil ,_afc ;};_ccgc .PdfAnnotation =_fgaa ;_fgaa ._afgc =_ccgc ;return _fgaa ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_agbd ,_eeed :=_bdcb .newPdfAnnotationWidgetFromDict (_aece );if _eeed !=nil {return nil ,_eeed ;};_agbd .PdfAnnotation =_fgaa ;
_fgaa ._afgc =_agbd ;return _fgaa ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_feg ,_afb :=_bdcb .newPdfAnnotationPrinterMarkFromDict (_aece );if _afb !=nil {return nil ,_afb ;};_feg .PdfAnnotation =_fgaa ;_fgaa ._afgc =_feg ;
return _fgaa ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cff ,_dcac :=_bdcb .newPdfAnnotationTrapNetFromDict (_aece );if _dcac !=nil {return nil ,_dcac ;};_cff .PdfAnnotation =_fgaa ;_fgaa ._afgc =_cff ;return _fgaa ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_eag ,_fffd :=_bdcb .newPdfAnnotationWatermarkFromDict (_aece );
if _fffd !=nil {return nil ,_fffd ;};_eag .PdfAnnotation =_fgaa ;_fgaa ._afgc =_eag ;return _fgaa ,nil ;case "\u0033\u0044":_eccg ,_bdab :=_bdcb .newPdfAnnotation3DFromDict (_aece );if _bdab !=nil {return nil ,_bdab ;};_eccg .PdfAnnotation =_fgaa ;_fgaa ._afgc =_eccg ;
return _fgaa ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bbdg ,_ggfe :=_bdcb .newPdfAnnotationProjectionFromDict (_aece );if _ggfe !=nil {return nil ,_ggfe ;};_bbdg .PdfAnnotation =_fgaa ;_fgaa ._afgc =_bbdg ;return _fgaa ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_gcga ,_eac :=_bdcb .newPdfAnnotationRedactFromDict (_aece );if _eac !=nil {return nil ,_eac ;};_gcga .PdfAnnotation =_fgaa ;_fgaa ._afgc =_gcga ;return _fgaa ,nil ;};_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gee );
return nil ,nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_bbaae .Lock ();defer _bbaae .Unlock ();_cebdga =subject };

// Evaluate runs the function on the passed in slice and returns the results.
func (_aded *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bfddag :=[]float64 {0.0};if _aded .C0 !=nil {_bfddag =_aded .C0 ;};_gcbc :=[]float64 {1.0};if _aded .C1 !=nil {_gcbc =_aded .C1 ;};var _gdcff []float64 ;for _bgbab :=0;_bgbab < len (_bfddag );_bgbab ++{_cfefe :=_bfddag [_bgbab ]+_ged .Pow (x [0],_aded .N )*(_gcbc [_bgbab ]-_bfddag [_bgbab ]);
_gdcff =append (_gdcff ,_cfefe );};return _gdcff ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_becbd *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _becbd .Alternate ==nil {_bg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _becbd .N ==1{_bg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ddc :=NewPdfColorspaceDeviceGray ();return _ddc .ImageToRGB (img );}else if _becbd .N ==3{_bg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _becbd .N ==4{_bg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gcgad :=NewPdfColorspaceDeviceCMYK ();return _gcgad .ImageToRGB (img );}else {return img ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_becbd );
_ddfcb ,_gbccd :=_becbd .Alternate .ImageToRGB (img );_bg .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_bg .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ddfcb );
return _ddfcb ,_gbccd ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_abcd *PdfPageResources )GetPatternByName (keyName _dc .PdfObjectName )(*PdfPattern ,bool ){if _abcd .Pattern ==nil {return nil ,false ;};_eaabe ,_eccgb :=_dc .TraceToDirectObject (_abcd .Pattern ).(*_dc .PdfObjectDictionary );if !_eccgb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abcd .Pattern );
return nil ,false ;};if _egeeb :=_eaabe .Get (keyName );_egeeb !=nil {_befbb ,_fcde :=_efacg (_egeeb );if _fcde !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_fcde );
return nil ,false ;};return _befbb ,true ;};return nil ,false ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_aafed *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _dc .GetNumberAsFloat (_aafed .CapHeight );};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_dbee []_dc .PdfObject )([]_dc .PdfObject ,error );};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ToPdfObject returns a PDF object representation of the outline item.
func (_eaddfg *OutlineItem )ToPdfObject ()_dc .PdfObject {_accbf ,_ :=_eaddfg .ToPdfOutlineItem ();return _accbf .ToPdfObject ();};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _dc .PdfObject ;Movie _dc .PdfObject ;A _dc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bde *PdfAnnotationFreeText )ToPdfObject ()_dc .PdfObject {_bde .PdfAnnotation .ToPdfObject ();_ebad :=_bde ._cgcd ;_daff :=_ebad .PdfObject .(*_dc .PdfObjectDictionary );_bde .PdfAnnotationMarkup .appendToPdfDictionary (_daff );_daff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_daff .SetIfNotNil ("\u0044\u0041",_bde .DA );_daff .SetIfNotNil ("\u0051",_bde .Q );_daff .SetIfNotNil ("\u0052\u0043",_bde .RC );_daff .SetIfNotNil ("\u0044\u0053",_bde .DS );_daff .SetIfNotNil ("\u0043\u004c",_bde .CL );_daff .SetIfNotNil ("\u0049\u0054",_bde .IT );
_daff .SetIfNotNil ("\u0042\u0045",_bde .BE );_daff .SetIfNotNil ("\u0052\u0044",_bde .RD );_daff .SetIfNotNil ("\u0042\u0053",_bde .BS );_daff .SetIfNotNil ("\u004c\u0045",_bde .LE );return _ebad ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_beba *PdfAcroForm )ToPdfObject ()_dc .PdfObject {_aabd :=_beba ._feaab ;_fdcc :=_aabd .PdfObject .(*_dc .PdfObjectDictionary );if _beba .Fields !=nil {_ggeff :=_dc .PdfObjectArray {};for _ ,_gaga :=range *_beba .Fields {_fcggd :=_gaga .GetContext ();
if _fcggd !=nil {_ggeff .Append (_fcggd .ToPdfObject ());}else {_ggeff .Append (_gaga .ToPdfObject ());};};_fdcc .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_ggeff );};if _beba .NeedAppearances !=nil {_fdcc .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_beba .NeedAppearances );
};if _beba .SigFlags !=nil {_fdcc .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_beba .SigFlags );};if _beba .CO !=nil {_fdcc .Set ("\u0043\u004f",_beba .CO );};if _beba .DR !=nil {_fdcc .Set ("\u0044\u0052",_beba .DR .ToPdfObject ());};if _beba .DA !=nil {_fdcc .Set ("\u0044\u0041",_beba .DA );
};if _beba .Q !=nil {_fdcc .Set ("\u0051",_beba .Q );};if _beba .XFA !=nil {_fdcc .Set ("\u0058\u0046\u0041",_beba .XFA );};return _aabd ;};func _debbf (_bffbd _dc .PdfObject )(*PdfColorspaceCalGray ,error ){_fefcb :=NewPdfColorspaceCalGray ();if _gfca ,_dbcg :=_bffbd .(*_dc .PdfIndirectObject );
_dbcg {_fefcb ._ebbg =_gfca ;};_bffbd =_dc .TraceToDirectObject (_bffbd );_ggedd ,_aged :=_bffbd .(*_dc .PdfObjectArray );if !_aged {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ggedd .Len ()!=2{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_bffbd =_dc .TraceToDirectObject (_ggedd .Get (0));_aeec ,_aged :=_bffbd .(*_dc .PdfObjectName );if !_aged {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_aeec !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_a .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bffbd =_dc .TraceToDirectObject (_ggedd .Get (1));
_bbbc ,_aged :=_bffbd .(*_dc .PdfObjectDictionary );if !_aged {return nil ,_a .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_bffbd =_bbbc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bffbd =_dc .TraceToDirectObject (_bffbd );_egfe ,_aged :=_bffbd .(*_dc .PdfObjectArray );if !_aged {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _egfe .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_faa ,_daaa :=_egfe .GetAsFloat64Slice ();
if _daaa !=nil {return nil ,_daaa ;};_fefcb .WhitePoint =_faa ;_bffbd =_bbbc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bffbd !=nil {_bffbd =_dc .TraceToDirectObject (_bffbd );_bgfgg ,_bfcb :=_bffbd .(*_dc .PdfObjectArray );
if !_bfcb {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _bgfgg .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_eebed ,_ffde :=_bgfgg .GetAsFloat64Slice ();if _ffde !=nil {return nil ,_ffde ;};_fefcb .BlackPoint =_eebed ;};_bffbd =_bbbc .Get ("\u0047\u0061\u006dm\u0061");if _bffbd !=nil {_bffbd =_dc .TraceToDirectObject (_bffbd );_edfa ,_fcbgd :=_dc .GetNumberAsFloat (_bffbd );
if _fcbgd !=nil {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fefcb .Gamma =_edfa ;};return _fefcb ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_eefd *PdfAnnotationSquiggly )ToPdfObject ()_dc .PdfObject {_eefd .PdfAnnotation .ToPdfObject ();_cged :=_eefd ._cgcd ;_bbcce :=_cged .PdfObject .(*_dc .PdfObjectDictionary );_eefd .PdfAnnotationMarkup .appendToPdfDictionary (_bbcce );_bbcce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_bbcce .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eefd .QuadPoints );return _cged ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gdcd *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aagfb ,_agga :=_dc .GetNumbersAsFloat (objects );
if _agga !=nil {return nil ,_agga ;};return _gdcd .ColorFromFloats (_aagfb );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_adec ,_daedd :=NewStandard14Font (basefont );if _daedd !=nil {panic (_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _adec ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject implements interface PdfModel.
func (_cdgg *PdfBorderStyle )ToPdfObject ()_dc .PdfObject {_bfg :=_dc .MakeDict ();if _cdgg ._ddgb !=nil {if _fbde ,_ccag :=_cdgg ._ddgb .(*_dc .PdfIndirectObject );_ccag {_fbde .PdfObject =_bfg ;};};_bfg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _cdgg .W !=nil {_bfg .Set ("\u0057",_dc .MakeFloat (*_cdgg .W ));};if _cdgg .S !=nil {_bfg .Set ("\u0053",_dc .MakeName (_cdgg .S .GetPdfName ()));};if _cdgg .D !=nil {_bfg .Set ("\u0044",_dc .MakeArrayFromIntegers (*_cdgg .D ));};if _cdgg ._ddgb !=nil {return _cdgg ._ddgb ;
};return _bfg ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_bgaga []byte )(_eegcd int ,_accaf error );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gggg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _ggff (_egccc *_ea .ImageBase )(_gaea Image ){_gaea .Width =int64 (_egccc .Width );_gaea .Height =int64 (_egccc .Height );_gaea .BitsPerComponent =int64 (_egccc .BitsPerComponent );
_gaea .ColorComponents =_egccc .ColorComponents ;_gaea .Data =_egccc .Data ;_gaea ._bbde =_egccc .Decode ;_gaea ._cecag =_egccc .Alpha ;return _gaea ;};

// GetNumComponents returns the number of color components.
func (_eefgd *PdfColorspaceICCBased )GetNumComponents ()int {return _eefgd .N };

// ToPdfObject implements interface PdfModel.
func (_gfa *PdfAnnotationMovie )ToPdfObject ()_dc .PdfObject {_gfa .PdfAnnotation .ToPdfObject ();_fceb :=_gfa ._cgcd ;_gbef :=_fceb .PdfObject .(*_dc .PdfObjectDictionary );_gbef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u004d\u006f\u0076i\u0065"));
_gbef .SetIfNotNil ("\u0054",_gfa .T );_gbef .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_gfa .Movie );_gbef .SetIfNotNil ("\u0041",_gfa .A );return _fceb ;};

// ToPdfObject implements interface PdfModel.
func (_efac *PdfActionNamed )ToPdfObject ()_dc .PdfObject {_efac .PdfAction .ToPdfObject ();_deg :=_efac ._be ;_dfe :=_deg .PdfObject .(*_dc .PdfObjectDictionary );_dfe .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeNamed )));_dfe .SetIfNotNil ("\u004e",_efac .N );
return _deg ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dccdd :=&PdfOutline {_cfdeb :_dc .MakeIndirectObject (_dc .MakeDict ())};_dccdd ._abcc =_dccdd ;return _dccdd ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fgagg _fa .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_ggdcg _af .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dbfe _af .Image )(*Image ,error );

// Compress an image.
Compress (_gdcb *Image ,_bgda int64 )(*Image ,error );};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bbea *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_gbeg *PdfAnnotationPopup )ToPdfObject ()_dc .PdfObject {_gbeg .PdfAnnotation .ToPdfObject ();_cgca :=_gbeg ._cgcd ;_aaea :=_cgca .PdfObject .(*_dc .PdfObjectDictionary );_aaea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0050\u006f\u0070u\u0070"));
_aaea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbeg .Parent );_aaea .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gbeg .Open );return _cgca ;};

// String returns a string that describes `font`.
func (_ddffa *PdfFont )String ()string {_eecb :="";if _ddffa ._efeg .Encoder ()!=nil {_eecb =_ddffa ._efeg .Encoder ().String ();};return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ddffa ._efeg ,_ddffa .baseFields ().coreString (),_eecb );
};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_agad *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_bfcec *PdfWriter )addObject (_dbacd _dc .PdfObject )bool {_cdbcg :=_bfcec .hasObject (_dbacd );if !_cdbcg {_cbcb :=_dc .ResolveReferencesDeep (_dbacd ,_bfcec ._gbdcc );
if _cbcb !=nil {_bg .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_cbcb );};_bfcec ._edfca =append (_bfcec ._edfca ,_dbacd );_bfcec ._bgadg [_dbacd ]=struct{}{};return true ;};return false ;
};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_caac :=NewPdfAnnotation ();_bbe :=&PdfAnnotationLine {};_bbe .PdfAnnotation =_caac ;_bbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_caac .SetContext (_bbe );return _bbe ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_fefac ,_acbf :=_eb .NewStdFontByName (HelveticaName );if !_acbf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_eaeg :=_bcbae (_fefac );return &PdfFont {_efeg :&_eaeg };};func (_badfd *PdfFont )baseFields ()*fontCommon {if _badfd ._efeg ==nil {_bg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _badfd ._efeg .baseFields ();};func _dedf (_gfgcc *PdfField ,_dadfg _dc .PdfObject ){for _ ,_fedbf :=range _gfgcc .Annotations {_fedbf .AS =_dadfg ;_fedbf .ToPdfObject ();};};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_addf :_dc .MakeIndirectObject (_dc .MakeDict ()),VRI :map[string ]*VRI {}};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bgcg *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcf :=vals [0];if _dcf < 0.0||_dcf > 1.0{_bg .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _dcf < 0.0{_dcf =0.0;}else if _dcf > 1.0{_dcf =1.0;};return NewPdfColorDeviceGray (_dcf ),nil ;};func (_bccg PdfFont )actualFont ()pdfFont {if _bccg ._efeg ==nil {_bg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bccg );
};return _bccg ._efeg ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_afgda *PdfPage )GetAllContentStreams ()(string ,error ){_eeaf ,_daaad :=_afgda .GetContentStreams ();if _daaad !=nil {return "",_daaad ;};return _db .Join (_eeaf ,"\u0020"),nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_agcdd *PdfShadingType3 )ToPdfObject ()_dc .PdfObject {_agcdd .PdfShading .ToPdfObject ();_cgfag ,_febcd :=_agcdd .getShadingDict ();if _febcd !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _agcdd .Coords !=nil {_cgfag .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_agcdd .Coords );};if _agcdd .Domain !=nil {_cgfag .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_agcdd .Domain );};if _agcdd .Function !=nil {if len (_agcdd .Function )==1{_cgfag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agcdd .Function [0].ToPdfObject ());
}else {_dede :=_dc .MakeArray ();for _ ,_fdgfa :=range _agcdd .Function {_dede .Append (_fdgfa .ToPdfObject ());};_cgfag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dede );};};if _agcdd .Extend !=nil {_cgfag .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_agcdd .Extend );
};return _agcdd ._adbfg ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fddb pdfFontType0 )GetCharMetrics (code _fgd .CharCode )(_eb .CharMetrics ,bool ){if _fddb .DescendantFont ==nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fddb );
return _eb .CharMetrics {},false ;};return _fddb .DescendantFont .GetCharMetrics (code );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fedfb *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fedfb .NumInputs {_bg .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fedfb ._bgcdbe ==nil {_caaag :=_fedfb .processSamples ();if _caaag !=nil {return nil ,_caaag ;};};_dadd :=_fedfb .Encode ;if _dadd ==nil {_dadd =[]float64 {};
for _agef :=0;_agef < len (_fedfb .Size );_agef ++{_dadd =append (_dadd ,0);_dadd =append (_dadd ,float64 (_fedfb .Size [_agef ]-1));};};_abgce :=_fedfb .Decode ;if _abgce ==nil {_abgce =_fedfb .Range ;};_bdfdg :=make ([]int ,len (x ));for _adgc :=0;_adgc < len (x );
_adgc ++{_acgd :=x [_adgc ];_agbgb :=_ged .Min (_ged .Max (_acgd ,_fedfb .Domain [2*_adgc ]),_fedfb .Domain [2*_adgc +1]);_bebg :=_ea .LinearInterpolate (_agbgb ,_fedfb .Domain [2*_adgc ],_fedfb .Domain [2*_adgc +1],_dadd [2*_adgc ],_dadd [2*_adgc +1]);
_edfdc :=_ged .Min (_ged .Max (_bebg ,0),float64 (_fedfb .Size [_adgc ]-1));_bgca :=int (_ged .Floor (_edfdc +0.5));if _bgca < 0{_bgca =0;}else if _bgca > _fedfb .Size [_adgc ]{_bgca =_fedfb .Size [_adgc ]-1;};_bdfdg [_adgc ]=_bgca ;};_gfbg :=_bdfdg [0];
for _ebaac :=1;_ebaac < _fedfb .NumInputs ;_ebaac ++{_aefab :=_bdfdg [_ebaac ];for _bgdf :=0;_bgdf < _ebaac ;_bgdf ++{_aefab *=_fedfb .Size [_bgdf ];};_gfbg +=_aefab ;};_gfbg *=_fedfb .NumOutputs ;var _afabd []float64 ;for _gcgdf :=0;_gcgdf < _fedfb .NumOutputs ;
_gcgdf ++{_afdag :=_gfbg +_gcgdf ;if _afdag >=len (_fedfb ._bgcdbe ){_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_bdeae :=_fedfb ._bgcdbe [_afdag ];_gddda :=_ea .LinearInterpolate (float64 (_bdeae ),0,_ged .Pow (2,float64 (_fedfb .BitsPerSample )),_abgce [2*_gcgdf ],_abgce [2*_gcgdf +1]);_egccd :=_ged .Min (_ged .Max (_gddda ,_fedfb .Range [2*_gcgdf ]),_fedfb .Range [2*_gcgdf +1]);
_afabd =append (_afabd ,_egccd );};return _afabd ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_ggece *PdfOutlineItem )GetContainingPdfObject ()_dc .PdfObject {return _ggece ._gagf };

// IsEncrypted returns true if the PDF file is encrypted.
func (_ffbgb *PdfReader )IsEncrypted ()(bool ,error ){return _ffbgb ._ecead .IsEncrypted ()};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _dc .PdfObject ;IC _dc .PdfObject ;BE _dc .PdfObject ;RD _dc .PdfObject ;};type pdfCIDFontType0 struct{fontCommon ;_edaa *_dc .PdfIndirectObject ;_ffccb _fgd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_dc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _dc .PdfObject ;W _dc .PdfObject ;DW2 _dc .PdfObject ;W2 _dc .PdfObject ;_fdag map[_fgd .CharCode ]float64 ;_eddac float64 ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_aa :=NewPdfAction ();_cdg :=&PdfActionRendition {};_cdg .PdfAction =_aa ;_aa .SetContext (_cdg );return _cdg ;};func (_addc *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _eaac :=_addc ._dffc ;
_eaac !=nil {return _eaac ;};return _addc ._bgbba ;};func (_bcec *PdfReader )newPdfActionRenditionFromDict (_dfec *_dc .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dfec .Get ("\u0052"),AN :_dfec .Get ("\u0041\u004e"),OP :_dfec .Get ("\u004f\u0050"),JS :_dfec .Get ("\u004a\u0053")},nil ;
};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_abbag *PdfReader )GetPageLabels ()(_dc .PdfObject ,error ){_bccff :=_dc .ResolveReference (_abbag ._bedbcf .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bccff ==nil {return nil ,nil ;};if !_abbag ._egfdf {_fgfga :=_abbag .traverseObjectData (_bccff );
if _fgfga !=nil {return nil ,_fgfga ;};};return _bccff ,nil ;};func _ffbg (_gded []byte )(_ddad ,_aaga string ,_ffgbc error ){_bg .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gded ));
_eecag :=_bagg .FindIndex (_gded );if _eecag ==nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_dc .ErrTypeError ;};_abafd :=_eecag [1];_bbaf :=_db .Index (string (_gded [_abafd :]),_dccg );if _bbaf < 0{_ddad =string (_gded [_abafd :]);return _ddad ,"",nil ;};_gaaf :=_abafd +_bbaf ;_ddad =string (_gded [_abafd :_gaaf ]);_geeda :=_gaaf ;
_bbaf =_db .Index (string (_gded [_geeda :]),_adecc );if _bbaf < 0{_bg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffgbc );
return "","",_dc .ErrTypeError ;};_bdba :=_geeda +_bbaf ;_aaga =string (_gded [_geeda :_bdba ]);return _ddad ,_aaga ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_fbbeb *PdfDate )ToPdfObject ()_dc .PdfObject {_addbe :=_a .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fbbeb ._geaba ,_fbbeb ._edade ,_fbbeb ._eabcf ,_fbbeb ._bccge ,_fbbeb ._cbade ,_fbbeb ._eggc ,_fbbeb ._gagd ,_fbbeb ._fbcec ,_fbbeb ._deeab );
return _dc .MakeString (_addbe );};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_febc *PdfAnnotationMarkup )appendToPdfDictionary (_ebee *_dc .PdfObjectDictionary ){_ebee .SetIfNotNil ("\u0054",_febc .T );
if _febc .Popup !=nil {_ebee .Set ("\u0050\u006f\u0070u\u0070",_febc .Popup .ToPdfObject ());};_ebee .SetIfNotNil ("\u0043\u0041",_febc .CA );_ebee .SetIfNotNil ("\u0052\u0043",_febc .RC );_ebee .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_febc .CreationDate );
_ebee .SetIfNotNil ("\u0049\u0052\u0054",_febc .IRT );_ebee .SetIfNotNil ("\u0053\u0075\u0062\u006a",_febc .Subj );_ebee .SetIfNotNil ("\u0052\u0054",_febc .RT );_ebee .SetIfNotNil ("\u0049\u0054",_febc .IT );_ebee .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_febc .ExData );
};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_efgec *PdfFont )CharcodesToStrings (charcodes []_fgd .CharCode )([]string ,int ,int ){_cabec :=_efgec .baseFields ();_bcgfa :=make ([]string ,0,len (charcodes ));_fcge :=0;_dbad :=_efgec .Encoder ();if _dbad !=nil {switch _dfgc :=_dbad .(type ){case _fgd .SimpleEncoder :_gcgc :=_dfgc .BaseName ();
if _ ,_febgb :=_edfc [_gcgc ];_febgb {for _ ,_dabd :=range charcodes {if _cdgbf ,_fdeg :=_dbad .CharcodeToRune (_dabd );_fdeg {_bcgfa =append (_bcgfa ,string (_cdgbf ));}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dabd ,charcodes ,_cabec .isCIDFont (),_efgec ,_dbad );
_fcge ++;_bcgfa =append (_bcgfa ,_bd .MissingCodeString );};};return _bcgfa ,len (_bcgfa ),_fcge ;};};};for _ ,_dffb :=range charcodes {if _cabec ._dcgae !=nil {if _cdad ,_dddf :=_cabec ._dcgae .CharcodeToUnicode (_bd .CharCode (_dffb ));_dddf {_bcgfa =append (_bcgfa ,_cdad );
continue ;};};if _dbad !=nil {if _dgegd ,_ggeac :=_dbad .CharcodeToRune (_dffb );_ggeac {_bcgfa =append (_bcgfa ,string (_dgegd ));continue ;};};_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dffb ,charcodes ,_cabec .isCIDFont (),_efgec ,_dbad );
_fcge ++;_bcgfa =append (_bcgfa ,_bd .MissingCodeString );};if _fcge !=0{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fcge ,_efgec );
};return _bcgfa ,len (_bcgfa ),_fcge ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_feaab :_dc .MakeIndirectObject (_dc .MakeDict ())};};func _gadf (_cfff *_dc .PdfObjectDictionary ,_cebg *fontCommon ,_bgcdd _fgd .TextEncoder )(*pdfFontSimple ,error ){_fcfb :=_dggde (_cebg );
_fcfb ._dcbbb =_bgcdd ;if _bgcdd ==nil {_bagb :=_cfff .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bagb ==nil {_bagb =_dc .MakeInteger (0);};_fcfb .FirstChar =_bagb ;_aege ,_cebc :=_dc .GetIntVal (_bagb );if !_cebc {_bg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bagb );
return nil ,_dc .ErrTypeError ;};_gdcgb :=_fgd .CharCode (_aege );_bagb =_cfff .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bagb ==nil {_bagb =_dc .MakeInteger (255);};_fcfb .LastChar =_bagb ;_aege ,_cebc =_dc .GetIntVal (_bagb );if !_cebc {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bagb );
return nil ,_dc .ErrTypeError ;};_abbe :=_fgd .CharCode (_aege );_fcfb ._dbaad =make (map[_fgd .CharCode ]float64 );_bagb =_cfff .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bagb !=nil {_fcfb .Widths =_bagb ;_dgeec ,_cabdg :=_dc .GetArray (_bagb );
if !_cabdg {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bagb );return nil ,_dc .ErrTypeError ;
};_fegae ,_cfbfd :=_dgeec .ToFloat64Array ();if _cfbfd !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cfbfd ;};if len (_fegae )!=int (_abbe -_gdcgb +1){_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_abbe -_gdcgb +1,len (_fegae ));
return nil ,_dc .ErrRangeError ;};for _ddcda ,_eaad :=range _fegae {_fcfb ._dbaad [_gdcgb +_fgd .CharCode (_ddcda )]=_eaad ;};};};_fcfb .Encoding =_dc .TraceToDirectObject (_cfff .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _fcfb ,nil ;
};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_bgfc :=&PdfColorspaceCalRGB {};_bgfc .BlackPoint =[]float64 {0.0,0.0,0.0};_bgfc .Gamma =[]float64 {1.0,1.0,1.0};_bgfc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _bgfc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fddbe pdfCIDFontType0 )GetCharMetrics (code _fgd .CharCode )(_eb .CharMetrics ,bool ){_gafb :=_fddbe ._eddac ;if _ebcec ,_ddeaa :=_fddbe ._fdag [code ];_ddeaa {_gafb =_ebcec ;};return _eb .CharMetrics {Wx :_gafb },true ;};func _gege (_dfaaaf _dc .PdfObject ,_ggac *fontCommon )(*_bd .CMap ,error ){_cabd ,_fcce :=_dc .GetStream (_dfaaaf );
if !_fcce {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_dfaaaf );
return nil ,_dc .ErrTypeError ;};_cbfe ,_daeag :=_dc .DecodeStream (_cabd );if _daeag !=nil {return nil ,_daeag ;};_dfedc ,_daeag :=_bd .LoadCmapFromData (_cbfe ,!_ggac .isCIDFont ());if _daeag !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_cabd .ObjectNumber ,_daeag );
};return _dfedc ,_daeag ;};

// ToPdfObject returns the PDF representation of the function.
func (_aaddd *PdfFunctionType0 )ToPdfObject ()_dc .PdfObject {if _aaddd ._fcbgc ==nil {_aaddd ._fcbgc =&_dc .PdfObjectStream {};};_gaef :=_dc .MakeDict ();_gaef .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dc .MakeInteger (0));
_fbadc :=&_dc .PdfObjectArray {};for _ ,_cccfa :=range _aaddd .Domain {_fbadc .Append (_dc .MakeFloat (_cccfa ));};_gaef .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbadc );_cccgc :=&_dc .PdfObjectArray {};for _ ,_dddfa :=range _aaddd .Range {_cccgc .Append (_dc .MakeFloat (_dddfa ));
};_gaef .Set ("\u0052\u0061\u006eg\u0065",_cccgc );_bgad :=&_dc .PdfObjectArray {};for _ ,_fgcd :=range _aaddd .Size {_bgad .Append (_dc .MakeInteger (int64 (_fgcd )));};_gaef .Set ("\u0053\u0069\u007a\u0065",_bgad );_gaef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_dc .MakeInteger (int64 (_aaddd .BitsPerSample )));
if _aaddd .Order !=1{_gaef .Set ("\u004f\u0072\u0064e\u0072",_dc .MakeInteger (int64 (_aaddd .Order )));};_gaef .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dc .MakeInteger (int64 (len (_aaddd ._deeed ))));_aaddd ._fcbgc .Stream =_aaddd ._deeed ;_aaddd ._fcbgc .PdfObjectDictionary =_gaef ;
return _aaddd ._fcbgc ;};

// AddImageResource adds an image to the XObject resources.
func (_degca *PdfPage )AddImageResource (name _dc .PdfObjectName ,ximg *XObjectImage )error {var _bbfag *_dc .PdfObjectDictionary ;if _degca .Resources .XObject ==nil {_bbfag =_dc .MakeDict ();_degca .Resources .XObject =_bbfag ;}else {var _faab bool ;
_bbfag ,_faab =(_degca .Resources .XObject ).(*_dc .PdfObjectDictionary );if !_faab {return _fd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bbfag .Set (name ,ximg .ToPdfObject ());
return nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gdacf *Image )GetSamples ()[]uint32 {_ffdeg :=_gab .ResampleBytes (_gdacf .Data ,int (_gdacf .BitsPerComponent ));if _gdacf .BitsPerComponent < 8{_ffdeg =_gdacf .samplesTrimPadding (_ffdeg );};_bafdc :=int (_gdacf .Width )*int (_gdacf .Height )*_gdacf .ColorComponents ;
if len (_ffdeg )< _bafdc {_bg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ffdeg ),_bafdc );
return _ffdeg ;}else if len (_ffdeg )> _bafdc {_bg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ffdeg ),_bafdc );
_ffdeg =_ffdeg [:_bafdc ];};return _ffdeg ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_addg ,_acdf :=_acedg (basefont );if _acdf !=nil {return nil ,_acdf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_addg ._geecg =_fgd .NewWinAnsiEncoder ();};return &PdfFont {_efeg :&_addg },nil ;
};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// AddExtGState adds a graphics state to the XObject resources.
func (_bfbga *PdfPage )AddExtGState (name _dc .PdfObjectName ,egs *_dc .PdfObjectDictionary )error {if _bfbga .Resources ==nil {_bfbga .Resources =NewPdfPageResources ();};if _bfbga .Resources .ExtGState ==nil {_bfbga .Resources .ExtGState =_dc .MakeDict ();
};_geef ,_gffab :=_dc .TraceToDirectObject (_bfbga .Resources .ExtGState ).(*_dc .PdfObjectDictionary );if !_gffab {_bg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_dc .TraceToDirectObject (_bfbga .Resources .ExtGState ));
return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_geef .Set (name ,egs );return nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bagd *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dcfe ,_bcgd :=color .(*PdfColorCalRGB );if !_bcgd {_bg .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aefdc :=_dcfe .A ();_bdff :=_dcfe .B ();_eagf :=_dcfe .C ();X :=_bagd .Matrix [0]*_ged .Pow (_aefdc ,_bagd .Gamma [0])+_bagd .Matrix [3]*_ged .Pow (_bdff ,_bagd .Gamma [1])+_bagd .Matrix [6]*_ged .Pow (_eagf ,_bagd .Gamma [2]);
Y :=_bagd .Matrix [1]*_ged .Pow (_aefdc ,_bagd .Gamma [0])+_bagd .Matrix [4]*_ged .Pow (_bdff ,_bagd .Gamma [1])+_bagd .Matrix [7]*_ged .Pow (_eagf ,_bagd .Gamma [2]);Z :=_bagd .Matrix [2]*_ged .Pow (_aefdc ,_bagd .Gamma [0])+_bagd .Matrix [5]*_ged .Pow (_bdff ,_bagd .Gamma [1])+_bagd .Matrix [8]*_ged .Pow (_eagf ,_bagd .Gamma [2]);
_faca :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bddf :=-0.969256*X +1.875992*Y +0.041556*Z ;_bga :=0.055648*X +-0.204043*Y +1.057311*Z ;_faca =_ged .Min (_ged .Max (_faca ,0),1.0);_bddf =_ged .Min (_ged .Max (_bddf ,0),1.0);_bga =_ged .Min (_ged .Max (_bga ,0),1.0);
return NewPdfColorDeviceRGB (_faca ,_bddf ,_bga ),nil ;};func (_baebbc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _baebbc ._ecead .GetCrypter ()!=nil &&!_baebbc ._ecead .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_agfdfg :=_baebbc ._bedbcf ;_eafgf :=_agfdfg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _eafgf ==nil {return nil ,nil ;};_dceee ,_ :=_dc .GetIndirect (_eafgf );_eafgf =_dc .TraceToDirectObject (_eafgf );if _dc .IsNullObject (_eafgf ){_bg .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bdedb ,_ggfdf :=_dc .GetDict (_eafgf );if !_ggfdf {_bg .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eafgf );_bg .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eafgf );};_bg .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_bg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_baebbc ._egfdf {_bcbaf :=_baebbc .traverseObjectData (_bdedb );
if _bcbaf !=nil {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_bcbaf );
return nil ,_bcbaf ;};};_faefce ,_eegedf :=_baebbc .newPdfAcroFormFromDict (_dceee ,_bdedb );if _eegedf !=nil {return nil ,_eegedf ;};return _faefce ,nil ;};

// HasFontByName checks if has font resource by name.
func (_dgfc *PdfPage )HasFontByName (name _dc .PdfObjectName )bool {_ccbgd ,_bfbgd :=_dgfc .Resources .Font .(*_dc .PdfObjectDictionary );if !_bfbgd {return false ;};if _gadba :=_ccbgd .Get (name );_gadba !=nil {return true ;};return false ;};func (_agfbd *fontFile )loadFromSegments (_cfbba ,_gffd []byte )error {_bg .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cfbba ),len (_gffd ));
_dfadg :=_agfbd .parseASCIIPart (_cfbba );if _dfadg !=nil {return _dfadg ;};_bg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agfbd );if len (_gffd )==0{return nil ;};_bg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agfbd );
return nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_ffge *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacg :=vals [0];if _cacg < 0.0||_cacg > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ebbff :=vals [1];if _ebbff < 0.0||_ebbff > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbbd :=vals [2];if _bbbd < 0.0||_bbbd > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cdbe :=vals [3];if _cdbe < 0.0||_cdbe > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffag :=NewPdfColorDeviceCMYK (_cacg ,_ebbff ,_bbbd ,_cdbe );return _ffag ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _dc .StreamEncoder ;FormType _dc .PdfObject ;BBox _dc .PdfObject ;Matrix _dc .PdfObject ;Resources *PdfPageResources ;Group _dc .PdfObject ;Ref _dc .PdfObject ;MetaData _dc .PdfObject ;PieceInfo _dc .PdfObject ;LastModified _dc .PdfObject ;
StructParent _dc .PdfObject ;StructParents _dc .PdfObject ;OPI _dc .PdfObject ;OC _dc .PdfObject ;Name _dc .PdfObject ;

// Stream data.
Stream []byte ;_dgfed *_dc .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_dfd *PdfAnnotationPolyLine )ToPdfObject ()_dc .PdfObject {_dfd .PdfAnnotation .ToPdfObject ();_eeg :=_dfd ._cgcd ;_daea :=_eeg .PdfObject .(*_dc .PdfObjectDictionary );_dfd .PdfAnnotationMarkup .appendToPdfDictionary (_daea );_daea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_daea .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dfd .Vertices );_daea .SetIfNotNil ("\u004c\u0045",_dfd .LE );_daea .SetIfNotNil ("\u0042\u0053",_dfd .BS );_daea .SetIfNotNil ("\u0049\u0043",_dfd .IC );_daea .SetIfNotNil ("\u0042\u0045",_dfd .BE );
_daea .SetIfNotNil ("\u0049\u0054",_dfd .IT );_daea .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dfd .Measure );return _eeg ;};func (_ecgg *PdfReader )newPdfAnnotationPolyLineFromDict (_cbdf *_dc .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_eacd :=PdfAnnotationPolyLine {};
_bdd ,_ffca :=_ecgg .newPdfAnnotationMarkupFromDict (_cbdf );if _ffca !=nil {return nil ,_ffca ;};_eacd .PdfAnnotationMarkup =_bdd ;_eacd .Vertices =_cbdf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_eacd .LE =_cbdf .Get ("\u004c\u0045");
_eacd .BS =_cbdf .Get ("\u0042\u0053");_eacd .IC =_cbdf .Get ("\u0049\u0043");_eacd .BE =_cbdf .Get ("\u0042\u0045");_eacd .IT =_cbdf .Get ("\u0049\u0054");_eacd .Measure =_cbdf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_eacd ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_eee :=NewPdfAction ();_gae :=&PdfActionImportData {};_gae .PdfAction =_eee ;_eee .SetContext (_gae );return _gae ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _dc .PdfObjectArray )(*PdfRectangle ,error ){_facf :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _bcgabd error ;_facf .Llx ,_bcgabd =_dc .GetNumberAsFloat (arr .Get (0));if _bcgabd !=nil {return nil ,_bcgabd ;};_facf .Lly ,_bcgabd =_dc .GetNumberAsFloat (arr .Get (1));if _bcgabd !=nil {return nil ,_bcgabd ;};_facf .Urx ,_bcgabd =_dc .GetNumberAsFloat (arr .Get (2));
if _bcgabd !=nil {return nil ,_bcgabd ;};_facf .Ury ,_bcgabd =_dc .GetNumberAsFloat (arr .Get (3));if _bcgabd !=nil {return nil ,_bcgabd ;};return &_facf ,nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_badf *PdfColorspaceLab )DecodeArray ()[]float64 {_fbddc :=[]float64 {0,100};if _badf .Range !=nil &&len (_badf .Range )==4{_fbddc =append (_fbddc ,_badf .Range ...);}else {_fbddc =append (_fbddc ,-100,100,-100,100);};return _fbddc ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _dc .PdfObject ;BS _dc .PdfObject ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_defg *PdfReader )GetIndirectObjectByNumber (number int )(_dc .PdfObject ,error ){_bgbbf ,_eceec :=_defg ._ecead .LookupByNumber (number );return _bgbbf ,_eceec ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_cgbe *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_dcfg ,_ ,_eadf :=_cgbe .CharcodesToUnicodeWithStats (_cgbe .BytesToCharcodes (data ));_geba :=_fgd .ExpandLigatures (_dcfg );return _geba ,_ccf .RuneCountInString (_geba ),_eadf ;
};func (_dfbg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_cafc *_dc .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_baf :=PdfAnnotationPrinterMark {};_baf .MN =_cafc .Get ("\u004d\u004e");return &_baf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dcecb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dggd :=vals [0];if _dggd < 0.0||_dggd > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_egcee :=NewPdfColorCalGray (_dggd );return _egcee ,nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_dc .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_dc .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_dc .PdfObjectBool ;_gggge PdfModel ;_adbfg _dc .PdfObject ;};func (_dbebf *PdfWriter )addObjects (_dagbg _dc .PdfObject )error {_bg .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _fbaef ,_cdcea :=_dagbg .(*_dc .PdfIndirectObject );_cdcea {_bg .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_bg .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_dagbg ,_fbaef );_bg .Log .Trace ("\u002d\u0020\u0025\u0073",_fbaef .PdfObject );
if _dbebf .addObject (_fbaef ){_ffffc :=_dbebf .addObjects (_fbaef .PdfObject );if _ffffc !=nil {return _ffffc ;};};return nil ;};if _cgcdb ,_fbcbef :=_dagbg .(*_dc .PdfObjectStream );_fbcbef {_bg .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_bg .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_dagbg ,_dagbg );
if _dbebf .addObject (_cgcdb ){_gfbaa :=_dbebf .addObjects (_cgcdb .PdfObjectDictionary );if _gfbaa !=nil {return _gfbaa ;};};return nil ;};if _cegbc ,_cabdgd :=_dagbg .(*_dc .PdfObjectDictionary );_cabdgd {_bg .Log .Trace ("\u0044\u0069\u0063\u0074");
_bg .Log .Trace ("\u002d\u0020\u0025\u0073",_dagbg );for _ ,_ebec :=range _cegbc .Keys (){_ecfaa :=_cegbc .Get (_ebec );if _efdba ,_cfaed :=_ecfaa .(*_dc .PdfObjectReference );_cfaed {_ecfaa =_efdba .Resolve ();_cegbc .Set (_ebec ,_ecfaa );};if _ebec !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bbfec :=_dbebf .addObjects (_ecfaa );
_bbfec !=nil {return _bbfec ;};}else {if _ ,_afde :=_ecfaa .(*_dc .PdfObjectNull );_afde {continue ;};if _fdfgc :=_dbebf .hasObject (_ecfaa );!_fdfgc {_bg .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ecfaa ,_ecfaa ,_ecfaa );
_dbebf ._ebcdd [_ecfaa ]=append (_dbebf ._ebcdd [_ecfaa ],_cegbc );};};};return nil ;};if _ccdea ,_gbace :=_dagbg .(*_dc .PdfObjectArray );_gbace {_bg .Log .Trace ("\u0041\u0072\u0072a\u0079");_bg .Log .Trace ("\u002d\u0020\u0025\u0073",_dagbg );if _ccdea ==nil {return _fd .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _aeggf ,_bdbdeb :=range _ccdea .Elements (){if _dgba ,_affag :=_bdbdeb .(*_dc .PdfObjectReference );_affag {_bdbdeb =_dgba .Resolve ();_ccdea .Set (_aeggf ,_bdbdeb );};if _fafg :=_dbebf .addObjects (_bdbdeb );_fafg !=nil {return _fafg ;};};return nil ;
};if _ ,_cdfc :=_dagbg .(*_dc .PdfObjectReference );_cdfc {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_dagbg );
return _fd .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func (_cbc *PdfReader )newPdfActionSoundFromDict (_acg *_dc .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_acg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_acg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_acg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_acg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_acg .Get ("\u004d\u0069\u0078")},nil ;
};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acdae *PdfShadingType2 )ToPdfObject ()_dc .PdfObject {_acdae .PdfShading .ToPdfObject ();_ccfece ,_caage :=_acdae .getShadingDict ();if _caage !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ccfece ==nil {_bg .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _acdae .Coords !=nil {_ccfece .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_acdae .Coords );
};if _acdae .Domain !=nil {_ccfece .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acdae .Domain );};if _acdae .Function !=nil {if len (_acdae .Function )==1{_ccfece .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acdae .Function [0].ToPdfObject ());
}else {_bffga :=_dc .MakeArray ();for _ ,_dadfe :=range _acdae .Function {_bffga .Append (_dadfe .ToPdfObject ());};_ccfece .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bffga );};};if _acdae .Extend !=nil {_ccfece .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_acdae .Extend );
};return _acdae ._adbfg ;};

// Encoder returns the font's text encoder.
func (_edac pdfCIDFontType0 )Encoder ()_fgd .TextEncoder {return _edac ._ffccb };

// Val returns the color value.
func (_aaaf *PdfColorDeviceGray )Val ()float64 {return float64 (*_aaaf )};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_dc .PdfObjectInteger ;BitsPerComponent *_dc .PdfObjectInteger ;BitsPerFlag *_dc .PdfObjectInteger ;Decode *_dc .PdfObjectArray ;Function []PdfFunction ;};

// IsCID returns true if the underlying font is CID.
func (_bgba *PdfFont )IsCID ()bool {return _bgba .baseFields ().isCIDFont ()};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ffgd *PdfOutlineTreeNode )GetContainingPdfObject ()_dc .PdfObject {return _ffgd .GetContext ().GetContainingPdfObject ();};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_dabaf *PdfPageResources )GetXObjectByName (keyName _dc .PdfObjectName )(*_dc .PdfObjectStream ,XObjectType ){if _dabaf .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fccbcd ,_aaabb :=_dc .TraceToDirectObject (_dabaf .XObject ).(*_dc .PdfObjectDictionary );
if !_aaabb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dc .TraceToDirectObject (_dabaf .XObject ));
return nil ,XObjectTypeUndefined ;};if _cafce :=_fccbcd .Get (keyName );_cafce !=nil {_dgaff ,_bcff :=_dc .GetStream (_cafce );if !_bcff {_bg .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_cafce );
return nil ,XObjectTypeUndefined ;};_eecd :=_dgaff .PdfObjectDictionary ;_afac ,_bcff :=_dc .TraceToDirectObject (_eecd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_dc .PdfObjectName );if !_bcff {_bg .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_eecd .String ());
return nil ,XObjectTypeUndefined ;};if *_afac =="\u0049\u006d\u0061g\u0065"{return _dgaff ,XObjectTypeImage ;}else if *_afac =="\u0046\u006f\u0072\u006d"{return _dgaff ,XObjectTypeForm ;}else if *_afac =="\u0050\u0053"{return _dgaff ,XObjectTypePS ;}else {_bg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_afac );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dfbga *PdfInfo )AddCustomInfo (name string ,value string )error {if _dfbga ._bgcge ==nil {_dfbga ._bgcge =_dc .MakeDict ();};if _ ,_dfde :=_gacf [name ];_dfde {return _a .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dfbga ._bgcge .SetIfNotNil (*_dc .MakeName (name ),_dc .MakeString (value ));return nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_degcg *PdfAcroForm ,_efbc *PdfField ,_efba *PdfAnnotationWidget )(*_dc .PdfObjectDictionary ,error );};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_daace *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _daace .Range };func (_ggegd *PdfReader )newPdfPageFromDict (_bebbb *_dc .PdfObjectDictionary )(*PdfPage ,error ){_bgea :=NewPdfPage ();_bgea ._bgfa =_bebbb ;_efee :=*_bebbb ;_gedf ,_aacdb :=_efee .Get ("\u0054\u0079\u0070\u0065").(*_dc .PdfObjectName );
if !_aacdb {return nil ,_fd .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_gedf !="\u0050\u0061\u0067\u0065"{return nil ,_fd .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _cbcd :=_efee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cbcd !=nil {_bgea .Parent =_cbcd ;};if _bfaad :=_efee .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bfaad !=nil {_aegbg ,_bbff :=_dc .GetString (_bfaad );
if !_bbff {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_eegcf ,_dadad :=NewPdfDate (_aegbg .Str ());if _dadad !=nil {return nil ,_dadad ;};_bgea .LastModified =&_eegcf ;};if _fdbfe :=_efee .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fdbfe !=nil &&!_dc .IsNullObject (_fdbfe ){_egee ,_gcgac :=_dc .GetDict (_fdbfe );
if !_gcgac {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fdbfe );};var _adbd error ;_bgea .Resources ,_adbd =NewPdfPageResourcesFromDict (_egee );
if _adbd !=nil {return nil ,_adbd ;};}else {_cafccd ,_bcaa :=_bgea .getParentResources ();if _bcaa !=nil {return nil ,_bcaa ;};if _cafccd ==nil {_cafccd =NewPdfPageResources ();};_bgea .Resources =_cafccd ;};if _dabf :=_efee .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_dabf !=nil {_edae ,_cgcff :=_dc .GetArray (_dabf );if !_cgcff {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _eeeag error ;
_bgea .MediaBox ,_eeeag =NewPdfRectangle (*_edae );if _eeeag !=nil {return nil ,_eeeag ;};};if _gcffb :=_efee .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_gcffb !=nil {_faefc ,_fddff :=_dc .GetArray (_gcffb );if !_fddff {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _aeafe error ;_bgea .CropBox ,_aeafe =NewPdfRectangle (*_faefc );if _aeafe !=nil {return nil ,_aeafe ;};};if _aeegb :=_efee .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_aeegb !=nil {_ggacc ,_fbbe :=_dc .GetArray (_aeegb );if !_fbbe {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _bcaeg error ;_bgea .BleedBox ,_bcaeg =NewPdfRectangle (*_ggacc );if _bcaeg !=nil {return nil ,_bcaeg ;};};if _aabdd :=_efee .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_aabdd !=nil {_ggae ,_acfa :=_dc .GetArray (_aabdd );if !_acfa {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _abeee error ;_bgea .TrimBox ,_abeee =NewPdfRectangle (*_ggae );if _abeee !=nil {return nil ,_abeee ;};};if _gbabf :=_efee .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gbabf !=nil {_caba ,_agebe :=_dc .GetArray (_gbabf );if !_agebe {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bebaf error ;_bgea .ArtBox ,_bebaf =NewPdfRectangle (*_caba );if _bebaf !=nil {return nil ,_bebaf ;};};if _afbdf :=_efee .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_afbdf !=nil {_bgea .BoxColorInfo =_afbdf ;};if _cgeeb :=_efee .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_cgeeb !=nil {_bgea .Contents =_cgeeb ;};if _begag :=_efee .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_begag !=nil {_gdfac ,_eeged :=_dc .GetInt (_begag );if !_eeged {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dgeea :=int64 (*_gdfac );_bgea .Rotate =&_dgeea ;};if _ccbeg :=_efee .Get ("\u0047\u0072\u006fu\u0070");_ccbeg !=nil {_bgea .Group =_ccbeg ;};if _dgfda :=_efee .Get ("\u0054\u0068\u0075m\u0062");_dgfda !=nil {_bgea .Thumb =_dgfda ;};if _gdfb :=_efee .Get ("\u0042");
_gdfb !=nil {_bgea .B =_gdfb ;};if _cgeg :=_efee .Get ("\u0044\u0075\u0072");_cgeg !=nil {_bgea .Dur =_cgeg ;};if _ceeg :=_efee .Get ("\u0054\u0072\u0061n\u0073");_ceeg !=nil {_bgea .Trans =_ceeg ;};if _eecef :=_efee .Get ("\u0041\u0041");_eecef !=nil {_bgea .AA =_eecef ;
};if _degag :=_efee .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_degag !=nil {_bgea .Metadata =_degag ;};if _acbfg :=_efee .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_acbfg !=nil {_bgea .PieceInfo =_acbfg ;};if _afaa :=_efee .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_afaa !=nil {_bgea .StructParents =_afaa ;};if _ccegd :=_efee .Get ("\u0049\u0044");_ccegd !=nil {_bgea .ID =_ccegd ;};if _fdcb :=_efee .Get ("\u0050\u005a");_fdcb !=nil {_bgea .PZ =_fdcb ;};if _cbebf :=_efee .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_cbebf !=nil {_bgea .SeparationInfo =_cbebf ;};if _daggg :=_efee .Get ("\u0054\u0061\u0062\u0073");_daggg !=nil {_bgea .Tabs =_daggg ;};if _efaa :=_efee .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_efaa !=nil {_bgea .TemplateInstantiated =_efaa ;};if _cbead :=_efee .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_cbead !=nil {_bgea .PresSteps =_cbead ;};if _cbag :=_efee .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_cbag !=nil {_bgea .UserUnit =_cbag ;
};if _ddfge :=_efee .Get ("\u0056\u0050");_ddfge !=nil {_bgea .VP =_ddfge ;};if _daffg :=_efee .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_daffg !=nil {_bgea .Annots =_daffg ;};_bgea ._ffda =_ggegd ;return _bgea ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_eaccg *PdfReader )GetNumPages ()(int ,error ){if _eaccg ._ecead .GetCrypter ()!=nil &&!_eaccg ._ecead .IsAuthenticated (){return 0,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_eaccg ._eebef ),nil ;};func _edfagd (_aggf *_dc .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gcbcc :=PdfShadingType1 {};if _bfeca :=_aggf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bfeca !=nil {_bfeca =_dc .TraceToDirectObject (_bfeca );
_dgdfa ,_eaada :=_bfeca .(*_dc .PdfObjectArray );if !_eaada {_bg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfeca );return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gcbcc .Domain =_dgdfa ;};if _cddec :=_aggf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cddec !=nil {_cddec =_dc .TraceToDirectObject (_cddec );_fbce ,_bccfd :=_cddec .(*_dc .PdfObjectArray );if !_bccfd {_bg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cddec );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gcbcc .Matrix =_fbce ;};_cdddc :=_aggf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cdddc ==nil {_bg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gcbcc .Function =[]PdfFunction {};if _egceea ,_eccf :=_cdddc .(*_dc .PdfObjectArray );_eccf {for _ ,_dffd :=range _egceea .Elements (){_gfbcg ,_affeb :=_fcace (_dffd );if _affeb !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_affeb );
return nil ,_affeb ;};_gcbcc .Function =append (_gcbcc .Function ,_gfbcg );};}else {_fegca ,_aeab :=_fcace (_cdddc );if _aeab !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aeab );
return nil ,_aeab ;};_gcbcc .Function =append (_gcbcc .Function ,_fegca );};return &_gcbcc ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dgae *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbea ,_degd :=_dc .GetNumbersAsFloat (objects );
if _degd !=nil {return nil ,_degd ;};return _dgae .ColorFromFloats (_cbea );};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_afage *PdfWriter )AddPage (page *PdfPage )error {const _fecefe ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_befgf (page );_cdga :=page .ToPdfObject ();_bg .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_bg .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cdga );_fgefg ,_ffegd :=_dc .GetIndirect (_cdga );if !_ffegd {return _fd .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bg .Log .Trace ("\u0025\u0073",_fgefg );_bg .Log .Trace ("\u0025\u0073",_fgefg .PdfObject );_bbdda ,_ffegd :=_dc .GetDict (_fgefg .PdfObject );if !_ffegd {return _fd .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gegbe ,_ffegd :=_dc .GetName (_bbdda .Get ("\u0054\u0079\u0070\u0065"));if !_ffegd {return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_bbdda .Get ("\u0054\u0079\u0070\u0065"));
};if _gegbe .String ()!="\u0050\u0061\u0067\u0065"{return _fd .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fagff :=[]_dc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_afede ,_eccc :=_dc .GetIndirect (_bbdda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bg .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_bbdda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_eccc );
for _eccc {_bg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_afede );_agcg ,_cgage :=_dc .GetDict (_afede .PdfObject );if !_cgage {return _fd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bbege :=range _fagff {_bg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bbege );if _bbdda .Get (_bbege )!=nil {_bg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _eabec :=_agcg .Get (_bbege );_eabec !=nil {_bg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bbege );_bbdda .Set (_bbege ,_eabec );};};_afede ,_eccc =_dc .GetIndirect (_agcg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_bg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_agcg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_bbdda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afage ._eegbd );_fgefg .PdfObject =_bbdda ;_cccfg ,_ffegd :=_dc .GetDict (_afage ._eegbd .PdfObject );if !_ffegd {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_aaada ,_ffegd :=_dc .GetArray (_cccfg .Get ("\u004b\u0069\u0064\u0073"));if !_ffegd {return _fd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_aaada .Append (_fgefg );_afage ._gfceb [_bbdda ]=struct{}{};_eeae ,_ffegd :=_dc .GetInt (_cccfg .Get ("\u0043\u006f\u0075n\u0074"));if !_ffegd {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_eeae =*_eeae +1;if page ._ffda ==nil {_bcdde :=_bb .Track (_afage ._egfgf ,_fecefe );if _bcdde !=nil {return _bcdde ;};}else {_afcb :=_bb .Track (page ._ffda ._dccac ,_fecefe );if _afcb !=nil {return _afcb ;};};_afage .addObject (_fgefg );_fedd :=_afage .addObjects (_bbdda );
if _fedd !=nil {return _fedd ;};return nil ;};func (_eadfe *PdfSignature )extractChainFromPKCS7 ()([]*_dgd .Certificate ,error ){_acae ,_fgcee :=_ef .Parse (_eadfe .Contents .Bytes ());if _fgcee !=nil {return nil ,_fgcee ;};return _acae .Certificates ,nil ;
};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_fddc PdfModel ;_fbaa *_dc .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_dc .PdfObjectName ;T *_dc .PdfObjectString ;TU *_dc .PdfObjectString ;TM *_dc .PdfObjectString ;Ff *_dc .PdfObjectInteger ;
V _dc .PdfObject ;DV _dc .PdfObject ;AA _dc .PdfObject ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bbaae .Lock ();defer _bbaae .Unlock ();_fbced =creator };

// Items returns all children outline items.
func (_ebcbc *OutlineItem )Items ()[]*OutlineItem {return _ebcbc .Entries };

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_babdb pdfFontSimple )GetCharMetrics (code _fgd .CharCode )(_eb .CharMetrics ,bool ){if _efdcd ,_bdaca :=_babdb ._dbaad [code ];_bdaca {return _eb .CharMetrics {Wx :_efdcd },true ;};if _eb .IsStdFont (_eb .StdFontName (_babdb ._bfbac )){return _eb .CharMetrics {Wx :250},true ;
};return _eb .CharMetrics {},false ;};

// String returns a string representation of the field.
func (_cfgde *PdfField )String ()string {if _dfce ,_bdgc :=_cfgde .ToPdfObject ().(*_dc .PdfIndirectObject );_bdgc {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cfgde ._fddc ,_dfce .PdfObject .String ());};return "";};func _gcdc ()string {_afagf :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _agaeb _ffa .Buffer ;for _ecgb :=0;_ecgb < 6;_ecgb ++{_agaeb .WriteRune (rune (_afagf [_cc .Intn (len (_afagf ))]));};return _agaeb .String ();};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _dc .PdfObject ;IC _dc .PdfObject ;BE _dc .PdfObject ;RD _dc .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdfacd *PdfShadingType5 )ToPdfObject ()_dc .PdfObject {_gdfacd .PdfShading .ToPdfObject ();_befcd ,_gdegd :=_gdfacd .getShadingDict ();if _gdegd !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdfacd .BitsPerCoordinate !=nil {_befcd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gdfacd .BitsPerCoordinate );};if _gdfacd .BitsPerComponent !=nil {_befcd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gdfacd .BitsPerComponent );
};if _gdfacd .VerticesPerRow !=nil {_befcd .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_gdfacd .VerticesPerRow );};if _gdfacd .Decode !=nil {_befcd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gdfacd .Decode );
};if _gdfacd .Function !=nil {if len (_gdfacd .Function )==1{_befcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdfacd .Function [0].ToPdfObject ());}else {_fadbgc :=_dc .MakeArray ();for _ ,_gfbga :=range _gdfacd .Function {_fadbgc .Append (_gfbga .ToPdfObject ());
};_befcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fadbgc );};};return _gdfacd ._adbfg ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_bdaf *PdfFieldSignature )ToPdfObject ()_dc .PdfObject {if _bdaf .PdfAnnotationWidget !=nil {_bdaf .PdfAnnotationWidget .ToPdfObject ();};_bdaf .PdfField .ToPdfObject ();_ecag :=_bdaf ._fbaa ;_bbdd :=_ecag .PdfObject .(*_dc .PdfObjectDictionary );
_bbdd .SetIfNotNil ("\u0046\u0054",_dc .MakeName ("\u0053\u0069\u0067"));_bbdd .SetIfNotNil ("\u004c\u006f\u0063\u006b",_bdaf .Lock );_bbdd .SetIfNotNil ("\u0053\u0056",_bdaf .SV );if _bdaf .V !=nil {_bbdd .SetIfNotNil ("\u0056",_bdaf .V .ToPdfObject ());
};return _ecag ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ffb :=&PdfAction {};_ffb ._be =_dc .MakeIndirectObject (_dc .MakeDict ());return _ffb ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_adaa *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bcg :=range pages {_bcg =_bcg .Duplicate ();_befgf (_bcg );_adaa ._aebf =append (_adaa ._aebf ,_bcg );};};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _dc .PdfObject ;T _dc .PdfObject ;Operation _dc .PdfObject ;};

// Register registers (caches) a model to primitive object relationship.
func (_cabef *modelManager )Register (primitive _dc .PdfObject ,model PdfModel ){_cabef ._ggaf [model ]=primitive ;_cabef ._cedc [primitive ]=model ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dbbc *_dc .PdfIndirectObject ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dfad *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dfad .updateObjectsDeep (dss .ToPdfObject (),nil );};_dfad ._cfef =dss ;};func (_fdgd *LTV )buildCertChain (_cgcba ,_edcde []*_dgd .Certificate )([]*_dgd .Certificate ,map[string ]*_dgd .Certificate ,error ){_cgedb :=map[string ]*_dgd .Certificate {};
for _ ,_egadb :=range _cgcba {_cgedb [_egadb .Subject .CommonName ]=_egadb ;};_dbfbge :=_cgcba ;for _ ,_egbda :=range _edcde {_aaffc :=_egbda .Subject .CommonName ;if _ ,_fgcc :=_cgedb [_aaffc ];_fgcc {continue ;};_cgedb [_aaffc ]=_egbda ;_dbfbge =append (_dbfbge ,_egbda );
};if len (_dbfbge )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ggfaf error ;for _fecce :=_dbfbge [0];_fecce !=nil &&!_fdgd .CertClient .IsCA (_fecce );{_bffde ,_dcagc :=_cgedb [_fecce .Issuer .CommonName ];if !_dcagc {if _bffde ,_ggfaf =_fdgd .CertClient .GetIssuer (_fecce );
_ggfaf !=nil {_bg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ggfaf );
break ;};_cgedb [_fecce .Issuer .CommonName ]=_bffde ;_dbfbge =append (_dbfbge ,_bffde );};_fecce =_bffde ;};return _dbfbge ,_cgedb ,nil ;};

// SetReason sets the `Reason` field of the signature.
func (_edfee *PdfSignature )SetReason (reason string ){_edfee .Reason =_dc .MakeString (reason )};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_fccb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fccb .AlternateSpace ==nil {return nil ,_fd .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fccb .AlternateSpace .ColorToRGB (color );};func (_ggfd *PdfReader )newPdfAnnotationScreenFromDict (_acf *_dc .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_dfbb :=PdfAnnotationScreen {};_dfbb .T =_acf .Get ("\u0054");_dfbb .MK =_acf .Get ("\u004d\u004b");
_dfbb .A =_acf .Get ("\u0041");_dfbb .AA =_acf .Get ("\u0041\u0041");return &_dfbb ,nil ;};

// ToInteger convert to an integer format.
func (_bdcg *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_dcaa :=_ged .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_dcaa *_bdcg .C ()),uint32 (_dcaa *_bdcg .M ()),uint32 (_dcaa *_bdcg .Y ()),uint32 (_dcaa *_bdcg .K ())};};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_ggebd *PdfPageResources )HasColorspaceByName (keyName _dc .PdfObjectName )bool {_cecaa ,_debcd :=_ggebd .GetColorspaces ();if _debcd !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_debcd );
return false ;};if _cecaa ==nil {return false ;};_ ,_begc :=_cecaa .Colorspaces [string (keyName )];return _begc ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_efbd *PdfFont )BytesToCharcodes (data []byte )[]_fgd .CharCode {_bg .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _cceg ,_eegd :=_efbd ._efeg .(*pdfFontType0 );_eegd &&_cceg ._adfa !=nil {if _begg ,_afcde :=_cceg .bytesToCharcodes (data );_afcde {return _begg ;};};_geaf :=make ([]_fgd .CharCode ,0,len (data )+len (data )%2);if _efbd .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bede :=0;_bede < len (data );_bede +=2{_ebeg :=uint16 (data [_bede ])<<8|uint16 (data [_bede +1]);_geaf =append (_geaf ,_fgd .CharCode (_ebeg ));};}else {for _ ,_gacb :=range data {_geaf =append (_geaf ,_fgd .CharCode (_gacb ));
};};return _geaf ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bfcfc *PdfColorspaceCalGray )ToPdfObject ()_dc .PdfObject {_fcee :=&_dc .PdfObjectArray {};_fcee .Append (_dc .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fdefe :=_dc .MakeDict ();if _bfcfc .WhitePoint !=nil {_fdefe .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dc .MakeArray (_dc .MakeFloat (_bfcfc .WhitePoint [0]),_dc .MakeFloat (_bfcfc .WhitePoint [1]),_dc .MakeFloat (_bfcfc .WhitePoint [2])));
}else {_bg .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bfcfc .BlackPoint !=nil {_fdefe .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dc .MakeArray (_dc .MakeFloat (_bfcfc .BlackPoint [0]),_dc .MakeFloat (_bfcfc .BlackPoint [1]),_dc .MakeFloat (_bfcfc .BlackPoint [2])));
};_fdefe .Set ("\u0047\u0061\u006dm\u0061",_dc .MakeFloat (_bfcfc .Gamma ));_fcee .Append (_fdefe );if _bfcfc ._ebbg !=nil {_bfcfc ._ebbg .PdfObject =_fcee ;return _bfcfc ._ebbg ;};return _fcee ;};func _ggbab (_egfbf *_dc .PdfIndirectObject )(*PdfOutline ,error ){_gfddg ,_dcaga :=_egfbf .PdfObject .(*_dc .PdfObjectDictionary );
if !_dcaga {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gaeag :=NewPdfOutline ();if _fabec :=_gfddg .Get ("\u0054\u0079\u0070\u0065");
_fabec !=nil {_ecfc ,_gbdcd :=_fabec .(*_dc .PdfObjectName );if _gbdcd {if *_ecfc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ecfc );
};};};if _cgdc :=_gfddg .Get ("\u0043\u006f\u0075n\u0074");_cgdc !=nil {_abbbf ,_ebfg :=_dc .GetNumberAsInt64 (_cgdc );if _ebfg !=nil {return nil ,_ebfg ;};_gaeag .Count =&_abbbf ;};return _gaeag ,nil ;};func _bfcda (_aegef _dc .PdfObject )(*PdfFunctionType3 ,error ){_bcfa :=&PdfFunctionType3 {};
var _eecba *_dc .PdfObjectDictionary ;if _dgeeg ,_cdggf :=_aegef .(*_dc .PdfIndirectObject );_cdggf {_aacde ,_abbfa :=_dgeeg .PdfObject .(*_dc .PdfObjectDictionary );if !_abbfa {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bcfa ._dfggd =_dgeeg ;_eecba =_aacde ;}else if _abgg ,_cdec :=_aegef .(*_dc .PdfObjectDictionary );_cdec {_eecba =_abgg ;}else {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfefa ,_bgbbg :=_dc .TraceToDirectObject (_eecba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dc .PdfObjectArray );
if !_bgbbg {_bg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cfefa .Len ()!=2{_bg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bdeaa ,_gdca :=_cfefa .ToFloat64Array ();
if _gdca !=nil {return nil ,_gdca ;};_bcfa .Domain =_bdeaa ;_cfefa ,_bgbbg =_dc .TraceToDirectObject (_eecba .Get ("\u0052\u0061\u006eg\u0065")).(*_dc .PdfObjectArray );if _bgbbg {if _cfefa .Len ()< 0||_cfefa .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fbggd ,_fded :=_cfefa .ToFloat64Array ();if _fded !=nil {return nil ,_fded ;};_bcfa .Range =_fbggd ;};_cfefa ,_bgbbg =_dc .TraceToDirectObject (_eecba .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_dc .PdfObjectArray );if !_bgbbg {_bg .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bcfa .Functions =[]PdfFunction {};
for _ ,_aadb :=range _cfefa .Elements (){_fefe ,_fedgf :=_fcace (_aadb );if _fedgf !=nil {return nil ,_fedgf ;};_bcfa .Functions =append (_bcfa .Functions ,_fefe );};_cfefa ,_bgbbg =_dc .TraceToDirectObject (_eecba .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_dc .PdfObjectArray );
if !_bgbbg {_bg .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_cgged ,_gdca :=_cfefa .ToFloat64Array ();if _gdca !=nil {return nil ,_gdca ;};_bcfa .Bounds =_cgged ;if len (_bcfa .Bounds )!=len (_bcfa .Functions )-1{_bg .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_bcfa .Bounds ),len (_bcfa .Functions ));
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfefa ,_bgbbg =_dc .TraceToDirectObject (_eecba .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_dc .PdfObjectArray );if !_bgbbg {_bg .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_babcg ,_gdca :=_cfefa .ToFloat64Array ();
if _gdca !=nil {return nil ,_gdca ;};_bcfa .Encode =_babcg ;if len (_bcfa .Encode )!=2*len (_bcfa .Functions ){_bg .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_bcfa .Encode ),len (_bcfa .Functions ));
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _bcfa ,nil ;};func _aaec (_agfa *_dc .PdfObjectDictionary )bool {for _ ,_gcag :=range _agfa .Keys (){if _ ,_ebcc :=_abeg [_gcag .String ()];_ebcc {return true ;
};};return false ;};func (_dgcg *pdfFontSimple )getFontEncoding ()(_ggda string ,_dbbeg map[_fgd .CharCode ]_fgd .GlyphName ,_degdag error ){_ggda ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _aebda ,_decd :=_fbfdd [_dgcg ._bfbac ];
_decd {_ggda =_aebda ;}else if _dgcg .fontFlags ()&_dgdee !=0{for _gcgdc ,_babb :=range _fbfdd {if _db .Contains (_dgcg ._bfbac ,_gcgdc ){_ggda =_babb ;break ;};};};if _dgcg .Encoding ==nil {return _ggda ,nil ,nil ;};switch _dcadg :=_dgcg .Encoding .(type ){case *_dc .PdfObjectName :return string (*_dcadg ),nil ,nil ;
case *_dc .PdfObjectDictionary :_cbcg ,_gecf :=_dc .GetName (_dcadg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gecf {_ggda =_cbcg .String ();};if _gefac :=_dcadg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_gefac !=nil {_eacde ,_geed :=_dc .GetArray (_gefac );if !_geed {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_dcadg ,_dcadg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_dc .ErrTypeError ;};_dbbeg ,_degdag =_fgd .FromFontDifferences (_eacde );};return _ggda ,_dbbeg ,_degdag ;default:_bg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_dgcg .Encoding ,_dgcg .Encoding );
return "",nil ,_dc .ErrTypeError ;};};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_edeeg :=&XObjectForm {};_ggfeb :=&_dc .PdfObjectStream {};_ggfeb .PdfObjectDictionary =_dc .MakeDict ();_edeeg ._dgfed =_ggfeb ;return _edeeg ;};var ImageHandling ImageHandler =DefaultImageHandler {};func (_eded *pdfFontType0 )subsetRegistered ()error {_gddfe ,_debbg :=_eded .DescendantFont ._efeg .(*pdfCIDFontType2 );
if !_debbg {_bg .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_eded .DescendantFont );return nil ;};if _gddfe ==nil {return nil ;
};if _gddfe ._dffc ==nil {_bg .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _eded ._efebb ==nil {_bg .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_aeggg ,_debbg :=_dc .GetStream (_gddfe ._dffc .FontFile2 );if !_debbg {_bg .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fd .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cggd ,_fdafa :=_dc .DecodeStream (_aeggg );if _fdafa !=nil {_bg .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fdafa );
return _fdafa ;};_dbcef ,_fdafa :=_ffaf .Parse (_ffa .NewReader (_cggd ));if _fdafa !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_aeggg .Stream ));
return _fdafa ;};var _eabg []rune ;var _cdeb *_ffaf .Font ;switch _eeffb :=_eded ._efebb .(type ){case *_fgd .TrueTypeFontEncoder :_eabg =_eeffb .RegisteredRunes ();_cdeb ,_fdafa =_dbcef .SubsetKeepRunes (_eabg );if _fdafa !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdafa );
return _fdafa ;};_eeffb .SubsetRegistered ();case *_fgd .IdentityEncoder :_eabg =_eeffb .RegisteredRunes ();_bbdgb :=make ([]_ffaf .GlyphIndex ,len (_eabg ));for _fbcd ,_gcbff :=range _eabg {_bbdgb [_fbcd ]=_ffaf .GlyphIndex (_gcbff );};_cdeb ,_fdafa =_dbcef .SubsetKeepIndices (_bbdgb );
if _fdafa !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdafa );return _fdafa ;};case _fgd .SimpleEncoder :_bccf :=_eeffb .Charcodes ();for _ ,_cgdga :=range _bccf {_dbae ,_geegc :=_eeffb .CharcodeToRune (_cgdga );if !_geegc {_bg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_cgdga );
continue ;};_eabg =append (_eabg ,_dbae );};default:return _a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_eded ._efebb );
};var _ageag _ffa .Buffer ;_fdafa =_cdeb .Write (&_ageag );if _fdafa !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdafa );return _fdafa ;};if _eded ._dcgae !=nil {_dace :=make (map[_bd .CharCode ]rune ,len (_eabg ));for _ ,_aaafb :=range _eabg {_edeg ,_dfdee :=_eded ._efebb .RuneToCharcode (_aaafb );
if !_dfdee {continue ;};_dace [_bd .CharCode (_edeg )]=_aaafb ;};_eded ._dcgae =_bd .NewToUnicodeCMap (_dace );};_aeggg ,_fdafa =_dc .MakeStream (_ageag .Bytes (),_dc .NewFlateEncoder ());if _fdafa !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdafa );
return _fdafa ;};_aeggg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dc .MakeInteger (int64 (_ageag .Len ())));if _dbaeg ,_ffef :=_dc .GetStream (_gddfe ._dffc .FontFile2 );_ffef {*_dbaeg =*_aeggg ;}else {_gddfe ._dffc .FontFile2 =_aeggg ;};_dbgd :=_gcdc ();
if len (_eded ._bfbac )> 0{_eded ._bfbac =_ggde (_eded ._bfbac ,_dbgd );};if len (_gddfe ._bfbac )> 0{_gddfe ._bfbac =_ggde (_gddfe ._bfbac ,_dbgd );};if len (_eded ._ceee )> 0{_eded ._ceee =_ggde (_eded ._ceee ,_dbgd );};if _gddfe ._dffc !=nil {_eagfb ,_dgea :=_dc .GetName (_gddfe ._dffc .FontName );
if _dgea &&len (_eagfb .String ())> 0{_fdfbg :=_ggde (_eagfb .String (),_dbgd );_gddfe ._dffc .FontName =_dc .MakeName (_fdfbg );};};return nil ;};func (_fffde *pdfFontType0 )baseFields ()*fontCommon {return &_fffde .fontCommon };

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_eega *DSS )GetContainingPdfObject ()_dc .PdfObject {return _eega ._addf };func (_cgedc *PdfAppender )addNewObject (_bfgb _dc .PdfObject ){if _ ,_ddga :=_cgedc ._efb [_bfgb ];!_ddga {_cgedc ._gbga =append (_cgedc ._gbga ,_bfgb );_cgedc ._efb [_bfgb ]=struct{}{};
};};func (_efag *PdfReader )newPdfAnnotationSquigglyFromDict (_dgc *_dc .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cfb :=PdfAnnotationSquiggly {};_bdge ,_bacc :=_efag .newPdfAnnotationMarkupFromDict (_dgc );if _bacc !=nil {return nil ,_bacc ;
};_cfb .PdfAnnotationMarkup =_bdge ;_cfb .QuadPoints =_dgc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cfb ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_fcec *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fcec ._dffc ==nil &&_fcec .DescendantFont !=nil {return _fcec .DescendantFont .FontDescriptor ();};return _fcec ._dffc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dca *PdfAction )GetContainingPdfObject ()_dc .PdfObject {return _dca ._be };

// WriteToFile writes the output PDF to file.
func (_aaebcg *PdfWriter )WriteToFile (outputFilePath string )error {_abag ,_fagca :=_ff .Create (outputFilePath );if _fagca !=nil {return _fagca ;};defer _abag .Close ();return _aaebcg .Write (_abag );};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_acce _fa .ReadSeeker ;_bcc *_dc .PdfParser ;_fcca *PdfReader ;Reader *PdfReader ;_aebf []*PdfPage ;_ggg *PdfAcroForm ;_cfef *DSS ;_cgcc _dc .XrefTable ;_ddfda int64 ;_acbd int ;_gbga []_dc .PdfObject ;_efb map[_dc .PdfObject ]struct{};
_eggd map[_dc .PdfObject ]int64 ;_bfeg map[_dc .PdfObject ]struct{};_abda map[_dc .PdfObject ]struct{};_gbdc int64 ;_cdgb bool ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dfcd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_gfbf *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _gdaf []_fgd .TextEncoder ;var _ggfac _fgd .CMapEncoder ;if _dcff :=_gfbf .baseFields ()._dcgae ;_dcff !=nil {_ggfac =_fgd .NewCMapEncoder ("",nil ,_dcff );};_egbg :=_gfbf .Encoder ();
if _egbg !=nil {switch _dfcec :=_egbg .(type ){case _fgd .SimpleEncoder :_gaaca :=_dfcec .BaseName ();if _ ,_gfffg :=_edfc [_gaaca ];_gfffg {_gdaf =append (_gdaf ,_egbg );};};};if len (_gdaf )==0{if _gfbf .baseFields ()._dcgae !=nil {_gdaf =append (_gdaf ,_ggfac );
};if _egbg !=nil {_gdaf =append (_gdaf ,_egbg );};};var _gdbec _ffa .Buffer ;var _aabac int ;for _ ,_abgf :=range data {var _gabag bool ;for _ ,_bedeb :=range _gdaf {if _aaeea :=_bedeb .Encode (string (_abgf ));len (_aaeea )> 0{_gdbec .Write (_aaeea );
_gabag =true ;break ;};};if !_gabag {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_abgf );
_aabac ++;};};if _aabac !=0{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_aabac ,_gfbf ,_gdaf );
};return _gdbec .Bytes (),_aabac ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_ecba :=NewPdfAnnotation ();_dgf :=&PdfAnnotationPolygon {};_dgf .PdfAnnotation =_ecba ;_dgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecba .SetContext (_dgf );return _dgf ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fff :=NewPdfAnnotation ();_aec :=&PdfAnnotationPrinterMark {};_aec .PdfAnnotation =_fff ;_fff .SetContext (_aec );return _aec ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_cgabc *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _facace []*PdfField ;if _cgabc .AcroForm !=nil {_facace =_cgabc .AcroForm .AllFields ();};_afgca :=make (map[*PdfField ]struct{},len (_facace ));for _ ,_aadfa :=range _facace {_afgca [_aadfa ]=struct{}{};
};for _ ,_gbcde :=range _cgabc .PageList {_dafcc ,_dgbee :=_gbcde .GetAnnotations ();if _dgbee !=nil {return false ,_dgbee ;};for _ ,_gcfed :=range _dafcc {_afgcac ,_dbcgc :=_gcfed .GetContext ().(*PdfAnnotationWidget );if !_dbcgc {continue ;};_abdfd :=_afgcac .Field ();
if _abdfd ==nil {return true ,nil ;};if _ ,_edagb :=_afgca [_abdfd ];!_edagb {return true ,nil ;};};};return false ,nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _g .Time ){_bbaae .Lock ();defer _bbaae .Unlock ();_cgeca =modifiedDate ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_gabg *PdfAppender )Write (w _fa .Writer )error {if _gabg ._cdgb {return _fd .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_gfff :=NewPdfWriter ();_cbffb ,_cffg :=_dc .GetDict (_gfff ._eegbd );if !_cffg {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cae ,_cffg :=_cbffb .Get ("\u004b\u0069\u0064\u0073").(*_dc .PdfObjectArray );if !_cffg {return _fd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_eegc ,_cffg :=_cbffb .Get ("\u0043\u006f\u0075n\u0074").(*_dc .PdfObjectInteger );if !_cffg {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_dgbd :=_gabg ._fcca ._ecead ;_dcaf :=_dgbd .GetTrailer ();if _dcaf ==nil {return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_caabg ,_cffg :=_dc .GetIndirect (_dcaf .Get ("\u0052\u006f\u006f\u0074"));
if !_cffg {return _fd .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_dccb ,_cffg :=_dc .GetDict (_caabg );if !_cffg {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_caabg ,*_dcaf );
return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_fcgb :=range _dccb .Keys (){if _gfff ._dfecf .Get (_fcgb )==nil {_dgdff :=_dccb .Get (_fcgb );_gfff ._dfecf .Set (_fcgb ,_dgdff );};};if _gabg ._ggg !=nil {_gfff ._dfecf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gabg ._ggg .ToPdfObject ());
_gabg .updateObjectsDeep (_gabg ._ggg .ToPdfObject (),nil );};if _gabg ._cfef !=nil {_gabg .updateObjectsDeep (_gabg ._cfef .ToPdfObject (),nil );_gfff ._dfecf .Set ("\u0044\u0053\u0053",_gabg ._cfef .GetContainingPdfObject ());};if _gfff ._ebege < 2{_gfff .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_gfff .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_gabg .addNewObject (_gfff ._aefdcd );_gabg .addNewObject (_gfff ._deaaa );_caeg :=false ;if len (_gabg ._fcca .PageList )!=len (_gabg ._aebf ){_caeg =true ;}else {for _cfdf :=range _gabg ._fcca .PageList {switch {case _gabg ._aebf [_cfdf ]==_gabg ._fcca .PageList [_cfdf ]:case _gabg ._aebf [_cfdf ]==_gabg .Reader .PageList [_cfdf ]:default:_caeg =true ;
};if _caeg {break ;};};};if _caeg {_gabg .updateObjectsDeep (_gfff ._eegbd ,nil );}else {_gabg ._bfeg [_gfff ._eegbd ]=struct{}{};};_gfff ._eegbd .ObjectNumber =_gabg .Reader ._daaebg .ObjectNumber ;_gabg ._eggd [_gfff ._eegbd ]=_gabg .Reader ._daaebg .ObjectNumber ;
_dcbc :=[]_dc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_fbdf :=range _gabg ._aebf {_ffcb :=_fbdf .ToPdfObject ();
*_eegc =*_eegc +1;if _cgbba ,_gbbe :=_ffcb .(*_dc .PdfIndirectObject );_gbbe &&_cgbba .GetParser ()==_gabg ._fcca ._ecead {_cae .Append (&_cgbba .PdfObjectReference );continue ;};if _gegb ,_bcde :=_dc .GetDict (_ffcb );_bcde {_ebda ,_febfa :=_gegb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_dc .PdfIndirectObject );
for _febfa {_bg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebda );_dcdad ,_bgd :=_ebda .PdfObject .(*_dc .PdfObjectDictionary );if !_bgd {return _fd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_eddf :=range _dcbc {_bg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eddf );if _gegb .Get (_eddf )!=nil {_bg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ffgg :=_dcdad .Get (_eddf );_ffgg !=nil {_bg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eddf );_gegb .Set (_eddf ,_ffgg );};};_ebda ,_febfa =_dcdad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_dc .PdfIndirectObject );
_bg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dcdad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gegb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfff ._eegbd );};_gabg .updateObjectsDeep (_ffcb ,nil );
_cae .Append (_ffcb );};if _ ,_ecd :=_gabg ._acce .Seek (0,_fa .SeekStart );_ecd !=nil {return _ecd ;};_gaba :=make (map[SignatureHandler ]_fa .Writer );_abbc :=_dc .MakeArray ();for _ ,_dedg :=range _gabg ._gbga {if _agd ,_dade :=_dc .GetIndirect (_dedg );
_dade {if _gfga ,_gbee :=_agd .PdfObject .(*pdfSignDictionary );_gbee {_abc :=*_gfga ._ccdec ;var _abf error ;_gaba [_abc ],_abf =_abc .NewDigest (_gfga ._bfcef );if _abf !=nil {return _abf ;};_abbc .Append (_dc .MakeInteger (0xfffff),_dc .MakeInteger (0xfffff));
};};};if _abbc .Len ()> 0{_abbc .Append (_dc .MakeInteger (0xfffff),_dc .MakeInteger (0xfffff));};for _ ,_abg :=range _gabg ._gbga {if _aed ,_fedb :=_dc .GetIndirect (_abg );_fedb {if _efe ,_fbbc :=_aed .PdfObject .(*pdfSignDictionary );_fbbc {_efe .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_abbc );
};};};_gagb :=len (_gaba )> 0;var _bdabb _fa .Reader =_gabg ._acce ;if _gagb {_gddd :=make ([]_fa .Writer ,0,len (_gaba ));for _ ,_fgf :=range _gaba {_gddd =append (_gddd ,_fgf );};_bdabb =_fa .TeeReader (_gabg ._acce ,_fa .MultiWriter (_gddd ...));};_fdbg ,_dabg :=_fa .Copy (w ,_bdabb );
if _dabg !=nil {return _dabg ;};if len (_gabg ._gbga )==0{return nil ;};_gfff ._ecdgc =_fdbg ;_gfff .ObjNumOffset =_gabg ._acbd ;_gfff ._gcbbg =true ;_gfff ._daef =_gabg ._cgcc ;_gfff ._cfcag =_gabg ._ddfda ;_gfff ._afdg =_gabg ._gbdc ;_gfff ._dbcce =_gabg ._fcca .PdfVersion ().Minor ;
_gfff ._afgbd =_gabg ._eggd ;_dcad :=_gabg ._bcc .GetXrefType ();if _dcad !=nil {_gcfb :=*_dcad ==_dc .XrefTypeObjectStream ;_gfff ._gfggf =&_gcfb ;};_gfff ._bgadg =map[_dc .PdfObject ]struct{}{};_gfff ._edfca =[]_dc .PdfObject {};for _ ,_agf :=range _gabg ._gbga {if _ ,_cgaee :=_gabg ._bfeg [_agf ];
_cgaee {continue ;};_gfff .addObject (_agf );};_ecee :=w ;if _gagb {_ecee =_ffa .NewBuffer (nil );};if _fade :=_gfff .Write (_ecee );_fade !=nil {return _fade ;};if _gagb {_afab :=_ecee .(*_ffa .Buffer ).Bytes ();_efga :=_dc .MakeArray ();var _gecb []*pdfSignDictionary ;
var _bdbd int64 ;for _ ,_cgac :=range _gfff ._edfca {if _abdg ,_dcecf :=_dc .GetIndirect (_cgac );_dcecf {if _daec ,_debc :=_abdg .PdfObject .(*pdfSignDictionary );_debc {_gecb =append (_gecb ,_daec );_fcbf :=_daec ._gefadg +int64 (_daec ._ddag );_efga .Append (_dc .MakeInteger (_bdbd ),_dc .MakeInteger (_fcbf -_bdbd ));
_bdbd =_daec ._gefadg +int64 (_daec ._fbfcg );};};};_efga .Append (_dc .MakeInteger (_bdbd ),_dc .MakeInteger (_fdbg +int64 (len (_afab ))-_bdbd ));_fadb :=[]byte (_efga .WriteString ());for _ ,_ggea :=range _gecb {_agcbb :=int (_ggea ._gefadg -_fdbg );
for _eade :=_ggea ._bcgg ;_eade < _ggea ._ggbba ;_eade ++{_afab [_agcbb +_eade ]=' ';};_dbag :=_afab [_agcbb +_ggea ._bcgg :_agcbb +_ggea ._ggbba ];copy (_dbag ,_fadb );};var _bdec int ;for _ ,_cgdb :=range _gecb {_aecd :=int (_cgdb ._gefadg -_fdbg );_aacc :=_afab [_bdec :_aecd +_cgdb ._ddag ];
_aad :=*_cgdb ._ccdec ;_gaba [_aad ].Write (_aacc );_bdec =_aecd +_cgdb ._fbfcg ;};for _ ,_dccbb :=range _gecb {_bffe :=_afab [_bdec :];_gdcf :=*_dccbb ._ccdec ;_gaba [_gdcf ].Write (_bffe );};for _ ,_acfg :=range _gecb {_ggef :=int (_acfg ._gefadg -_fdbg );
_bba :=*_acfg ._ccdec ;_geeg :=_gaba [_bba ];if _adee :=_bba .Sign (_acfg ._bfcef ,_geeg );_adee !=nil {return _adee ;};_acfg ._bfcef .ByteRange =_efga ;_bacb :=[]byte (_acfg ._bfcef .Contents .WriteString ());for _fcebb :=_acfg ._bcgg ;_fcebb < _acfg ._ggbba ;
_fcebb ++{_afab [_ggef +_fcebb ]=' ';};for _afcd :=_acfg ._ddag ;_afcd < _acfg ._fbfcg ;_afcd ++{_afab [_ggef +_afcd ]=' ';};_adde :=_afab [_ggef +_acfg ._bcgg :_ggef +_acfg ._ggbba ];copy (_adde ,_fadb );_adde =_afab [_ggef +_acfg ._ddag :_ggef +_acfg ._fbfcg ];
copy (_adde ,_bacb );};_cgbfe :=_ffa .NewBuffer (_afab );_ ,_dabg =_fa .Copy (w ,_cgbfe );if _dabg !=nil {return _dabg ;};};_gabg ._cdgb =true ;return nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_affeg *XObjectForm )SetContentStream (content []byte ,encoder _dc .StreamEncoder )error {_dgded :=content ;if encoder ==nil {if _affeg .Filter !=nil {encoder =_affeg .Filter ;}else {encoder =_dc .NewRawEncoder ();};};_eebbe ,_facb :=encoder .EncodeBytes (_dgded );
if _facb !=nil {return _facb ;};_dgded =_eebbe ;_affeg .Stream =_dgded ;_affeg .Filter =encoder ;return nil ;};

// SetDate sets the `M` field of the signature.
func (_ebfc *PdfSignature )SetDate (date _g .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ebfc .M =_dc .MakeString (date .Format (format ));
};func _adg (_eba _dc .PdfObject )(*PdfFilespec ,error ){if _eba ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_eba );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edbea *PdfShadingType1 )ToPdfObject ()_dc .PdfObject {_edbea .PdfShading .ToPdfObject ();_acfd ,_gggb :=_edbea .getShadingDict ();if _gggb !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edbea .Domain !=nil {_acfd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edbea .Domain );};if _edbea .Matrix !=nil {_acfd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_edbea .Matrix );};if _edbea .Function !=nil {if len (_edbea .Function )==1{_acfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edbea .Function [0].ToPdfObject ());
}else {_cdebd :=_dc .MakeArray ();for _ ,_gdeg :=range _edbea .Function {_cdebd .Append (_gdeg .ToPdfObject ());};_acfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdebd );};};return _edbea ._adbfg ;};func (_fda *PdfReader )newPdfActionResetFormFromDict (_bbf *_dc .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_bbf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bbf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cffgc *PdfField )Flags ()FieldFlag {var _debe FieldFlag ;_egec ,_gcfc :=_cffgc .inherit (func (_agbdb *PdfField )bool {if _agbdb .Ff !=nil {_debe =FieldFlag (*_cffgc .Ff );return true ;};return false ;});if _gcfc !=nil {_bg .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gcfc );
};if !_egec {_bg .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _debe ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_aaee *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_aaee .GetNumComponents (){return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deaf ,_baae :=_aaee .TintTransform .Evaluate (vals );
if _baae !=nil {return nil ,_baae ;};_afbb ,_baae :=_aaee .AlternateSpace .ColorFromFloats (_deaf );if _baae !=nil {return nil ,_baae ;};return _afbb ,nil ;};var _abeg =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_fddcg *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bdcc :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_bfafd ,_fddg :=_fddcg .GetNumPages ();if _fddg !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fddg );
return nil ,_fddg ;};for _agfca :=1;_agfca <=_bfafd ;_agfca ++{_daedf ,_ebff :=_fddcg .GetPage (_agfca );if _ebff !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebff );return nil ,_ebff ;};if opts .PageProcessCallback !=nil {_ebff =opts .PageProcessCallback (_agfca ,_daedf );
if _ebff !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebff );return nil ,_ebff ;};}else if opts .PageCallback !=nil {opts .PageCallback (_agfca ,_daedf );};_ebff =_bdcc .AddPage (_daedf );if _ebff !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebff );
return nil ,_ebff ;};};_bdcc ._ebege =_fddcg .PdfVersion ().Major ;_bdcc ._dbcce =_fddcg .PdfVersion ().Minor ;if !opts .SkipInfo {_geabc ,_eecea :=_fddcg .GetPdfInfo ();if _eecea !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eecea );
}else {_bdcc ._aefdcd .PdfObject =_geabc .ToPdfObject ();};};if !opts .SkipAcroForm {_effca :=_bdcc .SetForms (_fddcg .AcroForm );if _effca !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_effca );return nil ,_effca ;};};if !opts .SkipOutlines {_bdcc .AddOutlineTree (_fddcg .GetOutlineTree ());
};if !opts .SkipOCProperties {_fdfed ,_deacf :=_fddcg .GetOCProperties ();if _deacf !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deacf );}else {_deacf =_bdcc .SetOCProperties (_fdfed );if _deacf !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deacf );
};};};if !opts .SkipPageLabels {_babbe ,_cadba :=_fddcg .GetPageLabels ();if _cadba !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cadba );}else {_cadba =_bdcc .SetPageLabels (_babbe );if _cadba !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cadba );
};};};if !opts .SkipNamedDests {_fccdb ,_cadce :=_fddcg .GetNamedDestinations ();if _cadce !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cadce );}else {_cadce =_bdcc .SetNamedDestinations (_fccdb );if _cadce !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cadce );
};};};if !opts .SkipRotation &&_fddcg .Rotate !=nil {if _cbca :=_bdcc .SetRotation (*_fddcg .Rotate );_cbca !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbca );};};return &_bdcc ,nil ;};

// L returns the value of the L component of the color.
func (_ddbb *PdfColorLab )L ()float64 {return _ddbb [0]};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_ecfd *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_bbdc :=0.3*_ecfd .R ()+0.59*_ecfd .G ()+0.11*_ecfd .B ();_bbdc =_ged .Min (_ged .Max (_bbdc ,0.0),1.0);return NewPdfColorDeviceGray (_bbdc );};func (_aacfb *PdfReader )newPdfAnnotationMovieFromDict (_acge *_dc .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_fcfg :=PdfAnnotationMovie {};
_fcfg .T =_acge .Get ("\u0054");_fcfg .Movie =_acge .Get ("\u004d\u006f\u0076i\u0065");_fcfg .A =_acge .Get ("\u0041");return &_fcfg ,nil ;};func (_fagcd *PdfReader )newPdfAnnotationProjectionFromDict (_agab *_dc .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_abe :=&PdfAnnotationProjection {};
_fbdd ,_cde :=_fagcd .newPdfAnnotationMarkupFromDict (_agab );if _cde !=nil {return nil ,_cde ;};_abe .PdfAnnotationMarkup =_fbdd ;return _abe ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dabag :=&PdfSignature {Type :_dc .MakeName ("\u0053\u0069\u0067"),Handler :handler };_afae :=&pdfSignDictionary {PdfObjectDictionary :_dc .MakeDict (),_ccdec :&handler ,_bfcef :_dabag };_dabag ._acbgc =_dc .MakeIndirectObject (_afae );
return _dabag ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_fccc *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_ffaa *PdfActionGoToR )ToPdfObject ()_dc .PdfObject {_ffaa .PdfAction .ToPdfObject ();_gb :=_ffaa ._be ;_ccdc :=_gb .PdfObject .(*_dc .PdfObjectDictionary );_ccdc .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeGoToR )));if _ffaa .F !=nil {_ccdc .Set ("\u0046",_ffaa .F .ToPdfObject ());
};_ccdc .SetIfNotNil ("\u0044",_ffaa .D );_ccdc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ffaa .NewWindow );return _gb ;};func _ddffc (_egcag _dc .PdfObject )(*PdfShading ,error ){_bgaef :=&PdfShading {};var _faecb *_dc .PdfObjectDictionary ;
if _cagd ,_gegec :=_dc .GetIndirect (_egcag );_gegec {_bgaef ._adbfg =_cagd ;_bdaba ,_gabcf :=_cagd .PdfObject .(*_dc .PdfObjectDictionary );if !_gabcf {_bg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_dc .ErrTypeError ;};_faecb =_bdaba ;}else if _afbcg ,_daebg :=_dc .GetStream (_egcag );_daebg {_bgaef ._adbfg =_afbcg ;_faecb =_afbcg .PdfObjectDictionary ;}else if _gegbc ,_gccd :=_dc .GetDict (_egcag );_gccd {_bgaef ._adbfg =_gegbc ;_faecb =_gegbc ;
}else {_bg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_egcag );return nil ,_dc .ErrTypeError ;};if _faecb ==nil {_bg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_egcag =_faecb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _egcag ==nil {_bg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_egcag =_dc .TraceToDirectObject (_egcag );_bdbfcf ,_cffe :=_egcag .(*_dc .PdfObjectInteger );if !_cffe {_bg .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_egcag );
return nil ,_dc .ErrTypeError ;};if *_bdbfcf < 1||*_bdbfcf > 7{_bg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bdbfcf );
return nil ,_dc .ErrTypeError ;};_bgaef .ShadingType =_bdbfcf ;_egcag =_faecb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _egcag ==nil {_bg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dfbec ,_aagd :=NewPdfColorspaceFromPdfObject (_egcag );if _aagd !=nil {_bg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_aagd );
return nil ,_aagd ;};_bgaef .ColorSpace =_dfbec ;_egcag =_faecb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _egcag !=nil {_egcag =_dc .TraceToDirectObject (_egcag );_cdfad ,_cbffbc :=_egcag .(*_dc .PdfObjectArray );if !_cbffbc {_bg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_egcag );
return nil ,_dc .ErrTypeError ;};_bgaef .Background =_cdfad ;};_egcag =_faecb .Get ("\u0042\u0042\u006f\u0078");if _egcag !=nil {_egcag =_dc .TraceToDirectObject (_egcag );_gabgc ,_dadgd :=_egcag .(*_dc .PdfObjectArray );if !_dadgd {_bg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_egcag );
return nil ,_dc .ErrTypeError ;};_badcc ,_fbgga :=NewPdfRectangle (*_gabgc );if _fbgga !=nil {_bg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fbgga );return nil ,_fbgga ;};_bgaef .BBox =_badcc ;};_egcag =_faecb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _egcag !=nil {_egcag =_dc .TraceToDirectObject (_egcag );_bdeca ,_aadbf :=_egcag .(*_dc .PdfObjectBool );if !_aadbf {_bg .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egcag );
return nil ,_dc .ErrTypeError ;};_bgaef .AntiAlias =_bdeca ;};switch *_bdbfcf {case 1:_gdcad ,_bfecb :=_edfagd (_faecb );if _bfecb !=nil {return nil ,_bfecb ;};_gdcad .PdfShading =_bgaef ;_bgaef ._gggge =_gdcad ;return _bgaef ,nil ;case 2:_gfdgc ,_afedg :=_adgbf (_faecb );
if _afedg !=nil {return nil ,_afedg ;};_gfdgc .PdfShading =_bgaef ;_bgaef ._gggge =_gfdgc ;return _bgaef ,nil ;case 3:_dcfb ,_efcdg :=_fbbgf (_faecb );if _efcdg !=nil {return nil ,_efcdg ;};_dcfb .PdfShading =_bgaef ;_bgaef ._gggge =_dcfb ;return _bgaef ,nil ;
case 4:_gaca ,_gefad :=_gbdea (_faecb );if _gefad !=nil {return nil ,_gefad ;};_gaca .PdfShading =_bgaef ;_bgaef ._gggge =_gaca ;return _bgaef ,nil ;case 5:_gfbc ,_adff :=_fgbaf (_faecb );if _adff !=nil {return nil ,_adff ;};_gfbc .PdfShading =_bgaef ;
_bgaef ._gggge =_gfbc ;return _bgaef ,nil ;case 6:_bfeba ,_aedf :=_dgccf (_faecb );if _aedf !=nil {return nil ,_aedf ;};_bfeba .PdfShading =_bgaef ;_bgaef ._gggge =_bfeba ;return _bgaef ,nil ;case 7:_aaac ,_bfaecc :=_dfcea (_faecb );if _bfaecc !=nil {return nil ,_bfaecc ;
};_aaac .PdfShading =_bgaef ;_bgaef ._gggge =_aaac ;return _bgaef ,nil ;};return nil ,_fd .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ToPdfObject returns the PDF representation of the page resources.
func (_adged *PdfPageResources )ToPdfObject ()_dc .PdfObject {_gdff :=_adged ._bdgg ;_gdff .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_adged .ExtGState );if _adged ._aegad !=nil {_adged .ColorSpace =_adged ._aegad .ToPdfObject ();};_gdff .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_adged .ColorSpace );
_gdff .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_adged .Pattern );_gdff .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_adged .Shading );_gdff .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_adged .XObject );_gdff .SetIfNotNil ("\u0046\u006f\u006e\u0074",_adged .Font );
_gdff .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_adged .ProcSet );_gdff .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_adged .Properties );return _gdff ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dfggd *_dc .PdfIndirectObject ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_ddge *Image )ConvertToBinary ()error {if _ddge .ColorComponents ==1&&_ddge .BitsPerComponent ==1{return nil ;};_aega ,_efgg :=_ddge .ToGoImage ();if _efgg !=nil {return _efgg ;};_eeffc ,_efgg :=_ea .MonochromeConverter .Convert (_aega );if _efgg !=nil {return _efgg ;
};_ddge .Data =_eeffc .Base ().Data ;_ddge ._cecag ,_efgg =_ea .ScaleAlphaToMonochrome (_ddge ._cecag ,int (_ddge .Width ),int (_ddge .Height ));if _efgg !=nil {return _efgg ;};_ddge .BitsPerComponent =1;_ddge .ColorComponents =1;_ddge ._bbde =nil ;return nil ;
};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_cefa :=PdfColorDeviceGray (grayVal );return &_cefa ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dgfdc *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fadbge ,_eeef :=color .(*PdfColorPattern );if !_eeef {_bg .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _fadbge .Color ==nil {return color ,nil ;};if _dgfdc .UnderlyingCS ==nil {return nil ,_fd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _dgfdc .UnderlyingCS .ColorToRGB (_fadbge .Color );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ecead *_dc .PdfParser ;_gegad _dc .PdfObject ;_daaebg *_dc .PdfIndirectObject ;_dddc *_dc .PdfObjectDictionary ;_eebef []*_dc .PdfIndirectObject ;PageList []*PdfPage ;_ebgc int ;_bedbcf *_dc .PdfObjectDictionary ;_babacc *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_abaeb *modelManager ;_egfdf bool ;_agde map[_dc .PdfObject ]struct{};_aeag _fa .ReadSeeker ;_dccac string ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dadc *Image )GetParamsDict ()*_dc .PdfObjectDictionary {_bdcdb :=_dc .MakeDict ();_bdcdb .Set ("\u0057\u0069\u0064t\u0068",_dc .MakeInteger (_dadc .Width ));_bdcdb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_dc .MakeInteger (_dadc .Height ));_bdcdb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_dc .MakeInteger (int64 (_dadc .ColorComponents )));
_bdcdb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dc .MakeInteger (_dadc .BitsPerComponent ));return _bdcdb ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gdad *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gdad .Base .GetNumComponents ();_cgfee :=int (vals [0])*N ;
if _cgfee < 0||(_cgfee +N -1)>=len (_gdad ._eefe ){return nil ,_fd .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_gbfb :=_gdad ._eefe [_cgfee :_cgfee +N ];var _ggfg []float64 ;for _ ,_babc :=range _gbfb {_ggfg =append (_ggfg ,float64 (_babc )/255.0);
};_gbbf ,_agbc :=_gdad .Base .ColorFromFloats (_ggfg );if _agbc !=nil {return nil ,_agbc ;};return _gbbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgb *PdfActionURI )ToPdfObject ()_dc .PdfObject {_cgb .PdfAction .ToPdfObject ();_cdf :=_cgb ._be ;_cgcb :=_cdf .PdfObject .(*_dc .PdfObjectDictionary );_cgcb .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeURI )));_cgcb .SetIfNotNil ("\u0055\u0052\u0049",_cgb .URI );
_cgcb .SetIfNotNil ("\u0049\u0073\u004da\u0070",_cgb .IsMap );return _cdf ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _dc .PdfObject )(_dc .PdfObjectName ,error ){var _afba *_dc .PdfObjectName ;var _gffc *_dc .PdfObjectArray ;if _fedc ,_bafe :=obj .(*_dc .PdfIndirectObject );_bafe {if _fcgf ,_daeb :=_fedc .PdfObject .(*_dc .PdfObjectArray );
_daeb {_gffc =_fcgf ;}else if _affbd ,_gabbe :=_fedc .PdfObject .(*_dc .PdfObjectName );_gabbe {_afba =_affbd ;};}else if _bbge ,_bcaef :=obj .(*_dc .PdfObjectArray );_bcaef {_gffc =_bbge ;}else if _ffba ,_cabc :=obj .(*_dc .PdfObjectName );_cabc {_afba =_ffba ;
};if _afba !=nil {switch *_afba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_afba ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_afba ,nil ;
};};if _gffc !=nil &&_gffc .Len ()> 0{if _dde ,_cfag :=_gffc .Get (0).(*_dc .PdfObjectName );_cfag {switch *_dde {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gffc .Len ()==1{return *_dde ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_dde ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_dde ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_dde ,nil ;};};};return "",nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_cbeac *Outline )ToPdfObject ()_dc .PdfObject {return _cbeac .ToPdfOutline ().ToPdfObject ()};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdffd pdfFontSimple )GetRuneMetrics (r rune )(_eb .CharMetrics ,bool ){if _fdffd ._afeeg !=nil {_eeeaa ,_ddcdd :=_fdffd ._afeeg .Read (r );if _ddcdd {return _eeeaa ,true ;};};_aedb :=_fdffd .Encoder ();if _aedb ==nil {_bg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdffd );
return _eb .CharMetrics {},false ;};_cdfb ,_bccfc :=_aedb .RuneToCharcode (r );if !_bccfc {if r !=' '{_bg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdffd );
};return _eb .CharMetrics {},false ;};_cfga ,_eggdb :=_fdffd .GetCharMetrics (_cdfb );return _cfga ,_eggdb ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_efa PdfModel ;Type _dc .PdfObject ;S _dc .PdfObject ;Next _dc .PdfObject ;_be *_dc .PdfIndirectObject ;};func (_abdgf *PdfReader )traverseObjectData (_gaede _dc .PdfObject )error {return _dc .ResolveReferencesDeep (_gaede ,_abdgf ._agde );
};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cdc :=NewPdfAction ();_ffg :=&PdfActionThread {};_ffg .PdfAction =_cdc ;_cdc .SetContext (_ffg );return _ffg ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ggbg *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_aabg :=_gab .NewReader (img .getBase ());_cabg :=_ea .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ggbg .AlternateSpace .GetNumComponents (),nil ,img ._cecag ,nil );
_gga :=_gab .NewWriter (_cabg );_fagde :=_ged .Pow (2,float64 (img .BitsPerComponent ))-1;_bg .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_bg .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ggbg .TintTransform );_gbgfd :=_ggbg .AlternateSpace .DecodeArray ();var (_bebd uint32 ;_bffa error ;);for {_bebd ,_bffa =_aabg .ReadSample ();
if _bffa ==_fa .EOF {break ;};if _bffa !=nil {return img ,_bffa ;};_ddbee :=float64 (_bebd )/_fagde ;_edfd ,_gbdd :=_ggbg .TintTransform .Evaluate ([]float64 {_ddbee });if _gbdd !=nil {return img ,_gbdd ;};for _dgcf ,_gbcdc :=range _edfd {_bgfe :=_ea .LinearInterpolate (_gbcdc ,_gbgfd [_dgcf *2],_gbgfd [_dgcf *2+1],0,1);
if _gbdd =_gga .WriteSample (uint32 (_bgfe *_fagde ));_gbdd !=nil {return img ,_gbdd ;};};};return _ggbg .AlternateSpace .ImageToRGB (_ggff (&_cabg ));};

// GetSubFilter returns SubFilter value or empty string.
func (_cfeea *pdfSignDictionary )GetSubFilter ()string {_dddge :=_cfeea .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dddge ==nil {return "";};if _baddc ,_ceecc :=_dc .GetNameVal (_dddge );_ceecc {return _baddc ;};return "";};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bcbea :=PdfWriter {};_bcbea ._bgadg =map[_dc .PdfObject ]struct{}{};_bcbea ._edfca =[]_dc .PdfObject {};_bcbea ._ebcdd =map[_dc .PdfObject ][]*_dc .PdfObjectDictionary {};_bcbea ._gbdcc =map[_dc .PdfObject ]struct{}{};_bcbea ._ebege =1;
_bcbea ._dbcce =3;_acege :=_dc .MakeDict ();_agdbd :=[]struct{_ffgaf _dc .PdfObjectName ;_adcde string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cecaae ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_egefg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_bgdda ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_agebb ()},{"\u0054\u0069\u0074l\u0065",_ccdcg ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_egffc ()}};
for _ ,_bcef :=range _agdbd {if _bcef ._adcde !=""{_acege .Set (_bcef ._ffgaf ,_dc .MakeString (_bcef ._adcde ));};};if _dbfca :=_fceca ();!_dbfca .IsZero (){if _aadec ,_ecbd :=NewPdfDateFromTime (_dbfca );_ecbd ==nil {_acege .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_aadec .ToPdfObject ());
};};if _beaef :=_cgdd ();!_beaef .IsZero (){if _edccd ,_afgdb :=NewPdfDateFromTime (_beaef );_afgdb ==nil {_acege .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_edccd .ToPdfObject ());};};_gdafff :=_dc .PdfIndirectObject {};_gdafff .PdfObject =_acege ;
_bcbea ._aefdcd =&_gdafff ;_bcbea .addObject (&_gdafff );_becgb :=_dc .PdfIndirectObject {};_feebee :=_dc .MakeDict ();_feebee .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_becgb .PdfObject =_feebee ;_bcbea ._deaaa =&_becgb ;
_bcbea .addObject (_bcbea ._deaaa );_egabg ,_cagc :=_fgebb ("\u0077");if _cagc !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cagc );};_bcbea ._egfgf =_egabg ;_agafg :=_dc .PdfIndirectObject {};_bdfab :=_dc .MakeDict ();_bdfab .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0050\u0061\u0067e\u0073"));
_adfbb :=_dc .PdfObjectArray {};_bdfab .Set ("\u004b\u0069\u0064\u0073",&_adfbb );_bdfab .Set ("\u0043\u006f\u0075n\u0074",_dc .MakeInteger (0));_agafg .PdfObject =_bdfab ;_bcbea ._eegbd =&_agafg ;_bcbea ._gfceb =map[_dc .PdfObject ]struct{}{};_bcbea .addObject (_bcbea ._eegbd );
_feebee .Set ("\u0050\u0061\u0067e\u0073",&_agafg );_bcbea ._dfecf =_feebee ;_bg .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_becgb );return _bcbea ;};func _cagfe (_aabb *_dc .PdfObjectDictionary )(*PdfFieldChoice ,error ){_degb :=&PdfFieldChoice {};
_degb .Opt ,_ =_dc .GetArray (_aabb .Get ("\u004f\u0070\u0074"));_degb .TI ,_ =_dc .GetInt (_aabb .Get ("\u0054\u0049"));_degb .I ,_ =_dc .GetArray (_aabb .Get ("\u0049"));return _degb ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_fgff *PdfPage )GetPageDict ()*_dc .PdfObjectDictionary {_faaae :=_fgff ._bgfa ;_faaae .Clear ();_faaae .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0050\u0061\u0067\u0065"));_faaae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fgff .Parent );
if _fgff .LastModified !=nil {_faaae .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fgff .LastModified .ToPdfObject ());};if _fgff .Resources !=nil {_faaae .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fgff .Resources .ToPdfObject ());
};if _fgff .CropBox !=nil {_faaae .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_fgff .CropBox .ToPdfObject ());};if _fgff .MediaBox !=nil {_faaae .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_fgff .MediaBox .ToPdfObject ());};if _fgff .BleedBox !=nil {_faaae .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_fgff .BleedBox .ToPdfObject ());
};if _fgff .TrimBox !=nil {_faaae .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_fgff .TrimBox .ToPdfObject ());};if _fgff .ArtBox !=nil {_faaae .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_fgff .ArtBox .ToPdfObject ());};_faaae .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_fgff .BoxColorInfo );
_faaae .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fgff .Contents );if _fgff .Rotate !=nil {_faaae .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_dc .MakeInteger (*_fgff .Rotate ));};_faaae .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fgff .Group );
_faaae .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_fgff .Thumb );_faaae .SetIfNotNil ("\u0042",_fgff .B );_faaae .SetIfNotNil ("\u0044\u0075\u0072",_fgff .Dur );_faaae .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fgff .Trans );_faaae .SetIfNotNil ("\u0041\u0041",_fgff .AA );
_faaae .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fgff .Metadata );_faaae .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fgff .PieceInfo );_faaae .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fgff .StructParents );
_faaae .SetIfNotNil ("\u0049\u0044",_fgff .ID );_faaae .SetIfNotNil ("\u0050\u005a",_fgff .PZ );_faaae .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_fgff .SeparationInfo );_faaae .SetIfNotNil ("\u0054\u0061\u0062\u0073",_fgff .Tabs );
_faaae .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_fgff .TemplateInstantiated );_faaae .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_fgff .PresSteps );_faaae .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_fgff .UserUnit );
_faaae .SetIfNotNil ("\u0056\u0050",_fgff .VP );if _fgff ._gbacf !=nil {_dbeda :=_dc .MakeArray ();for _ ,_aeefd :=range _fgff ._gbacf {if _fefd :=_aeefd .GetContext ();_fefd !=nil {_dbeda .Append (_fefd .ToPdfObject ());}else {_dbeda .Append (_aeefd .ToPdfObject ());
};};if _dbeda .Len ()> 0{_faaae .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_dbeda );};}else if _fgff .Annots !=nil {_faaae .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_fgff .Annots );};return _faaae ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dddeb pdfFontType3 )GetRuneMetrics (r rune )(_eb .CharMetrics ,bool ){_eebead :=_dddeb .Encoder ();if _eebead ==nil {_bg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dddeb );
return _eb .CharMetrics {},false ;};_eaefe ,_bdeeg :=_eebead .RuneToCharcode (r );if !_bdeeg {if r !=' '{_bg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dddeb );
};return _eb .CharMetrics {},false ;};_cgee ,_dbgdc :=_dddeb .GetCharMetrics (_eaefe );return _cgee ,_dbgdc ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_gedea *PdfAcroForm )GetContainingPdfObject ()_dc .PdfObject {return _gedea ._feaab };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_cccec fontCommon )asPdfObjectDictionary (_febba string )*_dc .PdfObjectDictionary {if _febba !=""&&_cccec ._dgdeb !=""&&_febba !=_cccec ._dgdeb {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_febba ,_cccec );
}else if _febba ==""&&_cccec ._dgdeb ==""{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cccec );
}else if _cccec ._dgdeb ==""{_cccec ._dgdeb =_febba ;};_cgcec :=_dc .MakeDict ();_cgcec .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0046\u006f\u006e\u0074"));_cgcec .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_dc .MakeName (_cccec ._bfbac ));
_cgcec .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName (_cccec ._dgdeb ));if _cccec ._dffc !=nil {_cgcec .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_cccec ._dffc .ToPdfObject ());};if _cccec ._effd !=nil {_cgcec .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cccec ._effd );
}else if _cccec ._dcgae !=nil {_bcfg ,_faac :=_cccec ._dcgae .Stream ();if _faac !=nil {_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_faac );
}else {_cgcec .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bcfg );};};return _cgcec ;};

// HasXObjectByName checks if has XObject resource by name.
func (_ebba *PdfPage )HasXObjectByName (name _dc .PdfObjectName )bool {_fcfgg ,_abdba :=_ebba .Resources .XObject .(*_dc .PdfObjectDictionary );if !_abdba {return false ;};if _ecab :=_fcfgg .Get (name );_ecab !=nil {return true ;};return false ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _dc .PdfObject ;Sy _dc .PdfObject ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _dc .PdfObject )(PdfColorspace ,error ){var _gddf *_dc .PdfIndirectObject ;var _bbb *_dc .PdfObjectName ;var _gcbb *_dc .PdfObjectArray ;if _bead ,_bcgf :=obj .(*_dc .PdfIndirectObject );_bcgf {_gddf =_bead ;};obj =_dc .TraceToDirectObject (obj );
switch _bfaf :=obj .(type ){case *_dc .PdfObjectArray :_gcbb =_bfaf ;case *_dc .PdfObjectName :_bbb =_bfaf ;};if _bbb !=nil {switch *_bbb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;
case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_bg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bbb );
return nil ,_fdea ;};};if _gcbb !=nil &&_gcbb .Len ()> 0{var _fafa _dc .PdfObject =_gddf ;if _gddf ==nil {_fafa =_gcbb ;};if _cffgd ,_acfc :=_dc .GetName (_gcbb .Get (0));_acfc {switch _cffgd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gcbb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;
};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gcbb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gcbb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _debbf (_fafa );
case "\u0043\u0061\u006c\u0052\u0047\u0042":return _dcfa (_fafa );case "\u004c\u0061\u0062":return _dgfg (_fafa );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _agaf (_fafa );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _fdfg (_fafa );
case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gggd (_fafa );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _ccbe (_fafa );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _faef (_fafa );default:_bg .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_cffgd );
};};};_bg .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gbecc *PdfShadingPattern )ToPdfObject ()_dc .PdfObject {_gbecc .PdfPattern .ToPdfObject ();_bdbgd :=_gbecc .getDict ();if _gbecc .Shading !=nil {_bdbgd .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gbecc .Shading .ToPdfObject ());};if _gbecc .Matrix !=nil {_bdbgd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gbecc .Matrix );
};if _gbecc .ExtGState !=nil {_bdbgd .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gbecc .ExtGState );};return _gbecc ._dbcag ;};

// G returns the value of the green component of the color.
func (_bacbd *PdfColorDeviceRGB )G ()float64 {return _bacbd [1]};var _fbfdd =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_afgb *PdfReader )newPdfAnnotationPopupFromDict (_gec *_dc .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_deed :=PdfAnnotationPopup {};_deed .Parent =_gec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_deed .Open =_gec .Get ("\u004f\u0070\u0065\u006e");
return &_deed ,nil ;};

// String implements interface PdfObject.
func (_fc *PdfAction )String ()string {_ce ,_ac :=_fc .ToPdfObject ().(*_dc .PdfIndirectObject );if _ac {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fc ._efa ,_ce .PdfObject .String ());};return "";};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_feacd *PdfReader )CheckAccessRights (password []byte )(bool ,_gef .Permissions ,error ){return _feacd ._ecead .CheckAccessRights (password );};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);func _dfcea (_gacbb *_dc .PdfObjectDictionary )(*PdfShadingType7 ,error ){_abffg :=PdfShadingType7 {};_cdcgd :=_gacbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cdcgd ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbfg ,_bcffa :=_cdcgd .(*_dc .PdfObjectInteger );if !_bcffa {_bg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdcgd );
return nil ,_dc .ErrTypeError ;};_abffg .BitsPerCoordinate =_cbfg ;_cdcgd =_gacbb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cdcgd ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cbfg ,_bcffa =_cdcgd .(*_dc .PdfObjectInteger );if !_bcffa {_bg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cdcgd );
return nil ,_dc .ErrTypeError ;};_abffg .BitsPerComponent =_cbfg ;_cdcgd =_gacbb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cdcgd ==nil {_bg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbfg ,_bcffa =_cdcgd .(*_dc .PdfObjectInteger );if !_bcffa {_bg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cdcgd );
return nil ,_dc .ErrTypeError ;};_abffg .BitsPerComponent =_cbfg ;_cdcgd =_gacbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cdcgd ==nil {_bg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efdcf ,_bcffa :=_cdcgd .(*_dc .PdfObjectArray );if !_bcffa {_bg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdcgd );
return nil ,_dc .ErrTypeError ;};_abffg .Decode =_efdcf ;if _ffaea :=_gacbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ffaea !=nil {_abffg .Function =[]PdfFunction {};if _bgebb ,_agbgc :=_ffaea .(*_dc .PdfObjectArray );_agbgc {for _ ,_acfe :=range _bgebb .Elements (){_fbeg ,_gefe :=_fcace (_acfe );
if _gefe !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gefe );return nil ,_gefe ;};_abffg .Function =append (_abffg .Function ,_fbeg );
};}else {_bgec ,_becdf :=_fcace (_ffaea );if _becdf !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_becdf );return nil ,_becdf ;
};_abffg .Function =append (_abffg .Function ,_bgec );};};return &_abffg ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dbaba *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dbaba .MediaBox !=nil {return _dbaba .MediaBox ,nil ;};_deafd :=_dbaba .Parent ;for _deafd !=nil {_feage ,_gecfb :=_dc .GetDict (_deafd );if !_gecfb {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _agda :=_feage .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_agda !=nil {_dgbcc ,_dcdd :=_dc .GetArray (_agda );if !_dcdd {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_adfac ,_eaegf :=NewPdfRectangle (*_dgbcc );if _eaegf !=nil {return nil ,_eaegf ;};return _adfac ,nil ;};_deafd =_feage .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fd .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func (_bffcc *PdfReader )resolveReference (_affaf *_dc .PdfObjectReference )(_dc .PdfObject ,bool ,error ){_bffaa ,_bbgc :=_bffcc ._ecead .ObjCache [int (_affaf .ObjectNumber )];if !_bbgc {_bg .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_affaf );
_ebaaa ,_afcgf :=_bffcc ._ecead .LookupByReference (*_affaf );if _afcgf !=nil {return nil ,false ,_afcgf ;};_bffcc ._ecead .ObjCache [int (_affaf .ObjectNumber )]=_ebaaa ;return _ebaaa ,false ,nil ;};return _bffaa ,true ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _dc .PdfObject ;Name _dc .PdfObject ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_ggdd DefaultImageHandler )Read (reader _fa .Reader )(*Image ,error ){_fdfe ,_ ,_cefac :=_af .Decode (reader );if _cefac !=nil {_bg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cefac );
return nil ,_cefac ;};return _ggdd .NewImageFromGoImage (_fdfe );};func _dgccf (_caabce *_dc .PdfObjectDictionary )(*PdfShadingType6 ,error ){_bdaeg :=PdfShadingType6 {};_bdfgf :=_caabce .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bdfgf ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bcgab ,_ggbdf :=_bdfgf .(*_dc .PdfObjectInteger );if !_ggbdf {_bg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdfgf );
return nil ,_dc .ErrTypeError ;};_bdaeg .BitsPerCoordinate =_bcgab ;_bdfgf =_caabce .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdfgf ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bcgab ,_ggbdf =_bdfgf .(*_dc .PdfObjectInteger );if !_ggbdf {_bg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdfgf );
return nil ,_dc .ErrTypeError ;};_bdaeg .BitsPerComponent =_bcgab ;_bdfgf =_caabce .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdfgf ==nil {_bg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bcgab ,_ggbdf =_bdfgf .(*_dc .PdfObjectInteger );if !_ggbdf {_bg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdfgf );
return nil ,_dc .ErrTypeError ;};_bdaeg .BitsPerComponent =_bcgab ;_bdfgf =_caabce .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdfgf ==nil {_bg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dagba ,_ggbdf :=_bdfgf .(*_dc .PdfObjectArray );if !_ggbdf {_bg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdfgf );
return nil ,_dc .ErrTypeError ;};_bdaeg .Decode =_dagba ;if _cdaee :=_caabce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cdaee !=nil {_bdaeg .Function =[]PdfFunction {};if _ecadg ,_eecgc :=_cdaee .(*_dc .PdfObjectArray );_eecgc {for _ ,_dgbcg :=range _ecadg .Elements (){_bcddg ,_edeec :=_fcace (_dgbcg );
if _edeec !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edeec );return nil ,_edeec ;};_bdaeg .Function =append (_bdaeg .Function ,_bcddg );
};}else {_cbfac ,_ebgegf :=_fcace (_cdaee );if _ebgegf !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgegf );return nil ,_ebgegf ;
};_bdaeg .Function =append (_bdaeg .Function ,_cbfac );};};return &_bdaeg ,nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_ecggf DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_afgc PdfModel ;Rect _dc .PdfObject ;Contents _dc .PdfObject ;P _dc .PdfObject ;NM _dc .PdfObject ;M _dc .PdfObject ;F _dc .PdfObject ;AP _dc .PdfObject ;AS _dc .PdfObject ;Border _dc .PdfObject ;C _dc .PdfObject ;StructParent _dc .PdfObject ;
OC _dc .PdfObject ;_cgcd *_dc .PdfIndirectObject ;};

// SetVersion sets the PDF version of the output file.
func (_ddacg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_ddacg ._ebege =majorVersion ;_ddacg ._dbcce =minorVersion ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_afdbf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_fgd .CharCode )(_ecga []rune ,_aeac ,_eaggg int ){_cbabc ,_aeac ,_eaggg :=_afdbf .CharcodesToStrings (charcodes );return []rune (_db .Join (_cbabc ,"")),_aeac ,_eaggg ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_cfgdd *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_fccd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _fccd .baseFields ()._dffc !=nil {return _fccd .baseFields ()._dffc ;};if _cbbc :=_fccd ._efeg .getFontDescriptor ();_cbbc !=nil {return _cbbc ;};_bg .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_fccd );
return nil ;};func _ceffe (_ccgb _dc .PdfObject )(*_dc .PdfObjectDictionary ,*fontCommon ,error ){_bcee :=&fontCommon {};if _fbgg ,_eecg :=_ccgb .(*_dc .PdfIndirectObject );_eecg {_bcee ._dbab =_fbgg .ObjectNumber ;};_bdcgb ,_ddeaf :=_dc .GetDict (_ccgb );
if !_ddeaf {_bg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ccgb );
return nil ,nil ,ErrFontNotSupported ;};_bced ,_ddeaf :=_dc .GetNameVal (_bdcgb .Get ("\u0054\u0079\u0070\u0065"));if !_ddeaf {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _bced !="\u0046\u006f\u006e\u0074"{_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_bced ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_dc .ErrTypeError ;};_bffd ,_ddeaf :=_dc .GetNameVal (_bdcgb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ddeaf {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_bcee ._dgdeb =_bffd ;_debfe ,_ddeaf :=_dc .GetNameVal (_bdcgb .Get ("\u004e\u0061\u006d\u0065"));if _ddeaf {_bcee ._ceee =_debfe ;};_fgagc :=_bdcgb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _fgagc !=nil {_bcee ._effd =_dc .TraceToDirectObject (_fgagc );
_baea ,_aegb :=_gege (_bcee ._effd ,_bcee );if _aegb !=nil {return _bdcgb ,_bcee ,_aegb ;};_bcee ._dcgae =_baea ;}else if _bffd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_bffd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_efgeg ,_eggb :=_bd .NewCIDSystemInfo (_bdcgb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _eggb !=nil {return _bdcgb ,_bcee ,_eggb ;};_cecb :=_a .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_efgeg .Registry ,_efgeg .Ordering );if _bd .IsPredefinedCMap (_cecb ){_bcee ._dcgae ,_eggb =_bd .LoadPredefinedCMap (_cecb );
if _eggb !=nil {_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cecb ,_eggb );
};};};_afgg :=_bdcgb .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _afgg !=nil {_aeegf ,_fggf :=_fbdff (_afgg );if _fggf !=nil {_bg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fggf );
return _bdcgb ,_bcee ,_fggf ;};_bcee ._dffc =_aeegf ;};if _bffd !="\u0054\u0079\u0070e\u0033"{_cgaac ,_dgdab :=_dc .GetNameVal (_bdcgb .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dgdab {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _bdcgb ,_bcee ,ErrRequiredAttributeMissing ;};_bcee ._bfbac =_cgaac ;};return _bdcgb ,_bcee ,nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _dc .PdfObject ;LE _dc .PdfObject ;BS _dc .PdfObject ;IC _dc .PdfObject ;BE _dc .PdfObject ;IT _dc .PdfObject ;Measure _dc .PdfObject ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_cebb *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_cebb ._aegad =colorspace ;};var _edfc =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_adbg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_bbag *DSS )addCRLs (_bcba [][]byte )([]*_dc .PdfObjectStream ,error ){return _bbag .add (&_bbag .CRLs ,_bbag ._afgag ,_bcba );};func (_acba *PdfSignature )extractChainFromCert ()([]*_dgd .Certificate ,error ){var _fcadf *_dc .PdfObjectArray ;
switch _effab :=_acba .Cert .(type ){case *_dc .PdfObjectString :_fcadf =_dc .MakeArray (_effab );case *_dc .PdfObjectArray :_fcadf =_effab ;default:return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_effab );
};var _ggaea _ffa .Buffer ;for _ ,_agefd :=range _fcadf .Elements (){_gcccb ,_cffeg :=_dc .GetString (_agefd );if !_cffeg {return nil ,_a .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_agefd );
};if _ ,_dddec :=_ggaea .Write (_gcccb .Bytes ());_dddec !=nil {return nil ,_dddec ;};};return _dgd .ParseCertificates (_ggaea .Bytes ());};

// PartialName returns the partial name of the field.
func (_cebf *PdfField )PartialName ()string {_dfaab :="";if _cebf .T !=nil {_dfaab =_cebf .T .Decoded ();}else {_bg .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _dfaab ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fbdg *PdfColorspaceDeviceGray )ToPdfObject ()_dc .PdfObject {return _dc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// SetPatternByName sets a pattern resource specified by keyName.
func (_fbaae *PdfPageResources )SetPatternByName (keyName _dc .PdfObjectName ,pattern _dc .PdfObject )error {if _fbaae .Pattern ==nil {_fbaae .Pattern =_dc .MakeDict ();};_ccege ,_edfbg :=_fbaae .Pattern .(*_dc .PdfObjectDictionary );if !_edfbg {return _dc .ErrTypeError ;
};_ccege .Set (keyName ,pattern );return nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_fdbfeg *PdfPageResources )GetColorspaceByName (keyName _dc .PdfObjectName )(PdfColorspace ,bool ){_eccga ,_fafbb :=_fdbfeg .GetColorspaces ();if _fafbb !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fafbb );
return nil ,false ;};if _eccga ==nil {return nil ,false ;};_egdgd ,_fccbce :=_eccga .Colorspaces [string (keyName )];if !_fccbce {return nil ,false ;};return _egdgd ,true ;};func _cfabg (_dbabb *_dc .PdfObjectStream )(*PdfFunctionType0 ,error ){_fdfdd :=&PdfFunctionType0 {};
_fdfdd ._fcbgc =_dbabb ;_eddeg :=_dbabb .PdfObjectDictionary ;_cacge ,_cbgf :=_dc .TraceToDirectObject (_eddeg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dc .PdfObjectArray );if !_cbgf {_bg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cacge .Len ()< 0||_cacge .Len ()%2!=0{_bg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fdfdd .NumInputs =_cacge .Len ()/2;_febfb ,_aead :=_cacge .ToFloat64Array ();if _aead !=nil {return nil ,_aead ;};_fdfdd .Domain =_febfb ;
_cacge ,_cbgf =_dc .TraceToDirectObject (_eddeg .Get ("\u0052\u0061\u006eg\u0065")).(*_dc .PdfObjectArray );if !_cbgf {_bg .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cacge .Len ()< 0||_cacge .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fdfdd .NumOutputs =_cacge .Len ()/2;_aeffd ,_aead :=_cacge .ToFloat64Array ();if _aead !=nil {return nil ,_aead ;
};_fdfdd .Range =_aeffd ;_cacge ,_cbgf =_dc .TraceToDirectObject (_eddeg .Get ("\u0053\u0069\u007a\u0065")).(*_dc .PdfObjectArray );if !_cbgf {_bg .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cfca ,_aead :=_cacge .ToIntegerArray ();
if _aead !=nil {return nil ,_aead ;};if len (_cfca )!=_fdfdd .NumInputs {_bg .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdfdd .Size =_cfca ;_ffebf ,_cbgf :=_dc .TraceToDirectObject (_eddeg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_dc .PdfObjectInteger );
if !_cbgf {_bg .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_ffebf !=1&&*_ffebf !=2&&*_ffebf !=4&&*_ffebf !=8&&*_ffebf !=12&&*_ffebf !=16&&*_ffebf !=24&&*_ffebf !=32{_bg .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_ffebf );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdfdd .BitsPerSample =int (*_ffebf );_fdfdd .Order =1;_abefe ,_cbgf :=_dc .TraceToDirectObject (_eddeg .Get ("\u004f\u0072\u0064e\u0072")).(*_dc .PdfObjectInteger );
if _cbgf {if *_abefe !=1&&*_abefe !=3{_bg .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_abefe );return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdfdd .Order =int (*_abefe );
};_cacge ,_cbgf =_dc .TraceToDirectObject (_eddeg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_dc .PdfObjectArray );if _cbgf {_deabb ,_ebca :=_cacge .ToFloat64Array ();if _ebca !=nil {return nil ,_ebca ;};_fdfdd .Encode =_deabb ;};_cacge ,_cbgf =_dc .TraceToDirectObject (_eddeg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_dc .PdfObjectArray );
if _cbgf {_bagcg ,_gbeeb :=_cacge .ToFloat64Array ();if _gbeeb !=nil {return nil ,_gbeeb ;};_fdfdd .Decode =_bagcg ;};_affe ,_aead :=_dc .DecodeStream (_dbabb );if _aead !=nil {return nil ,_aead ;};_fdfdd ._deeed =_affe ;return _fdfdd ,nil ;};func (_decdf *PdfReader )buildOutlineTree (_feebe _dc .PdfObject ,_abbde *PdfOutlineTreeNode ,_dacac *PdfOutlineTreeNode ,_acece map[_dc .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _acece ==nil {_acece =map[_dc .PdfObject ]struct{}{};
};_acece [_feebe ]=struct{}{};_gdaff ,_cdaea :=_feebe .(*_dc .PdfIndirectObject );if !_cdaea {return nil ,nil ,_a .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_feebe );
};_aaeca ,_degaac :=_gdaff .PdfObject .(*_dc .PdfObjectDictionary );if !_degaac {return nil ,nil ,_fd .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_aaeca ,_gdaff ,_gdaff );
if _ebdd :=_aaeca .Get ("\u0054\u0069\u0074l\u0065");_ebdd !=nil {_gbgfdb ,_ebcgb :=_decdf .newPdfOutlineItemFromIndirectObject (_gdaff );if _ebcgb !=nil {return nil ,nil ,_ebcgb ;};_gbgfdb .Parent =_abbde ;_gbgfdb .Prev =_dacac ;_gbefe :=_dc .ResolveReference (_aaeca .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cagfa :=_acece [_gbefe ];_gbefe !=nil &&_gbefe !=_gdaff &&!_cagfa {if !_dc .IsNullObject (_gbefe ){_eeba ,_gbadf ,_edcg :=_decdf .buildOutlineTree (_gbefe ,&_gbgfdb .PdfOutlineTreeNode ,nil ,_acece );if _edcg !=nil {_bg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_edcg );
}else {_gbgfdb .First =_eeba ;_gbgfdb .Last =_gbadf ;};};};_gagbag :=_dc .ResolveReference (_aaeca .Get ("\u004e\u0065\u0078\u0074"));if _ ,_aagg :=_acece [_gagbag ];_gagbag !=nil &&_gagbag !=_gdaff &&!_aagg {if !_dc .IsNullObject (_gagbag ){_gabeb ,_faacc ,_abfb :=_decdf .buildOutlineTree (_gagbag ,_abbde ,&_gbgfdb .PdfOutlineTreeNode ,_acece );
if _abfb !=nil {_bg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_abfb );
}else {_gbgfdb .Next =_gabeb ;return &_gbgfdb .PdfOutlineTreeNode ,_faacc ,nil ;};};};return &_gbgfdb .PdfOutlineTreeNode ,&_gbgfdb .PdfOutlineTreeNode ,nil ;};_gedfb ,_fbbce :=_ggbab (_gdaff );if _fbbce !=nil {return nil ,nil ,_fbbce ;};_gedfb .Parent =_abbde ;
if _bdfgg :=_aaeca .Get ("\u0046\u0069\u0072s\u0074");_bdfgg !=nil {_bdfgg =_dc .ResolveReference (_bdfgg );if _ ,_ddgg :=_acece [_bdfgg ];_bdfgg !=nil &&_bdfgg !=_gdaff &&!_ddgg {_cefe :=_dc .TraceToDirectObject (_bdfgg );if _ ,_effg :=_cefe .(*_dc .PdfObjectNull );
!_effg &&_cefe !=nil {_dcdfga ,_ddeee ,_bbbdb :=_decdf .buildOutlineTree (_bdfgg ,&_gedfb .PdfOutlineTreeNode ,nil ,_acece );if _bbbdb !=nil {_bg .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bbbdb );
}else {_gedfb .First =_dcdfga ;_gedfb .Last =_ddeee ;};};};};return &_gedfb .PdfOutlineTreeNode ,&_gedfb .PdfOutlineTreeNode ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_dc .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gegg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if _gegg .Alternate ==nil {if _gegg .N ==1{_baec :=NewPdfColorspaceDeviceGray ();return _baec .ColorFromPdfObjects (objects );}else if _gegg .N ==3{_feac :=NewPdfColorspaceDeviceRGB ();
return _feac .ColorFromPdfObjects (objects );}else if _gegg .N ==4{_efgb :=NewPdfColorspaceDeviceCMYK ();return _efgb .ColorFromPdfObjects (objects );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gegg .Alternate .ColorFromPdfObjects (objects );};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_geda *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_feab ,_ggcg :=color .(*PdfColorDeviceCMYK );if !_ggcg {_bg .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aggb :=_feab .C ();_aafc :=_feab .M ();_fdgec :=_feab .Y ();_fcbga :=_feab .K ();_aggb =_aggb *(1-_fcbga )+_fcbga ;_aafc =_aafc *(1-_fcbga )+_fcbga ;
_fdgec =_fdgec *(1-_fcbga )+_fcbga ;_fedga :=1-_aggb ;_eceb :=1-_aafc ;_eddbc :=1-_fdgec ;return NewPdfColorDeviceRGB (_fedga ,_eceb ,_eddbc ),nil ;};

// ToInteger convert to an integer format.
func (_cec *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ebdac :=_ged .Pow (2,float64 (bits ))-1;return uint32 (_ebdac *_cec .Val ());};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _dc .PdfObject ;Q _dc .PdfObject ;RC _dc .PdfObject ;DS _dc .PdfObject ;CL _dc .PdfObject ;IT _dc .PdfObject ;BE _dc .PdfObject ;RD _dc .PdfObject ;BS _dc .PdfObject ;LE _dc .PdfObject ;
};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_efce *PdfColorspaceLab )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bef ,_bggab :=_dc .GetNumbersAsFloat (objects );
if _bggab !=nil {return nil ,_bggab ;};return _efce .ColorFromFloats (_bef );};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cfcd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// SetOCProperties sets the optional content properties.
func (_cddbd *PdfWriter )SetOCProperties (ocProperties _dc .PdfObject )error {_bbee :=_cddbd ._dfecf ;if ocProperties !=nil {_bg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bbee .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cddbd .addObjects (ocProperties );};return nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_eb .StdFontName ;

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_dc .PdfObjectArray ;Domain *_dc .PdfObjectArray ;Function []PdfFunction ;Extend *_dc .PdfObjectArray ;};func (_fddcd *PdfReader )loadAnnotations (_fgfc _dc .PdfObject )([]*PdfAnnotation ,error ){_gbfcf ,_deage :=_dc .GetArray (_fgfc );
if !_deage {return nil ,_a .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _dcgad []*PdfAnnotation ;for _ ,_cbadb :=range _gbfcf .Elements (){_cbadb =_dc .ResolveReference (_cbadb );
if _ ,_fccdf :=_cbadb .(*_dc .PdfObjectNull );_fccdf {continue ;};_gefbd ,_gcafe :=_cbadb .(*_dc .PdfObjectDictionary );_ddcdg ,_abedd :=_cbadb .(*_dc .PdfIndirectObject );if _gcafe {_ddcdg =&_dc .PdfIndirectObject {};_ddcdg .PdfObject =_gefbd ;}else {if !_abedd {return nil ,_a .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_gffdg ,_cegd :=_fddcd .newPdfAnnotationFromIndirectObject (_ddcdg );if _cegd !=nil {return nil ,_cegd ;};switch _bfadb :=_gffdg .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_beea :=range _fddcd .AcroForm .AllFields (){if _beea ._fbaa ==_bfadb .Parent {_bfadb ._bea =_beea ;
break ;};};};if _gffdg !=nil {_dcgad =append (_dcgad ,_gffdg );};};return _dcgad ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aeba *PdfShadingType7 )ToPdfObject ()_dc .PdfObject {_aeba .PdfShading .ToPdfObject ();_ecddc ,_cbfacf :=_aeba .getShadingDict ();if _cbfacf !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aeba .BitsPerCoordinate !=nil {_ecddc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aeba .BitsPerCoordinate );};if _aeba .BitsPerComponent !=nil {_ecddc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aeba .BitsPerComponent );
};if _aeba .BitsPerFlag !=nil {_ecddc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_aeba .BitsPerFlag );};if _aeba .Decode !=nil {_ecddc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aeba .Decode );};if _aeba .Function !=nil {if len (_aeba .Function )==1{_ecddc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aeba .Function [0].ToPdfObject ());
}else {_dcaeb :=_dc .MakeArray ();for _ ,_abad :=range _aeba .Function {_dcaeb .Append (_abad .ToPdfObject ());};_ecddc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcaeb );};};return _aeba ._adbfg ;};func (_bad *PdfReader )newPdfActionLaunchFromDict (_ecb *_dc .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gdg ,_geff :=_adg (_ecb .Get ("\u0046"));
if _geff !=nil {return nil ,_geff ;};return &PdfActionLaunch {Win :_ecb .Get ("\u0057\u0069\u006e"),Mac :_ecb .Get ("\u004d\u0061\u0063"),Unix :_ecb .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ecb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gdg },nil ;
};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _dc .StreamEncoder ;Intent _dc .PdfObject ;ImageMask _dc .PdfObject ;Mask _dc .PdfObject ;Matte _dc .PdfObject ;Decode _dc .PdfObject ;Interpolate _dc .PdfObject ;Alternatives _dc .PdfObject ;
SMask _dc .PdfObject ;SMaskInData _dc .PdfObject ;Name _dc .PdfObject ;StructParent _dc .PdfObject ;ID _dc .PdfObject ;OPI _dc .PdfObject ;Metadata _dc .PdfObject ;OC _dc .PdfObject ;Stream []byte ;_gdfbe *_dc .PdfObjectStream ;};func (_dadca *Image )resampleLowBits (_cgcde []uint32 ){_feda :=_ea .BytesPerLine (int (_dadca .Width ),int (_dadca .BitsPerComponent ),_dadca .ColorComponents );
_gbdbe :=make ([]byte ,_dadca .ColorComponents *_feda *int (_dadca .Height ));_gebf :=int (_dadca .BitsPerComponent )*_dadca .ColorComponents *int (_dadca .Width );_degaa :=uint8 (8);var (_egbe ,_fgedg int ;_aadacc uint32 ;);for _dgcff :=0;_dgcff < int (_dadca .Height );
_dgcff ++{_fgedg =_dgcff *_feda ;for _dfdbf :=0;_dfdbf < _gebf ;_dfdbf ++{_aadacc =_cgcde [_egbe ];_degaa -=uint8 (_dadca .BitsPerComponent );_gbdbe [_fgedg ]|=byte (_aadacc )<<_degaa ;if _degaa ==0{_degaa =8;_fgedg ++;};_egbe ++;};};_dadca .Data =_gbdbe ;
};

// ToPdfObject implements interface PdfModel.
func (_facg *PdfAnnotationCircle )ToPdfObject ()_dc .PdfObject {_facg .PdfAnnotation .ToPdfObject ();_fbed :=_facg ._cgcd ;_edgf :=_fbed .PdfObject .(*_dc .PdfObjectDictionary );_facg .PdfAnnotationMarkup .appendToPdfDictionary (_edgf );_edgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_edgf .SetIfNotNil ("\u0042\u0053",_facg .BS );_edgf .SetIfNotNil ("\u0049\u0043",_facg .IC );_edgf .SetIfNotNil ("\u0042\u0045",_facg .BE );_edgf .SetIfNotNil ("\u0052\u0044",_facg .RD );return _fbed ;};func _gcee (_aeaa *PdfField ,_abbeb _dc .PdfObject )error {switch _aeaa .GetContext ().(type ){case *PdfFieldText :switch _fdgc :=_abbeb .(type ){case *_dc .PdfObjectName :_ebaed :=_fdgc ;
_bg .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ebaed .String ());
_aeaa .V =_dc .MakeEncodedString (_fdgc .String (),true );case *_dc .PdfObjectString :_aeaa .V =_dc .MakeEncodedString (_fdgc .String (),true );default:_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fdgc ,_fdgc );
};case *PdfFieldButton :switch _abbeb .(type ){case *_dc .PdfObjectName :if len (_abbeb .String ())> 0{_aeaa .V =_abbeb ;_dedf (_aeaa ,_abbeb );};case *_dc .PdfObjectString :if len (_abbeb .String ())> 0{_aeaa .V =_dc .MakeName (_abbeb .String ());_dedf (_aeaa ,_aeaa .V );
};default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aeaa .PartialName (),_abbeb );_aeaa .V =_abbeb ;};case *PdfFieldChoice :switch _abbeb .(type ){case *_dc .PdfObjectName :if len (_abbeb .String ())> 0{_aeaa .V =_dc .MakeString (_abbeb .String ());
_dedf (_aeaa ,_abbeb );};case *_dc .PdfObjectString :if len (_abbeb .String ())> 0{_aeaa .V =_abbeb ;_dedf (_aeaa ,_dc .MakeName (_abbeb .String ()));};default:_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aeaa .PartialName (),_abbeb );
_aeaa .V =_abbeb ;};case *PdfFieldSignature :_bg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_aeaa .PartialName (),_abbeb );
};return nil ;};

// String returns a string that describes `base`.
func (_egefb fontCommon )String ()string {return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_egefb .coreString ());};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gd :=NewPdfAction ();_ebd :=&PdfActionResetForm {};_ebd .PdfAction =_gd ;_gd .SetContext (_ebd );return _ebd ;};

// ToPdfObject converts rectangle to a PDF object.
func (_gacad *PdfRectangle )ToPdfObject ()_dc .PdfObject {return _dc .MakeArray (_dc .MakeFloat (_gacad .Llx ),_dc .MakeFloat (_gacad .Lly ),_dc .MakeFloat (_gacad .Urx ),_dc .MakeFloat (_gacad .Ury ));};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ecca *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fec :=NewPdfAnnotation ();_gce :=&PdfAnnotationHighlight {};_gce .PdfAnnotation =_fec ;_gce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fec .SetContext (_gce );return _gce ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_ffdc *PdfColorspaceICCBased )ToPdfObject ()_dc .PdfObject {_dbfb :=&_dc .PdfObjectArray {};_dbfb .Append (_dc .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _eeec *_dc .PdfObjectStream ;if _ffdc ._aebg !=nil {_eeec =_ffdc ._aebg ;
}else {_eeec =&_dc .PdfObjectStream {};};_ebabd :=_dc .MakeDict ();_ebabd .Set ("\u004e",_dc .MakeInteger (int64 (_ffdc .N )));if _ffdc .Alternate !=nil {_ebabd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_ffdc .Alternate .ToPdfObject ());};if _ffdc .Metadata !=nil {_ebabd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ffdc .Metadata );
};if _ffdc .Range !=nil {var _ggeg []_dc .PdfObject ;for _ ,_eeee :=range _ffdc .Range {_ggeg =append (_ggeg ,_dc .MakeFloat (_eeee ));};_ebabd .Set ("\u0052\u0061\u006eg\u0065",_dc .MakeArray (_ggeg ...));};_ebabd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dc .MakeInteger (int64 (len (_ffdc .Data ))));
_eeec .Stream =_ffdc .Data ;_eeec .PdfObjectDictionary =_ebabd ;_dbfb .Append (_eeec );if _ffdc ._fdbf !=nil {_ffdc ._fdbf .PdfObject =_dbfb ;return _ffdc ._fdbf ;};return _dbfb ;};

// ToPdfObject implements interface PdfModel.
func (_caa *PdfActionTrans )ToPdfObject ()_dc .PdfObject {_caa .PdfAction .ToPdfObject ();_fdg :=_caa ._be ;_fab :=_fdg .PdfObject .(*_dc .PdfObjectDictionary );_fab .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeTrans )));_fab .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_caa .Trans );
return _fdg ;};func (_abdb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_abdb .fontCommon };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_caab :=NewPdfAnnotation ();_aee :=&PdfAnnotation3D {};_aee .PdfAnnotation =_caab ;_caab .SetContext (_aee );return _aee ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _dc .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _dc .PdfObject ;Contents _dc .PdfObject ;
Rotate *int64 ;Group _dc .PdfObject ;Thumb _dc .PdfObject ;B _dc .PdfObject ;Dur _dc .PdfObject ;Trans _dc .PdfObject ;AA _dc .PdfObject ;Metadata _dc .PdfObject ;PieceInfo _dc .PdfObject ;StructParents _dc .PdfObject ;ID _dc .PdfObject ;PZ _dc .PdfObject ;
SeparationInfo _dc .PdfObject ;Tabs _dc .PdfObject ;TemplateInstantiated _dc .PdfObject ;PresSteps _dc .PdfObject ;UserUnit _dc .PdfObject ;VP _dc .PdfObject ;Annots _dc .PdfObject ;_gbacf []*PdfAnnotation ;_bgfa *_dc .PdfObjectDictionary ;_eeffa *_dc .PdfIndirectObject ;
_ffda *PdfReader ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_dc .PdfObjectInteger ;BitsPerComponent *_dc .PdfObjectInteger ;VerticesPerRow *_dc .PdfObjectInteger ;Decode *_dc .PdfObjectArray ;Function []PdfFunction ;};func _faef (_geaa _dc .PdfObject )(*PdfColorspaceDeviceN ,error ){_bgcd :=NewPdfColorspaceDeviceN ();
if _cbbf ,_edbd :=_geaa .(*_dc .PdfIndirectObject );_edbd {_bgcd ._fceec =_cbbf ;};_geaa =_dc .TraceToDirectObject (_geaa );_agebc ,_eaab :=_geaa .(*_dc .PdfObjectArray );if !_eaab {return nil ,_a .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _agebc .Len ()!=4&&_agebc .Len ()!=5{return nil ,_a .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_geaa =_agebc .Get (0);
_dbaa ,_eaab :=_geaa .(*_dc .PdfObjectName );if !_eaab {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dbaa !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_a .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_geaa =_agebc .Get (1);
_geaa =_dc .TraceToDirectObject (_geaa );_dgccd ,_eaab :=_geaa .(*_dc .PdfObjectArray );if !_eaab {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_bgcd .ColorantNames =_dgccd ;_geaa =_agebc .Get (2);_fbdgc ,_eefdc :=NewPdfColorspaceFromPdfObject (_geaa );if _eefdc !=nil {return nil ,_eefdc ;};_bgcd .AlternateSpace =_fbdgc ;_aacfbb ,_eefdc :=_fcace (_agebc .Get (3));if _eefdc !=nil {return nil ,_eefdc ;
};_bgcd .TintTransform =_aacfbb ;if _agebc .Len ()==5{_cbab ,_afebc :=_bedg (_agebc .Get (4));if _afebc !=nil {return nil ,_afebc ;};_bgcd .Attributes =_cbab ;};return _bgcd ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_abbg *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_abbg .HiVal )};};func (_cdgbc *PdfFunctionType0 )processSamples ()error {_aaaga :=_gab .ResampleBytes (_cdgbc ._deeed ,_cdgbc .BitsPerSample );_cdgbc ._bgcdbe =_aaaga ;
return nil ;};var _ _dc .PdfObject =&pdfSignDictionary {};func _fgbaf (_gbfba *_dc .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ddebb :=PdfShadingType5 {};_eacdf :=_gbfba .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eacdf ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gada ,_ddcfe :=_eacdf .(*_dc .PdfObjectInteger );if !_ddcfe {_bg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eacdf );
return nil ,_dc .ErrTypeError ;};_ddebb .BitsPerCoordinate =_gada ;_eacdf =_gbfba .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eacdf ==nil {_bg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gada ,_ddcfe =_eacdf .(*_dc .PdfObjectInteger );if !_ddcfe {_bg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eacdf );
return nil ,_dc .ErrTypeError ;};_ddebb .BitsPerComponent =_gada ;_eacdf =_gbfba .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _eacdf ==nil {_bg .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_gada ,_ddcfe =_eacdf .(*_dc .PdfObjectInteger );if !_ddcfe {_bg .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_eacdf );
return nil ,_dc .ErrTypeError ;};_ddebb .VerticesPerRow =_gada ;_eacdf =_gbfba .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eacdf ==nil {_bg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fdcbf ,_ddcfe :=_eacdf .(*_dc .PdfObjectArray );if !_ddcfe {_bg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eacdf );
return nil ,_dc .ErrTypeError ;};_ddebb .Decode =_fdcbf ;if _eccfc :=_gbfba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eccfc !=nil {_ddebb .Function =[]PdfFunction {};if _adbgg ,_bcgca :=_eccfc .(*_dc .PdfObjectArray );_bcgca {for _ ,_fbfc :=range _adbgg .Elements (){_gecff ,_gbdbd :=_fcace (_fbfc );
if _gbdbd !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbdbd );return nil ,_gbdbd ;};_ddebb .Function =append (_ddebb .Function ,_gecff );
};}else {_egdeg ,_edccf :=_fcace (_eccfc );if _edccf !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edccf );return nil ,_edccf ;
};_ddebb .Function =append (_ddebb .Function ,_egdeg );};};return &_ddebb ,nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_aggbff *PdfPage )GetContentStreams ()([]string ,error ){_eadg :=_aggbff .GetContentStreamObjs ();var _gggdd []string ;for _ ,_gaed :=range _eadg {_cdbef ,_gaaae :=_gcfbe (_gaed );if _gaaae !=nil {return nil ,_gaaae ;};_gggdd =append (_gggdd ,_cdbef );
};return _gggdd ,nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_cbfeb *PdfPageResources )HasFontByName (keyName _dc .PdfObjectName )bool {_ ,_cbgd :=_cbfeb .GetFontByName (keyName );return _cbgd ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_dc .PdfObjectInteger ;BitsPerComponent *_dc .PdfObjectInteger ;BitsPerFlag *_dc .PdfObjectInteger ;Decode *_dc .PdfObjectArray ;Function []PdfFunction ;};func _cffbc (_bdfb *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_bdfb }};


// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_egd :=NewPdfAnnotation ();_fce :=&PdfAnnotationFileAttachment {};_fce .PdfAnnotation =_egd ;_fce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egd .SetContext (_fce );return _fce ;};


// ToPdfObject recursively builds the Outline tree PDF object.
func (_bgagd *PdfOutlineItem )ToPdfObject ()_dc .PdfObject {_bggd :=_bgagd ._gagf ;_bcdceg :=_bggd .PdfObject .(*_dc .PdfObjectDictionary );_bcdceg .Set ("\u0054\u0069\u0074l\u0065",_bgagd .Title );if _bgagd .A !=nil {_bcdceg .Set ("\u0041",_bgagd .A );
};if _ddcf :=_bcdceg .Get ("\u0053\u0045");_ddcf !=nil {_bcdceg .Remove ("\u0053\u0045");};if _bgagd .C !=nil {_bcdceg .Set ("\u0043",_bgagd .C );};if _bgagd .Dest !=nil {_bcdceg .Set ("\u0044\u0065\u0073\u0074",_bgagd .Dest );};if _bgagd .F !=nil {_bcdceg .Set ("\u0046",_bgagd .F );
};if _bgagd .Count !=nil {_bcdceg .Set ("\u0043\u006f\u0075n\u0074",_dc .MakeInteger (*_bgagd .Count ));};if _bgagd .Next !=nil {_bcdceg .Set ("\u004e\u0065\u0078\u0074",_bgagd .Next .ToPdfObject ());};if _bgagd .First !=nil {_bcdceg .Set ("\u0046\u0069\u0072s\u0074",_bgagd .First .ToPdfObject ());
};if _bgagd .Prev !=nil {_bcdceg .Set ("\u0050\u0072\u0065\u0076",_bgagd .Prev .GetContext ().GetContainingPdfObject ());};if _bgagd .Last !=nil {_bcdceg .Set ("\u004c\u0061\u0073\u0074",_bgagd .Last .GetContext ().GetContainingPdfObject ());};if _bgagd .Parent !=nil {_bcdceg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgagd .Parent .GetContext ().GetContainingPdfObject ());
};return _bggd ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_eddbe *PdfPattern )IsTiling ()bool {return _eddbe .PatternType ==1};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_egcca SignatureValidationResult )String ()string {var _feeba _ffa .Buffer ;_feeba .WriteString (_a .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_egcca .Name ));if _egcca .Date ._geaba > 0{_feeba .WriteString (_a .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_egcca .Date .ToGoTime ().String ()));
}else {_feeba .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_egcca .Reason )> 0{_feeba .WriteString (_a .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_egcca .Reason ));
}else {_feeba .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_egcca .Location )> 0{_feeba .WriteString (_a .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_egcca .Location ));
}else {_feeba .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_egcca .ContactInfo )> 0{_feeba .WriteString (_a .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_egcca .ContactInfo ));
}else {_feeba .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_feeba .WriteString (_a .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_egcca .Fields )));
if _egcca .IsSigned {_feeba .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_feeba .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _egcca .IsVerified {_feeba .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_feeba .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _egcca .IsTrusted {_feeba .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_feeba .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_egcca .GeneralizedTime .IsZero (){_feeba .WriteString (_a .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_egcca .GeneralizedTime .String ()));};return _feeba .String ();};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_fbebd *PdfPageResources )GetContainingPdfObject ()_dc .PdfObject {return _fbebd ._bdgg };

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fadca *DSS )ToPdfObject ()_dc .PdfObject {_ffed :=_fadca ._addf .PdfObject .(*_dc .PdfObjectDictionary );_ffed .Clear ();_effc :=_dc .MakeDict ();for _eafab ,_facac :=range _fadca .VRI {_effc .Set (*_dc .MakeName (_eafab ),_facac .ToPdfObject ());
};_ffed .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_dbbbb (_fadca .Certs ));_ffed .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_dbbbb (_fadca .OCSPs ));_ffed .SetIfNotNil ("\u0043\u0052\u004c\u0073",_dbbbb (_fadca .CRLs ));_ffed .Set ("\u0056\u0052\u0049",_effc );
return _fadca ._addf ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_eaee *pdfFontSimple )ToPdfObject ()_dc .PdfObject {if _eaee ._babac ==nil {_eaee ._babac =&_dc .PdfIndirectObject {};};_dagca :=_eaee .baseFields ().asPdfObjectDictionary ("");_eaee ._babac .PdfObject =_dagca ;if _eaee .FirstChar !=nil {_dagca .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_eaee .FirstChar );
};if _eaee .LastChar !=nil {_dagca .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_eaee .LastChar );};if _eaee .Widths !=nil {_dagca .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_eaee .Widths );};if _eaee .Encoding !=nil {_dagca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eaee .Encoding );
}else if _eaee ._geecg !=nil {_gaacaa :=_eaee ._geecg .ToPdfObject ();if _gaacaa !=nil {_dagca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gaacaa );};};return _eaee ._babac ;};func (_accc *PdfAppender )updateObjectsDeep (_caad _dc .PdfObject ,_fecc map[_dc .PdfObject ]struct{}){if _fecc ==nil {_fecc =map[_dc .PdfObject ]struct{}{};
};if _ ,_baeb :=_fecc [_caad ];_baeb ||_caad ==nil {return ;};_fecc [_caad ]=struct{}{};_ddda :=_dc .ResolveReferencesDeep (_caad ,_accc ._abda );if _ddda !=nil {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddda );};switch _dfbd :=_caad .(type ){case *_dc .PdfIndirectObject :switch {case _dfbd .GetParser ()==_accc ._fcca ._ecead :return ;
case _dfbd .GetParser ()==_accc .Reader ._ecead :_fdff ,_ :=_accc ._fcca .GetIndirectObjectByNumber (int (_dfbd .ObjectNumber ));_gfgeb ,_gacce :=_fdff .(*_dc .PdfIndirectObject );if _gacce &&_gfgeb !=nil {if _gfgeb .PdfObject !=_dfbd .PdfObject &&_gfgeb .PdfObject .WriteString ()!=_dfbd .PdfObject .WriteString (){_accc .addNewObject (_caad );
_accc ._eggd [_caad ]=_dfbd .ObjectNumber ;};};default:_accc .addNewObject (_caad );};_accc .updateObjectsDeep (_dfbd .PdfObject ,_fecc );case *_dc .PdfObjectArray :for _ ,_edag :=range _dfbd .Elements (){_accc .updateObjectsDeep (_edag ,_fecc );};case *_dc .PdfObjectDictionary :for _ ,_ecff :=range _dfbd .Keys (){_accc .updateObjectsDeep (_dfbd .Get (_ecff ),_fecc );
};case *_dc .PdfObjectStreams :if _dfbd .GetParser ()!=_accc ._fcca ._ecead {for _ ,_gage :=range _dfbd .Elements (){_accc .updateObjectsDeep (_gage ,_fecc );};};case *_dc .PdfObjectStream :switch {case _dfbd .GetParser ()==_accc ._fcca ._ecead :return ;
case _dfbd .GetParser ()==_accc .Reader ._ecead :if _afa ,_bcda :=_accc ._fcca ._ecead .LookupByReference (_dfbd .PdfObjectReference );_bcda ==nil {var _eagb bool ;if _acef ,_gge :=_dc .GetStream (_afa );_gge &&_ffa .Equal (_acef .Stream ,_dfbd .Stream ){_eagb =true ;
};if _eege ,_cdba :=_dc .GetDict (_afa );_eagb &&_cdba {_eagb =_eege .WriteString ()==_dfbd .PdfObjectDictionary .WriteString ();};if _eagb {return ;};};if _dfbd .ObjectNumber !=0{_accc ._eggd [_caad ]=_dfbd .ObjectNumber ;};default:if _ ,_ggcb :=_accc ._efb [_caad ];
!_ggcb {_accc .addNewObject (_caad );};};_accc .updateObjectsDeep (_dfbd .PdfObjectDictionary ,_fecc );};};func _bgffb (_cade _dc .PdfObject )[]*_dc .PdfObjectStream {if _cade ==nil {return nil ;};_ababf ,_bfcbgb :=_dc .GetArray (_cade );if !_bfcbgb ||_ababf .Len ()==0{return nil ;
};_dgccg :=make ([]*_dc .PdfObjectStream ,0,_ababf .Len ());for _ ,_cdgc :=range _ababf .Elements (){if _fafd ,_edeag :=_dc .GetStream (_cdgc );_edeag {_dgccg =append (_dgccg ,_fafd );};};return _dgccg ;};func (_dcfd *PdfReader )newPdfAcroFormFromDict (_bcdce *_dc .PdfIndirectObject ,_bdgbca *_dc .PdfObjectDictionary )(*PdfAcroForm ,error ){_adgd :=NewPdfAcroForm ();
if _bcdce !=nil {_adgd ._feaab =_bcdce ;_bcdce .PdfObject =_dc .MakeDict ();};if _cdeg :=_bdgbca .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cdeg !=nil {_cfabb ,_egbd :=_dc .GetArray (_cdeg );if !_egbd {return nil ,_a .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cdeg );
};var _caee []*PdfField ;for _ ,_efgad :=range _cfabb .Elements (){_cdbad ,_bdfa :=_dc .GetIndirect (_efgad );if !_bdfa {if _ ,_ccdcff :=_efgad .(*_dc .PdfObjectNull );_ccdcff {_bg .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_bg .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_efgad );
return nil ,_a .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_afbc ,_deee :=_dcfd .newPdfFieldFromIndirectObject (_cdbad ,nil );
if _deee !=nil {return nil ,_deee ;};_bg .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_afbc );_caee =append (_caee ,_afbc );};_adgd .Fields =&_caee ;};if _bdbde :=_bdgbca .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_bdbde !=nil {_eacf ,_ggec :=_dc .GetBool (_bdbde );if _ggec {_adgd .NeedAppearances =_eacf ;}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bdbde );
};};if _cggb :=_bdgbca .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_cggb !=nil {_caefb ,_cccd :=_dc .GetInt (_cggb );if _cccd {_adgd .SigFlags =_caefb ;}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cggb );
};};if _dcfc :=_bdgbca .Get ("\u0043\u004f");_dcfc !=nil {_gcgbg ,_cfbg :=_dc .GetArray (_dcfc );if _cfbg {_adgd .CO =_gcgbg ;}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dcfc );
};};if _cdcda :=_bdgbca .Get ("\u0044\u0052");_cdcda !=nil {if _cddeb ,_bdde :=_dc .GetDict (_cdcda );_bdde {_fbfde ,_gaaa :=NewPdfPageResourcesFromDict (_cddeb );if _gaaa !=nil {_bg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_gaaa );
return nil ,_gaaa ;};_adgd .DR =_fbfde ;}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cdcda );};};if _gdag :=_bdgbca .Get ("\u0044\u0041");
_gdag !=nil {_edceg ,_bdgcag :=_dc .GetString (_gdag );if _bdgcag {_adgd .DA =_edceg ;}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gdag );
};};if _bbeb :=_bdgbca .Get ("\u0051");_bbeb !=nil {_ebcfg ,_gcdda :=_dc .GetInt (_bbeb );if _gcdda {_adgd .Q =_ebcfg ;}else {_bg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bbeb );
};};if _fagb :=_bdgbca .Get ("\u0058\u0046\u0041");_fagb !=nil {_adgd .XFA =_fagb ;};_adgd .ToPdfObject ();return _adgd ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bcdg *PdfWriter )SetOptimizer (optimizer Optimizer ){_bcdg ._ggfdc =optimizer };

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_aggbf *PdfColorspaceLab )ToPdfObject ()_dc .PdfObject {_fbae :=_dc .MakeArray ();_fbae .Append (_dc .MakeName ("\u004c\u0061\u0062"));_gcbf :=_dc .MakeDict ();if _aggbf .WhitePoint !=nil {_daad :=_dc .MakeArray (_dc .MakeFloat (_aggbf .WhitePoint [0]),_dc .MakeFloat (_aggbf .WhitePoint [1]),_dc .MakeFloat (_aggbf .WhitePoint [2]));
_gcbf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_daad );}else {_bg .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _aggbf .BlackPoint !=nil {_afce :=_dc .MakeArray (_dc .MakeFloat (_aggbf .BlackPoint [0]),_dc .MakeFloat (_aggbf .BlackPoint [1]),_dc .MakeFloat (_aggbf .BlackPoint [2]));_gcbf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_afce );
};if _aggbf .Range !=nil {_faed :=_dc .MakeArray (_dc .MakeFloat (_aggbf .Range [0]),_dc .MakeFloat (_aggbf .Range [1]),_dc .MakeFloat (_aggbf .Range [2]),_dc .MakeFloat (_aggbf .Range [3]));_gcbf .Set ("\u0052\u0061\u006eg\u0065",_faed );};_fbae .Append (_gcbf );
if _aggbf ._dbbc !=nil {_aggbf ._dbbc .PdfObject =_fbae ;return _aggbf ._dbbc ;};return _fbae ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_edadd *PdfPage )Duplicate ()*PdfPage {_ffage :=*_edadd ;_ffage ._bgfa =_dc .MakeDict ();_ffage ._eeffa =_dc .MakeIndirectObject (_ffage ._bgfa );return &_ffage ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _dc .PdfObject ;V _dc .PdfObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_dbec *PdfFont )SubsetRegistered ()error {switch _bedc :=_dbec ._efeg .(type ){case *pdfFontType0 :_efbg :=_bedc .subsetRegistered ();if _efbg !=nil {_bg .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_efbg );
return _efbg ;};if _bedc ._eeff !=nil {if _bedc ._efebb !=nil {_bedc ._efebb .ToPdfObject ();};_bedc .ToPdfObject ();};default:_bg .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bedc );
};return nil ;};

// ToInteger convert to an integer format.
func (_cabb *PdfColorCalGray )ToInteger (bits int )uint32 {_fdaf :=_ged .Pow (2,float64 (bits ))-1;return uint32 (_fdaf *_cabb .Val ());};func (_dgfgd *LTV )getOCSPs (_fafae []*_dgd .Certificate ,_gfab map[string ]*_dgd .Certificate )([][]byte ,error ){_ffaac :=make ([][]byte ,0,len (_fafae ));
for _ ,_egfd :=range _fafae {for _ ,_gcaa :=range _egfd .OCSPServer {if _dgfgd .CertClient .IsCA (_egfd ){continue ;};_fbef ,_baced :=_gfab [_egfd .Issuer .CommonName ];if !_baced {_bg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_acecf ,_aeffbg :=_dgfgd .OCSPClient .MakeRequest (_gcaa ,_egfd ,_fbef );if _aeffbg !=nil {_bg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_aeffbg );
continue ;};_ffaac =append (_ffaac ,_acecf );};};return _ffaac ,nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_dbege *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_bgage ,_egggb :=_dbege .GetMediaBox ();if _egggb !=nil {return _egggb ;};_cfbdd :=_bgage .Urx -_bgage .Llx ;_afbe :=_bgage .Ury -_bgage .Lly ;_ccbfg :=float64 (*ximg .Width );
_fbeae :=(_cfbdd -_ccbfg )/2;if opt .FitToWidth {_ccbfg =_cfbdd ;_fbeae =0;};_dfbda :=_afbe ;_bfadc :=float64 (0);if opt .PreserveAspectRatio {_dfbda =_ccbfg *float64 (*ximg .Height )/float64 (*ximg .Width );_bfadc =(_afbe -_dfbda )/2;};if _dbege .Resources ==nil {_dbege .Resources =NewPdfPageResources ();
};_efgbb :=0;_babce :=_dc .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_efgbb ));for _dbege .Resources .HasXObjectByName (_babce ){_efgbb ++;_babce =_dc .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_efgbb ));};_egggb =_dbege .AddImageResource (_babce ,ximg );
if _egggb !=nil {return _egggb ;};_efgbb =0;_gbfd :=_dc .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_efgbb ));for _dbege .HasExtGState (_gbfd ){_efgbb ++;_gbfd =_dc .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_efgbb ));};_agcda :=_dc .MakeDict ();
_agcda .Set ("\u0042\u004d",_dc .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_agcda .Set ("\u0043\u0041",_dc .MakeFloat (opt .Alpha ));_agcda .Set ("\u0063\u0061",_dc .MakeFloat (opt .Alpha ));_egggb =_dbege .AddExtGState (_gbfd ,_agcda );if _egggb !=nil {return _egggb ;
};_fdded :=_a .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gbfd ,_ccbfg ,_dfbda ,_fbeae ,_bfadc ,_babce );
_dbege .AddContentStreamByString (_fdded );return nil ;};func (_ddgeb *PdfShading )getShadingDict ()(*_dc .PdfObjectDictionary ,error ){_gegfb :=_ddgeb ._adbfg ;if _eagc ,_bdabf :=_gegfb .(*_dc .PdfIndirectObject );_bdabf {_dacc ,_cfbdf :=_eagc .PdfObject .(*_dc .PdfObjectDictionary );
if !_cfbdf {return nil ,_dc .ErrTypeError ;};return _dacc ,nil ;}else if _gadcc ,_adbag :=_gegfb .(*_dc .PdfObjectStream );_adbag {return _gadcc .PdfObjectDictionary ,nil ;}else if _eged ,_gfdce :=_gegfb .(*_dc .PdfObjectDictionary );_gfdce {return _eged ,nil ;
}else {_bg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_dc .ErrTypeError ;};};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gbccb *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gbccb ._aegad !=nil {return _gbccb ._aegad ,nil ;};if _gbccb .ColorSpace ==nil {return nil ,nil ;};_accgc ,_gafeg :=_dbgf (_gbccb .ColorSpace );if _gafeg !=nil {return nil ,_gafeg ;
};_gbccb ._aegad =_accgc ;return _gbccb ._aegad ,nil ;};func (_cfbd *PdfReader )newPdfAnnotation3DFromDict (_dcda *_dc .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fagcc :=PdfAnnotation3D {};_fagcc .T3DD =_dcda .Get ("\u0033\u0044\u0044");_fagcc .T3DV =_dcda .Get ("\u0033\u0044\u0056");
_fagcc .T3DA =_dcda .Get ("\u0033\u0044\u0041");_fagcc .T3DI =_dcda .Get ("\u0033\u0044\u0049");_fagcc .T3DB =_dcda .Get ("\u0033\u0044\u0042");return &_fagcc ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_bfcea *PdfPattern )GetContainingPdfObject ()_dc .PdfObject {return _bfcea ._dbcag };

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_bbaae .Lock ();defer _bbaae .Unlock ();_dggg =keywords };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fegfb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _dc .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_dc .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_egcff ,_deaac :=encoder .EncodeBytes (img .Data );
if _deaac !=nil {_bg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_deaac );return nil ,_deaac ;};_cdggb :=NewXObjectImage ();_fdaed :=img .Width ;_gafee :=img .Height ;
_cdggb .Width =&_fdaed ;_cdggb .Height =&_gafee ;_gagef :=img .BitsPerComponent ;_cdggb .BitsPerComponent =&_gagef ;_cdggb .Filter =encoder ;_cdggb .Stream =_egcff ;if cs ==nil {if img .ColorComponents ==1{_cdggb .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_cdggb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cdggb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_cdggb .ColorSpace =cs ;};if len (img ._cecag )!=0{_feef :=NewXObjectImage ();_feef .Filter =encoder ;_defge ,_bfbf :=encoder .EncodeBytes (img ._cecag );if _bfbf !=nil {_bg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bfbf );
return nil ,_bfbf ;};_feef .Stream =_defge ;_feef .BitsPerComponent =_cdggb .BitsPerComponent ;_feef .Width =&img .Width ;_feef .Height =&img .Height ;_feef .ColorSpace =NewPdfColorspaceDeviceGray ();_cdggb .SMask =_feef .ToPdfObject ();}else {_cdggb .SMask =xobjIn .SMask ;
_cdggb .ImageMask =xobjIn .ImageMask ;if _cdggb .ColorSpace .GetNumComponents ()==1{_cgad (_cdggb );};};return _cdggb ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_deeed []byte ;_bgcdbe []uint32 ;_fcbgc *_dc .PdfObjectStream ;};var _ggbeb =false ;


// GetXObjectByName gets XObject by name.
func (_dggc *PdfPage )GetXObjectByName (name _dc .PdfObjectName )(_dc .PdfObject ,bool ){_fcad ,_ceed :=_dggc .Resources .XObject .(*_dc .PdfObjectDictionary );if !_ceed {return nil ,false ;};if _cacgb :=_fcad .Get (name );_cacgb !=nil {return _cacgb ,true ;
};return nil ,false ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fbdfa *PdfFieldButton )IsRadio ()bool {return _fbdfa .GetType ()==ButtonTypeRadio };

// GetPdfInfo returns the PDF info dictionary.
func (_fbcbe *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_dgaeg :=PdfInfo {};_cdcb ,_fdcg :=_fbcbe .GetTrailer ();if _fdcg !=nil {return nil ,_fdcg ;};var _dggac *_dc .PdfObjectDictionary ;_dcaee :=_cdcb .Get ("\u0049\u006e\u0066\u006f");switch _gadd :=_dcaee .(type ){case *_dc .PdfObjectReference :_eadff :=_gadd ;
_dcaee ,_fdcg =_fbcbe .GetIndirectObjectByNumber (int (_eadff .ObjectNumber ));_dcaee =_dc .TraceToDirectObject (_dcaee );if _fdcg !=nil {return nil ,_fdcg ;};_dggac ,_ =_dcaee .(*_dc .PdfObjectDictionary );case *_dc .PdfObjectDictionary :_dggac =_gadd ;
};if _dggac ==nil {return nil ,_fd .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_ggcc :=range _dggac .Keys (){switch _ggcc {case "\u0054\u0069\u0074l\u0065":_dgaeg .Title ,_ =_dc .GetString (_dggac .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_dgaeg .Author ,_ =_dc .GetString (_dggac .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_dgaeg .Subject ,_ =_dc .GetString (_dggac .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_dgaeg .Keywords ,_ =_dc .GetString (_dggac .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_dgaeg .Creator ,_ =_dc .GetString (_dggac .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_dgaeg .Producer ,_ =_dc .GetString (_dggac .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_dgaeg .Trapped ,_ =_dc .GetName (_dggac .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _babfe ,_ceabf :=_dc .GetString (_dggac .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_ceabf &&_babfe .String ()!=""{_bgcdbea ,_edfeg :=NewPdfDate (_babfe .String ());
if _edfeg !=nil {return nil ,_edfeg ;};_dgaeg .CreationDate =&_bgcdbea ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _gbbfg ,_bgbdb :=_dc .GetString (_dggac .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bgbdb &&_gbbfg .String ()!=""{_bfgef ,_ebgb :=NewPdfDate (_gbbfg .String ());
if _ebgb !=nil {return nil ,_ebgb ;};_dgaeg .ModifiedDate =&_bfgef ;};default:_gffae ,_ :=_dc .GetString (_dggac .Get (_ggcc ));if _dgaeg ._bgcge ==nil {_dgaeg ._bgcge =_dc .MakeDict ();};_dgaeg ._bgcge .Set (_ggcc ,_gffae );};};return &_dgaeg ,nil ;};


// GetDescent returns the Descent of the font `descriptor`.
func (_fcfd *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _dc .GetNumberAsFloat (_fcfd .Descent );};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_dc .PdfObject ,error );};func (_ebe *PdfReader )newPdfActionGotoRFromDict (_eca *_dc .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bca ,_edf :=_adg (_eca .Get ("\u0046"));if _edf !=nil {return nil ,_edf ;
};return &PdfActionGoToR {D :_eca .Get ("\u0044"),NewWindow :_eca .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bca },nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ffgeg *PdfPageResources )GetFontByName (keyName _dc .PdfObjectName )(_dc .PdfObject ,bool ){if _ffgeg .Font ==nil {return nil ,false ;};_fbebc ,_cdfda :=_dc .TraceToDirectObject (_ffgeg .Font ).(*_dc .PdfObjectDictionary );if !_cdfda {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dc .TraceToDirectObject (_ffgeg .Font ));
return nil ,false ;};if _bgdd :=_fbebc .Get (keyName );_bgdd !=nil {return _bgdd ,true ;};return nil ,false ;};

// AddOutlineTree adds outlines to a PDF file.
func (_cacc *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_cacc ._fdccf =outlineTree };var _ pdfFont =(*pdfCIDFontType2 )(nil );func _gdge (_gaeb []byte )[]byte {const _agafe =52845;const _gccf =22719;_fgaaf :=55665;for _ ,_acced :=range _gaeb [:4]{_fgaaf =(int (_acced )+_fgaaf )*_agafe +_gccf ;
};_ffaag :=make ([]byte ,len (_gaeb )-4);for _agfgg ,_fadeb :=range _gaeb [4:]{_ffaag [_agfgg ]=byte (int (_fadeb )^_fgaaf >>8);_fgaaf =(int (_fadeb )+_fgaaf )*_agafe +_gccf ;};return _ffaag ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bfb :=NewPdfAnnotation ();_bgcb :=&PdfAnnotationRichMedia {};_bgcb .PdfAnnotation =_bfb ;_bfb .SetContext (_bgcb );return _bgcb ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _dc .PdfObject ;};

// ReplacePage replaces the original page to a new page.
func (_fegd *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_eagd :=pageNum -1;for _aegd :=range _fegd ._aebf {if _aegd ==_eagd {_ebbf :=page .Duplicate ();_befgf (_ebbf );_fegd ._aebf [_aegd ]=_ebbf ;};};};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_dc .PdfObjectArray ;};func _egda (_bcgff _dc .PdfObject ,_cccb *PdfReader )(*OutlineDest ,error ){_aeeec ,_bbcea :=_dc .GetArray (_bcgff );if !_bbcea {return nil ,_fd .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_gbbab :=_aeeec .Len ();if _gbbab < 2{return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gbbab );
};_daga :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_bdbdc :=_aeeec .Get (0);if _gbgdf ,_gfcb :=_dc .GetIndirect (_bdbdc );_gfcb {if _ ,_cfeag ,_dfbag :=_cccb .PageFromIndirectObject (_gbgdf );_dfbag ==nil {_daga .Page =int64 (_cfeag -1);}else {_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_gbgdf );
};_daga .PageObj =_gbgdf ;}else if _fbeb ,_cbdcd :=_dc .GetIntVal (_bdbdc );_cbdcd {if _fbeb >=0&&_fbeb < len (_cccb .PageList ){_daga .PageObj =_cccb .PageList [_fbeb ].GetPageAsIndirectObject ();}else {_bg .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_fbeb );
};_daga .Page =int64 (_fbeb );}else {return nil ,_a .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_bdbdc );};_eaba ,_bbcea :=_dc .GetNameVal (_aeeec .Get (1));
if !_bbcea {_bg .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aeeec .Get (1));
return _daga ,nil ;};switch _eaba {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gbbab > 2{_daga .Y ,_ =_dc .GetNumberAsFloat (_dc .TraceToDirectObject (_aeeec .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gbbab > 2{_daga .X ,_ =_dc .GetNumberAsFloat (_dc .TraceToDirectObject (_aeeec .Get (2)));
};case "\u0058\u0059\u005a":if _gbbab > 4{_daga .X ,_ =_dc .GetNumberAsFloat (_dc .TraceToDirectObject (_aeeec .Get (2)));_daga .Y ,_ =_dc .GetNumberAsFloat (_dc .TraceToDirectObject (_aeeec .Get (3)));_daga .Zoom ,_ =_dc .GetNumberAsFloat (_dc .TraceToDirectObject (_aeeec .Get (4)));
};default:_eaba ="\u0046\u0069\u0074";};_daga .Mode =_eaba ;return _daga ,nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _dc .PdfObject ;NewWindow _dc .PdfObject ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cbede *PdfPageResourcesColorspaces )Set (key _dc .PdfObjectName ,val PdfColorspace ){if _ ,_cfcg :=_cbede .Colorspaces [string (key )];!_cfcg {_cbede .Names =append (_cbede .Names ,string (key ));};_cbede .Colorspaces [string (key )]=val ;};func (_fcdcc *pdfFontType0 )bytesToCharcodes (_ddfef []byte )([]_fgd .CharCode ,bool ){if _fcdcc ._adfa ==nil {return nil ,false ;
};_begad ,_gcbe :=_fcdcc ._adfa .BytesToCharcodes (_ddfef );if !_gcbe {return nil ,false ;};_cabfe :=make ([]_fgd .CharCode ,len (_begad ));for _cebdg ,_egceg :=range _begad {_cabfe [_cebdg ]=_fgd .CharCode (_egceg );};return _cabfe ,true ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_geg :=NewPdfAction ();_fdf :=&PdfActionGoTo {};_fdf .PdfAction =_geg ;_geg .SetContext (_fdf );return _fdf ;};

// SetContext sets the sub action (context).
func (_ebb *PdfAction )SetContext (ctx PdfModel ){_ebb ._efa =ctx };

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfObject implements interface PdfModel.
func (_fdacg *PdfAnnotationTrapNet )ToPdfObject ()_dc .PdfObject {_fdacg .PdfAnnotation .ToPdfObject ();_cgcf :=_fdacg ._cgcd ;_dbg :=_cgcf .PdfObject .(*_dc .PdfObjectDictionary );_dbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cgcf ;};

// Initialize initializes the PdfSignature.
func (_gcbdeg *PdfSignature )Initialize ()error {if _gcbdeg .Handler ==nil {return _fd .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gcbdeg .Handler .InitSignature (_gcbdeg );};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _dc .PdfObject ;IsMap _dc .PdfObject ;};func _eacdd (_ddca _dc .PdfObject )(*PdfFunctionType2 ,error ){_aecdf :=&PdfFunctionType2 {};var _bebc *_dc .PdfObjectDictionary ;if _dbfd ,_fceg :=_ddca .(*_dc .PdfIndirectObject );
_fceg {_ggcgf ,_fadcg :=_dbfd .PdfObject .(*_dc .PdfObjectDictionary );if !_fadcg {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aecdf ._abeec =_dbfd ;_bebc =_ggcgf ;}else if _ffcff ,_dfac :=_ddca .(*_dc .PdfObjectDictionary );
_dfac {_bebc =_ffcff ;}else {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bg .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_bebc .String ());_deeg ,_fdbgg :=_dc .TraceToDirectObject (_bebc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dc .PdfObjectArray );
if !_fdbgg {_bg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _deeg .Len ()< 0||_deeg .Len ()%2!=0{_bg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ecfgg ,_bcdb :=_deeg .ToFloat64Array ();if _bcdb !=nil {return nil ,_bcdb ;};_aecdf .Domain =_ecfgg ;_deeg ,_fdbgg =_dc .TraceToDirectObject (_bebc .Get ("\u0052\u0061\u006eg\u0065")).(*_dc .PdfObjectArray );if _fdbgg {if _deeg .Len ()< 0||_deeg .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_efec ,_cecbg :=_deeg .ToFloat64Array ();if _cecbg !=nil {return nil ,_cecbg ;};_aecdf .Range =_efec ;};_deeg ,_fdbgg =_dc .TraceToDirectObject (_bebc .Get ("\u0043\u0030")).(*_dc .PdfObjectArray );if _fdbgg {_fadae ,_ddecf :=_deeg .ToFloat64Array ();
if _ddecf !=nil {return nil ,_ddecf ;};_aecdf .C0 =_fadae ;};_deeg ,_fdbgg =_dc .TraceToDirectObject (_bebc .Get ("\u0043\u0031")).(*_dc .PdfObjectArray );if _fdbgg {_ecebe ,_ecbf :=_deeg .ToFloat64Array ();if _ecbf !=nil {return nil ,_ecbf ;};_aecdf .C1 =_ecebe ;
};if len (_aecdf .C0 )!=len (_aecdf .C1 ){_bg .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_dc .ErrRangeError ;};N ,_bcdb :=_dc .GetNumberAsFloat (_dc .TraceToDirectObject (_bebc .Get ("\u004e")));
if _bcdb !=nil {_bg .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_bebc .String ());return nil ,_bcdb ;};_aecdf .N =N ;
return _aecdf ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_cbgcg *PdfPageResources )SetShadingByName (keyName _dc .PdfObjectName ,shadingObj _dc .PdfObject )error {if _cbgcg .Shading ==nil {_cbgcg .Shading =_dc .MakeDict ();};_daag ,_ceda :=_cbgcg .Shading .(*_dc .PdfObjectDictionary );if !_ceda {return _dc .ErrTypeError ;
};_daag .Set (keyName ,shadingObj );return nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _dc .PdfObject ;};

// SetDecode sets the decode image float slice.
func (_faga *Image )SetDecode (decode []float64 ){_faga ._bbde =decode };

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_feec *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func _bdbad ()*modelManager {_eafeg :=modelManager {};_eafeg ._ggaf =map[PdfModel ]_dc .PdfObject {};_eafeg ._cedc =map[_dc .PdfObject ]PdfModel {};return &_eafeg ;
};

// ToPdfObject implements interface PdfModel.
func (_eec *PdfAnnotationStrikeOut )ToPdfObject ()_dc .PdfObject {_eec .PdfAnnotation .ToPdfObject ();_fdgb :=_eec ._cgcd ;_dcc :=_fdgb .PdfObject .(*_dc .PdfObjectDictionary );_eec .PdfAnnotationMarkup .appendToPdfDictionary (_dcc );_dcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_dcc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eec .QuadPoints );return _fdgb ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _dc .PdfObject ;};

// ToPdfObject converts the font to a PDF representation.
func (_dbeca *pdfFontType3 )ToPdfObject ()_dc .PdfObject {if _dbeca ._dbac ==nil {_dbeca ._dbac =&_dc .PdfIndirectObject {};};_eaffe :=_dbeca .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_dbeca ._dbac .PdfObject =_eaffe ;if _dbeca .FirstChar !=nil {_eaffe .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_dbeca .FirstChar );
};if _dbeca .LastChar !=nil {_eaffe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_dbeca .LastChar );};if _dbeca .Widths !=nil {_eaffe .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_dbeca .Widths );};if _dbeca .Encoding !=nil {_eaffe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbeca .Encoding );
}else if _dbeca ._acgfe !=nil {_debbd :=_dbeca ._acgfe .ToPdfObject ();if _debbd !=nil {_eaffe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_debbd );};};if _dbeca .FontBBox !=nil {_eaffe .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dbeca .FontBBox );
};if _dbeca .FontMatrix !=nil {_eaffe .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_dbeca .FontMatrix );};if _dbeca .CharProcs !=nil {_eaffe .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_dbeca .CharProcs );};if _dbeca .Resources !=nil {_eaffe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dbeca .Resources );
};return _dbeca ._dbac ;};

// SetLocation sets the `Location` field of the signature.
func (_deca *PdfSignature )SetLocation (location string ){_deca .Location =_dc .MakeString (location )};func _cfgc (_bfgd *PdfPage )map[_dc .PdfObjectName ]_dc .PdfObject {_ebbe :=make (map[_dc .PdfObjectName ]_dc .PdfObject );if _bfgd .Resources ==nil {return _ebbe ;
};if _bfgd .Resources .Font !=nil {if _affb ,_cgbb :=_dc .GetDict (_bfgd .Resources .Font );_cgbb {for _ ,_cdea :=range _affb .Keys (){_ebbe [_cdea ]=_affb .Get (_cdea );};};};if _bfgd .Resources .ExtGState !=nil {if _gbfe ,_gag :=_dc .GetDict (_bfgd .Resources .ExtGState );
_gag {for _ ,_dgab :=range _gbfe .Keys (){_ebbe [_dgab ]=_gbfe .Get (_dgab );};};};if _bfgd .Resources .XObject !=nil {if _fegf ,_gfdg :=_dc .GetDict (_bfgd .Resources .XObject );_gfdg {for _ ,_abae :=range _fegf .Keys (){_ebbe [_abae ]=_fegf .Get (_abae );
};};};if _bfgd .Resources .Pattern !=nil {if _ffee ,_cgbf :=_dc .GetDict (_bfgd .Resources .Pattern );_cgbf {for _ ,_egef :=range _ffee .Keys (){_ebbe [_egef ]=_ffee .Get (_egef );};};};if _bfgd .Resources .Shading !=nil {if _bdee ,_geec :=_dc .GetDict (_bfgd .Resources .Shading );
_geec {for _ ,_eggdf :=range _bdee .Keys (){_ebbe [_eggdf ]=_bdee .Get (_eggdf );};};};if _bfgd .Resources .ProcSet !=nil {if _eece ,_afebd :=_dc .GetDict (_bfgd .Resources .ProcSet );_afebd {for _ ,_bffb :=range _eece .Keys (){_ebbe [_bffb ]=_eece .Get (_bffb );
};};};if _bfgd .Resources .Properties !=nil {if _bfee ,_fbee :=_dc .GetDict (_bfgd .Resources .Properties );_fbee {for _ ,_gfc :=range _bfee .Keys (){_ebbe [_gfc ]=_bfee .Get (_gfc );};};};return _ebbe ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_afgf *PdfPageResources )SetXObjectFormByName (keyName _dc .PdfObjectName ,xform *XObjectForm )error {_dgaa :=xform .ToPdfObject ().(*_dc .PdfObjectStream );_cfgdb :=_afgf .SetXObjectByName (keyName ,_dgaa );return _cfgdb ;};func _edbf (_fbff *_dc .PdfObjectArray )(float64 ,error ){_dedca ,_gbdeaa :=_fbff .ToFloat64Array ();
if _gbdeaa !=nil {_bg .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fbff ,_gbdeaa );};switch len (_dedca ){case 1:return _dedca [0],nil ;
case 3:_edcae :=PdfColorspaceDeviceRGB {};_acbgf ,_cgcbe :=_edcae .ColorFromFloats (_dedca );if _cgcbe !=nil {return 0.0,_cgcbe ;};return _acbgf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_efcee :=PdfColorspaceDeviceCMYK {};_gdggea ,_gfdeb :=_efcee .ColorFromFloats (_dedca );
if _gfdeb !=nil {return 0.0,_gfdeb ;};_ddfafg ,_gfdeb :=_efcee .ColorToRGB (_gdggea .(*PdfColorDeviceCMYK ));if _gfdeb !=nil {return 0.0,_gfdeb ;};return _ddfafg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_gbdeaa =_fd .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_bg .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fbff ,_gbdeaa );return 0.0,_gbdeaa ;};

// String returns the name of the colorspace (DeviceN).
func (_acbc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_bafc *PdfFont )CharcodesToUnicode (charcodes []_fgd .CharCode )[]rune {_deea ,_ ,_ :=_bafc .CharcodesToUnicodeWithStats (charcodes );return _deea ;};func (_fdgbd *XObjectImage )getParamsDict ()*_dc .PdfObjectDictionary {_edfeeg :=_dc .MakeDict ();
_edfeeg .Set ("\u0057\u0069\u0064t\u0068",_dc .MakeInteger (*_fdgbd .Width ));_edfeeg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_dc .MakeInteger (*_fdgbd .Height ));_edfeeg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_dc .MakeInteger (int64 (_fdgbd .ColorSpace .GetNumComponents ())));
_edfeeg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dc .MakeInteger (*_fdgbd .BitsPerComponent ));return _edfeeg ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_bbcaa *PdfSignature )bool ;Validate (_gdgaf *PdfSignature ,_fabg Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_agdb *PdfSignature )(Hasher ,error );Sign (_bgagg *PdfSignature ,_fefff Hasher )error ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_ceaa DefaultImageHandler )NewImageFromGoImage (goimg _af .Image )(*Image ,error ){_ggaa ,_dfgd :=_ea .FromGoImage (goimg );if _dfgd !=nil {return nil ,_dfgd ;};_edgg :=_ggff (_ggaa .Base ());return &_edgg ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_cac :=PdfColorDeviceRGB {r ,g ,b };return &_cac ;};func (_ceb *PdfReader )newPdfActionMovieFromDict (_gfg *_dc .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_gfg .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_gfg .Get ("\u0054"),Operation :_gfg .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};var (_bbaae _fg .Mutex ;_egced ="";_ggbed _g .Time ;_fbced ="";_dggg ="";_cgeca _g .Time ;_fceee ="";_cebdga ="";_dgbb ="";);

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_gdbbd *PdfReader )GetEncryptionMethod ()string {_cgcg :=_gdbbd ._ecead .GetCrypter ();return _cgcg .String ();};

// String returns a string describing the font descriptor.
func (_acfge *PdfFontDescriptor )String ()string {var _cecf []string ;if _acfge .FontName !=nil {_cecf =append (_cecf ,_acfge .FontName .String ());};if _acfge .FontFamily !=nil {_cecf =append (_cecf ,_acfge .FontFamily .String ());};if _acfge .fontFile !=nil {_cecf =append (_cecf ,_acfge .fontFile .String ());
};if _acfge ._ccbce !=nil {_cecf =append (_cecf ,_acfge ._ccbce .String ());};_cecf =append (_cecf ,_a .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_acfge .FontFile3 !=nil ));return _a .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_db .Join (_cecf ,"\u002c\u0020"));
};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_dc .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_dadf *_dc .PdfIndirectObject ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_gccb *PdfReader )GetTrailer ()(*_dc .PdfObjectDictionary ,error ){_gfdcf :=_gccb ._ecead .GetTrailer ();if _gfdcf ==nil {return nil ,_fd .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _gfdcf ,nil ;
};

// ToPdfObject returns a stream object.
func (_defb *XObjectForm )ToPdfObject ()_dc .PdfObject {_abeded :=_defb ._dgfed ;_dbcbgf :=_abeded .PdfObjectDictionary ;if _defb .Filter !=nil {_dbcbgf =_defb .Filter .MakeStreamDict ();_abeded .PdfObjectDictionary =_dbcbgf ;};_dbcbgf .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dbcbgf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0046\u006f\u0072\u006d"));_dbcbgf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_defb .FormType );_dbcbgf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_defb .BBox );
_dbcbgf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_defb .Matrix );if _defb .Resources !=nil {_dbcbgf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_defb .Resources .ToPdfObject ());};_dbcbgf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_defb .Group );
_dbcbgf .SetIfNotNil ("\u0052\u0065\u0066",_defb .Ref );_dbcbgf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_defb .MetaData );_dbcbgf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_defb .PieceInfo );_dbcbgf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_defb .LastModified );
_dbcbgf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_defb .StructParent );_dbcbgf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_defb .StructParents );_dbcbgf .SetIfNotNil ("\u004f\u0050\u0049",_defb .OPI );
_dbcbgf .SetIfNotNil ("\u004f\u0043",_defb .OC );_dbcbgf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_defb .Name );_dbcbgf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dc .MakeInteger (int64 (len (_defb .Stream ))));_abeded .Stream =_defb .Stream ;return _abeded ;
};

// GetCerts returns the signature certificate chain.
func (_fecef *PdfSignature )GetCerts ()([]*_dgd .Certificate ,error ){var _cffba []func ()([]*_dgd .Certificate ,error );switch _cabba ,_ :=_dc .GetNameVal (_fecef .SubFilter );_cabba {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_cffba =append (_cffba ,_fecef .extractChainFromPKCS7 ,_fecef .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_cffba =append (_cffba ,_fecef .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_cffba =append (_cffba ,_fecef .extractChainFromPKCS7 );
default:return nil ,_a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_cabba );};for _ ,_gaedc :=range _cffba {_dfabg ,_gffb :=_gaedc ();if _gffb !=nil {return nil ,_gffb ;
};if len (_dfabg )> 0{return _dfabg ,nil ;};};return nil ,ErrSignNoCertificates ;};

// SetContext set the sub annotation (context).
func (_ggge *PdfShading )SetContext (ctx PdfModel ){_ggge ._gggge =ctx };

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dadag *PdfPageResources )GetShadingByName (keyName _dc .PdfObjectName )(*PdfShading ,bool ){if _dadag .Shading ==nil {return nil ,false ;};_becf ,_bece :=_dc .TraceToDirectObject (_dadag .Shading ).(*_dc .PdfObjectDictionary );if !_bece {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dadag .Shading );
return nil ,false ;};if _bgcec :=_becf .Get (keyName );_bgcec !=nil {_bbafc ,_aecdfd :=_ddffc (_bgcec );if _aecdfd !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_aecdfd );
return nil ,false ;};return _bbafc ,true ;};return nil ,false ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_cfea *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gbab ,_dcce :=color .(*PdfColorCalGray );if !_dcce {_bg .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gbab .Val ();X :=_cfea .WhitePoint [0]*_ged .Pow (ANorm ,_cfea .Gamma );Y :=_cfea .WhitePoint [1]*_ged .Pow (ANorm ,_cfea .Gamma );
Z :=_cfea .WhitePoint [2]*_ged .Pow (ANorm ,_cfea .Gamma );_ccbca :=3.240479*X +-1.537150*Y +-0.498535*Z ;_beef :=-0.969256*X +1.875992*Y +0.041556*Z ;_fdfd :=0.055648*X +-0.204043*Y +1.057311*Z ;_ccbca =_ged .Min (_ged .Max (_ccbca ,0),1.0);_beef =_ged .Min (_ged .Max (_beef ,0),1.0);
_fdfd =_ged .Min (_ged .Max (_fdfd ,0),1.0);return NewPdfColorDeviceRGB (_ccbca ,_beef ,_fdfd ),nil ;};func _ggde (_dfdf ,_gead string )string {if _db .Contains (_dfdf ,"\u002b"){_gbbfd :=_db .Split (_dfdf ,"\u002b");if len (_gbbfd )==2{_dfdf =_gbbfd [1];
};};return _gead +"\u002b"+_dfdf ;};

// Val returns the value of the color.
func (_gbefd *PdfColorCalGray )Val ()float64 {return float64 (*_gbefd )};func (_eaff *PdfReader )newPdfAnnotationLinkFromDict (_daab *_dc .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bcea :=PdfAnnotationLink {};_bcea .A =_daab .Get ("\u0041");_bcea .Dest =_daab .Get ("\u0044\u0065\u0073\u0074");
_bcea .H =_daab .Get ("\u0048");_bcea .PA =_daab .Get ("\u0050\u0041");_bcea .QuadPoints =_daab .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bcea .BS =_daab .Get ("\u0042\u0053");return &_bcea ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_ggba *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// A returns the value of the A component of the color.
func (_accg *PdfColorLab )A ()float64 {return _accg [1]};

// ToPdfObject implements interface PdfModel.
func (_afdc *PdfActionJavaScript )ToPdfObject ()_dc .PdfObject {_afdc .PdfAction .ToPdfObject ();_bdgb :=_afdc ._be ;_fdd :=_bdgb .PdfObject .(*_dc .PdfObjectDictionary );_fdd .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeJavaScript )));_fdd .SetIfNotNil ("\u004a\u0053",_afdc .JS );
return _bdgb ;};

// Y returns the value of the yellow component of the color.
func (_abede *PdfColorDeviceCMYK )Y ()float64 {return _abede [2]};

// IsShading specifies if the pattern is a shading pattern.
func (_eadfb *PdfPattern )IsShading ()bool {return _eadfb .PatternType ==2};

// ToPdfObject implements interface PdfModel.
func (_gfd *PdfAnnotationPolygon )ToPdfObject ()_dc .PdfObject {_gfd .PdfAnnotation .ToPdfObject ();_beg :=_gfd ._cgcd ;_aeb :=_beg .PdfObject .(*_dc .PdfObjectDictionary );_gfd .PdfAnnotationMarkup .appendToPdfDictionary (_aeb );_aeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_aeb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gfd .Vertices );_aeb .SetIfNotNil ("\u004c\u0045",_gfd .LE );_aeb .SetIfNotNil ("\u0042\u0053",_gfd .BS );_aeb .SetIfNotNil ("\u0049\u0043",_gfd .IC );_aeb .SetIfNotNil ("\u0042\u0045",_gfd .BE );
_aeb .SetIfNotNil ("\u0049\u0054",_gfd .IT );_aeb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gfd .Measure );return _beg ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ddee *PdfColorspaceSpecialIndexed )ToPdfObject ()_dc .PdfObject {_adca :=_dc .MakeArray (_dc .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_adca .Append (_ddee .Base .ToPdfObject ());_adca .Append (_dc .MakeInteger (int64 (_ddee .HiVal )));
_adca .Append (_ddee .Lookup );if _ddee ._ddgf !=nil {_ddee ._ddgf .PdfObject =_adca ;return _ddee ._ddgf ;};return _adca ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_baee *PdfAppender )UpdateObject (obj _dc .PdfObject ){_baee .replaceObject (obj ,obj );if _ ,_gbffa :=_baee ._efb [obj ];!_gbffa {_baee ._gbga =append (_baee ._gbga ,obj );_baee ._efb [obj ]=struct{}{};};};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_daeaf *PdfPage )GetContentStreamObjs ()[]_dc .PdfObject {if _daeaf .Contents ==nil {return nil ;};_aaef :=_dc .TraceToDirectObject (_daeaf .Contents );if _dbbf ,_acbde :=_aaef .(*_dc .PdfObjectArray );_acbde {return _dbbf .Elements ();};return []_dc .PdfObject {_aaef };
};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_agde :map[_dc .PdfObject ]struct{}{},_abaeb :_bdbad (),_ecead :_dc .NewParserFromString (txt )};};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fbaa :_dc .MakeIndirectObject (_dc .MakeDict ())}};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _dc .PdfObject ;H _dc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cccg *PdfActionMovie )ToPdfObject ()_dc .PdfObject {_cccg .PdfAction .ToPdfObject ();_aab :=_cccg ._be ;_eeb :=_aab .PdfObject .(*_dc .PdfObjectDictionary );_eeb .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeMovie )));_eeb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_cccg .Annotation );
_eeb .SetIfNotNil ("\u0054",_cccg .T );_eeb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_cccg .Operation );return _aab ;};func _cecaae ()string {_bbaae .Lock ();defer _bbaae .Unlock ();_dbadf :=_bb .GetLicenseKey ();if len (_fceee )> 0&&(_dbadf .IsLicensed ()||_ggbeb ){return _fceee ;
};return _a .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cgeeg (),_dbadf .TypeToString ());};func (_aae *PdfReader )newPdfActionTransFromDict (_fafb *_dc .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_fafb .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func (_dbdd *PdfReader )lookupPageByObject (_dgffb _dc .PdfObject )(*PdfPage ,error ){return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ddeafd *PdfFontDescriptor )ToPdfObject ()_dc .PdfObject {_afdbc :=_dc .MakeDict ();if _ddeafd ._abbgg ==nil {_ddeafd ._abbgg =&_dc .PdfIndirectObject {};};_ddeafd ._abbgg .PdfObject =_afdbc ;_afdbc .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ddeafd .FontName !=nil {_afdbc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ddeafd .FontName );};if _ddeafd .FontFamily !=nil {_afdbc .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ddeafd .FontFamily );};if _ddeafd .FontStretch !=nil {_afdbc .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ddeafd .FontStretch );
};if _ddeafd .FontWeight !=nil {_afdbc .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ddeafd .FontWeight );};if _ddeafd .Flags !=nil {_afdbc .Set ("\u0046\u006c\u0061g\u0073",_ddeafd .Flags );};if _ddeafd .FontBBox !=nil {_afdbc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ddeafd .FontBBox );
};if _ddeafd .ItalicAngle !=nil {_afdbc .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ddeafd .ItalicAngle );};if _ddeafd .Ascent !=nil {_afdbc .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ddeafd .Ascent );};if _ddeafd .Descent !=nil {_afdbc .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ddeafd .Descent );
};if _ddeafd .Leading !=nil {_afdbc .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ddeafd .Leading );};if _ddeafd .CapHeight !=nil {_afdbc .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ddeafd .CapHeight );};if _ddeafd .XHeight !=nil {_afdbc .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ddeafd .XHeight );
};if _ddeafd .StemV !=nil {_afdbc .Set ("\u0053\u0074\u0065m\u0056",_ddeafd .StemV );};if _ddeafd .StemH !=nil {_afdbc .Set ("\u0053\u0074\u0065m\u0048",_ddeafd .StemH );};if _ddeafd .AvgWidth !=nil {_afdbc .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ddeafd .AvgWidth );
};if _ddeafd .MaxWidth !=nil {_afdbc .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ddeafd .MaxWidth );};if _ddeafd .MissingWidth !=nil {_afdbc .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ddeafd .MissingWidth );
};if _ddeafd .FontFile !=nil {_afdbc .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ddeafd .FontFile );};if _ddeafd .FontFile2 !=nil {_afdbc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ddeafd .FontFile2 );};if _ddeafd .FontFile3 !=nil {_afdbc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ddeafd .FontFile3 );
};if _ddeafd .CharSet !=nil {_afdbc .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ddeafd .CharSet );};if _ddeafd .Style !=nil {_afdbc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ddeafd .FontName );};if _ddeafd .Lang !=nil {_afdbc .Set ("\u004c\u0061\u006e\u0067",_ddeafd .Lang );
};if _ddeafd .FD !=nil {_afdbc .Set ("\u0046\u0044",_ddeafd .FD );};if _ddeafd .CIDSet !=nil {_afdbc .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ddeafd .CIDSet );};return _ddeafd ._abbgg ;};

// ToPdfObject returns a stream object.
func (_ddcb *XObjectImage )ToPdfObject ()_dc .PdfObject {_egdf :=_ddcb ._gdfbe ;_afdcc :=_egdf .PdfObjectDictionary ;if _ddcb .Filter !=nil {_afdcc =_ddcb .Filter .MakeStreamDict ();_egdf .PdfObjectDictionary =_afdcc ;};_afdcc .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_afdcc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0049\u006d\u0061g\u0065"));_afdcc .Set ("\u0057\u0069\u0064t\u0068",_dc .MakeInteger (*(_ddcb .Width )));_afdcc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_dc .MakeInteger (*(_ddcb .Height )));
if _ddcb .BitsPerComponent !=nil {_afdcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dc .MakeInteger (*(_ddcb .BitsPerComponent )));};if _ddcb .ColorSpace !=nil {_afdcc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ddcb .ColorSpace .ToPdfObject ());
};_afdcc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ddcb .Intent );_afdcc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ddcb .ImageMask );_afdcc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ddcb .Mask );_eacb :=_afdcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _ddcb .Decode ==nil &&_eacb {_afdcc .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ddcb .Decode !=nil {_afdcc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ddcb .Decode );};_afdcc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ddcb .Interpolate );
_afdcc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ddcb .Alternatives );_afdcc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ddcb .SMask );_afdcc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ddcb .SMaskInData );
_afdcc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ddcb .Matte );_afdcc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ddcb .Name );_afdcc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ddcb .StructParent );_afdcc .SetIfNotNil ("\u0049\u0044",_ddcb .ID );
_afdcc .SetIfNotNil ("\u004f\u0050\u0049",_ddcb .OPI );_afdcc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ddcb .Metadata );_afdcc .SetIfNotNil ("\u004f\u0043",_ddcb .OC );_afdcc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dc .MakeInteger (int64 (len (_ddcb .Stream ))));
_egdf .Stream =_ddcb .Stream ;return _egdf ;};func (_cecbgd *PdfWriter )writeBytes (_fdce []byte ){if _cecbgd ._fafdf !=nil {return ;};_dccbc ,_fafe :=_cecbgd ._becbf .Write (_fdce );_cecbgd ._agdaa +=int64 (_dccbc );_cecbgd ._fafdf =_fafe ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_gagba *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _gagba .UnderlyingCS .GetNumComponents ();};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gdbdb *PdfWriter )SetPageLabels (pageLabels _dc .PdfObject )error {if pageLabels ==nil {return nil ;};_bg .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_gdbdb ._dfecf .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _gdbdb .addObjects (pageLabels );};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_cecag []byte ;_bbde []float64 ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _dc .PdfObject ;Mac _dc .PdfObject ;Unix _dc .PdfObject ;NewWindow _dc .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dcfeb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ffadb *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cdce *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_bbccee :=&PdfColorPattern {};_gefb ,_bega :=objects [len (objects )-1].(*_dc .PdfObjectName );if !_bega {_bg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_bbccee .PatternName =*_gefb ;if len (objects )> 1{_daaef :=objects [0:len (objects )-1];if _cdce .UnderlyingCS ==nil {_bg .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_fgga ,_efgc :=_cdce .UnderlyingCS .ColorFromPdfObjects (_daaef );if _efgc !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_efgc );
return nil ,_efgc ;};_bbccee .Color =_fgga ;};return _bbccee ,nil ;};func (_eaefg *PdfReader )newPdfOutlineItemFromIndirectObject (_ecdbc *_dc .PdfIndirectObject )(*PdfOutlineItem ,error ){_deecb ,_egeae :=_ecdbc .PdfObject .(*_dc .PdfObjectDictionary );
if !_egeae {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_abab :=NewPdfOutlineItem ();_aaadf :=_deecb .Get ("\u0054\u0069\u0074l\u0065");
if _aaadf ==nil {return nil ,_a .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_bdbef ,_febce :=_dc .GetString (_aaadf );if !_febce {return nil ,_a .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_aaadf );};_abab .Title =_bdbef ;if _fffab :=_deecb .Get ("\u0043\u006f\u0075n\u0074");
_fffab !=nil {_gdcde ,_eadbe :=_fffab .(*_dc .PdfObjectInteger );if !_eadbe {return nil ,_a .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fffab );};_dgcbe :=int64 (*_gdcde );
_abab .Count =&_dgcbe ;};if _geeb :=_deecb .Get ("\u0044\u0065\u0073\u0074");_geeb !=nil {_abab .Dest =_dc .ResolveReference (_geeb );if !_eaefg ._egfdf {_acad :=_eaefg .traverseObjectData (_abab .Dest );if _acad !=nil {return nil ,_acad ;};};};if _faadb :=_deecb .Get ("\u0041");
_faadb !=nil {_abab .A =_dc .ResolveReference (_faadb );if !_eaefg ._egfdf {_cfeb :=_eaefg .traverseObjectData (_abab .A );if _cfeb !=nil {return nil ,_cfeb ;};};};if _aadbc :=_deecb .Get ("\u0053\u0045");_aadbc !=nil {_abab .SE =nil ;};if _gcgcd :=_deecb .Get ("\u0043");
_gcgcd !=nil {_abab .C =_dc .ResolveReference (_gcgcd );};if _cbbac :=_deecb .Get ("\u0046");_cbbac !=nil {_abab .F =_dc .ResolveReference (_cbbac );};return _abab ,nil ;};func _cbedb (_dafc *_dc .PdfObjectDictionary )(*PdfShadingPattern ,error ){_egfff :=&PdfShadingPattern {};
_cbbbd :=_dafc .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _cbbbd ==nil {_bg .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eagda ,_cccef :=_ddffc (_cbbbd );
if _cccef !=nil {_bg .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_cccef );return nil ,_cccef ;};_egfff .Shading =_eagda ;if _dfgga :=_dafc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_dfgga !=nil {_bcebb ,_ddfaf :=_dfgga .(*_dc .PdfObjectArray );if !_ddfaf {_bg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfgga );
return nil ,_dc .ErrTypeError ;};_egfff .Matrix =_bcebb ;};if _degaf :=_dafc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_degaf !=nil {_egfff .ExtGState =_degaf ;};return _egfff ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dbcf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _abgcg ,_afecb :=range _dbcf ._cecag {_dbcf ._cecag [_abgcg ]=mapFunc (_afecb );};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eagcc *PdfShading )ToPdfObject ()_dc .PdfObject {_gfeb :=_eagcc ._adbfg ;_aacdba ,_agdeg :=_eagcc .getShadingDict ();if _agdeg !=nil {_bg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eagcc .ShadingType !=nil {_aacdba .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eagcc .ShadingType );};if _eagcc .ColorSpace !=nil {_aacdba .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eagcc .ColorSpace .ToPdfObject ());
};if _eagcc .Background !=nil {_aacdba .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_eagcc .Background );};if _eagcc .BBox !=nil {_aacdba .Set ("\u0042\u0042\u006f\u0078",_eagcc .BBox .ToPdfObject ());};if _eagcc .AntiAlias !=nil {_aacdba .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_eagcc .AntiAlias );
};return _gfeb ;};

// GetPage returns the PdfPage model for the specified page number.
func (_fcfge *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fcfge ._ecead .GetCrypter ()!=nil &&!_fcfge ._ecead .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_fcfge ._eebef )< pageNumber {return nil ,_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_febfc :=pageNumber -1;if _febfc < 0{return nil ,_a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_afca :=_fcfge .PageList [_febfc ];
return _afca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dddcg *PdfSignature )ToPdfObject ()_dc .PdfObject {_aefb :=_dddcg ._acbgc ;var _bdggb *_dc .PdfObjectDictionary ;if _ebaab ,_efdfd :=_aefb .PdfObject .(*pdfSignDictionary );_efdfd {_bdggb =_ebaab .PdfObjectDictionary ;}else {_bdggb =_aefb .PdfObject .(*_dc .PdfObjectDictionary );
};_bdggb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dddcg .Type );_bdggb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_dddcg .Filter );_bdggb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_dddcg .SubFilter );_bdggb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dddcg .ByteRange );
_bdggb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dddcg .Contents );_bdggb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_dddcg .Cert );_bdggb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dddcg .Name );_bdggb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_dddcg .Reason );
_bdggb .SetIfNotNil ("\u004d",_dddcg .M );_bdggb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_dddcg .Reference );_bdggb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_dddcg .Changes );_bdggb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_dddcg .ContactInfo );
return _aefb ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_begb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _agac []float64 ;for _fgeg :=0;_fgeg < _begb .GetNumComponents ();_fgeg ++{_agac =append (_agac ,0.0,1.0);};return _agac ;};func _defd (_eeda []byte )([]byte ,error ){_gagga :=_cf .New ();
if _ ,_fbfg :=_fa .Copy (_gagga ,_ffa .NewReader (_eeda ));_fbfg !=nil {return nil ,_fbfg ;};return _gagga .Sum (nil ),nil ;};func (_bgag *PdfReader )newPdfFieldSignatureFromDict (_fagf *_dc .PdfObjectDictionary )(*PdfFieldSignature ,error ){_fecad :=&PdfFieldSignature {};
_aegde ,_fbecf :=_dc .GetIndirect (_fagf .Get ("\u0056"));if _fbecf {var _fcaec error ;_fecad .V ,_fcaec =_bgag .newPdfSignatureFromIndirect (_aegde );if _fcaec !=nil {return nil ,_fcaec ;};};_fecad .Lock ,_ =_dc .GetIndirect (_fagf .Get ("\u004c\u006f\u0063\u006b"));
_fecad .SV ,_ =_dc .GetIndirect (_fagf .Get ("\u0053\u0056"));return _fecad ,nil ;};func (_fece *PdfReader )newPdfAnnotationCaretFromDict (_accd *_dc .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_cbce :=PdfAnnotationCaret {};_ebdb ,_fdbcc :=_fece .newPdfAnnotationMarkupFromDict (_accd );
if _fdbcc !=nil {return nil ,_fdbcc ;};_cbce .PdfAnnotationMarkup =_ebdb ;_cbce .RD =_accd .Get ("\u0052\u0044");_cbce .Sy =_accd .Get ("\u0053\u0079");return &_cbce ,nil ;};func (_bggf *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ccafa *_dc .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_fge :=PdfAnnotationFileAttachment {};
_cbda ,_aacf :=_bggf .newPdfAnnotationMarkupFromDict (_ccafa );if _aacf !=nil {return nil ,_aacf ;};_fge .PdfAnnotationMarkup =_cbda ;_fge .FS =_ccafa .Get ("\u0046\u0053");_fge .Name =_ccafa .Get ("\u004e\u0061\u006d\u0065");return &_fge ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ggfb *PdfRectangle )Normalize (){if _ggfb .Llx > _ggfb .Urx {_ggfb .Llx ,_ggfb .Urx =_ggfb .Urx ,_ggfb .Llx ;};if _ggfb .Lly > _ggfb .Ury {_ggfb .Lly ,_ggfb .Ury =_ggfb .Ury ,_ggfb .Lly ;};};func (_aegfb *PdfWriter )copyObjects (){_fbgef :=make (map[_dc .PdfObject ]_dc .PdfObject );
_ffbad :=make ([]_dc .PdfObject ,0,len (_aegfb ._edfca ));_aadeg :=make (map[_dc .PdfObject ]struct{},len (_aegfb ._edfca ));_ecdbcc :=make (map[_dc .PdfObject ]struct{});for _ ,_fdfgg :=range _aegfb ._edfca {_fbggc :=_aegfb .copyObject (_fdfgg ,_fbgef ,_ecdbcc ,false );
if _ ,_cbbcb :=_ecdbcc [_fdfgg ];_cbbcb {continue ;};_ffbad =append (_ffbad ,_fbggc );_aadeg [_fbggc ]=struct{}{};};_aegfb ._edfca =_ffbad ;_aegfb ._bgadg =_aadeg ;_aegfb ._aefdcd =_aegfb .copyObject (_aegfb ._aefdcd ,_fbgef ,nil ,false ).(*_dc .PdfIndirectObject );
_aegfb ._deaaa =_aegfb .copyObject (_aegfb ._deaaa ,_fbgef ,nil ,false ).(*_dc .PdfIndirectObject );if _aegfb ._edaea !=nil {_aegfb ._edaea =_aegfb .copyObject (_aegfb ._edaea ,_fbgef ,nil ,false ).(*_dc .PdfIndirectObject );};if _aegfb ._gcbbg {_bbdgd :=make (map[_dc .PdfObject ]int64 );
for _eggfa ,_aegff :=range _aegfb ._afgbd {if _gdba ,_edgdg :=_fbgef [_eggfa ];_edgdg {_bbdgd [_gdba ]=_aegff ;}else {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_aegfb ._afgbd =_bbdgd ;};};

// GetContentStream returns the pattern cell's content stream
func (_aebcf *PdfTilingPattern )GetContentStream ()([]byte ,error ){_abbdc ,_ ,_bbdfc :=_aebcf .GetContentStreamWithEncoder ();return _abbdc ,_bbdfc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ceab *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacf :=vals [0];if _cacf < 0.0||_cacf > 100.0{_bg .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cacf );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbde :=vals [1];_abedea :=float64 (-100);_dagb :=float64 (100);if len (_ceab .Range )> 1{_abedea =_ceab .Range [0];_dagb =_ceab .Range [1];};if _cfbde < _abedea ||_cfbde > _dagb {_bg .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cfbde ,_abedea ,_dagb );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbfa :=vals [2];_ffbb :=float64 (-100);_bcgc :=float64 (100);if len (_ceab .Range )> 3{_ffbb =_ceab .Range [2];_bcgc =_ceab .Range [3];};if _bcbfa < _ffbb ||_bcbfa > _bcgc {_bg .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bcbfa ,_ffbb ,_bcgc );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fadfg :=NewPdfColorLab (_cacf ,_cfbde ,_bcbfa );return _fadfg ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edbe *PdfColorspaceSpecialPattern )ToPdfObject ()_dc .PdfObject {if _edbe .UnderlyingCS ==nil {return _dc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_fffg :=_dc .MakeArray (_dc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fffg .Append (_edbe .UnderlyingCS .ToPdfObject ());
if _edbe ._dgeb !=nil {_edbe ._dgeb .PdfObject =_fffg ;return _edbe ._dgeb ;};return _fffg ;};

// ToPdfObject implements interface PdfModel.
func (_adac *PdfAnnotationRedact )ToPdfObject ()_dc .PdfObject {_adac .PdfAnnotation .ToPdfObject ();_addb :=_adac ._cgcd ;_aag :=_addb .PdfObject .(*_dc .PdfObjectDictionary );_adac .PdfAnnotationMarkup .appendToPdfDictionary (_aag );_aag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_aag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_adac .QuadPoints );_aag .SetIfNotNil ("\u0049\u0043",_adac .IC );_aag .SetIfNotNil ("\u0052\u004f",_adac .RO );_aag .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_adac .OverlayText );
_aag .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_adac .Repeat );_aag .SetIfNotNil ("\u0044\u0041",_adac .DA );_aag .SetIfNotNil ("\u0051",_adac .Q );return _addb ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_fcacg int ,_dfdc *PdfPage )error ;

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_dc .PdfObjectStream ;Data []byte ;_fdbf *_dc .PdfIndirectObject ;_aebg *_dc .PdfObjectStream ;};func _dggdc (_adacf _dc .PdfObject ){_bg .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_adacf ,_adacf .String ());
if _ggacg ,_bgef :=_adacf .(*_dc .PdfObjectStream );_bgef {_ebdbd ,_efbceb :=_dc .DecodeStream (_ggacg );if _efbceb !=nil {_bg .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_efbceb );return ;};_bg .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_ebdbd );
}else if _gffea ,_dfaba :=_adacf .(*_dc .PdfIndirectObject );_dfaba {_bg .Log .Debug ("\u0025\u0054\u0020%\u0076",_gffea .PdfObject ,_gffea .PdfObject );_bg .Log .Debug ("\u0025\u0073",_gffea .PdfObject .String ());};};

// ToPdfObject converts the font to a PDF representation.
func (_caebc *pdfFontType0 )ToPdfObject ()_dc .PdfObject {if _caebc ._eeff ==nil {_caebc ._eeff =&_dc .PdfIndirectObject {};};_fbgf :=_caebc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_caebc ._eeff .PdfObject =_fbgf ;if _caebc .Encoding !=nil {_fbgf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_caebc .Encoding );
}else if _caebc ._efebb !=nil {_fbgf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_caebc ._efebb .ToPdfObject ());};if _caebc .DescendantFont !=nil {_fbgf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_dc .MakeArray (_caebc .DescendantFont .ToPdfObject ()));
};return _caebc ._eeff ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_bbaae .Lock ();defer _bbaae .Unlock ();_fceee =producer };

// ToPdfObject returns the PDF representation of the function.
func (_eefeg *PdfFunctionType4 )ToPdfObject ()_dc .PdfObject {_gebcd :=_eefeg ._dddag ;if _gebcd ==nil {_eefeg ._dddag =&_dc .PdfObjectStream {};_gebcd =_eefeg ._dddag ;};_cdccd :=_dc .MakeDict ();_cdccd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dc .MakeInteger (4));
_ccdbd :=&_dc .PdfObjectArray {};for _ ,_aegc :=range _eefeg .Domain {_ccdbd .Append (_dc .MakeFloat (_aegc ));};_cdccd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ccdbd );_cggbf :=&_dc .PdfObjectArray {};for _ ,_bfcfa :=range _eefeg .Range {_cggbf .Append (_dc .MakeFloat (_bfcfa ));
};_cdccd .Set ("\u0052\u0061\u006eg\u0065",_cggbf );if _eefeg ._efgbf ==nil &&_eefeg .Program !=nil {_eefeg ._efgbf =[]byte (_eefeg .Program .String ());};_cdccd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dc .MakeInteger (int64 (len (_eefeg ._efgbf ))));
_gebcd .Stream =_eefeg ._efgbf ;_gebcd .PdfObjectDictionary =_cdccd ;return _gebcd ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fcgfc *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fd .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ColorToRGB converts gray -> rgb for a single color component.
func (_adge *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fdad ,_dcgfb :=color .(*PdfColorDeviceGray );if !_dcgfb {_bg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_fdad ),float64 (*_fdad ),float64 (*_fdad )),nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _dc .PdfObject ;ColorSpace _dc .PdfObject ;Pattern _dc .PdfObject ;Shading _dc .PdfObject ;XObject _dc .PdfObject ;Font _dc .PdfObject ;ProcSet _dc .PdfObject ;Properties _dc .PdfObject ;_bdgg *_dc .PdfObjectDictionary ;
_aegad *PdfPageResourcesColorspaces ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _dc .PdfObject ;Open _dc .PdfObject ;};

// SetAlpha sets the alpha layer for the image.
func (_bffg *Image )SetAlpha (alpha []byte ){_bffg ._cecag =alpha };type pdfFontType0 struct{fontCommon ;_eeff *_dc .PdfIndirectObject ;_efebb _fgd .TextEncoder ;Encoding _dc .PdfObject ;DescendantFont *PdfFont ;_adfa *_bd .CMap ;};

// ImageToRGB convert an indexed image to RGB.
func (_ecec *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ecec .Base .GetNumComponents ();if N < 1{return Image {},_a .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ddcd :=_ea .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._cecag ,img ._bbde );_gdce :=_gab .NewReader (img .getBase ());_eefa :=_gab .NewWriter (_ddcd );var (_bcdd uint32 ;_dfgee int ;_efgae error ;);for {_bcdd ,_efgae =_gdce .ReadSample ();
if _efgae ==_fa .EOF {break ;}else if _efgae !=nil {return img ,_efgae ;};_dfgee =int (_bcdd );_bg .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_dfgee ,N ,len (_ecec ._eefe ));
if (_dfgee +1)*N > len (_ecec ._eefe ){_dfgee =len (_ecec ._eefe )/N -1;_bg .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_dfgee );if _dfgee < 0{_bg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ggfa :=_dfgee *N ;_ggfa < (_dfgee +1)*N ;_ggfa ++{if _efgae =_eefa .WriteSample (uint32 (_ecec ._eefe [_ggfa ]));_efgae !=nil {return img ,_efgae ;};};};return _ecec .Base .ImageToRGB (_ggff (&_ddcd ));};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_abgfg *PdfPage )AppendContentStream (contentStr string )error {_eeaa ,_dggbd :=_abgfg .GetContentStreams ();if _dggbd !=nil {return _dggbd ;};if len (_eeaa )==0{_eeaa =[]string {contentStr };return _abgfg .SetContentStreams (_eeaa ,_dc .NewFlateEncoder ());
};var _fbedg _ffa .Buffer ;_fbedg .WriteString (_eeaa [len (_eeaa )-1]);_fbedg .WriteString ("\u000a");_fbedg .WriteString (contentStr );_eeaa [len (_eeaa )-1]=_fbedg .String ();return _abgfg .SetContentStreams (_eeaa ,_dc .NewFlateEncoder ());};func _befgf (_gfcee *PdfPage ){_ebgf :=_bb .GetLicenseKey ();
if _ebgf !=nil &&_ebgf .IsLicensed (){return ;};_ceaac :=_dc .PdfObjectName ("\u0055\u0046\u0031");if !_gfcee .Resources .HasFontByName (_ceaac ){_gfcee .Resources .SetFontByName (_ceaac ,DefaultFont ().ToPdfObject ());};var _cececf []string ;_cececf =append (_cececf ,"\u0071");
_cececf =append (_cececf ,"\u0042\u0054");_cececf =append (_cececf ,_a .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_ceaac .String ()));_cececf =append (_cececf ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_cececf =append (_cececf ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_abcdeb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_cececf =append (_cececf ,_a .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_abcdeb ));_cececf =append (_cececf ,"\u0045\u0054");_cececf =append (_cececf ,"\u0051");_aeceg :=_db .Join (_cececf ,"\u000a");_gfcee .AddContentStreamByString (_aeceg );_gfcee .ToPdfObject ();
};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_ggbdfb *XObjectImage )SetFilter (encoder _dc .StreamEncoder )error {_deaag :=_ggbdfb .Stream ;_dgfec ,_gdagd :=_ggbdfb .Filter .DecodeBytes (_deaag );if _gdagd !=nil {return _gdagd ;};_ggbdfb .Filter =encoder ;encoder .UpdateParams (_ggbdfb .getParamsDict ());
_deaag ,_gdagd =encoder .EncodeBytes (_dgfec );if _gdagd !=nil {return _gdagd ;};_ggbdfb .Stream =_deaag ;return nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_afg .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_afg .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_afg .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_gccc *PdfAppender ;_ebabb *DSS ;};

// ToPdfObject implements interface PdfModel.
func (_dagg *PdfAnnotationLine )ToPdfObject ()_dc .PdfObject {_dagg .PdfAnnotation .ToPdfObject ();_abbf :=_dagg ._cgcd ;_gdgg :=_abbf .PdfObject .(*_dc .PdfObjectDictionary );_dagg .PdfAnnotationMarkup .appendToPdfDictionary (_gdgg );_gdgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u004c\u0069\u006e\u0065"));
_gdgg .SetIfNotNil ("\u004c",_dagg .L );_gdgg .SetIfNotNil ("\u0042\u0053",_dagg .BS );_gdgg .SetIfNotNil ("\u004c\u0045",_dagg .LE );_gdgg .SetIfNotNil ("\u0049\u0043",_dagg .IC );_gdgg .SetIfNotNil ("\u004c\u004c",_dagg .LL );_gdgg .SetIfNotNil ("\u004c\u004c\u0045",_dagg .LLE );
_gdgg .SetIfNotNil ("\u0043\u0061\u0070",_dagg .Cap );_gdgg .SetIfNotNil ("\u0049\u0054",_dagg .IT );_gdgg .SetIfNotNil ("\u004c\u004c\u004f",_dagg .LLO );_gdgg .SetIfNotNil ("\u0043\u0050",_dagg .CP );_gdgg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dagg .Measure );
_gdgg .SetIfNotNil ("\u0043\u004f",_dagg .CO );return _abbf ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_eagga OutlineDest )ToPdfObject ()_dc .PdfObject {if (_eagga .PageObj ==nil &&_eagga .Page < 0)||_eagga .Mode ==""{return _dc .MakeNull ();};_dddg :=_dc .MakeArray ();if _eagga .PageObj !=nil {_dddg .Append (_eagga .PageObj );}else {_dddg .Append (_dc .MakeInteger (_eagga .Page ));
};_dddg .Append (_dc .MakeName (_eagga .Mode ));switch _eagga .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_dddg .Append (_dc .MakeFloat (_eagga .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_dddg .Append (_dc .MakeFloat (_eagga .X ));
case "\u0058\u0059\u005a":_dddg .Append (_dc .MakeFloat (_eagga .X ));_dddg .Append (_dc .MakeFloat (_eagga .Y ));_dddg .Append (_dc .MakeFloat (_eagga .Zoom ));default:_dddg .Set (1,_dc .MakeName ("\u0046\u0069\u0074"));};return _dddg ;};func (_abbd *PdfReader )newPdfAnnotationStrikeOut (_dedd *_dc .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_aacgb :=PdfAnnotationStrikeOut {};
_ebaa ,_ebcg :=_abbd .newPdfAnnotationMarkupFromDict (_dedd );if _ebcg !=nil {return nil ,_ebcg ;};_aacgb .PdfAnnotationMarkup =_ebaa ;_aacgb .QuadPoints =_dedd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aacgb ,nil ;
};func _fceca ()_g .Time {_bbaae .Lock ();defer _bbaae .Unlock ();return _ggbed };func (_ddeda *LTV )generateVRIKey (_agagd *PdfSignature )(string ,error ){_dbggcg ,_geaaa :=_defd (_agagd .Contents .Bytes ());if _geaaa !=nil {return "",_geaaa ;};return _db .ToUpper (_c .EncodeToString (_dbggcg )),nil ;
};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_addf *_dc .PdfIndirectObject ;Certs []*_dc .PdfObjectStream ;OCSPs []*_dc .PdfObjectStream ;CRLs []*_dc .PdfObjectStream ;VRI map[string ]*VRI ;_afdfg map[string ]*_dc .PdfObjectStream ;_dagc map[string ]*_dc .PdfObjectStream ;_afgag map[string ]*_dc .PdfObjectStream ;
};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_abge *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ecfge ,_ccce :=color .(*PdfColorDeviceRGB );if !_ccce {_bg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ecfge ,nil ;};func (_cacbb *PdfFilespec )getDict ()*_dc .PdfObjectDictionary {if _gbabg ,_eegb :=_cacbb ._ddfa .(*_dc .PdfIndirectObject );
_eegb {_caeb ,_ddcc :=_gbabg .PdfObject .(*_dc .PdfObjectDictionary );if !_ddcc {return nil ;};return _caeb ;}else if _feae ,_aacgab :=_cacbb ._ddfa .(*_dc .PdfObjectDictionary );_aacgab {return _feae ;}else {_bg .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cacbb ._ddfa );
return nil ;};};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fadf *PdfColorCalGray )GetNumComponents ()int {return 1};func (_cabe *PdfReader )newPdfAnnotationTextFromDict (_ded *_dc .PdfObjectDictionary )(*PdfAnnotationText ,error ){_bcbf :=PdfAnnotationText {};_cgae ,_eab :=_cabe .newPdfAnnotationMarkupFromDict (_ded );
if _eab !=nil {return nil ,_eab ;};_bcbf .PdfAnnotationMarkup =_cgae ;_bcbf .Open =_ded .Get ("\u004f\u0070\u0065\u006e");_bcbf .Name =_ded .Get ("\u004e\u0061\u006d\u0065");_bcbf .State =_ded .Get ("\u0053\u0074\u0061t\u0065");_bcbf .StateModel =_ded .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_bcbf ,nil ;};func (_fcbbg *LTV )validateSig (_egff *PdfSignature )error {if _egff ==nil ||_egff .Contents ==nil ||len (_egff .Contents .Bytes ())==0{return _a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_egff );
};return nil ;};func (_eccb *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _eccb ._dffc };func _efacg (_gcgdg _dc .PdfObject )(*PdfPattern ,error ){_aggdd :=&PdfPattern {};var _egeaeg *_dc .PdfObjectDictionary ;if _agee ,_fdeffb :=_dc .GetIndirect (_gcgdg );
_fdeffb {_aggdd ._dbcag =_agee ;_dabgg ,_acged :=_agee .PdfObject .(*_dc .PdfObjectDictionary );if !_acged {_bg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_agee .PdfObject );
return nil ,_dc .ErrTypeError ;};_egeaeg =_dabgg ;}else if _fgdbf ,_bdfca :=_dc .GetStream (_gcgdg );_bdfca {_aggdd ._dbcag =_fgdbf ;_egeaeg =_fgdbf .PdfObjectDictionary ;}else {_bg .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_gcgdg );
return nil ,_dc .ErrTypeError ;};_cdbab :=_egeaeg .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cdbab ==nil {_bg .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_acbdd ,_aabda :=_cdbab .(*_dc .PdfObjectInteger );if !_aabda {_bg .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cdbab );
return nil ,_dc .ErrTypeError ;};if *_acbdd !=1&&*_acbdd !=2{_bg .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_acbdd );return nil ,_dc .ErrRangeError ;
};_aggdd .PatternType =int64 (*_acbdd );switch *_acbdd {case 1:_bfddae ,_begab :=_cfeba (_egeaeg );if _begab !=nil {return nil ,_begab ;};_bfddae .PdfPattern =_aggdd ;_aggdd ._egccdf =_bfddae ;return _aggdd ,nil ;case 2:_degac ,_befac :=_cbedb (_egeaeg );
if _befac !=nil {return nil ,_befac ;};_degac .PdfPattern =_aggdd ;_aggdd ._egccdf =_degac ;return _aggdd ,nil ;};return nil ,_fd .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ToPdfObject implements interface PdfModel.
func (_dbgg *PdfFilespec )ToPdfObject ()_dc .PdfObject {_aaca :=_dbgg .getDict ();_aaca .Clear ();_aaca .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_aaca .SetIfNotNil ("\u0046\u0053",_dbgg .FS );
_aaca .SetIfNotNil ("\u0046",_dbgg .F );_aaca .SetIfNotNil ("\u0055\u0046",_dbgg .UF );_aaca .SetIfNotNil ("\u0044\u004f\u0053",_dbgg .DOS );_aaca .SetIfNotNil ("\u004d\u0061\u0063",_dbgg .Mac );_aaca .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dbgg .Unix );
_aaca .SetIfNotNil ("\u0049\u0044",_dbgg .ID );_aaca .SetIfNotNil ("\u0056",_dbgg .V );_aaca .SetIfNotNil ("\u0045\u0046",_dbgg .EF );_aaca .SetIfNotNil ("\u0052\u0046",_dbgg .RF );_aaca .SetIfNotNil ("\u0044\u0065\u0073\u0063",_dbgg .Desc );_aaca .SetIfNotNil ("\u0043\u0049",_dbgg .CI );
return _dbgg ._ddfa ;};func (_badg *PdfReader )newPdfSignatureFromIndirect (_gaccf *_dc .PdfIndirectObject )(*PdfSignature ,error ){_ecce ,_abaaee :=_gaccf .PdfObject .(*_dc .PdfObjectDictionary );if !_abaaee {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _fedfbd ,_dgfcg :=_badg ._abaeb .GetModelFromPrimitive (_gaccf ).(*PdfSignature );_dgfcg {return _fedfbd ,nil ;};_bfff :=&PdfSignature {};_bfff ._acbgc =_gaccf ;_bfff .Type ,_ =_dc .GetName (_ecce .Get ("\u0054\u0079\u0070\u0065"));
_bfff .Filter ,_abaaee =_dc .GetName (_ecce .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_abaaee {_bg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bfff .SubFilter ,_ =_dc .GetName (_ecce .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_bfff .Contents ,_abaaee =_dc .GetString (_ecce .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_abaaee {_bg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bfff .Cert =_ecce .Get ("\u0043\u0065\u0072\u0074");_bfff .ByteRange ,_ =_dc .GetArray (_ecce .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_bfff .Reference ,_ =_dc .GetArray (_ecce .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_bfff .Changes ,_ =_dc .GetArray (_ecce .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_bfff .Name ,_ =_dc .GetString (_ecce .Get ("\u004e\u0061\u006d\u0065"));_bfff .M ,_ =_dc .GetString (_ecce .Get ("\u004d"));_bfff .Location ,_ =_dc .GetString (_ecce .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_bfff .Reason ,_ =_dc .GetString (_ecce .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_bfff .ContactInfo ,_ =_dc .GetString (_ecce .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_bfff .R ,_ =_dc .GetInt (_ecce .Get ("\u0052"));
_bfff .V ,_ =_dc .GetInt (_ecce .Get ("\u0056"));_bfff .PropBuild ,_ =_dc .GetDict (_ecce .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_bfff .PropAuthTime ,_ =_dc .GetInt (_ecce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_bfff .PropAuthType ,_ =_dc .GetName (_ecce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _bfff ,nil ;};func (_egcef *LTV )enable (_edcc ,_fcggf []*_dgd .Certificate ,_cdcdb string )error {_gaeeb ,_fccae ,_ccaga :=_egcef .buildCertChain (_edcc ,_fcggf );
if _ccaga !=nil {return _ccaga ;};_dcdfg ,_ccaga :=_egcef .getCerts (_gaeeb );if _ccaga !=nil {return _ccaga ;};_bbba ,_ccaga :=_egcef .getOCSPs (_gaeeb ,_fccae );if _ccaga !=nil {return _ccaga ;};_cegg ,_ccaga :=_egcef .getCRLs (_gaeeb );if _ccaga !=nil {return _ccaga ;
};_cfade :=_egcef ._ebabb ;_fcece ,_ccaga :=_cfade .addCerts (_dcdfg );if _ccaga !=nil {return _ccaga ;};_afgbf ,_ccaga :=_cfade .addOCSPs (_bbba );if _ccaga !=nil {return _ccaga ;};_cddf ,_ccaga :=_cfade .addCRLs (_cegg );if _ccaga !=nil {return _ccaga ;
};if _cdcdb !=""{_cfade .VRI [_cdcdb ]=&VRI {Cert :_fcece ,OCSP :_afgbf ,CRL :_cddf };};_egcef ._gccc .SetDSS (_cfade );return nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_fbg *PdfReader )newPdfAnnotationFreeTextFromDict (_bbga *_dc .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_gfge :=PdfAnnotationFreeText {};_ffcca ,_bdbe :=_fbg .newPdfAnnotationMarkupFromDict (_bbga );
if _bdbe !=nil {return nil ,_bdbe ;};_gfge .PdfAnnotationMarkup =_ffcca ;_gfge .DA =_bbga .Get ("\u0044\u0041");_gfge .Q =_bbga .Get ("\u0051");_gfge .RC =_bbga .Get ("\u0052\u0043");_gfge .DS =_bbga .Get ("\u0044\u0053");_gfge .CL =_bbga .Get ("\u0043\u004c");
_gfge .IT =_bbga .Get ("\u0049\u0054");_gfge .BE =_bbga .Get ("\u0042\u0045");_gfge .RD =_bbga .Get ("\u0052\u0044");_gfge .BS =_bbga .Get ("\u0042\u0053");_gfge .LE =_bbga .Get ("\u004c\u0045");return &_gfge ,nil ;};func (_dfaa *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// Write writes out the PDF.
func (_cccc *PdfWriter )Write (writer _fa .Writer )error {_bg .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_cadgde :=_bb .GetLicenseKey ();if (_cadgde ==nil ||!_cadgde .IsLicensed ())&&!_ggbeb {_a .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_a .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fd .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _cccc ._fdccf !=nil {_bg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cccc ._fdccf );
_aecge :=_cccc ._fdccf .ToPdfObject ();_bg .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_aecge ,_aecge ,_aecge );_cccc ._dfecf .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_aecge );
_gaff :=_cccc .addObjects (_aecge );if _gaff !=nil {return _gaff ;};};if _cccc ._fbddd !=nil {_bg .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_eegcff :=_cccc ._fbddd .ToPdfObject ();_bg .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eegcff );
_cccc ._dfecf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_eegcff );_cfacab :=_cccc .addObjects (_eegcff );if _cfacab !=nil {return _cfacab ;};};for _aefg ,_cfcea :=range _cccc ._ebcdd {if !_cccc .hasObject (_aefg ){_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_aefg ,_aefg ,_aefg );
for _ ,_cegff :=range _cfcea {for _ ,_gcbgd :=range _cegff .Keys (){_dabdg :=_cegff .Get (_gcbgd );if _dabdg ==_aefg {_bg .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_cegff .Set (_gcbgd ,_dc .MakeNull ());break ;};};};};};_cccc ._dfecf .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_dc .MakeName (_a .Sprintf ("\u0025\u0064\u002e%\u0064",_cccc ._ebege ,_cccc ._dbcce )));_cccc .copyObjects ();if _cccc ._ggfdc !=nil {var _dfae error ;
_cccc ._edfca ,_dfae =_cccc ._ggfdc .Optimize (_cccc ._edfca );if _dfae !=nil {return _dfae ;};_aeecg :=make (map[_dc .PdfObject ]struct{},len (_cccc ._edfca ));for _ ,_fdacgg :=range _cccc ._edfca {_aeecg [_fdacgg ]=struct{}{};};_cccc ._bgadg =_aeecg ;
};_cccc ._agdaa =_cccc ._ecdgc ;_cccc ._becbf =_d .NewWriter (writer );_fdba :=_cccc ._ebege > 1||(_cccc ._ebege ==1&&_cccc ._dbcce > 4);if _cccc ._gfggf !=nil {_fdba =*_cccc ._gfggf ;};_dfdec :=make (map[_dc .PdfObject ]bool );for _ ,_dffg :=range _cccc ._edfca {if _agafd ,_beda :=_dffg .(*_dc .PdfObjectStreams );
_beda {_fdba =true ;for _ ,_faabc :=range _agafd .Elements (){_dfdec [_faabc ]=true ;if _bfbed ,_ebada :=_faabc .(*_dc .PdfIndirectObject );_ebada {_dfdec [_bfbed .PdfObject ]=true ;};};};};if _fdba &&_cccc ._ebege ==1&&_cccc ._dbcce < 5{_cccc ._dbcce =5;
};if _cccc ._gcbbg {_cccc .writeString ("\u000a");}else {_cccc .writeString (_a .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cccc ._ebege ,_cccc ._dbcce ));_cccc .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_cccc .updateObjectNumbers ();_bg .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cccc ._edfca ));_cccc ._acdc =make (map[int ]crossReference );_cccc ._acdc [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _cccc ._daef .ObjectMap !=nil {for _ddega ,_gcda :=range _cccc ._daef .ObjectMap {if _ddega ==0{continue ;};if _gcda .XType ==_dc .XrefTypeObjectStream {_fbefa :=crossReference {Type :2,ObjectNumber :_gcda .OsObjNumber ,Index :_gcda .OsObjIndex };_cccc ._acdc [_ddega ]=_fbefa ;
};if _gcda .XType ==_dc .XrefTypeTableEntry {_fcag :=crossReference {Type :1,ObjectNumber :_gcda .ObjectNumber ,Offset :_gcda .Offset };_cccc ._acdc [_ddega ]=_fcag ;};};};for _ ,_ebdbg :=range _cccc ._edfca {if _caaaa :=_dfdec [_ebdbg ];_caaaa {continue ;
};_edef :=int64 (0);switch _addag :=_ebdbg .(type ){case *_dc .PdfIndirectObject :_edef =_addag .ObjectNumber ;case *_dc .PdfObjectStream :_edef =_addag .ObjectNumber ;case *_dc .PdfObjectStreams :_edef =_addag .ObjectNumber ;default:_bg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_ebdbg );
return ErrTypeCheck ;};if _cccc ._abdfc !=nil &&_ebdbg !=_cccc ._edaea {_dbdc :=_cccc ._abdfc .Encrypt (_ebdbg ,_edef ,0);if _dbdc !=nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dbdc );
return _dbdc ;};};_cccc .writeObject (int (_edef ),_ebdbg );};_aeaaf :=_cccc ._agdaa ;var _agabg int ;for _cace :=range _cccc ._acdc {if _cace > _agabg {_agabg =_cace ;};};if _fdba {_bbcgge :=_agabg +1;_cccc ._acdc [_bbcgge ]=crossReference {Type :1,ObjectNumber :_bbcgge ,Offset :_aeaaf };
_caced :=_ffa .NewBuffer (nil );_eceag :=_dc .MakeArray ();for _eefege :=0;_eefege <=_agabg ;{for ;_eefege <=_agabg ;_eefege ++{_eagfd ,_ceaab :=_cccc ._acdc [_eefege ];if _ceaab &&(!_cccc ._gcbbg ||_cccc ._gcbbg &&(_eagfd .Type ==1&&_eagfd .Offset >=_cccc ._afdg ||_eagfd .Type ==0)){break ;
};};var _bbbbc int ;for _bbbbc =_eefege +1;_bbbbc <=_agabg ;_bbbbc ++{_gfcbf ,_fege :=_cccc ._acdc [_bbbbc ];if _fege &&(!_cccc ._gcbbg ||_cccc ._gcbbg &&(_gfcbf .Type ==1&&_gfcbf .Offset > _cccc ._afdg )){continue ;};break ;};_eceag .Append (_dc .MakeInteger (int64 (_eefege )),_dc .MakeInteger (int64 (_bbbbc -_eefege )));
for _debfa :=_eefege ;_debfa < _bbbbc ;_debfa ++{_bedcf :=_cccc ._acdc [_debfa ];switch _bedcf .Type {case 0:_dg .Write (_caced ,_dg .BigEndian ,byte (0));_dg .Write (_caced ,_dg .BigEndian ,uint32 (0));_dg .Write (_caced ,_dg .BigEndian ,uint16 (0xFFFF));
case 1:_dg .Write (_caced ,_dg .BigEndian ,byte (1));_dg .Write (_caced ,_dg .BigEndian ,uint32 (_bedcf .Offset ));_dg .Write (_caced ,_dg .BigEndian ,uint16 (_bedcf .Generation ));case 2:_dg .Write (_caced ,_dg .BigEndian ,byte (2));_dg .Write (_caced ,_dg .BigEndian ,uint32 (_bedcf .ObjectNumber ));
_dg .Write (_caced ,_dg .BigEndian ,uint16 (_bedcf .Index ));};};_eefege =_bbbbc +1;};_cfgf ,_egbc :=_dc .MakeStream (_caced .Bytes (),_dc .NewFlateEncoder ());if _egbc !=nil {return _egbc ;};_cfgf .ObjectNumber =int64 (_bbcgge );_cfgf .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0058\u0052\u0065\u0066"));
_cfgf .PdfObjectDictionary .Set ("\u0057",_dc .MakeArray (_dc .MakeInteger (1),_dc .MakeInteger (4),_dc .MakeInteger (2)));_cfgf .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_eceag );_cfgf .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_dc .MakeInteger (int64 (_bbcgge +1)));
_cfgf .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cccc ._aefdcd );_cfgf .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cccc ._deaaa );if _cccc ._gcbbg &&_cccc ._cfcag > 0{_cfgf .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_dc .MakeInteger (_cccc ._cfcag ));
};if _cccc ._abdfc !=nil {_cfgf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cccc ._edaea );_cfgf .Set ("\u0049\u0044",_cccc ._fbead );_bg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cccc ._fbead );};_cccc .writeObject (int (_cfgf .ObjectNumber ),_cfgf );
}else {_cccc .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _beedd :=0;_beedd <=_agabg ;{for ;_beedd <=_agabg ;_beedd ++{_fbgdd ,_gdcdf :=_cccc ._acdc [_beedd ];if _gdcdf &&(!_cccc ._gcbbg ||_cccc ._gcbbg &&(_fbgdd .Type ==1&&_fbgdd .Offset >=_cccc ._afdg ||_fbgdd .Type ==0)){break ;
};};var _gbgfe int ;for _gbgfe =_beedd +1;_gbgfe <=_agabg ;_gbgfe ++{_addcc ,_eeccg :=_cccc ._acdc [_gbgfe ];if _eeccg &&(!_cccc ._gcbbg ||_cccc ._gcbbg &&(_addcc .Type ==1&&_addcc .Offset > _cccc ._afdg )){continue ;};break ;};_ggdda :=_a .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_beedd ,_gbgfe -_beedd );
_cccc .writeString (_ggdda );for _faagb :=_beedd ;_faagb < _gbgfe ;_faagb ++{_dgcd :=_cccc ._acdc [_faagb ];switch _dgcd .Type {case 0:_ggdda =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_cccc .writeString (_ggdda );
case 1:_ggdda =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_dgcd .Offset ,0);_cccc .writeString (_ggdda );};};_beedd =_gbgfe +1;};_dgegg :=_dc .MakeDict ();_dgegg .Set ("\u0049\u006e\u0066\u006f",_cccc ._aefdcd );
_dgegg .Set ("\u0052\u006f\u006f\u0074",_cccc ._deaaa );_dgegg .Set ("\u0053\u0069\u007a\u0065",_dc .MakeInteger (int64 (_agabg +1)));if _cccc ._gcbbg &&_cccc ._cfcag > 0{_dgegg .Set ("\u0050\u0072\u0065\u0076",_dc .MakeInteger (_cccc ._cfcag ));};if _cccc ._abdfc !=nil {_dgegg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cccc ._edaea );
_dgegg .Set ("\u0049\u0044",_cccc ._fbead );_bg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cccc ._fbead );};_cccc .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_cccc .writeString (_dgegg .WriteString ());_cccc .writeString ("\u000a");
};_bcffae :=_a .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_aeaaf );_cccc .writeString (_bcffae );_cccc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _cccc ._fafdf ==nil {_cccc ._fafdf =_cccc ._becbf .Flush ();
};return _cccc ._fafdf ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bacfc *PdfPageResources )GenerateXObjectName ()_dc .PdfObjectName {_fbedd :=1;for {_beefb :=_dc .MakeName (_a .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_fbedd ));if !_bacfc .HasXObjectByName (*_beefb ){return *_beefb ;};_fbedd ++;};};func (_cfdc *LTV )getCerts (_fcef []*_dgd .Certificate )([][]byte ,error ){_bagcb :=make ([][]byte ,0,len (_fcef ));
for _ ,_bfag :=range _fcef {_bagcb =append (_bagcb ,_bfag .Raw );};return _bagcb ,nil ;};func (_ecgbc *PdfReader )loadDSS ()(*DSS ,error ){if _ecgbc ._ecead .GetCrypter ()!=nil &&!_ecgbc ._ecead .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_deafe :=_ecgbc ._bedbcf .Get ("\u0044\u0053\u0053");if _deafe ==nil {return nil ,nil ;};_eaaac ,_ :=_dc .GetIndirect (_deafe );_deafe =_dc .TraceToDirectObject (_deafe );switch _faged :=_deafe .(type ){case *_dc .PdfObjectNull :return nil ,nil ;case *_dc .PdfObjectDictionary :return _caegf (_eaaac ,_faged );
};return nil ,_a .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_deafe );};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _dc .PdfObject ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _dc .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bfca pdfFontType0 )GetRuneMetrics (r rune )(_eb .CharMetrics ,bool ){if _bfca .DescendantFont ==nil {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bfca );
return _eb .CharMetrics {},false ;};return _bfca .DescendantFont .GetRuneMetrics (r );};func _efbad (_bedf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bedf }};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_aabaf :=PdfColorLab {l ,a ,b };return &_aabaf };

// GetCustomInfo returns a custom info value for the specified name.
func (_becbdd *PdfInfo )GetCustomInfo (name string )*_dc .PdfObjectString {var _ffcfa *_dc .PdfObjectString ;if _becbdd ._bgcge ==nil {return _ffcfa ;};if _afag ,_bcfba :=_becbdd ._bgcge .Get (*_dc .MakeName (name )).(*_dc .PdfObjectString );_bcfba {_ffcfa =_afag ;
};return _ffcfa ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cece *PdfColorspaceDeviceCMYK )ToPdfObject ()_dc .PdfObject {return _dc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_cca *PdfReader )newPdfActionFromIndirectObject (_fdb *_dc .PdfIndirectObject )(*PdfAction ,error ){_ag ,_dd :=_fdb .PdfObject .(*_dc .PdfObjectDictionary );
if !_dd {return nil ,_a .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cca ._abaeb .GetModelFromPrimitive (_ag );model !=nil {_ebc ,_afdf :=model .(*PdfAction );if !_afdf {return nil ,_a .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _ebc ,nil ;};_ffd :=&PdfAction {};_ffd ._be =_fdb ;_cca ._abaeb .Register (_ag ,_ffd );if _aca :=_ag .Get ("\u0054\u0079\u0070\u0065");_aca !=nil {_cbec ,_gbg :=_aca .(*_dc .PdfObjectName );if !_gbg {_bg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aca );
}else {if *_cbec !="\u0041\u0063\u0074\u0069\u006f\u006e"{_bg .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_cbec );
};_ffd .Type =_cbec ;};};if _fef :=_ag .Get ("\u004e\u0065\u0078\u0074");_fef !=nil {_ffd .Next =_fef ;};if _edg :=_ag .Get ("\u0053");_edg !=nil {_ffd .S =_edg ;};_bgf ,_aaf :=_ffd .S .(*_dc .PdfObjectName );if !_aaf {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ffd .S );
return nil ,_a .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ffd .S );};_cge :=PdfActionType (_bgf .String ());
switch _cge {case ActionTypeGoTo :_ffgb ,_bdc :=_cca .newPdfActionGotoFromDict (_ag );if _bdc !=nil {return nil ,_bdc ;};_ffgb .PdfAction =_ffd ;_ffd ._efa =_ffgb ;return _ffd ,nil ;case ActionTypeGoToR :_edda ,_cga :=_cca .newPdfActionGotoRFromDict (_ag );
if _cga !=nil {return nil ,_cga ;};_edda .PdfAction =_ffd ;_ffd ._efa =_edda ;return _ffd ,nil ;case ActionTypeGoToE :_gbdg ,_eebf :=_cca .newPdfActionGotoEFromDict (_ag );if _eebf !=nil {return nil ,_eebf ;};_gbdg .PdfAction =_ffd ;_ffd ._efa =_gbdg ;
return _ffd ,nil ;case ActionTypeLaunch :_cdfa ,_ec :=_cca .newPdfActionLaunchFromDict (_ag );if _ec !=nil {return nil ,_ec ;};_cdfa .PdfAction =_ffd ;_ffd ._efa =_cdfa ;return _ffd ,nil ;case ActionTypeThread :_cdcf ,_bacf :=_cca .newPdfActionThreadFromDict (_ag );
if _bacf !=nil {return nil ,_bacf ;};_cdcf .PdfAction =_ffd ;_ffd ._efa =_cdcf ;return _ffd ,nil ;case ActionTypeURI :_cdb ,_cccf :=_cca .newPdfActionURIFromDict (_ag );if _cccf !=nil {return nil ,_cccf ;};_cdb .PdfAction =_ffd ;_ffd ._efa =_cdb ;return _ffd ,nil ;
case ActionTypeSound :_age ,_fefg :=_cca .newPdfActionSoundFromDict (_ag );if _fefg !=nil {return nil ,_fefg ;};_age .PdfAction =_ffd ;_ffd ._efa =_age ;return _ffd ,nil ;case ActionTypeMovie :_bgc ,_dda :=_cca .newPdfActionMovieFromDict (_ag );if _dda !=nil {return nil ,_dda ;
};_bgc .PdfAction =_ffd ;_ffd ._efa =_bgc ;return _ffd ,nil ;case ActionTypeHide :_ebg ,_fbe :=_cca .newPdfActionHideFromDict (_ag );if _fbe !=nil {return nil ,_fbe ;};_ebg .PdfAction =_ffd ;_ffd ._efa =_ebg ;return _ffd ,nil ;case ActionTypeNamed :_egf ,_eea :=_cca .newPdfActionNamedFromDict (_ag );
if _eea !=nil {return nil ,_eea ;};_egf .PdfAction =_ffd ;_ffd ._efa =_egf ;return _ffd ,nil ;case ActionTypeSubmitForm :_febg ,_faf :=_cca .newPdfActionSubmitFormFromDict (_ag );if _faf !=nil {return nil ,_faf ;};_febg .PdfAction =_ffd ;_ffd ._efa =_febg ;
return _ffd ,nil ;case ActionTypeResetForm :_aga ,_fdfc :=_cca .newPdfActionResetFormFromDict (_ag );if _fdfc !=nil {return nil ,_fdfc ;};_aga .PdfAction =_ffd ;_ffd ._efa =_aga ;return _ffd ,nil ;case ActionTypeImportData :_ffc ,_ageb :=_cca .newPdfActionImportDataFromDict (_ag );
if _ageb !=nil {return nil ,_ageb ;};_ffc .PdfAction =_ffd ;_ffd ._efa =_ffc ;return _ffd ,nil ;case ActionTypeSetOCGState :_eddb ,_fdbc :=_cca .newPdfActionSetOCGStateFromDict (_ag );if _fdbc !=nil {return nil ,_fdbc ;};_eddb .PdfAction =_ffd ;_ffd ._efa =_eddb ;
return _ffd ,nil ;case ActionTypeRendition :_fefb ,_ada :=_cca .newPdfActionRenditionFromDict (_ag );if _ada !=nil {return nil ,_ada ;};_fefb .PdfAction =_ffd ;_ffd ._efa =_fefb ;return _ffd ,nil ;case ActionTypeTrans :_gcg ,_bc :=_cca .newPdfActionTransFromDict (_ag );
if _bc !=nil {return nil ,_bc ;};_gcg .PdfAction =_ffd ;_ffd ._efa =_gcg ;return _ffd ,nil ;case ActionTypeGoTo3DView :_eef ,_fabc :=_cca .newPdfActionGoTo3DViewFromDict (_ag );if _fabc !=nil {return nil ,_fabc ;};_eef .PdfAction =_ffd ;_ffd ._efa =_eef ;
return _ffd ,nil ;case ActionTypeJavaScript :_bbd ,_cfa :=_cca .newPdfActionJavaScriptFromDict (_ag );if _cfa !=nil {return nil ,_cfa ;};_bbd .PdfAction =_ffd ;_ffd ._efa =_bbd ;return _ffd ,nil ;};_bg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_cge );
return nil ,nil ;};

// Width returns the width of `rect`.
func (_acegg *PdfRectangle )Width ()float64 {return _ged .Abs (_acegg .Urx -_acegg .Llx )};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gafc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbad :=vals [0];if _gbad < 0.0||_gbad > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dbgb :=vals [1];if _dbgb < 0.0||_dbgb > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bceafg :=vals [2];if _bceafg < 0.0||_bceafg > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_efab :=NewPdfColorCalRGB (_gbad ,_dbgb ,_bceafg );return _efab ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cgcbf *PdfPageResources )GetXObjectImageByName (keyName _dc .PdfObjectName )(*XObjectImage ,error ){_fbgac ,_beada :=_cgcbf .GetXObjectByName (keyName );if _fbgac ==nil {return nil ,nil ;};if _beada !=XObjectTypeImage {return nil ,_fd .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_gebfcb ,_ggbbb :=NewXObjectImageFromStream (_fbgac );if _ggbbb !=nil {return nil ,_ggbbb ;};return _gebfcb ,nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_dc .PdfObjectDictionary )(*PdfPageResources ,error ){_eggec :=NewPdfPageResources ();if _dgfdca :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_dgfdca !=nil {_eggec .ExtGState =_dgfdca ;};if _gfeeb :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gfeeb !=nil &&!_dc .IsNullObject (_gfeeb ){_eggec .ColorSpace =_gfeeb ;};if _ggeb :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_ggeb !=nil {_eggec .Pattern =_ggeb ;};if _gecg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_gecg !=nil {_eggec .Shading =_gecg ;
};if _becag :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_becag !=nil {_eggec .XObject =_becag ;};if _gbgab :=_dc .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_gbgab !=nil {_eggec .Font =_gbgab ;};if _fefeb :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fefeb !=nil {_eggec .ProcSet =_fefeb ;};if _bbef :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bbef !=nil {_eggec .Properties =_bbef ;};return _eggec ,nil ;};

// GetOutlineTree returns the outline tree.
func (_bdfae *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bdfae ._babacc };

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bccb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_eegaf :=NewPdfOutlineItem ();_eegaf .Title =_dc .MakeEncodedString (_bccb .Title ,true );_eegaf .Dest =_bccb .Dest .ToPdfObject ();var _bffeg []*PdfOutlineItem ;var _dfceg int64 ;var _gedcb *PdfOutlineItem ;
for _ ,_feedf :=range _bccb .Entries {_caade ,_bfgfg :=_feedf .ToPdfOutlineItem ();_caade .Parent =&_eegaf .PdfOutlineTreeNode ;if _gedcb !=nil {_gedcb .Next =&_caade .PdfOutlineTreeNode ;_caade .Prev =&_gedcb .PdfOutlineTreeNode ;};_bffeg =append (_bffeg ,_caade );
_dfceg +=_bfgfg ;_gedcb =_caade ;};_gcbde :=len (_bffeg );_dfceg +=int64 (_gcbde );if _gcbde > 0{_eegaf .First =&_bffeg [0].PdfOutlineTreeNode ;_eegaf .Last =&_bffeg [_gcbde -1].PdfOutlineTreeNode ;_eegaf .Count =&_dfceg ;};return _eegaf ,_dfceg ;};var _gacf =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fdee *OutlineItem )Insert (index uint ,item *OutlineItem ){_afed :=uint (len (_fdee .Entries ));if index > _afed {index =_afed ;};_fdee .Entries =append (_fdee .Entries [:index ],append ([]*OutlineItem {item },_fdee .Entries [index :]...)...);};


// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_egg :=NewPdfAnnotation ();_ebab :=&PdfAnnotationWidget {};_ebab .PdfAnnotation =_egg ;_egg .SetContext (_ebab );return _ebab ;};type fontCommon struct{_bfbac string ;_dgdeb string ;_ceee string ;_effd _dc .PdfObject ;
_dcgae *_bd .CMap ;_dffc *PdfFontDescriptor ;_dbab int64 ;};func _ccbe (_afga _dc .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fbaf :=NewPdfColorspaceSpecialSeparation ();if _gcde ,_ccdgc :=_afga .(*_dc .PdfIndirectObject );_ccdgc {_fbaf ._dadf =_gcde ;
};_afga =_dc .TraceToDirectObject (_afga );_gdef ,_cacb :=_afga .(*_dc .PdfObjectArray );if !_cacb {return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _gdef .Len ()!=4{return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_afga =_gdef .Get (0);
_bgff ,_cacb :=_afga .(*_dc .PdfObjectName );if !_cacb {return nil ,_a .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bgff !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_a .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_afga =_gdef .Get (1);_bgff ,_cacb =_afga .(*_dc .PdfObjectName );if !_cacb {return nil ,_a .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fbaf .ColorantName =_bgff ;_afga =_gdef .Get (2);_cgaa ,_cdbd :=NewPdfColorspaceFromPdfObject (_afga );if _cdbd !=nil {return nil ,_cdbd ;};_fbaf .AlternateSpace =_cgaa ;_aacec ,_cdbd :=_fcace (_gdef .Get (3));if _cdbd !=nil {return nil ,_cdbd ;};_fbaf .TintTransform =_aacec ;
return _fbaf ,nil ;};func _caegf (_cbed *_dc .PdfIndirectObject ,_fbad *_dc .PdfObjectDictionary )(*DSS ,error ){if _cbed ==nil {_cbed =_dc .MakeIndirectObject (nil );};_cbed .PdfObject =_dc .MakeDict ();_bcdeg :=map[string ]*VRI {};if _befb ,_becc :=_dc .GetDict (_fbad .Get ("\u0056\u0052\u0049"));
_becc {for _ ,_eafc :=range _befb .Keys (){if _dafb ,_baaed :=_dc .GetDict (_befb .Get (_eafc ));_baaed {_bcdeg [_db .ToUpper (_eafc .String ())]=_fdfb (_dafb );};};};return &DSS {Certs :_bgffb (_fbad .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_bgffb (_fbad .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_bgffb (_fbad .Get ("\u0043\u0052\u004c\u0073")),VRI :_bcdeg ,_addf :_cbed },nil ;
};

// ToPdfObject implements interface PdfModel.
func (_fga *PdfActionLaunch )ToPdfObject ()_dc .PdfObject {_fga .PdfAction .ToPdfObject ();_dfg :=_fga ._be ;_de :=_dfg .PdfObject .(*_dc .PdfObjectDictionary );_de .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeLaunch )));if _fga .F !=nil {_de .Set ("\u0046",_fga .F .ToPdfObject ());
};_de .SetIfNotNil ("\u0057\u0069\u006e",_fga .Win );_de .SetIfNotNil ("\u004d\u0061\u0063",_fga .Mac );_de .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fga .Unix );_de .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fga .NewWindow );return _dfg ;
};

// ToPdfObject implements interface PdfModel.
func (_bdg *PdfActionGoToE )ToPdfObject ()_dc .PdfObject {_bdg .PdfAction .ToPdfObject ();_dgbf :=_bdg ._be ;_cad :=_dgbf .PdfObject .(*_dc .PdfObjectDictionary );_cad .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeGoToE )));if _bdg .F !=nil {_cad .Set ("\u0046",_bdg .F .ToPdfObject ());
};_cad .SetIfNotNil ("\u0044",_bdg .D );_cad .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bdg .NewWindow );_cad .SetIfNotNil ("\u0054",_bdg .T );return _dgbf ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_agfag *PdfWriter )SetRotation (rotate int64 )error {_dgefa ,_ccgdb :=_dc .GetDict (_agfag ._eegbd );if !_ccgdb {return ErrTypeCheck ;};_dgefa .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_dc .MakeInteger (rotate ));return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_edcb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgfe :=vals [0];if _dgfe < 0.0||_dgfe > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fedbg :=vals [1];if _fedbg < 0.0||_fedbg > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbeff :=vals [2];if _gbeff < 0.0||_gbeff > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cgda :=NewPdfColorDeviceRGB (_dgfe ,_fedbg ,_gbeff );return _cgda ,nil ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_aabab *Image )SetSamples (samples []uint32 ){if _aabab .BitsPerComponent < 8{samples =_aabab .samplesAddPadding (samples );};_bdfcg :=_gab .ResampleUint32 (samples ,int (_aabab .BitsPerComponent ),8);_edbc :=make ([]byte ,len (_bdfcg ));for _bcdbe ,_bgcee :=range _bdfcg {_edbc [_bcdbe ]=byte (_bgcee );
};_aabab .Data =_edbc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aeeg *PdfAnnotation )GetContainingPdfObject ()_dc .PdfObject {return _aeeg ._cgcd };

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bdb :=NewPdfAction ();_dce :=&PdfActionHide {};_dce .PdfAction =_bdb ;_bdb .SetContext (_dce );return _dce ;};

// ToPdfObject implements interface PdfModel.
func (_ddbe *PdfAnnotationProjection )ToPdfObject ()_dc .PdfObject {_ddbe .PdfAnnotation .ToPdfObject ();_fee :=_ddbe ._cgcd ;_ebdg :=_fee .PdfObject .(*_dc .PdfObjectDictionary );_ddbe .PdfAnnotationMarkup .appendToPdfDictionary (_ebdg );return _fee ;
};func _agg (_dgee _dc .PdfObject )(*PdfBorderStyle ,error ){_fae :=&PdfBorderStyle {};_fae ._ddgb =_dgee ;var _abd *_dc .PdfObjectDictionary ;_dgee =_dc .TraceToDirectObject (_dgee );_abd ,_ddde :=_dgee .(*_dc .PdfObjectDictionary );if !_ddde {return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};if _bfdd :=_abd .Get ("\u0054\u0079\u0070\u0065");_bfdd !=nil {_gcf ,_egce :=_bfdd .(*_dc .PdfObjectName );if !_egce {_bg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bfdd );
}else {if *_gcf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_bg .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_gcf );};};};if _fba :=_abd .Get ("\u0057");
_fba !=nil {_gfbbf ,_fgdb :=_dc .GetNumberAsFloat (_fba );if _fgdb !=nil {_bg .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_fgdb );return nil ,_fgdb ;};_fae .W =&_gfbbf ;
};if _fdae :=_abd .Get ("\u0053");_fdae !=nil {_bbda ,_adf :=_fdae .(*_dc .PdfObjectName );if !_adf {return nil ,_fd .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _fcd BorderStyle ;switch *_bbda {case "\u0053":_fcd =BorderStyleSolid ;case "\u0044":_fcd =BorderStyleDashed ;case "\u0042":_fcd =BorderStyleBeveled ;case "\u0049":_fcd =BorderStyleInset ;case "\u0055":_fcd =BorderStyleUnderline ;default:_bg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bbda );
return nil ,_fd .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_fae .S =&_fcd ;};if _abdd :=_abd .Get ("\u0044");_abdd !=nil {_gede ,_ddfc :=_abdd .(*_dc .PdfObjectArray );
if !_ddfc {_bg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_abdd );return nil ,_fd .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_daae ,_bfcf :=_gede .ToIntegerArray ();if _bfcf !=nil {_bg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bfcf );
return nil ,_bfcf ;};_fae .D =&_daae ;};return _fae ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_daed *PdfFieldButton )ToPdfObject ()_dc .PdfObject {_daed .PdfField .ToPdfObject ();_ggbb :=_daed ._fbaa ;_gcge :=_ggbb .PdfObject .(*_dc .PdfObjectDictionary );_gcge .Set ("\u0046\u0054",_dc .MakeName ("\u0042\u0074\u006e"));if _daed .Opt !=nil {_gcge .Set ("\u004f\u0070\u0074",_daed .Opt );
};return _ggbb ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ffcfg *PdfWriter )SetNamedDestinations (names _dc .PdfObject )error {if names ==nil {return nil ;};_bg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_ffcfg ._dfecf .Set ("\u004e\u0061\u006de\u0073",names );return _ffcfg .addObjects (names );};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eddde ,_efgfc :=_ff .Open (filePath );if _efgfc !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_efgfc );
return nil ,_efgfc ;};defer _eddde .Close ();return NewPdfFontFromTTF (_eddde );};func _bcbae (_ebag _eb .StdFont )pdfFontSimple {_dbgaf :=_ebag .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_dgdeb :"\u0054\u0079\u0070e\u0031",_bfbac :_ebag .Name ()},_afeeg :_ebag .GetMetricsTable (),_bgbba :&PdfFontDescriptor {FontName :_dc .MakeName (string (_dbgaf .Name )),FontFamily :_dc .MakeName (_dbgaf .Family ),FontWeight :_dc .MakeFloat (float64 (_dbgaf .Weight )),Flags :_dc .MakeInteger (int64 (_dbgaf .Flags )),FontBBox :_dc .MakeArrayFromFloats (_dbgaf .BBox [:]),ItalicAngle :_dc .MakeFloat (_dbgaf .ItalicAngle ),Ascent :_dc .MakeFloat (_dbgaf .Ascent ),Descent :_dc .MakeFloat (_dbgaf .Descent ),CapHeight :_dc .MakeFloat (_dbgaf .CapHeight ),XHeight :_dc .MakeFloat (_dbgaf .XHeight ),StemV :_dc .MakeFloat (_dbgaf .StemV ),StemH :_dc .MakeFloat (_dbgaf .StemH )},_dcbbb :_ebag .Encoder ()};
};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fcdgef *Image )ColorAt (x ,y int )(_fb .Color ,error ){_cdffd :=_ea .BytesPerLine (int (_fcdgef .Width ),int (_fcdgef .BitsPerComponent ),_fcdgef .ColorComponents );switch _fcdgef .ColorComponents {case 1:return _ea .ColorAtGrayscale (x ,y ,int (_fcdgef .BitsPerComponent ),_cdffd ,_fcdgef .Data ,_fcdgef ._bbde );
case 3:return _ea .ColorAtNRGBA (x ,y ,int (_fcdgef .Width ),_cdffd ,int (_fcdgef .BitsPerComponent ),_fcdgef .Data ,_fcdgef ._cecag ,_fcdgef ._bbde );case 4:return _ea .ColorAtCMYK (x ,y ,int (_fcdgef .Width ),_fcdgef .Data ,_fcdgef ._bbde );};_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fcdgef .ColorComponents ,_fcdgef .BitsPerComponent );
return nil ,_fd .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func _ddbeb (_cggfdc *_dc .PdfObjectStream )(*PdfFunctionType4 ,error ){_aebcd :=&PdfFunctionType4 {};
_aebcd ._dddag =_cggfdc ;_cadc :=_cggfdc .PdfObjectDictionary ;_befgc ,_fabed :=_dc .TraceToDirectObject (_cadc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dc .PdfObjectArray );if !_fabed {_bg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _befgc .Len ()%2!=0{_bg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_affa ,_ecfgb :=_befgc .ToFloat64Array ();if _ecfgb !=nil {return nil ,_ecfgb ;};_aebcd .Domain =_affa ;_befgc ,_fabed =_dc .TraceToDirectObject (_cadc .Get ("\u0052\u0061\u006eg\u0065")).(*_dc .PdfObjectArray );
if _fabed {if _befgc .Len ()< 0||_befgc .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_adgbc ,_bcecb :=_befgc .ToFloat64Array ();if _bcecb !=nil {return nil ,_bcecb ;};_aebcd .Range =_adgbc ;
};_fbbgc ,_ecfgb :=_dc .DecodeStream (_cggfdc );if _ecfgb !=nil {return nil ,_ecfgb ;};_aebcd ._efgbf =_fbbgc ;_dggeg :=_ba .NewPSParser (_fbbgc );_efdff ,_ecfgb :=_dggeg .Parse ();if _ecfgb !=nil {return nil ,_ecfgb ;};_aebcd .Program =_efdff ;return _aebcd ,nil ;
};

// SetImage updates XObject Image with new image data.
func (_ebdbb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_ebdbb .Filter .UpdateParams (img .GetParamsDict ());_dcgcf ,_eccfcg :=_ebdbb .Filter .EncodeBytes (img .Data );if _eccfcg !=nil {return _eccfcg ;};_ebdbb .Stream =_dcgcf ;_fffdf :=img .Width ;
_ebdbb .Width =&_fffdf ;_eaaag :=img .Height ;_ebdbb .Height =&_eaaag ;_eebbee :=img .BitsPerComponent ;_ebdbb .BitsPerComponent =&_eebbee ;if cs ==nil {if img .ColorComponents ==1{_ebdbb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_ebdbb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_ebdbb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ebdbb .ColorSpace =cs ;};return nil ;
};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_deaaa *_dc .PdfIndirectObject ;_eegbd *_dc .PdfIndirectObject ;_gfceb map[_dc .PdfObject ]struct{};_edfca []_dc .PdfObject ;_bgadg map[_dc .PdfObject ]struct{};_bgddag []*_dc .PdfIndirectObject ;_fdccf *PdfOutlineTreeNode ;_dfecf *_dc .PdfObjectDictionary ;
_aabcb []_dc .PdfObject ;_aefdcd *_dc .PdfIndirectObject ;_becbf *_d .Writer ;_agdaa int64 ;_fafdf error ;_abdfc *_dc .PdfCrypt ;_efgada *_dc .PdfObjectDictionary ;_edaea *_dc .PdfIndirectObject ;_fbead *_dc .PdfObjectArray ;_ebege int ;_dbcce int ;_gfggf *bool ;
_ebcdd map[_dc .PdfObject ][]*_dc .PdfObjectDictionary ;_fbddd *PdfAcroForm ;_ggfdc Optimizer ;_acdc map[int ]crossReference ;_ecdgc int64 ;ObjNumOffset int ;_gcbbg bool ;_daef _dc .XrefTable ;_cfcag int64 ;_afdg int64 ;_afgbd map[_dc .PdfObject ]int64 ;
_gbdcc map[_dc .PdfObject ]struct{};_egfgf string ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_fgc :=NewPdfAnnotation ();_gbgc :=&PdfAnnotationTrapNet {};_gbgc .PdfAnnotation =_fgc ;_fgc .SetContext (_gbgc );return _gbgc ;};func (_dgeaf *pdfFontSimple )baseFields ()*fontCommon {return &_dgeaf .fontCommon };


// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_dc .PdfObjectArray ;Domain *_dc .PdfObjectArray ;Function []PdfFunction ;Extend *_dc .PdfObjectArray ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cbbbe :=PdfDate {};_gdbbde :=_eccag .FindAllStringSubmatch (dateStr ,1);if len (_gdbbde )< 1{return _cbbbe ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_gdbbde [0])!=10{return _cbbbe ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_cbbbe ._geaba ,_ =_da .ParseInt (_gdbbde [0][1],10,32);_cbbbe ._edade ,_ =_da .ParseInt (_gdbbde [0][2],10,32);_cbbbe ._eabcf ,_ =_da .ParseInt (_gdbbde [0][3],10,32);_cbbbe ._bccge ,_ =_da .ParseInt (_gdbbde [0][4],10,32);_cbbbe ._cbade ,_ =_da .ParseInt (_gdbbde [0][5],10,32);
_cbbbe ._eggc ,_ =_da .ParseInt (_gdbbde [0][6],10,32);if len (_gdbbde [0][7])> 0{_cbbbe ._gagd =_gdbbde [0][7][0];}else {_cbbbe ._gagd ='+';};if len (_gdbbde [0][8])> 0{_cbbbe ._fbcec ,_ =_da .ParseInt (_gdbbde [0][8],10,32);}else {_cbbbe ._fbcec =0;};
if len (_gdbbde [0][9])> 0{_cbbbe ._deeab ,_ =_da .ParseInt (_gdbbde [0][9],10,32);}else {_cbbbe ._deeab =0;};return _cbbbe ,nil ;};var _eccag =_cd .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func (_ebgec *DSS )generateHashMaps ()error {_ccbed ,_ddbbc :=_ebgec .generateHashMap (_ebgec .Certs );if _ddbbc !=nil {return _ddbbc ;};_acebe ,_ddbbc :=_ebgec .generateHashMap (_ebgec .OCSPs );if _ddbbc !=nil {return _ddbbc ;};_cagf ,_ddbbc :=_ebgec .generateHashMap (_ebgec .CRLs );
if _ddbbc !=nil {return _ddbbc ;};_ebgec ._afdfg =_ccbed ;_ebgec ._dagc =_acebe ;_ebgec ._afgag =_cagf ;return nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_ffdf *modelManager )GetPrimitiveFromModel (model PdfModel )_dc .PdfObject {_bagbg ,_gggdc :=_ffdf ._ggaf [model ];if !_gggdc {return nil ;};return _bagbg ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cgfe :=NewPdfAnnotation ();_gbf :=&PdfAnnotationStrikeOut {};_gbf .PdfAnnotation =_cgfe ;_gbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgfe .SetContext (_gbf );return _gbf ;};func _dggde (_gabab *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gabab }};


// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;var _ageab =_cd .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// WriteString outputs the object as it is to be written to file.
func (_fgdc *pdfSignDictionary )WriteString ()string {_fgdc ._ddag =0;_fgdc ._fbfcg =0;_fgdc ._bcgg =0;_fgdc ._ggbba =0;_egbb :=_ffa .NewBuffer (nil );_egbb .WriteString ("\u003c\u003c");for _ ,_egab :=range _fgdc .Keys (){_efda :=_fgdc .Get (_egab );switch _egab {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_egbb .WriteString (_egab .WriteString ());
_egbb .WriteString ("\u0020");_fgdc ._bcgg =_egbb .Len ();_egbb .WriteString (_efda .WriteString ());_egbb .WriteString ("\u0020");_fgdc ._ggbba =_egbb .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_egbb .WriteString (_egab .WriteString ());
_egbb .WriteString ("\u0020");_fgdc ._ddag =_egbb .Len ();_egbb .WriteString (_efda .WriteString ());_egbb .WriteString ("\u0020");_fgdc ._fbfcg =_egbb .Len ()-1;default:_egbb .WriteString (_egab .WriteString ());_egbb .WriteString ("\u0020");_egbb .WriteString (_efda .WriteString ());
};};_egbb .WriteString ("\u003e\u003e");return _egbb .String ();};

// CustomKeys returns all custom info keys as list.
func (_ecdb *PdfInfo )CustomKeys ()[]string {if _ecdb ._bgcge ==nil {return nil ;};_deff :=make ([]string ,len (_ecdb ._bgcge .Keys ()));for _ ,_ccec :=range _ecdb ._bgcge .Keys (){_deff =append (_deff ,_ccec .String ());};return _deff ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_ccda *XObjectImage )ToImage ()(*Image ,error ){_fegaee :=&Image {};if _ccda .Height ==nil {return nil ,_fd .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fegaee .Height =*_ccda .Height ;if _ccda .Width ==nil {return nil ,_fd .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fegaee .Width =*_ccda .Width ;if _ccda .BitsPerComponent ==nil {switch _ccda .Filter .(type ){case *_dc .CCITTFaxEncoder ,*_dc .JBIG2Encoder :_fegaee .BitsPerComponent =1;
case *_dc .LZWEncoder ,*_dc .RunLengthEncoder :_fegaee .BitsPerComponent =8;default:return nil ,_fd .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fegaee .BitsPerComponent =*_ccda .BitsPerComponent ;};_fegaee .ColorComponents =_ccda .ColorSpace .GetNumComponents ();_ccda ._gdfbe .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_dc .MakeInteger (int64 (_fegaee .ColorComponents )));
_gdggg ,_bfaaf :=_dc .DecodeStream (_ccda ._gdfbe );if _bfaaf !=nil {return nil ,_bfaaf ;};_fegaee .Data =_gdggg ;if _ccda .Decode !=nil {_ffgba ,_ffdag :=_ccda .Decode .(*_dc .PdfObjectArray );if !_ffdag {_bg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_aaece ,_fgcce :=_ffgba .ToFloat64Array ();if _fgcce !=nil {return nil ,_fgcce ;};_fegaee ._bbde =_aaece ;};return _fegaee ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_babee *PdfReader )Inspect ()(map[string ]int ,error ){return _babee ._ecead .Inspect ()};func _egefg ()string {_bbaae .Lock ();defer _bbaae .Unlock ();if len (_fbced )> 0{return _fbced ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// ToPdfObject implements interface PdfModel.
func (_dag *PdfActionThread )ToPdfObject ()_dc .PdfObject {_dag .PdfAction .ToPdfObject ();_ead :=_dag ._be ;_bee :=_ead .PdfObject .(*_dc .PdfObjectDictionary );_bee .SetIfNotNil ("\u0053",_dc .MakeName (string (ActionTypeThread )));if _dag .F !=nil {_bee .Set ("\u0046",_dag .F .ToPdfObject ());
};_bee .SetIfNotNil ("\u0044",_dag .D );_bee .SetIfNotNil ("\u0042",_dag .B );return _ead ;};

// Height returns the height of `rect`.
func (_eaed *PdfRectangle )Height ()float64 {return _ged .Abs (_eaed .Ury -_eaed .Lly )};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_fcb :=NewPdfAnnotation ();_acag :=&PdfAnnotationUnderline {};_acag .PdfAnnotation =_fcb ;_acag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcb .SetContext (_acag );return _acag ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// PdfVersion returns version of the PDF file.
func (_cbdcc *PdfReader )PdfVersion ()_dc .Version {return _cbdcc ._ecead .PdfVersion ()};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _dc .PdfObject ;B _dc .PdfObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func _gabd (_efgcf []byte )bool {if len (_efgcf )< 4{return true ;};for _dgbc :=range _efgcf [:4]{_bfcc :=rune (_dgbc );if !_ca .Is (_ca .ASCII_Hex_Digit ,_bfcc )&&!_ca .IsSpace (_bfcc ){return true ;
};};return false ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_bcbb :=NewPdfAnnotation ();_fcaa :=&PdfAnnotationScreen {};_fcaa .PdfAnnotation =_bcbb ;_bcbb .SetContext (_fcaa );return _fcaa ;};func _fgebb (_fefge string )(string ,error ){var _bcfdg _ffa .Buffer ;
_bcfdg .WriteString (_fefge );_fccfg :=make ([]byte ,8+16);_edfagf :=_g .Now ().UTC ().UnixNano ();_dg .BigEndian .PutUint64 (_fccfg ,uint64 (_edfagf ));_ ,_ddbbbc :=_dgb .Read (_fccfg [8:]);if _ddbbbc !=nil {return "",_ddbbbc ;};_bcfdg .WriteString (_c .EncodeToString (_fccfg ));
return _bcfdg .String (),nil ;};func (_ebbb *PdfAnnotation )String ()string {_aabc :="";_fefc ,_bff :=_ebbb .ToPdfObject ().(*_dc .PdfIndirectObject );if _bff {_aabc =_a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ebbb ._afgc ,_fefc .PdfObject .String ());
};return _aabc ;};func (_eff *PdfReader )newPdfActionNamedFromDict (_adab *_dc .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_adab .Get ("\u004e")},nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gbge *PdfFont )ToUnicode ()string {if _gbge .baseFields ()._dcgae ==nil {return "";};return _gbge .baseFields ()._dcgae .Name ();};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_begdf *PdfReader )PageFromIndirectObject (ind *_dc .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_begdf .PageList )!=len (_begdf ._eebef ){return nil ,0,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _gcdde ,_dabc :=range _begdf ._eebef {if _dabc ==ind {return _begdf .PageList [_gcdde ],_gcdde +1,nil ;};};return nil ,0,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_gffg *PdfReader )newPdfAnnotationPolygonFromDict (_cffb *_dc .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cgdf :=PdfAnnotationPolygon {};
_bgga ,_bfbd :=_gffg .newPdfAnnotationMarkupFromDict (_cffb );if _bfbd !=nil {return nil ,_bfbd ;};_cgdf .PdfAnnotationMarkup =_bgga ;_cgdf .Vertices =_cffb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cgdf .LE =_cffb .Get ("\u004c\u0045");
_cgdf .BS =_cffb .Get ("\u0042\u0053");_cgdf .IC =_cffb .Get ("\u0049\u0043");_cgdf .BE =_cffb .Get ("\u0042\u0045");_cgdf .IT =_cffb .Get ("\u0049\u0054");_cgdf .Measure =_cffb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cgdf ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_abdde *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_dc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbcb ,_dfba :=_dc .GetNumbersAsFloat (objects );
if _dfba !=nil {return nil ,_dfba ;};return _abdde .ColorFromFloats (_bbcb );};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_geebf *PdfOutlineTreeNode )ToPdfObject ()_dc .PdfObject {return _geebf .GetContext ().ToPdfObject ();};const (_afdbb =0x00001;_gbegf =0x00002;_dgdee =0x00004;_ggcdd =0x00008;_faae =0x00020;_gbdfg =0x00040;_edba =0x10000;_gbega =0x20000;_bfeae =0x40000;
);func _gdgd (_eagdec *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_eegcc ,_fgega :=_dc .GetDict (_eagdec .AP );if !_fgega {return nil ,nil ,_fd .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _eegcc ==nil {return nil ,nil ,nil ;};_dbge ,_fgega :=_dc .GetArray (_eagdec .Rect );if !_fgega ||_dbge .Len ()!=4{return nil ,nil ,_fd .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ecfa ,_ccef :=NewPdfRectangle (*_dbge );
if _ccef !=nil {return nil ,nil ,_ccef ;};_acgef :=_dc .TraceToDirectObject (_eegcc .Get ("\u004e"));switch _fdec :=_acgef .(type ){case *_dc .PdfObjectStream :_aada :=_fdec ;_bbccd ,_ddfeg :=NewXObjectFormFromStream (_aada );return _bbccd ,_ecfa ,_ddfeg ;
case *_dc .PdfObjectDictionary :_gdbdf :=_fdec ;_aeea ,_deab :=_dc .GetName (_eagdec .AS );if !_deab {return nil ,nil ,nil ;};if _gdbdf .Get (*_aeea )==nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_aebeb ,_deab :=_dc .GetStream (_gdbdf .Get (*_aeea ));if !_deab {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_aeea );
return nil ,nil ,_fd .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_bcbgg ,_cbfb :=NewXObjectFormFromStream (_aebeb );return _bcbgg ,_ecfa ,_cbfb ;};_bg .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_acgef );
return nil ,nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cfdeb *_dc .PdfIndirectObject ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _dc .PdfObject ;MK _dc .PdfObject ;A _dc .PdfObject ;AA _dc .PdfObject ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ddab *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ddab .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_geaba int64 ;_edade int64 ;_eabcf int64 ;_bccge int64 ;_cbade int64 ;_eggc int64 ;_gagd byte ;_fbcec int64 ;_deeab int64 ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dfaabe *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dfaabe ._egccdf .(*PdfTilingPattern );};func (_cfda *PdfWriter )writeString (_dbgdg string ){if _cfda ._fafdf !=nil {return ;};_gdaca ,_aafbc :=_cfda ._becbf .WriteString (_dbgdg );
_cfda ._agdaa +=int64 (_gdaca );_cfda ._fafdf =_aafbc ;};func _gbabgf (_edea _dc .PdfObject )(*fontFile ,error ){_bg .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_edea );
_feff :=&fontFile {};_edea =_dc .TraceToDirectObject (_edea );_bacfd ,_ggdc :=_edea .(*_dc .PdfObjectStream );if !_ggdc {_bg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_edea );
return nil ,_dc .ErrTypeError ;};_fgbcg :=_bacfd .PdfObjectDictionary ;_edcec ,_begddc :=_dc .DecodeStream (_bacfd );if _begddc !=nil {return nil ,_begddc ;};_agdd ,_ggdc :=_dc .GetNameVal (_fgbcg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ggdc {_feff ._ccee =_agdd ;
if _agdd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_bg .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_eeadf ,_ :=_dc .GetIntVal (_fgbcg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bfae ,_ :=_dc .GetIntVal (_fgbcg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _eeadf > len (_edcec ){_eeadf =len (_edcec );
};if _eeadf +_bfae > len (_edcec ){_bfae =len (_edcec )-_eeadf ;};_bgbd :=_edcec [:_eeadf ];var _abdga []byte ;if _bfae > 0{_abdga =_edcec [_eeadf :_eeadf +_bfae ];};if _eeadf > 0&&_bfae > 0{_deag :=_feff .loadFromSegments (_bgbd ,_abdga );if _deag !=nil {return nil ,_deag ;
};};return _feff ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfa *PdfAnnotationInk )ToPdfObject ()_dc .PdfObject {_dfa .PdfAnnotation .ToPdfObject ();_bcae :=_dfa ._cgcd ;_gde :=_bcae .PdfObject .(*_dc .PdfObjectDictionary );_dfa .PdfAnnotationMarkup .appendToPdfDictionary (_gde );_gde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0049\u006e\u006b"));
_gde .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_dfa .InkList );_gde .SetIfNotNil ("\u0042\u0053",_dfa .BS );return _bcae ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dc .PdfObject ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_dc .PdfObjectInteger ;BitsPerComponent *_dc .PdfObjectInteger ;BitsPerFlag *_dc .PdfObjectInteger ;Decode *_dc .PdfObjectArray ;Function []PdfFunction ;};var (ErrRequiredAttributeMissing =_fd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_fdea =_fd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_fd .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fd .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_dga .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_dc .ErrNotSupported );ErrType1CFontNotSupported =_dga .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_dc .ErrNotSupported );
ErrType3FontNotSupported =_dga .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_dc .ErrNotSupported );
ErrTTCmapNotSupported =_dga .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_dc .ErrNotSupported );
ErrSignNotEnoughSpace =_dga .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dga .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_ebadg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_dc .StreamEncoder ,error ){_bfdc ,_ggab :=_ebadg ._dbcag .(*_dc .PdfObjectStream );if !_ggab {_bg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebadg ._dbcag );
return nil ,nil ,_dc .ErrTypeError ;};_bcfag ,_gacbd :=_dc .DecodeStream (_bfdc );if _gacbd !=nil {_bg .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_gacbd );
return nil ,nil ,_gacbd ;};_ccbgg ,_gacbd :=_dc .NewEncoderFromStream (_bfdc );if _gacbd !=nil {_bg .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_gacbd );
return nil ,nil ,_gacbd ;};return _bcfag ,_ccbgg ,nil ;};

// SetBorderWidth sets the style's border width.
func (_cafcc *PdfBorderStyle )SetBorderWidth (width float64 ){_cafcc .W =&width };func (_feede *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _feede ._ecead .GetCrypter ()!=nil &&!_feede ._ecead .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bbcd :=_feede ._bedbcf ;_fgdbc :=_bbcd .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _fgdbc ==nil {return nil ,nil ;};_bg .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ccga :=_dc .ResolveReference (_fgdbc );
_bg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ccga );if _gfbdb :=_dc .IsNullObject (_ccga );_gfbdb {_bg .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_bgaebe ,_cbcc :=_ccga .(*_dc .PdfIndirectObject );if !_cbcc {if _ ,_aeeeb :=_dc .GetDict (_ccga );!_aeeeb {_bg .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_bg .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_bgaebe =_dc .MakeIndirectObject (_ccga );};_aecec ,_cbcc :=_bgaebe .PdfObject .(*_dc .PdfObjectDictionary );if !_cbcc {return nil ,_fd .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_bg .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_aecec );_gbde ,_ ,_gfada :=_feede .buildOutlineTree (_bgaebe ,nil ,nil ,nil );if _gfada !=nil {return nil ,_gfada ;};_bg .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gbde );
return _gbde ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fdeec *PdfReader )Decrypt (password []byte )(bool ,error ){_eafg ,_fgfcc :=_fdeec ._ecead .Decrypt (password );if _fgfcc !=nil {return false ,_fgfcc ;};if !_eafg {return false ,nil ;};_fgfcc =_fdeec .loadStructure ();if _fgfcc !=nil {_bg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_fgfcc );
return false ,_fgfcc ;};return true ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_dacec *PdfPattern )SetContext (ctx PdfModel ){_dacec ._egccdf =ctx };

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bcfb :=&PdfAppender {_acce :reader ._aeag ,Reader :reader ,_bcc :reader ._ecead ,_abda :reader ._agde };_egfc ,_gbbb :=_bcfb ._acce .Seek (0,_fa .SeekEnd );if _gbbb !=nil {return nil ,_gbbb ;
};_bcfb ._gbdc =_egfc ;if _ ,_gbbb =_bcfb ._acce .Seek (0,_fa .SeekStart );_gbbb !=nil {return nil ,_gbbb ;};_bcfb ._fcca ,_gbbb =NewPdfReader (_bcfb ._acce );if _gbbb !=nil {return nil ,_gbbb ;};for _ ,_dceb :=range _bcfb .Reader .GetObjectNums (){if _bcfb ._acbd < _dceb {_bcfb ._acbd =_dceb ;
};};_bcfb ._cgcc =_bcfb ._bcc .GetXrefTable ();_bcfb ._ddfda =_bcfb ._bcc .GetXrefOffset ();_bcfb ._aebf =append (_bcfb ._aebf ,_bcfb ._fcca .PageList ...);_bcfb ._efb =make (map[_dc .PdfObject ]struct{});_bcfb ._eggd =make (map[_dc .PdfObject ]int64 );
_bcfb ._bfeg =make (map[_dc .PdfObject ]struct{});_bcfb ._ggg =_bcfb ._fcca .AcroForm ;_bcfb ._cfef =_bcfb ._fcca .DSS ;return _bcfb ,nil ;};func (_bfdf *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _fa .ReadSeeker )(*PdfFont ,error ){const _gegbd =_fgd .CharCode (32);const _begf =_fgd .CharCode (255);_bbade ,_eacef :=_ga .ReadAll (r );if _eacef !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_eacef );
return nil ,_eacef ;};_gcebf ,_eacef :=_eb .TtfParse (_ffa .NewReader (_bbade ));if _eacef !=nil {_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_eacef );
return nil ,_eacef ;};_adfaf :=&pdfFontSimple {_dbaad :make (map[_fgd .CharCode ]float64 ),fontCommon :fontCommon {_dgdeb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_adfaf ._geecg =_fgd .NewWinAnsiEncoder ();_adfaf ._bfbac =_gcebf .PostScriptName ;
_adfaf .FirstChar =_dc .MakeInteger (int64 (_gegbd ));_adfaf .LastChar =_dc .MakeInteger (int64 (_begf ));_bffee :=1000.0/float64 (_gcebf .UnitsPerEm );if len (_gcebf .Widths )<=0{return nil ,_fd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_eacdb :=_bffee *float64 (_gcebf .Widths [0]);_fgbe :=make ([]float64 ,0,_begf -_gegbd +1);for _daaac :=_gegbd ;_daaac <=_begf ;_daaac ++{_dagf ,_ecea :=_adfaf .Encoder ().CharcodeToRune (_daaac );if !_ecea {_bg .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_daaac );
_fgbe =append (_fgbe ,_eacdb );continue ;};_bedd ,_aade :=_gcebf .Chars [_dagf ];if !_aade {_bg .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_fgbe =append (_fgbe ,_eacdb );continue ;
};_bbcgg :=_bffee *float64 (_gcebf .Widths [_bedd ]);_fgbe =append (_fgbe ,_bbcgg );};_adfaf .Widths =_dc .MakeIndirectObject (_dc .MakeArrayFromFloats (_fgbe ));if len (_fgbe )< int (_begf -_gegbd +1){_bg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_fgbe ),255-32+1);
return nil ,_dc .ErrRangeError ;};for _faedf :=_gegbd ;_faedf <=_begf ;_faedf ++{_adfaf ._dbaad [_faedf ]=_fgbe [_faedf -_gegbd ];};_adfaf .Encoding =_dc .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_dbaee :=&PdfFontDescriptor {};
_dbaee .FontName =_dc .MakeName (_gcebf .PostScriptName );_dbaee .Ascent =_dc .MakeFloat (_bffee *float64 (_gcebf .TypoAscender ));_dbaee .Descent =_dc .MakeFloat (_bffee *float64 (_gcebf .TypoDescender ));_dbaee .CapHeight =_dc .MakeFloat (_bffee *float64 (_gcebf .CapHeight ));
_dbaee .FontBBox =_dc .MakeArrayFromFloats ([]float64 {_bffee *float64 (_gcebf .Xmin ),_bffee *float64 (_gcebf .Ymin ),_bffee *float64 (_gcebf .Xmax ),_bffee *float64 (_gcebf .Ymax )});_dbaee .ItalicAngle =_dc .MakeFloat (_gcebf .ItalicAngle );_dbaee .MissingWidth =_dc .MakeFloat (_bffee *float64 (_gcebf .Widths [0]));
_abba ,_eacef :=_dc .MakeStream (_bbade ,_dc .NewFlateEncoder ());if _eacef !=nil {_bg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_eacef );
return nil ,_eacef ;};_abba .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dc .MakeInteger (int64 (len (_bbade ))));_dbaee .FontFile2 =_abba ;if _gcebf .Bold {_dbaee .StemV =_dc .MakeInteger (120);}else {_dbaee .StemV =_dc .MakeInteger (70);
};_cdca :=_faae ;if _gcebf .IsFixedPitch {_cdca |=_afdbb ;};if _gcebf .ItalicAngle !=0{_cdca |=_gbdfg ;};_dbaee .Flags =_dc .MakeInteger (int64 (_cdca ));_adfaf ._dffc =_dbaee ;_cgcdg :=&PdfFont {_efeg :_adfaf };return _cgcdg ,nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gff :=NewPdfAnnotation ();_adgb :=&PdfAnnotationFreeText {};_adgb .PdfAnnotation =_gff ;_adgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gff .SetContext (_adgb );return _adgb ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_abcde *PdfShading )GetContext ()PdfModel {return _abcde ._gggge };

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_gafae *PdfWriter )SetDocInfo (info *PdfInfo ){if _gafae .hasObject (_gafae ._aefdcd ){delete (_gafae ._bgadg ,_gafae ._aefdcd );delete (_gafae ._gbdcc ,_gafae ._aefdcd );for _fdbb ,_bbaad :=range _gafae ._edfca {if _bbaad ==_gafae ._aefdcd {copy (_gafae ._edfca [_fdbb :],_gafae ._edfca [_fdbb +1:]);
_gafae ._edfca [len (_gafae ._edfca )-1]=nil ;_gafae ._edfca =_gafae ._edfca [:len (_gafae ._edfca )-1];break ;};};};_dfcdf :=_dc .PdfIndirectObject {};_dfcdf .PdfObject =info .ToPdfObject ();_gafae ._aefdcd =&_dfcdf ;_gafae .addObject (&_dfcdf );};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gfaga *PdfPage )ToPdfObject ()_dc .PdfObject {_fcaed :=_gfaga ._eeffa ;_gfaga .GetPageDict ();return _fcaed ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bgfd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ccdce *PdfColorspaceDeviceRGB )ToPdfObject ()_dc .PdfObject {return _dc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};var (CourierName =_eb .CourierName ;CourierBoldName =_eb .CourierBoldName ;CourierObliqueName =_eb .CourierObliqueName ;
CourierBoldObliqueName =_eb .CourierBoldObliqueName ;HelveticaName =_eb .HelveticaName ;HelveticaBoldName =_eb .HelveticaBoldName ;HelveticaObliqueName =_eb .HelveticaObliqueName ;HelveticaBoldObliqueName =_eb .HelveticaBoldObliqueName ;SymbolName =_eb .SymbolName ;
ZapfDingbatsName =_eb .ZapfDingbatsName ;TimesRomanName =_eb .TimesRomanName ;TimesBoldName =_eb .TimesBoldName ;TimesItalicName =_eb .TimesItalicName ;TimesBoldItalicName =_eb .TimesBoldItalicName ;);func (_gacc *PdfReader )newPdfActionHideFromDict (_eeea *_dc .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_eeea .Get ("\u0054"),H :_eeea .Get ("\u0048")},nil ;
};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _dc .PdfObject ;_eefe []byte ;_ddgf *_dc .PdfIndirectObject ;};func _acedg (_ffcac StdFontName )(pdfFontSimple ,error ){_adeag ,_egca :=_eb .NewStdFontByName (_ffcac );if !_egca {return pdfFontSimple {},ErrFontNotSupported ;
};_fbbg :=_bcbae (_adeag );return _fbbg ,nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _dc .StreamEncoder )(*XObjectImage ,error ){_fggcd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_fggcd ,img ,cs ,encoder );};func (_edgcf *PdfWriter )copyObject (_bcbbf _dc .PdfObject ,_dbbdc map[_dc .PdfObject ]_dc .PdfObject ,_feebc map[_dc .PdfObject ]struct{},_bbdgg bool )_dc .PdfObject {_dcgb :=!_edgcf ._gcbbg &&_feebc !=nil ;
if _bbae ,_cgedd :=_dbbdc [_bcbbf ];_cgedd {if _dcgb &&!_bbdgg {delete (_feebc ,_bcbbf );};return _bbae ;};_gecd :=_bcbbf ;switch _gaece :=_bcbbf .(type ){case *_dc .PdfObjectArray :_egbbdb :=_dc .MakeArray ();_gecd =_egbbdb ;_dbbdc [_bcbbf ]=_gecd ;for _ ,_degagc :=range _gaece .Elements (){_egbbdb .Append (_edgcf .copyObject (_degagc ,_dbbdc ,_feebc ,_bbdgg ));
};case *_dc .PdfObjectStreams :_ccae :=&_dc .PdfObjectStreams {PdfObjectReference :_gaece .PdfObjectReference };_gecd =_ccae ;_dbbdc [_bcbbf ]=_gecd ;for _ ,_bgggc :=range _gaece .Elements (){_ccae .Append (_edgcf .copyObject (_bgggc ,_dbbdc ,_feebc ,_bbdgg ));
};case *_dc .PdfObjectStream :_dgadf :=&_dc .PdfObjectStream {Stream :_gaece .Stream ,PdfObjectReference :_gaece .PdfObjectReference };_gecd =_dgadf ;_dbbdc [_bcbbf ]=_gecd ;_dgadf .PdfObjectDictionary =_edgcf .copyObject (_gaece .PdfObjectDictionary ,_dbbdc ,_feebc ,_bbdgg ).(*_dc .PdfObjectDictionary );
case *_dc .PdfObjectDictionary :var _bgggg bool ;if _dcgb &&!_bbdgg {if _ceabe ,_ :=_dc .GetNameVal (_gaece .Get ("\u0054\u0079\u0070\u0065"));_ceabe =="\u0050\u0061\u0067\u0065"{_ ,_afgeb :=_edgcf ._gfceb [_gaece ];_bbdgg =!_afgeb ;_bgggg =_bbdgg ;};};
_eefbd :=_dc .MakeDict ();_gecd =_eefbd ;_dbbdc [_bcbbf ]=_gecd ;for _ ,_adbe :=range _gaece .Keys (){_eefbd .Set (_adbe ,_edgcf .copyObject (_gaece .Get (_adbe ),_dbbdc ,_feebc ,_bbdgg ));};if _bgggg {_gecd =_dc .MakeNull ();_bbdgg =false ;};case *_dc .PdfIndirectObject :_fgbdf :=&_dc .PdfIndirectObject {PdfObjectReference :_gaece .PdfObjectReference };
_gecd =_fgbdf ;_dbbdc [_bcbbf ]=_gecd ;_fgbdf .PdfObject =_edgcf .copyObject (_gaece .PdfObject ,_dbbdc ,_feebc ,_bbdgg );case *_dc .PdfObjectString :_bcgbc :=*_gaece ;_gecd =&_bcgbc ;_dbbdc [_bcbbf ]=_gecd ;case *_dc .PdfObjectName :_fccga :=*_gaece ;
_gecd =&_fccga ;_dbbdc [_bcbbf ]=_gecd ;case *_dc .PdfObjectNull :_gecd =_dc .MakeNull ();_dbbdc [_bcbbf ]=_gecd ;case *_dc .PdfObjectInteger :_fdgge :=*_gaece ;_gecd =&_fdgge ;_dbbdc [_bcbbf ]=_gecd ;case *_dc .PdfObjectReference :_ccgea :=*_gaece ;_gecd =&_ccgea ;
_dbbdc [_bcbbf ]=_gecd ;case *_dc .PdfObjectFloat :_bfgab :=*_gaece ;_gecd =&_bfgab ;_dbbdc [_bcbbf ]=_gecd ;case *_dc .PdfObjectBool :_bcedb :=*_gaece ;_gecd =&_bcedb ;_dbbdc [_bcbbf ]=_gecd ;case *pdfSignDictionary :_bgab :=&pdfSignDictionary {PdfObjectDictionary :_dc .MakeDict (),_ccdec :_gaece ._ccdec ,_bfcef :_gaece ._bfcef };
_gecd =_bgab ;_dbbdc [_bcbbf ]=_gecd ;for _ ,_dcdg :=range _gaece .Keys (){_bgab .Set (_dcdg ,_edgcf .copyObject (_gaece .Get (_dcdg ),_dbbdc ,_feebc ,_bbdgg ));};default:_bg .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_bcbbf );
};if _dcgb &&_bbdgg {_feebc [_bcbbf ]=struct{}{};};return _gecd ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dc .PdfObject ;IC _dc .PdfObject ;RO _dc .PdfObject ;OverlayText _dc .PdfObject ;Repeat _dc .PdfObject ;DA _dc .PdfObject ;Q _dc .PdfObject ;};func (_gafd *PdfAcroForm )fill (_ffeef FieldValueProvider ,_gabe FieldAppearanceGenerator )error {if _gafd ==nil {return nil ;
};_bfbg ,_gefdf :=_ffeef .FieldValues ();if _gefdf !=nil {return _gefdf ;};for _ ,_fdbd :=range _gafd .AllFields (){_fged :=_fdbd .PartialName ();_gdadg ,_affd :=_bfbg [_fged ];if !_affd {if _aceg ,_cgfga :=_fdbd .FullName ();_cgfga ==nil {_gdadg ,_affd =_bfbg [_aceg ];
};};if !_affd {_bg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fged );
continue ;};if _dbaf :=_gcee (_fdbd ,_gdadg );_dbaf !=nil {return _dbaf ;};if _gabe ==nil {continue ;};for _ ,_fcdf :=range _fdbd .Annotations {_ccdcffc ,_gfbaf :=_gabe .GenerateAppearanceDict (_gafd ,_fdbd ,_fcdf );if _gfbaf !=nil {return _gfbaf ;};_fcdf .AP =_ccdcffc ;
_fcdf .ToPdfObject ();};};return nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_eagde :=&PdfColorspaceDeviceN {};return _eagde ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_edad *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_edad .ToPdfOutline ().PdfOutlineTreeNode ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_cb :=NewPdfAction ();_bab :=&PdfActionNamed {};_bab .PdfAction =_cb ;_cb .SetContext (_bab );return _bab ;};

// ToPdfObject implements interface PdfModel.
func (_ccbg *PdfAnnotationSound )ToPdfObject ()_dc .PdfObject {_ccbg .PdfAnnotation .ToPdfObject ();_cbff :=_ccbg ._cgcd ;_cede :=_cbff .PdfObject .(*_dc .PdfObjectDictionary );_ccbg .PdfAnnotationMarkup .appendToPdfDictionary (_cede );_cede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0053\u006f\u0075n\u0064"));
_cede .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ccbg .Sound );_cede .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ccbg .Name );return _cbff ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_dbbe *PdfField )GetContext ()PdfModel {return _dbbe ._fddc };

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gfde *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gfde .flattenFieldsWithOpts (allannots ,appgen ,nil );};func _cgad (_gaegb *XObjectImage )error {if _gaegb .SMask ==nil {return nil ;};_agaag ,_fefdd :=_gaegb .SMask .(*_dc .PdfObjectStream );
if !_fefdd {_bg .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _dc .ErrTypeError ;};_agbee :=_agaag .PdfObjectDictionary ;
_bbcace :=_agbee .Get ("\u004d\u0061\u0074t\u0065");if _bbcace ==nil {return nil ;};_cgcceb ,_fdgcf :=_edbf (_bbcace .(*_dc .PdfObjectArray ));if _fdgcf !=nil {return _fdgcf ;};_fccea :=_dc .MakeArrayFromFloats ([]float64 {_cgcceb });_agbee .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fccea );
return nil ;};

// SetFlag sets the flag for the field.
func (_ceca *PdfField )SetFlag (flag FieldFlag ){_ceca .Ff =_dc .MakeInteger (int64 (flag ))};