//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_dbd "bytes";_bg "crypto/md5";_gd "crypto/rand";_bcf "crypto/sha1";_g "crypto/x509";_bc "encoding/binary";_bd "encoding/hex";_bb "errors";_b "fmt";_fe "github.com/unidoc/pkcs7";_cg "github.com/unidoc/unipdf/v3/common";
_gadb "github.com/unidoc/unipdf/v3/core";_gad "github.com/unidoc/unipdf/v3/core/security";_dd "github.com/unidoc/unipdf/v3/core/security/crypt";_gde "github.com/unidoc/unipdf/v3/internal/cmap";_cf "github.com/unidoc/unipdf/v3/internal/imageutil";_ef "github.com/unidoc/unipdf/v3/internal/license";
_cb "github.com/unidoc/unipdf/v3/internal/sampling";_gcc "github.com/unidoc/unipdf/v3/internal/textencoding";_fee "github.com/unidoc/unipdf/v3/internal/timeutils";_dbb "github.com/unidoc/unipdf/v3/internal/transform";_dgd "github.com/unidoc/unipdf/v3/model/internal/docutil";
_bf "github.com/unidoc/unipdf/v3/model/internal/fonts";_cde "github.com/unidoc/unipdf/v3/model/mdp";_bdf "github.com/unidoc/unipdf/v3/model/sigutil";_fdg "github.com/unidoc/unipdf/v3/ps";_gcf "github.com/unidoc/unitype";_gg "golang.org/x/xerrors";_eb "hash";
_ga "image";_cd "image/color";_ "image/gif";_ "image/png";_cc "io";_dg "io/ioutil";_gee "math";_d "math/rand";_eba "os";_ea "regexp";_ge "sort";_gc "strconv";_db "strings";_be "sync";_f "time";_fb "unicode";_fd "unicode/utf8";);

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_fae :=NewPdfAnnotation ();_fbea :=&PdfAnnotationCircle {};_fbea .PdfAnnotation =_fae ;_fbea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fae .SetContext (_fbea );return _fbea ;};

// ToPdfObject implements interface PdfModel.
func (_fbb *PdfActionThread )ToPdfObject ()_gadb .PdfObject {_fbb .PdfAction .ToPdfObject ();_bdcb :=_fbb ._ec ;_ead :=_bdcb .PdfObject .(*_gadb .PdfObjectDictionary );_ead .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeThread )));if _fbb .F !=nil {_ead .Set ("\u0046",_fbb .F .ToPdfObject ());
};_ead .SetIfNotNil ("\u0044",_fbb .D );_ead .SetIfNotNil ("\u0042",_fbb .B );return _bdcb ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _gadb .PdfObject ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_bcfc :=&PdfColorspaceCalGray {};_bcfc .BlackPoint =[]float64 {0.0,0.0,0.0};_bcfc .Gamma =1;return _bcfc ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_edbg *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _edbg .Range };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_afbc *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_feaa :=vals [0];if _feaa < 0.0||_feaa > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_feaa );
return nil ,ErrColorOutOfRange ;};_cgga :=vals [1];if _cgga < 0.0||_cgga > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cgga );return nil ,ErrColorOutOfRange ;
};_bdgf :=vals [2];if _bdgf < 0.0||_bdgf > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bdgf );return nil ,ErrColorOutOfRange ;};_afbae :=vals [3];
if _afbae < 0.0||_afbae > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afbae );return nil ,ErrColorOutOfRange ;};_aceb :=NewPdfColorDeviceCMYK (_feaa ,_cgga ,_bdgf ,_afbae );
return _aceb ,nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_adgbe *DSS )ToPdfObject ()_gadb .PdfObject {_edecc :=_adgbe ._acae .PdfObject .(*_gadb .PdfObjectDictionary );_edecc .Clear ();_febae :=_gadb .MakeDict ();for _ebecb ,_egfe :=range _adgbe .VRI {_febae .Set (*_gadb .MakeName (_ebecb ),_egfe .ToPdfObject ());
};_edecc .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_fgaa (_adgbe .Certs ));_edecc .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_fgaa (_adgbe .OCSPs ));_edecc .SetIfNotNil ("\u0043\u0052\u004c\u0073",_fgaa (_adgbe .CRLs ));_edecc .Set ("\u0056\u0052\u0049",_febae );
return _adgbe ._acae ;};func (_fafaf *pdfCIDFontType0 )baseFields ()*fontCommon {return &_fafaf .fontCommon };

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_bdbcad *modelManager )GetPrimitiveFromModel (model PdfModel )_gadb .PdfObject {_bcaca ,_dcgcf :=_bdbcad ._dfdb [model ];if !_dcgcf {return nil ;};return _bcaca ;};

// ToPdfObject implements interface PdfModel.
func (_aefa *PdfAnnotationLine )ToPdfObject ()_gadb .PdfObject {_aefa .PdfAnnotation .ToPdfObject ();_baag :=_aefa ._defb ;_dggf :=_baag .PdfObject .(*_gadb .PdfObjectDictionary );_aefa .PdfAnnotationMarkup .appendToPdfDictionary (_dggf );_dggf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u004c\u0069\u006e\u0065"));
_dggf .SetIfNotNil ("\u004c",_aefa .L );_dggf .SetIfNotNil ("\u0042\u0053",_aefa .BS );_dggf .SetIfNotNil ("\u004c\u0045",_aefa .LE );_dggf .SetIfNotNil ("\u0049\u0043",_aefa .IC );_dggf .SetIfNotNil ("\u004c\u004c",_aefa .LL );_dggf .SetIfNotNil ("\u004c\u004c\u0045",_aefa .LLE );
_dggf .SetIfNotNil ("\u0043\u0061\u0070",_aefa .Cap );_dggf .SetIfNotNil ("\u0049\u0054",_aefa .IT );_dggf .SetIfNotNil ("\u004c\u004c\u004f",_aefa .LLO );_dggf .SetIfNotNil ("\u0043\u0050",_aefa .CP );_dggf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aefa .Measure );
_dggf .SetIfNotNil ("\u0043\u004f",_aefa .CO );return _baag ;};func (_abbe *pdfFontType0 )baseFields ()*fontCommon {return &_abbe .fontCommon };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_gdfg :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_gdfg ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fbcg pdfFontType0 )GetRuneMetrics (r rune )(_bf .CharMetrics ,bool ){if _fbcg .DescendantFont ==nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fbcg );
return _bf .CharMetrics {},false ;};return _fbcg .DescendantFont .GetRuneMetrics (r );};

// SetDecode sets the decode image float slice.
func (_gafed *Image )SetDecode (decode []float64 ){_gafed ._bdge =decode };

// GetContainingPdfObject implements interface PdfModel.
func (_ecceb *PdfSignatureReference )GetContainingPdfObject ()_gadb .PdfObject {return _ecceb ._ccdef };func _gbcag ()string {_cccgd .Lock ();defer _cccgd .Unlock ();return _gebdf };var _ pdfFont =(*pdfCIDFontType0 )(nil );func (_cdddb fontCommon )coreString ()string {_dbfc :="";
if _cdddb ._bbgfe !=nil {_dbfc =_cdddb ._bbgfe .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_cdddb ._dccge ,_cdddb ._bbecb ,_cdddb ._gfgad ,_cdddb ._febe ,_cdddb ._eagb !=nil ,_cdddb .fontFlags (),_dbfc );
};

// ToPdfObject implements interface PdfModel.
func (_dbc *PdfActionLaunch )ToPdfObject ()_gadb .PdfObject {_dbc .PdfAction .ToPdfObject ();_fa :=_dbc ._ec ;_ced :=_fa .PdfObject .(*_gadb .PdfObjectDictionary );_ced .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeLaunch )));if _dbc .F !=nil {_ced .Set ("\u0046",_dbc .F .ToPdfObject ());
};_ced .SetIfNotNil ("\u0057\u0069\u006e",_dbc .Win );_ced .SetIfNotNil ("\u004d\u0061\u0063",_dbc .Mac );_ced .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dbc .Unix );_ced .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dbc .NewWindow );return _fa ;
};

// Val returns the color value.
func (_cbdb *PdfColorDeviceGray )Val ()float64 {return float64 (*_cbdb )};func (_cbgd *PdfReader )newPdfAnnotation3DFromDict (_gcef *_gadb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_gfb :=PdfAnnotation3D {};_gfb .T3DD =_gcef .Get ("\u0033\u0044\u0044");
_gfb .T3DV =_gcef .Get ("\u0033\u0044\u0056");_gfb .T3DA =_gcef .Get ("\u0033\u0044\u0041");_gfb .T3DI =_gcef .Get ("\u0033\u0044\u0049");_gfb .T3DB =_gcef .Get ("\u0033\u0044\u0042");return &_gfb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bggd *PdfAnnotationSquare )ToPdfObject ()_gadb .PdfObject {_bggd .PdfAnnotation .ToPdfObject ();_bbabc :=_bggd ._defb ;_deb :=_bbabc .PdfObject .(*_gadb .PdfObjectDictionary );if _bggd .PdfAnnotationMarkup !=nil {_bggd .PdfAnnotationMarkup .appendToPdfDictionary (_deb );
};_deb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_deb .SetIfNotNil ("\u0042\u0053",_bggd .BS );_deb .SetIfNotNil ("\u0049\u0043",_bggd .IC );_deb .SetIfNotNil ("\u0042\u0045",_bggd .BE );
_deb .SetIfNotNil ("\u0052\u0044",_bggd .RD );return _bbabc ;};

// HasExtGState checks if ExtGState name is available.
func (_cedc *PdfPage )HasExtGState (name _gadb .PdfObjectName )bool {if _cedc .Resources ==nil {return false ;};if _cedc .Resources .ExtGState ==nil {return false ;};_ccgbe ,_begd :=_gadb .TraceToDirectObject (_cedc .Resources .ExtGState ).(*_gadb .PdfObjectDictionary );
if !_begd {_cg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gadb .TraceToDirectObject (_cedc .Resources .ExtGState ));
return false ;};_cacf :=_ccgbe .Get (name );_fbgc :=_cacf !=nil ;return _fbgc ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _gadb .PdfObject ;Q _gadb .PdfObject ;RC _gadb .PdfObject ;DS _gadb .PdfObject ;CL _gadb .PdfObject ;IT _gadb .PdfObject ;BE _gadb .PdfObject ;RD _gadb .PdfObject ;BS _gadb .PdfObject ;
LE _gadb .PdfObject ;};

// String returns a string that describes `base`.
func (_edaae fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_edaae .coreString ());};

// C returns the value of the cyan component of the color.
func (_ffb *PdfColorDeviceCMYK )C ()float64 {return _ffb [0]};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bdae *PdfFont )SubsetRegistered ()error {switch _edga :=_bdae ._ecfec .(type ){case *pdfFontType0 :_fffb :=_edga .subsetRegistered ();if _fffb !=nil {_cg .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fffb );
return _fffb ;};if _edga ._cebe !=nil {if _edga ._bagcbf !=nil {_edga ._bagcbf .ToPdfObject ();};_edga .ToPdfObject ();};default:_cg .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_edga );
};return nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ebcg :=NewPdfAction ();_fdc :=&PdfActionTrans {};_fdc .PdfAction =_ebcg ;_ebcg .SetContext (_fdc );return _fdc ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_egfg []byte ;_bdge []float64 ;};const (_gbdef =0x00001;_acegd =0x00002;_fgca =0x00004;_ggae =0x00008;_fede =0x00020;_gecee =0x00040;_abgg =0x10000;_ebbac =0x20000;
_aecb =0x40000;);func (_eece *PdfReader )newPdfAnnotationSoundFromDict (_ggcb *_gadb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dgb :=PdfAnnotationSound {};_eeec ,_cefg :=_eece .newPdfAnnotationMarkupFromDict (_ggcb );if _cefg !=nil {return nil ,_cefg ;
};_dgb .PdfAnnotationMarkup =_eeec ;_dgb .Name =_ggcb .Get ("\u004e\u0061\u006d\u0065");_dgb .Sound =_ggcb .Get ("\u0053\u006f\u0075n\u0064");return &_dgb ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_bebb *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_ddgf :=0.3*_bebb .R ()+0.59*_bebb .G ()+0.11*_bebb .B ();_ddgf =_gee .Min (_gee .Max (_ddgf ,0.0),1.0);return NewPdfColorDeviceGray (_ddgf );};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _gadb .PdfObject ;Open _gadb .PdfObject ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_faaeda DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fded _cc .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_ccdbf _ga .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_efdac _ga .Image )(*Image ,error );

// Compress an image.
Compress (_aacba *Image ,_ffbeg int64 )(*Image ,error );};

// R returns the value of the red component of the color.
func (_cdfgb *PdfColorDeviceRGB )R ()float64 {return _cdfgb [0]};func _adca (_daaca *_gadb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bfgce :=&PdfShadingPattern {};_edgee :=_daaca .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _edgee ==nil {_cg .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dggd ,_gfcbfb :=_eccae (_edgee );if _gfcbfb !=nil {_cg .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gfcbfb );return nil ,_gfcbfb ;
};_bfgce .Shading =_dggd ;if _ebcff :=_daaca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ebcff !=nil {_ccaf ,_ceccb :=_ebcff .(*_gadb .PdfObjectArray );if !_ceccb {_cg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebcff );
return nil ,_gadb .ErrTypeError ;};_bfgce .Matrix =_ccaf ;};if _aefea :=_daaca .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_aefea !=nil {_bfgce .ExtGState =_aefea ;};return _bfgce ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_fgff :=PdfColorLab {l ,a ,b };return &_fgff };

// WriteString outputs the object as it is to be written to file.
func (_dgggbg *pdfSignDictionary )WriteString ()string {_dgggbg ._degae =0;_dgggbg ._beea =0;_dgggbg ._eaacc =0;_dgggbg ._cccgb =0;_gdaf :=_dbd .NewBuffer (nil );_gdaf .WriteString ("\u003c\u003c");for _ ,_abcea :=range _dgggbg .Keys (){_cafdd :=_dgggbg .Get (_abcea );
switch _abcea {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gdaf .WriteString (_abcea .WriteString ());_gdaf .WriteString ("\u0020");_dgggbg ._eaacc =_gdaf .Len ();_gdaf .WriteString (_cafdd .WriteString ());_gdaf .WriteString ("\u0020");_dgggbg ._cccgb =_gdaf .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gdaf .WriteString (_abcea .WriteString ());_gdaf .WriteString ("\u0020");_dgggbg ._degae =_gdaf .Len ();_gdaf .WriteString (_cafdd .WriteString ());_gdaf .WriteString ("\u0020");_dgggbg ._beea =_gdaf .Len ()-1;
default:_gdaf .WriteString (_abcea .WriteString ());_gdaf .WriteString ("\u0020");_gdaf .WriteString (_cafdd .WriteString ());};};_gdaf .WriteString ("\u003e\u003e");return _gdaf .String ();};

// A returns the value of the A component of the color.
func (_dcfe *PdfColorLab )A ()float64 {return _dcfe [1]};

// GetCerts returns the signature certificate chain.
func (_daegb *PdfSignature )GetCerts ()([]*_g .Certificate ,error ){var _gcegf []func ()([]*_g .Certificate ,error );switch _gbdbg ,_ :=_gadb .GetNameVal (_daegb .SubFilter );_gbdbg {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gcegf =append (_gcegf ,_daegb .extractChainFromPKCS7 ,_daegb .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gcegf =append (_gcegf ,_daegb .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gcegf =append (_gcegf ,_daegb .extractChainFromPKCS7 );
default:return nil ,_b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_gbdbg );};for _ ,_feadfg :=range _gcegf {_aabfc ,_bacd :=_feadfg ();if _bacd !=nil {return nil ,_bacd ;
};if len (_aabfc )> 0{return _aabfc ,nil ;};};return nil ,ErrSignNoCertificates ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_cbggg *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _cbggg .baseFields ()._bbgfe !=nil {return _cbggg .baseFields ()._bbgfe ;};if _cgfb :=_cbggg ._ecfec .getFontDescriptor ();_cgfb !=nil {return _cgfb ;};_cg .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_cbggg );
return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_faafd *PdfShading )ToPdfObject ()_gadb .PdfObject {_cceffc :=_faafd ._gfbgb ;_fgfe ,_aaggg :=_faafd .getShadingDict ();if _aaggg !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _faafd .ShadingType !=nil {_fgfe .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_faafd .ShadingType );};if _faafd .ColorSpace !=nil {_fgfe .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_faafd .ColorSpace .ToPdfObject ());
};if _faafd .Background !=nil {_fgfe .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_faafd .Background );};if _faafd .BBox !=nil {_fgfe .Set ("\u0042\u0042\u006f\u0078",_faafd .BBox .ToPdfObject ());};if _faafd .AntiAlias !=nil {_fgfe .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_faafd .AntiAlias );
};return _cceffc ;};var _aafeb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gdgf :=NewPdfAnnotation ();_gdbe :=&PdfAnnotationStrikeOut {};_gdbe .PdfAnnotation =_gdgf ;_gdbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdgf .SetContext (_gdbe );return _gdbe ;};func _ceefe (_fagb _cc .ReadSeeker ,_fddbg *ReaderOpts ,_fbggg bool ,_fdcce string )(*PdfReader ,error ){if _fddbg ==nil {_fddbg =NewReaderOpts ();
};_dcbfd :=*_fddbg ;_fefcg :=&PdfReader {_ddde :_fagb ,_cbfgc :map[_gadb .PdfObject ]struct{}{},_gaccc :_bdeeg (),_fdbdd :_fddbg .LazyLoad ,_eafa :_fddbg .ComplianceMode ,_dcfee :_fbggg ,_ggdaa :&_dcbfd };_bfcc ,_dacff :=_ecgfc ("\u0072");if _dacff !=nil {return nil ,_dacff ;
};_dacff =_ef .Track (_bfcc ,_fdcce );if _dacff !=nil {return nil ,_dacff ;};_fefcg ._cddbe =_bfcc ;var _ebad *_gadb .PdfParser ;if !_fefcg ._eafa {_ebad ,_dacff =_gadb .NewParser (_fagb );}else {_ebad ,_dacff =_gadb .NewCompliancePdfParser (_fagb );};
if _dacff !=nil {return nil ,_dacff ;};_fefcg ._becf =_ebad ;_abeee ,_dacff :=_fefcg .IsEncrypted ();if _dacff !=nil {return nil ,_dacff ;};if !_abeee {_dacff =_fefcg .loadStructure ();if _dacff !=nil {return nil ,_dacff ;};}else if _fbggg {_gdbge ,_aabc :=_fefcg .Decrypt ([]byte (_fddbg .Password ));
if _aabc !=nil {return nil ,_aabc ;};if !_gdbge {return nil ,_bb .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_fefcg ._cfdad =make (map[*PdfReader ]*PdfReader );_fefcg ._cabfa =make ([]*PdfReader ,_ebad .GetRevisionNumber ());return _fefcg ,nil ;};func (_cadd *PdfReader )newPdfAnnotationLinkFromDict (_ceba *_gadb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_fbg :=PdfAnnotationLink {};
_fbg .A =_ceba .Get ("\u0041");_fbg .Dest =_ceba .Get ("\u0044\u0065\u0073\u0074");_fbg .H =_ceba .Get ("\u0048");_fbg .PA =_ceba .Get ("\u0050\u0041");_fbg .QuadPoints =_ceba .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fbg .BS =_ceba .Get ("\u0042\u0053");
return &_fbg ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gf PdfModel ;Type _gadb .PdfObject ;S _gadb .PdfObject ;Next _gadb .PdfObject ;_ec *_gadb .PdfIndirectObject ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gadb .PdfObject ;LE _gadb .PdfObject ;BS _gadb .PdfObject ;IC _gadb .PdfObject ;BE _gadb .PdfObject ;IT _gadb .PdfObject ;Measure _gadb .PdfObject ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bade *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_fgbd :=_cb .NewReader (img .getBase ());_fgec :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_afac :=_cb .NewWriter (_fgec );
_fafc :=_gee .Pow (2,float64 (img .BitsPerComponent ))-1;_cafab :=make ([]uint32 ,3);var (_dede uint32 ;ANorm ,X ,Y ,Z ,_dgcf ,_ggec ,_gbcg float64 ;_fgbdd error ;);for {_dede ,_fgbdd =_fgbd .ReadSample ();if _fgbdd ==_cc .EOF {break ;}else if _fgbdd !=nil {return img ,_fgbdd ;
};ANorm =float64 (_dede )/_fafc ;X =_bade .WhitePoint [0]*_gee .Pow (ANorm ,_bade .Gamma );Y =_bade .WhitePoint [1]*_gee .Pow (ANorm ,_bade .Gamma );Z =_bade .WhitePoint [2]*_gee .Pow (ANorm ,_bade .Gamma );_dgcf =3.240479*X +-1.537150*Y +-0.498535*Z ;
_ggec =-0.969256*X +1.875992*Y +0.041556*Z ;_gbcg =0.055648*X +-0.204043*Y +1.057311*Z ;_dgcf =_gee .Min (_gee .Max (_dgcf ,0),1.0);_ggec =_gee .Min (_gee .Max (_ggec ,0),1.0);_gbcg =_gee .Min (_gee .Max (_gbcg ,0),1.0);_cafab [0]=uint32 (_dgcf *_fafc );
_cafab [1]=uint32 (_ggec *_fafc );_cafab [2]=uint32 (_gbcg *_fafc );if _fgbdd =_afac .WriteSamples (_cafab );_fgbdd !=nil {return img ,_fgbdd ;};};return _fafdf (&_fgec ),nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_fdbab *PdfWriter )ApplyStandard (optimizer StandardApplier ){_fdbab ._edcdc =optimizer };

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_cbca *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbb ,_baee :=_gadb .GetNumbersAsFloat (objects );
if _baee !=nil {return nil ,_baee ;};return _cbca .ColorFromFloats (_fcbb );};func (_dbca *PdfWriter )adjustXRefAffectedVersion (_ebgbg bool ){if _ebgbg &&_dbca ._dagb .Major ==1&&_dbca ._dagb .Minor < 5{_dbca ._dagb .Minor =5;};};

// Add appends an outline item as a child of the current outline item.
func (_facf *OutlineItem )Add (item *OutlineItem ){_facf .Entries =append (_facf .Entries ,item )};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fcce *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ggge *PdfColorspaceDeviceGray )ToPdfObject ()_gadb .PdfObject {return _gadb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_bcab :=&PdfFilespec {};_bcab ._ccad =_gadb .MakeIndirectObject (_gadb .MakeDict ());return _bcab ;};func (_bdbdc *PdfWriter )addObjects (_bgcbe _gadb .PdfObject )error {_cg .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _degfg ,_adddf :=_bgcbe .(*_gadb .PdfIndirectObject );_adddf {_cg .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_cg .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_bgcbe ,_degfg );_cg .Log .Trace ("\u002d\u0020\u0025\u0073",_degfg .PdfObject );
if _bdbdc .addObject (_degfg ){_adabad :=_bdbdc .addObjects (_degfg .PdfObject );if _adabad !=nil {return _adabad ;};};return nil ;};if _gggffb ,_ecdea :=_bgcbe .(*_gadb .PdfObjectStream );_ecdea {_cg .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");
_cg .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_bgcbe ,_bgcbe );if _bdbdc .addObject (_gggffb ){_ebfe :=_bdbdc .addObjects (_gggffb .PdfObjectDictionary );if _ebfe !=nil {return _ebfe ;};};return nil ;};if _cdffa ,_bgaec :=_bgcbe .(*_gadb .PdfObjectDictionary );
_bgaec {_cg .Log .Trace ("\u0044\u0069\u0063\u0074");_cg .Log .Trace ("\u002d\u0020\u0025\u0073",_bgcbe );for _ ,_ecdde :=range _cdffa .Keys (){_gbcce :=_cdffa .Get (_ecdde );if _dcdfbd ,_edab :=_gbcce .(*_gadb .PdfObjectReference );_edab {_gbcce =_dcdfbd .Resolve ();
_cdffa .Set (_ecdde ,_gbcce );};if _ecdde !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _cefff :=_bdbdc .addObjects (_gbcce );_cefff !=nil {return _cefff ;};}else {if _ ,_dagede :=_gbcce .(*_gadb .PdfObjectNull );_dagede {continue ;};if _cdeaa :=_bdbdc .hasObject (_gbcce );
!_cdeaa {_cg .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_gbcce ,_gbcce ,_gbcce );_bdbdc ._ccbdg [_gbcce ]=append (_bdbdc ._ccbdg [_gbcce ],_cdffa );
};};};return nil ;};if _ddeae ,_dafgg :=_bgcbe .(*_gadb .PdfObjectArray );_dafgg {_cg .Log .Trace ("\u0041\u0072\u0072a\u0079");_cg .Log .Trace ("\u002d\u0020\u0025\u0073",_bgcbe );if _ddeae ==nil {return _bb .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _acaab ,_ggabfc :=range _ddeae .Elements (){if _eede ,_afad :=_ggabfc .(*_gadb .PdfObjectReference );_afad {_ggabfc =_eede .Resolve ();_ddeae .Set (_acaab ,_ggabfc );};if _gagg :=_bdbdc .addObjects (_ggabfc );_gagg !=nil {return _gagg ;};};return nil ;
};if _ ,_fcbce :=_bgcbe .(*_gadb .PdfObjectReference );_fcbce {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_bgcbe );
return _bb .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dcdfb pdfCIDFontType0 )GetRuneMetrics (r rune )(_bf .CharMetrics ,bool ){return _bf .CharMetrics {Wx :_dcdfb ._dbge },true ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_dfbcc *PdfReader )GetNameDictionary ()(_gadb .PdfObject ,error ){_febcdg :=_gadb .ResolveReference (_dfbcc ._gbef .Get ("\u004e\u0061\u006de\u0073"));if _febcdg ==nil {return nil ,nil ;};if !_dfbcc ._fdbdd {_eebcef :=_dfbcc .traverseObjectData (_febcdg );
if _eebcef !=nil {return nil ,_eebcef ;};};return _febcdg ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_dafdd *PdfPage )Duplicate ()*PdfPage {_aaddd :=*_dafdd ;_aaddd ._dfbg =_gadb .MakeDict ();_aaddd ._fgbea =_gadb .MakeIndirectObject (_aaddd ._dfbg );_aaddd ._ffaee =*_aaddd ._dfbg ;return &_aaddd ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bbbg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_bb .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_gbdf ,_abf :=_cf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._egfg ,img ._bdge );if _abf !=nil {return img ,_abf ;};_bbabd ,_abf :=_cf .GrayConverter .Convert (_gbdf );if _abf !=nil {return img ,_abf ;
};return _fafdf (_bbabd .Base ()),nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cdfgc *PdfColorCalRGB )GetNumComponents ()int {return 3};func _dgba (_bgafd _gadb .PdfObject )(*PdfColorspaceCalRGB ,error ){_bgfc :=NewPdfColorspaceCalRGB ();if _bdcae ,_fcbd :=_bgafd .(*_gadb .PdfIndirectObject );_fcbd {_bgfc ._cgeb =_bdcae ;};
_bgafd =_gadb .TraceToDirectObject (_bgafd );_feadfd ,_egfbc :=_bgafd .(*_gadb .PdfObjectArray );if !_egfbc {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _feadfd .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bgafd =_gadb .TraceToDirectObject (_feadfd .Get (0));_gcage ,_egfbc :=_bgafd .(*_gadb .PdfObjectName );if !_egfbc {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_gcage !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bgafd =_gadb .TraceToDirectObject (_feadfd .Get (1));
_cfae ,_egfbc :=_bgafd .(*_gadb .PdfObjectDictionary );if !_egfbc {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_bgafd =_cfae .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bgafd =_gadb .TraceToDirectObject (_bgafd );_cbfc ,_egfbc :=_bgafd .(*_gadb .PdfObjectArray );if !_egfbc {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _cbfc .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cecc ,_bccd :=_cbfc .GetAsFloat64Slice ();
if _bccd !=nil {return nil ,_bccd ;};_bgfc .WhitePoint =_cecc ;_bgafd =_cfae .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bgafd !=nil {_bgafd =_gadb .TraceToDirectObject (_bgafd );_dddd ,_cagdf :=_bgafd .(*_gadb .PdfObjectArray );
if !_cagdf {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _dddd .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_fbdg ,_caged :=_dddd .GetAsFloat64Slice ();if _caged !=nil {return nil ,_caged ;};_bgfc .BlackPoint =_fbdg ;};_bgafd =_cfae .Get ("\u0047\u0061\u006dm\u0061");if _bgafd !=nil {_bgafd =_gadb .TraceToDirectObject (_bgafd );_aedg ,_cgde :=_bgafd .(*_gadb .PdfObjectArray );
if !_cgde {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _aedg .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_adcb ,_fbde :=_aedg .GetAsFloat64Slice ();if _fbde !=nil {return nil ,_fbde ;};_bgfc .Gamma =_adcb ;};_bgafd =_cfae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bgafd !=nil {_bgafd =_gadb .TraceToDirectObject (_bgafd );_gggf ,_baec :=_bgafd .(*_gadb .PdfObjectArray );
if !_baec {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _gggf .Len ()!=9{_cg .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_gggf .String ());
return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_agea ,_dcad :=_gggf .GetAsFloat64Slice ();if _dcad !=nil {return nil ,_dcad ;
};_bgfc .Matrix =_agea ;};return _bgfc ,nil ;};func (_acac *PdfReader )buildNameNodes (_dcdcg *_gadb .PdfIndirectObject ,_ggabd map[_gadb .PdfObject ]struct{})error {if _dcdcg ==nil {return nil ;};if _ ,_gfbgfe :=_ggabd [_dcdcg ];_gfbgfe {_cg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_dcdcg .ObjectNumber );
return nil ;};_ggabd [_dcdcg ]=struct{}{};_aaea ,_cdgd :=_dcdcg .PdfObject .(*_gadb .PdfObjectDictionary );if !_cdgd {return _bb .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _bbdee ,_ccgga :=_gadb .GetDict (_aaea .Get ("\u0044\u0065\u0073t\u0073"));
_ccgga {_feag ,_adgaa :=_gadb .GetArray (_bbdee .Get ("\u004b\u0069\u0064\u0073"));if !_adgaa {return _bb .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_cg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_feag );
for _dcegd ,_gbacc :=range _feag .Elements (){_dacad ,_dfcc :=_gadb .GetIndirect (_gbacc );if !_dfcc {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_dacad );
return _bb .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_feag .Set (_dcegd ,_dacad );_fdceg :=_acac .buildNameNodes (_dacad ,_ggabd );if _fdceg !=nil {return _fdceg ;
};};};if _aegfb ,_geega :=_gadb .GetDict (_aaea );_geega {if !_gadb .IsNullObject (_aegfb .Get ("\u004b\u0069\u0064\u0073")){if _fefeac ,_abeed :=_gadb .GetArray (_aegfb .Get ("\u004b\u0069\u0064\u0073"));_abeed {for _egafe ,_bbed :=range _fefeac .Elements (){if _bebaa ,_fgdge :=_gadb .GetIndirect (_bbed );
_fgdge {_fefeac .Set (_egafe ,_bebaa );_gcfge :=_acac .buildNameNodes (_bebaa ,_ggabd );if _gcfge !=nil {return _gcfge ;};};};};};};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fdcb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fdcb .Alternate ==nil {if _fdcb .N ==1{_ffbe :=NewPdfColorspaceDeviceGray ();return _ffbe .ColorFromFloats (vals );}else if _fdcb .N ==3{_gfae :=NewPdfColorspaceDeviceRGB ();
return _gfae .ColorFromFloats (vals );}else if _fdcb .N ==4{_ebaa :=NewPdfColorspaceDeviceCMYK ();return _ebaa .ColorFromFloats (vals );}else {return nil ,_bb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fdcb .Alternate .ColorFromFloats (vals );};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _gadb .PdfObject ;BS _gadb .PdfObject ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gadb .PdfObject ;IC _gadb .PdfObject ;RO _gadb .PdfObject ;OverlayText _gadb .PdfObject ;Repeat _gadb .PdfObject ;DA _gadb .PdfObject ;Q _gadb .PdfObject ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_ddffa *PdfAcroForm )GetContainingPdfObject ()_gadb .PdfObject {return _ddffa ._ggff };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_aaeb *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fda :=vals [0];if _fda < 0.0||_fda > 1.0{_cg .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _fda < 0.0{_fda =0.0;}else if _fda > 1.0{_fda =1.0;};return NewPdfColorDeviceGray (_fda ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_egd *PdfActionResetForm )ToPdfObject ()_gadb .PdfObject {_egd .PdfAction .ToPdfObject ();_cbbc :=_egd ._ec ;_cda :=_cbbc .PdfObject .(*_gadb .PdfObjectDictionary );_cda .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeResetForm )));_cda .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_egd .Fields );
_cda .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_egd .Flags );return _cbbc ;};func (_aeeag *PdfFunctionType0 )processSamples ()error {_feee :=_cb .ResampleBytes (_aeeag ._daebe ,_aeeag .BitsPerSample );_aeeag ._edgda =_feee ;return nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_fcaccf *PdfReader )GetTrailer ()(*_gadb .PdfObjectDictionary ,error ){_bddfe :=_fcaccf ._becf .GetTrailer ();if _bddfe ==nil {return nil ,_bb .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bddfe ,nil ;
};func (_dccg *PdfReader )newPdfActionImportDataFromDict (_gbg *_gadb .PdfObjectDictionary )(*PdfActionImportData ,error ){_fagd ,_cfd :=_acb (_gbg .Get ("\u0046"));if _cfd !=nil {return nil ,_cfd ;};return &PdfActionImportData {F :_fagd },nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_eacbe *PdfWriter )writeTrailer (_cebac int ){_eacbe .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _eegbd :=0;
_eegbd <=_cebac ;{for ;_eegbd <=_cebac ;_eegbd ++{_eaeef ,_agfbc :=_eacbe ._efeb [_eegbd ];if _agfbc &&(!_eacbe ._gfdfd ||_eacbe ._gfdfd &&(_eaeef .Type ==1&&_eaeef .Offset >=_eacbe ._cgfd ||_eaeef .Type ==0)){break ;};};var _aegaef int ;for _aegaef =_eegbd +1;
_aegaef <=_cebac ;_aegaef ++{_bdfdb ,_eebfe :=_eacbe ._efeb [_aegaef ];if _eebfe &&(!_eacbe ._gfdfd ||_eacbe ._gfdfd &&(_bdfdb .Type ==1&&_bdfdb .Offset > _eacbe ._cgfd )){continue ;};break ;};_gaedf :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_eegbd ,_aegaef -_eegbd );
_eacbe .writeString (_gaedf );for _bbgfbd :=_eegbd ;_bbgfbd < _aegaef ;_bbgfbd ++{_debeb :=_eacbe ._efeb [_bbgfbd ];switch _debeb .Type {case 0:_gaedf =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_eacbe .writeString (_gaedf );case 1:_gaedf =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_debeb .Offset ,0);_eacbe .writeString (_gaedf );};};_eegbd =_aegaef +1;};_gdegbc :=_gadb .MakeDict ();_gdegbc .Set ("\u0049\u006e\u0066\u006f",_eacbe ._ceeegd );
_gdegbc .Set ("\u0052\u006f\u006f\u0074",_eacbe ._ccbbbd );_gdegbc .Set ("\u0053\u0069\u007a\u0065",_gadb .MakeInteger (int64 (_cebac +1)));if _eacbe ._gfdfd &&_eacbe ._cbdbd > 0{_gdegbc .Set ("\u0050\u0072\u0065\u0076",_gadb .MakeInteger (_eacbe ._cbdbd ));
};if _eacbe ._fbgac !=nil {_gdegbc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_eacbe ._ceadb );};if _eacbe ._gcgfg ==nil &&_eacbe ._gcbdb !=""&&_eacbe ._eedfa !=""{_eacbe ._gcgfg =_gadb .MakeArray (_gadb .MakeHexString (_eacbe ._gcbdb ),_gadb .MakeHexString (_eacbe ._eedfa ));
};if _eacbe ._gcgfg !=nil {_gdegbc .Set ("\u0049\u0044",_eacbe ._gcgfg );_cg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_eacbe ._gcgfg );};_eacbe .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_eacbe .writeString (_gdegbc .WriteString ());
_eacbe .writeString ("\u000a");};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_abd :=NewPdfAnnotation ();_dbbd :=&PdfAnnotationInk {};_dbbd .PdfAnnotation =_abd ;_dbbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abd .SetContext (_dbbd );return _dbbd ;};

// Add appends a top level outline item to the outline.
func (_bagga *Outline )Add (item *OutlineItem ){_bagga .Entries =append (_bagga .Entries ,item )};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gcg :=NewPdfAction ();_aec :=&PdfActionGoToE {};_aec .PdfAction =_gcg ;_gcg .SetContext (_aec );return _aec ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ccbe *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func _bedge (_fggfb *PdfPage ){_cdfcd :=_ef .GetLicenseKey ();if _cdfcd !=nil &&_cdfcd .IsLicensed (){return ;};_cggbg :=_gadb .PdfObjectName ("\u0055\u0046\u0031");
if !_fggfb .Resources .HasFontByName (_cggbg ){_fggfb .Resources .SetFontByName (_cggbg ,DefaultFont ().ToPdfObject ());};var _abaeed []string ;_abaeed =append (_abaeed ,"\u0071");_abaeed =append (_abaeed ,"\u0042\u0054");_abaeed =append (_abaeed ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_cggbg .String ()));
_abaeed =append (_abaeed ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_abaeed =append (_abaeed ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_agebb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_abaeed =append (_abaeed ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_agebb ));_abaeed =append (_abaeed ,"\u0045\u0054");_abaeed =append (_abaeed ,"\u0051");_fffg :=_db .Join (_abaeed ,"\u000a");_fggfb .AddContentStreamByString (_fffg );_fggfb .ToPdfObject ();
};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_gadb .PdfObjectInteger ;TilingType *_gadb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_gadb .PdfObjectFloat ;YStep *_gadb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_gadb .PdfObjectArray ;
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ggcf *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ggcf .MediaBox !=nil {return _ggcf .MediaBox ,nil ;};_fadba :=_ggcf .Parent ;for _fadba !=nil {_cdag ,_fbffg :=_gadb .GetDict (_fadba );if !_fbffg {return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _begcd :=_cdag .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_begcd !=nil {_egaacg ,_efaca :=_gadb .GetArray (_begcd );if !_efaca {return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_fdffg ,_bggcd :=NewPdfRectangle (*_egaacg );if _bggcd !=nil {return nil ,_bggcd ;};return _fdffg ,nil ;};_fadba =_cdag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_bb .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _gadb .PdfObject )(*PdfOutputIntent ,error ){_fbagb :=&PdfOutputIntent {};if _ffafae :=_fbagb .ParsePdfObject (object );_ffafae !=nil {return nil ,_ffafae ;};return _fbagb ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ddabd *PdfPattern )GetContainingPdfObject ()_gadb .PdfObject {return _ddabd ._cdaag };

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bagcd :=NewPdfAnnotation ();_aabb :=&PdfAnnotationHighlight {};_aabb .PdfAnnotation =_bagcd ;_aabb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bagcd .SetContext (_aabb );return _aabb ;};func _egcfa (_gdeec *_gadb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_ebafg :=PdfShadingType7 {};
_abbaf :=_gdeec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _abbaf ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdcdf ,_ggggd :=_abbaf .(*_gadb .PdfObjectInteger );if !_ggggd {_cg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abbaf );
return nil ,_gadb .ErrTypeError ;};_ebafg .BitsPerCoordinate =_bdcdf ;_abbaf =_gdeec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _abbaf ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bdcdf ,_ggggd =_abbaf .(*_gadb .PdfObjectInteger );if !_ggggd {_cg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_abbaf );
return nil ,_gadb .ErrTypeError ;};_ebafg .BitsPerComponent =_bdcdf ;_abbaf =_gdeec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _abbaf ==nil {_cg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bdcdf ,_ggggd =_abbaf .(*_gadb .PdfObjectInteger );if !_ggggd {_cg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_abbaf );
return nil ,_gadb .ErrTypeError ;};_ebafg .BitsPerComponent =_bdcdf ;_abbaf =_gdeec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _abbaf ==nil {_cg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdgce ,_ggggd :=_abbaf .(*_gadb .PdfObjectArray );if !_ggggd {_cg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abbaf );
return nil ,_gadb .ErrTypeError ;};_ebafg .Decode =_bdgce ;if _cfdff :=_gdeec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cfdff !=nil {_ebafg .Function =[]PdfFunction {};if _gegb ,_egad :=_cfdff .(*_gadb .PdfObjectArray );_egad {for _ ,_bfaee :=range _gegb .Elements (){_dfab ,_caedc :=_bdbagg (_bfaee );
if _caedc !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_caedc );return nil ,_caedc ;};_ebafg .Function =append (_ebafg .Function ,_dfab );
};}else {_bedfb ,_bgbfa :=_bdbagg (_cfdff );if _bgbfa !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgbfa );return nil ,_bgbfa ;
};_ebafg .Function =append (_ebafg .Function ,_bedfb );};};return &_ebafg ,nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gcaea *PdfPageResources )GetXObjectByName (keyName _gadb .PdfObjectName )(*_gadb .PdfObjectStream ,XObjectType ){if _gcaea .XObject ==nil {return nil ,XObjectTypeUndefined ;};_gagdg ,_fafeb :=_gadb .TraceToDirectObject (_gcaea .XObject ).(*_gadb .PdfObjectDictionary );
if !_fafeb {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gadb .TraceToDirectObject (_gcaea .XObject ));
return nil ,XObjectTypeUndefined ;};if _bfdag :=_gagdg .Get (keyName );_bfdag !=nil {_cfccd ,_afecg :=_gadb .GetStream (_bfdag );if !_afecg {_cg .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_bfdag );
return nil ,XObjectTypeUndefined ;};_cgggc :=_cfccd .PdfObjectDictionary ;_faafg ,_afecg :=_gadb .TraceToDirectObject (_cgggc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_gadb .PdfObjectName );if !_afecg {_cg .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_cgggc .String ());
return nil ,XObjectTypeUndefined ;};if *_faafg =="\u0049\u006d\u0061g\u0065"{return _cfccd ,XObjectTypeImage ;}else if *_faafg =="\u0046\u006f\u0072\u006d"{return _cfccd ,XObjectTypeForm ;}else if *_faafg =="\u0050\u0053"{return _cfccd ,XObjectTypePS ;
}else {_cg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_faafg );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// CustomKeys returns all custom info keys as list.
func (_deggc *PdfInfo )CustomKeys ()[]string {if _deggc ._adbb ==nil {return nil ;};_aaebf :=make ([]string ,len (_deggc ._adbb .Keys ()));for _ ,_bfce :=range _deggc ._adbb .Keys (){_aaebf =append (_aaebf ,_bfce .String ());};return _aaebf ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_dgedg *PdfReader )Decrypt (password []byte )(bool ,error ){_eaggc ,_dgefg :=_dgedg ._becf .Decrypt (password );if _dgefg !=nil {return false ,_dgefg ;};if !_eaggc {return false ,nil ;};_dgefg =_dgedg .loadStructure ();if _dgefg !=nil {_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_dgefg );
return false ,_dgefg ;};return true ,nil ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_gbgae *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_baaed :=_gbgae ._becf .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _baaed {return nil ,_bb .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_baaed {return _gbgae ,nil ;};if _gbgae ._cabfa [revisionNumber ]!=nil {return _gbgae ._cabfa [revisionNumber ],nil ;};_ccbeg :=_gbgae ;for _gefac :=_baaed -1;_gefac >=revisionNumber ;_gefac --{_bbfg ,_aefeg :=_ccbeg .GetPreviousRevision ();
if _aefeg !=nil {return nil ,_aefeg ;};_gbgae ._cabfa [_gefac ]=_bbfg ;_ccbeg =_bbfg ;};return _ccbeg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbda *PdfAnnotationScreen )ToPdfObject ()_gadb .PdfObject {_bbda .PdfAnnotation .ToPdfObject ();_cgd :=_bbda ._defb ;_dged :=_cgd .PdfObject .(*_gadb .PdfObjectDictionary );_dged .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dged .SetIfNotNil ("\u0054",_bbda .T );_dged .SetIfNotNil ("\u004d\u004b",_bbda .MK );_dged .SetIfNotNil ("\u0041",_bbda .A );_dged .SetIfNotNil ("\u0041\u0041",_bbda .AA );return _cgd ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bfcabb *PdfWriter )SetNameDictionary (names _gadb .PdfObject )error {if names ==nil {return nil ;};_cg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_bfcabb ._gaeab .Set ("\u004e\u0061\u006de\u0073",names );return _bfcabb .addObjects (names );};func (_egbg *PdfReader )newPdfActionTransFromDict (_eade *_gadb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_eade .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gadb .PdfObject ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bcfae :=&PdfAppender {_daed :reader ._ddde ,Reader :reader ,_cbgca :reader ._becf ,_gbde :reader ._cbfgc };_eadf ,_fagcb :=_bcfae ._daed .Seek (0,_cc .SeekEnd );if _fagcb !=nil {return nil ,_fagcb ;
};_bcfae ._bfcb =_eadf ;if _ ,_fagcb =_bcfae ._daed .Seek (0,_cc .SeekStart );_fagcb !=nil {return nil ,_fagcb ;};_bcfae ._fff ,_fagcb =NewPdfReader (_bcfae ._daed );if _fagcb !=nil {return nil ,_fagcb ;};for _ ,_ddec :=range _bcfae .Reader .GetObjectNums (){if _bcfae ._gced < _ddec {_bcfae ._gced =_ddec ;
};};_bcfae ._edd =_bcfae ._cbgca .GetXrefTable ();_bcfae ._aefab =_bcfae ._cbgca .GetXrefOffset ();_bcfae ._dade =append (_bcfae ._dade ,_bcfae ._fff .PageList ...);_bcfae ._bge =make (map[_gadb .PdfObject ]struct{});_bcfae ._gag =make (map[_gadb .PdfObject ]int64 );
_bcfae ._dac =make (map[_gadb .PdfObject ]struct{});_bcfae ._bccaae =_bcfae ._fff .AcroForm ;_bcfae ._ebaf =_bcfae ._fff .DSS ;return _bcfae ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_acgff *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdcd :=vals [0];_cfcc :=[]float64 {_fdcd };_agefd ,_abcg :=_acgff .TintTransform .Evaluate (_cfcc );
if _abcg !=nil {_cg .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_abcg );_cg .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_acgff .TintTransform );
return nil ,_abcg ;};_cg .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_agefd ,_acgff .AlternateSpace );
_ccdcg ,_abcg :=_acgff .AlternateSpace .ColorFromFloats (_agefd );if _abcg !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_abcg );
return nil ,_abcg ;};return _ccdcg ,nil ;};func (_bgd *PdfReader )newPdfActionJavaScriptFromDict (_cbd *_gadb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cbd .Get ("\u004a\u0053")},nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_feff *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_feff .updateObjectsDeep (dss .ToPdfObject (),nil );};_feff ._ebaf =dss ;};

// ToPdfObject implements interface PdfModel.
func (_cbdd *PdfAnnotationPolygon )ToPdfObject ()_gadb .PdfObject {_cbdd .PdfAnnotation .ToPdfObject ();_eecb :=_cbdd ._defb ;_dfdfg :=_eecb .PdfObject .(*_gadb .PdfObjectDictionary );_cbdd .PdfAnnotationMarkup .appendToPdfDictionary (_dfdfg );_dfdfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_dfdfg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cbdd .Vertices );_dfdfg .SetIfNotNil ("\u004c\u0045",_cbdd .LE );_dfdfg .SetIfNotNil ("\u0042\u0053",_cbdd .BS );_dfdfg .SetIfNotNil ("\u0049\u0043",_cbdd .IC );_dfdfg .SetIfNotNil ("\u0042\u0045",_cbdd .BE );
_dfdfg .SetIfNotNil ("\u0049\u0054",_cbdd .IT );_dfdfg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbdd .Measure );return _eecb ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cccgd .Lock ();defer _cccgd .Unlock ();_fbbc =keywords };func (_afbg *PdfReader )newPdfActionRenditionFromDict (_bgf *_gadb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bgf .Get ("\u0052"),AN :_bgf .Get ("\u0041\u004e"),OP :_bgf .Get ("\u004f\u0050"),JS :_bgf .Get ("\u004a\u0053")},nil ;
};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_efbd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dadf ,_fccg :=color .(*PdfColorDeviceRGB );if !_fccg {_cg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dadf ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_baff *PdfFontDescriptor )ToPdfObject ()_gadb .PdfObject {_fbdaa :=_gadb .MakeDict ();if _baff ._dcbg ==nil {_baff ._dcbg =&_gadb .PdfIndirectObject {};};_baff ._dcbg .PdfObject =_fbdaa ;_fbdaa .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _baff .FontName !=nil {_fbdaa .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_baff .FontName );};if _baff .FontFamily !=nil {_fbdaa .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_baff .FontFamily );};if _baff .FontStretch !=nil {_fbdaa .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_baff .FontStretch );
};if _baff .FontWeight !=nil {_fbdaa .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_baff .FontWeight );};if _baff .Flags !=nil {_fbdaa .Set ("\u0046\u006c\u0061g\u0073",_baff .Flags );};if _baff .FontBBox !=nil {_fbdaa .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_baff .FontBBox );
};if _baff .ItalicAngle !=nil {_fbdaa .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_baff .ItalicAngle );};if _baff .Ascent !=nil {_fbdaa .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_baff .Ascent );};if _baff .Descent !=nil {_fbdaa .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_baff .Descent );
};if _baff .Leading !=nil {_fbdaa .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_baff .Leading );};if _baff .CapHeight !=nil {_fbdaa .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_baff .CapHeight );};if _baff .XHeight !=nil {_fbdaa .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_baff .XHeight );
};if _baff .StemV !=nil {_fbdaa .Set ("\u0053\u0074\u0065m\u0056",_baff .StemV );};if _baff .StemH !=nil {_fbdaa .Set ("\u0053\u0074\u0065m\u0048",_baff .StemH );};if _baff .AvgWidth !=nil {_fbdaa .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_baff .AvgWidth );
};if _baff .MaxWidth !=nil {_fbdaa .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_baff .MaxWidth );};if _baff .MissingWidth !=nil {_fbdaa .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_baff .MissingWidth );};if _baff .FontFile !=nil {_fbdaa .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_baff .FontFile );
};if _baff .FontFile2 !=nil {_fbdaa .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_baff .FontFile2 );};if _baff .FontFile3 !=nil {_fbdaa .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_baff .FontFile3 );};if _baff .CharSet !=nil {_fbdaa .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_baff .CharSet );
};if _baff .Style !=nil {_fbdaa .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_baff .FontName );};if _baff .Lang !=nil {_fbdaa .Set ("\u004c\u0061\u006e\u0067",_baff .Lang );};if _baff .FD !=nil {_fbdaa .Set ("\u0046\u0044",_baff .FD );};if _baff .CIDSet !=nil {_fbdaa .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_baff .CIDSet );
};return _baff ._dcbg ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_baeg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dfgea ,_bdbd :=color .(*PdfColorDeviceGray );if !_bdbd {_cg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_dfgea ),float64 (*_dfgea ),float64 (*_dfgea )),nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _gadb .PdfObject ;NewWindow _gadb .PdfObject ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_aebd *PdfReader )GetOCProperties ()(_gadb .PdfObject ,error ){_fcfad :=_aebd ._gbef ;_dbgdd :=_fcfad .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dbgdd =_gadb .ResolveReference (_dbgdd );if !_aebd ._fdbdd {_ffcaa :=_aebd .traverseObjectData (_dbgdd );
if _ffcaa !=nil {return nil ,_ffcaa ;};};return _dbgdd ,nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gddag :=PdfWriter {};_gddag ._gacff =map[_gadb .PdfObject ]struct{}{};_gddag ._agefec =[]_gadb .PdfObject {};_gddag ._ccbdg =map[_gadb .PdfObject ][]*_gadb .PdfObjectDictionary {};_gddag ._fdac =map[_gadb .PdfObject ]struct{}{};
_gddag ._dagb .Major =1;_gddag ._dagb .Minor =3;_efdcf :=_gadb .MakeDict ();_gbbdb :=[]struct{_dcdef _gadb .PdfObjectName ;_adabb string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fcccf ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_ecfag ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_gbcag ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_aagc ()},{"\u0054\u0069\u0074l\u0065",_eabbf ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_babfb ()}};
for _ ,_geebc :=range _gbbdb {if _geebc ._adabb !=""{_efdcf .Set (_geebc ._dcdef ,_gadb .MakeString (_geebc ._adabb ));};};if _acfcb :=_bacbf ();!_acfcb .IsZero (){if _cfcbd ,_febbb :=NewPdfDateFromTime (_acfcb );_febbb ==nil {_efdcf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cfcbd .ToPdfObject ());
};};if _eaadg :=_fdccd ();!_eaadg .IsZero (){if _fgcef ,_cbcde :=NewPdfDateFromTime (_eaadg );_cbcde ==nil {_efdcf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_fgcef .ToPdfObject ());};};_abgbf :=_gadb .PdfIndirectObject {};_abgbf .PdfObject =_efdcf ;
_gddag ._ceeegd =&_abgbf ;_gddag .addObject (&_abgbf );_gdced :=_gadb .PdfIndirectObject {};_cbed :=_gadb .MakeDict ();_cbed .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_gdced .PdfObject =_cbed ;_gddag ._ccbbbd =&_gdced ;
_gddag .addObject (_gddag ._ccbbbd );_bbecg ,_cddca :=_ecgfc ("\u0077");if _cddca !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cddca );};_gddag ._bbcff =_bbecg ;_fafef :=_gadb .PdfIndirectObject {};_ebagf :=_gadb .MakeDict ();
_ebagf .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0050\u0061\u0067e\u0073"));_bcecb :=_gadb .PdfObjectArray {};_ebagf .Set ("\u004b\u0069\u0064\u0073",&_bcecb );_ebagf .Set ("\u0043\u006f\u0075n\u0074",_gadb .MakeInteger (0));_fafef .PdfObject =_ebagf ;
_gddag ._cfbfa =&_fafef ;_gddag ._agcgc =map[_gadb .PdfObject ]struct{}{};_gddag .addObject (_gddag ._cfbfa );_cbed .Set ("\u0050\u0061\u0067e\u0073",&_fafef );_gddag ._gaeab =_cbed ;_cg .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_gdced );
return _gddag ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_dbfe *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _gadb .GetNumberAsFloat (_dbfe .Descent );};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_bbbac :_gadb .MakeDict ()};
};

// ToPdfObject implements interface PdfModel.
func (_ega *PdfActionTrans )ToPdfObject ()_gadb .PdfObject {_ega .PdfAction .ToPdfObject ();_ca :=_ega ._ec ;_ddd :=_ca .PdfObject .(*_gadb .PdfObjectDictionary );_ddd .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeTrans )));_ddd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ega .Trans );
return _ca ;};func _adfg (_bbce _gadb .PdfObject ,_gegdg *fontCommon )(*_gde .CMap ,error ){_eagc ,_dgbb :=_gadb .GetStream (_bbce );if !_dgbb {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_bbce );
return nil ,_gadb .ErrTypeError ;};_acega ,_fbbbf :=_gadb .DecodeStream (_eagc );if _fbbbf !=nil {return nil ,_fbbbf ;};_dgebc ,_fbbbf :=_gde .LoadCmapFromData (_acega ,!_gegdg .isCIDFont ());if _fbbbf !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_eagc .ObjectNumber ,_fbbbf );
};return _dgebc ,_fbbbf ;};

// ToPdfObject implements interface PdfModel.
func (_becdg *Permissions )ToPdfObject ()_gadb .PdfObject {return _becdg ._gafcf };

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_cabaa *PdfWriter )SetDocInfo (info *PdfInfo ){_cabaa .setDocInfo (info .ToPdfObject ())};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_dca :=NewPdfAnnotation ();_faca :=&PdfAnnotationWatermark {};_faca .PdfAnnotation =_dca ;_dca .SetContext (_faca );return _faca ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_fdcfc *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgcc ,_gedfb :=_gadb .GetNumbersAsFloat (objects );
if _gedfb !=nil {return nil ,_gedfb ;};return _fdcfc .ColorFromFloats (_fgcc );};

// ToPdfObject implements interface PdfModel.
func (_cadc *PdfAnnotationSound )ToPdfObject ()_gadb .PdfObject {_cadc .PdfAnnotation .ToPdfObject ();_bbcf :=_cadc ._defb ;_dbf :=_bbcf .PdfObject .(*_gadb .PdfObjectDictionary );_cadc .PdfAnnotationMarkup .appendToPdfDictionary (_dbf );_dbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0053\u006f\u0075n\u0064"));
_dbf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_cadc .Sound );_dbf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cadc .Name );return _bbcf ;};func _cgda (_cbab ,_ffgfg string )string {if _db .Contains (_cbab ,"\u002b"){_edfb :=_db .Split (_cbab ,"\u002b");
if len (_edfb )==2{_cbab =_edfb [1];};};return _ffgfg +"\u002b"+_cbab ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetContainingPdfObject implements interface PdfModel.
func (_ffee *PdfAnnotation )GetContainingPdfObject ()_gadb .PdfObject {return _ffee ._defb };

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_cbgda :=&PdfColorPatternType3 {};return _cbgda ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_fbfag []_gadb .PdfObject )([]_gadb .PdfObject ,error );};func (_fbaa *PdfReader )newPdfAnnotationInkFromDict (_fegd *_gadb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fga :=PdfAnnotationInk {};_fegf ,_cfdd :=_fbaa .newPdfAnnotationMarkupFromDict (_fegd );
if _cfdd !=nil {return nil ,_cfdd ;};_fga .PdfAnnotationMarkup =_fegf ;_fga .InkList =_fegd .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fga .BS =_fegd .Get ("\u0042\u0053");return &_fga ,nil ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_gadb .PdfParser ;DiffPolicy _cde .DiffPolicy ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_fcaa *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_bb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_afed :=&PdfColorPattern {};_aabgg ,_gaba :=objects [len (objects )-1].(*_gadb .PdfObjectName );if !_gaba {_cg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_afed .PatternName =*_aabgg ;if len (objects )> 1{_fbbee :=objects [0:len (objects )-1];if _fcaa .UnderlyingCS ==nil {_cg .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_bb .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_faac ,_efbc :=_fcaa .UnderlyingCS .ColorFromPdfObjects (_fbbee );if _efbc !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_efbc );
return nil ,_efbc ;};_afed .Color =_faac ;};return _afed ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_fgcbd *PdfDate )ToPdfObject ()_gadb .PdfObject {_gddae :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fgcbd ._cgecg ,_fgcbd ._ecffb ,_fgcbd ._eadaf ,_fgcbd ._ceecg ,_fgcbd ._bafca ,_fgcbd ._ggdfd ,_fgcbd ._beeae ,_fgcbd ._bfebf ,_fgcbd ._fbgec );
return _gadb .MakeString (_gddae );};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_gadb .PdfObjectArray ;TI *_gadb .PdfObjectInteger ;I *_gadb .PdfObjectArray ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _gadb .PdfObject ;Flags _gadb .PdfObject ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_eaga *PdfOutputIntent )ParsePdfObject (object _gadb .PdfObject )error {_cfcfc ,_ecdd :=_gadb .GetDict (object );if !_ecdd {_cg .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _bb .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_eaga ._bbbac =_cfcfc ;_eaga .Type ,_ =_cfcfc .GetString ("\u0054\u0079\u0070\u0065");_bagf ,_ecdd :=_cfcfc .GetString ("\u0053");if _ecdd {switch _bagf {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_eaga .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_eaga .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_eaga .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_eaga .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_eaga .S =PdfOutputIntentTypeX ;
};};_eaga .OutputCondition ,_ =_cfcfc .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_eaga .OutputConditionIdentifier ,_ =_cfcfc .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_eaga .RegistryName ,_ =_cfcfc .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_eaga .Info ,_ =_cfcfc .GetString ("\u0049\u006e\u0066\u006f");if _cbfba ,_debd :=_gadb .GetStream (_cfcfc .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_debd {_eaga .ColorComponents ,_ =_gadb .GetIntVal (_cbfba .Get ("\u004e"));_beafg ,_cegfd :=_gadb .DecodeStream (_cbfba );if _cegfd !=nil {return _cegfd ;};_eaga .DestOutputProfile =_beafg ;};return nil ;};type pdfFontSimple struct{fontCommon ;_afaa *_gadb .PdfIndirectObject ;
_aefe map[_gcc .CharCode ]float64 ;_ddffd _gcc .TextEncoder ;_gagdd _gcc .TextEncoder ;_bcabc *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _gadb .PdfObject ;LastChar _gadb .PdfObject ;Widths _gadb .PdfObject ;Encoding _gadb .PdfObject ;_cegcd *_bf .RuneCharSafeMap ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dedf *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_bb .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cdff ,_fcac :=_cf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._egfg ,img ._bdge );if _fcac !=nil {return img ,_fcac ;};_degb ,_fcac :=_cf .NRGBAConverter .Convert (_cdff );if _fcac !=nil {return img ,_fcac ;
};_cfba :=_fafdf (_degb .Base ());_cg .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_cg .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_cg .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cfba .Data );
_cg .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cfba );return _cfba ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _gadb .PdfObject ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cbggc ,_bfda :=_eba .Open (filePath );if _bfda !=nil {_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bfda );
return nil ,_bfda ;};defer _cbggc .Close ();return NewCompositePdfFontFromTTF (_cbggc );};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gbgbg *PdfPageResources )GenerateXObjectName ()_gadb .PdfObjectName {_cebg :=1;for {_cbgb :=_gadb .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_cebg ));if !_gbgbg .HasXObjectByName (*_cbgb ){return *_cbgb ;};_cebg ++;};};

// SetAlpha sets the alpha layer for the image.
func (_febcd *Image )SetAlpha (alpha []byte ){_febcd ._egfg =alpha };

// AddExtGState adds a graphics state to the XObject resources.
func (_gfegbd *PdfPage )AddExtGState (name _gadb .PdfObjectName ,egs *_gadb .PdfObjectDictionary )error {if _gfegbd .Resources ==nil {_gfegbd .Resources =NewPdfPageResources ();};if _gfegbd .Resources .ExtGState ==nil {_gfegbd .Resources .ExtGState =_gadb .MakeDict ();
};_fbgbd ,_ccdde :=_gadb .TraceToDirectObject (_gfegbd .Resources .ExtGState ).(*_gadb .PdfObjectDictionary );if !_ccdde {_cg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gadb .TraceToDirectObject (_gfegbd .Resources .ExtGState ));
return _bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbgbd .Set (name ,egs );return nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_gcefc :=&PdfColorspaceDeviceN {};return _gcefc ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gcgaf *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_bafc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_cbac *_gadb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_abg :=PdfAnnotationPrinterMark {};_abg .MN =_cbac .Get ("\u004d\u004e");
return &_abg ,nil ;};func (_dgdgg *PdfReader )loadStructure ()error {if _dgdgg ._becf .GetCrypter ()!=nil &&!_dgdgg ._becf .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bfcec :=_dgdgg ._becf .GetTrailer ();if _bfcec ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fbcf ,_cdcf :=_bfcec .Get ("\u0052\u006f\u006f\u0074").(*_gadb .PdfObjectReference );if !_cdcf {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bfcec );
};_dceg ,_bdfda :=_dgdgg ._becf .LookupByReference (*_fbcf );if _bdfda !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bdfda );
return _bdfda ;};_adaea ,_cdcf :=_dceg .(*_gadb .PdfIndirectObject );if !_cdcf {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dceg ,*_bfcec );
return _bb .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bacad ,_cdcf :=(*_adaea ).PdfObject .(*_gadb .PdfObjectDictionary );if !_cdcf {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_adaea .PdfObject );
return _bb .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cg .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bacad );_egebc ,_cdcf :=_bacad .Get ("\u0050\u0061\u0067e\u0073").(*_gadb .PdfObjectReference );
if !_cdcf {return _bb .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_ecagb ,_bdfda :=_dgdgg ._becf .LookupByReference (*_egebc );
if _bdfda !=nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bdfda ;};_debe ,_cdcf :=_ecagb .(*_gadb .PdfIndirectObject );if !_cdcf {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_cg .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_debe );return _bb .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dbeec ,_cdcf :=_debe .PdfObject .(*_gadb .PdfObjectDictionary );if !_cdcf {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_debe );
return _bb .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fcbddb ,_cdcf :=_gadb .GetInt (_dbeec .Get ("\u0043\u006f\u0075n\u0074"));if !_cdcf {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _bb .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cdcf =_gadb .GetName (_dbeec .Get ("\u0054\u0079\u0070\u0065"));!_cdcf {_cg .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_dbeec .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _dgea ,_bddfc :=_gadb .GetInt (_dbeec .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_bddfc {_ccae :=int64 (*_dgea );_dgdgg .Rotate =&_ccae ;};_dgdgg ._adgf =_fbcf ;
_dgdgg ._gbef =_bacad ;_dgdgg ._gbfff =_dbeec ;_dgdgg ._ageb =_debe ;_dgdgg ._ceccc =int (*_fcbddb );_dgdgg ._fbeac =[]*_gadb .PdfIndirectObject {};_ggacb :=map[_gadb .PdfObject ]struct{}{};_bdfda =_dgdgg .buildPageList (_debe ,nil ,_ggacb );if _bdfda !=nil {return _bdfda ;
};_cg .Log .Trace ("\u002d\u002d\u002d");_cg .Log .Trace ("\u0054\u004f\u0043");_cg .Log .Trace ("\u0050\u0061\u0067e\u0073");_cg .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_dgdgg ._fbeac ),_dgdgg ._fbeac );_dgdgg ._gcecc ,_bdfda =_dgdgg .loadOutlines ();
if _bdfda !=nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bdfda );
return _bdfda ;};_dgdgg .AcroForm ,_bdfda =_dgdgg .loadForms ();if _bdfda !=nil {return _bdfda ;};_dgdgg .DSS ,_bdfda =_dgdgg .loadDSS ();if _bdfda !=nil {return _bdfda ;};_dgdgg ._gaeg ,_bdfda =_dgdgg .loadPerms ();if _bdfda !=nil {return _bdfda ;};return nil ;
};func (_ggd *PdfReader )newPdfAnnotationPopupFromDict (_ggf *_gadb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bbg :=PdfAnnotationPopup {};_bbg .Parent =_ggf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bbg .Open =_ggf .Get ("\u004f\u0070\u0065\u006e");
return &_bbg ,nil ;};func _fdfcb ()string {return _cg .Version };func (_abfcf *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dacg :=_abfcf .Parent ;for _dacg !=nil {_adaaf ,_aeaa :=_gadb .GetDict (_dacg );if !_aeaa {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_bb .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _eebdb :=_adaaf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eebdb !=nil {_agbga ,_gdaef :=_gadb .GetDict (_eebdb );
if !_gdaef {return nil ,_bb .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_dbbfc ,_bcaee :=NewPdfPageResourcesFromDict (_agbga );if _bcaee !=nil {return nil ,_bcaee ;};return _dbbfc ,nil ;
};_dacg =_adaaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_abff *pdfFontType0 )ToPdfObject ()_gadb .PdfObject {if _abff ._cebe ==nil {_abff ._cebe =&_gadb .PdfIndirectObject {};};_gdega :=_abff .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_abff ._cebe .PdfObject =_gdega ;if _abff .Encoding !=nil {_gdega .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abff .Encoding );
}else if _abff ._bagcbf !=nil {_gdega .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abff ._bagcbf .ToPdfObject ());};if _abff .DescendantFont !=nil {_gdega .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_gadb .MakeArray (_abff .DescendantFont .ToPdfObject ()));
};return _abff ._cebe ;};

// ToInteger convert to an integer format.
func (_fabae *PdfColorCalGray )ToInteger (bits int )uint32 {_dgab :=_gee .Pow (2,float64 (bits ))-1;return uint32 (_dgab *_fabae .Val ());};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_eagcb *PdfPageResources )GetShadingByName (keyName _gadb .PdfObjectName )(*PdfShading ,bool ){if _eagcb .Shading ==nil {return nil ,false ;};_aaebfa ,_eefdgc :=_gadb .TraceToDirectObject (_eagcb .Shading ).(*_gadb .PdfObjectDictionary );if !_eefdgc {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eagcb .Shading );
return nil ,false ;};if _feaae :=_aaebfa .Get (keyName );_feaae !=nil {_edfbd ,_adaba :=_eccae (_feaae );if _adaba !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_adaba );
return nil ,false ;};return _edfbd ,true ;};return nil ,false ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cccgd .Lock ();defer _cccgd .Unlock ();_gebdf =author };

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_cgddc *modelManager )GetModelFromPrimitive (primitive _gadb .PdfObject )PdfModel {model ,_gacbb :=_cgddc ._eeedc [primitive ];if !_gacbb {return nil ;};return model ;};func _bccade (_dcac _gadb .PdfObject )(*PdfColorspaceICCBased ,error ){_bfbc :=&PdfColorspaceICCBased {};
if _gfea ,_ddcb :=_dcac .(*_gadb .PdfIndirectObject );_ddcb {_bfbc ._bgff =_gfea ;};_dcac =_gadb .TraceToDirectObject (_dcac );_ebgf ,_ebec :=_dcac .(*_gadb .PdfObjectArray );if !_ebec {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ebgf .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_dcac =_gadb .TraceToDirectObject (_ebgf .Get (0));_gbgb ,_ebec :=_dcac .(*_gadb .PdfObjectName );
if !_ebec {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_gbgb !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_dcac =_ebgf .Get (1);_eedcd ,_ebec :=_gadb .GetStream (_dcac );if !_ebec {_cg .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dcac );
return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fdeeg :=_eedcd .PdfObjectDictionary ;_aafg ,_ebec :=_fdeeg .Get ("\u004e").(*_gadb .PdfObjectInteger );
if !_ebec {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_aafg !=1&&*_aafg !=3&&*_aafg !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_bfbc .N =int (*_aafg );if _cacc :=_fdeeg .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_cacc !=nil {_abdf ,_eeca :=NewPdfColorspaceFromPdfObject (_cacc );if _eeca !=nil {return nil ,_eeca ;};_bfbc .Alternate =_abdf ;};if _dacd :=_fdeeg .Get ("\u0052\u0061\u006eg\u0065");
_dacd !=nil {_dacd =_gadb .TraceToDirectObject (_dacd );_baac ,_fbbe :=_dacd .(*_gadb .PdfObjectArray );if !_fbbe {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _baac .Len ()!=2*_bfbc .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_ggcc ,_cdbf :=_baac .GetAsFloat64Slice ();if _cdbf !=nil {return nil ,_cdbf ;};_bfbc .Range =_ggcc ;}else {_bfbc .Range =make ([]float64 ,2*_bfbc .N );for _ggdc :=0;_ggdc < _bfbc .N ;_ggdc ++{_bfbc .Range [2*_ggdc ]=0.0;_bfbc .Range [2*_ggdc +1]=1.0;
};};if _ffgf :=_fdeeg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ffgf !=nil {_dafbe ,_ccbc :=_ffgf .(*_gadb .PdfObjectStream );if !_ccbc {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bfbc .Metadata =_dafbe ;};_bfgb ,_gebe :=_gadb .DecodeStream (_eedcd );if _gebe !=nil {return nil ,_gebe ;};_bfbc .Data =_bfgb ;_bfbc ._gaa =_eedcd ;return _bfbc ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bbaa :=NewPdfAnnotation ();_ggeb :=&PdfAnnotationPolyLine {};_ggeb .PdfAnnotation =_bbaa ;_ggeb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbaa .SetContext (_ggeb );return _ggeb ;};func (_facdc *PdfWriter )setCatalogVersion (){_facdc ._gaeab .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_gadb .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_facdc ._dagb .Major ,_facdc ._dagb .Minor )));
};

// ToPdfObject implements interface PdfModel.
func (_bcc *PdfActionGoToR )ToPdfObject ()_gadb .PdfObject {_bcc .PdfAction .ToPdfObject ();_bdff :=_bcc ._ec ;_ba :=_bdff .PdfObject .(*_gadb .PdfObjectDictionary );_ba .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeGoToR )));if _bcc .F !=nil {_ba .Set ("\u0046",_bcc .F .ToPdfObject ());
};_ba .SetIfNotNil ("\u0044",_bcc .D );_ba .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bcc .NewWindow );return _bdff ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_gbcb :=PdfColorCalRGB {a ,b ,c };return &_gbcb ;};

// Encoder returns the font's text encoder.
func (_ccfc pdfFontType0 )Encoder ()_gcc .TextEncoder {return _ccfc ._bagcbf };

// StdFontName represents name of a standard font.
type StdFontName =_bf .StdFontName ;func (_fgbe *PdfReader )newPdfAnnotationMovieFromDict (_bccfb *_gadb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_aefb :=PdfAnnotationMovie {};_aefb .T =_bccfb .Get ("\u0054");_aefb .Movie =_bccfb .Get ("\u004d\u006f\u0076i\u0065");
_aefb .A =_bccfb .Get ("\u0041");return &_aefb ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dgfe *PdfColorspaceSpecialPattern )ToPdfObject ()_gadb .PdfObject {if _dgfe .UnderlyingCS ==nil {return _gadb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_gdacg :=_gadb .MakeArray (_gadb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_gdacg .Append (_dgfe .UnderlyingCS .ToPdfObject ());if _dgfe ._gafdc !=nil {_dgfe ._gafdc .PdfObject =_gdacg ;return _dgfe ._gafdc ;};return _gdacg ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fdgf *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_eeeg *BorderStyle )GetPdfName ()string {switch *_eeeg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cedca *PdfShadingType3 )ToPdfObject ()_gadb .PdfObject {_cedca .PdfShading .ToPdfObject ();_ceaeg ,_gbgdg :=_cedca .getShadingDict ();if _gbgdg !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cedca .Coords !=nil {_ceaeg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cedca .Coords );};if _cedca .Domain !=nil {_ceaeg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cedca .Domain );};if _cedca .Function !=nil {if len (_cedca .Function )==1{_ceaeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cedca .Function [0].ToPdfObject ());
}else {_gbccb :=_gadb .MakeArray ();for _ ,_dedcd :=range _cedca .Function {_gbccb .Append (_dedcd .ToPdfObject ());};_ceaeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbccb );};};if _cedca .Extend !=nil {_ceaeg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cedca .Extend );
};return _cedca ._gfbgb ;};

// ToPdfObject implements interface PdfModel.
func (_ecgb *PdfAnnotationPopup )ToPdfObject ()_gadb .PdfObject {_ecgb .PdfAnnotation .ToPdfObject ();_agbg :=_ecgb ._defb ;_fed :=_agbg .PdfObject .(*_gadb .PdfObjectDictionary );_fed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0050\u006f\u0070u\u0070"));
_fed .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecgb .Parent );_fed .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ecgb .Open );return _agbg ;};

// ToPdfObject implements interface PdfModel.
func (_feed *PdfActionGoTo )ToPdfObject ()_gadb .PdfObject {_feed .PdfAction .ToPdfObject ();_cbc :=_feed ._ec ;_eed :=_cbc .PdfObject .(*_gadb .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeGoTo )));_eed .SetIfNotNil ("\u0044",_feed .D );
return _cbc ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dfeac *PdfPageResources )GetPatternByName (keyName _gadb .PdfObjectName )(*PdfPattern ,bool ){if _dfeac .Pattern ==nil {return nil ,false ;};_dbegd ,_dfcae :=_gadb .TraceToDirectObject (_dfeac .Pattern ).(*_gadb .PdfObjectDictionary );if !_dfcae {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfeac .Pattern );
return nil ,false ;};if _aedfc :=_dbegd .Get (keyName );_aedfc !=nil {_ceeeg ,_fbfd :=_bafed (_aedfc );if _fbfd !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_fbfd );
return nil ,false ;};return _ceeeg ,true ;};return nil ,false ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _gadb .StreamEncoder )(*XObjectImage ,error ){_ffaab :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ffaab ,img ,cs ,encoder );};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fcdff *PdfPage )GetContainingPdfObject ()_gadb .PdfObject {return _fcdff ._fgbea };

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _cc .ReadSeeker )(*CompliancePdfReader ,error ){const _ddgc ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_bfgaa ,_cebfe :=_ceefe (rs ,&ReaderOpts {ComplianceMode :true },false ,_ddgc );
if _cebfe !=nil {return nil ,_cebfe ;};return &CompliancePdfReader {PdfReader :_bfgaa },nil ;};func _cbebb (_aecac _gadb .PdfObject )(string ,error ){_aecac =_gadb .TraceToDirectObject (_aecac );switch _acdd :=_aecac .(type ){case *_gadb .PdfObjectString :return _acdd .Str (),nil ;
case *_gadb .PdfObjectStream :_cdbfc ,_gadgd :=_gadb .DecodeStream (_acdd );if _gadgd !=nil {return "",_gadgd ;};return string (_cdbfc ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_aecac );
};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_afbd *PdfFieldText )ToPdfObject ()_gadb .PdfObject {_afbd .PdfField .ToPdfObject ();_eecee :=_afbd ._fbbf ;_aebeb :=_eecee .PdfObject .(*_gadb .PdfObjectDictionary );_aebeb .Set ("\u0046\u0054",_gadb .MakeName ("\u0054\u0078"));if _afbd .DA !=nil {_aebeb .Set ("\u0044\u0041",_afbd .DA );
};if _afbd .Q !=nil {_aebeb .Set ("\u0051",_afbd .Q );};if _afbd .DS !=nil {_aebeb .Set ("\u0044\u0053",_afbd .DS );};if _afbd .RV !=nil {_aebeb .Set ("\u0052\u0056",_afbd .RV );};if _afbd .MaxLen !=nil {_aebeb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_afbd .MaxLen );
};return _eecee ;};func (_ecfed *PdfAcroForm )fill (_bega FieldValueProvider ,_gfde FieldAppearanceGenerator )error {if _ecfed ==nil {return nil ;};_afabd ,_afcbd :=_bega .FieldValues ();if _afcbd !=nil {return _afcbd ;};for _ ,_gcfcf :=range _ecfed .AllFields (){_gfeg :=_gcfcf .PartialName ();
_ggbf ,_edgec :=_afabd [_gfeg ];if !_edgec {if _fagac ,_febfd :=_gcfcf .FullName ();_febfd ==nil {_ggbf ,_edgec =_afabd [_fagac ];};};if !_edgec {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gfeg );
continue ;};if _bdaga :=_bgcd (_gcfcf ,_ggbf );_bdaga !=nil {return _bdaga ;};if _gfde ==nil {continue ;};for _ ,_egfcdd :=range _gcfcf .Annotations {_bfaeb ,_eefa :=_gfde .GenerateAppearanceDict (_ecfed ,_gcfcf ,_egfcdd );if _eefa !=nil {return _eefa ;
};_egfcdd .AP =_bfaeb ;_egfcdd .ToPdfObject ();};};return nil ;};

// Write writes out the PDF.
func (_ebfa *PdfWriter )Write (writer _cc .Writer )error {_cg .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_edbda :=_ebfa .checkLicense ();if _edbda !=nil {return _edbda ;};if _edbda =_ebfa .writeOutlines ();_edbda !=nil {return _edbda ;};if _edbda =_ebfa .writeAcroFormFields ();
_edbda !=nil {return _edbda ;};_ebfa .checkPendingObjects ();if _edbda =_ebfa .writeOutputIntents ();_edbda !=nil {return _edbda ;};_ebfa .setCatalogVersion ();_ebfa .copyObjects ();if _edbda =_ebfa .optimize ();_edbda !=nil {return _edbda ;};if _edbda =_ebfa .optimizeDocument ();
_edbda !=nil {return _edbda ;};var _debea _eb .Hash ;if _ebfa ._addag {_debea =_bg .New ();writer =_cc .MultiWriter (_debea ,writer );};_ebfa .setWriter (writer );_bgbaac :=_ebfa .checkCrossReferenceStream ();_gccac ,_bgbaac :=_ebfa .mapObjectStreams (_bgbaac );
_ebfa .adjustXRefAffectedVersion (_bgbaac );_ebfa .writeDocumentVersion ();_ebfa .updateObjectNumbers ();_ebfa .writeObjects ();if _edbda =_ebfa .writeObjectsInStreams (_gccac );_edbda !=nil {return _edbda ;};_eeabd :=_ebfa ._fafba ;var _agbc int ;for _eeddc :=range _ebfa ._efeb {if _eeddc > _agbc {_agbc =_eeddc ;
};};if _ebfa ._addag {if _edbda =_ebfa .setHashIDs (_debea );_edbda !=nil {return _edbda ;};};if _bgbaac {if _edbda =_ebfa .writeXRefStreams (_agbc ,_eeabd );_edbda !=nil {return _edbda ;};}else {_ebfa .writeTrailer (_agbc );};_ebfa .makeOffSetReference (_eeabd );
if _edbda =_ebfa .flushWriter ();_edbda !=nil {return _edbda ;};return nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _f .Time ){_cccgd .Lock ();defer _cccgd .Unlock ();_eddf =creationDate ;};func _deafb (_bdfdc _gadb .PdfObject )(*PdfFunctionType2 ,error ){_dfaf :=&PdfFunctionType2 {};var _ffag *_gadb .PdfObjectDictionary ;if _eebbeg ,_fcbge :=_bdfdc .(*_gadb .PdfIndirectObject );
_fcbge {_baab ,_fabb :=_eebbeg .PdfObject .(*_gadb .PdfObjectDictionary );if !_fabb {return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfaf ._dcfcg =_eebbeg ;_ffag =_baab ;}else if _aaed ,_fcdf :=_bdfdc .(*_gadb .PdfObjectDictionary );
_fcdf {_ffag =_aaed ;}else {return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cg .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_ffag .String ());_ggebfd ,_afdgg :=_gadb .TraceToDirectObject (_ffag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gadb .PdfObjectArray );
if !_afdgg {_cg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ggebfd .Len ()< 0||_ggebfd .Len ()%2!=0{_cg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_bb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_fdcde ,_cgdef :=_ggebfd .ToFloat64Array ();if _cgdef !=nil {return nil ,_cgdef ;};_dfaf .Domain =_fdcde ;_ggebfd ,_afdgg =_gadb .TraceToDirectObject (_ffag .Get ("\u0052\u0061\u006eg\u0065")).(*_gadb .PdfObjectArray );if _afdgg {if _ggebfd .Len ()< 0||_ggebfd .Len ()%2!=0{return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_addge ,_aaafa :=_ggebfd .ToFloat64Array ();if _aaafa !=nil {return nil ,_aaafa ;};_dfaf .Range =_addge ;};_ggebfd ,_afdgg =_gadb .TraceToDirectObject (_ffag .Get ("\u0043\u0030")).(*_gadb .PdfObjectArray );if _afdgg {_cccg ,_dfbda :=_ggebfd .ToFloat64Array ();
if _dfbda !=nil {return nil ,_dfbda ;};_dfaf .C0 =_cccg ;};_ggebfd ,_afdgg =_gadb .TraceToDirectObject (_ffag .Get ("\u0043\u0031")).(*_gadb .PdfObjectArray );if _afdgg {_adff ,_edfdc :=_ggebfd .ToFloat64Array ();if _edfdc !=nil {return nil ,_edfdc ;};
_dfaf .C1 =_adff ;};if len (_dfaf .C0 )!=len (_dfaf .C1 ){_cg .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_gadb .ErrRangeError ;};N ,_cgdef :=_gadb .GetNumberAsFloat (_gadb .TraceToDirectObject (_ffag .Get ("\u004e")));
if _cgdef !=nil {_cg .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_ffag .String ());return nil ,_cgdef ;};_dfaf .N =N ;
return _dfaf ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_efbf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ffae :=func (_ffdg float64 )float64 {if _ffdg >=6.0/29{return _ffdg *_ffdg *_ffdg ;};return 108.0/841*(_ffdg -4.0/29.0);};_afgb ,_abgc :=color .(*PdfColorLab );if !_abgc {_cg .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_afgb .L ();AStar :=_afgb .A ();BStar :=_afgb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_efbf .WhitePoint [0]*_ffae (L );Y :=_efbf .WhitePoint [1]*_ffae (M );Z :=_efbf .WhitePoint [2]*_ffae (N );_dgeb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_edfa :=-0.969256*X +1.875992*Y +0.041556*Z ;_bgedd :=0.055648*X +-0.204043*Y +1.057311*Z ;_dgeb =_gee .Min (_gee .Max (_dgeb ,0),1.0);
_edfa =_gee .Min (_gee .Max (_edfa ,0),1.0);_bgedd =_gee .Min (_gee .Max (_bgedd ,0),1.0);return NewPdfColorDeviceRGB (_dgeb ,_edfa ,_bgedd ),nil ;};func (_affc *LTV )buildCertChain (_dbeg ,_bgbdg []*_g .Certificate )([]*_g .Certificate ,map[string ]*_g .Certificate ,error ){_cecdd :=map[string ]*_g .Certificate {};
for _ ,_faea :=range _dbeg {_cecdd [_faea .Subject .CommonName ]=_faea ;};_bcgcf :=_dbeg ;for _ ,_ffafaa :=range _bgbdg {_eeag :=_ffafaa .Subject .CommonName ;if _ ,_gaece :=_cecdd [_eeag ];_gaece {continue ;};_cecdd [_eeag ]=_ffafaa ;_bcgcf =append (_bcgcf ,_ffafaa );
};if len (_bcgcf )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ecbbb error ;for _ggdfb :=_bcgcf [0];_ggdfb !=nil &&!_affc .CertClient .IsCA (_ggdfb );{_fbffe ,_eabba :=_cecdd [_ggdfb .Issuer .CommonName ];if !_eabba {if _fbffe ,_ecbbb =_affc .CertClient .GetIssuer (_ggdfb );
_ecbbb !=nil {_cg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ecbbb );
break ;};_cecdd [_ggdfb .Issuer .CommonName ]=_fbffe ;_bcgcf =append (_bcgcf ,_fbffe );};_ggdfb =_fbffe ;};return _bcgcf ,_cecdd ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _gadb .PdfObject ;};func _dfcb (_dfcbd _gadb .PdfObject ,_affcg *PdfReader )(*OutlineDest ,error ){_begc ,_bgga :=_gadb .GetArray (_dfcbd );if !_bgga {return nil ,_bb .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_cdaf :=_begc .Len ();if _cdaf < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_cdaf );
};_fcdgd :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_beadf :=_begc .Get (0);if _gegcb ,_abddd :=_gadb .GetIndirect (_beadf );_abddd {if _ ,_dcaf ,_bebeb :=_affcg .PageFromIndirectObject (_gegcb );_bebeb ==nil {_fcdgd .Page =int64 (_dcaf -1);}else {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_gegcb );
};_fcdgd .PageObj =_gegcb ;}else if _cfegg ,_gafea :=_gadb .GetIntVal (_beadf );_gafea {if _cfegg >=0&&_cfegg < len (_affcg .PageList ){_fcdgd .PageObj =_affcg .PageList [_cfegg ].GetPageAsIndirectObject ();}else {_cg .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_cfegg );
};_fcdgd .Page =int64 (_cfegg );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_beadf );};_ccbbc ,_bgga :=_gadb .GetNameVal (_begc .Get (1));
if !_bgga {_cg .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_begc .Get (1));
return _fcdgd ,nil ;};switch _ccbbc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _cdaf > 2{_fcdgd .Y ,_ =_gadb .GetNumberAsFloat (_gadb .TraceToDirectObject (_begc .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _cdaf > 2{_fcdgd .X ,_ =_gadb .GetNumberAsFloat (_gadb .TraceToDirectObject (_begc .Get (2)));
};case "\u0058\u0059\u005a":if _cdaf > 4{_fcdgd .X ,_ =_gadb .GetNumberAsFloat (_gadb .TraceToDirectObject (_begc .Get (2)));_fcdgd .Y ,_ =_gadb .GetNumberAsFloat (_gadb .TraceToDirectObject (_begc .Get (3)));_fcdgd .Zoom ,_ =_gadb .GetNumberAsFloat (_gadb .TraceToDirectObject (_begc .Get (4)));
};default:_ccbbc ="\u0046\u0069\u0074";};_fcdgd .Mode =_ccbbc ;return _fcdgd ,nil ;};func _eccae (_ebecae _gadb .PdfObject )(*PdfShading ,error ){_gedgc :=&PdfShading {};var _gcgf *_gadb .PdfObjectDictionary ;if _becag ,_babdgb :=_gadb .GetIndirect (_ebecae );
_babdgb {_gedgc ._gfbgb =_becag ;_bbcag ,_dfbae :=_becag .PdfObject .(*_gadb .PdfObjectDictionary );if !_dfbae {_cg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_gadb .ErrTypeError ;};_gcgf =_bbcag ;}else if _ebgfa ,_dadbc :=_gadb .GetStream (_ebecae );_dadbc {_gedgc ._gfbgb =_ebgfa ;_gcgf =_ebgfa .PdfObjectDictionary ;}else if _gaae ,_ggafge :=_gadb .GetDict (_ebecae );_ggafge {_gedgc ._gfbgb =_gaae ;
_gcgf =_gaae ;}else {_cg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ebecae );return nil ,_gadb .ErrTypeError ;};if _gcgf ==nil {_cg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_bb .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ebecae =_gcgf .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ebecae ==nil {_cg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebecae =_gadb .TraceToDirectObject (_ebecae );_ddfe ,_dbabc :=_ebecae .(*_gadb .PdfObjectInteger );if !_dbabc {_cg .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ebecae );
return nil ,_gadb .ErrTypeError ;};if *_ddfe < 1||*_ddfe > 7{_cg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_ddfe );
return nil ,_gadb .ErrTypeError ;};_gedgc .ShadingType =_ddfe ;_ebecae =_gcgf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ebecae ==nil {_cg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdbea ,_ecgba :=NewPdfColorspaceFromPdfObject (_ebecae );if _ecgba !=nil {_cg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ecgba );
return nil ,_ecgba ;};_gedgc .ColorSpace =_gdbea ;_ebecae =_gcgf .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ebecae !=nil {_ebecae =_gadb .TraceToDirectObject (_ebecae );_bcfcg ,_cgfaa :=_ebecae .(*_gadb .PdfObjectArray );
if !_cgfaa {_cg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ebecae );
return nil ,_gadb .ErrTypeError ;};_gedgc .Background =_bcfcg ;};_ebecae =_gcgf .Get ("\u0042\u0042\u006f\u0078");if _ebecae !=nil {_ebecae =_gadb .TraceToDirectObject (_ebecae );_cdadfa ,_fgac :=_ebecae .(*_gadb .PdfObjectArray );if !_fgac {_cg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ebecae );
return nil ,_gadb .ErrTypeError ;};_cccaga ,_cegbcd :=NewPdfRectangle (*_cdadfa );if _cegbcd !=nil {_cg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cegbcd );return nil ,_cegbcd ;};_gedgc .BBox =_cccaga ;
};_ebecae =_gcgf .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _ebecae !=nil {_ebecae =_gadb .TraceToDirectObject (_ebecae );_ffcad ,_deeeg :=_ebecae .(*_gadb .PdfObjectBool );if !_deeeg {_cg .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebecae );
return nil ,_gadb .ErrTypeError ;};_gedgc .AntiAlias =_ffcad ;};switch *_ddfe {case 1:_ebede ,_fgddb :=_eeeab (_gcgf );if _fgddb !=nil {return nil ,_fgddb ;};_ebede .PdfShading =_gedgc ;_gedgc ._aaaaa =_ebede ;return _gedgc ,nil ;case 2:_bceec ,_eaabf :=_dcebe (_gcgf );
if _eaabf !=nil {return nil ,_eaabf ;};_bceec .PdfShading =_gedgc ;_gedgc ._aaaaa =_bceec ;return _gedgc ,nil ;case 3:_ffdef ,_eaaad :=_bafg (_gcgf );if _eaaad !=nil {return nil ,_eaaad ;};_ffdef .PdfShading =_gedgc ;_gedgc ._aaaaa =_ffdef ;return _gedgc ,nil ;
case 4:_gffbg ,_bbcge :=_gcaff (_gcgf );if _bbcge !=nil {return nil ,_bbcge ;};_gffbg .PdfShading =_gedgc ;_gedgc ._aaaaa =_gffbg ;return _gedgc ,nil ;case 5:_gbefa ,_fbdcd :=_aebbe (_gcgf );if _fbdcd !=nil {return nil ,_fbdcd ;};_gbefa .PdfShading =_gedgc ;
_gedgc ._aaaaa =_gbefa ;return _gedgc ,nil ;case 6:_dacee ,_bedbf :=_bggcce (_gcgf );if _bedbf !=nil {return nil ,_bedbf ;};_dacee .PdfShading =_gedgc ;_gedgc ._aaaaa =_dacee ;return _gedgc ,nil ;case 7:_bgdd ,_fcccd :=_egcfa (_gcgf );if _fcccd !=nil {return nil ,_fcccd ;
};_bgdd .PdfShading =_gedgc ;_gedgc ._aaaaa =_bgdd ;return _gedgc ,nil ;};return nil ,_bb .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func _eaaf (_ecffa string )(map[_gcc .CharCode ]_gcc .GlyphName ,error ){_abec :=_db .Split (_ecffa ,"\u000a");
_acadc :=make (map[_gcc .CharCode ]_gcc .GlyphName );for _ ,_gaafc :=range _abec {_gaee :=_dfga .FindStringSubmatch (_gaafc );if _gaee ==nil {continue ;};_fdcdg ,_aadd :=_gaee [1],_gaee [2];_gafdd ,_ddebf :=_gc .Atoi (_fdcdg );if _ddebf !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gaafc );
return nil ,_gadb .ErrTypeError ;};_acadc [_gcc .CharCode (_gafdd )]=_gcc .GlyphName (_aadd );};_cg .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_acadc );
return _acadc ,nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_bbab :=NewPdfAnnotation ();_gadc :=&PdfAnnotationCaret {};_gadc .PdfAnnotation =_bbab ;_gadc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbab .SetContext (_gadc );return _gadc ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_dedcf :=&PdfOutlineItem {_ebbb :_gadb .MakeIndirectObject (_gadb .MakeDict ())};_dedcf ._bedfc =_dedcf ;return _dedcf ;};func _fafad (_aecbg _gadb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_dfeg :=&PdfPageResourcesColorspaces {};
if _gfdba ,_dgge :=_aecbg .(*_gadb .PdfIndirectObject );_dgge {_dfeg ._eadeb =_gfdba ;_aecbg =_gfdba .PdfObject ;};_abfdd ,_defe :=_gadb .GetDict (_aecbg );if !_defe {return nil ,_bb .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_dfeg .Names =[]string {};_dfeg .Colorspaces =map[string ]PdfColorspace {};for _ ,_ecabe :=range _abfdd .Keys (){_eaec :=_abfdd .Get (_ecabe );_dfeg .Names =append (_dfeg .Names ,string (_ecabe ));_cfege ,_cebeb :=NewPdfColorspaceFromPdfObject (_eaec );
if _cebeb !=nil {return nil ,_cebeb ;};_dfeg .Colorspaces [string (_ecabe )]=_cfege ;};return _dfeg ,nil ;};func (_abcfb *pdfFontSimple )updateStandard14Font (){_ebeca ,_bgdg :=_abcfb .Encoder ().(_gcc .SimpleEncoder );if !_bgdg {_cg .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_abcfb .Encoder (),_abcfb );
return ;};_efbb :=_ebeca .Charcodes ();_abcfb ._aefe =make (map[_gcc .CharCode ]float64 ,len (_efbb ));for _ ,_fbfca :=range _efbb {_ecgad ,_ :=_ebeca .CharcodeToRune (_fbfca );_bffc ,_ :=_abcfb ._cegcd .Read (_ecgad );_abcfb ._aefe [_fbfca ]=_bffc .Wx ;
};};

// GetContentStreams returns the content stream as an array of strings.
func (_fgaee *PdfPage )GetContentStreams ()([]string ,error ){_gaecb :=_fgaee .GetContentStreamObjs ();var _bagca []string ;for _ ,_ddbcg :=range _gaecb {_fbdfb ,_eccc :=_cbebb (_ddbcg );if _eccc !=nil {return nil ,_eccc ;};_bagca =append (_bagca ,_fbdfb );
};return _bagca ,nil ;};func (_bab *PdfAnnotationMarkup )appendToPdfDictionary (_aaab *_gadb .PdfObjectDictionary ){_aaab .SetIfNotNil ("\u0054",_bab .T );if _bab .Popup !=nil {_aaab .Set ("\u0050\u006f\u0070u\u0070",_bab .Popup .ToPdfObject ());};_aaab .SetIfNotNil ("\u0043\u0041",_bab .CA );
_aaab .SetIfNotNil ("\u0052\u0043",_bab .RC );_aaab .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bab .CreationDate );_aaab .SetIfNotNil ("\u0049\u0052\u0054",_bab .IRT );_aaab .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bab .Subj );
_aaab .SetIfNotNil ("\u0052\u0054",_bab .RT );_aaab .SetIfNotNil ("\u0049\u0054",_bab .IT );_aaab .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bab .ExData );};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_ecbb _gadb .PdfObject ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_abe :=NewPdfAction ();_cee :=&PdfActionSetOCGState {};_cee .PdfAction =_abe ;_abe .SetContext (_cee );return _cee ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_fffbf *PdfPage )GetPageAsIndirectObject ()*_gadb .PdfIndirectObject {return _fffbf ._fgbea };

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dbcf *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _aecca []*PdfField ;_edegd :=map[*_gadb .PdfIndirectObject ]struct{}{};for _ ,_dbef :=range _dbcf .PageList {_afabdd ,_geddc :=_dbef .GetAnnotations ();if _geddc !=nil {return _geddc ;
};for _ ,_acaed :=range _afabdd {var _aedee *PdfField ;switch _dbddg :=_acaed .GetContext ().(type ){case *PdfAnnotationWidget :if _dbddg ._bag !=nil {_aedee =_dbddg ._bag ;break ;};if _dbebg ,_afece :=_gadb .GetIndirect (_dbddg .Parent );_afece {_aedee ,_geddc =_dbcf .newPdfFieldFromIndirectObject (_dbebg ,nil );
if _geddc ==nil {break ;};_cg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dbebg ,_geddc );
};if _dbddg ._defb !=nil {_aedee ,_geddc =_dbcf .newPdfFieldFromIndirectObject (_dbddg ._defb ,nil );if _geddc ==nil {break ;};_cg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dbddg ._defb ,_geddc );
};};if _aedee ==nil {continue ;};if _ ,_ccdeb :=_edegd [_aedee ._fbbf ];_ccdeb {continue ;};_edegd [_aedee ._fbbf ]=struct{}{};_aecca =append (_aecca ,_aedee );};};if len (_aecca )==0{return nil ;};if _dbcf .AcroForm ==nil {_dbcf .AcroForm =NewPdfAcroForm ();
};_dbcf .AcroForm .Fields =&_aecca ;return nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ggaf :=NewPdfAnnotation ();_aed :=&PdfAnnotationUnderline {};_aed .PdfAnnotation =_ggaf ;_aed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggaf .SetContext (_aed );return _aed ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cc .ReadSeeker )(*PdfReader ,error ){const _deee ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _ceefe (rs ,&ReaderOpts {LazyLoad :true },false ,_deee );
};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_bbdb *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func _cdbc (_ecgae *_gadb .PdfObjectDictionary ,_ffeec *fontCommon )(*pdfFontType3 ,error ){_cabdfc :=_adbed (_ffeec );
_egca :=_ecgae .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _egca ==nil {_egca =_gadb .MakeInteger (0);};_cabdfc .FirstChar =_egca ;_bbfe ,_eddec :=_gadb .GetIntVal (_egca );if !_eddec {_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_egca );
return nil ,_gadb .ErrTypeError ;};_aecd :=_gcc .CharCode (_bbfe );_egca =_ecgae .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _egca ==nil {_egca =_gadb .MakeInteger (255);};_cabdfc .LastChar =_egca ;_bbfe ,_eddec =_gadb .GetIntVal (_egca );
if !_eddec {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_egca );return nil ,_gadb .ErrTypeError ;
};_bbca :=_gcc .CharCode (_bbfe );_egca =_ecgae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _egca !=nil {_cabdfc .Resources =_egca ;};_egca =_ecgae .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _egca ==nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_egca );
return nil ,_gadb .ErrNotSupported ;};_cabdfc .CharProcs =_egca ;_egca =_ecgae .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _egca ==nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_egca );
return nil ,_gadb .ErrNotSupported ;};_cabdfc .FontMatrix =_egca ;_cabdfc ._ddfgd =make (map[_gcc .CharCode ]float64 );_egca =_ecgae .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _egca !=nil {_cabdfc .Widths =_egca ;_gade ,_efee :=_gadb .GetArray (_egca );
if !_efee {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_egca );return nil ,_gadb .ErrTypeError ;
};_bfad ,_geaeg :=_gade .ToFloat64Array ();if _geaeg !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_geaeg ;};if len (_bfad )!=int (_bbca -_aecd +1){_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bbca -_aecd +1,len (_bfad ));
return nil ,_gadb .ErrRangeError ;};_caea ,_efee :=_gadb .GetArray (_cabdfc .FontMatrix );if !_efee {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_caea );
return nil ,_geaeg ;};_gdceg ,_geaeg :=_caea .ToFloat64Array ();if _geaeg !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_geaeg ;};_fgcee :=_dbb .NewMatrix (_gdceg [0],_gdceg [1],_gdceg [2],_gdceg [3],_gdceg [4],_gdceg [5]);for _fdge ,_bdcgc :=range _bfad {_geddab ,_ :=_fgcee .Transform (_bdcgc ,_bdcgc );_cabdfc ._ddfgd [_aecd +_gcc .CharCode (_fdge )]=_geddab ;
};};_cabdfc .Encoding =_gadb .TraceToDirectObject (_ecgae .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_ggdf :=_ecgae .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ggdf !=nil {_cabdfc ._eagb =_gadb .TraceToDirectObject (_ggdf );
_edece ,_deab :=_adfg (_cabdfc ._eagb ,&_cabdfc .fontCommon );if _deab !=nil {return nil ,_deab ;};_cabdfc ._ddbg =_edece ;};if _fdfaa :=_cabdfc ._ddbg ;_fdfaa !=nil {_cabdfc ._bbcg =_gcc .NewCMapEncoder ("",nil ,_fdfaa );}else {_cabdfc ._bbcg =_gcc .NewPdfDocEncoder ();
};return _cabdfc ,nil ;};func _bffaa (_gfff *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_gfff }};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};var (_edccf =_ea .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_dcdeac =_ea .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_dfga =_ea .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_bgfg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_beced ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_baacca ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_cbb *PdfAction )GetContext ()PdfModel {if _cbb ==nil {return nil ;};return _cbb ._gf ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _gadb .PdfObject ;T3DV _gadb .PdfObject ;T3DA _gadb .PdfObject ;T3DI _gadb .PdfObject ;T3DB _gadb .PdfObject ;};func (_feeg *PdfReader )newPdfActionGotoRFromDict (_eca *_gadb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dde ,_feg :=_acb (_eca .Get ("\u0046"));
if _feg !=nil {return nil ,_feg ;};return &PdfActionGoToR {D :_eca .Get ("\u0044"),NewWindow :_eca .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dde },nil ;};

// ToInteger convert to an integer format.
func (_gbb *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_ecea :=_gee .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ecea *_gbb .R ()),uint32 (_ecea *_gbb .G ()),uint32 (_ecea *_gbb .B ())};};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_bcgf *PdfColorspaceDeviceN )ToPdfObject ()_gadb .PdfObject {_fefe :=_gadb .MakeArray (_gadb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_fefe .Append (_bcgf .ColorantNames );_fefe .Append (_bcgf .AlternateSpace .ToPdfObject ());_fefe .Append (_bcgf .TintTransform .ToPdfObject ());
if _bcgf .Attributes !=nil {_fefe .Append (_bcgf .Attributes .ToPdfObject ());};if _bcgf ._defdbf !=nil {_bcgf ._defdbf .PdfObject =_fefe ;return _bcgf ._defdbf ;};return _fefe ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _gadb .PdfObject ;T _gadb .PdfObject ;Operation _gadb .PdfObject ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_eaeae *PdfSignature ,_adcbg Hasher ,_bbbae SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_dgdd *PdfAnnotationStamp )ToPdfObject ()_gadb .PdfObject {_dgdd .PdfAnnotation .ToPdfObject ();_ddefd :=_dgdd ._defb ;_gedf :=_ddefd .PdfObject .(*_gadb .PdfObjectDictionary );_dgdd .PdfAnnotationMarkup .appendToPdfDictionary (_gedf );_gedf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0053\u0074\u0061m\u0070"));
_gedf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgdd .Name );return _ddefd ;};func _babfb ()string {_cccgd .Lock ();defer _cccgd .Unlock ();return _fbbc };

// GetContainingPdfObject implements interface PdfModel.
func (_ddba *Permissions )GetContainingPdfObject ()_gadb .PdfObject {return _ddba ._gafcf };func _fgaa (_cfagf []*_gadb .PdfObjectStream )*_gadb .PdfObjectArray {if len (_cfagf )==0{return nil ;};_eega :=make ([]_gadb .PdfObject ,0,len (_cfagf ));for _ ,_aecg :=range _cfagf {_eega =append (_eega ,_aecg );
};return _gadb .MakeArray (_eega ...);};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_gadb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_defdbf *_gadb .PdfIndirectObject ;};var _cfbea =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// ToPdfObject implements interface PdfModel.
func (_fbee *PdfActionJavaScript )ToPdfObject ()_gadb .PdfObject {_fbee .PdfAction .ToPdfObject ();_df :=_fbee ._ec ;_ebb :=_df .PdfObject .(*_gadb .PdfObjectDictionary );_ebb .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeJavaScript )));_ebb .SetIfNotNil ("\u004a\u0053",_fbee .JS );
return _df ;};

// C returns the value of the C component of the color.
func (_dcdee *PdfColorCalRGB )C ()float64 {return _dcdee [2]};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_acae *_gadb .PdfIndirectObject ;Certs []*_gadb .PdfObjectStream ;OCSPs []*_gadb .PdfObjectStream ;CRLs []*_gadb .PdfObjectStream ;VRI map[string ]*VRI ;_cggd map[string ]*_gadb .PdfObjectStream ;_abee map[string ]*_gadb .PdfObjectStream ;
_bdafe map[string ]*_gadb .PdfObjectStream ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_gadb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_cbag *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eacf :=vals [0];if _eacf < 0.0||_eacf > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eacf );
return nil ,ErrColorOutOfRange ;};_gafd :=vals [1];if _gafd < 0.0||_gafd > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eacf );return nil ,ErrColorOutOfRange ;
};_gbgf :=vals [2];if _gbgf < 0.0||_gbgf > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eacf );return nil ,ErrColorOutOfRange ;};_bfec :=NewPdfColorDeviceRGB (_eacf ,_gafd ,_gbgf );
return _bfec ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_accdf *_gadb .PdfIndirectObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_a *PdfAction )GetContainingPdfObject ()_gadb .PdfObject {return _a ._ec };

// AddCustomInfo adds a custom info into document info dictionary.
func (_eggd *PdfInfo )AddCustomInfo (name string ,value string )error {if _eggd ._adbb ==nil {_eggd ._adbb =_gadb .MakeDict ();};if _ ,_edbf :=_cfbea [name ];_edbf {return _b .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_eggd ._adbb .SetIfNotNil (*_gadb .MakeName (name ),_gadb .MakeString (value ));return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cbae *PdfColorspaceCalRGB )ToPdfObject ()_gadb .PdfObject {_fcbaf :=&_gadb .PdfObjectArray {};_fcbaf .Append (_gadb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_dcce :=_gadb .MakeDict ();if _cbae .WhitePoint !=nil {_agfc :=_gadb .MakeArray (_gadb .MakeFloat (_cbae .WhitePoint [0]),_gadb .MakeFloat (_cbae .WhitePoint [1]),_gadb .MakeFloat (_cbae .WhitePoint [2]));
_dcce .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_agfc );}else {_cg .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cbae .BlackPoint !=nil {_cdgc :=_gadb .MakeArray (_gadb .MakeFloat (_cbae .BlackPoint [0]),_gadb .MakeFloat (_cbae .BlackPoint [1]),_gadb .MakeFloat (_cbae .BlackPoint [2]));_dcce .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cdgc );
};if _cbae .Gamma !=nil {_gdad :=_gadb .MakeArray (_gadb .MakeFloat (_cbae .Gamma [0]),_gadb .MakeFloat (_cbae .Gamma [1]),_gadb .MakeFloat (_cbae .Gamma [2]));_dcce .Set ("\u0047\u0061\u006dm\u0061",_gdad );};if _cbae .Matrix !=nil {_ecffg :=_gadb .MakeArray (_gadb .MakeFloat (_cbae .Matrix [0]),_gadb .MakeFloat (_cbae .Matrix [1]),_gadb .MakeFloat (_cbae .Matrix [2]),_gadb .MakeFloat (_cbae .Matrix [3]),_gadb .MakeFloat (_cbae .Matrix [4]),_gadb .MakeFloat (_cbae .Matrix [5]),_gadb .MakeFloat (_cbae .Matrix [6]),_gadb .MakeFloat (_cbae .Matrix [7]),_gadb .MakeFloat (_cbae .Matrix [8]));
_dcce .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ecffg );};_fcbaf .Append (_dcce );if _cbae ._cgeb !=nil {_cbae ._cgeb .PdfObject =_fcbaf ;return _cbae ._cgeb ;};return _fcbaf ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_abgbc *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dcdg :=_abgbc .actualFont ();if _dcdg ==nil {_cg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_abgbc ._ecfec );
return _bf .CharMetrics {},false ;};if _eeab ,_bdcbd :=_dcdg .GetRuneMetrics (r );_bdcbd {return _eeab ,true ;};if _fcge ,_ccca :=_abgbc .GetFontDescriptor ();_ccca ==nil &&_fcge !=nil {return _bf .CharMetrics {Wx :_fcge ._aggcb },true ;};_cg .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abgbc );
return _bf .CharMetrics {},false ;};type pdfSignDictionary struct{*_gadb .PdfObjectDictionary ;_cbaef *SignatureHandler ;_cdce *PdfSignature ;_fefeaf int64 ;_degae int ;_beea int ;_eaacc int ;_cccgb int ;};type modelManager struct{_dfdb map[PdfModel ]_gadb .PdfObject ;
_eeedc map[_gadb .PdfObject ]PdfModel ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_bgeba *CompliancePdfReader )error ;};func _dfagf (_decc *_gadb .PdfObjectDictionary ,_aedgb *fontCommon )(*pdfCIDFontType2 ,error ){if _aedgb ._dccge !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_aedgb );
return nil ,_gadb .ErrRangeError ;};_bgaed :=_eefb (_aedgb );_dgeg ,_cfcdb :=_gadb .GetDict (_decc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cfcdb {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_aedgb );
return nil ,ErrRequiredAttributeMissing ;};_bgaed .CIDSystemInfo =_dgeg ;_bgaed .DW =_decc .Get ("\u0044\u0057");_bgaed .W =_decc .Get ("\u0057");_bgaed .DW2 =_decc .Get ("\u0044\u0057\u0032");_bgaed .W2 =_decc .Get ("\u0057\u0032");_bgaed .CIDToGIDMap =_decc .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_bgaed ._fbacg =1000.0;if _bddgg ,_bbgfb :=_gadb .GetNumberAsFloat (_bgaed .DW );_bbgfb ==nil {_bgaed ._fbacg =_bddgg ;};_ggbcc ,_fbdd :=_cbadf (_bgaed .W );if _fbdd !=nil {return nil ,_fbdd ;};if _ggbcc ==nil {_ggbcc =map[_gcc .CharCode ]float64 {};};
_bgaed ._eagdc =_ggbcc ;return _bgaed ,nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_fdfab :=&PdfPageResources {};_fdfab ._gedfg =_gadb .MakeDict ();return _fdfab ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_aaafe *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_afec pdfFontSimple )GetRuneMetrics (r rune )(_bf .CharMetrics ,bool ){if _afec ._cegcd !=nil {_egac ,_gcfcg :=_afec ._cegcd .Read (r );if _gcfcg {return _egac ,true ;};};_fgfcf :=_afec .Encoder ();if _fgfcf ==nil {_cg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_afec );
return _bf .CharMetrics {},false ;};_aafgf ,_cddef :=_fgfcf .RuneToCharcode (r );if !_cddef {if r !=' '{_cg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_afec );
};return _bf .CharMetrics {},false ;};_gffb ,_gagfa :=_afec .GetCharMetrics (_aafgf );return _gffb ,_gagfa ;};func (_fdcc *PdfReader )newPdfActionFromIndirectObject (_bea *_gadb .PdfIndirectObject )(*PdfAction ,error ){_ffg ,_dcg :=_bea .PdfObject .(*_gadb .PdfObjectDictionary );
if !_dcg {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fdcc ._gaccc .GetModelFromPrimitive (_ffg );model !=nil {_fag ,_aa :=model .(*PdfAction );if !_aa {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _fag ,nil ;};_dcd :=&PdfAction {};_dcd ._ec =_bea ;_fdcc ._gaccc .Register (_ffg ,_dcd );if _fbef :=_ffg .Get ("\u0054\u0079\u0070\u0065");_fbef !=nil {_eda ,_fdb :=_fbef .(*_gadb .PdfObjectName );if !_fdb {_cg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fbef );
}else {if *_eda !="\u0041\u0063\u0074\u0069\u006f\u006e"{_cg .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_eda );
};_dcd .Type =_eda ;};};if _fagc :=_ffg .Get ("\u004e\u0065\u0078\u0074");_fagc !=nil {_dcd .Next =_fagc ;};if _geeg :=_ffg .Get ("\u0053");_geeg !=nil {_dcd .S =_geeg ;};_fc ,_aee :=_dcd .S .(*_gadb .PdfObjectName );if !_aee {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dcd .S );
return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dcd .S );};_dce :=PdfActionType (_fc .String ());switch _dce {case ActionTypeGoTo :_bbb ,_gcfdg :=_fdcc .newPdfActionGotoFromDict (_ffg );
if _gcfdg !=nil {return nil ,_gcfdg ;};_bbb .PdfAction =_dcd ;_dcd ._gf =_bbb ;return _dcd ,nil ;case ActionTypeGoToR :_cbg ,_aac :=_fdcc .newPdfActionGotoRFromDict (_ffg );if _aac !=nil {return nil ,_aac ;};_cbg .PdfAction =_dcd ;_dcd ._gf =_cbg ;return _dcd ,nil ;
case ActionTypeGoToE :_def ,_faa :=_fdcc .newPdfActionGotoEFromDict (_ffg );if _faa !=nil {return nil ,_faa ;};_def .PdfAction =_dcd ;_dcd ._gf =_def ;return _dcd ,nil ;case ActionTypeLaunch :_ccc ,_bba :=_fdcc .newPdfActionLaunchFromDict (_ffg );if _bba !=nil {return nil ,_bba ;
};_ccc .PdfAction =_dcd ;_dcd ._gf =_ccc ;return _dcd ,nil ;case ActionTypeThread :_gbf ,_dbda :=_fdcc .newPdfActionThreadFromDict (_ffg );if _dbda !=nil {return nil ,_dbda ;};_gbf .PdfAction =_dcd ;_dcd ._gf =_gbf ;return _dcd ,nil ;case ActionTypeURI :_ged ,_dcc :=_fdcc .newPdfActionURIFromDict (_ffg );
if _dcc !=nil {return nil ,_dcc ;};_ged .PdfAction =_dcd ;_dcd ._gf =_ged ;return _dcd ,nil ;case ActionTypeSound :_afc ,_ded :=_fdcc .newPdfActionSoundFromDict (_ffg );if _ded !=nil {return nil ,_ded ;};_afc .PdfAction =_dcd ;_dcd ._gf =_afc ;return _dcd ,nil ;
case ActionTypeMovie :_eec ,_cab :=_fdcc .newPdfActionMovieFromDict (_ffg );if _cab !=nil {return nil ,_cab ;};_eec .PdfAction =_dcd ;_dcd ._gf =_eec ;return _dcd ,nil ;case ActionTypeHide :_cef ,_cabe :=_fdcc .newPdfActionHideFromDict (_ffg );if _cabe !=nil {return nil ,_cabe ;
};_cef .PdfAction =_dcd ;_dcd ._gf =_cef ;return _dcd ,nil ;case ActionTypeNamed :_gadd ,_dgc :=_fdcc .newPdfActionNamedFromDict (_ffg );if _dgc !=nil {return nil ,_dgc ;};_gadd .PdfAction =_dcd ;_dcd ._gf =_gadd ;return _dcd ,nil ;case ActionTypeSubmitForm :_ggc ,_cgfe :=_fdcc .newPdfActionSubmitFormFromDict (_ffg );
if _cgfe !=nil {return nil ,_cgfe ;};_ggc .PdfAction =_dcd ;_dcd ._gf =_ggc ;return _dcd ,nil ;case ActionTypeResetForm :_aad ,_acc :=_fdcc .newPdfActionResetFormFromDict (_ffg );if _acc !=nil {return nil ,_acc ;};_aad .PdfAction =_dcd ;_dcd ._gf =_aad ;
return _dcd ,nil ;case ActionTypeImportData :_gec ,_gcga :=_fdcc .newPdfActionImportDataFromDict (_ffg );if _gcga !=nil {return nil ,_gcga ;};_gec .PdfAction =_dcd ;_dcd ._gf =_gec ;return _dcd ,nil ;case ActionTypeSetOCGState :_gcfb ,_dbe :=_fdcc .newPdfActionSetOCGStateFromDict (_ffg );
if _dbe !=nil {return nil ,_dbe ;};_gcfb .PdfAction =_dcd ;_dcd ._gf =_gcfb ;return _dcd ,nil ;case ActionTypeRendition :_edaa ,_eef :=_fdcc .newPdfActionRenditionFromDict (_ffg );if _eef !=nil {return nil ,_eef ;};_edaa .PdfAction =_dcd ;_dcd ._gf =_edaa ;
return _dcd ,nil ;case ActionTypeTrans :_bcg ,_cdg :=_fdcc .newPdfActionTransFromDict (_ffg );if _cdg !=nil {return nil ,_cdg ;};_bcg .PdfAction =_dcd ;_dcd ._gf =_bcg ;return _dcd ,nil ;case ActionTypeGoTo3DView :_eac ,_dbbf :=_fdcc .newPdfActionGoTo3DViewFromDict (_ffg );
if _dbbf !=nil {return nil ,_dbbf ;};_eac .PdfAction =_dcd ;_dcd ._gf =_eac ;return _dcd ,nil ;case ActionTypeJavaScript :_gaf ,_eefd :=_fdcc .newPdfActionJavaScriptFromDict (_ffg );if _eefd !=nil {return nil ,_eefd ;};_gaf .PdfAction =_dcd ;_dcd ._gf =_gaf ;
return _dcd ,nil ;};_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_dce );return nil ,nil ;};func _bgggb (_bfceg *_gadb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_edegc :=&PdfTilingPattern {};
_cdgfb :=_bfceg .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _cdgfb ==nil {_cg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bfcdc ,_bbbdf :=_cdgfb .(*_gadb .PdfObjectInteger );
if !_bbbdf {_cg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cdgfb );return nil ,_gadb .ErrTypeError ;
};_edegc .PaintType =_bfcdc ;_cdgfb =_bfceg .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cdgfb ==nil {_cg .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_afdgb ,_bbbdf :=_cdgfb .(*_gadb .PdfObjectInteger );if !_bbbdf {_cg .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdgfb );
return nil ,_gadb .ErrTypeError ;};_edegc .TilingType =_afdgb ;_cdgfb =_bfceg .Get ("\u0042\u0042\u006f\u0078");if _cdgfb ==nil {_cg .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cdgfb =_gadb .TraceToDirectObject (_cdgfb );_feae ,_bbbdf :=_cdgfb .(*_gadb .PdfObjectArray );if !_bbbdf {_cg .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdgfb );
return nil ,_gadb .ErrTypeError ;};_agefa ,_eefc :=NewPdfRectangle (*_feae );if _eefc !=nil {_cg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_eefc );return nil ,_eefc ;};_edegc .BBox =_agefa ;_cdgfb =_bfceg .Get ("\u0058\u0053\u0074e\u0070");
if _cdgfb ==nil {_cg .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aabggg ,_eefc :=_gadb .GetNumberAsFloat (_cdgfb );if _eefc !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_aabggg );
return nil ,_eefc ;};_edegc .XStep =_gadb .MakeFloat (_aabggg );_cdgfb =_bfceg .Get ("\u0059\u0053\u0074e\u0070");if _cdgfb ==nil {_cg .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gfdbf ,_eefc :=_gadb .GetNumberAsFloat (_cdgfb );if _eefc !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gfdbf );
return nil ,_eefc ;};_edegc .YStep =_gadb .MakeFloat (_gfdbf );_cdgfb =_bfceg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cdgfb ==nil {_cg .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bfceg ,_bbbdf =_gadb .TraceToDirectObject (_cdgfb ).(*_gadb .PdfObjectDictionary );if !_bbbdf {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cdgfb );
};_ddfbb ,_eefc :=NewPdfPageResourcesFromDict (_bfceg );if _eefc !=nil {return nil ,_eefc ;};_edegc .Resources =_ddfbb ;if _dacfd :=_bfceg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dacfd !=nil {_eebba ,_aadcb :=_dacfd .(*_gadb .PdfObjectArray );if !_aadcb {_cg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dacfd );
return nil ,_gadb .ErrTypeError ;};_edegc .Matrix =_eebba ;};return _edegc ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_cbcee *_gadb .PdfIndirectObject ;};type pdfFontType0 struct{fontCommon ;_cebe *_gadb .PdfIndirectObject ;_bagcbf _gcc .TextEncoder ;
Encoding _gadb .PdfObject ;DescendantFont *PdfFont ;_cedba *_gde .CMap ;};type fontFile struct{_cffd string ;_cdded string ;_fbfg _gcc .SimpleEncoder ;};

// ToPdfObject implements interface PdfModel.
func (_fbe *PdfActionSubmitForm )ToPdfObject ()_gadb .PdfObject {_fbe .PdfAction .ToPdfObject ();_eabe :=_fbe ._ec ;_dbg :=_eabe .PdfObject .(*_gadb .PdfObjectDictionary );_dbg .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeSubmitForm )));if _fbe .F !=nil {_dbg .Set ("\u0046",_fbe .F .ToPdfObject ());
};_dbg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fbe .Fields );_dbg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fbe .Flags );return _eabe ;};func (_ceea *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _ceea ._bbgfe ==nil &&_ceea .DescendantFont !=nil {return _ceea .DescendantFont .FontDescriptor ();
};return _ceea ._bbgfe ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cccgd .Lock ();defer _cccgd .Unlock ();_cabgc =title };

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_ecgaf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetStructRoot gets the StructTreeRoot object
func (_cafe *PdfPage )GetStructTreeRoot ()(*_gadb .PdfObject ,bool ){_debaa ,_becb :=_cafe ._fcga .GetCatalogStructTreeRoot ();return &_debaa ,_becb ;};

// ToPdfObject implements interface PdfModel.
func (_daf *PdfActionSound )ToPdfObject ()_gadb .PdfObject {_daf .PdfAction .ToPdfObject ();_fgf :=_daf ._ec ;_cfa :=_fgf .PdfObject .(*_gadb .PdfObjectDictionary );_cfa .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeSound )));_cfa .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_daf .Sound );
_cfa .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_daf .Volume );_cfa .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_daf .Synchronous );_cfa .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_daf .Repeat );_cfa .SetIfNotNil ("\u004d\u0069\u0078",_daf .Mix );
return _fgf ;};func (_beceb *Image )samplesTrimPadding (_fgbed []uint32 )[]uint32 {_bbcgb :=_beceb .ColorComponents *int (_beceb .Width )*int (_beceb .Height );if len (_fgbed )==_bbcgb {return _fgbed ;};_dbbe :=make ([]uint32 ,_bbcgb );_caccad :=int (_beceb .Width )*_beceb .ColorComponents ;
var _aced ,_cgcbc ,_aggdc ,_eaafc int ;_gcdbc :=_cf .BytesPerLine (int (_beceb .Width ),int (_beceb .BitsPerComponent ),_beceb .ColorComponents );for _aced =0;_aced < int (_beceb .Height );_aced ++{_cgcbc =_aced *int (_beceb .Width );_aggdc =_aced *_gcdbc ;
for _eaafc =0;_eaafc < _caccad ;_eaafc ++{_dbbe [_cgcbc +_eaafc ]=_fgbed [_aggdc +_eaafc ];};};return _dbbe ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _gadb .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _dacc *_gadb .PdfIndirectObject ;var _dgcb *_gadb .PdfObjectName ;var _aaaf *_gadb .PdfObjectArray ;if _eadd ,_caed :=obj .(*_gadb .PdfIndirectObject );
_caed {_dacc =_eadd ;};obj =_gadb .TraceToDirectObject (obj );switch _dcga :=obj .(type ){case *_gadb .PdfObjectArray :_aaaf =_dcga ;case *_gadb .PdfObjectName :_dgcb =_dcga ;};if _dgcb !=nil {switch *_dgcb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_cg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_dgcb );return nil ,_cdga ;};};if _aaaf !=nil &&_aaaf .Len ()> 0{var _dbae _gadb .PdfObject =_dacc ;
if _dacc ==nil {_dbae =_aaaf ;};if _gfgaf ,_ceef :=_gadb .GetName (_aaaf .Get (0));_ceef {switch _gfgaf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _aaaf .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _aaaf .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _aaaf .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _edde (_dbae );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _dgba (_dbae );
case "\u004c\u0061\u0062":return _bdeg (_dbae );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _bccade (_dbae );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _fdba (_dbae );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _ddeg (_dbae );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _fgbegf (_dbae );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _fabag (_dbae );default:_cg .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_gfgaf );
};};};_cg .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ToPdfObject implements interface PdfModel.
func (_bdca *PdfAnnotationRedact )ToPdfObject ()_gadb .PdfObject {_bdca .PdfAnnotation .ToPdfObject ();_edgd :=_bdca ._defb ;_cecd :=_edgd .PdfObject .(*_gadb .PdfObjectDictionary );_bdca .PdfAnnotationMarkup .appendToPdfDictionary (_cecd );_cecd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_cecd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bdca .QuadPoints );_cecd .SetIfNotNil ("\u0049\u0043",_bdca .IC );_cecd .SetIfNotNil ("\u0052\u004f",_bdca .RO );_cecd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_bdca .OverlayText );
_cecd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bdca .Repeat );_cecd .SetIfNotNil ("\u0044\u0041",_bdca .DA );_cecd .SetIfNotNil ("\u0051",_bdca .Q );return _edgd ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _gadb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dafa *PdfBorderStyle )ToPdfObject ()_gadb .PdfObject {_defc :=_gadb .MakeDict ();if _dafa ._ecbb !=nil {if _degg ,_bddc :=_dafa ._ecbb .(*_gadb .PdfIndirectObject );_bddc {_degg .PdfObject =_defc ;};};_defc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _dafa .W !=nil {_defc .Set ("\u0057",_gadb .MakeFloat (*_dafa .W ));};if _dafa .S !=nil {_defc .Set ("\u0053",_gadb .MakeName (_dafa .S .GetPdfName ()));};if _dafa .D !=nil {_defc .Set ("\u0044",_gadb .MakeArrayFromIntegers (*_dafa .D ));};if _dafa ._ecbb !=nil {return _dafa ._ecbb ;
};return _defc ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dgaab *PdfField )ToPdfObject ()_gadb .PdfObject {_cfbf :=_dgaab ._fbbf ;_bbacc :=_cfbf .PdfObject .(*_gadb .PdfObjectDictionary );_abgce :=_gadb .MakeArray ();for _ ,_dgag :=range _dgaab .Kids {_abgce .Append (_dgag .ToPdfObject ());};for _ ,_dfcdf :=range _dgaab .Annotations {if _dfcdf ._defb !=_dgaab ._fbbf {_abgce .Append (_dfcdf .GetContext ().ToPdfObject ());
};};if _dgaab .Parent !=nil {_bbacc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgaab .Parent .GetContainingPdfObject ());};if _abgce .Len ()> 0{_bbacc .Set ("\u004b\u0069\u0064\u0073",_abgce );};_bbacc .SetIfNotNil ("\u0046\u0054",_dgaab .FT );
_bbacc .SetIfNotNil ("\u0054",_dgaab .T );_bbacc .SetIfNotNil ("\u0054\u0055",_dgaab .TU );_bbacc .SetIfNotNil ("\u0054\u004d",_dgaab .TM );_bbacc .SetIfNotNil ("\u0046\u0066",_dgaab .Ff );_bbacc .SetIfNotNil ("\u0056",_dgaab .V );_bbacc .SetIfNotNil ("\u0044\u0056",_dgaab .DV );
_bbacc .SetIfNotNil ("\u0041\u0041",_dgaab .AA );if _dgaab .VariableText !=nil {_bbacc .SetIfNotNil ("\u0044\u0041",_dgaab .VariableText .DA );_bbacc .SetIfNotNil ("\u0051",_dgaab .VariableText .Q );_bbacc .SetIfNotNil ("\u0044\u0053",_dgaab .VariableText .DS );
_bbacc .SetIfNotNil ("\u0052\u0056",_dgaab .VariableText .RV );};return _cfbf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgadc *PdfShadingType5 )ToPdfObject ()_gadb .PdfObject {_cgadc .PdfShading .ToPdfObject ();_becede ,_dddde :=_cgadc .getShadingDict ();if _dddde !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgadc .BitsPerCoordinate !=nil {_becede .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgadc .BitsPerCoordinate );};if _cgadc .BitsPerComponent !=nil {_becede .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgadc .BitsPerComponent );
};if _cgadc .VerticesPerRow !=nil {_becede .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cgadc .VerticesPerRow );};if _cgadc .Decode !=nil {_becede .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgadc .Decode );
};if _cgadc .Function !=nil {if len (_cgadc .Function )==1{_becede .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgadc .Function [0].ToPdfObject ());}else {_bbeac :=_gadb .MakeArray ();for _ ,_aaeac :=range _cgadc .Function {_bbeac .Append (_aaeac .ToPdfObject ());
};_becede .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbeac );};};return _cgadc ._gfbgb ;};func (_cage *PdfReader )newPdfAnnotationProjectionFromDict (_deae *_gadb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_efa :=&PdfAnnotationProjection {};
_efc ,_fead :=_cage .newPdfAnnotationMarkupFromDict (_deae );if _fead !=nil {return nil ,_fead ;};_efa .PdfAnnotationMarkup =_efc ;return _efa ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_baef *PdfColorspaceLab )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcgg ,_eedf :=_gadb .GetNumbersAsFloat (objects );
if _eedf !=nil {return nil ,_eedf ;};return _baef .ColorFromFloats (_bcgg );};func (_fabgb *PdfReader )newPdfAnnotationCaretFromDict (_gcb *_gadb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bccf :=PdfAnnotationCaret {};_fecd ,_faaa :=_fabgb .newPdfAnnotationMarkupFromDict (_gcb );
if _faaa !=nil {return nil ,_faaa ;};_bccf .PdfAnnotationMarkup =_fecd ;_bccf .RD =_gcb .Get ("\u0052\u0044");_bccf .Sy =_gcb .Get ("\u0053\u0079");return &_bccf ,nil ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_fafe :=&PdfAppender {_daed :reader ._ddde ,Reader :reader ,_cbgca :reader ._becf ,_gbde :reader ._cbfgc };_adgb ,_bdgbf :=_fafe ._daed .Seek (0,_cc .SeekEnd );
if _bdgbf !=nil {return nil ,_bdgbf ;};_fafe ._bfcb =_adgb ;if _ ,_bdgbf =_fafe ._daed .Seek (0,_cc .SeekStart );_bdgbf !=nil {return nil ,_bdgbf ;};_fafe ._fff ,_bdgbf =NewPdfReaderWithOpts (_fafe ._daed ,opts );if _bdgbf !=nil {return nil ,_bdgbf ;};
for _ ,_eebd :=range _fafe .Reader .GetObjectNums (){if _fafe ._gced < _eebd {_fafe ._gced =_eebd ;};};_fafe ._edd =_fafe ._cbgca .GetXrefTable ();_fafe ._aefab =_fafe ._cbgca .GetXrefOffset ();_fafe ._dade =append (_fafe ._dade ,_fafe ._fff .PageList ...);
_fafe ._bge =make (map[_gadb .PdfObject ]struct{});_fafe ._gag =make (map[_gadb .PdfObject ]int64 );_fafe ._dac =make (map[_gadb .PdfObject ]struct{});_fafe ._bccaae =_fafe ._fff .AcroForm ;_fafe ._ebaf =_fafe ._fff .DSS ;if opts !=nil {_fafe ._dege =opts .Password ;
};if encryptOptions !=nil {_fafe ._abcf =encryptOptions ;};return _fafe ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_egeb PdfModel ;Rect _gadb .PdfObject ;Contents _gadb .PdfObject ;P _gadb .PdfObject ;NM _gadb .PdfObject ;M _gadb .PdfObject ;F _gadb .PdfObject ;AP _gadb .PdfObject ;AS _gadb .PdfObject ;Border _gadb .PdfObject ;C _gadb .PdfObject ;
StructParent _gadb .PdfObject ;OC _gadb .PdfObject ;_defb *_gadb .PdfIndirectObject ;};var _ pdfFont =(*pdfFontType3 )(nil );func _fafdf (_gabbg *_cf .ImageBase )(_ccdgb Image ){_ccdgb .Width =int64 (_gabbg .Width );_ccdgb .Height =int64 (_gabbg .Height );
_ccdgb .BitsPerComponent =int64 (_gabbg .BitsPerComponent );_ccdgb .ColorComponents =_gabbg .ColorComponents ;_ccdgb .Data =_gabbg .Data ;_ccdgb ._bdge =_gabbg .Decode ;_ccdgb ._egfg =_gabbg .Alpha ;return _ccdgb ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_feccf *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_cg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_daebd :=[]float64 {0.0};if _feccf .C0 !=nil {_daebd =_feccf .C0 ;};_bbcef :=[]float64 {1.0};if _feccf .C1 !=nil {_bbcef =_feccf .C1 ;};var _dggbe []float64 ;for _agbaa :=0;_agbaa < len (_daebd );_agbaa ++{_cccag :=_daebd [_agbaa ]+_gee .Pow (x [0],_feccf .N )*(_bbcef [_agbaa ]-_daebd [_agbaa ]);
_dggbe =append (_dggbe ,_cccag );};return _dggbe ,nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_dccba *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dccba .AcroForm ==nil {return nil ,nil ;};if _dccba .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_affec *PdfSignature ;
_dadfe *PdfField ;_dfddc SignatureHandler ;};var _gdcabf []*sigFieldPair ;for _ ,_dbgcd :=range _dccba .AcroForm .AllFields (){if _dbgcd .V ==nil {continue ;};if _aedca ,_cffa :=_gadb .GetDict (_dbgcd .V );_cffa {if _gfba ,_geca :=_gadb .GetNameVal (_aedca .Get ("\u0054\u0079\u0070\u0065"));
_geca &&_gfba =="\u0053\u0069\u0067"{_defcae ,_gbgdd :=_gadb .GetIndirect (_dbgcd .V );if !_gbgdd {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_gbddg ,_dacb :=_dccba .newPdfSignatureFromIndirect (_defcae );if _dacb !=nil {return nil ,_dacb ;};var _ccbbe SignatureHandler ;for _ ,_fcfcb :=range handlers {if _fcfcb .IsApplicable (_gbddg ){_ccbbe =_fcfcb ;break ;};};_gdcabf =append (_gdcabf ,&sigFieldPair {_affec :_gbddg ,_dadfe :_dbgcd ,_dfddc :_ccbbe });
};};};var _eeedf []SignatureValidationResult ;for _ ,_ceaa :=range _gdcabf {_ffcga :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ceaa ._dadfe }};if _ceaa ._dfddc ==nil {_ffcga .Errors =append (_ffcga .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_eeedf =append (_eeedf ,_ffcga );continue ;};_aaddc ,_cfbeb :=_ceaa ._dfddc .NewDigest (_ceaa ._affec );if _cfbeb !=nil {_ffcga .Errors =append (_ffcga .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cfbeb .Error ());_eeedf =append (_eeedf ,_ffcga );
continue ;};_dcbagg :=_ceaa ._affec .ByteRange ;if _dcbagg ==nil {_ffcga .Errors =append (_ffcga .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_eeedf =append (_eeedf ,_ffcga );continue ;};
for _fbaea :=0;_fbaea < _dcbagg .Len ();_fbaea =_fbaea +2{_gdagc ,_ :=_gadb .GetNumberAsInt64 (_dcbagg .Get (_fbaea ));_fegdd ,_ :=_gadb .GetIntVal (_dcbagg .Get (_fbaea +1));if _ ,_cadbf :=_dccba ._ddde .Seek (_gdagc ,_cc .SeekStart );_cadbf !=nil {return nil ,_cadbf ;
};_agcgb :=make ([]byte ,_fegdd );if _ ,_cdedd :=_dccba ._ddde .Read (_agcgb );_cdedd !=nil {return nil ,_cdedd ;};_aaddc .Write (_agcgb );};var _aefd SignatureValidationResult ;if _cggge ,_bcba :=_ceaa ._dfddc .(SignatureHandlerDocMDP );_bcba {_aefd ,_cfbeb =_cggge .ValidateWithOpts (_ceaa ._affec ,_aaddc ,SignatureHandlerDocMDPParams {Parser :_dccba ._becf });
}else {_aefd ,_cfbeb =_ceaa ._dfddc .Validate (_ceaa ._affec ,_aaddc );};if _cfbeb !=nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_cfbeb ,_ceaa ._dfddc );_aefd .Errors =append (_aefd .Errors ,_cfbeb .Error ());
};_aefd .Name =_ceaa ._affec .Name .Decoded ();_aefd .Reason =_ceaa ._affec .Reason .Decoded ();if _ceaa ._affec .M !=nil {_cabg ,_becgg :=NewPdfDate (_ceaa ._affec .M .String ());if _becgg !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_becgg );
_aefd .Errors =append (_aefd .Errors ,_becgg .Error ());continue ;};_aefd .Date =_cabg ;};_aefd .ContactInfo =_ceaa ._affec .ContactInfo .Decoded ();_aefd .Location =_ceaa ._affec .Location .Decoded ();_aefd .Fields =_ffcga .Fields ;_eeedf =append (_eeedf ,_aefd );
};return _eeedf ,nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_cde .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _f .Time ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gbed *PdfFont )ToUnicode ()string {if _gbed .baseFields ()._ddbg ==nil {return "";};return _gbed .baseFields ()._ddbg .Name ();};

// ToPdfObject returns the PDF representation of the function.
func (_dbff *PdfFunctionType2 )ToPdfObject ()_gadb .PdfObject {_eaab :=_gadb .MakeDict ();_eaab .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gadb .MakeInteger (2));_dbabe :=&_gadb .PdfObjectArray {};for _ ,_fdabf :=range _dbff .Domain {_dbabe .Append (_gadb .MakeFloat (_fdabf ));
};_eaab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbabe );if _dbff .Range !=nil {_gcacc :=&_gadb .PdfObjectArray {};for _ ,_fbabc :=range _dbff .Range {_gcacc .Append (_gadb .MakeFloat (_fbabc ));};_eaab .Set ("\u0052\u0061\u006eg\u0065",_gcacc );};
if _dbff .C0 !=nil {_cgeaf :=&_gadb .PdfObjectArray {};for _ ,_ffca :=range _dbff .C0 {_cgeaf .Append (_gadb .MakeFloat (_ffca ));};_eaab .Set ("\u0043\u0030",_cgeaf );};if _dbff .C1 !=nil {_dbad :=&_gadb .PdfObjectArray {};for _ ,_ecab :=range _dbff .C1 {_dbad .Append (_gadb .MakeFloat (_ecab ));
};_eaab .Set ("\u0043\u0031",_dbad );};_eaab .Set ("\u004e",_gadb .MakeFloat (_dbff .N ));if _dbff ._dcfcg !=nil {_dbff ._dcfcg .PdfObject =_eaab ;return _dbff ._dcfcg ;};return _eaab ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _gadb .PdfObjectName ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// GetPage returns the PdfPage model for the specified page number.
func (_bcdca *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _bcdca ._becf .GetCrypter ()!=nil &&!_bcdca ._becf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_bcdca ._fbeac )< pageNumber {return nil ,_bb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_afeaa :=pageNumber -1;if _afeaa < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_cccca :=_bcdca .PageList [_afeaa ];
return _cccca ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _gadb .StreamEncoder ;FormType _gadb .PdfObject ;BBox _gadb .PdfObject ;Matrix _gadb .PdfObject ;Resources *PdfPageResources ;Group _gadb .PdfObject ;Ref _gadb .PdfObject ;MetaData _gadb .PdfObject ;PieceInfo _gadb .PdfObject ;
LastModified _gadb .PdfObject ;StructParent _gadb .PdfObject ;StructParents _gadb .PdfObject ;OPI _gadb .PdfObject ;OC _gadb .PdfObject ;Name _gadb .PdfObject ;

// Stream data.
Stream []byte ;_feadbe *_gadb .PdfObjectStream ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_eebaa int ,_fgcb *PdfPage )error ;

// GetNumComponents returns the number of color components.
func (_accg *PdfColorspaceICCBased )GetNumComponents ()int {return _accg .N };func (_egef *PdfReader )buildPageList (_adffg *_gadb .PdfIndirectObject ,_feebb *_gadb .PdfIndirectObject ,_gdefc map[_gadb .PdfObject ]struct{})error {if _adffg ==nil {return nil ;
};if _ ,_fgffa :=_gdefc [_adffg ];_fgffa {_cg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_adffg .ObjectNumber );
return nil ;};_gdefc [_adffg ]=struct{}{};_bggaf ,_gfbfa :=_adffg .PdfObject .(*_gadb .PdfObjectDictionary );if !_gfbfa {return _bb .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_fafgf ,_gfbfa :=(*_bggaf ).Get ("\u0054\u0079\u0070\u0065").(*_gadb .PdfObjectName );
if !_gfbfa {if _bggaf .Get ("\u004b\u0069\u0064\u0073")==nil {return _bb .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_cg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_fafgf =_gadb .MakeName ("\u0050\u0061\u0067e\u0073");_bggaf .Set ("\u0054\u0079\u0070\u0065",_fafgf );};_cg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_fafgf ,_adffg );
if *_fafgf =="\u0050\u0061\u0067\u0065"{_ecdae ,_adeb :=_egef .newPdfPageFromDict (_bggaf );if _adeb !=nil {return _adeb ;};_ecdae .setContainer (_adffg );if _feebb !=nil {_bggaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_feebb );};_egef ._fbeac =append (_egef ._fbeac ,_adffg );
_egef .PageList =append (_egef .PageList ,_ecdae );return nil ;};if *_fafgf !="\u0050\u0061\u0067e\u0073"{_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_fafgf );
return _bb .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _feebb !=nil {_bggaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_feebb );};if !_egef ._fdbdd {_cafff :=_egef .traverseObjectData (_adffg );if _cafff !=nil {return _cafff ;};};_afgfd ,_eagbd :=_egef ._becf .Resolve (_bggaf .Get ("\u004b\u0069\u0064\u0073"));
if _eagbd !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _eagbd ;};var _bfefa *_gadb .PdfObjectArray ;
_bfefa ,_gfbfa =_afgfd .(*_gadb .PdfObjectArray );if !_gfbfa {_gagea ,_bcddg :=_afgfd .(*_gadb .PdfIndirectObject );if !_bcddg {return _bb .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_bfefa ,_gfbfa =_gagea .PdfObject .(*_gadb .PdfObjectArray );if !_gfbfa {return _bb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_cg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_bfefa );
for _eeeba ,_bagbe :=range _bfefa .Elements (){_aeff ,_abfec :=_gadb .GetIndirect (_bagbe );if !_abfec {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_aeff );
return _bb .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bfefa .Set (_eeeba ,_aeff );_eagbd =_egef .buildPageList (_aeff ,_adffg ,_gdefc );if _eagbd !=nil {return _eagbd ;
};};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_debc *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abb ,_gfcd :=_gadb .GetNumbersAsFloat (objects );
if _gfcd !=nil {return nil ,_gfcd ;};return _debc .ColorFromFloats (_abb );};func (_gfacb *pdfFontType0 )subsetRegistered ()error {_fece ,_cefcg :=_gfacb .DescendantFont ._ecfec .(*pdfCIDFontType2 );if !_cefcg {_cg .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gfacb .DescendantFont );
return nil ;};if _fece ==nil {return nil ;};if _fece ._bbgfe ==nil {_cg .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gfacb ._bagcbf ==nil {_cg .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_fgaba ,_cefcg :=_gadb .GetStream (_fece ._bbgfe .FontFile2 );if !_cefcg {_cg .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _bb .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fbbfga ,_bddf :=_gadb .DecodeStream (_fgaba );if _bddf !=nil {_cg .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bddf );
return _bddf ;};_dgcfd ,_bddf :=_gcf .Parse (_dbd .NewReader (_fbbfga ));if _bddf !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_fgaba .Stream ));
return _bddf ;};var _ggegb []rune ;var _gfced *_gcf .Font ;switch _abeea :=_gfacb ._bagcbf .(type ){case *_gcc .TrueTypeFontEncoder :_ggegb =_abeea .RegisteredRunes ();_gfced ,_bddf =_dgcfd .SubsetKeepRunes (_ggegb );if _bddf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddf );
return _bddf ;};_abeea .SubsetRegistered ();case *_gcc .IdentityEncoder :_ggegb =_abeea .RegisteredRunes ();_dffe :=make ([]_gcf .GlyphIndex ,len (_ggegb ));for _efdb ,_acfab :=range _ggegb {_dffe [_efdb ]=_gcf .GlyphIndex (_acfab );};_gfced ,_bddf =_dgcfd .SubsetKeepIndices (_dffe );
if _bddf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddf );return _bddf ;};case _gcc .SimpleEncoder :_ccecb :=_abeea .Charcodes ();for _ ,_ebcc :=range _ccecb {_ffgbg ,_gbeg :=_abeea .CharcodeToRune (_ebcc );if !_gbeg {_cg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ebcc );
continue ;};_ggegb =append (_ggegb ,_ffgbg );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gfacb ._bagcbf );
};var _dccff _dbd .Buffer ;_bddf =_gfced .Write (&_dccff );if _bddf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddf );return _bddf ;};if _gfacb ._ddbg !=nil {_abcaf :=make (map[_gde .CharCode ]rune ,len (_ggegb ));for _ ,_cbcf :=range _ggegb {_cdcdg ,_fddf :=_gfacb ._bagcbf .RuneToCharcode (_cbcf );
if !_fddf {continue ;};_abcaf [_gde .CharCode (_cdcdg )]=_cbcf ;};_gfacb ._ddbg =_gde .NewToUnicodeCMap (_abcaf );};_fgaba ,_bddf =_gadb .MakeStream (_dccff .Bytes (),_gadb .NewFlateEncoder ());if _bddf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddf );
return _bddf ;};_fgaba .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gadb .MakeInteger (int64 (_dccff .Len ())));if _dggg ,_babd :=_gadb .GetStream (_fece ._bbgfe .FontFile2 );_babd {*_dggg =*_fgaba ;}else {_fece ._bbgfe .FontFile2 =_fgaba ;};_fbdgg :=_beca ();
if len (_gfacb ._bbecb )> 0{_gfacb ._bbecb =_cgda (_gfacb ._bbecb ,_fbdgg );};if len (_fece ._bbecb )> 0{_fece ._bbecb =_cgda (_fece ._bbecb ,_fbdgg );};if len (_gfacb ._gfgad )> 0{_gfacb ._gfgad =_cgda (_gfacb ._gfgad ,_fbdgg );};if _fece ._bbgfe !=nil {_agdg ,_adbe :=_gadb .GetName (_fece ._bbgfe .FontName );
if _adbe &&len (_agdg .String ())> 0{_aefad :=_cgda (_agdg .String (),_fbdgg );_fece ._bbgfe .FontName =_gadb .MakeName (_aefad );};};return nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _gadb .PdfObject ;Flags _gadb .PdfObject ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_cfag *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bacf ,_dbaa :=color .(*PdfColorCalRGB );if !_dbaa {_cg .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdbaf :=_bacf .A ();_eddee :=_bacf .B ();_bffag :=_bacf .C ();X :=_cfag .Matrix [0]*_gee .Pow (_bdbaf ,_cfag .Gamma [0])+_cfag .Matrix [3]*_gee .Pow (_eddee ,_cfag .Gamma [1])+_cfag .Matrix [6]*_gee .Pow (_bffag ,_cfag .Gamma [2]);
Y :=_cfag .Matrix [1]*_gee .Pow (_bdbaf ,_cfag .Gamma [0])+_cfag .Matrix [4]*_gee .Pow (_eddee ,_cfag .Gamma [1])+_cfag .Matrix [7]*_gee .Pow (_bffag ,_cfag .Gamma [2]);Z :=_cfag .Matrix [2]*_gee .Pow (_bdbaf ,_cfag .Gamma [0])+_cfag .Matrix [5]*_gee .Pow (_eddee ,_cfag .Gamma [1])+_cfag .Matrix [8]*_gee .Pow (_bffag ,_cfag .Gamma [2]);
_beae :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ecc :=-0.969256*X +1.875992*Y +0.041556*Z ;_aaec :=0.055648*X +-0.204043*Y +1.057311*Z ;_beae =_gee .Min (_gee .Max (_beae ,0),1.0);_ecc =_gee .Min (_gee .Max (_ecc ,0),1.0);_aaec =_gee .Min (_gee .Max (_aaec ,0),1.0);
return NewPdfColorDeviceRGB (_beae ,_ecc ,_aaec ),nil ;};func _accbf (_caae _bf .StdFont )pdfFontSimple {_ggfg :=_caae .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_dccge :"\u0054\u0079\u0070e\u0031",_bbecb :_caae .Name ()},_cegcd :_caae .GetMetricsTable (),_bcabc :&PdfFontDescriptor {FontName :_gadb .MakeName (string (_ggfg .Name )),FontFamily :_gadb .MakeName (_ggfg .Family ),FontWeight :_gadb .MakeFloat (float64 (_ggfg .Weight )),Flags :_gadb .MakeInteger (int64 (_ggfg .Flags )),FontBBox :_gadb .MakeArrayFromFloats (_ggfg .BBox [:]),ItalicAngle :_gadb .MakeFloat (_ggfg .ItalicAngle ),Ascent :_gadb .MakeFloat (_ggfg .Ascent ),Descent :_gadb .MakeFloat (_ggfg .Descent ),CapHeight :_gadb .MakeFloat (_ggfg .CapHeight ),XHeight :_gadb .MakeFloat (_ggfg .XHeight ),StemV :_gadb .MakeFloat (_ggfg .StemV ),StemH :_gadb .MakeFloat (_ggfg .StemH )},_gagdd :_caae .Encoder ()};
};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_becf *_gadb .PdfParser ;_adgf _gadb .PdfObject ;_ageb *_gadb .PdfIndirectObject ;_gbfff *_gadb .PdfObjectDictionary ;_fbeac []*_gadb .PdfIndirectObject ;PageList []*PdfPage ;_ceccc int ;_gbef *_gadb .PdfObjectDictionary ;_gcecc *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_gaeg *Permissions ;_cfdad map[*PdfReader ]*PdfReader ;_cabfa []*PdfReader ;_gaccc *modelManager ;_fdbdd bool ;_cbfgc map[_gadb .PdfObject ]struct{};_ddde _cc .ReadSeeker ;_cddbe string ;_eafa bool ;_ggdaa *ReaderOpts ;
_dcfee bool ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_gadb .PdfObject ,error );};

// HasXObjectByName checks if has XObject resource by name.
func (_bbcfc *PdfPage )HasXObjectByName (name _gadb .PdfObjectName )bool {_afga ,_fffbc :=_bbcfc .Resources .XObject .(*_gadb .PdfObjectDictionary );if !_fffbc {return false ;};if _ecfce :=_afga .Get (name );_ecfce !=nil {return true ;};return false ;};


// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cabdg *Image )ConvertToBinary ()error {if _cabdg .ColorComponents ==1&&_cabdg .BitsPerComponent ==1{return nil ;};_bffb ,_efbca :=_cabdg .ToGoImage ();if _efbca !=nil {return _efbca ;};_gdga ,_efbca :=_cf .MonochromeConverter .Convert (_bffb );if _efbca !=nil {return _efbca ;
};_cabdg .Data =_gdga .Base ().Data ;_cabdg ._egfg ,_efbca =_cf .ScaleAlphaToMonochrome (_cabdg ._egfg ,int (_cabdg .Width ),int (_cabdg .Height ));if _efbca !=nil {return _efbca ;};_cabdg .BitsPerComponent =1;_cabdg .ColorComponents =1;_cabdg ._bdge =nil ;
return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_cfbcd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_ebca *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_fadcc ,_ggbab :=_gadb .GetDict (_ebca ._gaeab .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_ggbab {_fadcc =_gadb .MakeDict ();_ebca ._gaeab .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_fadcc );
};_eggdd ,_ggbab :=_gadb .GetDict (_fadcc .Get (_gadb .PdfObjectName (extName )));if !_ggbab {_eggdd =_gadb .MakeDict ();_fadcc .Set (_gadb .PdfObjectName (extName ),_eggdd );};if _fgfef ,_ :=_gadb .GetNameVal (_eggdd .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_fgfef !=baseVersion {_eggdd .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_gadb .MakeName (baseVersion ));};if _gfdaff ,_ :=_gadb .GetIntVal (_eggdd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_gfdaff !=extLevel {_eggdd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_gadb .MakeInteger (int64 (extLevel )));};};func (_afedc *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _afedc ._bbgfe };
func (_cagc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gge *PdfAnnotationWidget )Field ()*PdfField {return _gge ._bag };

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_fccfg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_gadb .StreamEncoder ,error ){_agadb ,_dbdcg :=_fccfg ._cdaag .(*_gadb .PdfObjectStream );if !_dbdcg {_cg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fccfg ._cdaag );
return nil ,nil ,_gadb .ErrTypeError ;};_eacge ,_dfdcb :=_gadb .DecodeStream (_agadb );if _dfdcb !=nil {_cg .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dfdcb );
return nil ,nil ,_dfdcb ;};_efccf ,_dfdcb :=_gadb .NewEncoderFromStream (_agadb );if _dfdcb !=nil {_cg .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dfdcb );
return nil ,nil ,_dfdcb ;};return _eacge ,_efccf ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_gaag *PdfReader )GetOutlines ()(*Outline ,error ){if _gaag ==nil {return nil ,_bb .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_edag :=_gaag .GetOutlineTree ();if _edag ==nil {return nil ,_bb .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _dbgbc func (_bggcc *PdfOutlineTreeNode ,_dcgdd *[]*OutlineItem );_dbgbc =func (_gdgfad *PdfOutlineTreeNode ,_dfgead *[]*OutlineItem ){if _gdgfad ==nil {return ;};if _gdgfad ._bedfc ==nil {_cg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _ddabb *OutlineItem ;if _fabe ,_ffgfb :=_gdgfad ._bedfc .(*PdfOutlineItem );_ffgfb {_fdddg :=_fabe .Dest ;if (_fdddg ==nil ||_gadb .IsNullObject (_fdddg ))&&_fabe .A !=nil {if _ddcf ,_ffgc :=_gadb .GetDict (_fabe .A );_ffgc {if _eefda ,_ggdbf :=_gadb .GetArray (_ddcf .Get ("\u0044"));
_ggdbf {_fdddg =_eefda ;}else {_faaag ,_acffc :=_gadb .GetString (_ddcf .Get ("\u0044"));if !_acffc {return ;};_gggef ,_acffc :=_gaag ._gbef .Get ("\u004e\u0061\u006de\u0073").(*_gadb .PdfObjectReference );if !_acffc {return ;};_aafbb ,_eebe :=_gaag ._becf .LookupByReference (*_gggef );
if _eebe !=nil {_cg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_eebe .Error ());
return ;};_ebefd ,_acffc :=_aafbb .(*_gadb .PdfIndirectObject );if !_acffc {return ;};_dfcdee :=map[_gadb .PdfObject ]struct{}{};_eebe =_gaag .buildNameNodes (_ebefd ,_dfcdee );if _eebe !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_eebe .Error ());
return ;};for _egaaf :=range _dfcdee {_fadcf ,_cbgfc :=_gadb .GetDict (_egaaf );if !_cbgfc {continue ;};_ddabbe ,_cbgfc :=_gadb .GetArray (_fadcf .Get ("\u004e\u0061\u006de\u0073"));if !_cbgfc {continue ;};for _fbfb ,_dbffc :=range _ddabbe .Elements (){switch _dbffc .(type ){case *_gadb .PdfObjectString :if _dbffc .String ()==_faaag .String (){if _fbdae :=_ddabbe .Get (_fbfb +1);
_fbdae !=nil {if _ebcda ,_fgded :=_gadb .GetDict (_fbdae );_fgded {_fdddg =_ebcda .Get ("\u0044");break ;};};};};};};};};};var _affge OutlineDest ;if _fdddg !=nil &&!_gadb .IsNullObject (_fdddg ){if _eggbb ,_fcacg :=_dfcb (_fdddg ,_gaag );_fcacg ==nil {_affge =*_eggbb ;
}else {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_fdddg ,_fcacg );
};};_ddabb =NewOutlineItem (_fabe .Title .Decoded (),_affge );*_dfgead =append (*_dfgead ,_ddabb );if _fabe .Next !=nil {_dbgbc (_fabe .Next ,_dfgead );};};if _gdgfad .First !=nil {if _ddabb !=nil {_dfgead =&_ddabb .Entries ;};_dbgbc (_gdgfad .First ,_dfgead );
};};_bgccf :=NewOutline ();_dbgbc (_edag ,&_bgccf .Entries );return _bgccf ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_gbfd :=NewPdfAnnotation ();_bdcf :=&PdfAnnotationRichMedia {};_bdcf .PdfAnnotation =_gbfd ;_gbfd .SetContext (_bdcf );return _bdcf ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_agbed *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _agbed ._becf .GetRevisionNumber ()==0{return nil ,_bb .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fffe ,_eefdg :=_agbed ._cfdad [_agbed ];_eefdg {return _fffe ,nil ;};_beecf ,_cefb :=_agbed ._becf .GetPreviousRevisionReadSeeker ();if _cefb !=nil {return nil ,_cefb ;};_fdfe ,_cefb :=_ceefe (_beecf ,_agbed ._ggdaa ,_agbed ._dcfee ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cefb !=nil {return nil ,_cefb ;};_agbed ._cabfa [_agbed ._becf .GetRevisionNumber ()-1]=_fdfe ;_agbed ._cfdad [_agbed ]=_fdfe ;_fdfe ._cfdad =_agbed ._cfdad ;return _fdfe ,nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject implements model.PdfModel interface.
func (_deec *PdfOutputIntent )ToPdfObject ()_gadb .PdfObject {if _deec ._bbbac ==nil {_deec ._bbbac =_gadb .MakeDict ();};_edbb :=_deec ._bbbac ;if _deec .Type !=""{_edbb .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName (_deec .Type ));};_edbb .Set ("\u0053",_gadb .MakeName (_deec .S .String ()));
if _deec .OutputCondition !=""{_edbb .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_gadb .MakeString (_deec .OutputCondition ));};_edbb .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_gadb .MakeString (_deec .OutputConditionIdentifier ));
_edbb .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_gadb .MakeString (_deec .RegistryName ));if _deec .Info !=""{_edbb .Set ("\u0049\u006e\u0066\u006f",_gadb .MakeString (_deec .Info ));};if len (_deec .DestOutputProfile )!=0{_eeceff ,_dgbg :=_gadb .MakeStream (_deec .DestOutputProfile ,_gadb .NewFlateEncoder ());
if _dgbg !=nil {_cg .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dgbg );
};_eeceff .PdfObjectDictionary .Set ("\u004e",_gadb .MakeInteger (int64 (_deec .ColorComponents )));_dcdga :=make ([]float64 ,_deec .ColorComponents *2);for _fdbd :=0;_fdbd < _deec .ColorComponents *2;_fdbd ++{_adegf :=0.0;if _fdbd %2!=0{_adegf =1.0;};
_dcdga [_fdbd ]=_adegf ;};_eeceff .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_gadb .MakeArrayFromFloats (_dcdga ));_edbb .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_eeceff );};return _edbb ;
};

// AddWatermarkImage adds a watermark to the page.
func (_fedb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_fddad ,_bfed :=_fedb .GetMediaBox ();if _bfed !=nil {return _bfed ;};_edcce :=_fddad .Urx -_fddad .Llx ;_dcbag :=_fddad .Ury -_fddad .Lly ;_cgagba :=float64 (*ximg .Width );
_cebde :=(_edcce -_cgagba )/2;if opt .FitToWidth {_cgagba =_edcce ;_cebde =0;};_fbabe :=_dcbag ;_edcab :=float64 (0);if opt .PreserveAspectRatio {_fbabe =_cgagba *float64 (*ximg .Height )/float64 (*ximg .Width );_edcab =(_dcbag -_fbabe )/2;};if _fedb .Resources ==nil {_fedb .Resources =NewPdfPageResources ();
};_ggef :=0;_efaaaa :=_gadb .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_ggef ));for _fedb .Resources .HasXObjectByName (_efaaaa ){_ggef ++;_efaaaa =_gadb .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_ggef ));};_bfed =_fedb .AddImageResource (_efaaaa ,ximg );
if _bfed !=nil {return _bfed ;};_ggef =0;_eggg :=_gadb .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_ggef ));for _fedb .HasExtGState (_eggg ){_ggef ++;_eggg =_gadb .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_ggef ));};_gbda :=_gadb .MakeDict ();
_gbda .Set ("\u0042\u004d",_gadb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gbda .Set ("\u0043\u0041",_gadb .MakeFloat (opt .Alpha ));_gbda .Set ("\u0063\u0061",_gadb .MakeFloat (opt .Alpha ));_bfed =_fedb .AddExtGState (_eggg ,_gbda );if _bfed !=nil {return _bfed ;
};_gacge :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_eggg ,_cgagba ,_fbabe ,_cebde ,_edcab ,_efaaaa );
_fedb .AddContentStreamByString (_gacge );return nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_gadb .PdfIndirectObject )*PdfOutlineItem {_gaabg :=PdfOutlineItem {};_gaabg ._bedfc =&_gaabg ;_gaabg .Title =_gadb .MakeString (title );_dega :=_gadb .MakeArray ();_dega .Append (page );_dega .Append (_gadb .MakeName ("\u0046\u0069\u0074"));
_gaabg .Dest =_dega ;return &_gaabg ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_cfef PdfFont )actualFont ()pdfFont {if _cfef ._ecfec ==nil {_cg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cfef );
};return _cfef ._ecfec ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_ag :=NewPdfAction ();_eeg :=&PdfActionJavaScript {};_eeg .PdfAction =_ag ;_ag .SetContext (_eeg );return _eeg ;};func _gbfdg (_bdab *PdfPage )map[_gadb .PdfObjectName ]_gadb .PdfObject {_cabd :=make (map[_gadb .PdfObjectName ]_gadb .PdfObject );
if _bdab .Resources ==nil {return _cabd ;};if _bdab .Resources .Font !=nil {if _gcede ,_aefg :=_gadb .GetDict (_bdab .Resources .Font );_aefg {for _ ,_bfef :=range _gcede .Keys (){_cabd [_bfef ]=_gcede .Get (_bfef );};};};if _bdab .Resources .ExtGState !=nil {if _ada ,_bfca :=_gadb .GetDict (_bdab .Resources .ExtGState );
_bfca {for _ ,_ecff :=range _ada .Keys (){_cabd [_ecff ]=_ada .Get (_ecff );};};};if _bdab .Resources .XObject !=nil {if _fgab ,_gbgd :=_gadb .GetDict (_bdab .Resources .XObject );_gbgd {for _ ,_ggg :=range _fgab .Keys (){_cabd [_ggg ]=_fgab .Get (_ggg );
};};};if _bdab .Resources .Pattern !=nil {if _dgcc ,_geaf :=_gadb .GetDict (_bdab .Resources .Pattern );_geaf {for _ ,_dbab :=range _dgcc .Keys (){_cabd [_dbab ]=_dgcc .Get (_dbab );};};};if _bdab .Resources .Shading !=nil {if _befg ,_fgad :=_gadb .GetDict (_bdab .Resources .Shading );
_fgad {for _ ,_ccgd :=range _befg .Keys (){_cabd [_ccgd ]=_befg .Get (_ccgd );};};};if _bdab .Resources .ProcSet !=nil {if _ebef ,_faga :=_gadb .GetDict (_bdab .Resources .ProcSet );_faga {for _ ,_eced :=range _ebef .Keys (){_cabd [_eced ]=_ebef .Get (_eced );
};};};if _bdab .Resources .Properties !=nil {if _aebf ,_bbgb :=_gadb .GetDict (_bdab .Resources .Properties );_bbgb {for _ ,_eebc :=range _aebf .Keys (){_cabd [_eebc ]=_aebf .Get (_eebc );};};};return _cabd ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_gbc :=&PdfAnnotation {};_gbc ._defb =_gadb .MakeIndirectObject (_gadb .MakeDict ());return _gbc ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dab :=NewPdfAnnotation ();_aeeb :=&PdfAnnotationScreen {};_aeeb .PdfAnnotation =_dab ;_dab .SetContext (_aeeb );return _aeeb ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_eabg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=_eabg .GetNumComponents (){return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cedea ,_adac :=_gadb .GetNumbersAsFloat (objects );
if _adac !=nil {return nil ,_adac ;};return _eabg .ColorFromFloats (_cedea );};

// Transform rectangle with the supplied matrix.
func (_acafa *PdfRectangle )Transform (transformMatrix _dbb .Matrix ){_acafa .Llx ,_acafa .Lly =transformMatrix .Transform (_acafa .Llx ,_acafa .Lly );_acafa .Urx ,_acafa .Ury =transformMatrix .Transform (_acafa .Urx ,_acafa .Ury );_acafa .Normalize ();
};func (_gbdefa *fontFile )loadFromSegments (_aeag ,_acbdg []byte )error {_cg .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_aeag ),len (_acbdg ));_ggfgg :=_gbdefa .parseASCIIPart (_aeag );
if _ggfgg !=nil {return _ggfgg ;};_cg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gbdefa );if len (_acbdg )==0{return nil ;};_cg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gbdefa );return nil ;
};func _ecfag ()string {_cccgd .Lock ();defer _cccgd .Unlock ();if len (_fbefg )> 0{return _fbefg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_cfcbc *PdfColorspaceICCBased )ToPdfObject ()_gadb .PdfObject {_cggbf :=&_gadb .PdfObjectArray {};_cggbf .Append (_gadb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gfgc *_gadb .PdfObjectStream ;if _cfcbc ._gaa !=nil {_gfgc =_cfcbc ._gaa ;
}else {_gfgc =&_gadb .PdfObjectStream {};};_cfgg :=_gadb .MakeDict ();_cfgg .Set ("\u004e",_gadb .MakeInteger (int64 (_cfcbc .N )));if _cfcbc .Alternate !=nil {_cfgg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_cfcbc .Alternate .ToPdfObject ());
};if _cfcbc .Metadata !=nil {_cfgg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cfcbc .Metadata );};if _cfcbc .Range !=nil {var _abca []_gadb .PdfObject ;for _ ,_eaac :=range _cfcbc .Range {_abca =append (_abca ,_gadb .MakeFloat (_eaac ));
};_cfgg .Set ("\u0052\u0061\u006eg\u0065",_gadb .MakeArray (_abca ...));};_cfgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gadb .MakeInteger (int64 (len (_cfcbc .Data ))));_gfgc .Stream =_cfcbc .Data ;_gfgc .PdfObjectDictionary =_cfgg ;_cggbf .Append (_gfgc );
if _cfcbc ._bgff !=nil {_cfcbc ._bgff .PdfObject =_cggbf ;return _cfcbc ._bgff ;};return _cggbf ;};func (_egeee *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_dcefe *PdfPage )Size ()(float64 ,float64 ,error ){_aabdg ,_fgeaf :=_dcefe .GetMediaBox ();if _fgeaf !=nil {return 0,0,_fgeaf ;};_ggfeg ,_gbfbg :=_aabdg .Width (),_aabdg .Height ();_cdgca ,_fgeaf :=_dcefe .GetRotate ();if _fgeaf !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_fgeaf .Error ());
};if _dbag :=_cdgca ;_dbag %360!=0&&_dbag %90==0{if _afgf :=(360+_dbag %360)%360;_afgf ==90||_afgf ==270{_ggfeg ,_gbfbg =_gbfbg ,_ggfeg ;};};return _ggfeg ,_gbfbg ,nil ;};func (_geeb *PdfReader )newPdfActionGotoEFromDict (_fdeb *_gadb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gfg ,_ebd :=_acb (_fdeb .Get ("\u0046"));
if _ebd !=nil {return nil ,_ebd ;};return &PdfActionGoToE {D :_fdeb .Get ("\u0044"),NewWindow :_fdeb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_fdeb .Get ("\u0054"),F :_gfg },nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_dcfcg *_gadb .PdfIndirectObject ;};func _bdce (_fedfe string )map[string ]string {_ceaef :=_gdca .Split (_fedfe ,-1);_bgcbb :=map[string ]string {};
for _ ,_ddggg :=range _ceaef {_dbce :=_dcdeac .FindStringSubmatch (_ddggg );if _dbce ==nil {continue ;};_fdbe ,_fdde :=_dbce [1],_dbce [2];_bgcbb [_fdbe ]=_fdde ;};return _bgcbb ;};func _edde (_bdcbe _gadb .PdfObject )(*PdfColorspaceCalGray ,error ){_cagb :=NewPdfColorspaceCalGray ();
if _dgfgg ,_cggf :=_bdcbe .(*_gadb .PdfIndirectObject );_cggf {_cagb ._gdag =_dgfgg ;};_bdcbe =_gadb .TraceToDirectObject (_bdcbe );_dbcg ,_ebfc :=_bdcbe .(*_gadb .PdfObjectArray );if !_ebfc {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dbcg .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_bdcbe =_gadb .TraceToDirectObject (_dbcg .Get (0));_fgfc ,_ebfc :=_bdcbe .(*_gadb .PdfObjectName );
if !_ebfc {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_fgfc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_bdcbe =_gadb .TraceToDirectObject (_dbcg .Get (1));_abcfc ,_ebfc :=_bdcbe .(*_gadb .PdfObjectDictionary );if !_ebfc {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_bdcbe =_abcfc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bdcbe =_gadb .TraceToDirectObject (_bdcbe );_ebbf ,_ebfc :=_bdcbe .(*_gadb .PdfObjectArray );if !_ebfc {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _ebbf .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bgac ,_fgae :=_ebbf .GetAsFloat64Slice ();
if _fgae !=nil {return nil ,_fgae ;};_cagb .WhitePoint =_bgac ;_bdcbe =_abcfc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bdcbe !=nil {_bdcbe =_gadb .TraceToDirectObject (_bdcbe );_cff ,_effc :=_bdcbe .(*_gadb .PdfObjectArray );
if !_effc {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cff .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_fgdg ,_dbaca :=_cff .GetAsFloat64Slice ();if _dbaca !=nil {return nil ,_dbaca ;};_cagb .BlackPoint =_fgdg ;};_bdcbe =_abcfc .Get ("\u0047\u0061\u006dm\u0061");if _bdcbe !=nil {_bdcbe =_gadb .TraceToDirectObject (_bdcbe );_gcbef ,_ddeff :=_gadb .GetNumberAsFloat (_bdcbe );
if _ddeff !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cagb .Gamma =_gcbef ;};return _cagb ,nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_ecfec pdfFont };

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_gcc .SimpleEncoder ,error ){_ddee ,_ddfd :=_fgfg (basefont );if _ddfd !=nil {return nil ,nil ,_ddfd ;};_bgeef ,_cgcc :=_ddee .Encoder ().(_gcc .SimpleEncoder );
if !_cgcc {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ddee .Encoder ());
};_badb :=make (map[rune ]_gcc .GlyphName );for _aeed :=range alphabet {if _ ,_gfaed :=_bgeef .RuneToCharcode (_aeed );!_gfaed {_ ,_caddd :=_ddee ._cegcd .Read (_aeed );if !_caddd {_cg .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_aeed ,_aeed );
continue ;};_abfd ,_caddd :=_gcc .RuneToGlyph (_aeed );if !_caddd {_cg .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_aeed ,_aeed );continue ;};if len (_badb )>=255{return nil ,nil ,_bb .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_badb [_aeed ]=_abfd ;};};var (_agbfg []_gcc .CharCode ;_ggaag []_gcc .CharCode ;);for _adce :=_gcc .CharCode (1);_adce <=0xff;_adce ++{_acaf ,_gafc :=_bgeef .CharcodeToRune (_adce );if !_gafc {_agbfg =append (_agbfg ,_adce );continue ;};if _ ,_gafc =alphabet [_acaf ];
!_gafc {_ggaag =append (_ggaag ,_adce );};};_bfaeg :=append (_agbfg ,_ggaag ...);if len (_bfaeg )< len (_badb ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_badb ),len (_bfaeg ));
};_ecgg :=make ([]rune ,0,len (_badb ));for _geed :=range _badb {_ecgg =append (_ecgg ,_geed );};_ge .Slice (_ecgg ,func (_dabff ,_eeefa int )bool {return _ecgg [_dabff ]< _ecgg [_eeefa ]});_ffbg :=make (map[_gcc .CharCode ]_gcc .GlyphName ,len (_ecgg ));
for _ ,_becd :=range _ecgg {_agdde :=_bfaeg [0];_bfaeg =_bfaeg [1:];_ffbg [_agdde ]=_badb [_becd ];};_bgeef =_gcc .ApplyDifferences (_bgeef ,_ffbg );_ddee .SetEncoder (_bgeef );return &PdfFont {_ecfec :&_ddee },_bgeef ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cbf :=NewPdfAction ();_ad :=&PdfActionURI {};_ad .PdfAction =_cbf ;_cbf .SetContext (_ad );return _ad ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cc .ReadSeeker )(*PdfFont ,error ){const _badc =_gcc .CharCode (32);const _bgegd =_gcc .CharCode (255);_agddec ,_aada :=_dg .ReadAll (r );if _aada !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aada );
return nil ,_aada ;};_gfed ,_aada :=_bf .TtfParse (_dbd .NewReader (_agddec ));if _aada !=nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_aada );
return nil ,_aada ;};_gcca :=&pdfFontSimple {_aefe :make (map[_gcc .CharCode ]float64 ),fontCommon :fontCommon {_dccge :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gcca ._ddffd =_gcc .NewWinAnsiEncoder ();_gcca ._bbecb =_gfed .PostScriptName ;
_gcca .FirstChar =_gadb .MakeInteger (int64 (_badc ));_gcca .LastChar =_gadb .MakeInteger (int64 (_bgegd ));_ecfa :=1000.0/float64 (_gfed .UnitsPerEm );if len (_gfed .Widths )<=0{return nil ,_bb .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_fcef :=_ecfa *float64 (_gfed .Widths [0]);_fcdg :=make ([]float64 ,0,_bgegd -_badc +1);for _gbff :=_badc ;_gbff <=_bgegd ;_gbff ++{_bgeddd ,_ggfad :=_gcca .Encoder ().CharcodeToRune (_gbff );if !_ggfad {_cg .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gbff );
_fcdg =append (_fcdg ,_fcef );continue ;};_ggacf ,_abdb :=_gfed .Chars [_bgeddd ];if !_abdb {_cg .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_fcdg =append (_fcdg ,_fcef );continue ;
};_faeg :=_ecfa *float64 (_gfed .Widths [_ggacf ]);_fcdg =append (_fcdg ,_faeg );};_gcca .Widths =_gadb .MakeIndirectObject (_gadb .MakeArrayFromFloats (_fcdg ));if len (_fcdg )< int (_bgegd -_badc +1){_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_fcdg ),255-32+1);
return nil ,_gadb .ErrRangeError ;};for _bddef :=_badc ;_bddef <=_bgegd ;_bddef ++{_gcca ._aefe [_bddef ]=_fcdg [_bddef -_badc ];};_gcca .Encoding =_gadb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_defa :=&PdfFontDescriptor {};
_defa .FontName =_gadb .MakeName (_gfed .PostScriptName );_defa .Ascent =_gadb .MakeFloat (_ecfa *float64 (_gfed .TypoAscender ));_defa .Descent =_gadb .MakeFloat (_ecfa *float64 (_gfed .TypoDescender ));_defa .CapHeight =_gadb .MakeFloat (_ecfa *float64 (_gfed .CapHeight ));
_defa .FontBBox =_gadb .MakeArrayFromFloats ([]float64 {_ecfa *float64 (_gfed .Xmin ),_ecfa *float64 (_gfed .Ymin ),_ecfa *float64 (_gfed .Xmax ),_ecfa *float64 (_gfed .Ymax )});_defa .ItalicAngle =_gadb .MakeFloat (_gfed .ItalicAngle );_defa .MissingWidth =_gadb .MakeFloat (_ecfa *float64 (_gfed .Widths [0]));
_fabd ,_aada :=_gadb .MakeStream (_agddec ,_gadb .NewFlateEncoder ());if _aada !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aada );
return nil ,_aada ;};_fabd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gadb .MakeInteger (int64 (len (_agddec ))));_defa .FontFile2 =_fabd ;if _gfed .Bold {_defa .StemV =_gadb .MakeInteger (120);}else {_defa .StemV =_gadb .MakeInteger (70);
};_cfbfg :=_fede ;if _gfed .IsFixedPitch {_cfbfg |=_gbdef ;};if _gfed .ItalicAngle !=0{_cfbfg |=_gecee ;};_defa .Flags =_gadb .MakeInteger (int64 (_cfbfg ));_gcca ._bbgfe =_defa ;_gafcb :=&PdfFont {_ecfec :_gcca };return _gafcb ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gcdeg ,_fcdbg :=_fee .ParsePdfTime (dateStr );if _fcdbg !=nil {return PdfDate {},_fcdbg ;};return NewPdfDateFromTime (_gcdeg );};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cfgba *PdfShadingPattern )ToPdfObject ()_gadb .PdfObject {_cfgba .PdfPattern .ToPdfObject ();_fefc :=_cfgba .getDict ();if _cfgba .Shading !=nil {_fefc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cfgba .Shading .ToPdfObject ());};if _cfgba .Matrix !=nil {_fefc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cfgba .Matrix );
};if _cfgba .ExtGState !=nil {_fefc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cfgba .ExtGState );};return _cfgba ._cdaag ;};func (_ggbcd *XObjectImage )getParamsDict ()*_gadb .PdfObjectDictionary {_faafe :=_gadb .MakeDict ();_faafe .Set ("\u0057\u0069\u0064t\u0068",_gadb .MakeInteger (*_ggbcd .Width ));
_faafe .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gadb .MakeInteger (*_ggbcd .Height ));_faafe .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gadb .MakeInteger (int64 (_ggbcd .ColorSpace .GetNumComponents ())));
_faafe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gadb .MakeInteger (*_ggbcd .BitsPerComponent ));return _faafe ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bbfb ,_fbac :=NewStandard14Font (basefont );if _fbac !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bbfb ;};

// ToPdfObject implements interface PdfModel.
func (_ecg *PdfAnnotationUnderline )ToPdfObject ()_gadb .PdfObject {_ecg .PdfAnnotation .ToPdfObject ();_gcgb :=_ecg ._defb ;_cbbg :=_gcgb .PdfObject .(*_gadb .PdfObjectDictionary );_ecg .PdfAnnotationMarkup .appendToPdfDictionary (_cbbg );_cbbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_cbbg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ecg .QuadPoints );return _gcgb ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_bdd :=NewPdfAction ();_ee :=&PdfActionMovie {};_ee .PdfAction =_bdd ;_bdd .SetContext (_ee );return _ee ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _gadb .PdfObject ;MK _gadb .PdfObject ;A _gadb .PdfObject ;AA _gadb .PdfObject ;};func (_abac *DSS )generateHashMap (_aafca []*_gadb .PdfObjectStream )(map[string ]*_gadb .PdfObjectStream ,error ){_bfcg :=map[string ]*_gadb .PdfObjectStream {};
for _ ,_cfdfg :=range _aafca {_baacc ,_cabca :=_gadb .DecodeStream (_cfdfg );if _cabca !=nil {return nil ,_cabca ;};_bccdb ,_cabca :=_agfbd (_baacc );if _cabca !=nil {return nil ,_cabca ;};_bfcg [string (_bccdb )]=_cfdfg ;};return _bfcg ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_agb :=NewPdfAnnotation ();_bagc :=&PdfAnnotationSquare {};_bagc .PdfAnnotation =_agb ;_bagc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agb .SetContext (_bagc );return _bagc ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_bda :=NewPdfAnnotation ();_agaa :=&PdfAnnotationFileAttachment {};_agaa .PdfAnnotation =_bda ;_agaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bda .SetContext (_agaa );return _agaa ;
};func (_ebacb *PdfReader )newPdfAnnotationUnderlineFromDict (_ccfa *_gadb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_gcfa :=PdfAnnotationUnderline {};_bcfdb ,_adfc :=_ebacb .newPdfAnnotationMarkupFromDict (_ccfa );if _adfc !=nil {return nil ,_adfc ;
};_gcfa .PdfAnnotationMarkup =_bcfdb ;_gcfa .QuadPoints =_ccfa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gcfa ,nil ;};func _fced (_dcae *_gadb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_fgabce :=&PdfFieldChoice {};
_fgabce .Opt ,_ =_gadb .GetArray (_dcae .Get ("\u004f\u0070\u0074"));_fgabce .TI ,_ =_gadb .GetInt (_dcae .Get ("\u0054\u0049"));_fgabce .I ,_ =_gadb .GetArray (_dcae .Get ("\u0049"));return _fgabce ,nil ;};var ErrColorOutOfRange =_bb .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_dgebd *PdfFieldButton )GetType ()ButtonType {_cgbc :=ButtonTypeCheckbox ;if _dgebd .Ff !=nil {if (uint32 (*_dgebd .Ff )&FieldFlagPushbutton .Mask ())> 0{_cgbc =ButtonTypePush ;}else if (uint32 (*_dgebd .Ff )&FieldFlagRadio .Mask ())> 0{_cgbc =ButtonTypeRadio ;
};};return _cgbc ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dcab *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _beaeb (_effbb *_gadb .PdfObjectDictionary ){_cffc ,_agdc :=_gadb .GetArray (_effbb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_ccff ,_agaag :=_gadb .GetIntVal (_effbb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_ccfe ,_fagfd :=_gadb .GetIntVal (_effbb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _agdc &&_agaag &&_fagfd {_abcd :=_cffc .Len ();if _abcd !=_ccfe -_ccff +1{_cg .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_abcd ,_ccfe );
_cddac :=_gadb .PdfObjectInteger (_ccff +_abcd -1);_effbb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_cddac );};};};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_eeba *PdfField )GetContext ()PdfModel {return _eeba ._gdbeg };func (_fccf *PdfFilespec )getDict ()*_gadb .PdfObjectDictionary {if _ccgg ,_dcfed :=_fccf ._ccad .(*_gadb .PdfIndirectObject );_dcfed {_dbgdg ,_ggegg :=_ccgg .PdfObject .(*_gadb .PdfObjectDictionary );
if !_ggegg {return nil ;};return _dbgdg ;}else if _effaf ,_bfdf :=_fccf ._ccad .(*_gadb .PdfObjectDictionary );_bfdf {return _effaf ;}else {_cg .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fccf ._ccad );
return nil ;};};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_fbfaf *_gadb .PdfIndirectObject ;};func (_gcfe *PdfAppender )replaceObject (_bgfbd ,_daee _gadb .PdfObject ){switch _edgc :=_bgfbd .(type ){case *_gadb .PdfIndirectObject :_gcfe ._gag [_daee ]=_edgc .ObjectNumber ;
case *_gadb .PdfObjectStream :_gcfe ._gag [_daee ]=_edgc .ObjectNumber ;};};

// ToPdfObject implements interface PdfModel.
func (_gfbf *PdfFilespec )ToPdfObject ()_gadb .PdfObject {_cdfa :=_gfbf .getDict ();_cdfa .Clear ();_cdfa .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cdfa .SetIfNotNil ("\u0046\u0053",_gfbf .FS );
_cdfa .SetIfNotNil ("\u0046",_gfbf .F );_cdfa .SetIfNotNil ("\u0055\u0046",_gfbf .UF );_cdfa .SetIfNotNil ("\u0044\u004f\u0053",_gfbf .DOS );_cdfa .SetIfNotNil ("\u004d\u0061\u0063",_gfbf .Mac );_cdfa .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gfbf .Unix );
_cdfa .SetIfNotNil ("\u0049\u0044",_gfbf .ID );_cdfa .SetIfNotNil ("\u0056",_gfbf .V );_cdfa .SetIfNotNil ("\u0045\u0046",_gfbf .EF );_cdfa .SetIfNotNil ("\u0052\u0046",_gfbf .RF );_cdfa .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gfbf .Desc );_cdfa .SetIfNotNil ("\u0043\u0049",_gfbf .CI );
return _gfbf ._ccad ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_ccbeb *PdfPattern )GetContext ()PdfModel {return _ccbeb ._afbdb };

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gbbd :=PdfColorCalGray (grayVal );return &_gbbd ;};

// ToGoTime returns the date in time.Time format.
func (_eacbg PdfDate )ToGoTime ()_f .Time {_bfffgf :=int (_eacbg ._bfebf *60*60+_eacbg ._fbgec *60);switch _eacbg ._beeae {case '-':_bfffgf =-_bfffgf ;case 'Z':_bfffgf =0;};_bfadd :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_eacbg ._beeae ,_eacbg ._bfebf ,_eacbg ._fbgec );
_fggeg :=_f .FixedZone (_bfadd ,_bfffgf );return _f .Date (int (_eacbg ._cgecg ),_f .Month (_eacbg ._ecffb ),int (_eacbg ._eadaf ),int (_eacbg ._ceecg ),int (_eacbg ._bafca ),int (_eacbg ._ggdfd ),0,_fggeg );};

// SetPatternByName sets a pattern resource specified by keyName.
func (_bfbba *PdfPageResources )SetPatternByName (keyName _gadb .PdfObjectName ,pattern _gadb .PdfObject )error {if _bfbba .Pattern ==nil {_bfbba .Pattern =_gadb .MakeDict ();};_gdbae ,_ccfdg :=_gadb .GetDict (_bfbba .Pattern );if !_ccfdg {return _gadb .ErrTypeError ;
};_gdbae .Set (keyName ,pattern );return nil ;};var _gdca =_ea .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");var _ pdfFont =(*pdfFontSimple )(nil );

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_fbaf :=NewPdfAnnotation ();_eabd :=&PdfAnnotationPopup {};_eabd .PdfAnnotation =_fbaf ;_fbaf .SetContext (_eabd );return _eabd ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_bdbg *PdfReader )GetIndirectObjectByNumber (number int )(_gadb .PdfObject ,error ){_acgbc ,_gaddcb :=_bdbg ._becf .LookupByNumber (number );return _acgbc ,_gaddcb ;};

// Fill populates `form` with values provided by `provider`.
func (_daeda *PdfAcroForm )Fill (provider FieldValueProvider )error {return _daeda .fill (provider ,nil )};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bceb :=NewPdfAction ();_adc :=&PdfActionNamed {};_adc .PdfAction =_bceb ;_bceb .SetContext (_adc );return _adc ;};func _acb (_egg _gadb .PdfObject )(*PdfFilespec ,error ){if _egg ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_egg );
};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_aefec *PdfPageResources )SetXObjectImageByName (keyName _gadb .PdfObjectName ,ximg *XObjectImage )error {_gbdfb :=ximg .ToPdfObject ().(*_gadb .PdfObjectStream );_adegg :=_aefec .SetXObjectByName (keyName ,_gbdfb );return _adegg ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_cfaaa *PdfPageResources )SetFontByName (keyName _gadb .PdfObjectName ,obj _gadb .PdfObject )error {if _cfaaa .Font ==nil {_cfaaa .Font =_gadb .MakeDict ();};_feaaf ,_gefcg :=_gadb .TraceToDirectObject (_cfaaa .Font ).(*_gadb .PdfObjectDictionary );
if !_gefcg {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gadb .TraceToDirectObject (_cfaaa .Font ));
return _gadb .ErrTypeError ;};_feaaf .Set (keyName ,obj );return nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;var _ pdfFont =(*pdfFontType0 )(nil );

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_ccdef *_gadb .PdfObjectDictionary ;Type *_gadb .PdfObjectName ;TransformMethod *_gadb .PdfObjectName ;TransformParams _gadb .PdfObject ;Data _gadb .PdfObject ;DigestMethod *_gadb .PdfObjectName ;};func (_aaegb *PdfPage )setContainer (_ffafge *_gadb .PdfIndirectObject ){_ffafge .PdfObject =_aaegb ._dfbg ;
_aaegb ._fgbea =_ffafge ;};func _ddea (_beac _gadb .PdfObject )[]*_gadb .PdfObjectStream {if _beac ==nil {return nil ;};_bbbgf ,_ffcag :=_gadb .GetArray (_beac );if !_ffcag ||_bbbgf .Len ()==0{return nil ;};_gfdaf :=make ([]*_gadb .PdfObjectStream ,0,_bbbgf .Len ());
for _ ,_badcd :=range _bbbgf .Elements (){if _geag ,_afbdc :=_gadb .GetStream (_badcd );_afbdc {_gfdaf =append (_gfdaf ,_geag );};};return _gfdaf ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cc .ReadSeeker )(*PdfReader ,error ){const _cfdef ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _ceefe (rs ,&ReaderOpts {},false ,_cfdef );};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_daed _cc .ReadSeeker ;_cbgca *_gadb .PdfParser ;_fff *PdfReader ;Reader *PdfReader ;_dade []*PdfPage ;_bccaae *PdfAcroForm ;_ebaf *DSS ;_ccfg *Permissions ;_edd _gadb .XrefTable ;_aefab int64 ;_gced int ;_bbac []_gadb .PdfObject ;
_bge map[_gadb .PdfObject ]struct{};_gag map[_gadb .PdfObject ]int64 ;_dac map[_gadb .PdfObject ]struct{};_gbde map[_gadb .PdfObject ]struct{};_bfcb int64 ;_gfeb bool ;_dege string ;_abcf *EncryptOptions ;_dbccd *PdfInfo ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cdcdb *Image )ToGoImage ()(_ga .Image ,error ){_cg .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_ggba ,_acaba :=_cf .NewImage (int (_cdcdb .Width ),int (_cdcdb .Height ),int (_cdcdb .BitsPerComponent ),_cdcdb .ColorComponents ,_cdcdb .Data ,_cdcdb ._egfg ,_cdcdb ._bdge );
if _acaba !=nil {return nil ,_acaba ;};return _ggba ,nil ;};

// G returns the value of the green component of the color.
func (_bbeb *PdfColorDeviceRGB )G ()float64 {return _bbeb [1]};

// String returns a string representation of the field.
func (_fdfa *PdfField )String ()string {if _bgbd ,_cedg :=_fdfa .ToPdfObject ().(*_gadb .PdfIndirectObject );_cedg {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fdfa ._gdbeg ,_bgbd .PdfObject .String ());};return "";};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_cacb *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aecc :=vals [0];if _aecc < 0.0||_aecc > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aecc );
return nil ,ErrColorOutOfRange ;};_dfdfc :=vals [1];if _dfdfc < 0.0||_dfdfc > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dfdfc );return nil ,ErrColorOutOfRange ;
};_bfge :=vals [2];if _bfge < 0.0||_bfge > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfge );return nil ,ErrColorOutOfRange ;};_adbg :=NewPdfColorCalRGB (_aecc ,_dfdfc ,_bfge );
return _adbg ,nil ;};func (_cafg *LTV )validateSig (_fafda *PdfSignature )error {if _fafda ==nil ||_fafda .Contents ==nil ||len (_fafda .Contents .Bytes ())==0{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fafda );
};return nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gadb .PdfObject ;IC _gadb .PdfObject ;BE _gadb .PdfObject ;RD _gadb .PdfObject ;};

// AddOutlineTree adds outlines to a PDF file.
func (_ddgdf *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_ddgdf ._dcdeaa =outlineTree ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _gadb .PdfObjectName ;};func (_egeda *PdfReader )lookupPageByObject (_faefd _gadb .PdfObject )(*PdfPage ,error ){return nil ,_bb .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject returns the PDF representation of the function.
func (_bcfde *PdfFunctionType0 )ToPdfObject ()_gadb .PdfObject {if _bcfde ._adeab ==nil {_bcfde ._adeab =&_gadb .PdfObjectStream {};};_cddge :=_gadb .MakeDict ();_cddge .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gadb .MakeInteger (0));
_gcde :=&_gadb .PdfObjectArray {};for _ ,_cfgdb :=range _bcfde .Domain {_gcde .Append (_gadb .MakeFloat (_cfgdb ));};_cddge .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gcde );_efbdf :=&_gadb .PdfObjectArray {};for _ ,_gceea :=range _bcfde .Range {_efbdf .Append (_gadb .MakeFloat (_gceea ));
};_cddge .Set ("\u0052\u0061\u006eg\u0065",_efbdf );_gaeadc :=&_gadb .PdfObjectArray {};for _ ,_gdcd :=range _bcfde .Size {_gaeadc .Append (_gadb .MakeInteger (int64 (_gdcd )));};_cddge .Set ("\u0053\u0069\u007a\u0065",_gaeadc );_cddge .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_gadb .MakeInteger (int64 (_bcfde .BitsPerSample )));
if _bcfde .Order !=1{_cddge .Set ("\u004f\u0072\u0064e\u0072",_gadb .MakeInteger (int64 (_bcfde .Order )));};_cddge .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gadb .MakeInteger (int64 (len (_bcfde ._daebe ))));_bcfde ._adeab .Stream =_bcfde ._daebe ;
_bcfde ._adeab .PdfObjectDictionary =_cddge ;return _bcfde ._adeab ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _gadb .PdfObject ;BS _gadb .PdfObject ;LE _gadb .PdfObject ;IC _gadb .PdfObject ;LL _gadb .PdfObject ;LLE _gadb .PdfObject ;Cap _gadb .PdfObject ;IT _gadb .PdfObject ;LLO _gadb .PdfObject ;
CP _gadb .PdfObject ;Measure _gadb .PdfObject ;CO _gadb .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eacfc *PdfColorspaceSpecialSeparation )ToPdfObject ()_gadb .PdfObject {_afgd :=_gadb .MakeArray (_gadb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_afgd .Append (_eacfc .ColorantName );_afgd .Append (_eacfc .AlternateSpace .ToPdfObject ());
_afgd .Append (_eacfc .TintTransform .ToPdfObject ());if _eacfc ._ccce !=nil {_eacfc ._ccce .PdfObject =_afgd ;return _eacfc ._ccce ;};return _afgd ;};func (_cbgfd *PdfWriter )checkPendingObjects (){for _ebdgb ,_bggfb :=range _cbgfd ._ccbdg {if !_cbgfd .hasObject (_ebdgb ){_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_ebdgb ,_ebdgb ,_ebdgb );
for _ ,_cdfae :=range _bggfb {for _ ,_agbfe :=range _cdfae .Keys (){_gacfd :=_cdfae .Get (_agbfe );if _gacfd ==_ebdgb {_cg .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_cdfae .Set (_agbfe ,_gadb .MakeNull ());break ;};};};};};};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_fdec :=NewPdfAnnotation ();_cddcg :=&PdfAnnotationTrapNet {};_cddcg .PdfAnnotation =_fdec ;_fdec .SetContext (_cddcg );return _cddcg ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_gae :=NewPdfAction ();_cbfe :=&PdfActionRendition {};_cbfe .PdfAction =_gae ;_gae .SetContext (_cbfe );return _cbfe ;};

// String returns a string representation of what flags are set.
func (_bbgg FieldFlag )String ()string {_abfe :="";if _bbgg ==FieldFlagClear {_abfe ="\u0043\u006c\u0065a\u0072";return _abfe ;};if _bbgg &FieldFlagReadOnly > 0{_abfe +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bbgg &FieldFlagRequired > 0{_abfe +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _bbgg &FieldFlagNoExport > 0{_abfe +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bbgg &FieldFlagNoToggleToOff > 0{_abfe +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bbgg &FieldFlagRadio > 0{_abfe +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _bbgg &FieldFlagPushbutton > 0{_abfe +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bbgg &FieldFlagRadiosInUnision > 0{_abfe +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _bbgg &FieldFlagMultiline > 0{_abfe +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _bbgg &FieldFlagPassword > 0{_abfe +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bbgg &FieldFlagFileSelect > 0{_abfe +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _bbgg &FieldFlagDoNotScroll > 0{_abfe +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _bbgg &FieldFlagComb > 0{_abfe +="\u007c\u0043\u006fm\u0062";};if _bbgg &FieldFlagRichText > 0{_abfe +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _bbgg &FieldFlagDoNotSpellCheck > 0{_abfe +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _bbgg &FieldFlagCombo > 0{_abfe +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bbgg &FieldFlagEdit > 0{_abfe +="\u007c\u0045\u0064i\u0074";};if _bbgg &FieldFlagSort > 0{_abfe +="\u007c\u0053\u006fr\u0074";};if _bbgg &FieldFlagMultiSelect > 0{_abfe +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _bbgg &FieldFlagCommitOnSelChange > 0{_abfe +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _db .Trim (_abfe ,"\u007c");};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_aegg *PdfPage )ToPdfObject ()_gadb .PdfObject {_dgagf :=_aegg ._fgbea ;_aegg .GetPageDict ();return _dgagf ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cc .ReadSeeker )(*PdfFont ,error ){_edbdf ,_fbcd :=_dg .ReadAll (r );if _fbcd !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fbcd );
return nil ,_fbcd ;};_gddg ,_fbcd :=_bf .TtfParse (_dbd .NewReader (_edbdf ));if _fbcd !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_fbcd );
return nil ,_fbcd ;};_aeedg :=&pdfCIDFontType2 {fontCommon :fontCommon {_dccge :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_gadb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_gddg .Widths )<=0{return nil ,_bb .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gddf :=1000.0/float64 (_gddg .UnitsPerEm );_bcgca :=_gddf *float64 (_gddg .Widths [0]);_fccd :=make (map[rune ]int );_febb :=make (map[_bf .GID ]int );_ecage :=_bf .GID (len (_gddg .Widths ));for _ddcg ,_cfad :=range _gddg .Chars {if _cfad > _ecage -1{continue ;
};_dfdd :=int (_gddf *float64 (_gddg .Widths [_cfad ]));_fccd [_ddcg ]=_dfdd ;_febb [_cfad ]=_dfdd ;};_aeedg ._cgab =_fccd ;_aeedg .DW =_gadb .MakeInteger (int64 (_bcgca ));_ebff :=_bgdag (_febb ,uint16 (_ecage ));_aeedg .W =_gadb .MakeIndirectObject (_ebff );
_dcaec :=_gadb .MakeDict ();_dcaec .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_gadb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_dcaec .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_gadb .MakeString ("\u0041\u0064\u006fb\u0065"));
_dcaec .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_gadb .MakeInteger (0));_aeedg .CIDSystemInfo =_dcaec ;_aabbg :=&PdfFontDescriptor {FontName :_gadb .MakeName (_gddg .PostScriptName ),Ascent :_gadb .MakeFloat (_gddf *float64 (_gddg .TypoAscender )),Descent :_gadb .MakeFloat (_gddf *float64 (_gddg .TypoDescender )),CapHeight :_gadb .MakeFloat (_gddf *float64 (_gddg .CapHeight )),FontBBox :_gadb .MakeArrayFromFloats ([]float64 {_gddf *float64 (_gddg .Xmin ),_gddf *float64 (_gddg .Ymin ),_gddf *float64 (_gddg .Xmax ),_gddf *float64 (_gddg .Ymax )}),ItalicAngle :_gadb .MakeFloat (_gddg .ItalicAngle ),MissingWidth :_gadb .MakeFloat (_bcgca )};
_fcccg ,_fbcd :=_gadb .MakeStream (_edbdf ,_gadb .NewFlateEncoder ());if _fbcd !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fbcd );
return nil ,_fbcd ;};_fcccg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gadb .MakeInteger (int64 (len (_edbdf ))));_aabbg .FontFile2 =_fcccg ;if _gddg .Bold {_aabbg .StemV =_gadb .MakeInteger (120);}else {_aabbg .StemV =_gadb .MakeInteger (70);
};_cced :=_fgca ;if _gddg .IsFixedPitch {_cced |=_gbdef ;};if _gddg .ItalicAngle !=0{_cced |=_gecee ;};_aabbg .Flags =_gadb .MakeInteger (int64 (_cced ));_aeedg ._bbecb =_gddg .PostScriptName ;_aeedg ._bbgfe =_aabbg ;_eabdf :=pdfFontType0 {fontCommon :fontCommon {_dccge :"\u0054\u0079\u0070e\u0030",_bbecb :_gddg .PostScriptName },DescendantFont :&PdfFont {_ecfec :_aeedg },Encoding :_gadb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bagcbf :_gddg .NewEncoder ()};
if len (_gddg .Chars )> 0{_bbde :=make (map[_gde .CharCode ]rune ,len (_gddg .Chars ));for _ebgc ,_aedgg :=range _gddg .Chars {_gggb :=_gde .CharCode (_aedgg );if _geefg ,_fceg :=_bbde [_gggb ];!_fceg ||(_fceg &&_geefg > _ebgc ){_bbde [_gggb ]=_ebgc ;};
};_eabdf ._ddbg =_gde .NewToUnicodeCMap (_bbde );};_afbgf :=PdfFont {_ecfec :&_eabdf };return &_afbgf ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_egae *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gebdb :=map[rune ]int {};for _ ,_faggc :=range text {_gebdb [_faggc ]++;};return _gebdb ;};func _fcccf ()string {_cccgd .Lock ();defer _cccgd .Unlock ();_dffcc :=_ef .GetLicenseKey ();if len (_defee )> 0&&(_dffcc .IsLicensed ()||_bgegc ){return _defee ;
};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_fdfcb (),_dffcc .TypeToString ());};var (ErrRequiredAttributeMissing =_bb .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_bb .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cdga =_bb .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_bb .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_bb .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_gg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_gadb .ErrNotSupported );ErrType1CFontNotSupported =_gg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gadb .ErrNotSupported );
ErrType3FontNotSupported =_gg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_gadb .ErrNotSupported );
ErrTTCmapNotSupported =_gg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_gadb .ErrNotSupported );
ErrSignNotEnoughSpace =_gg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_gg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fbec *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fbec .GetNumComponents (){return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgbdf ,_cgceb :=_fbec .TintTransform .Evaluate (vals );
if _cgceb !=nil {return nil ,_cgceb ;};_ffafa ,_cgceb :=_fbec .AlternateSpace .ColorFromFloats (_fgbdf );if _cgceb !=nil {return nil ,_cgceb ;};return _ffafa ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cccgd .Lock ();defer _cccgd .Unlock ();_fbefg =creator };

// UpdatePage updates the `page` in the new revision if it has changed.
func (_beeb *PdfAppender )UpdatePage (page *PdfPage ){_beeb .updateObjectsDeep (page .ToPdfObject (),nil )};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_bfgea *PdfAcroForm ,_gece *PdfField ,_dead *PdfAnnotationWidget )(*_gadb .PdfObjectDictionary ,error );};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_aabbc DefaultImageHandler )NewImageFromGoImage (goimg _ga .Image )(*Image ,error ){_abaef ,_bdbb :=_cf .FromGoImage (goimg );if _bdbb !=nil {return nil ,_bdbb ;};_ggeab :=_fafdf (_abaef .Base ());return &_ggeab ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_dbfda *PdfWriter )SetForms (form *PdfAcroForm )error {_dbfda ._eaagb =form ;return nil };

// Encoder returns the font's text encoder.
func (_bebe *PdfFont )Encoder ()_gcc .TextEncoder {_cgee :=_bebe .actualFont ();if _cgee ==nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bebe ._ecfec );
return nil ;};return _cgee .Encoder ();};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_gbba :=&PdfColorPattern {};return _gbba };func _bfgae (_ggde *_gadb .PdfObjectDictionary )bool {for _ ,_eeegc :=range _ggde .Keys (){if _ ,_efgc :=_aafeb [_eeegc .String ()];_efgc {return true ;};};return false ;
};func (_fdfacf SignatureValidationResult )String ()string {var _dgbag _dbd .Buffer ;_dgbag .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_fdfacf .Name ));if _fdfacf .Date ._cgecg > 0{_dgbag .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_fdfacf .Date .ToGoTime ().String ()));
}else {_dgbag .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_fdfacf .Reason )> 0{_dgbag .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fdfacf .Reason ));
}else {_dgbag .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_fdfacf .Location )> 0{_dgbag .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fdfacf .Location ));
}else {_dgbag .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_fdfacf .ContactInfo )> 0{_dgbag .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_fdfacf .ContactInfo ));
}else {_dgbag .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_dgbag .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_fdfacf .Fields )));
if _fdfacf .IsSigned {_dgbag .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_dgbag .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _fdfacf .IsVerified {_dgbag .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_dgbag .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _fdfacf .IsTrusted {_dgbag .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_dgbag .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_fdfacf .GeneralizedTime .IsZero (){_dgbag .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_fdfacf .GeneralizedTime .String ()));};if _fdfacf .DiffResults !=nil {_dgbag .WriteString (_b .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_fdfacf .DiffResults .IsPermitted ()));
if len (_fdfacf .DiffResults .Warnings )> 0{_dgbag .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_cbfbf :=range _fdfacf .DiffResults .Warnings {_dgbag .WriteString (_b .Sprintf ("\u0009\u0025\u0073\u000a",_cbfbf ));
};};if len (_fdfacf .DiffResults .Errors )> 0{_dgbag .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_acegfe :=range _fdfacf .DiffResults .Errors {_dgbag .WriteString (_b .Sprintf ("\u0009\u0025\u0073\u000a",_acegfe ));
};};};return _dgbag .String ();};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_gfbg *PdfColorspaceICCBased )GetContainingPdfObject ()_gadb .PdfObject {return _gfbg ._gaa };func (_dfgd *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_adbgg *PdfFont )ToPdfObject ()_gadb .PdfObject {if _adbgg ._ecfec ==nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _gadb .MakeNull ();
};return _adbgg ._ecfec .ToPdfObject ();};func (_bcfd *PdfReader )newPdfAnnotationSquareFromDict (_dgg *_gadb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bbaaa :=PdfAnnotationSquare {};_dfb ,_gfgd :=_bcfd .newPdfAnnotationMarkupFromDict (_dgg );
if _gfgd !=nil {return nil ,_gfgd ;};_bbaaa .PdfAnnotationMarkup =_dfb ;_bbaaa .BS =_dgg .Get ("\u0042\u0053");_bbaaa .IC =_dgg .Get ("\u0049\u0043");_bbaaa .BE =_dgg .Get ("\u0042\u0045");_bbaaa .RD =_dgg .Get ("\u0052\u0044");return &_bbaaa ,nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_aae :=NewPdfAnnotation ();_acf :=&PdfAnnotation3D {};_acf .PdfAnnotation =_aae ;_aae .SetContext (_acf );return _acf ;};func (_dedd *PdfReader )newPdfFieldFromIndirectObject (_gbce *_gadb .PdfIndirectObject ,_eagd *PdfField )(*PdfField ,error ){if _eaeg ,_feac :=_dedd ._gaccc .GetModelFromPrimitive (_gbce ).(*PdfField );
_feac {return _eaeg ,nil ;};_eceb ,_eaefca :=_gadb .GetDict (_gbce );if !_eaefca {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dbdfe :=NewPdfField ();_dbdfe ._fbbf =_gbce ;_dbdfe ._fbbf .PdfObject =_eceb ;if _gabd ,_bcbe :=_gadb .GetName (_eceb .Get ("\u0046\u0054"));_bcbe {_dbdfe .FT =_gabd ;};if _eagd !=nil {_dbdfe .Parent =_eagd ;};_dbdfe .T ,_ =_eceb .Get ("\u0054").(*_gadb .PdfObjectString );
_dbdfe .TU ,_ =_eceb .Get ("\u0054\u0055").(*_gadb .PdfObjectString );_dbdfe .TM ,_ =_eceb .Get ("\u0054\u004d").(*_gadb .PdfObjectString );_dbdfe .Ff ,_ =_eceb .Get ("\u0046\u0066").(*_gadb .PdfObjectInteger );_dbdfe .V =_eceb .Get ("\u0056");_dbdfe .DV =_eceb .Get ("\u0044\u0056");
_dbdfe .AA =_eceb .Get ("\u0041\u0041");if DA :=_eceb .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_gadb .GetString (DA );_dbdfe .VariableText =&VariableText {DA :DA };Q ,_ :=_eceb .Get ("\u0051").(*_gadb .PdfObjectInteger );DS ,_ :=_eceb .Get ("\u0044\u0053").(*_gadb .PdfObjectString );
RV :=_eceb .Get ("\u0052\u0056");_dbdfe .VariableText .Q =Q ;_dbdfe .VariableText .DS =DS ;_dbdfe .VariableText .RV =RV ;};_acag :=_dbdfe .FT ;if _acag ==nil &&_eagd !=nil {_acag =_eagd .FT ;};if _acag !=nil {switch *_acag {case "\u0054\u0078":_gggff ,_agag :=_eacb (_eceb );
if _agag !=nil {return nil ,_agag ;};_gggff .PdfField =_dbdfe ;_dbdfe ._gdbeg =_gggff ;case "\u0043\u0068":_faaeg ,_caaaa :=_fced (_eceb );if _caaaa !=nil {return nil ,_caaaa ;};_faaeg .PdfField =_dbdfe ;_dbdfe ._gdbeg =_faaeg ;case "\u0042\u0074\u006e":_dgdc ,_dbaf :=_bfgc (_eceb );
if _dbaf !=nil {return nil ,_dbaf ;};_dgdc .PdfField =_dbdfe ;_dbdfe ._gdbeg =_dgdc ;case "\u0053\u0069\u0067":_aegf ,_ddae :=_dedd .newPdfFieldSignatureFromDict (_eceb );if _ddae !=nil {return nil ,_ddae ;};_aegf .PdfField =_dbdfe ;_dbdfe ._gdbeg =_aegf ;
default:_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dbdfe .FT );return nil ,_bb .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _cagg ,_bdde :=_gadb .GetName (_eceb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bdde {if *_cagg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_afge ,_befd :=_dedd .newPdfAnnotationFromIndirectObject (_gbce );if _befd !=nil {return nil ,_befd ;};
_bcgd ,_dceb :=_afge .GetContext ().(*PdfAnnotationWidget );if !_dceb {return nil ,_bb .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_bcgd ._bag =_dbdfe ;_bcgd .Parent =_dbdfe ._fbbf ;
_dbdfe .Annotations =append (_dbdfe .Annotations ,_bcgd );return _dbdfe ,nil ;};};_gbeed :=true ;if _gabdb ,_fbda :=_gadb .GetArray (_eceb .Get ("\u004b\u0069\u0064\u0073"));_fbda {_facbb :=make ([]*_gadb .PdfIndirectObject ,0,_gabdb .Len ());for _ ,_eedb :=range _gabdb .Elements (){_dbgga ,_gfcbg :=_gadb .GetIndirect (_eedb );
if !_gfcbg {_adcf ,_ffgb :=_gadb .GetStream (_eedb );if _ffgb &&_adcf .PdfObjectDictionary !=nil {_dbgd ,_deaag :=_gadb .GetNameVal (_adcf .Get ("\u0054\u0079\u0070\u0065"));if _deaag &&_dbgd =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_cg .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_bb .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_egdee ,_bggb :=_gadb .GetDict (_dbgga );
if !_bggb {return nil ,ErrTypeCheck ;};if _gbeed {_gbeed =!_bfgae (_egdee );};_facbb =append (_facbb ,_dbgga );};for _ ,_ffac :=range _facbb {if _gbeed {_gbbde ,_aefbg :=_dedd .newPdfAnnotationFromIndirectObject (_ffac );if _aefbg !=nil {_cg .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_aefbg );
return nil ,_aefbg ;};_aeca ,_cegaf :=_gbbde ._egeb .(*PdfAnnotationWidget );if !_cegaf {return nil ,ErrTypeCheck ;};_aeca ._bag =_dbdfe ;_dbdfe .Annotations =append (_dbdfe .Annotations ,_aeca );}else {_fcccc ,_efbdg :=_dedd .newPdfFieldFromIndirectObject (_ffac ,_dbdfe );
if _efbdg !=nil {_cg .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_efbdg );return nil ,_efbdg ;};_dbdfe .Kids =append (_dbdfe .Kids ,_fcccc );
};};};return _dbdfe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ege *PdfActionHide )ToPdfObject ()_gadb .PdfObject {_ege .PdfAction .ToPdfObject ();_afd :=_ege ._ec ;_ed :=_afd .PdfObject .(*_gadb .PdfObjectDictionary );_ed .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeHide )));_ed .SetIfNotNil ("\u0054",_ege .T );
_ed .SetIfNotNil ("\u0048",_ege .H );return _afd ;};func _dcfa (_ffda *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_fdgc ,_ecedg :=_gadb .GetDict (_ffda .AP );if !_ecedg {return nil ,nil ,_bb .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _fdgc ==nil {return nil ,nil ,nil ;};_fbbb ,_ecedg :=_gadb .GetArray (_ffda .Rect );if !_ecedg ||_fbbb .Len ()!=4{return nil ,nil ,_bb .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dbbgf ,_ffafab :=NewPdfRectangle (*_fbbb );
if _ffafab !=nil {return nil ,nil ,_ffafab ;};_bcbcd :=_gadb .TraceToDirectObject (_fdgc .Get ("\u004e"));switch _edgb :=_bcbcd .(type ){case *_gadb .PdfObjectStream :_degf :=_edgb ;_eeceb ,_gbab :=NewXObjectFormFromStream (_degf );return _eeceb ,_dbbgf ,_gbab ;
case *_gadb .PdfObjectDictionary :_fdca :=_edgb ;_dafg ,_caffb :=_gadb .GetName (_ffda .AS );if !_caffb {return nil ,nil ,nil ;};if _fdca .Get (*_dafg )==nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_badea ,_caffb :=_gadb .GetStream (_fdca .Get (*_dafg ));if !_caffb {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_dafg );
return nil ,nil ,_bb .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_eecf ,_bfgec :=NewXObjectFormFromStream (_badea );return _eecf ,_dbbgf ,_bfgec ;};_cg .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bcbcd );
return nil ,nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ggggg *PdfWriter )SetPageLabels (pageLabels _gadb .PdfObject )error {if pageLabels ==nil {return nil ;};_cg .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_ggggg ._gaeab .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _ggggg .addObjects (pageLabels );};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_gadb .PdfObjectStream )(*XObjectForm ,error ){_daacb :=&XObjectForm {};_daacb ._feadbe =stream ;_cfbff :=*(stream .PdfObjectDictionary );_gbdea ,_bacdg :=_gadb .NewEncoderFromStream (stream );if _bacdg !=nil {return nil ,_bacdg ;
};_daacb .Filter =_gbdea ;if _eggf :=_cfbff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_eggf !=nil {_gbceb ,_dbabec :=_eggf .(*_gadb .PdfObjectName );if !_dbabec {return nil ,_bb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_gbceb !="\u0046\u006f\u0072\u006d"{_cg .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_bb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _ecggc :=_cfbff .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ecggc !=nil {_daacb .FormType =_ecggc ;};if _fedfd :=_cfbff .Get ("\u0042\u0042\u006f\u0078");_fedfd !=nil {_daacb .BBox =_fedfd ;};if _baeba :=_cfbff .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_baeba !=nil {_daacb .Matrix =_baeba ;};if _ceadc :=_cfbff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ceadc !=nil {_ceadc =_gadb .TraceToDirectObject (_ceadc );_aadb ,_agfe :=_ceadc .(*_gadb .PdfObjectDictionary );if !_agfe {_cg .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gadb .ErrTypeError ;};_bgeaa ,_bgcdf :=NewPdfPageResourcesFromDict (_aadb );if _bgcdf !=nil {_cg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_bgcdf ;};_daacb .Resources =_bgeaa ;_cg .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_daacb .Resources );};_daacb .Group =_cfbff .Get ("\u0047\u0072\u006fu\u0070");
_daacb .Ref =_cfbff .Get ("\u0052\u0065\u0066");_daacb .MetaData =_cfbff .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_daacb .PieceInfo =_cfbff .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_daacb .LastModified =_cfbff .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_daacb .StructParent =_cfbff .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_daacb .StructParents =_cfbff .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_daacb .OPI =_cfbff .Get ("\u004f\u0050\u0049");
_daacb .OC =_cfbff .Get ("\u004f\u0043");_daacb .Name =_cfbff .Get ("\u004e\u0061\u006d\u0065");_daacb .Stream =stream .Stream ;return _daacb ,nil ;};func (_bece *DSS )addOCSPs (_adda [][]byte )([]*_gadb .PdfObjectStream ,error ){return _bece .add (&_bece .OCSPs ,_bece ._abee ,_adda );
};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_ecbac *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_gebfa :=_ecbac .fill (provider ,appGen );if _gebfa !=nil {return _gebfa ;};if _ ,_bcead :=provider .(FieldImageProvider );_bcead {_gebfa =_ecbac .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _gebfa ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ceaca *Image )ToJBIG2Image ()(*_gadb .JBIG2Image ,error ){_ecfaa ,_geebe :=_ceaca .ToGoImage ();if _geebe !=nil {return nil ,_geebe ;};return _gadb .GoImageToJBIG2 (_ecfaa ,_gadb .JB2ImageAutoThreshold );};

// Items returns all children outline items.
func (_gdcab *Outline )Items ()[]*OutlineItem {return _gdcab .Entries };

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _gadb .StreamEncoder ;Intent _gadb .PdfObject ;ImageMask _gadb .PdfObject ;Mask _gadb .PdfObject ;Matte _gadb .PdfObject ;Decode _gadb .PdfObject ;Interpolate _gadb .PdfObject ;
Alternatives _gadb .PdfObject ;SMask _gadb .PdfObject ;SMaskInData _gadb .PdfObject ;Name _gadb .PdfObject ;StructParent _gadb .PdfObject ;ID _gadb .PdfObject ;OPI _gadb .PdfObject ;Metadata _gadb .PdfObject ;OC _gadb .PdfObject ;Stream []byte ;_bgccg *_gadb .PdfObjectStream ;
};func (_fba *PdfReader )newPdfActionSoundFromDict (_aaf *_gadb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_aaf .Get ("\u0053\u006f\u0075n\u0064"),Volume :_aaf .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_aaf .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_aaf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_aaf .Get ("\u004d\u0069\u0078")},nil ;
};func (_fcgfb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_fcgfb .fontCommon };func _eabbf ()string {_cccgd .Lock ();defer _cccgd .Unlock ();return _cabgc };func (_bdba *PdfReader )newPdfActionURIFromDict (_fea *_gadb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fea .Get ("\u0055\u0052\u0049"),IsMap :_fea .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_cfcba *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgaf ,_cgad :=_gadb .GetNumbersAsFloat (objects );
if _cgad !=nil {return nil ,_cgad ;};return _cfcba .ColorFromFloats (_bgaf );};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_afdaf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_gfebd :=&PdfShadingType3 {};_gfebd .PdfShading =&PdfShading {};_gfebd .PdfShading ._gfbgb =_gadb .MakeIndirectObject (_gadb .MakeDict ());_gfebd .PdfShading ._aaaaa =_gfebd ;return _gfebd ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_acba *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _abcae []_gcc .TextEncoder ;var _fcbag _gcc .CMapEncoder ;if _bbeaa :=_acba .baseFields ()._ddbg ;_bbeaa !=nil {_fcbag =_gcc .NewCMapEncoder ("",nil ,_bbeaa );};_baaeb :=_acba .Encoder ();
if _baaeb !=nil {switch _aafbg :=_baaeb .(type ){case _gcc .SimpleEncoder :_aaacd :=_aafbg .BaseName ();if _ ,_fbab :=_gffa [_aaacd ];_fbab {_abcae =append (_abcae ,_baaeb );};};};if len (_abcae )==0{if _acba .baseFields ()._ddbg !=nil {_abcae =append (_abcae ,_fcbag );
};if _baaeb !=nil {_abcae =append (_abcae ,_baaeb );};};var _bgcb _dbd .Buffer ;var _bfaab int ;for _ ,_fgba :=range data {var _bfde bool ;for _ ,_cbec :=range _abcae {if _ccag :=_cbec .Encode (string (_fgba ));len (_ccag )> 0{_bgcb .Write (_ccag );_bfde =true ;
break ;};};if !_bfde {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_fgba );
_bfaab ++;};};if _bfaab !=0{_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_bfaab ,_acba ,_abcae );
};return _bgcb .Bytes (),_bfaab ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_ebce *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_ebce .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_ebce ._bccaae =acroForm ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;
);

// SetAnnotations sets the annotations list.
func (_degec *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_degec ._ecca =annotations };

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _gadb .PdfObject ;Popup *PdfAnnotationPopup ;CA _gadb .PdfObject ;RC _gadb .PdfObject ;CreationDate _gadb .PdfObject ;IRT _gadb .PdfObject ;Subj _gadb .PdfObject ;RT _gadb .PdfObject ;IT _gadb .PdfObject ;ExData _gadb .PdfObject ;
};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_aabfg *PdfReader )newPdfAnnotationTrapNetFromDict (_gebd *_gadb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_aefc :=PdfAnnotationTrapNet {};return &_aefc ,nil ;};func _adbed (_decac *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_decac }};


// Initialize initializes the PdfSignature.
func (_gbdc *PdfSignature )Initialize ()error {if _gbdc .Handler ==nil {return _bb .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gbdc .Handler .InitSignature (_gbdc );};func (_gadbd *PdfWriter )mapObjectStreams (_aebeg bool )(map[_gadb .PdfObject ]bool ,bool ){_agdbb :=make (map[_gadb .PdfObject ]bool );for _ ,_bcde :=range _gadbd ._agefec {if _abbbe ,_deeb :=_bcde .(*_gadb .PdfObjectStreams );
_deeb {_aebeg =true ;for _ ,_bagcdc :=range _abbbe .Elements (){_agdbb [_bagcdc ]=true ;if _fadddg ,_egeea :=_bagcdc .(*_gadb .PdfIndirectObject );_egeea {_agdbb [_fadddg .PdfObject ]=true ;};};};};return _agdbb ,_aebeg ;};func _fgbc (_abag *_gadb .PdfIndirectObject ,_ffbd *_gadb .PdfObjectDictionary )(*DSS ,error ){if _abag ==nil {_abag =_gadb .MakeIndirectObject (nil );
};_abag .PdfObject =_gadb .MakeDict ();_eggc :=map[string ]*VRI {};if _fgea ,_fbga :=_gadb .GetDict (_ffbd .Get ("\u0056\u0052\u0049"));_fbga {for _ ,_fafd :=range _fgea .Keys (){if _deac ,_ddedf :=_gadb .GetDict (_fgea .Get (_fafd ));_ddedf {_eggc [_db .ToUpper (_fafd .String ())]=_ccdgf (_deac );
};};};return &DSS {Certs :_ddea (_ffbd .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_ddea (_ffbd .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_ddea (_ffbd .Get ("\u0043\u0052\u004c\u0073")),VRI :_eggc ,_acae :_abag },nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_fbc :=NewPdfAnnotation ();_ebac :=&PdfAnnotationText {};_ebac .PdfAnnotation =_fbc ;_ebac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbc .SetContext (_ebac );return _ebac ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_daaf *PdfPage )GetContentStreamObjs ()[]_gadb .PdfObject {if _daaf .Contents ==nil {return nil ;};_gaged :=_gadb .TraceToDirectObject (_daaf .Contents );if _edfe ,_geaa :=_gaged .(*_gadb .PdfObjectArray );_geaa {return _edfe .Elements ();};return []_gadb .PdfObject {_gaged };
};

// GetStandardApplier gets currently used StandardApplier..
func (_ddcbd *PdfWriter )GetStandardApplier ()StandardApplier {return _ddcbd ._edcdc };func (_efe *PdfReader )newPdfAnnotationHighlightFromDict (_aebg *_gadb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_cggg :=PdfAnnotationHighlight {};_gdbee ,_ece :=_efe .newPdfAnnotationMarkupFromDict (_aebg );
if _ece !=nil {return nil ,_ece ;};_cggg .PdfAnnotationMarkup =_gdbee ;_cggg .QuadPoints =_aebg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cggg ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_gadb .PdfIndirectObject ;SV *_gadb .PdfIndirectObject ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_gafcf *_gadb .PdfObjectDictionary ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_aadgb :=&PdfColorspaceLab {};_aadgb .BlackPoint =[]float64 {0.0,0.0,0.0};_aadgb .Range =[]float64 {-100,100,-100,100};return _aadgb ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gadb .PdfObject ;LE _gadb .PdfObject ;BS _gadb .PdfObject ;IC _gadb .PdfObject ;BE _gadb .PdfObject ;IT _gadb .PdfObject ;Measure _gadb .PdfObject ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_cabc *PdfColorspaceCalGray )ToPdfObject ()_gadb .PdfObject {_afda :=&_gadb .PdfObjectArray {};_afda .Append (_gadb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_bdbag :=_gadb .MakeDict ();if _cabc .WhitePoint !=nil {_bdbag .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gadb .MakeArray (_gadb .MakeFloat (_cabc .WhitePoint [0]),_gadb .MakeFloat (_cabc .WhitePoint [1]),_gadb .MakeFloat (_cabc .WhitePoint [2])));
}else {_cg .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _cabc .BlackPoint !=nil {_bdbag .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gadb .MakeArray (_gadb .MakeFloat (_cabc .BlackPoint [0]),_gadb .MakeFloat (_cabc .BlackPoint [1]),_gadb .MakeFloat (_cabc .BlackPoint [2])));
};_bdbag .Set ("\u0047\u0061\u006dm\u0061",_gadb .MakeFloat (_cabc .Gamma ));_afda .Append (_bdbag );if _cabc ._gdag !=nil {_cabc ._gdag .PdfObject =_afda ;return _cabc ._gdag ;};return _afda ;};func _fdba (_dgdde _gadb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_cg .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dgdde .String (),_dgdde );
_afce :=NewPdfColorspaceSpecialPattern ();if _cfbde ,_abce :=_dgdde .(*_gadb .PdfIndirectObject );_abce {_afce ._gafdc =_cfbde ;};_dgdde =_gadb .TraceToDirectObject (_dgdde );if _acfa ,_aafcc :=_dgdde .(*_gadb .PdfObjectName );_aafcc {if *_acfa !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _afce ,nil ;};_cbeff ,_cdca :=_dgdde .(*_gadb .PdfObjectArray );if !_cdca {_cg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dgdde );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _cbeff .Len ()!=1&&_cbeff .Len ()!=2{_cg .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_cbeff );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dgdde =_cbeff .Get (0);if _bdbc ,_eedg :=_dgdde .(*_gadb .PdfObjectName );_eedg {if *_bdbc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_cg .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bdbc );
return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _cbeff .Len ()> 1{_dgdde =_cbeff .Get (1);_dgdde =_gadb .TraceToDirectObject (_dgdde );_agee ,_gfac :=NewPdfColorspaceFromPdfObject (_dgdde );if _gfac !=nil {return nil ,_gfac ;
};_afce .UnderlyingCS =_agee ;};_cg .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_afce .UnderlyingCS );
return _afce ,nil ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _gadb .PdfObject )(*PdfInfo ,error ){var _adbf PdfInfo ;_fdfc ,_acdg :=obj .(*_gadb .PdfObjectDictionary );if !_acdg {return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_bfeb :=range _fdfc .Keys (){switch _bfeb {case "\u0054\u0069\u0074l\u0065":_adbf .Title ,_ =_gadb .GetString (_fdfc .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_adbf .Author ,_ =_gadb .GetString (_fdfc .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_adbf .Subject ,_ =_gadb .GetString (_fdfc .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_adbf .Keywords ,_ =_gadb .GetString (_fdfc .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_adbf .Creator ,_ =_gadb .GetString (_fdfc .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_adbf .Producer ,_ =_gadb .GetString (_fdfc .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_adbf .Trapped ,_ =_gadb .GetName (_fdfc .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _bdecg ,_deba :=_gadb .GetString (_fdfc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_deba &&_bdecg .String ()!=""{_ggee ,_fbecg :=NewPdfDate (_bdecg .String ());if _fbecg !=nil {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_fbecg );
};_adbf .CreationDate =&_ggee ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _cbdge ,_dgaa :=_gadb .GetString (_fdfc .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_dgaa &&_cbdge .String ()!=""{_agad ,_abbg :=NewPdfDate (_cbdge .String ());if _abbg !=nil {return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_abbg );
};_adbf .ModifiedDate =&_agad ;};default:_deffg ,_ :=_gadb .GetString (_fdfc .Get (_bfeb ));if _adbf ._adbb ==nil {_adbf ._adbb =_gadb .MakeDict ();};_adbf ._adbb .Set (_bfeb ,_deffg );};};return &_adbf ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_egdf *PdfFont )CharcodesToStrings (charcodes []_gcc .CharCode )([]string ,int ,int ){_aaeeb :=_egdf .baseFields ();_bcdfc :=make ([]string ,0,len (charcodes ));_aabe :=0;_agfd :=_egdf .Encoder ();_bcdc :=_aaeeb ._ddbg !=nil &&_egdf .IsSimple ()&&_egdf .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_db .Contains (_aaeeb ._ddbg .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_bcdc &&_agfd !=nil {switch _edgaf :=_agfd .(type ){case _gcc .SimpleEncoder :_ebacbd :=_edgaf .BaseName ();if _ ,_babe :=_gffa [_ebacbd ];_babe {for _ ,_efcg :=range charcodes {if _cecfa ,_fgga :=_agfd .CharcodeToRune (_efcg );_fgga {_bcdfc =append (_bcdfc ,string (_cecfa ));
}else {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_efcg ,charcodes ,_aaeeb .isCIDFont (),_egdf ,_agfd );
_aabe ++;_bcdfc =append (_bcdfc ,_gde .MissingCodeString );};};return _bcdfc ,len (_bcdfc ),_aabe ;};};};for _ ,_aegc :=range charcodes {if _aaeeb ._ddbg !=nil {if _ecgc ,_egbd :=_aaeeb ._ddbg .CharcodeToUnicode (_gde .CharCode (_aegc ));_egbd {_bcdfc =append (_bcdfc ,_ecgc );
continue ;};};if _agfd !=nil {if _cegfe ,_bccb :=_agfd .CharcodeToRune (_aegc );_bccb {_bcdfc =append (_bcdfc ,string (_cegfe ));continue ;};};_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_aegc ,charcodes ,_aaeeb .isCIDFont (),_egdf ,_agfd );
_aabe ++;_bcdfc =append (_bcdfc ,_gde .MissingCodeString );};if _aabe !=0{_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_aabe ,_egdf );
};return _bcdfc ,len (_bcdfc ),_aabe ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ffgfgg *PdfPage )GetAllContentStreams ()(string ,error ){_defff ,_dcgdf :=_ffgfgg .GetContentStreams ();if _dcgdf !=nil {return "",_dcgdf ;};return _db .Join (_defff ,"\u0020"),nil ;};

// ToPdfObject implements interface PdfModel.
func (_baed *PdfAnnotationStrikeOut )ToPdfObject ()_gadb .PdfObject {_baed .PdfAnnotation .ToPdfObject ();_efef :=_baed ._defb ;_bead :=_efef .PdfObject .(*_gadb .PdfObjectDictionary );_baed .PdfAnnotationMarkup .appendToPdfDictionary (_bead );_bead .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_bead .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_baed .QuadPoints );return _efef ;};func (_dgfec *PdfWriter )writeBytes (_gaeeed []byte ){if _dgfec ._dacbe !=nil {return ;};_aeaeaa ,_agbef :=_dgfec ._agfdb .Write (_gaeeed );
_dgfec ._fafba +=int64 (_aeaeaa );_dgfec ._dacbe =_agbef ;};func _dcba (_adae _gadb .PdfObject ,_ggcea bool )(*PdfFont ,error ){_bffgb ,_gdef ,_gebg :=_fagab (_adae );if _bffgb !=nil {_beaeb (_bffgb );};if _gebg !=nil {if _gebg ==ErrType1CFontNotSupported {_eebb ,_deaca :=_gccgc (_bffgb ,_gdef ,nil );
if _deaca !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gdef ,_deaca );
return nil ,_gebg ;};return &PdfFont {_ecfec :_eebb },_gebg ;};return nil ,_gebg ;};_cdcd :=&PdfFont {};switch _gdef ._dccge {case "\u0054\u0079\u0070e\u0030":if !_ggcea {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdef );
return nil ,_bb .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gfeag ,_geac :=_gaaf (_bffgb ,_gdef );if _geac !=nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdef ,_geac );
return nil ,_geac ;};_cdcd ._ecfec =_gfeag ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ccfda *pdfFontSimple ;_beecb ,_feccc :=_bf .NewStdFontByName (_bf .StdFontName (_gdef ._bbecb ));
if _feccc {_acad :=_accbf (_beecb );_cdcd ._ecfec =&_acad ;_dabc :=_gadb .TraceToDirectObject (_acad .ToPdfObject ());_dcgcg ,_gacg ,_bbdbf :=_fagab (_dabc );if _bbdbf !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gdef ,_acad );
return nil ,_bbdbf ;};for _ ,_adec :=range _bffgb .Keys (){_dcgcg .Set (_adec ,_bffgb .Get (_adec ));};_ccfda ,_bbdbf =_gccgc (_dcgcg ,_gacg ,_acad ._gagdd );if _bbdbf !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gdef ,_acad );
return nil ,_bbdbf ;};_ccfda ._aefe =_acad ._aefe ;_ccfda ._cegcd =_acad ._cegcd ;if _ccfda ._bcabc ==nil {_ccfda ._bcabc =_acad ._bcabc ;};}else {_ccfda ,_gebg =_gccgc (_bffgb ,_gdef ,nil );if _gebg !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gdef ,_gebg );
return nil ,_gebg ;};};_gebg =_ccfda .addEncoding ();if _gebg !=nil {return nil ,_gebg ;};if _feccc {_ccfda .updateStandard14Font ();};if _feccc &&_ccfda ._ddffd ==nil &&_ccfda ._gagdd ==nil {_cg .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccfda );
_cg .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_beecb );};if len (_ccfda ._aefe )==0{_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ccfda );};_cdcd ._ecfec =_ccfda ;
case "\u0054\u0079\u0070e\u0033":_bdabg ,_bgbbf :=_cdbc (_bffgb ,_gdef );if _bgbbf !=nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bgbbf );
return nil ,_bgbbf ;};_cdcd ._ecfec =_bdabg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_bbea ,_fgdc :=_fdff (_bffgb ,_gdef );if _fgdc !=nil {_cg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fgdc );
return nil ,_fgdc ;};_cdcd ._ecfec =_bbea ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bedcd ,_ebdc :=_dfagf (_bffgb ,_gdef );if _ebdc !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdef ,_ebdc );
return nil ,_ebdc ;};_cdcd ._ecfec =_bedcd ;default:_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_gdef );
return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdef );};return _cdcd ,nil ;};

// SetFillImage attach a model.Image to push button.
func (_fgcgeg *PdfFieldButton )SetFillImage (image *Image ){if _fgcgeg .IsPush (){_fgcgeg ._gadcgc =image ;};};func (_cfcbe *PdfAcroForm )filteredFields (_cebd FieldFilterFunc ,_gaga bool )[]*PdfField {if _cfcbe ==nil {return nil ;};return _egdb (_cfcbe .Fields ,_cebd ,_gaga );
};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cfdda *PdfFieldChoice )ToPdfObject ()_gadb .PdfObject {_cfdda .PdfField .ToPdfObject ();_ccab :=_cfdda ._fbbf ;_dfca :=_ccab .PdfObject .(*_gadb .PdfObjectDictionary );_dfca .Set ("\u0046\u0054",_gadb .MakeName ("\u0043\u0068"));if _cfdda .Opt !=nil {_dfca .Set ("\u004f\u0070\u0074",_cfdda .Opt );
};if _cfdda .TI !=nil {_dfca .Set ("\u0054\u0049",_cfdda .TI );};if _cfdda .I !=nil {_dfca .Set ("\u0049",_cfdda .I );};return _ccab ;};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_fbeb *PdfPageResources )HasShadingByName (keyName _gadb .PdfObjectName )bool {_ ,_eaeca :=_fbeb .GetShadingByName (keyName );return _eaeca ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// IsTiling specifies if the pattern is a tiling pattern.
func (_ffdba *PdfPattern )IsTiling ()bool {return _ffdba .PatternType ==1};func (_aaff *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _cde .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_gadb .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_gadb .MakeInteger (int64 (permission )),V :_gadb .MakeName ("\u0031\u002e\u0032")};
};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_feega *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ToPdfObject implements interface PdfModel.
func (_bca *PdfAnnotationPrinterMark )ToPdfObject ()_gadb .PdfObject {_bca .PdfAnnotation .ToPdfObject ();_ebbcd :=_bca ._defb ;_dafd :=_ebbcd .PdfObject .(*_gadb .PdfObjectDictionary );_dafd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_dafd .SetIfNotNil ("\u004d\u004e",_bca .MN );return _ebbcd ;};func _caag (_ddefe _gadb .PdfObject )(*PdfFontDescriptor ,error ){_gdce :=&PdfFontDescriptor {};_ddefe =_gadb .ResolveReference (_ddefe );if _fbgdf ,_aeea :=_ddefe .(*_gadb .PdfIndirectObject );
_aeea {_gdce ._dcbg =_fbgdf ;_ddefe =_fbgdf .PdfObject ;};_fcea ,_eaae :=_gadb .GetDict (_ddefe );if !_eaae {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddefe );
return nil ,_gadb .ErrTypeError ;};if _cfaaf :=_fcea .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_cfaaf !=nil {_gdce .FontName =_cfaaf ;}else {_cg .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_ebaed ,_ :=_gadb .GetName (_gdce .FontName );if _eeegf :=_fcea .Get ("\u0054\u0079\u0070\u0065");_eeegf !=nil {_gddcd ,_fdbca :=_eeegf .(*_gadb .PdfObjectName );if !_fdbca ||string (*_gddcd )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_cg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eeegf ,_ebaed ,_gdce .FontName );
};}else {_cg .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ebaed ,_gdce .FontName );
};_gdce .FontFamily =_fcea .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gdce .FontStretch =_fcea .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gdce .FontWeight =_fcea .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_gdce .Flags =_fcea .Get ("\u0046\u006c\u0061g\u0073");_gdce .FontBBox =_fcea .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gdce .ItalicAngle =_fcea .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gdce .Ascent =_fcea .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_gdce .Descent =_fcea .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gdce .Leading =_fcea .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gdce .CapHeight =_fcea .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gdce .XHeight =_fcea .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_gdce .StemV =_fcea .Get ("\u0053\u0074\u0065m\u0056");_gdce .StemH =_fcea .Get ("\u0053\u0074\u0065m\u0048");_gdce .AvgWidth =_fcea .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gdce .MaxWidth =_fcea .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_gdce .MissingWidth =_fcea .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gdce .FontFile =_fcea .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gdce .FontFile2 =_fcea .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_gdce .FontFile3 =_fcea .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gdce .CharSet =_fcea .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gdce .Style =_fcea .Get ("\u0053\u0074\u0079l\u0065");_gdce .Lang =_fcea .Get ("\u004c\u0061\u006e\u0067");
_gdce .FD =_fcea .Get ("\u0046\u0044");_gdce .CIDSet =_fcea .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gdce .Flags !=nil {if _abddf ,_aecaa :=_gadb .GetIntVal (_gdce .Flags );_aecaa {_gdce ._bbbdd =_abddf ;};};if _gdce .MissingWidth !=nil {if _bcfdbe ,_gdaeb :=_gadb .GetNumberAsFloat (_gdce .MissingWidth );
_gdaeb ==nil {_gdce ._aggcb =_bcfdbe ;};};if _gdce .FontFile !=nil {_acfae ,_gbac :=_fecab (_gdce .FontFile );if _gbac !=nil {return _gdce ,_gbac ;};_cg .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_acfae );_gdce .fontFile =_acfae ;
};if _gdce .FontFile2 !=nil {_afcfg ,_cdadf :=_bf .NewFontFile2FromPdfObject (_gdce .FontFile2 );if _cdadf !=nil {return _gdce ,_cdadf ;};_cg .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_afcfg .String ());_gdce ._cfcgc =&_afcfg ;
};return _gdce ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_ccbg :=NewPdfOutline ();_ccbg ._bedfc =&_ccbg ;return _ccbg };

// GetFontDescriptor returns the font descriptor for `font`.
func (_gccgf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gccgf ._ecfec .getFontDescriptor (),nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_gadb .PdfObjectArray ;_gadcgc *Image ;};func (_agff *PdfAppender )updateObjectsDeep (_bbf _gadb .PdfObject ,_gfge map[_gadb .PdfObject ]struct{}){if _gfge ==nil {_gfge =map[_gadb .PdfObject ]struct{}{};};if _ ,_cdgf :=_gfge [_bbf ];
_cdgf ||_bbf ==nil {return ;};_gfge [_bbf ]=struct{}{};_cea :=_gadb .ResolveReferencesDeep (_bbf ,_agff ._gbde );if _cea !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cea );};switch _addb :=_bbf .(type ){case *_gadb .PdfIndirectObject :switch {case _addb .GetParser ()==_agff ._fff ._becf :return ;
case _addb .GetParser ()==_agff .Reader ._becf :_bgfe ,_ :=_agff ._fff .GetIndirectObjectByNumber (int (_addb .ObjectNumber ));_ddda ,_fadb :=_bgfe .(*_gadb .PdfIndirectObject );if _fadb &&_ddda !=nil {if _ddda .PdfObject !=_addb .PdfObject &&_ddda .PdfObject .WriteString ()!=_addb .PdfObject .WriteString (){_agff .addNewObject (_bbf );
_agff ._gag [_bbf ]=_addb .ObjectNumber ;};};default:_agff .addNewObject (_bbf );};_agff .updateObjectsDeep (_addb .PdfObject ,_gfge );case *_gadb .PdfObjectArray :for _ ,_ebbd :=range _addb .Elements (){_agff .updateObjectsDeep (_ebbd ,_gfge );};case *_gadb .PdfObjectDictionary :for _ ,_acdb :=range _addb .Keys (){_agff .updateObjectsDeep (_addb .Get (_acdb ),_gfge );
};case *_gadb .PdfObjectStreams :if _addb .GetParser ()!=_agff ._fff ._becf {for _ ,_edfd :=range _addb .Elements (){_agff .updateObjectsDeep (_edfd ,_gfge );};};case *_gadb .PdfObjectStream :switch {case _addb .GetParser ()==_agff ._fff ._becf :return ;
case _addb .GetParser ()==_agff .Reader ._becf :if _fddb ,_gcbb :=_agff ._fff ._becf .LookupByReference (_addb .PdfObjectReference );_gcbb ==nil {var _fcd bool ;if _gaec ,_dacf :=_gadb .GetStream (_fddb );_dacf &&_dbd .Equal (_gaec .Stream ,_addb .Stream ){_fcd =true ;
};if _fdea ,_acce :=_gadb .GetDict (_fddb );_fcd &&_acce {_fcd =_fdea .WriteString ()==_addb .PdfObjectDictionary .WriteString ();};if _fcd {return ;};};if _addb .ObjectNumber !=0{_agff ._gag [_bbf ]=_addb .ObjectNumber ;};default:if _ ,_aea :=_agff ._bge [_bbf ];
!_aea {_agff .addNewObject (_bbf );};};_agff .updateObjectsDeep (_addb .PdfObjectDictionary ,_gfge );};};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cggc _gadb .ParserMetadata ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gefec pdfCIDFontType2 )GetCharMetrics (code _gcc .CharCode )(_bf .CharMetrics ,bool ){if _bagb ,_ggfc :=_gefec ._eagdc [code ];_ggfc {return _bf .CharMetrics {Wx :_bagb },true ;};_geab :=rune (code );_cdfc ,_gfebb :=_gefec ._cgab [_geab ];if !_gfebb {_cdfc =int (_gefec ._fbacg );
};return _bf .CharMetrics {Wx :float64 (_cdfc )},true ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dcdb *XObjectImage )GetContainingPdfObject ()_gadb .PdfObject {return _dcdb ._bgccg };

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_gadb .PdfObjectString ;Q *_gadb .PdfObjectInteger ;DS *_gadb .PdfObjectString ;RV _gadb .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aaeec *PdfShadingType6 )ToPdfObject ()_gadb .PdfObject {_aaeec .PdfShading .ToPdfObject ();_ecdb ,_gbeec :=_aaeec .getShadingDict ();if _gbeec !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aaeec .BitsPerCoordinate !=nil {_ecdb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aaeec .BitsPerCoordinate );};if _aaeec .BitsPerComponent !=nil {_ecdb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aaeec .BitsPerComponent );
};if _aaeec .BitsPerFlag !=nil {_ecdb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_aaeec .BitsPerFlag );};if _aaeec .Decode !=nil {_ecdb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aaeec .Decode );};if _aaeec .Function !=nil {if len (_aaeec .Function )==1{_ecdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aaeec .Function [0].ToPdfObject ());
}else {_badbb :=_gadb .MakeArray ();for _ ,_afag :=range _aaeec .Function {_badbb .Append (_afag .ToPdfObject ());};_ecdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_badbb );};};return _aaeec ._gfbgb ;};

// String returns a string describing the font descriptor.
func (_eddaf *PdfFontDescriptor )String ()string {var _efcc []string ;if _eddaf .FontName !=nil {_efcc =append (_efcc ,_eddaf .FontName .String ());};if _eddaf .FontFamily !=nil {_efcc =append (_efcc ,_eddaf .FontFamily .String ());};if _eddaf .fontFile !=nil {_efcc =append (_efcc ,_eddaf .fontFile .String ());
};if _eddaf ._cfcgc !=nil {_efcc =append (_efcc ,_eddaf ._cfcgc .String ());};_efcc =append (_efcc ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_eddaf .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_db .Join (_efcc ,"\u002c\u0020"));
};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_ccd :=NewPdfAnnotation ();_ceb :=&PdfAnnotationMovie {};_ceb .PdfAnnotation =_ccd ;_ccd .SetContext (_ceb );return _ceb ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_gadb .PdfObjectString ;Q *_gadb .PdfObjectInteger ;DS *_gadb .PdfObjectString ;RV _gadb .PdfObject ;MaxLen *_gadb .PdfObjectInteger ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ebdg *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gcae :=_cb .NewReader (img .getBase ());_efab :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ebdg .AlternateSpace .GetNumComponents (),nil ,img ._egfg ,nil );
_dcef :=_cb .NewWriter (_efab );_ecgd :=_gee .Pow (2,float64 (img .BitsPerComponent ))-1;_cg .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_cg .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ebdg .TintTransform );_befa :=_ebdg .AlternateSpace .DecodeArray ();var (_faaf uint32 ;_bdcc error ;);for {_faaf ,_bdcc =_gcae .ReadSample ();if _bdcc ==_cc .EOF {break ;
};if _bdcc !=nil {return img ,_bdcc ;};_efec :=float64 (_faaf )/_ecgd ;_cfgge ,_fcace :=_ebdg .TintTransform .Evaluate ([]float64 {_efec });if _fcace !=nil {return img ,_fcace ;};for _dedfd ,_gdba :=range _cfgge {_gcbbg :=_cf .LinearInterpolate (_gdba ,_befa [_dedfd *2],_befa [_dedfd *2+1],0,1);
if _fcace =_dcef .WriteSample (uint32 (_gcbbg *_ecgd ));_fcace !=nil {return img ,_fcace ;};};};return _ebdg .AlternateSpace .ImageToRGB (_fafdf (&_efab ));};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_acebb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _acebb .UnderlyingCS .GetNumComponents ();};func _bdfee (_gabdg _gadb .PdfObject )(*PdfFunctionType3 ,error ){_fgdda :=&PdfFunctionType3 {};var _aeae *_gadb .PdfObjectDictionary ;
if _faef ,_fcad :=_gabdg .(*_gadb .PdfIndirectObject );_fcad {_face ,_afdf :=_faef .PdfObject .(*_gadb .PdfObjectDictionary );if !_afdf {return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgdda ._cbcee =_faef ;
_aeae =_face ;}else if _feadd ,_cbcab :=_gabdg .(*_gadb .PdfObjectDictionary );_cbcab {_aeae =_feadd ;}else {return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edcaf ,_ddeda :=_gadb .TraceToDirectObject (_aeae .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gadb .PdfObjectArray );
if !_ddeda {_cg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _edcaf .Len ()!=2{_cg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eabeb ,_dgad :=_edcaf .ToFloat64Array ();
if _dgad !=nil {return nil ,_dgad ;};_fgdda .Domain =_eabeb ;_edcaf ,_ddeda =_gadb .TraceToDirectObject (_aeae .Get ("\u0052\u0061\u006eg\u0065")).(*_gadb .PdfObjectArray );if _ddeda {if _edcaf .Len ()< 0||_edcaf .Len ()%2!=0{return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cbdgc ,_facd :=_edcaf .ToFloat64Array ();if _facd !=nil {return nil ,_facd ;};_fgdda .Range =_cbdgc ;};_edcaf ,_ddeda =_gadb .TraceToDirectObject (_aeae .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_gadb .PdfObjectArray );if !_ddeda {_cg .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fgdda .Functions =[]PdfFunction {};
for _ ,_gdgd :=range _edcaf .Elements (){_dcgde ,_cbea :=_bdbagg (_gdgd );if _cbea !=nil {return nil ,_cbea ;};_fgdda .Functions =append (_fgdda .Functions ,_dcgde );};_edcaf ,_ddeda =_gadb .TraceToDirectObject (_aeae .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_gadb .PdfObjectArray );
if !_ddeda {_cg .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_addf ,_dgad :=_edcaf .ToFloat64Array ();if _dgad !=nil {return nil ,_dgad ;};_fgdda .Bounds =_addf ;if len (_fgdda .Bounds )!=len (_fgdda .Functions )-1{_cg .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_fgdda .Bounds ),len (_fgdda .Functions ));
return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edcaf ,_ddeda =_gadb .TraceToDirectObject (_aeae .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gadb .PdfObjectArray );if !_ddeda {_cg .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_efaaa ,_dgad :=_edcaf .ToFloat64Array ();
if _dgad !=nil {return nil ,_dgad ;};_fgdda .Encode =_efaaa ;if len (_fgdda .Encode )!=2*len (_fgdda .Functions ){_cg .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_fgdda .Encode ),len (_fgdda .Functions ));
return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _fgdda ,nil ;};

// RemovePage removes a page by number.
func (_abea *PdfAppender )RemovePage (pageNum int ){_cebb :=pageNum -1;_abea ._dade =append (_abea ._dade [0:_cebb ],_abea ._dade [pageNum :]...);};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_abdea *DSS )GetContainingPdfObject ()_gadb .PdfObject {return _abdea ._acae };

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_afedg *PdfPage )AddContentStreamByString (contentStr string )error {_dgaeb ,_cceff :=_gadb .MakeStream ([]byte (contentStr ),_gadb .NewFlateEncoder ());if _cceff !=nil {return _cceff ;};if _afedg .Contents ==nil {_afedg .Contents =_dgaeb ;}else {_eedbb :=_gadb .TraceToDirectObject (_afedg .Contents );
_bdfeg ,_bfffb :=_eedbb .(*_gadb .PdfObjectArray );if !_bfffb {_bdfeg =_gadb .MakeArray (_eedbb );};_bdfeg .Append (_dgaeb );_afedg .Contents =_bdfeg ;};return nil ;};

// ToPdfObject returns a stream object.
func (_bgde *XObjectImage )ToPdfObject ()_gadb .PdfObject {_dgggbf :=_bgde ._bgccg ;_eceg :=_dgggbf .PdfObjectDictionary ;if _bgde .Filter !=nil {_eceg =_bgde .Filter .MakeStreamDict ();_dgggbf .PdfObjectDictionary =_eceg ;};_eceg .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_eceg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0049\u006d\u0061g\u0065"));_eceg .Set ("\u0057\u0069\u0064t\u0068",_gadb .MakeInteger (*(_bgde .Width )));_eceg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gadb .MakeInteger (*(_bgde .Height )));
if _bgde .BitsPerComponent !=nil {_eceg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gadb .MakeInteger (*(_bgde .BitsPerComponent )));};if _bgde .ColorSpace !=nil {_eceg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bgde .ColorSpace .ToPdfObject ());
};_eceg .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_bgde .Intent );_eceg .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_bgde .ImageMask );_eceg .SetIfNotNil ("\u004d\u0061\u0073\u006b",_bgde .Mask );_eeecb :=_eceg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _bgde .Decode ==nil &&_eeecb {_eceg .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _bgde .Decode !=nil {_eceg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bgde .Decode );};_eceg .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_bgde .Interpolate );
_eceg .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_bgde .Alternatives );_eceg .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_bgde .SMask );_eceg .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_bgde .SMaskInData );
_eceg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bgde .Matte );_eceg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bgde .Name );_eceg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bgde .StructParent );_eceg .SetIfNotNil ("\u0049\u0044",_bgde .ID );
_eceg .SetIfNotNil ("\u004f\u0050\u0049",_bgde .OPI );_eceg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgde .Metadata );_eceg .SetIfNotNil ("\u004f\u0043",_bgde .OC );_eceg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gadb .MakeInteger (int64 (len (_bgde .Stream ))));
_dgggbf .Stream =_bgde .Stream ;return _dgggbf ;};

// ToInteger convert to an integer format.
func (_fcgf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_dgccf :=_gee .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dgccf *_fcgf .A ()),uint32 (_dgccf *_fcgf .B ()),uint32 (_dgccf *_fcgf .C ())};};

// ToPdfObject implements interface PdfModel.
func (_fdd *PdfActionGoToE )ToPdfObject ()_gadb .PdfObject {_fdd .PdfAction .ToPdfObject ();_ebe :=_fdd ._ec ;_cdc :=_ebe .PdfObject .(*_gadb .PdfObjectDictionary );_cdc .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeGoToE )));if _fdd .F !=nil {_cdc .Set ("\u0046",_fdd .F .ToPdfObject ());
};_cdc .SetIfNotNil ("\u0044",_fdd .D );_cdc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fdd .NewWindow );_cdc .SetIfNotNil ("\u0054",_fdd .T );return _ebe ;};func (_eedgg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ggebf :=_eedgg ._bbgfe ;
_ggebf !=nil {return _ggebf ;};return _eedgg ._bcabc ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ggff :_gadb .MakeIndirectObject (_gadb .MakeDict ())};};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _gadb .PdfObject ;MK _gadb .PdfObject ;A _gadb .PdfObject ;AA _gadb .PdfObject ;BS _gadb .PdfObject ;Parent _gadb .PdfObject ;_bag *PdfField ;_baa bool ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_efaa *PdfColorspaceLab )ToPdfObject ()_gadb .PdfObject {_ccbd :=_gadb .MakeArray ();_ccbd .Append (_gadb .MakeName ("\u004c\u0061\u0062"));_abgb :=_gadb .MakeDict ();if _efaa .WhitePoint !=nil {_abef :=_gadb .MakeArray (_gadb .MakeFloat (_efaa .WhitePoint [0]),_gadb .MakeFloat (_efaa .WhitePoint [1]),_gadb .MakeFloat (_efaa .WhitePoint [2]));
_abgb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_abef );}else {_cg .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _efaa .BlackPoint !=nil {_bgcg :=_gadb .MakeArray (_gadb .MakeFloat (_efaa .BlackPoint [0]),_gadb .MakeFloat (_efaa .BlackPoint [1]),_gadb .MakeFloat (_efaa .BlackPoint [2]));_abgb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bgcg );
};if _efaa .Range !=nil {_fgdd :=_gadb .MakeArray (_gadb .MakeFloat (_efaa .Range [0]),_gadb .MakeFloat (_efaa .Range [1]),_gadb .MakeFloat (_efaa .Range [2]),_gadb .MakeFloat (_efaa .Range [3]));_abgb .Set ("\u0052\u0061\u006eg\u0065",_fgdd );};_ccbd .Append (_abgb );
if _efaa ._fbfaf !=nil {_efaa ._fbfaf .PdfObject =_ccbd ;return _efaa ._fbfaf ;};return _ccbd ;};

// ToPdfObject implements interface PdfModel.
func (_afb *PdfActionImportData )ToPdfObject ()_gadb .PdfObject {_afb .PdfAction .ToPdfObject ();_gga :=_afb ._ec ;_bdb :=_gga .PdfObject .(*_gadb .PdfObjectDictionary );_bdb .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeImportData )));if _afb .F !=nil {_bdb .Set ("\u0046",_afb .F .ToPdfObject ());
};return _gga ;};func (_aaa *PdfReader )newPdfAnnotationFromIndirectObject (_dfc *_gadb .PdfIndirectObject )(*PdfAnnotation ,error ){_ace ,_cgg :=_dfc .PdfObject .(*_gadb .PdfObjectDictionary );if !_cgg {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_aaa ._gaccc .GetModelFromPrimitive (_ace );model !=nil {_faf ,_bcea :=model .(*PdfAnnotation );if !_bcea {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _faf ,nil ;};_bcd :=&PdfAnnotation {};_bcd ._defb =_dfc ;_aaa ._gaccc .Register (_ace ,_bcd );if _deaa :=_ace .Get ("\u0054\u0079\u0070\u0065");_deaa !=nil {_bcdd ,_cfg :=_deaa .(*_gadb .PdfObjectName );if !_cfg {_cg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_deaa );
}else {if *_bcdd !="\u0041\u006e\u006eo\u0074"{_cg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_bcdd );};};};
if _bae :=_ace .Get ("\u0052\u0065\u0063\u0074");_bae !=nil {_bcd .Rect =_bae ;};if _fbff :=_ace .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fbff !=nil {_bcd .Contents =_fbff ;};if _bccc :=_ace .Get ("\u0050");_bccc !=nil {_bcd .P =_bccc ;
};if _eff :=_ace .Get ("\u004e\u004d");_eff !=nil {_bcd .NM =_eff ;};if _dge :=_ace .Get ("\u004d");_dge !=nil {_bcd .M =_dge ;};if _eee :=_ace .Get ("\u0046");_eee !=nil {_bcd .F =_eee ;};if _gbgc :=_ace .Get ("\u0041\u0050");_gbgc !=nil {_bcd .AP =_gbgc ;
};if _gfa :=_ace .Get ("\u0041\u0053");_gfa !=nil {_bcd .AS =_gfa ;};if _cbce :=_ace .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cbce !=nil {_bcd .Border =_cbce ;};if _dfd :=_ace .Get ("\u0043");_dfd !=nil {_bcd .C =_dfd ;};if _dcde :=_ace .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_dcde !=nil {_bcd .StructParent =_dcde ;};if _ccdc :=_ace .Get ("\u004f\u0043");_ccdc !=nil {_bcd .OC =_ccdc ;};_edaf :=_ace .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _edaf ==nil {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_bcd ._egeb =nil ;return _bcd ,nil ;};_dcb ,_afe :=_edaf .(*_gadb .PdfObjectName );if !_afe {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_edaf );
return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_edaf );};switch *_dcb {case "\u0054\u0065\u0078\u0074":_gfcb ,_fcc :=_aaa .newPdfAnnotationTextFromDict (_ace );
if _fcc !=nil {return nil ,_fcc ;};_gfcb .PdfAnnotation =_bcd ;_bcd ._egeb =_gfcb ;return _bcd ,nil ;case "\u004c\u0069\u006e\u006b":_cad ,_cbbb :=_aaa .newPdfAnnotationLinkFromDict (_ace );if _cbbb !=nil {return nil ,_cbbb ;};_cad .PdfAnnotation =_bcd ;
_bcd ._egeb =_cad ;return _bcd ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_aedc ,_cegb :=_aaa .newPdfAnnotationFreeTextFromDict (_ace );if _cegb !=nil {return nil ,_cegb ;};_aedc .PdfAnnotation =_bcd ;_bcd ._egeb =_aedc ;return _bcd ,nil ;
case "\u004c\u0069\u006e\u0065":_addc ,_gbgg :=_aaa .newPdfAnnotationLineFromDict (_ace );if _gbgg !=nil {return nil ,_gbgg ;};_addc .PdfAnnotation =_bcd ;_bcd ._egeb =_addc ;_cg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bcd ,_bcd );
_cg .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_addc ,_addc );_cg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_addc .PdfAnnotationMarkup ,_addc .PdfAnnotationMarkup );
return _bcd ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_eaa ,_ddf :=_aaa .newPdfAnnotationSquareFromDict (_ace );if _ddf !=nil {return nil ,_ddf ;};_eaa .PdfAnnotation =_bcd ;_bcd ._egeb =_eaa ;return _bcd ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ccg ,_gebf :=_aaa .newPdfAnnotationCircleFromDict (_ace );
if _gebf !=nil {return nil ,_gebf ;};_ccg .PdfAnnotation =_bcd ;_bcd ._egeb =_ccg ;return _bcd ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_dgcg ,_gea :=_aaa .newPdfAnnotationPolygonFromDict (_ace );if _gea !=nil {return nil ,_gea ;};_dgcg .PdfAnnotation =_bcd ;
_bcd ._egeb =_dgcg ;return _bcd ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_ffa ,_bbbc :=_aaa .newPdfAnnotationPolyLineFromDict (_ace );if _bbbc !=nil {return nil ,_bbbc ;};_ffa .PdfAnnotation =_bcd ;_bcd ._egeb =_ffa ;return _bcd ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_gedd ,_dfcd :=_aaa .newPdfAnnotationHighlightFromDict (_ace );if _dfcd !=nil {return nil ,_dfcd ;};_gedd .PdfAnnotation =_bcd ;_bcd ._egeb =_gedd ;return _bcd ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_aef ,_agd :=_aaa .newPdfAnnotationUnderlineFromDict (_ace );
if _agd !=nil {return nil ,_agd ;};_aef .PdfAnnotation =_bcd ;_bcd ._egeb =_aef ;return _bcd ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_dabe ,_aabg :=_aaa .newPdfAnnotationSquigglyFromDict (_ace );if _aabg !=nil {return nil ,_aabg ;
};_dabe .PdfAnnotation =_bcd ;_bcd ._egeb =_dabe ;return _bcd ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_egf ,_baae :=_aaa .newPdfAnnotationStrikeOut (_ace );if _baae !=nil {return nil ,_baae ;};_egf .PdfAnnotation =_bcd ;_bcd ._egeb =_egf ;
return _bcd ,nil ;case "\u0043\u0061\u0072e\u0074":_aacb ,_bec :=_aaa .newPdfAnnotationCaretFromDict (_ace );if _bec !=nil {return nil ,_bec ;};_aacb .PdfAnnotation =_bcd ;_bcd ._egeb =_aacb ;return _bcd ,nil ;case "\u0053\u0074\u0061m\u0070":_fbbd ,_gab :=_aaa .newPdfAnnotationStampFromDict (_ace );
if _gab !=nil {return nil ,_gab ;};_fbbd .PdfAnnotation =_bcd ;_bcd ._egeb =_fbbd ;return _bcd ,nil ;case "\u0049\u006e\u006b":_bddd ,_ffaf :=_aaa .newPdfAnnotationInkFromDict (_ace );if _ffaf !=nil {return nil ,_ffaf ;};_bddd .PdfAnnotation =_bcd ;_bcd ._egeb =_bddd ;
return _bcd ,nil ;case "\u0050\u006f\u0070u\u0070":_aeg ,_bfd :=_aaa .newPdfAnnotationPopupFromDict (_ace );if _bfd !=nil {return nil ,_bfd ;};_aeg .PdfAnnotation =_bcd ;_bcd ._egeb =_aeg ;return _bcd ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dcaa ,_fcb :=_aaa .newPdfAnnotationFileAttachmentFromDict (_ace );
if _fcb !=nil {return nil ,_fcb ;};_dcaa .PdfAnnotation =_bcd ;_bcd ._egeb =_dcaa ;return _bcd ,nil ;case "\u0053\u006f\u0075n\u0064":_dae ,_daec :=_aaa .newPdfAnnotationSoundFromDict (_ace );if _daec !=nil {return nil ,_daec ;};_dae .PdfAnnotation =_bcd ;
_bcd ._egeb =_dae ;return _bcd ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bccga ,_gdab :=_aaa .newPdfAnnotationRichMediaFromDict (_ace );if _gdab !=nil {return nil ,_gdab ;};_bccga .PdfAnnotation =_bcd ;_bcd ._egeb =_bccga ;return _bcd ,nil ;
case "\u004d\u006f\u0076i\u0065":_ecf ,_eaag :=_aaa .newPdfAnnotationMovieFromDict (_ace );if _eaag !=nil {return nil ,_eaag ;};_ecf .PdfAnnotation =_bcd ;_bcd ._egeb =_ecf ;return _bcd ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cbgg ,_aeb :=_aaa .newPdfAnnotationScreenFromDict (_ace );
if _aeb !=nil {return nil ,_aeb ;};_cbgg .PdfAnnotation =_bcd ;_bcd ._egeb =_cbgg ;return _bcd ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_ecdf ,_cfde :=_aaa .newPdfAnnotationWidgetFromDict (_ace );if _cfde !=nil {return nil ,_cfde ;};_ecdf .PdfAnnotation =_bcd ;
_bcd ._egeb =_ecdf ;return _bcd ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bddb ,_gfe :=_aaa .newPdfAnnotationPrinterMarkFromDict (_ace );if _gfe !=nil {return nil ,_gfe ;};_bddb .PdfAnnotation =_bcd ;_bcd ._egeb =_bddb ;
return _bcd ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_ceee ,_dbde :=_aaa .newPdfAnnotationTrapNetFromDict (_ace );if _dbde !=nil {return nil ,_dbde ;};_ceee .PdfAnnotation =_bcd ;_bcd ._egeb =_ceee ;return _bcd ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_adfb ,_ddg :=_aaa .newPdfAnnotationWatermarkFromDict (_ace );
if _ddg !=nil {return nil ,_ddg ;};_adfb .PdfAnnotation =_bcd ;_bcd ._egeb =_adfb ;return _bcd ,nil ;case "\u0033\u0044":_fcg ,_gbdb :=_aaa .newPdfAnnotation3DFromDict (_ace );if _gbdb !=nil {return nil ,_gbdb ;};_fcg .PdfAnnotation =_bcd ;_bcd ._egeb =_fcg ;
return _bcd ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_agg ,_afba :=_aaa .newPdfAnnotationProjectionFromDict (_ace );if _afba !=nil {return nil ,_afba ;};_agg .PdfAnnotation =_bcd ;_bcd ._egeb =_agg ;return _bcd ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_eaee ,_cge :=_aaa .newPdfAnnotationRedactFromDict (_ace );
if _cge !=nil {return nil ,_cge ;};_eaee .PdfAnnotation =_bcd ;_bcd ._egeb =_eaee ;return _bcd ,nil ;};_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_dcb );
return nil ,nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gad .Permissions ;Algorithm EncryptionAlgorithm ;};

// ToPdfObject implements interface PdfModel.
func (_feadf *PdfAnnotationWatermark )ToPdfObject ()_gadb .PdfObject {_feadf .PdfAnnotation .ToPdfObject ();_fegb :=_feadf ._defb ;_daa :=_fegb .PdfObject .(*_gadb .PdfObjectDictionary );_daa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_daa .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_feadf .FixedPrint );return _fegb ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_agbgd *LTV )EnableAll (extraCerts []*_g .Certificate )error {_afcg :=_agbgd ._dfcfg ._fff .AcroForm ;for _ ,_bceca :=range _afcg .AllFields (){_adeg ,_ :=_bceca .GetContext ().(*PdfFieldSignature );if _adeg ==nil {continue ;};_cccbg :=_adeg .V ;
if _eacfa :=_agbgd .validateSig (_cccbg );_eacfa !=nil {_cg .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_eacfa );
};if _fafg :=_agbgd .Enable (_cccbg ,extraCerts );_fafg !=nil {return _fafg ;};};return nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _gadb .PdfObject ;Movie _gadb .PdfObject ;A _gadb .PdfObject ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bf .CharMetrics ;func (_cgced *PdfWriter )updateObjectNumbers (){_cddgf :=_cgced .ObjNumOffset ;_aaddg :=0;for _ ,_aeaba :=range _cgced ._agefec {_cabcd :=int64 (_aaddg +1+_cddgf );_abafa :=true ;if _cgced ._gfdfd {if _deagc ,_cdgcc :=_cgced ._dafgd [_aeaba ];
_cdgcc {_cabcd =_deagc ;_abafa =false ;};};switch _gfafd :=_aeaba .(type ){case *_gadb .PdfIndirectObject :_gfafd .ObjectNumber =_cabcd ;_gfafd .GenerationNumber =0;case *_gadb .PdfObjectStream :_gfafd .ObjectNumber =_cabcd ;_gfafd .GenerationNumber =0;
case *_gadb .PdfObjectStreams :_gfafd .ObjectNumber =_cabcd ;_gfafd .GenerationNumber =0;default:_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_gfafd );
continue ;};if _abafa {_aaddg ++;};};_bccab :=func (_dfgc _gadb .PdfObject )int64 {switch _edfae :=_dfgc .(type ){case *_gadb .PdfIndirectObject :return _edfae .ObjectNumber ;case *_gadb .PdfObjectStream :return _edfae .ObjectNumber ;case *_gadb .PdfObjectStreams :return _edfae .ObjectNumber ;
};return 0;};_ge .SliceStable (_cgced ._agefec ,func (_facge ,_ccbdgb int )bool {return _bccab (_cgced ._agefec [_facge ])< _bccab (_cgced ._agefec [_ccbdgb ]);});};func (_cgef *PdfReader )newPdfAnnotationFreeTextFromDict (_ebeb *_gadb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fbfa :=PdfAnnotationFreeText {};
_beb ,_ddef :=_cgef .newPdfAnnotationMarkupFromDict (_ebeb );if _ddef !=nil {return nil ,_ddef ;};_fbfa .PdfAnnotationMarkup =_beb ;_fbfa .DA =_ebeb .Get ("\u0044\u0041");_fbfa .Q =_ebeb .Get ("\u0051");_fbfa .RC =_ebeb .Get ("\u0052\u0043");_fbfa .DS =_ebeb .Get ("\u0044\u0053");
_fbfa .CL =_ebeb .Get ("\u0043\u004c");_fbfa .IT =_ebeb .Get ("\u0049\u0054");_fbfa .BE =_ebeb .Get ("\u0042\u0045");_fbfa .RD =_ebeb .Get ("\u0052\u0044");_fbfa .BS =_ebeb .Get ("\u0042\u0053");_fbfa .LE =_ebeb .Get ("\u004c\u0045");return &_fbfa ,nil ;
};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_bbfbb *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_cg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_bb .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gadb .PdfObject ;};func (_fbad *pdfFontSimple )baseFields ()*fontCommon {return &_fbad .fontCommon };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_degfa *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gcad ,_fbade :=range _degfa ._egfg {_degfa ._egfg [_gcad ]=mapFunc (_fbade );};};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _f .Time )(PdfDate ,error ){_ccdab :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_bbdbgb ,_ :=_gc .ParseInt (_ccdab [1:3],10,32);_abffb ,_ :=_gc .ParseInt (_ccdab [4:6],10,32);return PdfDate {_cgecg :int64 (timeObj .Year ()),_ecffb :int64 (timeObj .Month ()),_eadaf :int64 (timeObj .Day ()),_ceecg :int64 (timeObj .Hour ()),_bafca :int64 (timeObj .Minute ()),_ggdfd :int64 (timeObj .Second ()),_beeae :_ccdab [0],_bfebf :_bbdbgb ,_fbgec :_abffb },nil ;
};func (_fgge *DSS )addCerts (_gddd [][]byte )([]*_gadb .PdfObjectStream ,error ){return _fgge .add (&_fgge .Certs ,_fgge ._cggd ,_gddd );};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// SetOCProperties sets the optional content properties.
func (_bebbb *PdfWriter )SetOCProperties (ocProperties _gadb .PdfObject )error {_bgcad :=_bebbb ._gaeab ;if ocProperties !=nil {_cg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bgcad .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _bebbb .addObjects (ocProperties );};return nil ;};

// AddImageResource adds an image to the XObject resources.
func (_fedeg *PdfPage )AddImageResource (name _gadb .PdfObjectName ,ximg *XObjectImage )error {var _abfb *_gadb .PdfObjectDictionary ;if _fedeg .Resources .XObject ==nil {_abfb =_gadb .MakeDict ();_fedeg .Resources .XObject =_abfb ;}else {var _fecfe bool ;
_abfb ,_fecfe =(_fedeg .Resources .XObject ).(*_gadb .PdfObjectDictionary );if !_fecfe {return _bb .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_abfb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_eadc ,_beab :=_fgfg (basefont );if _beab !=nil {return nil ,_beab ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_eadc ._ddffd =_gcc .NewWinAnsiEncoder ();};return &PdfFont {_ecfec :&_eadc },nil ;
};func (_faad *LTV )getCerts (_eebfb []*_g .Certificate )([][]byte ,error ){_gcaed :=make ([][]byte ,0,len (_eebfb ));for _ ,_gceda :=range _eebfb {_gcaed =append (_gcaed ,_gceda .Raw );};return _gcaed ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_fgcd *pdfCIDFontType2 )ToPdfObject ()_gadb .PdfObject {if _fgcd ._adgda ==nil {_fgcd ._adgda =&_gadb .PdfIndirectObject {};};_gfeeg :=_fgcd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_fgcd ._adgda .PdfObject =_gfeeg ;if _fgcd .CIDSystemInfo !=nil {_gfeeg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_fgcd .CIDSystemInfo );};if _fgcd .DW !=nil {_gfeeg .Set ("\u0044\u0057",_fgcd .DW );};if _fgcd .DW2 !=nil {_gfeeg .Set ("\u0044\u0057\u0032",_fgcd .DW2 );
};if _fgcd .W !=nil {_gfeeg .Set ("\u0057",_fgcd .W );};if _fgcd .W2 !=nil {_gfeeg .Set ("\u0057\u0032",_fgcd .W2 );};if _fgcd .CIDToGIDMap !=nil {_gfeeg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_fgcd .CIDToGIDMap );};return _fgcd ._adgda ;
};

// ToPdfObject implements interface PdfModel.
func (_adb *PdfAnnotationRichMedia )ToPdfObject ()_gadb .PdfObject {_adb .PdfAnnotation .ToPdfObject ();_agge :=_adb ._defb ;_bbc :=_agge .PdfObject .(*_gadb .PdfObjectDictionary );_bbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_bbc .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_adb .RichMediaSettings );_bbc .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_adb .RichMediaContent );
return _agge ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_aabge *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _aabge ._efedb ==nil {_aabge ._efedb =_fdg .NewPSExecutor (_aabge .Program );};var _ebgag []_fdg .PSObject ;for _ ,_aeacf :=range xVec {_ebgag =append (_ebgag ,_fdg .MakeReal (_aeacf ));
};_ccggb ,_agac :=_aabge ._efedb .Execute (_ebgag );if _agac !=nil {return nil ,_agac ;};_bfbe ,_agac :=_fdg .PSObjectArrayToFloat64Array (_ccggb );if _agac !=nil {return nil ,_agac ;};return _bfbe ,nil ;};func (_bef *PdfReader )newPdfAnnotationPolyLineFromDict (_dfa *_gadb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_dgf :=PdfAnnotationPolyLine {};
_cegc ,_cgb :=_bef .newPdfAnnotationMarkupFromDict (_dfa );if _cgb !=nil {return nil ,_cgb ;};_dgf .PdfAnnotationMarkup =_cegc ;_dgf .Vertices =_dfa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dgf .LE =_dfa .Get ("\u004c\u0045");_dgf .BS =_dfa .Get ("\u0042\u0053");
_dgf .IC =_dfa .Get ("\u0049\u0043");_dgf .BE =_dfa .Get ("\u0042\u0045");_dgf .IT =_dfa .Get ("\u0049\u0054");_dgf .Measure =_dfa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dgf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbeaf *PdfSignatureReference )ToPdfObject ()_gadb .PdfObject {_cdffd :=_gadb .MakeDict ();_cdffd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bbeaf .Type );_cdffd .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_bbeaf .TransformMethod );
_cdffd .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_bbeaf .TransformParams );_cdffd .SetIfNotNil ("\u0044\u0061\u0074\u0061",_bbeaf .Data );_cdffd .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_bbeaf .DigestMethod );
return _cdffd ;};

// PartialName returns the partial name of the field.
func (_cfeb *PdfField )PartialName ()string {_efca :="";if _cfeb .T !=nil {_efca =_cfeb .T .Decoded ();}else {_cg .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _efca ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_cgddf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_cgddf ._bbgfa =colorspace ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_aabcg *PdfPageResources )HasXObjectByName (keyName _gadb .PdfObjectName )bool {_bgdab ,_ :=_aabcg .GetXObjectByName (keyName );return _bgdab !=nil ;};

// IsColored specifies if the pattern is colored.
func (_bffeg *PdfTilingPattern )IsColored ()bool {if _bffeg .PaintType !=nil &&*_bffeg .PaintType ==1{return true ;};return false ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_gadgf :=&PdfOutline {_accdf :_gadb .MakeIndirectObject (_gadb .MakeDict ())};_gadgf ._bedfc =_gadgf ;return _gadgf ;};

// Encoder returns the font's text encoder.
func (_gcee pdfCIDFontType2 )Encoder ()_gcc .TextEncoder {return _gcee ._dage };

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_agcb *PdfPageResources )HasPatternByName (keyName _gadb .PdfObjectName )bool {_ ,_abaea :=_agcb .GetPatternByName (keyName );return _abaea ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_bced :=NewPdfAnnotation ();_cegf :=&PdfAnnotationLink {};_cegf .PdfAnnotation =_bced ;_bced .SetContext (_cegf );return _cegf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_feadb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aag ,_bdaf :=_gadb .GetNumbersAsFloat (objects );
if _bdaf !=nil {return nil ,_bdaf ;};return _feadb .ColorFromFloats (_aag );};

// GetOptimizer returns current PDF optimizer.
func (_fccec *PdfWriter )GetOptimizer ()Optimizer {return _fccec ._dggca };func (_dgfdf *PdfWriter )checkCrossReferenceStream ()bool {_gefba :=_dgfdf ._dagb .Major > 1||(_dgfdf ._dagb .Major ==1&&_dgfdf ._dagb .Minor > 4);if _dgfdf ._dedb !=nil {_gefba =*_dgfdf ._dedb ;
};return _gefba ;};

// Encoder returns the font's text encoder.
func (_begf pdfCIDFontType0 )Encoder ()_gcc .TextEncoder {return _begf ._ccga };

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_bdbea *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _bdbea ._afbdb .(*PdfShadingPattern );};func _gaaf (_ccced *_gadb .PdfObjectDictionary ,_beedg *fontCommon )(*pdfFontType0 ,error ){_bgggg ,_gbcaf :=_gadb .GetArray (_ccced .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_gbcaf {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_beedg );
return nil ,_gadb .ErrRangeError ;};if _bgggg .Len ()!=1{_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_bgggg .Len ());
return nil ,_gadb .ErrRangeError ;};_cdec ,_ddgg :=_dcba (_bgggg .Get (0),false );if _ddgg !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_ddgg ,_beedg );
return nil ,_ddgg ;};_bdafb :=_bffaa (_beedg );_bdafb .DescendantFont =_cdec ;_dgffb ,_gbcaf :=_gadb .GetNameVal (_ccced .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gbcaf {if _dgffb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_dgffb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bdafb ._bagcbf =_gcc .NewIdentityTextEncoder (_dgffb );
}else if _gde .IsPredefinedCMap (_dgffb ){_bdafb ._cedba ,_ddgg =_gde .LoadPredefinedCMap (_dgffb );if _ddgg !=nil {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dgffb ,_ddgg );
};}else {_cg .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_dgffb );};};if _ceff :=_cdec .baseFields ()._ddbg ;_ceff !=nil {if _adab :=_ceff .Name ();_adab =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_adab =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_adab =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_adab =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bdafb ._bagcbf =_gcc .NewCMapEncoder (_dgffb ,_bdafb ._cedba ,_ceff );
};};return _bdafb ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_geeab *PdfFunctionType3 )ToPdfObject ()_gadb .PdfObject {_cgbgf :=_gadb .MakeDict ();_cgbgf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gadb .MakeInteger (3));_ddbd :=&_gadb .PdfObjectArray {};for _ ,_edcda :=range _geeab .Domain {_ddbd .Append (_gadb .MakeFloat (_edcda ));
};_cgbgf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ddbd );if _geeab .Range !=nil {_egaac :=&_gadb .PdfObjectArray {};for _ ,_fbdgc :=range _geeab .Range {_egaac .Append (_gadb .MakeFloat (_fbdgc ));};_cgbgf .Set ("\u0052\u0061\u006eg\u0065",_egaac );
};if _geeab .Functions !=nil {_adaf :=&_gadb .PdfObjectArray {};for _ ,_gfegc :=range _geeab .Functions {_adaf .Append (_gfegc .ToPdfObject ());};_cgbgf .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_adaf );};if _geeab .Bounds !=nil {_efad :=&_gadb .PdfObjectArray {};
for _ ,_ebgab :=range _geeab .Bounds {_efad .Append (_gadb .MakeFloat (_ebgab ));};_cgbgf .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_efad );};if _geeab .Encode !=nil {_bfegg :=&_gadb .PdfObjectArray {};for _ ,_fdad :=range _geeab .Encode {_bfegg .Append (_gadb .MakeFloat (_fdad ));
};_cgbgf .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bfegg );};if _geeab ._cbcee !=nil {_geeab ._cbcee .PdfObject =_cgbgf ;return _geeab ._cbcee ;};return _cgbgf ;};

// ToPdfObject implements interface PdfModel.
func (_dfge *PdfAnnotationLink )ToPdfObject ()_gadb .PdfObject {_dfge .PdfAnnotation .ToPdfObject ();_cca :=_dfge ._defb ;_bfag :=_cca .PdfObject .(*_gadb .PdfObjectDictionary );_bfag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u004c\u0069\u006e\u006b"));
if _dfge ._edb !=nil &&_dfge ._edb ._gf !=nil {_bfag .Set ("\u0041",_dfge ._edb ._gf .ToPdfObject ());}else if _dfge .A !=nil {_bfag .Set ("\u0041",_dfge .A );};_bfag .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dfge .Dest );_bfag .SetIfNotNil ("\u0048",_dfge .H );
_bfag .SetIfNotNil ("\u0050\u0041",_dfge .PA );_bfag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfge .QuadPoints );_bfag .SetIfNotNil ("\u0042\u0053",_dfge .BS );return _cca ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_ffff *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// SetBorderWidth sets the style's border width.
func (_edbd *PdfBorderStyle )SetBorderWidth (width float64 ){_edbd .W =&width };

// AddAnnotation appends `annot` to the list of page annotations.
func (_agbaba *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _agbaba ._ecca ==nil {_agbaba .GetAnnotations ();};_agbaba ._ecca =append (_agbaba ._ecca ,annot );};func _abbf (_dedg _gadb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_afea :=&PdfColorspaceDeviceNAttributes {};
var _cgag *_gadb .PdfObjectDictionary ;switch _edec :=_dedg .(type ){case *_gadb .PdfIndirectObject :_afea ._afcd =_edec ;var _bbbcb bool ;_cgag ,_bbbcb =_edec .PdfObject .(*_gadb .PdfObjectDictionary );if !_bbbcb {_cg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_gadb .PdfObjectDictionary :_cgag =_edec ;case *_gadb .PdfObjectReference :_dcgeb :=_edec .Resolve ();return _abbf (_dcgeb );default:_cg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egff :=_cgag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_egff !=nil {_dedea ,_fcggg :=_gadb .TraceToDirectObject (_egff ).(*_gadb .PdfObjectName );if !_fcggg {_cg .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_bb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_afea .Subtype =_dedea ;};if _ddcbg :=_cgag .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_ddcbg !=nil {_afea .Colorants =_ddcbg ;};if _fgcge :=_cgag .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_fgcge !=nil {_afea .Process =_fgcge ;};if _eecec :=_cgag .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_eecec !=nil {_afea .MixingHints =_eecec ;};return _afea ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_fbecb *PdfFunctionType4 )ToPdfObject ()_gadb .PdfObject {_cddee :=_fbecb ._gcdbg ;if _cddee ==nil {_fbecb ._gcdbg =&_gadb .PdfObjectStream {};_cddee =_fbecb ._gcdbg ;};_egge :=_gadb .MakeDict ();_egge .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gadb .MakeInteger (4));
_ecef :=&_gadb .PdfObjectArray {};for _ ,_egdcf :=range _fbecb .Domain {_ecef .Append (_gadb .MakeFloat (_egdcf ));};_egge .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ecef );_cgdbg :=&_gadb .PdfObjectArray {};for _ ,_bfcd :=range _fbecb .Range {_cgdbg .Append (_gadb .MakeFloat (_bfcd ));
};_egge .Set ("\u0052\u0061\u006eg\u0065",_cgdbg );if _fbecb ._dcff ==nil &&_fbecb .Program !=nil {_fbecb ._dcff =[]byte (_fbecb .Program .String ());};_egge .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gadb .MakeInteger (int64 (len (_fbecb ._dcff ))));
_cddee .Stream =_fbecb ._dcff ;_cddee .PdfObjectDictionary =_egge ;return _cddee ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_fgef *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _bb .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_fgef .S =subtype ;return nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_gdgdg *PdfReader )GetObjectNums ()[]int {return _gdgdg ._becf .GetObjectNums ()};func _eefb (_gfeed *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gfeed }};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_bedfc interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_cec *PdfAnnotationHighlight )ToPdfObject ()_gadb .PdfObject {_cec .PdfAnnotation .ToPdfObject ();_cfdf :=_cec ._defb ;_fadc :=_cfdf .PdfObject .(*_gadb .PdfObjectDictionary );_cec .PdfAnnotationMarkup .appendToPdfDictionary (_fadc );_fadc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_fadc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cec .QuadPoints );return _cfdf ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_dbeb *PdfColorspaceLab )DecodeArray ()[]float64 {_bafcg :=[]float64 {0,100};if _dbeb .Range !=nil &&len (_dbeb .Range )==4{_bafcg =append (_bafcg ,_dbeb .Range ...);}else {_bafcg =append (_bafcg ,-100,100,-100,100);};return _bafcg ;};

// SetDate sets the `M` field of the signature.
func (_ecedeg *PdfSignature )SetDate (date _f .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ecedeg .M =_gadb .MakeString (date .Format (format ));
};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_cbfaf int ,_dbgca *PdfPage );

// ToPdfObject converts the font to a PDF representation.
func (_bcgfe *pdfFontType3 )ToPdfObject ()_gadb .PdfObject {if _bcgfe ._ddab ==nil {_bcgfe ._ddab =&_gadb .PdfIndirectObject {};};_ccaga :=_bcgfe .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_bcgfe ._ddab .PdfObject =_ccaga ;if _bcgfe .FirstChar !=nil {_ccaga .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bcgfe .FirstChar );
};if _bcgfe .LastChar !=nil {_ccaga .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bcgfe .LastChar );};if _bcgfe .Widths !=nil {_ccaga .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bcgfe .Widths );};if _bcgfe .Encoding !=nil {_ccaga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bcgfe .Encoding );
}else if _bcgfe ._bbcg !=nil {_acee :=_bcgfe ._bbcg .ToPdfObject ();if _acee !=nil {_ccaga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_acee );};};if _bcgfe .FontBBox !=nil {_ccaga .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bcgfe .FontBBox );
};if _bcgfe .FontMatrix !=nil {_ccaga .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_bcgfe .FontMatrix );};if _bcgfe .CharProcs !=nil {_ccaga .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_bcgfe .CharProcs );};if _bcgfe .Resources !=nil {_ccaga .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bcgfe .Resources );
};return _bcgfe ._ddab ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_gbcee :=&PdfShadingType2 {};_gbcee .PdfShading =&PdfShading {};_gbcee .PdfShading ._gfbgb =_gadb .MakeIndirectObject (_gadb .MakeDict ());_gbcee .PdfShading ._aaaaa =_gbcee ;return _gbcee ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bdfd ,_baga :=_eba .Open (filePath );if _baga !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_baga );
return nil ,_baga ;};defer _bdfd .Close ();return NewPdfFontFromTTF (_bdfd );};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_acae :_gadb .MakeIndirectObject (_gadb .MakeDict ()),VRI :map[string ]*VRI {}};};func (_daefb *PdfReader )newPdfOutlineItemFromIndirectObject (_ffaa *_gadb .PdfIndirectObject )(*PdfOutlineItem ,error ){_fegc ,_fdabd :=_ffaa .PdfObject .(*_gadb .PdfObjectDictionary );
if !_fdabd {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cadcb :=NewPdfOutlineItem ();_cgafg :=_fegc .Get ("\u0054\u0069\u0074l\u0065");
if _cgafg ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_cbfa ,_cgcbe :=_gadb .GetString (_cgafg );if !_cgcbe {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cgafg );};_cadcb .Title =_cbfa ;if _bebba :=_fegc .Get ("\u0043\u006f\u0075n\u0074");
_bebba !=nil {_bdffd ,_aaaaf :=_bebba .(*_gadb .PdfObjectInteger );if !_aaaaf {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_bebba );};_eeea :=int64 (*_bdffd );
_cadcb .Count =&_eeea ;};if _ggga :=_fegc .Get ("\u0044\u0065\u0073\u0074");_ggga !=nil {_cadcb .Dest =_gadb .ResolveReference (_ggga );if !_daefb ._fdbdd {_gcaec :=_daefb .traverseObjectData (_cadcb .Dest );if _gcaec !=nil {return nil ,_gcaec ;};};};if _abgca :=_fegc .Get ("\u0041");
_abgca !=nil {_cadcb .A =_gadb .ResolveReference (_abgca );if !_daefb ._fdbdd {_debf :=_daefb .traverseObjectData (_cadcb .A );if _debf !=nil {return nil ,_debf ;};};};if _agffb :=_fegc .Get ("\u0053\u0045");_agffb !=nil {_cadcb .SE =nil ;};if _gbffg :=_fegc .Get ("\u0043");
_gbffg !=nil {_cadcb .C =_gadb .ResolveReference (_gbffg );};if _gefb :=_fegc .Get ("\u0046");_gefb !=nil {_cadcb .F =_gadb .ResolveReference (_gefb );};return _cadcb ,nil ;};func _dgae (_ggebfc *_gadb .PdfIndirectObject )(*PdfOutline ,error ){_cead ,_agadc :=_ggebfc .PdfObject .(*_gadb .PdfObjectDictionary );
if !_agadc {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ccfaga :=NewPdfOutline ();if _fbcc :=_cead .Get ("\u0054\u0079\u0070\u0065");
_fbcc !=nil {_adfd ,_affb :=_fbcc .(*_gadb .PdfObjectName );if _affb {if *_adfd !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_adfd );
};};};if _ebbbf :=_cead .Get ("\u0043\u006f\u0075n\u0074");_ebbbf !=nil {_gfdg ,_ebab :=_gadb .GetNumberAsInt64 (_ebbbf );if _ebab !=nil {return nil ,_ebab ;};_ccfaga .Count =&_gfdg ;};return _ccfaga ,nil ;};

// Encoder returns the font's text encoder.
func (_facba *pdfFontSimple )Encoder ()_gcc .TextEncoder {if _facba ._ddffd !=nil {return _facba ._ddffd ;};if _facba ._gagdd !=nil {return _facba ._gagdd ;};_bgbg ,_ :=_gcc .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bgbg ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_fcacb *VRI )ToPdfObject ()*_gadb .PdfObjectDictionary {_cefgc :=_gadb .MakeDict ();_cefgc .SetIfNotNil (_gadb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_fgaa (_fcacb .Cert ));_cefgc .SetIfNotNil (_gadb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_fgaa (_fcacb .OCSP ));
_cefgc .SetIfNotNil (_gadb .PdfObjectName ("\u0043\u0052\u004c"),_fgaa (_fcacb .CRL ));_cefgc .SetIfNotNil ("\u0054\u0055",_fcacb .TU );_cefgc .SetIfNotNil ("\u0054\u0053",_fcacb .TS );return _cefgc ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _gadb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _gadb .PdfObject ;Contents _gadb .PdfObject ;
Rotate *int64 ;Group _gadb .PdfObject ;Thumb _gadb .PdfObject ;B _gadb .PdfObject ;Dur _gadb .PdfObject ;Trans _gadb .PdfObject ;AA _gadb .PdfObject ;Metadata _gadb .PdfObject ;PieceInfo _gadb .PdfObject ;StructParents _gadb .PdfObject ;ID _gadb .PdfObject ;
PZ _gadb .PdfObject ;SeparationInfo _gadb .PdfObject ;Tabs _gadb .PdfObject ;TemplateInstantiated _gadb .PdfObject ;PresSteps _gadb .PdfObject ;UserUnit _gadb .PdfObject ;VP _gadb .PdfObject ;Annots _gadb .PdfObject ;_ecca []*PdfAnnotation ;_dfbg *_gadb .PdfObjectDictionary ;
_fgbea *_gadb .PdfIndirectObject ;_ffaee _gadb .PdfObjectDictionary ;_fcga *PdfReader ;};func (_bbbb *PdfReader )newPdfActionResetFormFromDict (_defd *_gadb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_defd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_defd .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func _bdeeg ()*modelManager {_dadec :=modelManager {};_dadec ._dfdb =map[PdfModel ]_gadb .PdfObject {};_dadec ._eeedc =map[_gadb .PdfObject ]PdfModel {};return &_dadec ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _gadb .PdfObject ;H _gadb .PdfObject ;};func (_faege *PdfSignature )extractChainFromPKCS7 ()([]*_g .Certificate ,error ){_dbcfd ,_eaeabc :=_fe .Parse (_faege .Contents .Bytes ());if _eaeabc !=nil {return nil ,_eaeabc ;
};return _dbcfd .Certificates ,nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fdfcd *PdfPageResourcesColorspaces )Set (key _gadb .PdfObjectName ,val PdfColorspace ){if _ ,_adfe :=_fdfcd .Colorspaces [string (key )];!_adfe {_fdfcd .Names =append (_fdfcd .Names ,string (key ));};_fdfcd .Colorspaces [string (key )]=val ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bdbe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_gadb .PdfObject {_eddb :=_gadb .MakeDict ();if _bdbe .Subtype !=nil {_eddb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bdbe .Subtype );};_eddb .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bdbe .Colorants );
_eddb .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bdbe .Process );_eddb .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bdbe .MixingHints );if _bdbe ._afcd !=nil {_bdbe ._afcd .PdfObject =_eddb ;return _bdbe ._afcd ;
};return _eddb ;};func (_fgb *PdfReader )newPdfAnnotationStampFromDict (_dgef *_gadb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_dbcc :=PdfAnnotationStamp {};_defdb ,_gcd :=_fgb .newPdfAnnotationMarkupFromDict (_dgef );if _gcd !=nil {return nil ,_gcd ;
};_dbcc .PdfAnnotationMarkup =_defdb ;_dbcc .Name =_dgef .Get ("\u004e\u0061\u006d\u0065");return &_dbcc ,nil ;};func (_efegdc *PdfWriter )setWriter (_dbdfc _cc .Writer ){_efegdc ._fafba =_efegdc ._abceg ;_efegdc ._agfdb =_c .NewWriter (_dbdfc );};func (_cbgc *PdfReader )newPdfActionNamedFromDict (_bfc *_gadb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_bfc .Get ("\u004e")},nil ;
};func (_bbgfd *PdfWriter )addObject (_abacf _gadb .PdfObject )bool {_egeg :=_bbgfd .hasObject (_abacf );if !_egeg {_abcfa :=_gadb .ResolveReferencesDeep (_abacf ,_bbgfd ._fdac );if _abcfa !=nil {_cg .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_abcfa );
};_bbgfd ._agefec =append (_bbgfd ._agefec ,_abacf );_bbgfd ._gacff [_abacf ]=struct{}{};return true ;};return false ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_dddc :=NewPdfAnnotation ();_egbf :=&PdfAnnotationProjection {};_egbf .PdfAnnotation =_dddc ;_egbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dddc .SetContext (_egbf );return _egbf ;};var (CourierName =_bf .CourierName ;
CourierBoldName =_bf .CourierBoldName ;CourierObliqueName =_bf .CourierObliqueName ;CourierBoldObliqueName =_bf .CourierBoldObliqueName ;HelveticaName =_bf .HelveticaName ;HelveticaBoldName =_bf .HelveticaBoldName ;HelveticaObliqueName =_bf .HelveticaObliqueName ;
HelveticaBoldObliqueName =_bf .HelveticaBoldObliqueName ;SymbolName =_bf .SymbolName ;ZapfDingbatsName =_bf .ZapfDingbatsName ;TimesRomanName =_bf .TimesRomanName ;TimesBoldName =_bf .TimesBoldName ;TimesItalicName =_bf .TimesItalicName ;TimesBoldItalicName =_bf .TimesBoldItalicName ;
);

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _gadb .PdfObject )(*PdfFont ,error ){return _dcba (fontObj ,true )};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func _fagab (_affg _gadb .PdfObject )(*_gadb .PdfObjectDictionary ,*fontCommon ,error ){_fegdc :=&fontCommon {};if _edecg ,_cacca :=_affg .(*_gadb .PdfIndirectObject );_cacca {_fegdc ._febe =_edecg .ObjectNumber ;};_aegcf ,_dgccgc :=_gadb .GetDict (_affg );
if !_dgccgc {_cg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_affg );
return nil ,nil ,ErrFontNotSupported ;};_bgebe ,_dgccgc :=_gadb .GetNameVal (_aegcf .Get ("\u0054\u0079\u0070\u0065"));if !_dgccgc {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _bgebe !="\u0046\u006f\u006e\u0074"{_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_bgebe ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_gadb .ErrTypeError ;};_cece ,_dgccgc :=_gadb .GetNameVal (_aegcf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dgccgc {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fegdc ._dccge =_cece ;_ggage ,_dgccgc :=_gadb .GetNameVal (_aegcf .Get ("\u004e\u0061\u006d\u0065"));if _dgccgc {_fegdc ._gfgad =_ggage ;};_fgfcc :=_aegcf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _fgfcc !=nil {_fegdc ._eagb =_gadb .TraceToDirectObject (_fgfcc );_fada ,_agfg :=_adfg (_fegdc ._eagb ,_fegdc );if _agfg !=nil {return _aegcf ,_fegdc ,_agfg ;};_fegdc ._ddbg =_fada ;}else if _cece =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_cece =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ddebd ,_dbedg :=_gde .NewCIDSystemInfo (_aegcf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _dbedg !=nil {return _aegcf ,_fegdc ,_dbedg ;};_ddgd :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_ddebd .Registry ,_ddebd .Ordering );if _gde .IsPredefinedCMap (_ddgd ){_fegdc ._ddbg ,_dbedg =_gde .LoadPredefinedCMap (_ddgd );
if _dbedg !=nil {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ddgd ,_dbedg );
};};};_fbae :=_aegcf .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _fbae !=nil {_eada ,_acfb :=_caag (_fbae );if _acfb !=nil {_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acfb );
return _aegcf ,_fegdc ,_acfb ;};_fegdc ._bbgfe =_eada ;};if _cece !="\u0054\u0079\u0070e\u0033"{_gbbdd ,_bbbga :=_gadb .GetNameVal (_aegcf .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bbbga {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _aegcf ,_fegdc ,ErrRequiredAttributeMissing ;};_fegdc ._bbecb =_gbbdd ;};return _aegcf ,_fegdc ,nil ;};

// GetPerms returns the Permissions dictionary
func (_gbbgc *PdfReader )GetPerms ()*Permissions {return _gbbgc ._gaeg };

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// GetCustomInfo returns a custom info value for the specified name.
func (_adbga *PdfInfo )GetCustomInfo (name string )*_gadb .PdfObjectString {var _bcdf *_gadb .PdfObjectString ;if _adbga ._adbb ==nil {return _bcdf ;};if _bdgbfa ,_cgac :=_adbga ._adbb .Get (*_gadb .MakeName (name )).(*_gadb .PdfObjectString );_cgac {_bcdf =_bdgbfa ;
};return _bcdf ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_edbaf *PdfWriter )AddPage (page *PdfPage )error {const _fafgg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_bedge (page );_adgdgg :=page .ToPdfObject ();_cg .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_cg .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_adgdgg );_caadg ,_bfccf :=_gadb .GetIndirect (_adgdgg );if !_bfccf {return _bb .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_cg .Log .Trace ("\u0025\u0073",_caadg );_cg .Log .Trace ("\u0025\u0073",_caadg .PdfObject );_deag ,_bfccf :=_gadb .GetDict (_caadg .PdfObject );if !_bfccf {return _bb .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ggecf ,_bfccf :=_gadb .GetName (_deag .Get ("\u0054\u0079\u0070\u0065"));if !_bfccf {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_deag .Get ("\u0054\u0079\u0070\u0065"));
};if _ggecf .String ()!="\u0050\u0061\u0067\u0065"{return _bb .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fddga :=[]_gadb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_dfadb ,_gaafa :=_gadb .GetIndirect (_deag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_cg .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_deag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gaafa );
for _gaafa {_cg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dfadb );_afbcg ,_fcaceb :=_gadb .GetDict (_dfadb .PdfObject );if !_fcaceb {return _bb .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bagff :=range _fddga {_cg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bagff );if _deag .Get (_bagff )!=nil {_cg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ggfga :=_afbcg .Get (_bagff );_ggfga !=nil {_cg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bagff );_deag .Set (_bagff ,_ggfga );};};_dfadb ,_gaafa =_gadb .GetIndirect (_afbcg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_cg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_afbcg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_cg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_deag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edbaf ._cfbfa );_caadg .PdfObject =_deag ;_ceab ,_bfccf :=_gadb .GetDict (_edbaf ._cfbfa .PdfObject );if !_bfccf {return _bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bgafa ,_bfccf :=_gadb .GetArray (_ceab .Get ("\u004b\u0069\u0064\u0073"));if !_bfccf {return _bb .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bgafa .Append (_caadg );_edbaf ._agcgc [_deag ]=struct{}{};_fcfd ,_bfccf :=_gadb .GetInt (_ceab .Get ("\u0043\u006f\u0075n\u0074"));if !_bfccf {return _bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_fcfd =*_fcfd +1;if page ._fcga ==nil {_cggcb :=_ef .Track (_edbaf ._bbcff ,_fafgg );if _cggcb !=nil {return _cggcb ;};}else {_geefge :=_ef .Track (page ._fcga ._cddbe ,_fafgg );if _geefge !=nil {return _geefge ;};};_edbaf .addObject (_caadg );_beaa :=_edbaf .addObjects (_deag );
if _beaa !=nil {return _beaa ;};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_babc *PdfShadingType7 )ToPdfObject ()_gadb .PdfObject {_babc .PdfShading .ToPdfObject ();_affa ,_fdbb :=_babc .getShadingDict ();if _fdbb !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _babc .BitsPerCoordinate !=nil {_affa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_babc .BitsPerCoordinate );};if _babc .BitsPerComponent !=nil {_affa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_babc .BitsPerComponent );
};if _babc .BitsPerFlag !=nil {_affa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_babc .BitsPerFlag );};if _babc .Decode !=nil {_affa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_babc .Decode );};if _babc .Function !=nil {if len (_babc .Function )==1{_affa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_babc .Function [0].ToPdfObject ());
}else {_eebef :=_gadb .MakeArray ();for _ ,_egcgc :=range _babc .Function {_eebef .Append (_egcgc .ToPdfObject ());};_affa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eebef );};};return _babc ._gfbgb ;};func (_agbd *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};


// GetCharMetrics returns the char metrics for character code `code`.
func (_eabc pdfFontType3 )GetCharMetrics (code _gcc .CharCode )(_bf .CharMetrics ,bool ){if _cdfdd ,_ccdae :=_eabc ._ddfgd [code ];_ccdae {return _bf .CharMetrics {Wx :_cdfdd },true ;};if _bf .IsStdFont (_bf .StdFontName (_eabc ._bbecb )){return _bf .CharMetrics {Wx :250},true ;
};return _bf .CharMetrics {},false ;};

// K returns the value of the key component of the color.
func (_ecdab *PdfColorDeviceCMYK )K ()float64 {return _ecdab [3]};func (_eaeee *PdfReader )loadDSS ()(*DSS ,error ){if _eaeee ._becf .GetCrypter ()!=nil &&!_eaeee ._becf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_defg :=_eaeee ._gbef .Get ("\u0044\u0053\u0053");if _defg ==nil {return nil ,nil ;};_bdgfc ,_ :=_gadb .GetIndirect (_defg );_defg =_gadb .TraceToDirectObject (_defg );switch _gdefa :=_defg .(type ){case *_gadb .PdfObjectNull :return nil ,nil ;case *_gadb .PdfObjectDictionary :return _fgbc (_bdgfc ,_gdefa );
};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_defg );};func (_babdg Image )getBase ()_cf .ImageBase {return _cf .NewImageBase (int (_babdg .Width ),int (_babdg .Height ),int (_babdg .BitsPerComponent ),_babdg .ColorComponents ,_babdg .Data ,_babdg ._egfg ,_babdg ._bdge );
};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_gdbeg PdfModel ;_fbbf *_gadb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_gadb .PdfObjectName ;T *_gadb .PdfObjectString ;TU *_gadb .PdfObjectString ;TM *_gadb .PdfObjectString ;
Ff *_gadb .PdfObjectInteger ;V _gadb .PdfObject ;DV _gadb .PdfObject ;AA _gadb .PdfObject ;VariableText *VariableText ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_daecf *PdfOutline )GetContainingPdfObject ()_gadb .PdfObject {return _daecf ._accdf };

// GetFillImage get attached model.Image in push button.
func (_cddf *PdfFieldButton )GetFillImage ()*Image {if _cddf .IsPush (){return _cddf ._gadcgc ;};return nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_gadb .PdfObjectArray ;Domain *_gadb .PdfObjectArray ;Function []PdfFunction ;Extend *_gadb .PdfObjectArray ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_degge pdfCIDFontType0 )GetCharMetrics (code _gcc .CharCode )(_bf .CharMetrics ,bool ){_faaed :=_degge ._dbge ;if _bfff ,_ffdd :=_degge ._deaf [code ];_ffdd {_faaed =_bfff ;};return _bf .CharMetrics {Wx :_faaed },true ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_aabcb *PdfShading )GetContext ()PdfModel {return _aabcb ._aaaaa };

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ae :=&PdfAction {};_ae ._ec =_gadb .MakeIndirectObject (_gadb .MakeDict ());return _ae ;};func _dfaga (_efff *_gadb .PdfObjectStream )(*PdfFunctionType0 ,error ){_badbd :=&PdfFunctionType0 {};_badbd ._adeab =_efff ;_bbfd :=_efff .PdfObjectDictionary ;
_cbfg ,_bebg :=_gadb .TraceToDirectObject (_bbfd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gadb .PdfObjectArray );if !_bebg {_cg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cbfg .Len ()< 0||_cbfg .Len ()%2!=0{_cg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_badbd .NumInputs =_cbfg .Len ()/2;_aefaf ,_aggd :=_cbfg .ToFloat64Array ();if _aggd !=nil {return nil ,_aggd ;};_badbd .Domain =_aefaf ;_cbfg ,_bebg =_gadb .TraceToDirectObject (_bbfd .Get ("\u0052\u0061\u006eg\u0065")).(*_gadb .PdfObjectArray );if !_bebg {_cg .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cbfg .Len ()< 0||_cbfg .Len ()%2!=0{return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_badbd .NumOutputs =_cbfg .Len ()/2;_bbbbg ,_aggd :=_cbfg .ToFloat64Array ();if _aggd !=nil {return nil ,_aggd ;};_badbd .Range =_bbbbg ;_cbfg ,_bebg =_gadb .TraceToDirectObject (_bbfd .Get ("\u0053\u0069\u007a\u0065")).(*_gadb .PdfObjectArray );if !_bebg {_cg .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gcac ,_aggd :=_cbfg .ToIntegerArray ();
if _aggd !=nil {return nil ,_aggd ;};if len (_gcac )!=_badbd .NumInputs {_cg .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_badbd .Size =_gcac ;_adbfg ,_bebg :=_gadb .TraceToDirectObject (_bbfd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_gadb .PdfObjectInteger );
if !_bebg {_cg .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_adbfg !=1&&*_adbfg !=2&&*_adbfg !=4&&*_adbfg !=8&&*_adbfg !=12&&*_adbfg !=16&&*_adbfg !=24&&*_adbfg !=32{_cg .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_adbfg );
return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_badbd .BitsPerSample =int (*_adbfg );_badbd .Order =1;_bbee ,_bebg :=_gadb .TraceToDirectObject (_bbfd .Get ("\u004f\u0072\u0064e\u0072")).(*_gadb .PdfObjectInteger );
if _bebg {if *_bbee !=1&&*_bbee !=3{_cg .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_bbee );return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_badbd .Order =int (*_bbee );
};_cbfg ,_bebg =_gadb .TraceToDirectObject (_bbfd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gadb .PdfObjectArray );if _bebg {_dcabf ,_aeac :=_cbfg .ToFloat64Array ();if _aeac !=nil {return nil ,_aeac ;};_badbd .Encode =_dcabf ;};_cbfg ,_bebg =_gadb .TraceToDirectObject (_bbfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_gadb .PdfObjectArray );
if _bebg {_dfde ,_ddga :=_cbfg .ToFloat64Array ();if _ddga !=nil {return nil ,_ddga ;};_badbd .Decode =_dfde ;};_gbbcg ,_aggd :=_gadb .DecodeStream (_efff );if _aggd !=nil {return nil ,_aggd ;};_badbd ._daebe =_gbbcg ;return _badbd ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_gadb .PdfObjectString ;Author *_gadb .PdfObjectString ;Subject *_gadb .PdfObjectString ;Keywords *_gadb .PdfObjectString ;Creator *_gadb .PdfObjectString ;Producer *_gadb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_gadb .PdfObjectName ;_adbb *_gadb .PdfObjectDictionary ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dcccc *PdfPageResources )SetXObjectFormByName (keyName _gadb .PdfObjectName ,xform *XObjectForm )error {_eagca :=xform .ToPdfObject ().(*_gadb .PdfObjectStream );_dccgd :=_dcccc .SetXObjectByName (keyName ,_eagca );return _dccgd ;};func (_dga *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cdeg :=NewPdfAnnotation ();_gfga :=&PdfAnnotationSquiggly {};_gfga .PdfAnnotation =_cdeg ;_gfga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdeg .SetContext (_gfga );return _gfga ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_aaga *PdfField )Flags ()FieldFlag {var _cgfa FieldFlag ;_eafe ,_bdgc :=_aaga .inherit (func (_ecfc *PdfField )bool {if _ecfc .Ff !=nil {_cgfa =FieldFlag (*_ecfc .Ff );return true ;};return false ;});if _bdgc !=nil {_cg .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bdgc );
};if !_eafe {_cg .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cgfa ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fcccb :=&XObjectForm {};_fcdac :=&_gadb .PdfObjectStream {};_fcdac .PdfObjectDictionary =_gadb .MakeDict ();_fcccb ._feadbe =_fcdac ;return _fcccb ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_aab :=NewPdfAnnotation ();_cag :=&PdfAnnotationPolygon {};_cag .PdfAnnotation =_aab ;_cag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aab .SetContext (_cag );return _cag ;};

// String implements interface PdfObject.
func (_bbd *PdfAction )String ()string {_eab ,_efd :=_bbd .ToPdfObject ().(*_gadb .PdfIndirectObject );if _efd {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bbd ._gf ,_eab .PdfObject .String ());};return "";};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_dfed *PdfAcroForm )ToPdfObject ()_gadb .PdfObject {_fdab :=_dfed ._ggff ;_bcbg :=_fdab .PdfObject .(*_gadb .PdfObjectDictionary );if _dfed .Fields !=nil {_gagab :=_gadb .PdfObjectArray {};for _ ,_ceca :=range *_dfed .Fields {_adecd :=_ceca .GetContext ();
if _adecd !=nil {_gagab .Append (_adecd .ToPdfObject ());}else {_gagab .Append (_ceca .ToPdfObject ());};};_bcbg .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_gagab );};if _dfed .NeedAppearances !=nil {_bcbg .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_dfed .NeedAppearances );
};if _dfed .SigFlags !=nil {_bcbg .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_dfed .SigFlags );};if _dfed .CO !=nil {_bcbg .Set ("\u0043\u004f",_dfed .CO );};if _dfed .DR !=nil {_bcbg .Set ("\u0044\u0052",_dfed .DR .ToPdfObject ());};if _dfed .DA !=nil {_bcbg .Set ("\u0044\u0041",_dfed .DA );
};if _dfed .Q !=nil {_bcbg .Set ("\u0051",_dfed .Q );};if _dfed .XFA !=nil {_bcbg .Set ("\u0058\u0046\u0041",_dfed .XFA );};if _dfed .ADBEEchoSign !=nil {_bcbg .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_dfed .ADBEEchoSign );
};return _fdab ;};func _aagc ()string {_cccgd .Lock ();defer _cccgd .Unlock ();return _eecfb };

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_feca *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_gadb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ccce *_gadb .PdfIndirectObject ;};func (_gfdbd *LTV )getOCSPs (_afbe []*_g .Certificate ,_egaaa map[string ]*_g .Certificate )([][]byte ,error ){_bafe :=make ([][]byte ,0,len (_afbe ));
for _ ,_aggbb :=range _afbe {for _ ,_ggbg :=range _aggbb .OCSPServer {if _gfdbd .CertClient .IsCA (_aggbb ){continue ;};_bbdg ,_agbab :=_egaaa [_aggbb .Issuer .CommonName ];if !_agbab {_cg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_gadcc ,_cfbcb :=_gfdbd .OCSPClient .MakeRequest (_ggbg ,_aggbb ,_bbdg );if _cfbcb !=nil {_cg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_cfbcb );
continue ;};_bafe =append (_bafe ,_gadcc );};};return _bafe ,nil ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_befga *PdfPage )GetRotate ()(int64 ,error ){if _befga .Rotate !=nil {return *_befga .Rotate ,nil ;};_dgaad :=_befga .Parent ;for _dgaad !=nil {_cfcbab ,_efdcd :=_gadb .GetDict (_dgaad );if !_efdcd {return 0,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _bfcga :=_cfcbab .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bfcga !=nil {_bfbf ,_fggab :=_gadb .GetInt (_bfcga );if !_fggab {return 0,_bb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");
};if _bfbf !=nil {return int64 (*_bfbf ),nil ;};return 0,_bb .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dgaad =_cfcbab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_bb .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject converts rectangle to a PDF object.
func (_gaecd *PdfRectangle )ToPdfObject ()_gadb .PdfObject {return _gadb .MakeArray (_gadb .MakeFloat (_gaecd .Llx ),_gadb .MakeFloat (_gaecd .Lly ),_gadb .MakeFloat (_gaecd .Urx ),_gadb .MakeFloat (_gaecd .Ury ));};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_efdc :=NewPdfAction ();_cddc :=&PdfActionLaunch {};_cddc .PdfAction =_efdc ;_efdc .SetContext (_cddc );return _cddc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_abdd *PdfFilespec )GetContainingPdfObject ()_gadb .PdfObject {return _abdd ._ccad };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_defca *_gadb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_gadb .PdfObjectName ;Filter *_gadb .PdfObjectName ;SubFilter *_gadb .PdfObjectName ;Contents *_gadb .PdfObjectString ;Cert _gadb .PdfObject ;ByteRange *_gadb .PdfObjectArray ;Reference *_gadb .PdfObjectArray ;Changes *_gadb .PdfObjectArray ;Name *_gadb .PdfObjectString ;
M *_gadb .PdfObjectString ;Location *_gadb .PdfObjectString ;Reason *_gadb .PdfObjectString ;ContactInfo *_gadb .PdfObjectString ;R *_gadb .PdfObjectInteger ;V *_gadb .PdfObjectInteger ;PropBuild *_gadb .PdfObjectDictionary ;PropAuthTime *_gadb .PdfObjectInteger ;
PropAuthType *_gadb .PdfObjectName ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _gadb .PdfObjectName ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_cfcad *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _cfdb []*PdfField ;if _cfcad .AcroForm !=nil {_cfdb =_cfcad .AcroForm .AllFields ();};_aegae :=make (map[*PdfField ]struct{},len (_cfdb ));for _ ,_fcda :=range _cfdb {_aegae [_fcda ]=struct{}{};
};for _ ,_fabc :=range _cfcad .PageList {_efadd ,_bgbaa :=_fabc .GetAnnotations ();if _bgbaa !=nil {return false ,_bgbaa ;};for _ ,_dagdg :=range _efadd {_decad ,_bffef :=_dagdg .GetContext ().(*PdfAnnotationWidget );if !_bffef {continue ;};_dcdeef :=_decad .Field ();
if _dcdeef ==nil {return true ,nil ;};if _ ,_gaddcc :=_aegae [_dcdeef ];!_gaddcc {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_cfdce OutlineDest )ToPdfObject ()_gadb .PdfObject {if (_cfdce .PageObj ==nil &&_cfdce .Page < 0)||_cfdce .Mode ==""{return _gadb .MakeNull ();};_aeaf :=_gadb .MakeArray ();if _cfdce .PageObj !=nil {_aeaf .Append (_cfdce .PageObj );}else {_aeaf .Append (_gadb .MakeInteger (_cfdce .Page ));
};_aeaf .Append (_gadb .MakeName (_cfdce .Mode ));switch _cfdce .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_aeaf .Append (_gadb .MakeFloat (_cfdce .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_aeaf .Append (_gadb .MakeFloat (_cfdce .X ));
case "\u0058\u0059\u005a":_aeaf .Append (_gadb .MakeFloat (_cfdce .X ));_aeaf .Append (_gadb .MakeFloat (_cfdce .Y ));_aeaf .Append (_gadb .MakeFloat (_cfdce .Zoom ));default:_aeaf .Set (1,_gadb .MakeName ("\u0046\u0069\u0074"));};return _aeaf ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_gcag *PdfAppender )SetDocInfo (info *PdfInfo ){_gcag ._dbccd =info };

// ToPdfObject implements interface PdfModel.
func (_edg *PdfActionNamed )ToPdfObject ()_gadb .PdfObject {_edg .PdfAction .ToPdfObject ();_edf :=_edg ._ec ;_fad :=_edf .PdfObject .(*_gadb .PdfObjectDictionary );_fad .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeNamed )));_fad .SetIfNotNil ("\u004e",_edg .N );
return _edf ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_fec :=NewPdfAnnotation ();_bccg :=&PdfAnnotationStamp {};_bccg .PdfAnnotation =_fec ;_bccg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fec .SetContext (_bccg );return _bccg ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_beec FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_beec .Mask ()&^fl .Mask ())};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_gadb .PdfObjectArray ;Matrix *_gadb .PdfObjectArray ;Function []PdfFunction ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_ffegc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bdeb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_dcag ,_deaaa :=_ffegc .GetNumPages ();if _deaaa !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deaaa );
return nil ,_deaaa ;};for _aebfb :=1;_aebfb <=_dcag ;_aebfb ++{_cfbee ,_fcdga :=_ffegc .GetPage (_aebfb );if _fcdga !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdga );return nil ,_fcdga ;};if opts .PageProcessCallback !=nil {_fcdga =opts .PageProcessCallback (_aebfb ,_cfbee );
if _fcdga !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdga );return nil ,_fcdga ;};}else if opts .PageCallback !=nil {opts .PageCallback (_aebfb ,_cfbee );};_fcdga =_bdeb .AddPage (_cfbee );if _fcdga !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdga );
return nil ,_fcdga ;};};_bdeb ._dagb =_ffegc .PdfVersion ();if !opts .SkipInfo {_ffgdg ,_dggee :=_ffegc .GetPdfInfo ();if _dggee !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dggee );}else {_bdeb ._ceeegd .PdfObject =_ffgdg .ToPdfObject ();
};};if !opts .SkipMetadata {if _bgdb :=_ffegc ._gbef .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bgdb !=nil {if _degaf :=_bdeb .SetCatalogMetadata (_bgdb );_degaf !=nil {return nil ,_degaf ;};};};if !opts .SkipAcroForm {_aedce :=_bdeb .SetForms (_ffegc .AcroForm );
if _aedce !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aedce );return nil ,_aedce ;};};if !opts .SkipOutlines {_bdeb .AddOutlineTree (_ffegc .GetOutlineTree ());};if !opts .SkipOCProperties {_cegac ,_dbec :=_ffegc .GetOCProperties ();
if _dbec !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbec );}else {_dbec =_bdeb .SetOCProperties (_cegac );if _dbec !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbec );};};};if !opts .SkipPageLabels {_bgedg ,_gfbgf :=_ffegc .GetPageLabels ();
if _gfbgf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfbgf );}else {_gfbgf =_bdeb .SetPageLabels (_bgedg );if _gfbgf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfbgf );};};};if !opts .SkipNamedDests {_egcd ,_bdggf :=_ffegc .GetNamedDestinations ();
if _bdggf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdggf );}else {_bdggf =_bdeb .SetNamedDestinations (_egcd );if _bdggf !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdggf );};};};if !opts .SkipNameDictionary {_egbe ,_cbaa :=_ffegc .GetNameDictionary ();
if _cbaa !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbaa );}else {_cbaa =_bdeb .SetNameDictionary (_egbe );if _cbaa !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbaa );};};};if !opts .SkipRotation &&_ffegc .Rotate !=nil {if _degecg :=_bdeb .SetRotation (*_ffegc .Rotate );
_degecg !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_degecg );};};return &_bdeb ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _gadb .PdfObject ;ColorSpace _gadb .PdfObject ;Pattern _gadb .PdfObject ;Shading _gadb .PdfObject ;XObject _gadb .PdfObject ;Font _gadb .PdfObject ;ProcSet _gadb .PdfObject ;Properties _gadb .PdfObject ;_gedfg *_gadb .PdfObjectDictionary ;
_bbgfa *PdfPageResourcesColorspaces ;};

// ToPdfObject implements interface PdfModel.
func (_cgf *PdfActionGoTo3DView )ToPdfObject ()_gadb .PdfObject {_cgf .PdfAction .ToPdfObject ();_bed :=_cgf ._ec ;_ebf :=_bed .PdfObject .(*_gadb .PdfObjectDictionary );_ebf .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeGoTo3DView )));_ebf .SetIfNotNil ("\u0054\u0041",_cgf .TA );
_ebf .SetIfNotNil ("\u0056",_cgf .V );return _bed ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cfabf *XObjectForm )SetContentStream (content []byte ,encoder _gadb .StreamEncoder )error {_daecfc :=content ;if encoder ==nil {if _cfabf .Filter !=nil {encoder =_cfabf .Filter ;}else {encoder =_gadb .NewRawEncoder ();};};_dgbbd ,_bffgd :=encoder .EncodeBytes (_daecfc );
if _bffgd !=nil {return _bffgd ;};_daecfc =_dgbbd ;_cfabf .Stream =_daecfc ;_cfabf .Filter =encoder ;return nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_eagdcg *PdfOutputIntent )GetContainingPdfObject ()_gadb .PdfObject {return _eagdcg ._bbbac };

// GetXHeight returns the XHeight of the font `descriptor`.
func (_caeb *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _gadb .GetNumberAsFloat (_caeb .XHeight );};

// WriteString outputs the object as it is to be written to file.
func (_ddadd *PdfTransformParamsDocMDP )WriteString ()string {return _ddadd .ToPdfObject ().WriteString ();};func (_cefc *PdfReader )newPdfActionSubmitFormFromDict (_dgdg *_gadb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_aecf ,_bac :=_acb (_dgdg .Get ("\u0046"));
if _bac !=nil {return nil ,_bac ;};return &PdfActionSubmitForm {F :_aecf ,Fields :_dgdg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dgdg .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_gadb .PdfObjectDictionary )(*PdfPageResources ,error ){_bccda :=NewPdfPageResources ();if _bgfff :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bgfff !=nil {_bccda .ExtGState =_bgfff ;};if _bbebf :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_bbebf !=nil &&!_gadb .IsNullObject (_bbebf ){_bccda .ColorSpace =_bbebf ;};if _dgggb :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_dgggb !=nil {_bccda .Pattern =_dgggb ;};if _adbc :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_adbc !=nil {_bccda .Shading =_adbc ;
};if _cgcf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cgcf !=nil {_bccda .XObject =_cgcf ;};if _bdbcb :=_gadb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_bdbcb !=nil {_bccda .Font =_bdbcb ;};if _aagb :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_aagb !=nil {_bccda .ProcSet =_aagb ;};if _feab :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_feab !=nil {_bccda .Properties =_feab ;};return _bccda ,nil ;};func (_caf *PdfReader )loadAction (_dcf _gadb .PdfObject )(*PdfAction ,error ){if _egfb ,_cba :=_gadb .GetIndirect (_dcf );
_cba {_fabg ,_gfd :=_caf .newPdfActionFromIndirectObject (_egfb );if _gfd !=nil {return nil ,_gfd ;};return _fabg ,nil ;}else if !_gadb .IsNullObject (_dcf ){return nil ,_bb .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func _dbeee (_bcdfce *_gadb .PdfObjectArray )(float64 ,error ){_efgcg ,_aabcgg :=_bcdfce .ToFloat64Array ();if _aabcgg !=nil {_cg .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcdfce ,_aabcgg );
};switch len (_efgcg ){case 1:return _efgcg [0],nil ;case 3:_dbdff :=PdfColorspaceDeviceRGB {};_fagfc ,_fbcge :=_dbdff .ColorFromFloats (_efgcg );if _fbcge !=nil {return 0.0,_fbcge ;};return _fagfc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_dfegf :=PdfColorspaceDeviceCMYK {};
_efgce ,_bdedf :=_dfegf .ColorFromFloats (_efgcg );if _bdedf !=nil {return 0.0,_bdedf ;};_baffd ,_bdedf :=_dfegf .ColorToRGB (_efgce .(*PdfColorDeviceCMYK ));if _bdedf !=nil {return 0.0,_bdedf ;};return _baffd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_aabcgg =_bb .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_cg .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcdfce ,_aabcgg );
return 0.0,_aabcgg ;};

// IsCID returns true if the underlying font is CID.
func (_ffabf *PdfFont )IsCID ()bool {return _ffabf .baseFields ().isCIDFont ()};func (_ffef *PdfWriter )writeDocumentVersion (){if _ffef ._gfdfd {_ffef .writeString ("\u000a");}else {_ffef .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_ffef ._dagb .Major ,_ffef ._dagb .Minor ));
_ffef .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};func _gegee (_cfaeb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cfaeb }};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_bgb *PdfAppender )UpdateObject (obj _gadb .PdfObject ){_bgb .replaceObject (obj ,obj );if _ ,_baca :=_bgb ._bge [obj ];!_baca {_bgb ._bbac =append (_bgb ._bbac ,obj );_bgb ._bge [obj ]=struct{}{};};};func (_bfe *PdfReader )newPdfActionThreadFromDict (_feec *_gadb .PdfObjectDictionary )(*PdfActionThread ,error ){_edcc ,_bgg :=_acb (_feec .Get ("\u0046"));
if _bgg !=nil {return nil ,_bgg ;};return &PdfActionThread {D :_feec .Get ("\u0044"),B :_feec .Get ("\u0042"),F :_edcc },nil ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_bbbac :_gadb .MakeDict (),ColorComponents :colorComponents };
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cbaf *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdc ,_cege :=_gadb .GetNumbersAsFloat (objects );
if _cege !=nil {return nil ,_cege ;};return _cbaf .ColorFromFloats (_gdc );};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_dbbg *_gadb .PdfObjectDictionary ;_cgeb *_gadb .PdfIndirectObject ;};func _fabag (_dbbc _gadb .PdfObject )(*PdfColorspaceDeviceN ,error ){_cfga :=NewPdfColorspaceDeviceN ();
if _befca ,_cbfbb :=_dbbc .(*_gadb .PdfIndirectObject );_cbfbb {_cfga ._defdbf =_befca ;};_dbbc =_gadb .TraceToDirectObject (_dbbc );_eacc ,_aadc :=_dbbc .(*_gadb .PdfObjectArray );if !_aadc {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _eacc .Len ()!=4&&_eacc .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_dbbc =_eacc .Get (0);
_fcgg ,_aadc :=_dbbc .(*_gadb .PdfObjectName );if !_aadc {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fcgg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_dbbc =_eacc .Get (1);
_dbbc =_gadb .TraceToDirectObject (_dbbc );_efed ,_aadc :=_dbbc .(*_gadb .PdfObjectArray );if !_aadc {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_cfga .ColorantNames =_efed ;_dbbc =_eacc .Get (2);_eadfd ,_agfb :=NewPdfColorspaceFromPdfObject (_dbbc );if _agfb !=nil {return nil ,_agfb ;};_cfga .AlternateSpace =_eadfd ;_affd ,_agfb :=_bdbagg (_eacc .Get (3));if _agfb !=nil {return nil ,_agfb ;};
_cfga .TintTransform =_affd ;if _eacc .Len ()==5{_egdc ,_cddd :=_abbf (_eacc .Get (4));if _cddd !=nil {return nil ,_cddd ;};_cfga .Attributes =_egdc ;};return _cfga ,nil ;};func (_dada *PdfWriter )writeObjectsInStreams (_eabgc map[_gadb .PdfObject ]bool )error {for _ ,_fcfca :=range _dada ._agefec {if _fdbdb :=_eabgc [_fcfca ];
_fdbdb {continue ;};_efdba :=int64 (0);switch _gdece :=_fcfca .(type ){case *_gadb .PdfIndirectObject :_efdba =_gdece .ObjectNumber ;case *_gadb .PdfObjectStream :_efdba =_gdece .ObjectNumber ;case *_gadb .PdfObjectStreams :_efdba =_gdece .ObjectNumber ;
default:_cg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_fcfca );
return ErrTypeCheck ;};if _dada ._fbgac !=nil &&_fcfca !=_dada ._ceadb {_gfbgfg :=_dada ._fbgac .Encrypt (_fcfca ,_efdba ,0);if _gfbgfg !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gfbgfg );
return _gfbgfg ;};};_dada .writeObject (int (_efdba ),_fcfca );};return nil ;};func (_bgcca *PdfWriter )setHashIDs (_dfdcbd _eb .Hash )error {_aeef :=_dfdcbd .Sum (nil );if _bgcca ._gcbdb ==""{_bgcca ._gcbdb =_bd .EncodeToString (_aeef [:8]);};_bgcca .setDocumentIDs (_bgcca ._gcbdb ,_bd .EncodeToString (_aeef [8:]));
return nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_gfbc *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gdac *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcdec :=vals [0];if _dcdec < 0.0||_dcdec > 100.0{_cg .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dcdec );
return nil ,ErrColorOutOfRange ;};_gcfca :=vals [1];_aacbe :=float64 (-100);_ebge :=float64 (100);if len (_gdac .Range )> 1{_aacbe =_gdac .Range [0];_ebge =_gdac .Range [1];};if _gcfca < _aacbe ||_gcfca > _ebge {_cg .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gcfca ,_aacbe ,_ebge );
return nil ,ErrColorOutOfRange ;};_adgd :=vals [2];_cegg :=float64 (-100);_cace :=float64 (100);if len (_gdac .Range )> 3{_cegg =_gdac .Range [2];_cace =_gdac .Range [3];};if _adgd < _cegg ||_adgd > _cace {_cg .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_adgd ,_cegg ,_cace );
return nil ,ErrColorOutOfRange ;};_edff :=NewPdfColorLab (_dcdec ,_gcfca ,_adgd );return _edff ,nil ;};func (_dcacd *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gadb .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gegdd *PdfShadingType2 )ToPdfObject ()_gadb .PdfObject {_gegdd .PdfShading .ToPdfObject ();_degfd ,_dgbce :=_gegdd .getShadingDict ();if _dgbce !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _degfd ==nil {_cg .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _gegdd .Coords !=nil {_degfd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gegdd .Coords );
};if _gegdd .Domain !=nil {_degfd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gegdd .Domain );};if _gegdd .Function !=nil {if len (_gegdd .Function )==1{_degfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gegdd .Function [0].ToPdfObject ());
}else {_feeab :=_gadb .MakeArray ();for _ ,_bacg :=range _gegdd .Function {_feeab .Append (_bacg .ToPdfObject ());};_degfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_feeab );};};if _gegdd .Extend !=nil {_degfd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gegdd .Extend );
};return _gegdd ._gfbgb ;};func _bgcd (_bfcab *PdfField ,_ddgb _gadb .PdfObject )error {switch _bfcab .GetContext ().(type ){case *PdfFieldText :switch _egcab :=_ddgb .(type ){case *_gadb .PdfObjectName :_gcfcfe :=_egcab ;_cg .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gcfcfe .String ());
_bfcab .V =_gadb .MakeEncodedString (_egcab .String (),true );case *_gadb .PdfObjectString :_bfcab .V =_gadb .MakeEncodedString (_egcab .String (),true );default:_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_egcab ,_egcab );
};case *PdfFieldButton :switch _ddgb .(type ){case *_gadb .PdfObjectName :if len (_ddgb .String ())> 0{_bfcab .V =_ddgb ;_gdee (_bfcab ,_ddgb );};case *_gadb .PdfObjectString :if len (_ddgb .String ())> 0{_bfcab .V =_gadb .MakeName (_ddgb .String ());_gdee (_bfcab ,_bfcab .V );
};default:_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfcab .PartialName (),_ddgb );_bfcab .V =_ddgb ;};case *PdfFieldChoice :switch _ddgb .(type ){case *_gadb .PdfObjectName :if len (_ddgb .String ())> 0{_bfcab .V =_gadb .MakeString (_ddgb .String ());
_gdee (_bfcab ,_ddgb );};case *_gadb .PdfObjectString :if len (_ddgb .String ())> 0{_bfcab .V =_ddgb ;_gdee (_bfcab ,_gadb .MakeName (_ddgb .String ()));};default:_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfcab .PartialName (),_ddgb );
_bfcab .V =_ddgb ;};case *PdfFieldSignature :_cg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bfcab .PartialName (),_ddgb );
};return nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_ccbf *PdfReader )GetCatalogMetadata ()(_gadb .PdfObject ,bool ){if _ccbf ._gbef ==nil {return nil ,false ;};_cccaf :=_ccbf ._gbef .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _cccaf ,_cccaf !=nil ;};func (_fcbgb *PdfFont )baseFields ()*fontCommon {if _fcbgb ._ecfec ==nil {_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _fcbgb ._ecfec .baseFields ();};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_bbbac *_gadb .PdfObjectDictionary ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_eedcc ,_gfcbf :=_bf .NewStdFontByName (HelveticaName );if !_gfcbf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_fadgf :=_accbf (_eedcc );return &PdfFont {_ecfec :&_fadgf };};

// String returns a string that describes `font`.
func (_cfgf *PdfFont )String ()string {_ccfbe :="";if _cfgf ._ecfec .Encoder ()!=nil {_ccfbe =_cfgf ._ecfec .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_cfgf ._ecfec ,_cfgf .baseFields ().coreString (),_ccfbe );
};func _aebbe (_ddfgf *_gadb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_acbf :=PdfShadingType5 {};_ggbgd :=_ddfgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ggbgd ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aedcd ,_gddcdc :=_ggbgd .(*_gadb .PdfObjectInteger );if !_gddcdc {_cg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggbgd );
return nil ,_gadb .ErrTypeError ;};_acbf .BitsPerCoordinate =_aedcd ;_ggbgd =_ddfgf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggbgd ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aedcd ,_gddcdc =_ggbgd .(*_gadb .PdfObjectInteger );if !_gddcdc {_cg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggbgd );
return nil ,_gadb .ErrTypeError ;};_acbf .BitsPerComponent =_aedcd ;_ggbgd =_ddfgf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ggbgd ==nil {_cg .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_aedcd ,_gddcdc =_ggbgd .(*_gadb .PdfObjectInteger );if !_gddcdc {_cg .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ggbgd );
return nil ,_gadb .ErrTypeError ;};_acbf .VerticesPerRow =_aedcd ;_ggbgd =_ddfgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggbgd ==nil {_cg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aaecd ,_gddcdc :=_ggbgd .(*_gadb .PdfObjectArray );if !_gddcdc {_cg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggbgd );
return nil ,_gadb .ErrTypeError ;};_acbf .Decode =_aaecd ;if _abggg :=_ddfgf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_abggg !=nil {_acbf .Function =[]PdfFunction {};if _defae ,_cffgg :=_abggg .(*_gadb .PdfObjectArray );_cffgg {for _ ,_ceecc :=range _defae .Elements (){_abaec ,_adbba :=_bdbagg (_ceecc );
if _adbba !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adbba );return nil ,_adbba ;};_acbf .Function =append (_acbf .Function ,_abaec );
};}else {_fafca ,_addd :=_bdbagg (_abggg );if _addd !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_addd );return nil ,_addd ;
};_acbf .Function =append (_acbf .Function ,_fafca );};};return &_acbf ,nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bfbb *LTV )Enable (sig *PdfSignature ,extraCerts []*_g .Certificate )error {if _agage :=_bfbb .validateSig (sig );_agage !=nil {return _agage ;};_addgg ,_eacd :=_bfbb .generateVRIKey (sig );if _eacd !=nil {return _eacd ;};if _ ,_gccb :=_bfbb ._fgde .VRI [_addgg ];
_gccb &&_bfbb .SkipExisting {return nil ;};_accec ,_eacd :=sig .GetCerts ();if _eacd !=nil {return _eacd ;};return _bfbb .enable (_accec ,extraCerts ,_addgg );};

// ToPdfObject implements interface PdfModel.
func (_fg *PdfActionURI )ToPdfObject ()_gadb .PdfObject {_fg .PdfAction .ToPdfObject ();_gdb :=_fg ._ec ;_ecd :=_gdb .PdfObject .(*_gadb .PdfObjectDictionary );_ecd .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeURI )));_ecd .SetIfNotNil ("\u0055\u0052\u0049",_fg .URI );
_ecd .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fg .IsMap );return _gdb ;};

// SetAction sets the PDF action for the annotation link.
func (_afde *PdfAnnotationLink )SetAction (action *PdfAction ){_afde ._edb =action ;if action ==nil {_afde .A =nil ;};};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_gadb .PdfObjectArray ;ExtGState _gadb .PdfObject ;};func (_bdfgc *PdfAcroForm )fillImageWithAppearance (_aacea FieldImageProvider ,_bgbe FieldAppearanceGenerator )error {if _bdfgc ==nil {return nil ;
};_baace ,_egcg :=_aacea .FieldImageValues ();if _egcg !=nil {return _egcg ;};for _ ,_cggbd :=range _bdfgc .AllFields (){_cfaae :=_cggbd .PartialName ();_fbfeb ,_ebcga :=_baace [_cfaae ];if !_ebcga {if _gggga ,_gdfc :=_cggbd .FullName ();_gdfc ==nil {_fbfeb ,_ebcga =_baace [_gggga ];
};};if !_ebcga {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cfaae );
continue ;};switch _edfc :=_cggbd .GetContext ().(type ){case *PdfFieldButton :if _edfc .IsPush (){_edfc .SetFillImage (_fbfeb );};};if _bgbe ==nil {continue ;};for _ ,_gfgg :=range _cggbd .Annotations {_ddag ,_dfcde :=_bgbe .GenerateAppearanceDict (_bdfgc ,_cggbd ,_gfgg );
if _dfcde !=nil {return _dfcde ;};_gfgg .AP =_ddag ;_gfgg .ToPdfObject ();};};return nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gdadd []byte )(_afgea int ,_dbfgc error );};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_dbed :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_dbed .N =N ;return _dbed ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fgcgc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fgcgc .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _gadb .PdfObject ;_gff []byte ;_faaca *_gadb .PdfIndirectObject ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_bdfdf *PdfPage )GetPageDict ()*_gadb .PdfObjectDictionary {_gdgfg :=_bdfdf ._dfbg ;_gdgfg .Clear ();_gdgfg .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0050\u0061\u0067\u0065"));_gdgfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdfdf .Parent );
if _bdfdf .LastModified !=nil {_gdgfg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bdfdf .LastModified .ToPdfObject ());};if _bdfdf .Resources !=nil {_gdgfg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bdfdf .Resources .ToPdfObject ());
};if _bdfdf .CropBox !=nil {_gdgfg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_bdfdf .CropBox .ToPdfObject ());};if _bdfdf .MediaBox !=nil {_gdgfg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_bdfdf .MediaBox .ToPdfObject ());};if _bdfdf .BleedBox !=nil {_gdgfg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_bdfdf .BleedBox .ToPdfObject ());
};if _bdfdf .TrimBox !=nil {_gdgfg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_bdfdf .TrimBox .ToPdfObject ());};if _bdfdf .ArtBox !=nil {_gdgfg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_bdfdf .ArtBox .ToPdfObject ());};_gdgfg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_bdfdf .BoxColorInfo );
_gdgfg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bdfdf .Contents );if _bdfdf .Rotate !=nil {_gdgfg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gadb .MakeInteger (*_bdfdf .Rotate ));};_gdgfg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bdfdf .Group );
_gdgfg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_bdfdf .Thumb );_gdgfg .SetIfNotNil ("\u0042",_bdfdf .B );_gdgfg .SetIfNotNil ("\u0044\u0075\u0072",_bdfdf .Dur );_gdgfg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bdfdf .Trans );_gdgfg .SetIfNotNil ("\u0041\u0041",_bdfdf .AA );
_gdgfg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bdfdf .Metadata );_gdgfg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bdfdf .PieceInfo );_gdgfg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bdfdf .StructParents );
_gdgfg .SetIfNotNil ("\u0049\u0044",_bdfdf .ID );_gdgfg .SetIfNotNil ("\u0050\u005a",_bdfdf .PZ );_gdgfg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_bdfdf .SeparationInfo );_gdgfg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_bdfdf .Tabs );
_gdgfg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_bdfdf .TemplateInstantiated );_gdgfg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_bdfdf .PresSteps );_gdgfg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_bdfdf .UserUnit );
_gdgfg .SetIfNotNil ("\u0056\u0050",_bdfdf .VP );if _bdfdf ._ecca !=nil {_bcfad :=_gadb .MakeArray ();for _ ,_ggacg :=range _bdfdf ._ecca {if _gfdgg :=_ggacg .GetContext ();_gfdgg !=nil {_bcfad .Append (_gfdgg .ToPdfObject ());}else {_bcfad .Append (_ggacg .ToPdfObject ());
};};if _bcfad .Len ()> 0{_gdgfg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_bcfad );};}else if _bdfdf .Annots !=nil {_gdgfg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_bdfdf .Annots );};return _gdgfg ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gddga *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_gddga .NumInputs {_cg .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_bb .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _gddga ._edgda ==nil {_gcbcg :=_gddga .processSamples ();if _gcbcg !=nil {return nil ,_gcbcg ;};};_fbafg :=_gddga .Encode ;if _fbafg ==nil {_fbafg =[]float64 {};
for _faddd :=0;_faddd < len (_gddga .Size );_faddd ++{_fbafg =append (_fbafg ,0);_fbafg =append (_fbafg ,float64 (_gddga .Size [_faddd ]-1));};};_cbbgg :=_gddga .Decode ;if _cbbgg ==nil {_cbbgg =_gddga .Range ;};_gdecc :=make ([]int ,len (x ));for _adgdg :=0;
_adgdg < len (x );_adgdg ++{_cbaff :=x [_adgdg ];_ceffa :=_gee .Min (_gee .Max (_cbaff ,_gddga .Domain [2*_adgdg ]),_gddga .Domain [2*_adgdg +1]);_cbacf :=_cf .LinearInterpolate (_ceffa ,_gddga .Domain [2*_adgdg ],_gddga .Domain [2*_adgdg +1],_fbafg [2*_adgdg ],_fbafg [2*_adgdg +1]);
_caggb :=_gee .Min (_gee .Max (_cbacf ,0),float64 (_gddga .Size [_adgdg ]-1));_befgf :=int (_gee .Floor (_caggb +0.5));if _befgf < 0{_befgf =0;}else if _befgf > _gddga .Size [_adgdg ]{_befgf =_gddga .Size [_adgdg ]-1;};_gdecc [_adgdg ]=_befgf ;};_afdg :=_gdecc [0];
for _dbaaf :=1;_dbaaf < _gddga .NumInputs ;_dbaaf ++{_gaafcb :=_gdecc [_dbaaf ];for _ecfca :=0;_ecfca < _dbaaf ;_ecfca ++{_gaafcb *=_gddga .Size [_ecfca ];};_afdg +=_gaafcb ;};_afdg *=_gddga .NumOutputs ;var _eaad []float64 ;for _ggca :=0;_ggca < _gddga .NumOutputs ;
_ggca ++{_fabf :=_afdg +_ggca ;if _fabf >=len (_gddga ._edgda ){_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_cdgg :=_gddga ._edgda [_fabf ];_abad :=_cf .LinearInterpolate (float64 (_cdgg ),0,_gee .Pow (2,float64 (_gddga .BitsPerSample )),_cbbgg [2*_ggca ],_cbbgg [2*_ggca +1]);_dfba :=_gee .Min (_gee .Max (_abad ,_gddga .Range [2*_ggca ]),_gddga .Range [2*_ggca +1]);
_eaad =append (_eaad ,_dfba );};return _eaad ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gadb .PdfObject ;IC _gadb .PdfObject ;BE _gadb .PdfObject ;RD _gadb .PdfObject ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_eabff *PdfPageResources )GetExtGState (keyName _gadb .PdfObjectName )(_gadb .PdfObject ,bool ){if _eabff .ExtGState ==nil {return nil ,false ;};_gbfde ,_cgafc :=_gadb .TraceToDirectObject (_eabff .ExtGState ).(*_gadb .PdfObjectDictionary );if !_cgafc {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eabff .ExtGState );
return nil ,false ;};if _gdedc :=_gbfde .Get (keyName );_gdedc !=nil {return _gdedc ,true ;};return nil ,false ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fedgd *PdfPageResources )HasColorspaceByName (keyName _gadb .PdfObjectName )bool {_caeeef ,_fdfd :=_fedgd .GetColorspaces ();if _fdfd !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fdfd );
return false ;};if _caeeef ==nil {return false ;};_ ,_daad :=_caeeef .Colorspaces [string (keyName )];return _daad ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ebc :=NewPdfAction ();_geb :=&PdfActionResetForm {};_geb .PdfAction =_ebc ;_ebc .SetContext (_geb );return _geb ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_gadb .PdfObject ;GetContainingPdfObject ()_gadb .PdfObject ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_eadeb *_gadb .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gcgba *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if _gcgba .Alternate ==nil {if _gcgba .N ==1{_fcfc :=NewPdfColorspaceDeviceGray ();return _fcfc .ColorFromPdfObjects (objects );}else if _gcgba .N ==3{_aafc :=NewPdfColorspaceDeviceRGB ();
return _aafc .ColorFromPdfObjects (objects );}else if _gcgba .N ==4{_cfce :=NewPdfColorspaceDeviceCMYK ();return _cfce .ColorFromPdfObjects (objects );}else {return nil ,_bb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gcgba .Alternate .ColorFromPdfObjects (objects );};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_afegc *PdfWriter )makeOffSetReference (_gccgcf int64 ){_gebff :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_gccgcf );
_afegc .writeString (_gebff );_afegc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};func (_gega *LTV )generateVRIKey (_dcdc *PdfSignature )(string ,error ){_cfdec ,_cccc :=_agfbd (_dcdc .Contents .Bytes ());if _cccc !=nil {return "",_cccc ;};return _db .ToUpper (_bd .EncodeToString (_cfdec )),nil ;
};func (_gdcga *LTV )enable (_bfffg ,_baedg []*_g .Certificate ,_dcecd string )error {_aaacc ,_acbg ,_dgcd :=_gdcga .buildCertChain (_bfffg ,_baedg );if _dgcd !=nil {return _dgcd ;};_gfaeb ,_dgcd :=_gdcga .getCerts (_aaacc );if _dgcd !=nil {return _dgcd ;
};var _dbebe ,_daab [][]byte ;if _gdcga .OCSPClient !=nil {_dbebe ,_dgcd =_gdcga .getOCSPs (_aaacc ,_acbg );if _dgcd !=nil {return _dgcd ;};};if _gdcga .CRLClient !=nil {_daab ,_dgcd =_gdcga .getCRLs (_aaacc );if _dgcd !=nil {return _dgcd ;};};_dcgag :=_gdcga ._fgde ;
_fecda ,_dgcd :=_dcgag .addCerts (_gfaeb );if _dgcd !=nil {return _dgcd ;};_egcgg ,_dgcd :=_dcgag .addOCSPs (_dbebe );if _dgcd !=nil {return _dgcd ;};_agbe ,_dgcd :=_dcgag .addCRLs (_daab );if _dgcd !=nil {return _dgcd ;};if _dcecd !=""{_dcgag .VRI [_dcecd ]=&VRI {Cert :_fecda ,OCSP :_egcgg ,CRL :_agbe };
};_gdcga ._dfcfg .SetDSS (_dcgag );return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_efeee :=&PdfPageResourcesColorspaces {};_efeee .Names =[]string {};_efeee .Colorspaces =map[string ]PdfColorspace {};_efeee ._eadeb =&_gadb .PdfIndirectObject {};return _efeee ;};func (_eafdb *PdfPattern )getDict ()*_gadb .PdfObjectDictionary {if _cacbf ,_ggbda :=_eafdb ._cdaag .(*_gadb .PdfIndirectObject );
_ggbda {_gfddee ,_facc :=_cacbf .PdfObject .(*_gadb .PdfObjectDictionary );if !_facc {return nil ;};return _gfddee ;}else if _edefd ,_dacfb :=_eafdb ._cdaag .(*_gadb .PdfObjectStream );_dacfb {return _edefd .PdfObjectDictionary ;}else {_cg .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_eafdb ._cdaag );
return nil ;};};

// SetImage updates XObject Image with new image data.
func (_bccdg *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_bccdg .Filter .UpdateParams (img .GetParamsDict ());_cgabe ,_fadda :=_bccdg .Filter .EncodeBytes (img .Data );if _fadda !=nil {return _fadda ;};_bccdg .Stream =_cgabe ;_agaf :=img .Width ;
_bccdg .Width =&_agaf ;_afcbe :=img .Height ;_bccdg .Height =&_afcbe ;_cbacb :=img .BitsPerComponent ;_bccdg .BitsPerComponent =&_cbacb ;if cs ==nil {if img .ColorComponents ==1{_bccdg .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_bccdg .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_bccdg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _bb .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bccdg .ColorSpace =cs ;};return nil ;
};

// SetFlag sets the flag for the field.
func (_ecce *PdfField )SetFlag (flag FieldFlag ){_ecce .Ff =_gadb .MakeInteger (int64 (flag ))};func _bddgb (_gfgde *XObjectForm )(*PdfRectangle ,error ){if _gebb ,_bgee :=_gfgde .BBox .(*_gadb .PdfObjectArray );_bgee {_ggaga ,_egcc :=NewPdfRectangle (*_gebb );
if _egcc !=nil {return nil ,_egcc ;};if _cccfd ,_aceg :=_gfgde .Matrix .(*_gadb .PdfObjectArray );_aceg {_fbfe ,_ddfg :=_cccfd .ToFloat64Array ();if _ddfg !=nil {return nil ,_ddfg ;};_fbba :=_dbb .IdentityMatrix ();if len (_fbfe )==6{_fbba =_dbb .NewMatrix (_fbfe [0],_fbfe [1],_fbfe [2],_fbfe [3],_fbfe [4],_fbfe [5]);
};_ggaga .Transform (_fbba );return _ggaga ,nil ;};};return nil ,_bb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");};

// M returns the value of the magenta component of the color.
func (_bdecc *PdfColorDeviceCMYK )M ()float64 {return _bdecc [1]};func (_egc *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bdeca *_gadb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_bgc :=PdfAnnotationFileAttachment {};_bfg ,_bdgb :=_egc .newPdfAnnotationMarkupFromDict (_bdeca );
if _bdgb !=nil {return nil ,_bdgb ;};_bgc .PdfAnnotationMarkup =_bfg ;_bgc .FS =_bdeca .Get ("\u0046\u0053");_bgc .Name =_bdeca .Get ("\u004e\u0061\u006d\u0065");return &_bgc ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_cgbb *PdfAppender )Write (w _cc .Writer )error {if _cgbb ._gfeb {return _bb .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_gcfg :=NewPdfWriter ();_bagce ,_aebga :=_gadb .GetDict (_gcfg ._cfbfa );if !_aebga {return _bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gfged ,_aebga :=_bagce .Get ("\u004b\u0069\u0064\u0073").(*_gadb .PdfObjectArray );if !_aebga {return _bb .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_eabf ,_aebga :=_bagce .Get ("\u0043\u006f\u0075n\u0074").(*_gadb .PdfObjectInteger );if !_aebga {return _bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_ede :=_cgbb ._fff ._becf ;_ggbd :=_ede .GetTrailer ();if _ggbd ==nil {return _bb .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fgfd ,_aebga :=_gadb .GetIndirect (_ggbd .Get ("\u0052\u006f\u006f\u0074"));
if !_aebga {return _bb .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_cadb ,_aebga :=_gadb .GetDict (_fgfd );if !_aebga {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fgfd ,*_ggbd );
return _bb .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_gbca :=range _cadb .Keys (){if _gcfg ._gaeab .Get (_gbca )==nil {_ggfa :=_cadb .Get (_gbca );_gcfg ._gaeab .Set (_gbca ,_ggfa );};};if _cgbb ._bccaae !=nil {if _cgbb ._bccaae ._gfab {if _ecbc :=_gadb .TraceToDirectObject (_cgbb ._bccaae .ToPdfObject ());
!_gadb .IsNullObject (_ecbc ){_gcfg ._gaeab .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ecbc );_cgbb .updateObjectsDeep (_ecbc ,nil );}else {_cg .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_gcfg ._gaeab .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cgbb ._bccaae .ToPdfObject ());_cgbb .updateObjectsDeep (_cgbb ._bccaae .ToPdfObject (),nil );};};if _cgbb ._ebaf !=nil {_cgbb .updateObjectsDeep (_cgbb ._ebaf .ToPdfObject (),nil );
_gcfg ._gaeab .Set ("\u0044\u0053\u0053",_cgbb ._ebaf .GetContainingPdfObject ());};if _cgbb ._ccfg !=nil {_gcfg ._gaeab .Set ("\u0050\u0065\u0072m\u0073",_cgbb ._ccfg .ToPdfObject ());_cgbb .updateObjectsDeep (_cgbb ._ccfg .ToPdfObject (),nil );};if _gcfg ._dagb .Major < 2{_gcfg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_gcfg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _afa ,_deaea :=_gadb .GetDict (_ggbd .Get ("\u0049\u006e\u0066\u006f"));_deaea {if _gbded ,_bfeg :=_gadb .GetDict (_gcfg ._ceeegd );_bfeg {for _ ,_fbdf :=range _afa .Keys (){if _gbded .Get (_fbdf )==nil {_gbded .Set (_fbdf ,_afa .Get (_fbdf ));
};};};};if _cgbb ._dbccd !=nil {_gcfg ._ceeegd =_gadb .MakeIndirectObject (_cgbb ._dbccd .ToPdfObject ());};_cgbb .addNewObject (_gcfg ._ceeegd );_cgbb .addNewObject (_gcfg ._ccbbbd );_bcgc :=false ;if len (_cgbb ._fff .PageList )!=len (_cgbb ._dade ){_bcgc =true ;
}else {for _bdgbe :=range _cgbb ._fff .PageList {switch {case _cgbb ._dade [_bdgbe ]==_cgbb ._fff .PageList [_bdgbe ]:case _cgbb ._dade [_bdgbe ]==_cgbb .Reader .PageList [_bdgbe ]:default:_bcgc =true ;};if _bcgc {break ;};};};if _bcgc {_cgbb .updateObjectsDeep (_gcfg ._cfbfa ,nil );
}else {_cgbb ._dac [_gcfg ._cfbfa ]=struct{}{};};_gcfg ._cfbfa .ObjectNumber =_cgbb .Reader ._ageb .ObjectNumber ;_cgbb ._gag [_gcfg ._cfbfa ]=_cgbb .Reader ._ageb .ObjectNumber ;_bad :=[]_gadb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_egdg :=range _cgbb ._dade {_beebc :=_egdg .ToPdfObject ();*_eabf =*_eabf +1;if _gadcg ,_gbcc :=_beebc .(*_gadb .PdfIndirectObject );_gbcc &&_gadcg .GetParser ()==_cgbb ._fff ._becf {_gfged .Append (&_gadcg .PdfObjectReference );continue ;};if _agef ,_cgcb :=_gadb .GetDict (_beebc );
_cgcb {_ebead ,_dfdc :=_agef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gadb .PdfIndirectObject );for _dfdc {_cg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebead );_ecbdf ,_fbeg :=_ebead .PdfObject .(*_gadb .PdfObjectDictionary );
if !_fbeg {return _bb .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_aggc :=range _bad {_cg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_aggc );if _gccfe :=_agef .Get (_aggc );
_gccfe !=nil {_cg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_egdg ._ffaee .Keys ())> 0&&!_bcgc {_fffa :=_egdg ._ffaee ;if _ecag :=_fffa .Get (_aggc );_ecag !=nil {if _gccfe !=_ecag {_cg .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_aggc ,_ecag );
_agef .Set (_aggc ,_ecag );};};};continue ;};if _bgad :=_ecbdf .Get (_aggc );_bgad !=nil {_cg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_aggc );_agef .Set (_aggc ,_bgad );};};
_ebead ,_dfdc =_ecbdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gadb .PdfIndirectObject );_cg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ecbdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};
_agef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcfg ._cfbfa );};_cgbb .updateObjectsDeep (_beebc ,nil );_gfged .Append (_beebc );};if _ ,_agbb :=_cgbb ._daed .Seek (0,_cc .SeekStart );_agbb !=nil {return _agbb ;};_daac :=make (map[SignatureHandler ]_cc .Writer );
_gdf :=_gadb .MakeArray ();for _ ,_cfab :=range _cgbb ._bbac {if _aafb ,_fgda :=_gadb .GetIndirect (_cfab );_fgda {if _ebde ,_eaaac :=_aafb .PdfObject .(*pdfSignDictionary );_eaaac {_fddd :=*_ebde ._cbaef ;var _eaef error ;_daac [_fddd ],_eaef =_fddd .NewDigest (_ebde ._cdce );
if _eaef !=nil {return _eaef ;};_gdf .Append (_gadb .MakeInteger (0xfffff),_gadb .MakeInteger (0xfffff));};};};if _gdf .Len ()> 0{_gdf .Append (_gadb .MakeInteger (0xfffff),_gadb .MakeInteger (0xfffff));};for _ ,_aaee :=range _cgbb ._bbac {if _geddg ,_adcc :=_gadb .GetIndirect (_aaee );
_adcc {if _eabef ,_edbc :=_geddg .PdfObject .(*pdfSignDictionary );_edbc {_eabef .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gdf );};};};_caaf :=len (_daac )> 0;var _bcb _cc .Reader =_cgbb ._daed ;if _caaf {_bgfba :=make ([]_cc .Writer ,0,len (_daac ));
for _ ,_ebed :=range _daac {_bgfba =append (_bgfba ,_ebed );};_bcb =_cc .TeeReader (_cgbb ._daed ,_cc .MultiWriter (_bgfba ...));};_dcgc ,_bgec :=_cc .Copy (w ,_bcb );if _bgec !=nil {return _bgec ;};if len (_cgbb ._bbac )==0{return nil ;};_gcfg ._abceg =_dcgc ;
_gcfg .ObjNumOffset =_cgbb ._gced ;_gcfg ._gfdfd =true ;_gcfg ._gddfg =_cgbb ._edd ;_gcfg ._cbdbd =_cgbb ._aefab ;_gcfg ._cgfd =_cgbb ._bfcb ;_gcfg ._dagb =_cgbb ._fff .PdfVersion ();_gcfg ._dafgd =_cgbb ._gag ;_gcfg ._fbgac =_cgbb ._cbgca .GetCrypter ();
_gcfg ._ceadb =_cgbb ._cbgca .GetEncryptObj ();_ebba :=_cgbb ._cbgca .GetXrefType ();if _ebba !=nil {_cafd :=*_ebba ==_gadb .XrefTypeObjectStream ;_gcfg ._dedb =&_cafd ;};_gcfg ._gacff =map[_gadb .PdfObject ]struct{}{};_gcfg ._agefec =[]_gadb .PdfObject {};
for _ ,_gefe :=range _cgbb ._bbac {if _ ,_ecfe :=_cgbb ._dac [_gefe ];_ecfe {continue ;};_gcfg .addObject (_gefe );};_cefcf :=w ;if _caaf {_cefcf =_dbd .NewBuffer (nil );};if _cgbb ._dege !=""&&_gcfg ._fbgac ==nil {_gcfg .Encrypt ([]byte (_cgbb ._dege ),[]byte (_cgbb ._dege ),_cgbb ._abcf );
};if _fgg :=_ggbd .Get ("\u0049\u0044");_fgg !=nil {if _dfef ,_efda :=_gadb .GetArray (_fgg );_efda {_gcfg ._gcgfg =_dfef ;};};if _gdfd :=_gcfg .Write (_cefcf );_gdfd !=nil {return _gdfd ;};if _caaf {_cabf :=_cefcf .(*_dbd .Buffer ).Bytes ();_geec :=_gadb .MakeArray ();
var _edge []*pdfSignDictionary ;var _aacc int64 ;for _ ,_bcfb :=range _gcfg ._agefec {if _cdgfa ,_bbba :=_gadb .GetIndirect (_bcfb );_bbba {if _dagd ,_dcfc :=_cdgfa .PdfObject .(*pdfSignDictionary );_dcfc {_edge =append (_edge ,_dagd );_aeee :=_dagd ._fefeaf +int64 (_dagd ._degae );
_geec .Append (_gadb .MakeInteger (_aacc ),_gadb .MakeInteger (_aeee -_aacc ));_aacc =_dagd ._fefeaf +int64 (_dagd ._beea );};};};_geec .Append (_gadb .MakeInteger (_aacc ),_gadb .MakeInteger (_dcgc +int64 (len (_cabf ))-_aacc ));_ecga :=[]byte (_geec .WriteString ());
for _ ,_ffeeb :=range _edge {_cggb :=int (_ffeeb ._fefeaf -_dcgc );for _bffe :=_ffeeb ._eaacc ;_bffe < _ffeeb ._cccgb ;_bffe ++{_cabf [_cggb +_bffe ]=' ';};_aaad :=_cabf [_cggb +_ffeeb ._eaacc :_cggb +_ffeeb ._cccgb ];copy (_aaad ,_ecga );};var _cgfc int ;
for _ ,_fgdb :=range _edge {_bfae :=int (_fgdb ._fefeaf -_dcgc );_cbba :=_cabf [_cgfc :_bfae +_fgdb ._degae ];_fggc :=*_fgdb ._cbaef ;_daac [_fggc ].Write (_cbba );_cgfc =_bfae +_fgdb ._beea ;};for _ ,_cdcb :=range _edge {_bdgba :=_cabf [_cgfc :];_fecf :=*_cdcb ._cbaef ;
_daac [_fecf ].Write (_bdgba );};for _ ,_fbfc :=range _edge {_cagd :=int (_fbfc ._fefeaf -_dcgc );_ccgbg :=*_fbfc ._cbaef ;_abeg :=_daac [_ccgbg ];if _edac :=_ccgbg .Sign (_fbfc ._cdce ,_abeg );_edac !=nil {return _edac ;};_fbfc ._cdce .ByteRange =_geec ;
_adga :=[]byte (_fbfc ._cdce .Contents .WriteString ());for _fecb :=_fbfc ._eaacc ;_fecb < _fbfc ._cccgb ;_fecb ++{_cabf [_cagd +_fecb ]=' ';};for _gedg :=_fbfc ._degae ;_gedg < _fbfc ._beea ;_gedg ++{_cabf [_cagd +_gedg ]=' ';};_bcfbe :=_cabf [_cagd +_fbfc ._eaacc :_cagd +_fbfc ._cccgb ];
copy (_bcfbe ,_ecga );_bcfbe =_cabf [_cagd +_fbfc ._degae :_cagd +_fbfc ._beea ];copy (_bcfbe ,_adga );};_fcfe :=_dbd .NewBuffer (_cabf );_ ,_bgec =_cc .Copy (w ,_fcfe );if _bgec !=nil {return _bgec ;};};_cgbb ._gfeb =true ;return nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_cdgfg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _cdgfg .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ac :=NewPdfAction ();_da :=&PdfActionGoToR {};_da .PdfAction =_ac ;_ac .SetContext (_da );return _da ;};func (_bedc *PdfReader )newPdfActionLaunchFromDict (_cfac *_gadb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ceed ,_eae :=_acb (_cfac .Get ("\u0046"));
if _eae !=nil {return nil ,_eae ;};return &PdfActionLaunch {Win :_cfac .Get ("\u0057\u0069\u006e"),Mac :_cfac .Get ("\u004d\u0061\u0063"),Unix :_cfac .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cfac .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ceed },nil ;
};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_aaabc *Image )SetSamples (samples []uint32 ){if _aaabc .BitsPerComponent < 8{samples =_aaabc .samplesAddPadding (samples );};_bedg :=_cb .ResampleUint32 (samples ,int (_aaabc .BitsPerComponent ),8);_gecec :=make ([]byte ,len (_bedg ));for _cfcgg ,_fddbf :=range _bedg {_gecec [_cfcgg ]=byte (_fddbf );
};_aaabc .Data =_gecec ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_bfcee *PdfReader )GetRevisionNumber ()int {return _bfcee ._becf .GetRevisionNumber ()};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_fccef :=&PdfColorPatternType2 {};return _fccef ;};func (_adgc *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _bcge []*PdfFieldSignature ;for _ ,_ddgce :=range _adgc .AllFields (){switch _edafc :=_ddgce .GetContext ().(type ){case *PdfFieldSignature :_dfce :=_edafc ;
_bcge =append (_bcge ,_dfce );};};return _bcge ;};func (_dbfd *fontFile )parseASCIIPart (_aedd []byte )error {if len (_aedd )< 2||string (_aedd [:2])!="\u0025\u0021"{return _bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_cgfbc ,_fbdff ,_dfbfb :=_dfae (_aedd );if _dfbfb !=nil {return _dfbfb ;};_ggdfg :=_bdce (_cgfbc );_dbfd ._cffd =_ggdfg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dbfd ._cffd ==""{_cg .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _fbdff !=""{_bagcc ,_cgdeb :=_eaaf (_fbdff );if _cgdeb !=nil {return _cgdeb ;};_ffdbe ,_cgdeb :=_gcc .NewCustomSimpleTextEncoder (_bagcc ,nil );if _cgdeb !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_cgdeb );
return nil ;};_dbfd ._fbfg =_ffdbe ;};return nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _gadb .PdfObject ;B _gadb .PdfObject ;};func _eacb (_gcce *_gadb .PdfObjectDictionary )(*PdfFieldText ,error ){_cdeea :=&PdfFieldText {};_cdeea .DA ,_ =_gadb .GetString (_gcce .Get ("\u0044\u0041"));
_cdeea .Q ,_ =_gadb .GetInt (_gcce .Get ("\u0051"));_cdeea .DS ,_ =_gadb .GetString (_gcce .Get ("\u0044\u0053"));_cdeea .RV =_gcce .Get ("\u0052\u0056");_cdeea .MaxLen ,_ =_gadb .GetInt (_gcce .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _cdeea ,nil ;
};

// WriteToFile writes the output PDF to file.
func (_dfeb *PdfWriter )WriteToFile (outputFilePath string )error {_addga ,_gfdgc :=_eba .Create (outputFilePath );if _gfdgc !=nil {return _gfdgc ;};defer _addga .Close ();return _dfeb .Write (_addga );};func (_gaed *PdfAppender )addNewObject (_cgbg _gadb .PdfObject ){if _ ,_cdde :=_gaed ._bge [_cgbg ];
!_cdde {_gaed ._bbac =append (_gaed ._bbac ,_cgbg );_gaed ._bge [_cgbg ]=struct{}{};};};

// ToPdfObject convert PdfInfo to pdf object.
func (_aded *PdfInfo )ToPdfObject ()_gadb .PdfObject {_bgdace :=_gadb .MakeDict ();_bgdace .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_aded .Title );_bgdace .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_aded .Author );_bgdace .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_aded .Subject );
_bgdace .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_aded .Keywords );_bgdace .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_aded .Creator );_bgdace .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_aded .Producer );
_bgdace .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_aded .Trapped );if _aded .CreationDate !=nil {_bgdace .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_aded .CreationDate .ToPdfObject ());};if _aded .ModifiedDate !=nil {_bgdace .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_aded .ModifiedDate .ToPdfObject ());
};for _ ,_ggcg :=range _aded ._adbb .Keys (){_bgdace .SetIfNotNil (_ggcg ,_aded ._adbb .Get (_ggcg ));};return _bgdace ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_adf :=NewPdfAction ();_bbdd :=&PdfActionSubmitForm {};_bbdd .PdfAction =_adf ;_adf .SetContext (_bbdd );return _bbdd ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_ffcd *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _gadb .GetNumberAsFloat (_ffcd .CapHeight );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ddbc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_gadb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abafg ,_bded :=_gadb .GetNumbersAsFloat (objects );
if _bded !=nil {return nil ,_bded ;};return _ddbc .ColorFromFloats (_abafg );};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_bcdfe byte )byte ;func (_gacab *PdfWriter )hasObject (_efddg _gadb .PdfObject )bool {_ ,_gbegd :=_gacab ._gacff [_efddg ];return _gbegd ;};func (_ecbdb *PdfReader )newPdfFieldSignatureFromDict (_ebfdc *_gadb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_dggcf :=&PdfFieldSignature {};
_gead ,_fbag :=_gadb .GetIndirect (_ebfdc .Get ("\u0056"));if _fbag {var _dbga error ;_dggcf .V ,_dbga =_ecbdb .newPdfSignatureFromIndirect (_gead );if _dbga !=nil {return nil ,_dbga ;};};_dggcf .Lock ,_ =_gadb .GetIndirect (_ebfdc .Get ("\u004c\u006f\u0063\u006b"));
_dggcf .SV ,_ =_gadb .GetIndirect (_ebfdc .Get ("\u0053\u0056"));return _dggcf ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _gadb .PdfObject ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_egbb :=&PdfBorderStyle {};return _egbb };func (_ebgba *PdfReader )traverseObjectData (_geda _gadb .PdfObject )error {return _gadb .ResolveReferencesDeep (_geda ,_ebgba ._cbfgc );};

// SetContext sets the sub annotation (context).
func (_add *PdfAnnotation )SetContext (ctx PdfModel ){_add ._egeb =ctx };

// ToPdfObject returns a PDF object representation of the outline item.
func (_cddefb *OutlineItem )ToPdfObject ()_gadb .PdfObject {_efbcc ,_ :=_cddefb .ToPdfOutlineItem ();return _efbcc .ToPdfObject ();};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_gfgca *PdfShading )getShadingDict ()(*_gadb .PdfObjectDictionary ,error ){_edaga :=_gfgca ._gfbgb ;
if _dgbe ,_febcb :=_edaga .(*_gadb .PdfIndirectObject );_febcb {_febaa ,_bfab :=_dgbe .PdfObject .(*_gadb .PdfObjectDictionary );if !_bfab {return nil ,_gadb .ErrTypeError ;};return _febaa ,nil ;}else if _dbba ,_afcga :=_edaga .(*_gadb .PdfObjectStream );
_afcga {return _dbba .PdfObjectDictionary ,nil ;}else if _dgage ,_edafe :=_edaga .(*_gadb .PdfObjectDictionary );_edafe {return _dgage ,nil ;}else {_cg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_gadb .ErrTypeError ;};};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_fagf *PdfFieldButton )IsCheckbox ()bool {return _fagf .GetType ()==ButtonTypeCheckbox };

// IsEncrypted returns true if the PDF file is encrypted.
func (_dcfede *PdfReader )IsEncrypted ()(bool ,error ){return _dcfede ._becf .IsEncrypted ()};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _f .Time ){_cccgd .Lock ();defer _cccgd .Unlock ();_cdcee =modifiedDate ;};func (_fcfb *LTV )getCRLs (_dgga []*_g .Certificate )([][]byte ,error ){_gbccg :=make ([][]byte ,0,len (_dgga ));for _ ,_cgagb :=range _dgga {for _ ,_cacbg :=range _cgagb .CRLDistributionPoints {if _fcfb .CertClient .IsCA (_cgagb ){continue ;
};_bbcb ,_caef :=_fcfb .CRLClient .MakeRequest (_cacbg ,_cgagb );if _caef !=nil {_cg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_caef );continue ;
};_gbccg =append (_gbccg ,_bbcb );};};return _gbccg ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_cded *PdfTilingPattern )SetContentStream (content []byte ,encoder _gadb .StreamEncoder )error {_gecfc ,_caaec :=_cded ._cdaag .(*_gadb .PdfObjectStream );if !_caaec {_cg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cded ._cdaag );
return _gadb .ErrTypeError ;};if encoder ==nil {encoder =_gadb .NewRawEncoder ();};_aaebff :=_gecfc .PdfObjectDictionary ;_dcebc :=encoder .MakeStreamDict ();_aaebff .Merge (_dcebc );_cbdbg ,_gbabb :=encoder .EncodeBytes (content );if _gbabb !=nil {return _gbabb ;
};_aaebff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gadb .MakeInteger (int64 (len (_cbdbg ))));_gecfc .Stream =_cbdbg ;return nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_cdea *PdfOutlineTreeNode )GetContainingPdfObject ()_gadb .PdfObject {return _cdea .GetContext ().GetContainingPdfObject ();};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fdeg *PdfAnnotation )GetContext ()PdfModel {if _fdeg ==nil {return nil ;};return _fdeg ._egeb ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _gadb .PdfObject ;Volume _gadb .PdfObject ;Synchronous _gadb .PdfObject ;Repeat _gadb .PdfObject ;Mix _gadb .PdfObject ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_gadb .PdfObjectArray ;ExtGState _gadb .PdfObject ;};func _bdbagg (_daga _gadb .PdfObject )(PdfFunction ,error ){_daga =_gadb .ResolveReference (_daga );if _dfcff ,_ggbde :=_daga .(*_gadb .PdfObjectStream );
_ggbde {_gdgfa :=_dfcff .PdfObjectDictionary ;_ddgdb ,_bgege :=_gdgfa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gadb .PdfObjectInteger );if !_bgege {_cg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_bb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ddgdb ==0{return _dfaga (_dfcff );}else if *_ddgdb ==4{return _bcbdf (_dfcff );
}else {return nil ,_bb .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bbaccf ,_ebaede :=_daga .(*_gadb .PdfIndirectObject );_ebaede {_fgced ,_fcca :=_bbaccf .PdfObject .(*_gadb .PdfObjectDictionary );
if !_fcca {_cg .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_dgddf ,_fcca :=_fgced .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gadb .PdfObjectInteger );
if !_fcca {_cg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_dgddf ==2{return _deafb (_bbaccf );}else if *_dgddf ==3{return _bdfee (_bbaccf );}else {return nil ,_bb .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bcbfa ,_gffe :=_daga .(*_gadb .PdfObjectDictionary );
_gffe {_fdege ,_egaa :=_bcbfa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gadb .PdfObjectInteger );if !_egaa {_cg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_bb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fdege ==2{return _deafb (_bcbfa );}else if *_fdege ==3{return _bdfee (_bcbfa );
}else {return nil ,_bb .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_cg .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_daga );
return nil ,_bb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// SetShadingByName sets a shading resource specified by keyName.
func (_ggfag *PdfPageResources )SetShadingByName (keyName _gadb .PdfObjectName ,shadingObj _gadb .PdfObject )error {if _ggfag .Shading ==nil {_ggfag .Shading =_gadb .MakeDict ();};_daeag ,_fdbeb :=_gadb .GetDict (_ggfag .Shading );if !_fdbeb {return _gadb .ErrTypeError ;
};_daeag .Set (keyName ,shadingObj );return nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_gdag *_gadb .PdfIndirectObject ;};

// B returns the value of the blue component of the color.
func (_bdee *PdfColorDeviceRGB )B ()float64 {return _bdee [2]};func (_badg *PdfWriter )copyObjects (){_afaf :=make (map[_gadb .PdfObject ]_gadb .PdfObject );_ddbee :=make ([]_gadb .PdfObject ,0,len (_badg ._agefec ));_abed :=make (map[_gadb .PdfObject ]struct{},len (_badg ._agefec ));
_bfcbg :=make (map[_gadb .PdfObject ]struct{});for _ ,_aagf :=range _badg ._agefec {_gaddg :=_badg .copyObject (_aagf ,_afaf ,_bfcbg ,false );if _ ,_acbfe :=_bfcbg [_aagf ];_acbfe {continue ;};_ddbee =append (_ddbee ,_gaddg );_abed [_gaddg ]=struct{}{};
};_badg ._agefec =_ddbee ;_badg ._gacff =_abed ;_badg ._ceeegd =_badg .copyObject (_badg ._ceeegd ,_afaf ,nil ,false ).(*_gadb .PdfIndirectObject );_badg ._ccbbbd =_badg .copyObject (_badg ._ccbbbd ,_afaf ,nil ,false ).(*_gadb .PdfIndirectObject );if _badg ._ceadb !=nil {_badg ._ceadb =_badg .copyObject (_badg ._ceadb ,_afaf ,nil ,false ).(*_gadb .PdfIndirectObject );
};if _badg ._gfdfd {_abdcd :=make (map[_gadb .PdfObject ]int64 );for _dabfa ,_eebgc :=range _badg ._dafgd {if _eebec ,_fffee :=_afaf [_dabfa ];_fffee {_abdcd [_eebec ]=_eebgc ;}else {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_badg ._dafgd =_abdcd ;};};func _ecgfc (_egbca string )(string ,error ){var _eebgf _dbd .Buffer ;_eebgf .WriteString (_egbca );_cdbed :=make ([]byte ,8+16);_adde :=_f .Now ().UTC ().UnixNano ();_bc .BigEndian .PutUint64 (_cdbed ,uint64 (_adde ));_ ,_fffff :=_gd .Read (_cdbed [8:]);
if _fffff !=nil {return "",_fffff ;};_eebgf .WriteString (_bd .EncodeToString (_cdbed ));return _eebgf .String (),nil ;};func (_gfacc *PdfWriter )writeObjects (){_cg .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gfacc ._agefec ));
_gfacc ._efeb =make (map[int ]crossReference );_gfacc ._efeb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gfacc ._gddfg .ObjectMap !=nil {for _cgbgff ,_egefe :=range _gfacc ._gddfg .ObjectMap {if _cgbgff ==0{continue ;};if _egefe .XType ==_gadb .XrefTypeObjectStream {_gccde :=crossReference {Type :2,ObjectNumber :_egefe .OsObjNumber ,Index :_egefe .OsObjIndex };
_gfacc ._efeb [_cgbgff ]=_gccde ;};if _egefe .XType ==_gadb .XrefTypeTableEntry {_gdeed :=crossReference {Type :1,ObjectNumber :_egefe .ObjectNumber ,Offset :_egefe .Offset };_gfacc ._efeb [_cgbgff ]=_gdeed ;};};};};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aeaea *PdfPageResources )GetColorspaceByName (keyName _gadb .PdfObjectName )(PdfColorspace ,bool ){_gcdg ,_fdebf :=_aeaea .GetColorspaces ();if _fdebf !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fdebf );
return nil ,false ;};if _gcdg ==nil {return nil ,false ;};_ebdf ,_egcf :=_gcdg .Colorspaces [string (keyName )];if !_egcf {return nil ,false ;};return _ebdf ,true ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_cfgfc *OutlineItem )Insert (index uint ,item *OutlineItem ){_gccga :=uint (len (_cfgfc .Entries ));if index > _gccga {index =_gccga ;};_cfgfc .Entries =append (_cfgfc .Entries [:index ],append ([]*OutlineItem {item },_cfgfc .Entries [index :]...)...);
};

// GetAction returns the PDF action for the annotation link.
func (_gdg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _gdg ._edb !=nil {return _gdg ._edb ,nil ;};if _gdg .A ==nil {return nil ,nil ;};if _gdg ._dea ==nil {return nil ,nil ;};_dbdf ,_cdda :=_gdg ._dea .loadAction (_gdg .A );if _cdda !=nil {return nil ,_cdda ;
};_gdg ._edb =_dbdf ;return _gdg ._edb ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gaea *PdfPage )error ;};func (_accb *pdfFontSimple )getFontEncoding ()(_geaca string ,_gbdeg map[_gcc .CharCode ]_gcc .GlyphName ,_ffad error ){_geaca ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _eeae ,_acca :=_gfdde [_accb ._bbecb ];_acca {_geaca =_eeae ;}else if _accb .fontFlags ()&_fgca !=0{for _cgdd ,_bdccg :=range _gfdde {if _db .Contains (_accb ._bbecb ,_cgdd ){_geaca =_bdccg ;break ;};};};if _accb .Encoding ==nil {return _geaca ,nil ,nil ;
};switch _fggeb :=_accb .Encoding .(type ){case *_gadb .PdfObjectName :return string (*_fggeb ),nil ,nil ;case *_gadb .PdfObjectDictionary :_ecbag ,_abgbb :=_gadb .GetName (_fggeb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _abgbb {_geaca =_ecbag .String ();};if _cbddd :=_fggeb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_cbddd !=nil {_gcfea ,_fdaf :=_gadb .GetArray (_cbddd );if !_fdaf {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fggeb ,_fggeb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_gadb .ErrTypeError ;};_gbdeg ,_ffad =_gcc .FromFontDifferences (_gcfea );};return _geaca ,_gbdeg ,_ffad ;default:_cg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_accb .Encoding ,_accb .Encoding );
return "",nil ,_gadb .ErrTypeError ;};};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_gadb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_gadb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_gadb .PdfObjectBool ;_aaaaa PdfModel ;_gfbgb _gadb .PdfObject ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_ccda *PdfFieldButton )IsPush ()bool {return _ccda .GetType ()==ButtonTypePush };

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_gcfeae :=&PdfSignature {Type :_gadb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bfffbd :=&pdfSignDictionary {PdfObjectDictionary :_gadb .MakeDict (),_cbaef :&handler ,_cdce :_gcfeae };
_gcfeae ._defca =_gadb .MakeIndirectObject (_bfffbd );return _gcfeae ;};func (_gfaebd *PdfReader )newPdfSignatureFromIndirect (_ebebe *_gadb .PdfIndirectObject )(*PdfSignature ,error ){_ceeegc ,_gbabd :=_ebebe .PdfObject .(*_gadb .PdfObjectDictionary );
if !_gbabd {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _eceef ,_efgd :=_gfaebd ._gaccc .GetModelFromPrimitive (_ebebe ).(*PdfSignature );_efgd {return _eceef ,nil ;};_cagcf :=&PdfSignature {};_cagcf ._defca =_ebebe ;_cagcf .Type ,_ =_gadb .GetName (_ceeegc .Get ("\u0054\u0079\u0070\u0065"));
_cagcf .Filter ,_gbabd =_gadb .GetName (_ceeegc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_gbabd {_cg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cagcf .SubFilter ,_ =_gadb .GetName (_ceeegc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_cagcf .Contents ,_gbabd =_gadb .GetString (_ceeegc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_gbabd {_cg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _aeeab ,_fcdgdc :=_gadb .GetArray (_ceeegc .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_fcdgdc {_cagcf .Reference =_gadb .MakeArray ();for _ ,_ggabc :=range _aeeab .Elements (){_eedce ,_gcacac :=_gadb .GetDict (_ggabc );
if !_gcacac {_cg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_bgfd ,_agdce :=_gfaebd .newPdfSignatureReferenceFromDict (_eedce );if _agdce !=nil {return nil ,_agdce ;};_cagcf .Reference .Append (_bgfd .ToPdfObject ());};};_cagcf .Cert =_ceeegc .Get ("\u0043\u0065\u0072\u0074");_cagcf .ByteRange ,_ =_gadb .GetArray (_ceeegc .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_cagcf .Changes ,_ =_gadb .GetArray (_ceeegc .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_cagcf .Name ,_ =_gadb .GetString (_ceeegc .Get ("\u004e\u0061\u006d\u0065"));_cagcf .M ,_ =_gadb .GetString (_ceeegc .Get ("\u004d"));_cagcf .Location ,_ =_gadb .GetString (_ceeegc .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_cagcf .Reason ,_ =_gadb .GetString (_ceeegc .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_cagcf .ContactInfo ,_ =_gadb .GetString (_ceeegc .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_cagcf .R ,_ =_gadb .GetInt (_ceeegc .Get ("\u0052"));
_cagcf .V ,_ =_gadb .GetInt (_ceeegc .Get ("\u0056"));_cagcf .PropBuild ,_ =_gadb .GetDict (_ceeegc .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_cagcf .PropAuthTime ,_ =_gadb .GetInt (_ceeegc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_cagcf .PropAuthType ,_ =_gadb .GetName (_ceeegc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_gfaebd ._gaccc .Register (_ebebe ,_cagcf );return _cagcf ,nil ;};func _fgbegf (_gefa _gadb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_cdba :=NewPdfColorspaceSpecialSeparation ();
if _eddc ,_gbbag :=_gefa .(*_gadb .PdfIndirectObject );_gbbag {_cdba ._ccce =_eddc ;};_gefa =_gadb .TraceToDirectObject (_gefa );_effa ,_dccc :=_gefa .(*_gadb .PdfObjectArray );if !_dccc {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _effa .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gefa =_effa .Get (0);
_acbd ,_dccc :=_gefa .(*_gadb .PdfObjectName );if !_dccc {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_acbd !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gefa =_effa .Get (1);_acbd ,_dccc =_gefa .(*_gadb .PdfObjectName );if !_dccc {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_cdba .ColorantName =_acbd ;_gefa =_effa .Get (2);_efac ,_cadg :=NewPdfColorspaceFromPdfObject (_gefa );if _cadg !=nil {return nil ,_cadg ;};_cdba .AlternateSpace =_efac ;_babgc ,_cadg :=_bdbagg (_effa .Get (3));if _cadg !=nil {return nil ,_cadg ;};_cdba .TintTransform =_babgc ;
return _cdba ,nil ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _cc .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _bcfe ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _ceefe (rs ,opts ,true ,_bcfe );
};func (_fecfb *pdfFontType3 )baseFields ()*fontCommon {return &_fecfb .fontCommon };

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_gadb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _gadb .PdfObject ;A _gadb .PdfObject ;SE _gadb .PdfObject ;C _gadb .PdfObject ;
F _gadb .PdfObject ;_ebbb *_gadb .PdfIndirectObject ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject returns the PDF representation of the colorspace.
func (_eaf *PdfColorspaceDeviceRGB )ToPdfObject ()_gadb .PdfObject {return _gadb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fcgb pdfFontType3 )GetRuneMetrics (r rune )(_bf .CharMetrics ,bool ){_bgba :=_fcgb .Encoder ();if _bgba ==nil {_cg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fcgb );
return _bf .CharMetrics {},false ;};_dfcfb ,_bebd :=_bgba .RuneToCharcode (r );if !_bebd {if r !=' '{_cg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fcgb );
};return _bf .CharMetrics {},false ;};_gbag ,_ebgb :=_fcgb .GetCharMetrics (_dfcfb );return _gbag ,_ebgb ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bedf *PdfField )FullName ()(string ,error ){var _cbbf _dbd .Buffer ;_gdae :=[]string {};if _bedf .T !=nil {_gdae =append (_gdae ,_bedf .T .Decoded ());};_bdcg :=map[*PdfField ]bool {};_bdcg [_bedf ]=true ;_bdeea :=_bedf .Parent ;for _bdeea !=nil {if _ ,_fbgd :=_bdcg [_bdeea ];
_fbgd {return _cbbf .String (),_bb .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bdeea .T ==nil {return _cbbf .String (),_bb .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_gdae =append (_gdae ,_bdeea .T .Decoded ());_bdcg [_bdeea ]=true ;_bdeea =_bdeea .Parent ;};for _eegce :=len (_gdae )-1;_eegce >=0;_eegce --{_cbbf .WriteString (_gdae [_eegce ]);if _eegce > 0{_cbbf .WriteString ("\u002e");};};return _cbbf .String (),nil ;
};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_dabb :=NewPdfAnnotation ();_fge :=&PdfAnnotationWidget {};_fge .PdfAnnotation =_dabb ;_dabb .SetContext (_fge );return _fge ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _gadb .PdfObject ;PreserveRB _gadb .PdfObject ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gafdc *_gadb .PdfIndirectObject ;};

// GetVersion gets the document version.
func (_fbgeg *PdfWriter )GetVersion ()_gadb .Version {return _fbgeg ._dagb };type pdfCIDFontType0 struct{fontCommon ;_afae *_gadb .PdfIndirectObject ;_ccga _gcc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_gadb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gadb .PdfObject ;W _gadb .PdfObject ;DW2 _gadb .PdfObject ;W2 _gadb .PdfObject ;_deaf map[_gcc .CharCode ]float64 ;_dbge float64 ;};func (_edaba *PdfWriter )writeOutputIntents ()error {if len (_edaba ._gfbda )==0{return nil ;};_dedbg :=make ([]_gadb .PdfObject ,len (_edaba ._gfbda ));
for _ddca ,_fgbeb :=range _edaba ._gfbda {_gbabc :=_fgbeb .ToPdfObject ();_dedbg [_ddca ]=_gadb .MakeIndirectObject (_gbabc );};_bcbfc :=_gadb .MakeIndirectObject (_gadb .MakeArray (_dedbg ...));_edaba ._gaeab .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_bcbfc );
if _bdaff :=_edaba .addObjects (_bcbfc );_bdaff !=nil {return _bdaff ;};return nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_cdgge *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_ggfaf *PdfSignature ,_eeefe Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_acbc *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fgdga *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_fagee *PdfSignature ,_gedfbf Hasher )error ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_bfb :=&PdfColorspaceCalRGB {};_bfb .BlackPoint =[]float64 {0.0,0.0,0.0};_bfb .Gamma =[]float64 {1.0,1.0,1.0};_bfb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _bfb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dbac *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_abega *Image )ColorAt (x ,y int )(_cd .Color ,error ){_ebgcf :=_cf .BytesPerLine (int (_abega .Width ),int (_abega .BitsPerComponent ),_abega .ColorComponents );switch _abega .ColorComponents {case 1:return _cf .ColorAtGrayscale (x ,y ,int (_abega .BitsPerComponent ),_ebgcf ,_abega .Data ,_abega ._bdge );
case 3:return _cf .ColorAtNRGBA (x ,y ,int (_abega .Width ),_ebgcf ,int (_abega .BitsPerComponent ),_abega .Data ,_abega ._egfg ,_abega ._bdge );case 4:return _cf .ColorAtCMYK (x ,y ,int (_abega .Width ),_abega .Data ,_abega ._bdge );};_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_abega .ColorComponents ,_abega .BitsPerComponent );
return nil ,_bb .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ab :=NewPdfAction ();_cfb :=&PdfActionGoTo {};_cfb .PdfAction =_ab ;_ab .SetContext (_cfb );return _cfb ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject implements interface PdfModel.
func (_egfc *PdfAnnotationText )ToPdfObject ()_gadb .PdfObject {_egfc .PdfAnnotation .ToPdfObject ();_ggb :=_egfc ._defb ;_bcfa :=_ggb .PdfObject .(*_gadb .PdfObjectDictionary );if _egfc .PdfAnnotationMarkup !=nil {_egfc .PdfAnnotationMarkup .appendToPdfDictionary (_bcfa );
};_bcfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0054\u0065\u0078\u0074"));_bcfa .SetIfNotNil ("\u004f\u0070\u0065\u006e",_egfc .Open );_bcfa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_egfc .Name );_bcfa .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_egfc .State );
_bcfa .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_egfc .StateModel );return _ggb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_deca *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _deca .UnderlyingCS ==nil {return nil ,_bb .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _deca .UnderlyingCS .ColorFromFloats (vals );};func (_dccf *PdfReader )newPdfAnnotationRichMediaFromDict (_egga *_gadb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bdac :=&PdfAnnotationRichMedia {};_bdac .RichMediaSettings =_egga .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_bdac .RichMediaContent =_egga .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _bdac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecec *PdfAnnotationWidget )ToPdfObject ()_gadb .PdfObject {_ecec .PdfAnnotation .ToPdfObject ();_cfe :=_ecec ._defb ;_eaaa :=_cfe .PdfObject .(*_gadb .PdfObjectDictionary );if _ecec ._baa {return _cfe ;};_ecec ._baa =true ;_eaaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_eaaa .SetIfNotNil ("\u0048",_ecec .H );_eaaa .SetIfNotNil ("\u004d\u004b",_ecec .MK );_eaaa .SetIfNotNil ("\u0041",_ecec .A );_eaaa .SetIfNotNil ("\u0041\u0041",_ecec .AA );_eaaa .SetIfNotNil ("\u0042\u0053",_ecec .BS );_afcf :=_ecec .Parent ;if _ecec ._bag !=nil {if _ecec ._bag ._fbbf ==_ecec ._defb {_ecec ._bag .ToPdfObject ();
};_afcf =_ecec ._bag .GetContainingPdfObject ();};if _afcf !=_cfe {_eaaa .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_afcf );};_ecec ._baa =false ;return _cfe ;};

// ToPdfObject implements interface PdfModel.
func (_dad *PdfAnnotationProjection )ToPdfObject ()_gadb .PdfObject {_dad .PdfAnnotation .ToPdfObject ();_ecded :=_dad ._defb ;_cdf :=_ecded .PdfObject .(*_gadb .PdfObjectDictionary );_dad .PdfAnnotationMarkup .appendToPdfDictionary (_cdf );return _ecded ;
};

// L returns the value of the L component of the color.
func (_gegd *PdfColorLab )L ()float64 {return _gegd [0]};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _gadb .PdfObject ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dcbf *PdfColorLab )GetNumComponents ()int {return 3};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ageda *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_eceab :=RC4_128bit ;if options !=nil {_eceab =options .Algorithm ;};_gbaf :=_gad .PermOwner ;if options !=nil {_gbaf =options .Permissions ;};var _babcg _dd .Filter ;
switch _eceab {case RC4_128bit :_babcg =_dd .NewFilterV2 (16);case AES_128bit :_babcg =_dd .NewFilterAESV2 ();case AES_256bit :_babcg =_dd .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_fdfb ,_bfcegc ,_fbbcb :=_gadb .PdfCryptNewEncrypt (_babcg ,userPass ,ownerPass ,_gbaf );if _fbbcb !=nil {return _fbbcb ;};_ageda ._fbgac =_fdfb ;if _bfcegc .Major !=0{_ageda .SetVersion (_bfcegc .Major ,_bfcegc .Minor );};_ageda ._degga =_bfcegc .Encrypt ;
_ageda ._gcbdb ,_ageda ._eedfa =_bfcegc .ID0 ,_bfcegc .ID1 ;_ebbfc :=_gadb .MakeIndirectObject (_bfcegc .Encrypt );_ageda ._ceadb =_ebbfc ;_ageda .addObject (_ebbfc );return nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_bcedab *Outline )ToPdfOutline ()*PdfOutline {_cfbag :=NewPdfOutline ();var _ebbdd []*PdfOutlineItem ;var _eggb int64 ;var _fccad *PdfOutlineItem ;for _ ,_dgfc :=range _bcedab .Entries {_fcdb ,_febea :=_dgfc .ToPdfOutlineItem ();_fcdb .Parent =&_cfbag .PdfOutlineTreeNode ;
if _fccad !=nil {_fccad .Next =&_fcdb .PdfOutlineTreeNode ;_fcdb .Prev =&_fccad .PdfOutlineTreeNode ;};_ebbdd =append (_ebbdd ,_fcdb );_eggb +=_febea ;_fccad =_fcdb ;};_ceeaa :=int64 (len (_ebbdd ));_eggb +=_ceeaa ;if _ceeaa > 0{_cfbag .First =&_ebbdd [0].PdfOutlineTreeNode ;
_cfbag .Last =&_ebbdd [_ceeaa -1].PdfOutlineTreeNode ;_cfbag .Count =&_eggb ;};return _cfbag ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_cdcbd *PdfFont )CharcodesToUnicodeWithStats (charcodes []_gcc .CharCode )(_deaae []rune ,_cfcd ,_cedb int ){_dbgc ,_cfcd ,_cedb :=_cdcbd .CharcodesToStrings (charcodes );return []rune (_db .Join (_dbgc ,"")),_cfcd ,_cedb ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_efdg :=PdfPage {};_efdg ._dfbg =_gadb .MakeDict ();_efdg .Resources =NewPdfPageResources ();_gbbg :=_gadb .PdfIndirectObject {};_gbbg .PdfObject =_efdg ._dfbg ;_efdg ._fgbea =&_gbbg ;_efdg ._ffaee =*_efdg ._dfbg ;return &_efdg ;
};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// SetVersion sets the PDF version of the output file.
func (_eedaa *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_eedaa ._dagb .Major =majorVersion ;_eedaa ._dagb .Minor =minorVersion ;};func (_dba *PdfReader )newPdfAnnotationPolygonFromDict (_dbgg *_gadb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_dfdf :=PdfAnnotationPolygon {};
_bafb ,_bagcg :=_dba .newPdfAnnotationMarkupFromDict (_dbgg );if _bagcg !=nil {return nil ,_bagcg ;};_dfdf .PdfAnnotationMarkup =_bafb ;_dfdf .Vertices =_dbgg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dfdf .LE =_dbgg .Get ("\u004c\u0045");
_dfdf .BS =_dbgg .Get ("\u0042\u0053");_dfdf .IC =_dbgg .Get ("\u0049\u0043");_dfdf .BE =_dbgg .Get ("\u0042\u0045");_dfdf .IT =_dbgg .Get ("\u0049\u0054");_dfdf .Measure =_dbgg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dfdf ,nil ;};var _bgegc =false ;


// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ceecb FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ceecb .Mask ()|fl .Mask ())};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bfac *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fdag ,_cfda :=color .(*PdfColorCalGray );if !_cfda {_cg .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_fdag .Val ();X :=_bfac .WhitePoint [0]*_gee .Pow (ANorm ,_bfac .Gamma );Y :=_bfac .WhitePoint [1]*_gee .Pow (ANorm ,_bfac .Gamma );
Z :=_bfac .WhitePoint [2]*_gee .Pow (ANorm ,_bfac .Gamma );_cgdb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ebfd :=-0.969256*X +1.875992*Y +0.041556*Z ;_bcedf :=0.055648*X +-0.204043*Y +1.057311*Z ;_cgdb =_gee .Min (_gee .Max (_cgdb ,0),1.0);_ebfd =_gee .Min (_gee .Max (_ebfd ,0),1.0);
_bcedf =_gee .Min (_gee .Max (_bcedf ,0),1.0);return NewPdfColorDeviceRGB (_cgdb ,_ebfd ,_bcedf ),nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _gadb .PdfObject ;Sy _gadb .PdfObject ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_gadb .PdfObjectInteger ;BitsPerComponent *_gadb .PdfObjectInteger ;VerticesPerRow *_gadb .PdfObjectInteger ;Decode *_gadb .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_dfe :=NewPdfAnnotation ();_faae :=&PdfAnnotationLine {};_faae .PdfAnnotation =_dfe ;_faae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfe .SetContext (_faae );return _faae ;};func (_dcda *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _dcda ._becf .GetCrypter ()!=nil &&!_dcda ._becf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fdcab :=_dcda ._gbef ;_gdea :=_fdcab .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gdea ==nil {return nil ,nil ;};_baffg ,_ggdcea :=_gadb .GetIndirect (_gdea );_gdea =_gadb .TraceToDirectObject (_gdea );if _gadb .IsNullObject (_gdea ){_cg .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_gedc ,_adfccg :=_gadb .GetDict (_gdea );if !_adfccg {_cg .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gdea );_cg .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gdea );};_cg .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_cg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_dcda ._fdbdd {_caefe :=_dcda .traverseObjectData (_gedc );
if _caefe !=nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_caefe );
return nil ,_caefe ;};};_afgff ,_eebdd :=_dcda .newPdfAcroFormFromDict (_baffg ,_gedc );if _eebdd !=nil {return nil ,_eebdd ;};_afgff ._gfab =!_ggdcea ;return _afgff ,nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_ccea *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_dbfg ,_bbfad :=_ccea .GetTrailer ();if _bbfad !=nil {return nil ,_bbfad ;};var _cfcab *_gadb .PdfObjectDictionary ;_fbaag :=_dbfg .Get ("\u0049\u006e\u0066\u006f");switch _efbg :=_fbaag .(type ){case *_gadb .PdfObjectReference :_ddaae :=_efbg ;
_fbaag ,_bbfad =_ccea .GetIndirectObjectByNumber (int (_ddaae .ObjectNumber ));_fbaag =_gadb .TraceToDirectObject (_fbaag );if _bbfad !=nil {return nil ,_bbfad ;};_cfcab ,_ =_fbaag .(*_gadb .PdfObjectDictionary );case *_gadb .PdfObjectDictionary :_cfcab =_efbg ;
};if _cfcab ==nil {return nil ,_bb .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_dfea ,_bbfad :=NewPdfInfoFromObject (_cfcab );if _bbfad !=nil {return nil ,_bbfad ;
};return _dfea ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cegcb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cegcb .AlternateSpace ==nil {return nil ,_bb .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cegcb .AlternateSpace .ColorToRGB (color );};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_agae :=NewPdfAnnotation ();_bbe :=&PdfAnnotationRedact {};_bbe .PdfAnnotation =_agae ;_bbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agae .SetContext (_bbe );return _bbe ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fcaaf *XObjectForm )GetContainingPdfObject ()_gadb .PdfObject {return _fcaaf ._feadbe };

// GetNumComponents returns the number of color components (1 for CalGray).
func (_daeg *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_cccf *PdfAnnotationTrapNet )ToPdfObject ()_gadb .PdfObject {_cccf .PdfAnnotation .ToPdfObject ();_degc :=_cccf ._defb ;_gcbe :=_degc .PdfObject .(*_gadb .PdfObjectDictionary );_gcbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _degc ;};func _aace (_cfgdc []byte )[]byte {const _gafcc =52845;const _dbafd =22719;_eeac :=55665;for _ ,_eacag :=range _cfgdc [:4]{_eeac =(int (_eacag )+_eeac )*_gafcc +_dbafd ;};_cbcb :=make ([]byte ,len (_cfgdc )-4);for _cagda ,_cbeb :=range _cfgdc [4:]{_cbcb [_cagda ]=byte (int (_cbeb )^_eeac >>8);
_eeac =(int (_cbeb )+_eeac )*_gafcc +_dbafd ;};return _cbcb ;};func (_bcdg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _bcdg ._bbgfe };

// Encoder returns the font's text encoder.
func (_agcc pdfFontType3 )Encoder ()_gcc .TextEncoder {return _agcc ._bbcg };const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _gadb .PdfObject ;RichMediaContent _gadb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbgf *PdfAnnotationFreeText )ToPdfObject ()_gadb .PdfObject {_bbgf .PdfAnnotation .ToPdfObject ();_bbdda :=_bbgf ._defb ;_gfee :=_bbdda .PdfObject .(*_gadb .PdfObjectDictionary );_bbgf .PdfAnnotationMarkup .appendToPdfDictionary (_gfee );_gfee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_gfee .SetIfNotNil ("\u0044\u0041",_bbgf .DA );_gfee .SetIfNotNil ("\u0051",_bbgf .Q );_gfee .SetIfNotNil ("\u0052\u0043",_bbgf .RC );_gfee .SetIfNotNil ("\u0044\u0053",_bbgf .DS );_gfee .SetIfNotNil ("\u0043\u004c",_bbgf .CL );_gfee .SetIfNotNil ("\u0049\u0054",_bbgf .IT );
_gfee .SetIfNotNil ("\u0042\u0045",_bbgf .BE );_gfee .SetIfNotNil ("\u0052\u0044",_bbgf .RD );_gfee .SetIfNotNil ("\u0042\u0053",_bbgf .BS );_gfee .SetIfNotNil ("\u004c\u0045",_bbgf .LE );return _bbdda ;};

// Y returns the value of the yellow component of the color.
func (_ccdd *PdfColorDeviceCMYK )Y ()float64 {return _ccdd [2]};

// SetContext sets the sub action (context).
func (_gb *PdfAction )SetContext (ctx PdfModel ){_gb ._gf =ctx };

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gafbf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gafbf ._bbgfa !=nil {return _gafbf ._bbgfa ,nil ;};if _gafbf .ColorSpace ==nil {return nil ,nil ;};_fdagf ,_aagba :=_fafad (_gafbf .ColorSpace );if _aagba !=nil {return nil ,_aagba ;
};_gafbf ._bbgfa =_fdagf ;return _gafbf ._bbgfa ,nil ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_eaddg :=&PdfShadingPatternType3 {};_eaddg .Matrix =_gadb .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_eaddg .PdfPattern =&PdfPattern {};_eaddg .PdfPattern .PatternType =int64 (*_gadb .MakeInteger (2));
_eaddg .PdfPattern ._afbdb =_eaddg ;_eaddg .PdfPattern ._cdaag =_gadb .MakeIndirectObject (_gadb .MakeDict ());return _eaddg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_gccg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_cffcb *_dgd .Document )error ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fadf *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fadf ._afbdb .(*PdfTilingPattern );};func _ddeg (_bacae _gadb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_gba :=NewPdfColorspaceSpecialIndexed ();if _gaedb ,_aca :=_bacae .(*_gadb .PdfIndirectObject );
_aca {_gba ._faaca =_gaedb ;};_bacae =_gadb .TraceToDirectObject (_bacae );_caff ,_gfadb :=_bacae .(*_gadb .PdfObjectArray );if !_gfadb {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _caff .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_bacae =_caff .Get (0);_gabc ,_gfadb :=_bacae .(*_gadb .PdfObjectName );if !_gfadb {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gabc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_bacae =_caff .Get (1);_gada ,_ebcb :=DetermineColorspaceNameFromPdfObject (_bacae );if _ebcb !=nil {return nil ,_ebcb ;};if _gada =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_gada =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_cg .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_gada );
return nil ,_cdga ;};_bgdc ,_ebcb :=NewPdfColorspaceFromPdfObject (_bacae );if _ebcb !=nil {return nil ,_ebcb ;};_gba .Base =_bgdc ;_bacae =_caff .Get (2);_faab ,_ebcb :=_gadb .GetNumberAsInt64 (_bacae );if _ebcb !=nil {return nil ,_ebcb ;};if _faab > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_gba .HiVal =int (_faab );_bacae =_caff .Get (3);_gba .Lookup =_bacae ;_bacae =_gadb .TraceToDirectObject (_bacae );var _agc []byte ;if _dcded ,_dace :=_bacae .(*_gadb .PdfObjectString );_dace {_agc =_dcded .Bytes ();_cg .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_agc );
}else if _daba ,_eacg :=_bacae .(*_gadb .PdfObjectStream );_eacg {_cg .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_bacae .String ());_cg .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_daba .Stream ),_daba .Stream );
_addg ,_fbege :=_gadb .DecodeStream (_daba );if _fbege !=nil {return nil ,_fbege ;};_cg .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_addg ),_addg );_agc =_addg ;}else {_cg .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bacae );
return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_agc )< _gba .Base .GetNumComponents ()*(_gba .HiVal +1){_cg .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_cg .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_agc ),_gba .Base .GetNumComponents (),_gba .HiVal );
}else {_agc =_agc [:_gba .Base .GetNumComponents ()*(_gba .HiVal +1)];};_gba ._gff =_agc ;return _gba ,nil ;};func (_fffad *Image )resampleLowBits (_daddag []uint32 ){_fdcfb :=_cf .BytesPerLine (int (_fffad .Width ),int (_fffad .BitsPerComponent ),_fffad .ColorComponents );
_ggcead :=make ([]byte ,_fffad .ColorComponents *_fdcfb *int (_fffad .Height ));_gdebc :=int (_fffad .BitsPerComponent )*_fffad .ColorComponents *int (_fffad .Width );_edce :=uint8 (8);var (_abaga ,_egce int ;_ddfc uint32 ;);for _gcaca :=0;_gcaca < int (_fffad .Height );
_gcaca ++{_egce =_gcaca *_fdcfb ;for _adcfe :=0;_adcfe < _gdebc ;_adcfe ++{_ddfc =_daddag [_abaga ];_edce -=uint8 (_fffad .BitsPerComponent );_ggcead [_egce ]|=byte (_ddfc )<<_edce ;if _edce ==0{_edce =8;_egce ++;};_abaga ++;};};_fffad .Data =_ggcead ;
};func (_gcba *Image )samplesAddPadding (_ffaef []uint32 )[]uint32 {_gfdf :=_cf .BytesPerLine (int (_gcba .Width ),int (_gcba .BitsPerComponent ),_gcba .ColorComponents )*(8/int (_gcba .BitsPerComponent ));_agdbg :=_gfdf *int (_gcba .Height );if len (_ffaef )==_agdbg {return _ffaef ;
};_aegfa :=make ([]uint32 ,_agdbg );_ecdcc :=int (_gcba .Width )*_gcba .ColorComponents ;for _cdef :=0;_cdef < int (_gcba .Height );_cdef ++{_ffafg :=_cdef *int (_gcba .Width );_acda :=_cdef *_gfdf ;for _acdbd :=0;_acdbd < _ecdcc ;_acdbd ++{_aegfa [_acda +_acdbd ]=_ffaef [_ffafg +_acdbd ];
};};return _aegfa ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_baeb *PdfTilingPattern )ToPdfObject ()_gadb .PdfObject {_baeb .PdfPattern .ToPdfObject ();_eceda :=_baeb .getDict ();if _baeb .PaintType !=nil {_eceda .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_baeb .PaintType );};if _baeb .TilingType !=nil {_eceda .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_baeb .TilingType );
};if _baeb .BBox !=nil {_eceda .Set ("\u0042\u0042\u006f\u0078",_baeb .BBox .ToPdfObject ());};if _baeb .XStep !=nil {_eceda .Set ("\u0058\u0053\u0074e\u0070",_baeb .XStep );};if _baeb .YStep !=nil {_eceda .Set ("\u0059\u0053\u0074e\u0070",_baeb .YStep );
};if _baeb .Resources !=nil {_eceda .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_baeb .Resources .ToPdfObject ());};if _baeb .Matrix !=nil {_eceda .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_baeb .Matrix );};return _baeb ._cdaag ;};

// ToPdfObject implements interface PdfModel.
func (_bgcdb *PdfTransformParamsDocMDP )ToPdfObject ()_gadb .PdfObject {_eacac :=_gadb .MakeDict ();_eacac .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bgcdb .Type );_eacac .SetIfNotNil ("\u0056",_bgcdb .V );_eacac .SetIfNotNil ("\u0050",_bgcdb .P );return _eacac ;
};

// ToInteger convert to an integer format.
func (_dgff *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_beed :=_gee .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_beed *_dgff .C ()),uint32 (_beed *_dgff .M ()),uint32 (_beed *_dgff .Y ()),uint32 (_beed *_dgff .K ())};};func (_ddgba *PdfReader )resolveReference (_cdegd *_gadb .PdfObjectReference )(_gadb .PdfObject ,bool ,error ){_ddad ,_gafb :=_ddgba ._becf .ObjCache [int (_cdegd .ObjectNumber )];
if !_gafb {_cg .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cdegd );_fgcbc ,_dgebe :=_ddgba ._becf .LookupByReference (*_cdegd );if _dgebe !=nil {return nil ,false ,_dgebe ;};_ddgba ._becf .ObjCache [int (_cdegd .ObjectNumber )]=_fgcbc ;
return _fgcbc ,false ,nil ;};return _ddad ,true ,nil ;};func _agfbd (_fgfa []byte )([]byte ,error ){_bbabb :=_bcf .New ();if _ ,_ceeff :=_cc .Copy (_bbabb ,_dbd .NewReader (_fgfa ));_ceeff !=nil {return nil ,_ceeff ;};return _bbabb .Sum (nil ),nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_cbdf *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ddeed ,_ ,_gfaf :=_cbdf .CharcodesToUnicodeWithStats (_cbdf .BytesToCharcodes (data ));_cceg :=_gcc .ExpandLigatures (_ddeed );return _cceg ,_fd .RuneCountInString (_cceg ),_gfaf ;
};

// ToPdfObject implements interface PdfModel.
func (_gfce *PdfAnnotationInk )ToPdfObject ()_gadb .PdfObject {_gfce .PdfAnnotation .ToPdfObject ();_dee :=_gfce ._defb ;_edca :=_dee .PdfObject .(*_gadb .PdfObjectDictionary );_gfce .PdfAnnotationMarkup .appendToPdfDictionary (_edca );_edca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0049\u006e\u006b"));
_edca .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_gfce .InkList );_edca .SetIfNotNil ("\u0042\u0053",_gfce .BS );return _dee ;};func _bgdag (_eagec map[_bf .GID ]int ,_bcceb uint16 )*_gadb .PdfObjectArray {_ggdb :=&_gadb .PdfObjectArray {};_dcec :=_bf .GID (_bcceb );
for _bacb :=_bf .GID (0);_bacb < _dcec ;{_bbfc ,_caba :=_eagec [_bacb ];if !_caba {_bacb ++;continue ;};_cfcaf :=_bacb ;for _fedg :=_cfcaf +1;_fedg < _dcec ;_fedg ++{if _afcfd ,_ggdg :=_eagec [_fedg ];!_ggdg ||_bbfc !=_afcfd {break ;};_cfcaf =_fedg ;};
_ggdb .Append (_gadb .MakeInteger (int64 (_bacb )));_ggdb .Append (_gadb .MakeInteger (int64 (_cfcaf )));_ggdb .Append (_gadb .MakeInteger (int64 (_bbfc )));_bacb =_cfcaf +1;};return _ggdb ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_ccee *PdfFieldButton )SetType (btype ButtonType ){_ggeg :=uint32 (0);if _ccee .Ff !=nil {_ggeg =uint32 (*_ccee .Ff );};switch btype {case ButtonTypePush :_ggeg |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_ggeg |=FieldFlagRadio .Mask ();
};_ccee .Ff =_gadb .MakeInteger (int64 (_ggeg ));};

// MergePageWith appends page content to source Pdf file page content.
func (_gagd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_gdeg :=pageNum -1;var _eegb *PdfPage ;for _bdcdb ,_dcgg :=range _gagd ._dade {if _bdcdb ==_gdeg {_eegb =_dcgg ;};};if _eegb ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _eegb ._fgbea !=nil &&_eegb ._fgbea .GetParser ()==_gagd ._fff ._becf {_eegb =_eegb .Duplicate ();_gagd ._dade [_gdeg ]=_eegb ;};page =page .Duplicate ();_bedge (page );_ccaa :=_gbfdg (_eegb );_eage :=_gbfdg (page );_efag :=make (map[_gadb .PdfObjectName ]_gadb .PdfObjectName );
for _gcec :=range _eage {if _ ,_gecd :=_ccaa [_gcec ];_gecd {for _gcdc :=1;true ;_gcdc ++{_gac :=_gadb .PdfObjectName (string (_gcec )+_gc .Itoa (_gcdc ));if _ ,_bfga :=_ccaa [_gac ];!_bfga {_efag [_gcec ]=_gac ;break ;};};};};_bdcbf ,_bddg :=page .GetContentStreams ();
if _bddg !=nil {return _bddg ;};_aff ,_bddg :=_eegb .GetContentStreams ();if _bddg !=nil {return _bddg ;};for _fdbg ,_cfaca :=range _bdcbf {for _fbdc ,_bged :=range _efag {_cfaca =_db .Replace (_cfaca ,"\u002f"+string (_fbdc ),"\u002f"+string (_bged ),-1);
};_bdcbf [_fdbg ]=_cfaca ;};_aff =append (_aff ,_bdcbf ...);if _acgf :=_eegb .SetContentStreams (_aff ,_gadb .NewFlateEncoder ());_acgf !=nil {return _acgf ;};_eegb ._ecca =append (_eegb ._ecca ,page ._ecca ...);if _eegb .Resources ==nil {_eegb .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_eegb .Resources .Font =_gagd .mergeResources (_eegb .Resources .Font ,page .Resources .Font ,_efag );_eegb .Resources .XObject =_gagd .mergeResources (_eegb .Resources .XObject ,page .Resources .XObject ,_efag );_eegb .Resources .Properties =_gagd .mergeResources (_eegb .Resources .Properties ,page .Resources .Properties ,_efag );
if _eegb .Resources .ProcSet ==nil {_eegb .Resources .ProcSet =page .Resources .ProcSet ;};_eegb .Resources .Shading =_gagd .mergeResources (_eegb .Resources .Shading ,page .Resources .Shading ,_efag );_eegb .Resources .ExtGState =_gagd .mergeResources (_eegb .Resources .ExtGState ,page .Resources .ExtGState ,_efag );
};_gbeb ,_bddg :=_eegb .GetMediaBox ();if _bddg !=nil {return _bddg ;};_efea ,_bddg :=page .GetMediaBox ();if _bddg !=nil {return _bddg ;};var _ebefc bool ;if _gbeb .Llx > _efea .Llx {_gbeb .Llx =_efea .Llx ;_ebefc =true ;};if _gbeb .Lly > _efea .Lly {_gbeb .Lly =_efea .Lly ;
_ebefc =true ;};if _gbeb .Urx < _efea .Urx {_gbeb .Urx =_efea .Urx ;_ebefc =true ;};if _gbeb .Ury < _efea .Ury {_gbeb .Ury =_efea .Ury ;_ebefc =true ;};if _ebefc {_eegb .MediaBox =_gbeb ;};return nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_fabee *XObjectForm )GetContentStream ()([]byte ,error ){_fcbga ,_ccfbed :=_gadb .DecodeStream (_fabee ._feadbe );if _ccfbed !=nil {return nil ,_ccfbed ;};return _fcbga ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_ffc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _gadb .GetNumberAsFloat (_ffc .Ascent );};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gadg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgae ,_dadbg :=color .(*PdfColorPattern );if !_dadbg {_cg .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _bgae .Color ==nil {return color ,nil ;};if _gadg .UnderlyingCS ==nil {return nil ,_bb .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gadg .UnderlyingCS .ColorToRGB (_bgae .Color );
};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fedc *Image )Resample (targetBitsPerComponent int64 ){if _fedc .BitsPerComponent ==targetBitsPerComponent {return ;};_bcfaa :=_fedc .GetSamples ();if targetBitsPerComponent < _fedc .BitsPerComponent {_bfded :=_fedc .BitsPerComponent -targetBitsPerComponent ;
for _gdcg :=range _bcfaa {_bcfaa [_gdcg ]>>=uint (_bfded );};}else if targetBitsPerComponent > _fedc .BitsPerComponent {_fecad :=targetBitsPerComponent -_fedc .BitsPerComponent ;for _edbde :=range _bcfaa {_bcfaa [_edbde ]<<=uint (_fecad );};};_fedc .BitsPerComponent =targetBitsPerComponent ;
if _fedc .BitsPerComponent < 8{_fedc .resampleLowBits (_bcfaa );return ;};_aefgd :=_cf .BytesPerLine (int (_fedc .Width ),int (_fedc .BitsPerComponent ),_fedc .ColorComponents );_gcaa :=make ([]byte ,_aefgd *int (_fedc .Height ));var (_afgbb ,_febcc ,_bfcda ,_agade int ;
_gaede uint32 ;);for _bfcda =0;_bfcda < int (_fedc .Height );_bfcda ++{_afgbb =_bfcda *_aefgd ;_febcc =(_bfcda +1)*_aefgd -1;_ffdbf :=_cb .ResampleUint32 (_bcfaa [_afgbb :_febcc ],int (targetBitsPerComponent ),8);for _agade ,_gaede =range _ffdbf {_gcaa [_agade +_afgbb ]=byte (_gaede );
};};_fedc .Data =_gcaa ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _gadb .PdfObject ;V _gadb .PdfObject ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cggdc *PdfFieldButton )ToPdfObject ()_gadb .PdfObject {_cggdc .PdfField .ToPdfObject ();_bdeeb :=_cggdc ._fbbf ;_fbbg :=_bdeeb .PdfObject .(*_gadb .PdfObjectDictionary );_fbbg .Set ("\u0046\u0054",_gadb .MakeName ("\u0042\u0074\u006e"));if _cggdc .Opt !=nil {_fbbg .Set ("\u004f\u0070\u0074",_cggdc .Opt );
};return _bdeeb ;};

// B returns the value of the B component of the color.
func (_ddff *PdfColorCalRGB )B ()float64 {return _ddff [1]};func (_cce *PdfReader )newPdfActionMovieFromDict (_gfc *_gadb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_gfc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_gfc .Get ("\u0054"),Operation :_gfc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_afegbb *PdfWriter )optimizeDocument ()error {if _afegbb ._edcdc ==nil {return nil ;};_cdcab ,_cgdag :=_gadb .GetDict (_afegbb ._ceeegd );if !_cgdag {return _bb .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ddffg :=_dgd .Document {ID :[2]string {_afegbb ._gcbdb ,_afegbb ._eedfa },Version :_afegbb ._dagb ,Objects :_afegbb ._agefec ,Info :_cdcab ,Crypt :_afegbb ._fbgac ,UseHashBasedID :_afegbb ._addag };if _cbefd :=_afegbb ._edcdc .ApplyStandard (&_ddffg );
_cbefd !=nil {return _cbefd ;};_afegbb ._gcbdb ,_afegbb ._eedfa =_ddffg .ID [0],_ddffg .ID [1];_afegbb ._dagb =_ddffg .Version ;_afegbb ._agefec =_ddffg .Objects ;_afegbb ._ceeegd .PdfObject =_ddffg .Info ;_afegbb ._addag =_ddffg .UseHashBasedID ;_afegbb ._fbgac =_ddffg .Crypt ;
_affdb :=make (map[_gadb .PdfObject ]struct{},len (_afegbb ._agefec ));for _ ,_ceabf :=range _afegbb ._agefec {_affdb [_ceabf ]=struct{}{};};_afegbb ._gacff =_affdb ;return nil ;};func (_gdcca *PdfReader )loadAnnotations (_cfgbb _gadb .PdfObject )([]*PdfAnnotation ,error ){_efdd ,_eged :=_gadb .GetArray (_cfgbb );
if !_eged {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _ggcee []*PdfAnnotation ;for _ ,_cecee :=range _efdd .Elements (){_cecee =_gadb .ResolveReference (_cecee );
if _ ,_edecd :=_cecee .(*_gadb .PdfObjectNull );_edecd {continue ;};_fdaff ,_eaadf :=_cecee .(*_gadb .PdfObjectDictionary );_cecbae ,_dcbbf :=_cecee .(*_gadb .PdfIndirectObject );if _eaadf {_cecbae =&_gadb .PdfIndirectObject {};_cecbae .PdfObject =_fdaff ;
}else {if !_dcbbf {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_ggdd ,_edeggg :=_gdcca .newPdfAnnotationFromIndirectObject (_cecbae );
if _edeggg !=nil {return nil ,_edeggg ;};switch _dfbaa :=_ggdd .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_bgca :=range _gdcca .AcroForm .AllFields (){if _bgca ._fbbf ==_dfbaa .Parent {_dfbaa ._bag =_bgca ;break ;};};};if _ggdd !=nil {_ggcee =append (_ggcee ,_ggdd );
};};return _ggcee ,nil ;};func (_gcafd *PdfWriter )writeAcroFormFields ()error {if _gcafd ._eaagb ==nil {return nil ;};_cg .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_cfdae :=_gcafd ._eaagb .ToPdfObject ();
_cg .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cfdae );_gcafd ._gaeab .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cfdae );_eaed :=_gcafd .addObjects (_cfdae );if _eaed !=nil {return _eaed ;
};return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bbcgg *PdfShadingPatternType3 )ToPdfObject ()_gadb .PdfObject {_bbcgg .PdfPattern .ToPdfObject ();_efdec :=_bbcgg .getDict ();if _bbcgg .Shading !=nil {_efdec .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bbcgg .Shading .ToPdfObject ());};if _bbcgg .Matrix !=nil {_efdec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbcgg .Matrix );
};if _bbcgg .ExtGState !=nil {_efdec .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bbcgg .ExtGState );};return _bbcgg ._cdaag ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_ccfag :=PdfColorDeviceGray (grayVal );return &_ccfag ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_afbdb PdfModel ;_cdaag _gadb .PdfObject ;};func (_feef *PdfWriter )copyObject (_agedg _gadb .PdfObject ,_fadgg map[_gadb .PdfObject ]_gadb .PdfObject ,_fecbf map[_gadb .PdfObject ]struct{},_cegbb bool )_gadb .PdfObject {_ffgcd :=!_feef ._gfdfd &&_fecbf !=nil ;
if _ebcfg ,_cbccb :=_fadgg [_agedg ];_cbccb {if _ffgcd &&!_cegbb {delete (_fecbf ,_agedg );};return _ebcfg ;};if _agedg ==nil {_debacc :=_gadb .MakeNull ();return _debacc ;};_bbad :=_agedg ;switch _fbabb :=_agedg .(type ){case *_gadb .PdfObjectArray :_gfgcd :=_gadb .MakeArray ();
_bbad =_gfgcd ;_fadgg [_agedg ]=_bbad ;for _ ,_adecdb :=range _fbabb .Elements (){_gfgcd .Append (_feef .copyObject (_adecdb ,_fadgg ,_fecbf ,_cegbb ));};case *_gadb .PdfObjectStreams :_ecece :=&_gadb .PdfObjectStreams {PdfObjectReference :_fbabb .PdfObjectReference };
_bbad =_ecece ;_fadgg [_agedg ]=_bbad ;for _ ,_gegdf :=range _fbabb .Elements (){_ecece .Append (_feef .copyObject (_gegdf ,_fadgg ,_fecbf ,_cegbb ));};case *_gadb .PdfObjectStream :_dgfb :=&_gadb .PdfObjectStream {Stream :_fbabb .Stream ,PdfObjectReference :_fbabb .PdfObjectReference };
_bbad =_dgfb ;_fadgg [_agedg ]=_bbad ;_dgfb .PdfObjectDictionary =_feef .copyObject (_fbabb .PdfObjectDictionary ,_fadgg ,_fecbf ,_cegbb ).(*_gadb .PdfObjectDictionary );case *_gadb .PdfObjectDictionary :var _bdfb bool ;if _ffgcd &&!_cegbb {if _ggdcec ,_ :=_gadb .GetNameVal (_fbabb .Get ("\u0054\u0079\u0070\u0065"));
_ggdcec =="\u0050\u0061\u0067\u0065"{_ ,_bdaea :=_feef ._agcgc [_fbabb ];_cegbb =!_bdaea ;_bdfb =_cegbb ;};};_ggebfg :=_gadb .MakeDict ();_bbad =_ggebfg ;_fadgg [_agedg ]=_bbad ;for _ ,_bgdcc :=range _fbabb .Keys (){_ggebfg .Set (_bgdcc ,_feef .copyObject (_fbabb .Get (_bgdcc ),_fadgg ,_fecbf ,_cegbb ));
};if _bdfb {_bbad =_gadb .MakeNull ();_cegbb =false ;};case *_gadb .PdfIndirectObject :_cdgbd :=&_gadb .PdfIndirectObject {PdfObjectReference :_fbabb .PdfObjectReference };_bbad =_cdgbd ;_fadgg [_agedg ]=_bbad ;_cdgbd .PdfObject =_feef .copyObject (_fbabb .PdfObject ,_fadgg ,_fecbf ,_cegbb );
case *_gadb .PdfObjectString :_edgg :=*_fbabb ;_bbad =&_edgg ;_fadgg [_agedg ]=_bbad ;case *_gadb .PdfObjectName :_deffeb :=*_fbabb ;_bbad =&_deffeb ;_fadgg [_agedg ]=_bbad ;case *_gadb .PdfObjectNull :_bbad =_gadb .MakeNull ();_fadgg [_agedg ]=_bbad ;
case *_gadb .PdfObjectInteger :_bgfce :=*_fbabb ;_bbad =&_bgfce ;_fadgg [_agedg ]=_bbad ;case *_gadb .PdfObjectReference :_gcda :=*_fbabb ;_bbad =&_gcda ;_fadgg [_agedg ]=_bbad ;case *_gadb .PdfObjectFloat :_gddfgg :=*_fbabb ;_bbad =&_gddfgg ;_fadgg [_agedg ]=_bbad ;
case *_gadb .PdfObjectBool :_bcecc :=*_fbabb ;_bbad =&_bcecc ;_fadgg [_agedg ]=_bbad ;case *pdfSignDictionary :_abbb :=&pdfSignDictionary {PdfObjectDictionary :_gadb .MakeDict (),_cbaef :_fbabb ._cbaef ,_cdce :_fbabb ._cdce };_bbad =_abbb ;_fadgg [_agedg ]=_bbad ;
for _ ,_afcec :=range _fbabb .Keys (){_abbb .Set (_afcec ,_feef .copyObject (_fbabb .Get (_afcec ),_fadgg ,_fecbf ,_cegbb ));};default:_cg .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_agedg );
};if _ffgcd &&_cegbb {_fecbf [_agedg ]=struct{}{};};return _bbad ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_gadb .PdfObjectStream ;OCSP []*_gadb .PdfObjectStream ;CRL []*_gadb .PdfObjectStream ;TU *_gadb .PdfObjectString ;TS *_gadb .PdfObjectString ;};func (_abcac *PdfWriter )seekByName (_aeabd _gadb .PdfObject ,_gacfb []string ,_dcgaf string )([]_gadb .PdfObject ,error ){_cg .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_aeabd );
var _fbcb []_gadb .PdfObject ;if _daeae ,_cbgcc :=_aeabd .(*_gadb .PdfIndirectObject );_cbgcc {return _abcac .seekByName (_daeae .PdfObject ,_gacfb ,_dcgaf );};if _gfcac ,_dbgacg :=_aeabd .(*_gadb .PdfObjectStream );_dbgacg {return _abcac .seekByName (_gfcac .PdfObjectDictionary ,_gacfb ,_dcgaf );
};if _cfbad ,_adbbg :=_aeabd .(*_gadb .PdfObjectDictionary );_adbbg {_cg .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_adcbe :=range _cfbad .Keys (){_ffeecb :=_cfbad .Get (_adcbe );if string (_adcbe )==_dcgaf {_fbcb =append (_fbcb ,_ffeecb );};for _ ,_gbdac :=range _gacfb {if string (_adcbe )==_gbdac {_cg .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gbdac );
_eaaacg ,_dbcfdd :=_abcac .seekByName (_ffeecb ,_gacfb ,_dcgaf );if _dbcfdd !=nil {return _fbcb ,_dbcfdd ;};_fbcb =append (_fbcb ,_eaaacg ...);break ;};};};return _fbcb ,nil ;};return _fbcb ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_feece *PdfOutlineItem )ToPdfObject ()_gadb .PdfObject {_ceced :=_feece ._ebbb ;_ggabf :=_ceced .PdfObject .(*_gadb .PdfObjectDictionary );_ggabf .Set ("\u0054\u0069\u0074l\u0065",_feece .Title );if _feece .A !=nil {_ggabf .Set ("\u0041",_feece .A );
};if _dbdc :=_ggabf .Get ("\u0053\u0045");_dbdc !=nil {_ggabf .Remove ("\u0053\u0045");};if _feece .C !=nil {_ggabf .Set ("\u0043",_feece .C );};if _feece .Dest !=nil {_ggabf .Set ("\u0044\u0065\u0073\u0074",_feece .Dest );};if _feece .F !=nil {_ggabf .Set ("\u0046",_feece .F );
};if _feece .Count !=nil {_ggabf .Set ("\u0043\u006f\u0075n\u0074",_gadb .MakeInteger (*_feece .Count ));};if _feece .Next !=nil {_ggabf .Set ("\u004e\u0065\u0078\u0074",_feece .Next .ToPdfObject ());};if _feece .First !=nil {_ggabf .Set ("\u0046\u0069\u0072s\u0074",_feece .First .ToPdfObject ());
};if _feece .Prev !=nil {_ggabf .Set ("\u0050\u0072\u0065\u0076",_feece .Prev .GetContext ().GetContainingPdfObject ());};if _feece .Last !=nil {_ggabf .Set ("\u004c\u0061\u0073\u0074",_feece .Last .GetContext ().GetContainingPdfObject ());};if _feece .Parent !=nil {_ggabf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_feece .Parent .GetContext ().GetContainingPdfObject ());
};return _ceced ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_deafg *PdfReader )GetEncryptionMethod ()string {_cffg :=_deafg ._becf .GetCrypter ();return _cffg .String ();};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_agdcf PdfOutputIntentType )String ()string {switch _agdcf {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_dcfcb *LTV )EnableChain (chain []*_g .Certificate )error {return _dcfcb .enable (nil ,chain ,"")};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cccgd .Lock ();defer _cccgd .Unlock ();_defee =producer };type fontCommon struct{_bbecb string ;_dccge string ;_gfgad string ;_eagb _gadb .PdfObject ;_ddbg *_gde .CMap ;_bbgfe *PdfFontDescriptor ;_febe int64 ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_fdbcdf *PdfSignature )GetDocMDPPermission ()(_cde .DocMDPPermission ,bool ){for _ ,_cabfe :=range _fdbcdf .Reference .Elements (){if _gfgce ,_egffef :=_gadb .GetDict (_cabfe );_egffef {if _fcade ,_ccdeg :=_gadb .GetNameVal (_gfgce .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_ccdeg &&_fcade =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _cadfg ,_cdgeg :=_gadb .GetDict (_gfgce .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cdgeg {if P ,_eebee :=_gadb .GetIntVal (_cadfg .Get ("\u0050"));
_eebee {return _cde .DocMDPPermission (P ),true ;};};};};};return 0,false ;};func _cbadf (_accd _gadb .PdfObject )(map[_gcc .CharCode ]float64 ,error ){if _accd ==nil {return nil ,nil ;};_cgeea ,_cccfc :=_gadb .GetArray (_accd );if !_cccfc {return nil ,nil ;
};_fcabe :=map[_gcc .CharCode ]float64 {};_cabdf :=_cgeea .Len ();for _gegc :=0;_gegc < _cabdf -1;_gegc ++{_aeab :=_gadb .TraceToDirectObject (_cgeea .Get (_gegc ));_dabcd ,_fcbdb :=_gadb .GetIntVal (_aeab );if !_fcbdb {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gegc ,_aeab );
};_gegc ++;if _gegc > _cabdf -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cgeea );};_cfgd :=_gadb .TraceToDirectObject (_cgeea .Get (_gegc ));
switch _cfgd .(type ){case *_gadb .PdfObjectArray :_ffcg ,_ :=_gadb .GetArray (_cfgd );if _bfbcd ,_ffgg :=_ffcg .ToFloat64Array ();_ffgg ==nil {for _aggcg :=0;_aggcg < len (_bfbcd );_aggcg ++{_fcabe [_gcc .CharCode (_dabcd +_aggcg )]=_bfbcd [_aggcg ];};
}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gegc ,_cfgd );};case *_gadb .PdfObjectInteger :_dgac ,_cecba :=_gadb .GetIntVal (_cfgd );
if !_cecba {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gegc ,_cfgd );};_gegc ++;if _gegc > _cabdf -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cgeea );
};_bacaa :=_cgeea .Get (_gegc );_gcefe ,_bbae :=_gadb .GetNumberAsFloat (_bacaa );if _bbae !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gegc ,_bacaa );
};for _ecee :=_dabcd ;_ecee <=_dgac ;_ecee ++{_fcabe [_gcc .CharCode (_ecee )]=_gcefe ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gegc ,_cfgd );
};};return _fcabe ,nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_gadb .PdfObjectStream )(*XObjectImage ,error ){_bceecd :=&XObjectImage {};_bceecd ._bgccg =stream ;_eadafe :=*(stream .PdfObjectDictionary );_dbbeg ,_gbebc :=_gadb .NewEncoderFromStream (stream );if _gbebc !=nil {return nil ,_gbebc ;
};_bceecd .Filter =_dbbeg ;if _daafd :=_gadb .TraceToDirectObject (_eadafe .Get ("\u0057\u0069\u0064t\u0068"));_daafd !=nil {_dggec ,_ecfb :=_daafd .(*_gadb .PdfObjectInteger );if !_ecfb {return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_acabd :=int64 (*_dggec );_bceecd .Width =&_acabd ;}else {return nil ,_bb .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gfcg :=_gadb .TraceToDirectObject (_eadafe .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gfcg !=nil {_fdced ,_bcgdd :=_gfcg .(*_gadb .PdfObjectInteger );if !_bcgdd {return nil ,_bb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ebgfcb :=int64 (*_fdced );
_bceecd .Height =&_ebgfcb ;}else {return nil ,_bb .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cdaad :=_gadb .TraceToDirectObject (_eadafe .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_cdaad !=nil {_eecc ,_eedggc :=NewPdfColorspaceFromPdfObject (_cdaad );if _eedggc !=nil {return nil ,_eedggc ;};_bceecd .ColorSpace =_eecc ;}else {_cg .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_bceecd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _efffg :=_gadb .TraceToDirectObject (_eadafe .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_efffg !=nil {_bbbag ,_fcdag :=_efffg .(*_gadb .PdfObjectInteger );
if !_fcdag {return nil ,_bb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bgffc :=int64 (*_bbbag );_bceecd .BitsPerComponent =&_bgffc ;};_bceecd .Intent =_eadafe .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_bceecd .ImageMask =_eadafe .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_bceecd .Mask =_eadafe .Get ("\u004d\u0061\u0073\u006b");_bceecd .Decode =_eadafe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_bceecd .Interpolate =_eadafe .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_bceecd .Alternatives =_eadafe .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_bceecd .SMask =_eadafe .Get ("\u0053\u004d\u0061s\u006b");_bceecd .SMaskInData =_eadafe .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_bceecd .Matte =_eadafe .Get ("\u004d\u0061\u0074t\u0065");_bceecd .Name =_eadafe .Get ("\u004e\u0061\u006d\u0065");_bceecd .StructParent =_eadafe .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bceecd .ID =_eadafe .Get ("\u0049\u0044");
_bceecd .OPI =_eadafe .Get ("\u004f\u0050\u0049");_bceecd .Metadata =_eadafe .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bceecd .OC =_eadafe .Get ("\u004f\u0043");_bceecd .Stream =stream .Stream ;return _bceecd ,nil ;};func (_gdcef *PdfWriter )getPdfVersion ()string {return _b .Sprintf ("\u0025\u0064\u002e%\u0064",_gdcef ._dagb .Major ,_gdcef ._dagb .Minor );
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dccee *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dccee .Base .GetNumComponents ();_feffa :=int (vals [0])*N ;
if _feffa < 0||(_feffa +N -1)>=len (_dccee ._gff ){_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_feffa );return nil ,ErrColorOutOfRange ;};_gfbcg :=_dccee ._gff [_feffa :_feffa +N ];
var _fgfb []float64 ;for _ ,_baegf :=range _gfbcg {_fgfb =append (_fgfb ,float64 (_baegf )/255.0);};_fagg ,_bgdac :=_dccee .Base .ColorFromFloats (_fgfb );if _bgdac !=nil {return nil ,_bgdac ;};return _fagg ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_eba .File ,error ){const _dgcef ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fcfgc ,_afegb :=_eba .Open (pdfFile );if _afegb !=nil {return nil ,nil ,_afegb ;};_dbgac ,_afegb :=_ceefe (_fcfgc ,opts ,true ,_dgcef );if _afegb !=nil {_fcfgc .Close ();return nil ,nil ,_afegb ;};return _dbgac ,_fcfgc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eg *PdfAction )ToPdfObject ()_gadb .PdfObject {_de :=_eg ._ec ;_bce :=_de .PdfObject .(*_gadb .PdfObjectDictionary );_bce .Clear ();_bce .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_bce .SetIfNotNil ("\u0053",_eg .S );
_bce .SetIfNotNil ("\u004e\u0065\u0078\u0074",_eg .Next );return _de ;};func (_eag *PdfReader )newPdfActionGoTo3DViewFromDict (_ccb *_gadb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_ccb .Get ("\u0054\u0041"),V :_ccb .Get ("\u0056")},nil ;
};func _bacbf ()_f .Time {_cccgd .Lock ();defer _cccgd .Unlock ();return _eddf };func _bafg (_cafgc *_gadb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fffab :=PdfShadingType3 {};_efeec :=_cafgc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _efeec ==nil {_cg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_fgace ,_dbbeb :=_efeec .(*_gadb .PdfObjectArray );if !_dbbeb {_cg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efeec );
return nil ,_gadb .ErrTypeError ;};if _fgace .Len ()!=6{_cg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fgace .Len ());return nil ,ErrInvalidAttribute ;
};_fffab .Coords =_fgace ;if _fbaeb :=_cafgc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbaeb !=nil {_fbaeb =_gadb .TraceToDirectObject (_fbaeb );_cfeba ,_affgd :=_fbaeb .(*_gadb .PdfObjectArray );if !_affgd {_cg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbaeb );
return nil ,_gadb .ErrTypeError ;};_fffab .Domain =_cfeba ;};_efeec =_cafgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _efeec ==nil {_cg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fffab .Function =[]PdfFunction {};if _cccdg ,_bdedaa :=_efeec .(*_gadb .PdfObjectArray );_bdedaa {for _ ,_dbegc :=range _cccdg .Elements (){_ddafd ,_bdgae :=_bdbagg (_dbegc );if _bdgae !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdgae );
return nil ,_bdgae ;};_fffab .Function =append (_fffab .Function ,_ddafd );};}else {_degbd ,_fdbf :=_bdbagg (_efeec );if _fdbf !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdbf );
return nil ,_fdbf ;};_fffab .Function =append (_fffab .Function ,_degbd );};if _efcd :=_cafgc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_efcd !=nil {_efcd =_gadb .TraceToDirectObject (_efcd );_ggafb ,_efdcde :=_efcd .(*_gadb .PdfObjectArray );if !_efdcde {_cg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efcd );
return nil ,_gadb .ErrTypeError ;};if _ggafb .Len ()!=2{_cg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ggafb .Len ());return nil ,ErrInvalidAttribute ;
};_fffab .Extend =_ggafb ;};return &_fffab ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_dfag :=&PdfFieldSignature {};_dfag .PdfField =NewPdfField ();_dfag .PdfField .SetContext (_dfag );_dfag .PdfAnnotationWidget =NewPdfAnnotationWidget ();_dfag .PdfAnnotationWidget .SetContext (_dfag );
_dfag .PdfAnnotationWidget ._defb =_dfag .PdfField ._fbbf ;_dfag .T =_gadb .MakeString ("");_dfag .F =_gadb .MakeInteger (132);_dfag .V =signature ;return _dfag ;};func (_fgdgg *PdfSignature )extractChainFromCert ()([]*_g .Certificate ,error ){var _gcdge *_gadb .PdfObjectArray ;
switch _egffe :=_fgdgg .Cert .(type ){case *_gadb .PdfObjectString :_gcdge =_gadb .MakeArray (_egffe );case *_gadb .PdfObjectArray :_gcdge =_egffe ;default:return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_egffe );
};var _bacbb _dbd .Buffer ;for _ ,_decbb :=range _gcdge .Elements (){_dddb ,_gfbd :=_gadb .GetString (_decbb );if !_gfbd {return nil ,_b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_decbb );
};if _ ,_edfea :=_bacbb .Write (_dddb .Bytes ());_edfea !=nil {return nil ,_edfea ;};};return _g .ParseCertificates (_bacbb .Bytes ());};

// ImageToRGB convert an indexed image to RGB.
func (_beba *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_beba .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_fedf :=_cf .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._egfg ,img ._bdge );_abba :=_cb .NewReader (img .getBase ());_bagg :=_cb .NewWriter (_fedf );var (_adag uint32 ;_ggaa int ;_bgafb error ;);for {_adag ,_bgafb =_abba .ReadSample ();
if _bgafb ==_cc .EOF {break ;}else if _bgafb !=nil {return img ,_bgafb ;};_ggaa =int (_adag );_cg .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_ggaa ,N ,len (_beba ._gff ));
if (_ggaa +1)*N > len (_beba ._gff ){_ggaa =len (_beba ._gff )/N -1;_cg .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_ggaa );if _ggaa < 0{_cg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _eebf :=_ggaa *N ;_eebf < (_ggaa +1)*N ;_eebf ++{if _bgafb =_bagg .WriteSample (uint32 (_beba ._gff [_eebf ]));_bgafb !=nil {return img ,_bgafb ;};};};return _beba .Base .ImageToRGB (_fafdf (&_fedf ));};func _bfgc (_gegg *_gadb .PdfObjectDictionary )(*PdfFieldButton ,error ){_dgccg :=&PdfFieldButton {};
_dgccg .PdfField =NewPdfField ();_dgccg .PdfField .SetContext (_dgccg );_dgccg .Opt ,_ =_gadb .GetArray (_gegg .Get ("\u004f\u0070\u0074"));_egfcd :=NewPdfAnnotationWidget ();_egfcd .A ,_ =_gadb .GetDict (_gegg .Get ("\u0041"));_egfcd .AP ,_ =_gadb .GetDict (_gegg .Get ("\u0041\u0050"));
_egfcd .SetContext (_dgccg );_dgccg .PdfField .Annotations =append (_dgccg .PdfField .Annotations ,_egfcd );return _dgccg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aba *PdfAnnotationCaret )ToPdfObject ()_gadb .PdfObject {_aba .PdfAnnotation .ToPdfObject ();_fgd :=_aba ._defb ;_egee :=_fgd .PdfObject .(*_gadb .PdfObjectDictionary );_aba .PdfAnnotationMarkup .appendToPdfDictionary (_egee );_egee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0043\u0061\u0072e\u0074"));
_egee .SetIfNotNil ("\u0052\u0044",_aba .RD );_egee .SetIfNotNil ("\u0053\u0079",_aba .Sy );return _fgd ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_aeefgf *XObjectImage )SetFilter (encoder _gadb .StreamEncoder )error {_babgg :=_aeefgf .Stream ;_abagg ,_ddfcd :=_aeefgf .Filter .DecodeBytes (_babgg );if _ddfcd !=nil {return _ddfcd ;};_aeefgf .Filter =encoder ;encoder .UpdateParams (_aeefgf .getParamsDict ());
_babgg ,_ddfcd =encoder .EncodeBytes (_abagg );if _ddfcd !=nil {return _ddfcd ;};_aeefgf .Stream =_babgg ;return nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_beaef *PdfPageResources )ToPdfObject ()_gadb .PdfObject {_gfag :=_beaef ._gedfg ;_gfag .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_beaef .ExtGState );if _beaef ._bbgfa !=nil {_beaef .ColorSpace =_beaef ._bbgfa .ToPdfObject ();};
_gfag .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_beaef .ColorSpace );_gfag .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_beaef .Pattern );_gfag .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_beaef .Shading );
_gfag .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_beaef .XObject );_gfag .SetIfNotNil ("\u0046\u006f\u006e\u0074",_beaef .Font );_gfag .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_beaef .ProcSet );_gfag .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_beaef .Properties );
return _gfag ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_geae *pdfFontSimple )ToPdfObject ()_gadb .PdfObject {if _geae ._afaa ==nil {_geae ._afaa =&_gadb .PdfIndirectObject {};};_cdbac :=_geae .baseFields ().asPdfObjectDictionary ("");_geae ._afaa .PdfObject =_cdbac ;if _geae .FirstChar !=nil {_cdbac .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_geae .FirstChar );
};if _geae .LastChar !=nil {_cdbac .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_geae .LastChar );};if _geae .Widths !=nil {_cdbac .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_geae .Widths );};if _geae .Encoding !=nil {_cdbac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_geae .Encoding );
}else if _geae ._ddffd !=nil {_caggf :=_geae ._ddffd .ToPdfObject ();if _caggf !=nil {_cdbac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_caggf );};};return _geae ._afaa ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ce :=NewPdfAction ();_gcfd :=&PdfActionHide {};_gcfd .PdfAction =_ce ;_ce .SetContext (_gcfd );return _gcfd ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_ddgde *PdfWriter )SetCatalogMetadata (meta _gadb .PdfObject )error {if meta ==nil {_ddgde ._gaeab .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_dfgg ,_cgcecf :=_gadb .GetStream (meta );if !_cgcecf {return _bb .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_ddgde .addObject (_dfgg );_ddgde ._gaeab .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dfgg );return nil ;};var _gfdde =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// A returns the value of the A component of the color.
func (_bgda *PdfColorCalRGB )A ()float64 {return _bgda [0]};

// WriteToFile writes the Appender output to file specified by path.
func (_dgfg *PdfAppender )WriteToFile (outputPath string )error {_befc ,_efcb :=_eba .Create (outputPath );if _efcb !=nil {return _efcb ;};defer _befc .Close ();return _dgfg .Write (_befc );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_acde *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _acde ._ecca !=nil {return _acde ._ecca ,nil ;};if _acde .Annots ==nil {_acde ._ecca =[]*PdfAnnotation {};return nil ,nil ;};if _acde ._fcga ==nil {_acde ._ecca =[]*PdfAnnotation {};return nil ,nil ;
};_ebdd ,_bdafd :=_acde ._fcga .loadAnnotations (_acde .Annots );if _bdafd !=nil {return nil ,_bdafd ;};if _ebdd ==nil {_acde ._ecca =[]*PdfAnnotation {};};_acde ._ecca =_ebdd ;return _acde ._ecca ,nil ;};func (_ecba *PdfReader )newPdfAnnotationLineFromDict (_ccfb *_gadb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_ggac :=PdfAnnotationLine {};
_feaf ,_eaca :=_ecba .newPdfAnnotationMarkupFromDict (_ccfb );if _eaca !=nil {return nil ,_eaca ;};_ggac .PdfAnnotationMarkup =_feaf ;_ggac .L =_ccfb .Get ("\u004c");_ggac .BS =_ccfb .Get ("\u0042\u0053");_ggac .LE =_ccfb .Get ("\u004c\u0045");_ggac .IC =_ccfb .Get ("\u0049\u0043");
_ggac .LL =_ccfb .Get ("\u004c\u004c");_ggac .LLE =_ccfb .Get ("\u004c\u004c\u0045");_ggac .Cap =_ccfb .Get ("\u0043\u0061\u0070");_ggac .IT =_ccfb .Get ("\u0049\u0054");_ggac .LLO =_ccfb .Get ("\u004c\u004c\u004f");_ggac .CP =_ccfb .Get ("\u0043\u0050");
_ggac .Measure =_ccfb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_ggac .CO =_ccfb .Get ("\u0043\u004f");return &_ggac ,nil ;};func (_bccad *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gbagg *PdfPageResourcesColorspaces )ToPdfObject ()_gadb .PdfObject {_bdeda :=_gadb .MakeDict ();for _ ,_cbgee :=range _gbagg .Names {_bdeda .Set (_gadb .PdfObjectName (_cbgee ),_gbagg .Colorspaces [_cbgee ].ToPdfObject ());};if _gbagg ._eadeb !=nil {_gbagg ._eadeb .PdfObject =_bdeda ;
return _gbagg ._eadeb ;};return _bdeda ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _gadb .PdfObject ;FontFamily _gadb .PdfObject ;FontStretch _gadb .PdfObject ;FontWeight _gadb .PdfObject ;Flags _gadb .PdfObject ;FontBBox _gadb .PdfObject ;ItalicAngle _gadb .PdfObject ;Ascent _gadb .PdfObject ;Descent _gadb .PdfObject ;
Leading _gadb .PdfObject ;CapHeight _gadb .PdfObject ;XHeight _gadb .PdfObject ;StemV _gadb .PdfObject ;StemH _gadb .PdfObject ;AvgWidth _gadb .PdfObject ;MaxWidth _gadb .PdfObject ;MissingWidth _gadb .PdfObject ;FontFile _gadb .PdfObject ;FontFile2 _gadb .PdfObject ;
FontFile3 _gadb .PdfObject ;CharSet _gadb .PdfObject ;_bbbdd int ;_aggcb float64 ;*fontFile ;_cfcgc *_bf .TtfType ;

// Additional entries for CIDFonts
Style _gadb .PdfObject ;Lang _gadb .PdfObject ;FD _gadb .PdfObject ;CIDSet _gadb .PdfObject ;_dcbg *_gadb .PdfIndirectObject ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _gadb .PdfObject ;Name _gadb .PdfObject ;};func _cdad (_dafe _gadb .PdfObject )(*PdfBorderStyle ,error ){_deff :=&PdfBorderStyle {};_deff ._ecbb =_dafe ;var _baaa *_gadb .PdfObjectDictionary ;
_dafe =_gadb .TraceToDirectObject (_dafe );_baaa ,_dadb :=_dafe .(*_gadb .PdfObjectDictionary );if !_dadb {return nil ,_bb .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _bdgg :=_baaa .Get ("\u0054\u0079\u0070\u0065");_bdgg !=nil {_eea ,_cgbf :=_bdgg .(*_gadb .PdfObjectName );
if !_cgbf {_cg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bdgg );
}else {if *_eea !="\u0042\u006f\u0072\u0064\u0065\u0072"{_cg .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_eea );};};};if _cddb :=_baaa .Get ("\u0057");
_cddb !=nil {_fcbg ,_cega :=_gadb .GetNumberAsFloat (_cddb );if _cega !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cega );return nil ,_cega ;};_deff .W =&_fcbg ;
};if _agba :=_baaa .Get ("\u0053");_agba !=nil {_fcba ,_bbgc :=_agba .(*_gadb .PdfObjectName );if !_bbgc {return nil ,_bb .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ecda BorderStyle ;switch *_fcba {case "\u0053":_ecda =BorderStyleSolid ;case "\u0044":_ecda =BorderStyleDashed ;case "\u0042":_ecda =BorderStyleBeveled ;case "\u0049":_ecda =BorderStyleInset ;case "\u0055":_ecda =BorderStyleUnderline ;default:_cg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_fcba );
return nil ,_bb .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_deff .S =&_ecda ;};if _fcff :=_baaa .Get ("\u0044");_fcff !=nil {_cgc ,_geef :=_fcff .(*_gadb .PdfObjectArray );
if !_geef {_cg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fcff );return nil ,_bb .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_fgbeg ,_bff :=_cgc .ToIntegerArray ();if _bff !=nil {_cg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bff );
return nil ,_bff ;};_deff .D =&_fgbeg ;};return _deff ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_gace pdfFontSimple )GetCharMetrics (code _gcc .CharCode )(_bf .CharMetrics ,bool ){if _ccgae ,_ccfba :=_gace ._aefe [code ];_ccfba {return _bf .CharMetrics {Wx :_ccgae },true ;};if _bf .IsStdFont (_bf .StdFontName (_gace ._bbecb )){return _bf .CharMetrics {Wx :250},true ;
};return _bf .CharMetrics {},false ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bege *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cdbe :=NewPdfOutlineItem ();_cdbe .Title =_gadb .MakeEncodedString (_bege .Title ,true );_cdbe .Dest =_bege .Dest .ToPdfObject ();var _adfa []*PdfOutlineItem ;var _dfad int64 ;var _gcecd *PdfOutlineItem ;
for _ ,_gfegb :=range _bege .Entries {_edefc ,_baba :=_gfegb .ToPdfOutlineItem ();_edefc .Parent =&_cdbe .PdfOutlineTreeNode ;if _gcecd !=nil {_gcecd .Next =&_edefc .PdfOutlineTreeNode ;_edefc .Prev =&_gcecd .PdfOutlineTreeNode ;};_adfa =append (_adfa ,_edefc );
_dfad +=_baba ;_gcecd =_edefc ;};_ccde :=len (_adfa );_dfad +=int64 (_ccde );if _ccde > 0{_cdbe .First =&_adfa [0].PdfOutlineTreeNode ;_cdbe .Last =&_adfa [_ccde -1].PdfOutlineTreeNode ;_cdbe .Count =&_dfad ;};return _cdbe ,_dfad ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_fdfac *PdfOutlineTreeNode )ToPdfObject ()_gadb .PdfObject {return _fdfac .GetContext ().ToPdfObject ();};func _ebfca (_afcfc *PdfField )[]*PdfField {_caac :=[]*PdfField {_afcfc };for _ ,_gfffd :=range _afcfc .Kids {_caac =append (_caac ,_ebfca (_gfffd )...);
};return _caac ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_abaa *PdfFont )GetCharMetrics (code _gcc .CharCode )(CharMetrics ,bool ){var _abcfd _bf .CharMetrics ;switch _gefd :=_abaa ._ecfec .(type ){case *pdfFontSimple :if _ceac ,_dcfd :=_gefd .GetCharMetrics (code );_dcfd {return _ceac ,_dcfd ;};case *pdfFontType0 :if _fefea ,_gbcge :=_gefd .GetCharMetrics (code );
_gbcge {return _fefea ,_gbcge ;};case *pdfCIDFontType0 :if _bcbd ,_gbdd :=_gefd .GetCharMetrics (code );_gbdd {return _bcbd ,_gbdd ;};case *pdfCIDFontType2 :if _gffd ,_fbgg :=_gefd .GetCharMetrics (code );_fbgg {return _gffd ,_fbgg ;};case *pdfFontType3 :if _afabg ,_gdcc :=_gefd .GetCharMetrics (code );
_gdcc {return _afabg ,_gdcc ;};default:_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_abaa ._ecfec );
return _abcfd ,false ;};if _edbca ,_geff :=_abaa .GetFontDescriptor ();_geff ==nil &&_edbca !=nil {return _bf .CharMetrics {Wx :_edbca ._aggcb },true ;};_cg .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_abaa );
return _abcfd ,false ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_facdb *PdfPageResources )SetXObjectByName (keyName _gadb .PdfObjectName ,stream *_gadb .PdfObjectStream )error {if _facdb .XObject ==nil {_facdb .XObject =_gadb .MakeDict ();};_eead :=_gadb .TraceToDirectObject (_facdb .XObject );_cedcf ,_aeaec :=_eead .(*_gadb .PdfObjectDictionary );
if !_aeaec {_cg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_facdb .XObject ,_eead );return _bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cedcf .Set (keyName ,stream );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgbf *PdfAnnotation3D )ToPdfObject ()_gadb .PdfObject {_dgbf .PdfAnnotation .ToPdfObject ();_bgge :=_dgbf ._defb ;_eedd :=_bgge .PdfObject .(*_gadb .PdfObjectDictionary );_eedd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0033\u0044"));
_eedd .SetIfNotNil ("\u0033\u0044\u0044",_dgbf .T3DD );_eedd .SetIfNotNil ("\u0033\u0044\u0056",_dgbf .T3DV );_eedd .SetIfNotNil ("\u0033\u0044\u0041",_dgbf .T3DA );_eedd .SetIfNotNil ("\u0033\u0044\u0049",_dgbf .T3DI );_eedd .SetIfNotNil ("\u0033\u0044\u0042",_dgbf .T3DB );
return _bgge ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_gadb .PdfObjectInteger ;BitsPerComponent *_gadb .PdfObjectInteger ;BitsPerFlag *_gadb .PdfObjectInteger ;Decode *_gadb .PdfObjectArray ;Function []PdfFunction ;};

// ToInteger convert to an integer format.
func (_effb *PdfColorLab )ToInteger (bits int )[3]uint32 {_eebce :=_gee .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eebce *_effb .L ()),uint32 (_eebce *_effb .A ()),uint32 (_eebce *_effb .B ())};};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _gadb .PdfObject ;Dest _gadb .PdfObject ;H _gadb .PdfObject ;PA _gadb .PdfObject ;QuadPoints _gadb .PdfObject ;BS _gadb .PdfObject ;_edb *PdfAction ;_dea *PdfReader ;};func (_dagg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// ReplacePage replaces the original page to a new page.
func (_gfad *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_dff :=pageNum -1;for _cbff :=range _gfad ._dade {if _cbff ==_dff {_afeg :=page .Duplicate ();_bedge (_afeg );_gfad ._dade [_cbff ]=_afeg ;};};};func _ccdgf (_ggafa *_gadb .PdfObjectDictionary )*VRI {_gfdd ,_ :=_gadb .GetString (_ggafa .Get ("\u0054\u0055"));
_eegc ,_ :=_gadb .GetString (_ggafa .Get ("\u0054\u0053"));return &VRI {Cert :_ddea (_ggafa .Get ("\u0043\u0065\u0072\u0074")),OCSP :_ddea (_ggafa .Get ("\u004f\u0043\u0053\u0050")),CRL :_ddea (_ggafa .Get ("\u0043\u0052\u004c")),TU :_gfdd ,TS :_eegc };
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bdbca pdfCIDFontType2 )GetRuneMetrics (r rune )(_bf .CharMetrics ,bool ){_ccbba ,_aebb :=_bdbca ._cgab [r ];if !_aebb {_aecfa ,_cegbc :=_gadb .GetInt (_bdbca .DW );if !_cegbc {return _bf .CharMetrics {},false ;};_ccbba =int (*_aecfa );};return _bf .CharMetrics {Wx :float64 (_ccbba )},true ;
};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// AddFont adds a font dictionary to the Font resources.
func (_ebag *PdfPage )AddFont (name _gadb .PdfObjectName ,font _gadb .PdfObject )error {if _ebag .Resources ==nil {_ebag .Resources =NewPdfPageResources ();};if _ebag .Resources .Font ==nil {_ebag .Resources .Font =_gadb .MakeDict ();};_cabb ,_fddc :=_gadb .TraceToDirectObject (_ebag .Resources .Font ).(*_gadb .PdfObjectDictionary );
if !_fddc {_cg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_gadb .TraceToDirectObject (_ebag .Resources .Font ));
return _bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cabb .Set (name ,font );return nil ;};type pdfFont interface{_bf .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_gadb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_ddfb *PdfOutlineTreeNode )GetContext ()PdfModel {if _agfcc ,_gdadg :=_ddfb ._bedfc .(*PdfOutline );_gdadg {return _agfcc ;};if _dcece ,_gcbba :=_ddfb ._bedfc .(*PdfOutlineItem );_gcbba {return _dcece ;};_cg .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func (_gbbc *DSS )generateHashMaps ()error {_fcgfd ,_afcfb :=_gbbc .generateHashMap (_gbbc .Certs );if _afcfb !=nil {return _afcfb ;};_gafg ,_afcfb :=_gbbc .generateHashMap (_gbbc .OCSPs );if _afcfb !=nil {return _afcfb ;};_cfgbc ,_afcfb :=_gbbc .generateHashMap (_gbbc .CRLs );
if _afcfb !=nil {return _afcfb ;};_gbbc ._cggd =_fcgfd ;_gbbc ._abee =_gafg ;_gbbc ._bdafe =_cfgbc ;return nil ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _gadb .PdfObjectArray )(*PdfRectangle ,error ){_aaagc :=PdfRectangle {};if arr .Len ()!=4{return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ffbb error ;_aaagc .Llx ,_ffbb =_gadb .GetNumberAsFloat (arr .Get (0));if _ffbb !=nil {return nil ,_ffbb ;};_aaagc .Lly ,_ffbb =_gadb .GetNumberAsFloat (arr .Get (1));if _ffbb !=nil {return nil ,_ffbb ;};_aaagc .Urx ,_ffbb =_gadb .GetNumberAsFloat (arr .Get (2));
if _ffbb !=nil {return nil ,_ffbb ;};_aaagc .Ury ,_ffbb =_gadb .GetNumberAsFloat (arr .Get (3));if _ffbb !=nil {return nil ,_ffbb ;};return &_aaagc ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_eeb :=NewPdfAnnotation ();_gbd :=&PdfAnnotationPrinterMark {};_gbd .PdfAnnotation =_eeb ;_eeb .SetContext (_gbd );return _gbd ;};

// B returns the value of the B component of the color.
func (_cfcg *PdfColorLab )B ()float64 {return _cfcg [2]};func (_fcbe *PdfReader )newPdfAnnotationStrikeOut (_ffafc *_gadb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_ccec :=PdfAnnotationStrikeOut {};_aabf ,_caaa :=_fcbe .newPdfAnnotationMarkupFromDict (_ffafc );
if _caaa !=nil {return nil ,_caaa ;};_ccec .PdfAnnotationMarkup =_aabf ;_ccec .QuadPoints =_ffafc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ccec ,nil ;};func (_gafe *pdfFontSimple )addEncoding ()error {var (_gegde string ;
_edgcb map[_gcc .CharCode ]_gcc .GlyphName ;_fddg _gcc .SimpleEncoder ;);if _gafe .Encoder ()!=nil {_cecea ,_gafgg :=_gafe .Encoder ().(_gcc .SimpleEncoder );if _gafgg &&_cecea !=nil {_gegde =_cecea .BaseName ();};};if _gafe .Encoding !=nil {_dedfa ,_aggeg ,_cdfgbd :=_gafe .getFontEncoding ();
if _cdfgbd !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gafe ._bbecb ,_gafe ._dccge ,_gafe .Encoding ,_gafe .Encoding ,_cdfgbd );
return _cdfgbd ;};if _dedfa !=""{_gegde =_dedfa ;};_edgcb =_aggeg ;_fddg ,_cdfgbd =_gcc .NewSimpleTextEncoder (_gegde ,_edgcb );if _cdfgbd !=nil {return _cdfgbd ;};};if _fddg ==nil {_bddbg :=_gafe ._bbgfe ;if _bddbg !=nil {switch _gafe ._dccge {case "\u0054\u0079\u0070e\u0031":if _bddbg .fontFile !=nil &&_bddbg .fontFile ._fbfg !=nil {_cg .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_fddg =_bddbg .fontFile ._fbfg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _bddbg ._cfcgc !=nil {_cg .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_eadfc ,_febf :=_bddbg ._cfcgc .MakeEncoder ();
if _febf ==nil {_fddg =_eadfc ;};};};};};if _fddg !=nil {if _edgcb !=nil {_cg .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_edgcb ,_gafe .baseFields ());
_fddg =_gcc .ApplyDifferences (_fddg ,_edgcb );};_gafe .SetEncoder (_fddg );};return nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_bdecd *XObjectImage )ToImage ()(*Image ,error ){_dcgaae :=&Image {};if _bdecd .Height ==nil {return nil ,_bb .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_dcgaae .Height =*_bdecd .Height ;if _bdecd .Width ==nil {return nil ,_bb .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dcgaae .Width =*_bdecd .Width ;if _bdecd .BitsPerComponent ==nil {switch _bdecd .Filter .(type ){case *_gadb .CCITTFaxEncoder ,*_gadb .JBIG2Encoder :_dcgaae .BitsPerComponent =1;
case *_gadb .LZWEncoder ,*_gadb .RunLengthEncoder :_dcgaae .BitsPerComponent =8;default:return nil ,_bb .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_dcgaae .BitsPerComponent =*_bdecd .BitsPerComponent ;};_dcgaae .ColorComponents =_bdecd .ColorSpace .GetNumComponents ();_bdecd ._bgccg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gadb .MakeInteger (int64 (_dcgaae .ColorComponents )));
_fcbec ,_dadbce :=_gadb .DecodeStream (_bdecd ._bgccg );if _dadbce !=nil {return nil ,_dadbce ;};_dcgaae .Data =_fcbec ;if _bdecd .Decode !=nil {_cgcea ,_gafa :=_bdecd .Decode .(*_gadb .PdfObjectArray );if !_gafa {_cg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_bb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bcdgc ,_dddee :=_cgcea .ToFloat64Array ();if _dddee !=nil {return nil ,_dddee ;};_dcgaae ._bdge =_bcdgc ;};return _dcgaae ,nil ;};func (_dgdfa *PdfWriter )writeXRefStreams (_ecccf int ,_baea int64 )error {_bfgab :=_ecccf +1;
_dgdfa ._efeb [_bfgab ]=crossReference {Type :1,ObjectNumber :_bfgab ,Offset :_baea };_abbbg :=_dbd .NewBuffer (nil );_cfgbf :=_gadb .MakeArray ();for _abcege :=0;_abcege <=_ecccf ;{for ;_abcege <=_ecccf ;_abcege ++{_gdacb ,_eefg :=_dgdfa ._efeb [_abcege ];
if _eefg &&(!_dgdfa ._gfdfd ||_dgdfa ._gfdfd &&(_gdacb .Type ==1&&_gdacb .Offset >=_dgdfa ._cgfd ||_gdacb .Type ==0)){break ;};};var _fcbdde int ;for _fcbdde =_abcege +1;_fcbdde <=_ecccf ;_fcbdde ++{_cgdbc ,_aaade :=_dgdfa ._efeb [_fcbdde ];if _aaade &&(!_dgdfa ._gfdfd ||_dgdfa ._gfdfd &&(_cgdbc .Type ==1&&_cgdbc .Offset > _dgdfa ._cgfd )){continue ;
};break ;};_cfgbf .Append (_gadb .MakeInteger (int64 (_abcege )),_gadb .MakeInteger (int64 (_fcbdde -_abcege )));for _bdffe :=_abcege ;_bdffe < _fcbdde ;_bdffe ++{_ebedg :=_dgdfa ._efeb [_bdffe ];switch _ebedg .Type {case 0:_bc .Write (_abbbg ,_bc .BigEndian ,byte (0));
_bc .Write (_abbbg ,_bc .BigEndian ,uint32 (0));_bc .Write (_abbbg ,_bc .BigEndian ,uint16 (0xFFFF));case 1:_bc .Write (_abbbg ,_bc .BigEndian ,byte (1));_bc .Write (_abbbg ,_bc .BigEndian ,uint32 (_ebedg .Offset ));_bc .Write (_abbbg ,_bc .BigEndian ,uint16 (_ebedg .Generation ));
case 2:_bc .Write (_abbbg ,_bc .BigEndian ,byte (2));_bc .Write (_abbbg ,_bc .BigEndian ,uint32 (_ebedg .ObjectNumber ));_bc .Write (_abbbg ,_bc .BigEndian ,uint16 (_ebedg .Index ));};};_abcege =_fcbdde +1;};_aaegc ,_fcdc :=_gadb .MakeStream (_abbbg .Bytes (),_gadb .NewFlateEncoder ());
if _fcdc !=nil {return _fcdc ;};_aaegc .ObjectNumber =int64 (_bfgab );_aaegc .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0058\u0052\u0065\u0066"));_aaegc .PdfObjectDictionary .Set ("\u0057",_gadb .MakeArray (_gadb .MakeInteger (1),_gadb .MakeInteger (4),_gadb .MakeInteger (2)));
_aaegc .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cfgbf );_aaegc .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_gadb .MakeInteger (int64 (_bfgab +1)));_aaegc .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_dgdfa ._ceeegd );_aaegc .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_dgdfa ._ccbbbd );
if _dgdfa ._gfdfd &&_dgdfa ._cbdbd > 0{_aaegc .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_gadb .MakeInteger (_dgdfa ._cbdbd ));};if _dgdfa ._fbgac !=nil {_aaegc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dgdfa ._ceadb );};if _dgdfa ._gcgfg ==nil &&_dgdfa ._gcbdb !=""&&_dgdfa ._eedfa !=""{_dgdfa ._gcgfg =_gadb .MakeArray (_gadb .MakeHexString (_dgdfa ._gcbdb ),_gadb .MakeHexString (_dgdfa ._eedfa ));
};if _dgdfa ._gcgfg !=nil {_cg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dgdfa ._gcgfg );_aaegc .Set ("\u0049\u0044",_dgdfa ._gcgfg );};_dgdfa .writeObject (int (_aaegc .ObjectNumber ),_aaegc );return nil ;};func (_ffd *PdfReader )newPdfActionSetOCGStateFromDict (_fac *_gadb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fac .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fac .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gecff *PdfOutline )ToPdfObject ()_gadb .PdfObject {_afede :=_gecff ._accdf ;_ggcaa :=_afede .PdfObject .(*_gadb .PdfObjectDictionary );_ggcaa .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));
if _gecff .First !=nil {_ggcaa .Set ("\u0046\u0069\u0072s\u0074",_gecff .First .ToPdfObject ());};if _gecff .Last !=nil {_ggcaa .Set ("\u004c\u0061\u0073\u0074",_gecff .Last .GetContext ().GetContainingPdfObject ());};if _gecff .Parent !=nil {_ggcaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gecff .Parent .GetContext ().GetContainingPdfObject ());
};if _gecff .Count !=nil {_ggcaa .Set ("\u0043\u006f\u0075n\u0074",_gadb .MakeInteger (*_gecff .Count ));};return _afede ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _gadb .PdfObject ;NewWindow _gadb .PdfObject ;T _gadb .PdfObject ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_gadb .PdfObjectName ;P *_gadb .PdfObjectInteger ;V *_gadb .PdfObjectName ;};

// PdfVersion returns version of the PDF file.
func (_fbdef *PdfReader )PdfVersion ()_gadb .Version {return _fbdef ._becf .PdfVersion ()};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ebgfc *PdfPageResources )HasExtGState (keyName _gadb .PdfObjectName )bool {_ ,_cddeb :=_ebgfc .GetFontByName (keyName );return _cddeb ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_bacfd *PdfPageResources )GetXObjectImageByName (keyName _gadb .PdfObjectName )(*XObjectImage ,error ){_dgdb ,_eddcg :=_bacfd .GetXObjectByName (keyName );if _dgdb ==nil {return nil ,nil ;};if _eddcg !=XObjectTypeImage {return nil ,_bb .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_gaedeb ,_gdgde :=NewXObjectImageFromStream (_dgdb );if _gdgde !=nil {return nil ,_gdgde ;};return _gaedeb ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_gaead *PdfAcroForm )AllFields ()[]*PdfField {if _gaead ==nil {return nil ;};var _aede []*PdfField ;if _gaead .Fields !=nil {for _ ,_gadcd :=range *_gaead .Fields {_aede =append (_aede ,_ebfca (_gadcd )...);};};return _aede ;};func _egdb (_geged *[]*PdfField ,_abbad FieldFilterFunc ,_ffde bool )[]*PdfField {if _geged ==nil {return nil ;
};_fbdea :=*_geged ;if len (*_geged )==0{return nil ;};_fdbef :=_fbdea [:0];if _abbad ==nil {_abbad =func (*PdfField )bool {return true };};var _cgecf []*PdfField ;for _ ,_cbcfe :=range _fbdea {_bebf :=_abbad (_cbcfe );if _bebf {_cgecf =append (_cgecf ,_cbcfe );
if len (_cbcfe .Kids )> 0{_cgecf =append (_cgecf ,_egdb (&_cbcfe .Kids ,_abbad ,_ffde )...);};};if !_ffde ||!_bebf ||len (_cbcfe .Kids )> 0{_fdbef =append (_fdbef ,_cbcfe );};};*_geged =_fdbef ;return _cgecf ;};func (_baded *PdfReader )flattenFieldsWithOpts (_fagca bool ,_cafabg FieldAppearanceGenerator ,_egdd *FieldFlattenOpts )error {if _egdd ==nil {_egdd =&FieldFlattenOpts {};
};var _fbbfg bool ;_bfdd :=map[*PdfAnnotation ]bool {};{var _edegg []*PdfField ;_eeaa :=_baded .AcroForm ;if _eeaa !=nil {if _egdd .FilterFunc !=nil {_edegg =_eeaa .filteredFields (_egdd .FilterFunc ,true );_fbbfg =_eeaa .Fields !=nil &&len (*_eeaa .Fields )> 0;
}else {_edegg =_eeaa .AllFields ();};};for _ ,_dfbc :=range _edegg {for _ ,_dddcg :=range _dfbc .Annotations {_bfdd [_dddcg .PdfAnnotation ]=_dfbc .V !=nil ;if _cafabg !=nil {_fdce ,_cbafd :=_cafabg .GenerateAppearanceDict (_eeaa ,_dfbc ,_dddcg );if _cbafd !=nil {return _cbafd ;
};_dddcg .AP =_fdce ;};};};};if _fagca {for _ ,_fcae :=range _baded .PageList {_bcdde ,_affee :=_fcae .GetAnnotations ();if _affee !=nil {return _affee ;};for _ ,_cfaa :=range _bcdde {_bfdd [_cfaa ]=true ;};};};for _ ,_cbgf :=range _baded .PageList {var _dcgb []*PdfAnnotation ;
if _cafabg !=nil {if _egec :=_cafabg .WrapContentStream (_cbgf );_egec !=nil {return _egec ;};};_gabf ,_debce :=_cbgf .GetAnnotations ();if _debce !=nil {return _debce ;};for _ ,_eeff :=range _gabf {_cgcg ,_ccdb :=_bfdd [_eeff ];if !_ccdb &&_egdd .AnnotFilterFunc !=nil {if _ ,_egdeg :=_eeff .GetContext ().(*PdfAnnotationWidget );
!_egdeg {_ccdb =_egdd .AnnotFilterFunc (_eeff );};};if !_ccdb {_dcgb =append (_dcgb ,_eeff );continue ;};switch _eeff .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_faaab ,_gggg ,_dadda :=_dcfa (_eeff );if _dadda !=nil {if !_cgcg {_cg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_dadda );
continue ;};if _faaab ==nil {continue ;};_ceae :=_cbgf .Resources .GenerateXObjectName ();_cbgf .Resources .SetXObjectFormByName (_ceae ,_faaab );_edae ,_dadda :=_bddgb (_faaab );if _dadda !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_dadda );
}else {_eceaf :=_dbb .IdentityMatrix ();_eceaf =_eceaf .Translate (-_edae .Llx ,-_edae .Lly );_cecf :=0.0;if _edae .Width ()> 0{_cecf =_gggg .Width ()/_edae .Width ();};_ccge :=0.0;if _edae .Height ()> 0{_ccge =_gggg .Height ()/_edae .Height ();};_eceaf =_eceaf .Scale (_cecf ,_ccge );
_gggg .Transform (_eceaf );};_eadg :=_gee .Min (_gggg .Llx ,_gggg .Urx );_beedc :=_gee .Min (_gggg .Lly ,_gggg .Ury );var _fcaed []string ;_fcaed =append (_fcaed ,"\u0071");_fcaed =append (_fcaed ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_eadg ,_beedc ));
_fcaed =append (_fcaed ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ceae .String ()));_fcaed =append (_fcaed ,"\u0051");_gcaf :=_db .Join (_fcaed ,"\u000a");_dadda =_cbgf .AppendContentStream (_gcaf );if _dadda !=nil {return _dadda ;};if _faaab .Resources !=nil {_deeg ,_dbdef :=_gadb .GetDict (_faaab .Resources .Font );
if _dbdef {for _ ,_gcdb :=range _deeg .Keys (){if !_cbgf .Resources .HasFontByName (_gcdb ){_cbgf .Resources .SetFontByName (_gcdb ,_deeg .Get (_gcdb ));};};};};};if len (_dcgb )> 0{_cbgf ._ecca =_dcgb ;}else {_cbgf ._ecca =[]*PdfAnnotation {};};};if !_fbbfg {_baded .AcroForm =nil ;
};return nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_dgbc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gged []float64 ;for _fgeb :=0;_fgeb < _dgbc .GetNumComponents ();_fgeb ++{_gged =append (_gged ,0.0,1.0);};return _gged ;};func _fgfg (_caee StdFontName )(pdfFontSimple ,error ){_ggbce ,_fdegf :=_bf .NewStdFontByName (_caee );
if !_fdegf {return pdfFontSimple {},ErrFontNotSupported ;};_fccccg :=_accbf (_ggbce );return _fccccg ,nil ;};func (_gbfe *PdfWriter )optimize ()error {if _gbfe ._dggca ==nil {return nil ;};var _eadff error ;_gbfe ._agefec ,_eadff =_gbfe ._dggca .Optimize (_gbfe ._agefec );
if _eadff !=nil {return _eadff ;};_gbae :=make (map[_gadb .PdfObject ]struct{},len (_gbfe ._agefec ));for _ ,_bbgcg :=range _gbfe ._agefec {_gbae [_bbgcg ]=struct{}{};};_gbfe ._gacff =_gbae ;return nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// String returns the name of the colorspace (DeviceN).
func (_ccbb *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ccfd *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_egbgg *PdfAppender )mergeResources (_gdaaf ,_cbfec _gadb .PdfObject ,_cebf map[_gadb .PdfObjectName ]_gadb .PdfObjectName )_gadb .PdfObject {if _cbfec ==nil &&_gdaaf ==nil {return nil ;
};if _cbfec ==nil {return _gdaaf ;};_bgfb ,_beef :=_gadb .GetDict (_cbfec );if !_beef {return _gdaaf ;};if _gdaaf ==nil {_agdd :=_gadb .MakeDict ();_agdd .Merge (_bgfb );return _cbfec ;};_dda ,_beef :=_gadb .GetDict (_gdaaf );if !_beef {_cg .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_dda =_gadb .MakeDict ();};for _ ,_cbacc :=range _bgfb .Keys (){if _ebaff ,_dgdf :=_cebf [_cbacc ];_dgdf {_dda .Set (_ebaff ,_bgfb .Get (_cbacc ));}else {_dda .Set (_cbacc ,_bgfb .Get (_cbacc ));};};return _dda ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_aafe *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _bb .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_fdcf :=field .V ;if _fdcf ==nil {return _bb .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bbacf :=pageNum -1;
if _bbacf < 0||_bbacf > len (_aafe ._dade )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_dcgd :=_aafe .Reader .PageList [_bbacf ];field .P =_dcgd .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_gadb .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_dcgd .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _aafe ._bccaae ==_aafe ._fff .AcroForm {_aafe ._bccaae =_aafe .Reader .AcroForm ;};_dcdf :=_aafe ._bccaae ;if _dcdf ==nil {_dcdf =NewPdfAcroForm ();};_dcdf .SigFlags =_gadb .MakeInteger (3);
_geea :=append (_dcdf .AllFields (),field .PdfField );_dcdf .Fields =&_geea ;_aafe .ReplaceAcroForm (_dcdf );_aafe .UpdatePage (_dcgd );_aafe ._dade [_bbacf ]=_dcgd ;if _ ,_bcce :=field .V .GetDocMDPPermission ();_bcce {_aafe ._ccfg =NewPermissions (field .V );
};return nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_ccbbbd *_gadb .PdfIndirectObject ;_cfbfa *_gadb .PdfIndirectObject ;_agcgc map[_gadb .PdfObject ]struct{};_agefec []_gadb .PdfObject ;_gacff map[_gadb .PdfObject ]struct{};_gfabbg []*_gadb .PdfIndirectObject ;_dcdeaa *PdfOutlineTreeNode ;
_gaeab *_gadb .PdfObjectDictionary ;_gacbd []_gadb .PdfObject ;_ceeegd *_gadb .PdfIndirectObject ;_agfdb *_c .Writer ;_fafba int64 ;_dacbe error ;_fbgac *_gadb .PdfCrypt ;_degga *_gadb .PdfObjectDictionary ;_ceadb *_gadb .PdfIndirectObject ;_gcgfg *_gadb .PdfObjectArray ;
_dagb _gadb .Version ;_dedb *bool ;_ccbdg map[_gadb .PdfObject ][]*_gadb .PdfObjectDictionary ;_eaagb *PdfAcroForm ;_dggca Optimizer ;_edcdc StandardApplier ;_efeb map[int ]crossReference ;_abceg int64 ;ObjNumOffset int ;_gfdfd bool ;_gddfg _gadb .XrefTable ;
_cbdbd int64 ;_cgfd int64 ;_dafgd map[_gadb .PdfObject ]int64 ;_fdac map[_gadb .PdfObject ]struct{};_bbcff string ;_gfbda []*PdfOutputIntent ;_addag bool ;_gcbdb ,_eedfa string ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_ggbe *PdfReader )PageFromIndirectObject (ind *_gadb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_ggbe .PageList )!=len (_ggbe ._fbeac ){return nil ,0,_bb .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _caeee ,_egaae :=range _ggbe ._fbeac {if _egaae ==ind {return _ggbe .PageList [_caeee ],_caeee +1,nil ;};};return nil ,0,_bb .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// IsSimple returns true if `font` is a simple font.
func (_bggc *PdfFont )IsSimple ()bool {_ ,_eddd :=_bggc ._ecfec .(*pdfFontSimple );return _eddd };func _gdee (_efegd *PdfField ,_ffabe _gadb .PdfObject ){for _ ,_afecb :=range _efegd .Annotations {_afecb .AS =_ffabe ;_afecb .ToPdfObject ();};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbaaf *PdfShadingType4 )ToPdfObject ()_gadb .PdfObject {_bbaaf .PdfShading .ToPdfObject ();_faged ,_gbaa :=_bbaaf .getShadingDict ();if _gbaa !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbaaf .BitsPerCoordinate !=nil {_faged .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bbaaf .BitsPerCoordinate );};if _bbaaf .BitsPerComponent !=nil {_faged .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbaaf .BitsPerComponent );
};if _bbaaf .BitsPerFlag !=nil {_faged .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bbaaf .BitsPerFlag );};if _bbaaf .Decode !=nil {_faged .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bbaaf .Decode );};if _bbaaf .Function !=nil {if len (_bbaaf .Function )==1{_faged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbaaf .Function [0].ToPdfObject ());
}else {_cecg :=_gadb .MakeArray ();for _ ,_bccfg :=range _bbaaf .Function {_cecg .Append (_bccfg .ToPdfObject ());};_faged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cecg );};};return _bbaaf ._gfbgb ;};

// GetContentStream returns the pattern cell's content stream
func (_abeca *PdfTilingPattern )GetContentStream ()([]byte ,error ){_abcdg ,_ ,_dabaa :=_abeca .GetContentStreamWithEncoder ();return _abcdg ,_dabaa ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_adfca *PdfField )IsTerminal ()bool {return len (_adfca .Kids )==0};

// Width returns the width of `rect`.
func (_gbbeg *PdfRectangle )Width ()float64 {return _gee .Abs (_gbbeg .Urx -_gbbeg .Llx )};

// ParserMetadata gets the parser  metadata.
func (_gdec *CompliancePdfReader )ParserMetadata ()_gadb .ParserMetadata {if _gdec ._cggc ==(_gadb .ParserMetadata {}){_gdec ._cggc ,_ =_gdec ._becf .ParserMetadata ();};return _gdec ._cggc ;};

// Items returns all children outline items.
func (_efabb *OutlineItem )Items ()[]*OutlineItem {return _efabb .Entries };

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_feffe *PdfPage )AppendContentStream (contentStr string )error {_eeceg ,_edddf :=_feffe .GetContentStreams ();if _edddf !=nil {return _edddf ;};if len (_eeceg )==0{_eeceg =[]string {contentStr };return _feffe .SetContentStreams (_eeceg ,_gadb .NewFlateEncoder ());
};var _dbddc _dbd .Buffer ;_dbddc .WriteString (_eeceg [len (_eeceg )-1]);_dbddc .WriteString ("\u000a");_dbddc .WriteString (contentStr );_eeceg [len (_eeceg )-1]=_dbddc .String ();return _feffe .SetContentStreams (_eeceg ,_gadb .NewFlateEncoder ());};
func (_eabgg *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _eabgg ._bbgfe };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_gadb .PdfObjectArray ;Domain *_gadb .PdfObjectArray ;Function []PdfFunction ;Extend *_gadb .PdfObjectArray ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_af :=NewPdfAction ();_ade :=&PdfActionSound {};_ade .PdfAction =_af ;_af .SetContext (_ade );return _ade ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_ffed *LTV )EnableByName (name string ,extraCerts []*_g .Certificate )error {_dbgb :=_ffed ._dfcfg ._fff .AcroForm ;for _ ,_acgce :=range _dbgb .AllFields (){_adaa ,_ :=_acgce .GetContext ().(*PdfFieldSignature );if _adaa ==nil {continue ;};if _gcbg :=_adaa .PartialName ();
_gcbg !=name {continue ;};return _ffed .Enable (_adaa .V ,extraCerts );};return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gbgcf PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_gadb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_egda []_gadb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_ebg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_acaa *PdfReader )newPdfPageFromDict (_ffge *_gadb .PdfObjectDictionary )(*PdfPage ,error ){_dbfa :=NewPdfPage ();_dbfa ._dfbg =_ffge ;_dbfa ._ffaee =*_ffge ;_cedgc :=*_ffge ;_gdecb ,_dcgaa :=_cedgc .Get ("\u0054\u0079\u0070\u0065").(*_gadb .PdfObjectName );
if !_dcgaa {return nil ,_bb .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_gdecb !="\u0050\u0061\u0067\u0065"{return nil ,_bb .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _dgcca :=_cedgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dgcca !=nil {_dbfa .Parent =_dgcca ;};if _cfgc :=_cedgc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cfgc !=nil {_ecge ,_ccgbc :=_gadb .GetString (_cfgc );
if !_ccgbc {return nil ,_bb .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_ecgf ,_fdbce :=NewPdfDate (_ecge .Str ());if _fdbce !=nil {return nil ,_fdbce ;};_dbfa .LastModified =&_ecgf ;};if _geabe :=_cedgc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_geabe !=nil &&!_gadb .IsNullObject (_geabe ){_ceeg ,_gabg :=_gadb .GetDict (_geabe );
if !_gabg {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_geabe );};var _bcaa error ;_dbfa .Resources ,_bcaa =NewPdfPageResourcesFromDict (_ceeg );
if _bcaa !=nil {return nil ,_bcaa ;};}else {_daedd ,_cbafe :=_dbfa .getParentResources ();if _cbafe !=nil {return nil ,_cbafe ;};if _daedd ==nil {_daedd =NewPdfPageResources ();};_dbfa .Resources =_daedd ;};if _efdcc :=_cedgc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_efdcc !=nil {_dccb ,_fcfaf :=_gadb .GetArray (_efdcc );if !_fcfaf {return nil ,_bb .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dfagc error ;
_dbfa .MediaBox ,_dfagc =NewPdfRectangle (*_dccb );if _dfagc !=nil {return nil ,_dfagc ;};};if _acegf :=_cedgc .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_acegf !=nil {_cgdge ,_aacbg :=_gadb .GetArray (_acegf );if !_aacbg {return nil ,_bb .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _eddag error ;_dbfa .CropBox ,_eddag =NewPdfRectangle (*_cgdge );if _eddag !=nil {return nil ,_eddag ;};};if _gefc :=_cedgc .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_gefc !=nil {_dcfec ,_bgbfe :=_gadb .GetArray (_gefc );if !_bgbfe {return nil ,_bb .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _dafdb error ;_dbfa .BleedBox ,_dafdb =NewPdfRectangle (*_dcfec );if _dafdb !=nil {return nil ,_dafdb ;};};if _gdgfc :=_cedgc .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gdgfc !=nil {_adegd ,_gacd :=_gadb .GetArray (_gdgfc );if !_gacd {return nil ,_bb .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ebaaa error ;_dbfa .TrimBox ,_ebaaa =NewPdfRectangle (*_adegd );if _ebaaa !=nil {return nil ,_ebaaa ;};};if _dbdbe :=_cedgc .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dbdbe !=nil {_ggcd ,_aacbga :=_gadb .GetArray (_dbdbe );if !_aacbga {return nil ,_bb .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _fdebg error ;_dbfa .ArtBox ,_fdebg =NewPdfRectangle (*_ggcd );if _fdebg !=nil {return nil ,_fdebg ;};};if _edeb :=_cedgc .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_edeb !=nil {_dbfa .BoxColorInfo =_edeb ;};if _bgcf :=_cedgc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_bgcf !=nil {_dbfa .Contents =_bgcf ;};if _abgbd :=_cedgc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_abgbd !=nil {_dafac ,_fbfcc :=_gadb .GetNumberAsInt64 (_abgbd );if _fbfcc !=nil {return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dbfa .Rotate =&_dafac ;};if _fgdf :=_cedgc .Get ("\u0047\u0072\u006fu\u0070");_fgdf !=nil {_dbfa .Group =_fgdf ;};if _egafc :=_cedgc .Get ("\u0054\u0068\u0075m\u0062");_egafc !=nil {_dbfa .Thumb =_egafc ;};if _aaaag :=_cedgc .Get ("\u0042");_aaaag !=nil {_dbfa .B =_aaaag ;
};if _dgbbe :=_cedgc .Get ("\u0044\u0075\u0072");_dgbbe !=nil {_dbfa .Dur =_dgbbe ;};if _fface :=_cedgc .Get ("\u0054\u0072\u0061n\u0073");_fface !=nil {_dbfa .Trans =_fface ;};if _gbebe :=_cedgc .Get ("\u0041\u0041");_gbebe !=nil {_dbfa .AA =_gbebe ;};
if _ebbcdd :=_cedgc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ebbcdd !=nil {_dbfa .Metadata =_ebbcdd ;};if _abda :=_cedgc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_abda !=nil {_dbfa .PieceInfo =_abda ;};if _faggg :=_cedgc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_faggg !=nil {_dbfa .StructParents =_faggg ;};if _eadb :=_cedgc .Get ("\u0049\u0044");_eadb !=nil {_dbfa .ID =_eadb ;};if _feaaa :=_cedgc .Get ("\u0050\u005a");_feaaa !=nil {_dbfa .PZ =_feaaa ;};if _ggfce :=_cedgc .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_ggfce !=nil {_dbfa .SeparationInfo =_ggfce ;};if _gceec :=_cedgc .Get ("\u0054\u0061\u0062\u0073");_gceec !=nil {_dbfa .Tabs =_gceec ;};if _ffeb :=_cedgc .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_ffeb !=nil {_dbfa .TemplateInstantiated =_ffeb ;};if _caeae :=_cedgc .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_caeae !=nil {_dbfa .PresSteps =_caeae ;};if _ffacg :=_cedgc .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ffacg !=nil {_dbfa .UserUnit =_ffacg ;
};if _egddc :=_cedgc .Get ("\u0056\u0050");_egddc !=nil {_dbfa .VP =_egddc ;};if _eebg :=_cedgc .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_eebg !=nil {_dbfa .Annots =_eebg ;};_dbfa ._fcga =_acaa ;return _dbfa ,nil ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_cbfgc :map[_gadb .PdfObject ]struct{}{},_gaccc :_bdeeg (),_becf :_gadb .NewParserFromString (txt )};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _gadb .PdfObject ;FS _gadb .PdfObject ;F _gadb .PdfObject ;UF _gadb .PdfObject ;DOS _gadb .PdfObject ;Mac _gadb .PdfObject ;Unix _gadb .PdfObject ;ID _gadb .PdfObject ;V _gadb .PdfObject ;EF _gadb .PdfObject ;RF _gadb .PdfObject ;
Desc _gadb .PdfObject ;CI _gadb .PdfObject ;_ccad _gadb .PdfObject ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _gadb .PdfObject ;AN _gadb .PdfObject ;OP _gadb .PdfObject ;JS _gadb .PdfObject ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_facgc *PdfReader )GetPageLabels ()(_gadb .PdfObject ,error ){_cafb :=_gadb .ResolveReference (_facgc ._gbef .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cafb ==nil {return nil ,nil ;};if !_facgc ._fdbdd {_egea :=_facgc .traverseObjectData (_cafb );
if _egea !=nil {return nil ,_egea ;};};return _cafb ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_gadb .PdfObjectInteger ;BitsPerComponent *_gadb .PdfObjectInteger ;BitsPerFlag *_gadb .PdfObjectInteger ;Decode *_gadb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_edc *PdfActionRendition )ToPdfObject ()_gadb .PdfObject {_edc .PdfAction .ToPdfObject ();_efg :=_edc ._ec ;_bdg :=_efg .PdfObject .(*_gadb .PdfObjectDictionary );_bdg .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeRendition )));_bdg .SetIfNotNil ("\u0052",_edc .R );
_bdg .SetIfNotNil ("\u0041\u004e",_edc .AN );_bdg .SetIfNotNil ("\u004f\u0050",_edc .OP );_bdg .SetIfNotNil ("\u004a\u0053",_edc .JS );return _efg ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_cdccd FieldFlag )Has (fl FieldFlag )bool {return (_cdccd .Mask ()&fl .Mask ())> 0};func (_eecg fontCommon )asPdfObjectDictionary (_gdbg string )*_gadb .PdfObjectDictionary {if _gdbg !=""&&_eecg ._dccge !=""&&_gdbg !=_eecg ._dccge {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gdbg ,_eecg );
}else if _gdbg ==""&&_eecg ._dccge ==""{_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eecg );
}else if _eecg ._dccge ==""{_eecg ._dccge =_gdbg ;};_fagfb :=_gadb .MakeDict ();_fagfb .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0046\u006f\u006e\u0074"));_fagfb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gadb .MakeName (_eecg ._bbecb ));
_fagfb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName (_eecg ._dccge ));if _eecg ._bbgfe !=nil {_fagfb .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_eecg ._bbgfe .ToPdfObject ());};if _eecg ._eagb !=nil {_fagfb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eecg ._eagb );
}else if _eecg ._ddbg !=nil {_bcbb ,_beaf :=_eecg ._ddbg .Stream ();if _beaf !=nil {_cg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_beaf );
}else {_fagfb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bcbb );};};return _fagfb ;};

// SetName sets the `Name` field of the signature.
func (_gbacf *PdfSignature )SetName (name string ){_gbacf .Name =_gadb .MakeString (name )};func (_aaacg fontCommon )isCIDFont ()bool {if _aaacg ._dccge ==""{_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aaacg );
};_caec :=false ;switch _aaacg ._dccge {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_caec =true ;};_cg .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_caec ,_aaacg );
return _caec ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fbf :=NewPdfAction ();_dc :=&PdfActionImportData {};_dc .PdfAction =_fbf ;_fbf .SetContext (_dc );return _dc ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gegeg *PdfPageResources )GetFontByName (keyName _gadb .PdfObjectName )(_gadb .PdfObject ,bool ){if _gegeg .Font ==nil {return nil ,false ;};_fceca ,_feggb :=_gadb .TraceToDirectObject (_gegeg .Font ).(*_gadb .PdfObjectDictionary );if !_feggb {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gadb .TraceToDirectObject (_gegeg .Font ));
return nil ,false ;};if _dfagab :=_fceca .Get (keyName );_dfagab !=nil {return _dfagab ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_abaf *PdfAnnotationFileAttachment )ToPdfObject ()_gadb .PdfObject {_abaf .PdfAnnotation .ToPdfObject ();_gbfb :=_abaf ._defb ;_aegb :=_gbfb .PdfObject .(*_gadb .PdfObjectDictionary );_abaf .PdfAnnotationMarkup .appendToPdfDictionary (_aegb );_aegb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_aegb .SetIfNotNil ("\u0046\u0053",_abaf .FS );_aegb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abaf .Name );return _gbfb ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dced FieldFlag )Mask ()uint32 {return uint32 (_dced )};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gadb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_edad *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eafc :=vals [0];if _eafc < 0.0||_eafc > 1.0{_cg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eafc );
return nil ,ErrColorOutOfRange ;};_ffeg :=NewPdfColorCalGray (_eafc );return _ffeg ,nil ;};func (_dgda *DSS )addCRLs (_bdag [][]byte )([]*_gadb .PdfObjectStream ,error ){return _dgda .add (&_dgda .CRLs ,_dgda ._bdafe ,_bdag );};

// GetNumPages returns the number of pages in the document.
func (_fbdb *PdfReader )GetNumPages ()(int ,error ){if _fbdb ._becf .GetCrypter ()!=nil &&!_fbdb ._becf .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_fbdb ._fbeac ),nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_ccdec *PdfPageResources )AddExtGState (gsName _gadb .PdfObjectName ,gsDict _gadb .PdfObject )error {if _ccdec .ExtGState ==nil {_ccdec .ExtGState =_gadb .MakeDict ();};_ebeadg :=_ccdec .ExtGState ;_cfacf ,_aeec :=_gadb .TraceToDirectObject (_ebeadg ).(*_gadb .PdfObjectDictionary );
if !_aeec {_cg .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ebeadg ,_gadb .TraceToDirectObject (_ebeadg ));
return _gadb .ErrTypeError ;};_cfacf .Set (gsName ,gsDict );return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gbfa *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_beaea :=_cb .NewReader (img .getBase ());_ffba :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ffbf :=_cb .NewWriter (_ffba );
_cfbc :=_gee .Pow (2,float64 (img .BitsPerComponent ))-1;_geeca :=make ([]uint32 ,3);var (_bdfg error ;_gcfeg ,_cefca ,_bgeg ,_facg ,_bggdd ,_cdcc float64 ;);for {_bdfg =_beaea .ReadSamples (_geeca );if _bdfg ==_cc .EOF {break ;}else if _bdfg !=nil {return img ,_bdfg ;
};_gcfeg =float64 (_geeca [0])/_cfbc ;_cefca =float64 (_geeca [1])/_cfbc ;_bgeg =float64 (_geeca [2])/_cfbc ;_facg =_gbfa .Matrix [0]*_gee .Pow (_gcfeg ,_gbfa .Gamma [0])+_gbfa .Matrix [3]*_gee .Pow (_cefca ,_gbfa .Gamma [1])+_gbfa .Matrix [6]*_gee .Pow (_bgeg ,_gbfa .Gamma [2]);
_bggdd =_gbfa .Matrix [1]*_gee .Pow (_gcfeg ,_gbfa .Gamma [0])+_gbfa .Matrix [4]*_gee .Pow (_cefca ,_gbfa .Gamma [1])+_gbfa .Matrix [7]*_gee .Pow (_bgeg ,_gbfa .Gamma [2]);_cdcc =_gbfa .Matrix [2]*_gee .Pow (_gcfeg ,_gbfa .Gamma [0])+_gbfa .Matrix [5]*_gee .Pow (_cefca ,_gbfa .Gamma [1])+_gbfa .Matrix [8]*_gee .Pow (_bgeg ,_gbfa .Gamma [2]);
_gcfeg =3.240479*_facg +-1.537150*_bggdd +-0.498535*_cdcc ;_cefca =-0.969256*_facg +1.875992*_bggdd +0.041556*_cdcc ;_bgeg =0.055648*_facg +-0.204043*_bggdd +1.057311*_cdcc ;_gcfeg =_gee .Min (_gee .Max (_gcfeg ,0),1.0);_cefca =_gee .Min (_gee .Max (_cefca ,0),1.0);
_bgeg =_gee .Min (_gee .Max (_bgeg ,0),1.0);_geeca [0]=uint32 (_gcfeg *_cfbc );_geeca [1]=uint32 (_cefca *_cfbc );_geeca [2]=uint32 (_bgeg *_cfbc );if _bdfg =_ffbf .WriteSamples (_geeca );_bdfg !=nil {return img ,_bdfg ;};};return _fafdf (&_ffba ),nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_faba *PdfColorspaceDeviceCMYK )ToPdfObject ()_gadb .PdfObject {return _gadb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_ddgff *PdfField )inherit (_dgfda func (*PdfField )bool )(bool ,error ){_abae :=map[*PdfField ]bool {};
_bcee :=false ;_gfca :=_ddgff ;for _gfca !=nil {if _ ,_edef :=_abae [_gfca ];_edef {return false ,_bb .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_eagg :=_dgfda (_gfca );if _eagg {_bcee =true ;
break ;};_abae [_gfca ]=true ;_gfca =_gfca .Parent ;};return _bcee ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_bcdgb *PdfSignature )SetLocation (location string ){_bcdgb .Location =_gadb .MakeString (location );};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_ggdeg *PdfWriter )SetOpenAction (dest _gadb .PdfObject )error {if dest ==nil ||_gadb .IsNullObject (dest ){return nil ;};_ggdeg ._gaeab .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _ggdeg .addObjects (dest );
};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fbbf :_gadb .MakeIndirectObject (_gadb .MakeDict ())}};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_eaefc *PdfColorspaceSpecialIndexed )ToPdfObject ()_gadb .PdfObject {_dagf :=_gadb .MakeArray (_gadb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_dagf .Append (_eaefc .Base .ToPdfObject ());_dagf .Append (_gadb .MakeInteger (int64 (_eaefc .HiVal )));
_dagf .Append (_eaefc .Lookup );if _eaefc ._faaca !=nil {_eaefc ._faaca .PdfObject =_dagf ;return _eaefc ._faaca ;};return _dagf ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_cgba *PdfOutlineItem )GetContainingPdfObject ()_gadb .PdfObject {return _cgba ._ebbb };func (_edfed *PdfWriter )writeObject (_gfegd int ,_cffe _gadb .PdfObject ){_cg .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gfegd );
if _gfbac ,_ecgdb :=_cffe .(*_gadb .PdfIndirectObject );_ecgdb {_edfed ._efeb [_gfegd ]=crossReference {Type :1,Offset :_edfed ._fafba ,Generation :_gfbac .GenerationNumber };_cbabf :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gfegd );
if _eabcf ,_fafff :=_gfbac .PdfObject .(*pdfSignDictionary );_fafff {_eabcf ._fefeaf =_edfed ._fafba +int64 (len (_cbabf ));};if _gfbac .PdfObject ==nil {_cg .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_gfbac .PdfObject =_gadb .MakeNull ();};_cbabf +=_gfbac .PdfObject .WriteString ();_cbabf +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_edfed .writeString (_cbabf );return ;};if _fdecd ,_edbdff :=_cffe .(*_gadb .PdfObjectStream );_edbdff {_edfed ._efeb [_gfegd ]=crossReference {Type :1,Offset :_edfed ._fafba ,Generation :_fdecd .GenerationNumber };
_cdeae :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gfegd );_cdeae +=_fdecd .PdfObjectDictionary .WriteString ();_cdeae +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_edfed .writeString (_cdeae );_edfed .writeBytes (_fdecd .Stream );
_edfed .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _dcea ,_ebfcf :=_cffe .(*_gadb .PdfObjectStreams );_ebfcf {_edfed ._efeb [_gfegd ]=crossReference {Type :1,Offset :_edfed ._fafba ,Generation :_dcea .GenerationNumber };
_gfcda :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gfegd );var _ebdeg []string ;var _aegbdf string ;var _ggad int64 ;for _bfdeb ,_aeaead :=range _dcea .Elements (){_bdgag ,_eeaec :=_aeaead .(*_gadb .PdfIndirectObject );if !_eeaec {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gfegd ,_aeaead );
continue ;};_babdd :=_bdgag .PdfObject .WriteString ()+"\u0020";_aegbdf =_aegbdf +_babdd ;_ebdeg =append (_ebdeg ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_bdgag .ObjectNumber ,_ggad ));_edfed ._efeb [int (_bdgag .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gfegd ,Index :_bfdeb };
_ggad =_ggad +int64 (len ([]byte (_babdd )));};_cdefe :=_db .Join (_ebdeg ,"\u0020")+"\u0020";_edcg :=_gadb .NewFlateEncoder ();_bggea :=_edcg .MakeStreamDict ();_bggea .Set (_gadb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_gadb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_dfafc :=int64 (_dcea .Len ());_bggea .Set (_gadb .PdfObjectName ("\u004e"),_gadb .MakeInteger (_dfafc ));_gbfac :=int64 (len (_cdefe ));_bggea .Set (_gadb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_gadb .MakeInteger (_gbfac ));_dfefa ,_ :=_edcg .EncodeBytes ([]byte (_cdefe +_aegbdf ));
_bagd :=int64 (len (_dfefa ));_bggea .Set (_gadb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_gadb .MakeInteger (_bagd ));_gfcda +=_bggea .WriteString ();_gfcda +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_edfed .writeString (_gfcda );
_edfed .writeBytes (_dfefa );_edfed .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_edfed .writeString (_cffe .WriteString ());};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ddac pdfFontType0 )GetCharMetrics (code _gcc .CharCode )(_bf .CharMetrics ,bool ){if _ddac .DescendantFont ==nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ddac );
return _bf .CharMetrics {},false ;};return _ddac .DescendantFont .GetCharMetrics (code );};func _gccgc (_fgfcg *_gadb .PdfObjectDictionary ,_aafa *fontCommon ,_dcbfg _gcc .TextEncoder )(*pdfFontSimple ,error ){_dcdd :=_gaedg (_aafa );_dcdd ._gagdd =_dcbfg ;
if _dcbfg ==nil {_bdabe :=_fgfcg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bdabe ==nil {_bdabe =_gadb .MakeInteger (0);};_dcdd .FirstChar =_bdabe ;_fbage ,_eebdf :=_gadb .GetIntVal (_bdabe );if !_eebdf {_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bdabe );
return nil ,_gadb .ErrTypeError ;};_cfcae :=_gcc .CharCode (_fbage );_bdabe =_fgfcg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bdabe ==nil {_bdabe =_gadb .MakeInteger (255);};_dcdd .LastChar =_bdabe ;_fbage ,_eebdf =_gadb .GetIntVal (_bdabe );
if !_eebdf {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bdabe );return nil ,_gadb .ErrTypeError ;
};_gedff :=_gcc .CharCode (_fbage );_dcdd ._aefe =make (map[_gcc .CharCode ]float64 );_bdabe =_fgfcg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bdabe !=nil {_dcdd .Widths =_bdabe ;_fggff ,_fedd :=_gadb .GetArray (_bdabe );if !_fedd {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bdabe );
return nil ,_gadb .ErrTypeError ;};_adfge ,_eddde :=_fggff .ToFloat64Array ();if _eddde !=nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_eddde ;};if len (_adfge )!=int (_gedff -_cfcae +1){_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gedff -_cfcae +1,len (_adfge ));
return nil ,_gadb .ErrRangeError ;};for _dbdd ,_baedc :=range _adfge {_dcdd ._aefe [_cfcae +_gcc .CharCode (_dbdd )]=_baedc ;};};};_dcdd .Encoding =_gadb .TraceToDirectObject (_fgfcg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _dcdd ,nil ;
};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// HasFontByName checks if has font resource by name.
func (_aeeg *PdfPage )HasFontByName (name _gadb .PdfObjectName )bool {_fcdfa ,_cdge :=_aeeg .Resources .Font .(*_gadb .PdfObjectDictionary );if !_cdge {return false ;};if _deffc :=_fcdfa .Get (name );_deffc !=nil {return true ;};return false ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_abde *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_cg .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_cg .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_cg .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_cg .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_ebdec ,_cfgb :=_cf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._egfg ,img ._bdge );if _cfgb !=nil {return Image {},_cfgb ;};_cgaf ,_cfgb :=_cf .NRGBAConverter .Convert (_ebdec );if _cfgb !=nil {return Image {},_cfgb ;
};return _fafdf (_cgaf .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_beee *PdfAnnotation )ToPdfObject ()_gadb .PdfObject {_deaef :=_beee ._defb ;_bgcc :=_deaef .PdfObject .(*_gadb .PdfObjectDictionary );_bgcc .Clear ();_bgcc .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0041\u006e\u006eo\u0074"));_bgcc .SetIfNotNil ("\u0052\u0065\u0063\u0074",_beee .Rect );
_bgcc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_beee .Contents );_bgcc .SetIfNotNil ("\u0050",_beee .P );_bgcc .SetIfNotNil ("\u004e\u004d",_beee .NM );_bgcc .SetIfNotNil ("\u004d",_beee .M );_bgcc .SetIfNotNil ("\u0046",_beee .F );
_bgcc .SetIfNotNil ("\u0041\u0050",_beee .AP );_bgcc .SetIfNotNil ("\u0041\u0053",_beee .AS );_bgcc .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_beee .Border );_bgcc .SetIfNotNil ("\u0043",_beee .C );_bgcc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_beee .StructParent );
_bgcc .SetIfNotNil ("\u004f\u0043",_beee .OC );return _deaef ;};func (_gabe fontCommon )fontFlags ()int {if _gabe ._bbgfe ==nil {return 0;};return _gabe ._bbgfe ._bbbdd ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cbaed *PdfPattern )SetContext (ctx PdfModel ){_cbaed ._afbdb =ctx };

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fgbb *PdfFieldButton )IsRadio ()bool {return _fgbb .GetType ()==ButtonTypeRadio };func _bafed (_dgbad _gadb .PdfObject )(*PdfPattern ,error ){_aecef :=&PdfPattern {};var _ddgae *_gadb .PdfObjectDictionary ;if _fdbac ,_gadad :=_gadb .GetIndirect (_dgbad );
_gadad {_aecef ._cdaag =_fdbac ;_fdgg ,_afaaf :=_fdbac .PdfObject .(*_gadb .PdfObjectDictionary );if !_afaaf {_cg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fdbac .PdfObject );
return nil ,_gadb .ErrTypeError ;};_ddgae =_fdgg ;}else if _fbgad ,_bbfa :=_gadb .GetStream (_dgbad );_bbfa {_aecef ._cdaag =_fbgad ;_ddgae =_fbgad .PdfObjectDictionary ;}else {_cg .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dgbad );
return nil ,_gadb .ErrTypeError ;};_ebccf :=_ddgae .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _ebccf ==nil {_cg .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbbdg ,_ffbdf :=_ebccf .(*_gadb .PdfObjectInteger );if !_ffbdf {_cg .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ebccf );
return nil ,_gadb .ErrTypeError ;};if *_gbbdg !=1&&*_gbbdg !=2{_cg .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gbbdg );return nil ,_gadb .ErrRangeError ;
};_aecef .PatternType =int64 (*_gbbdg );switch *_gbbdg {case 1:_dcgac ,_cbggf :=_bgggb (_ddgae );if _cbggf !=nil {return nil ,_cbggf ;};_dcgac .PdfPattern =_aecef ;_aecef ._afbdb =_dcgac ;return _aecef ,nil ;case 2:_bfede ,_accc :=_adca (_ddgae );if _accc !=nil {return nil ,_accc ;
};_bfede .PdfPattern =_aecef ;_aecef ._afbdb =_bfede ;return _aecef ,nil ;};return nil ,_bb .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ddage *PdfPageResources )SetColorspaceByName (keyName _gadb .PdfObjectName ,cs PdfColorspace )error {_aecde ,_fcbdbc :=_ddage .GetColorspaces ();if _fcbdbc !=nil {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fcbdbc );
return _fcbdbc ;};if _aecde ==nil {_aecde =NewPdfPageResourcesColorspaces ();_ddage .SetColorSpace (_aecde );};_aecde .Set (keyName ,cs );return nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bdf .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bdf .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bdf .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_dfcfg *PdfAppender ;_fgde *DSS ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fggb *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _fafeg []*PdfOutlineTreeNode ;var _agfdf []string ;var _beedcc func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_beedcc =func (_gdded *PdfOutlineTreeNode ,_ddfbc *[]*PdfOutlineTreeNode ,_ffffg *[]string ,_dbgbb int ){if _gdded ==nil {return ;
};if _gdded ._bedfc ==nil {_cg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_dcacb ,_fdgd :=_gdded ._bedfc .(*PdfOutlineItem );if _fdgd {*_ddfbc =append (*_ddfbc ,&_dcacb .PdfOutlineTreeNode );
_cbebf :=_db .Repeat ("\u0020",_dbgbb *2)+_dcacb .Title .Decoded ();*_ffffg =append (*_ffffg ,_cbebf );};if _gdded .First !=nil {_dgabe :=_db .Repeat ("\u0020",_dbgbb *2)+"\u002b";*_ffffg =append (*_ffffg ,_dgabe );_beedcc (_gdded .First ,_ddfbc ,_ffffg ,_dbgbb +1);
};if _fdgd &&_dcacb .Next !=nil {_beedcc (_dcacb .Next ,_ddfbc ,_ffffg ,_dbgbb );};};_beedcc (_fggb ._gcecc ,&_fafeg ,&_agfdf ,0);return _fafeg ,_agfdf ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_fadg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fadg .Alternate ==nil {_cg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _fadg .N ==1{_cg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_aead :=NewPdfColorspaceDeviceGray ();return _aead .ColorToRGB (color );}else if _fadg .N ==3{_cg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _fadg .N ==4{_cg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cbffg :=NewPdfColorspaceDeviceCMYK ();return _cbffg .ColorToRGB (color );}else {return nil ,_bb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_cg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_fadg );
return _fadg .Alternate .ColorToRGB (color );};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_egacc *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_fcaec :=_egacc .GetContentStreamObjs ();wrapContents =wrapContents &&len (_fcaec )> 0;_gdbed :=_gadb .NewFlateEncoder ();_cdbb :=_gadb .MakeArray ();if wrapContents {_acbbe ,_dcgebg :=_gadb .MakeStream ([]byte ("\u0071\u000a"),_gdbed );
if _dcgebg !=nil {return _dcgebg ;};_cdbb .Append (_acbbe );};_cdbb .Append (_fcaec ...);if wrapContents {_dgagd ,_acbgb :=_gadb .MakeStream ([]byte ("\u000a\u0051\u000a"),_gdbed );if _acbgb !=nil {return _acbgb ;};_cdbb .Append (_dgagd );};_aege ,_bffba :=_gadb .MakeStream (cs ,_gdbed );
if _bffba !=nil {return _bffba ;};_cdbb .Append (_aege );_egacc .Contents =_cdbb ;return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_acffa *PdfSignature )GetContainingPdfObject ()_gadb .PdfObject {return _acffa ._defca };

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ddecf *PdfWriter )SetNamedDestinations (dests _gadb .PdfObject )error {if dests ==nil {return nil ;};_cg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_ddecf ._gaeab .Set ("\u0044\u0065\u0073t\u0073",dests );return _ddecf .addObjects (dests );};func _dbeeg (_ffafgb *XObjectImage )error {if _ffafgb .SMask ==nil {return nil ;};_bfgd ,_gccgac :=_ffafgb .SMask .(*_gadb .PdfObjectStream );if !_gccgac {_cg .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _gadb .ErrTypeError ;};_febg :=_bfgd .PdfObjectDictionary ;_cdgccg :=_febg .Get ("\u004d\u0061\u0074t\u0065");if _cdgccg ==nil {return nil ;};_cedgg ,_dfecd :=_dbeee (_cdgccg .(*_gadb .PdfObjectArray ));if _dfecd !=nil {return _dfecd ;};_eaeeg :=_gadb .MakeArrayFromFloats ([]float64 {_cedgg });
_febg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_eaeeg );return nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fcbdd *PdfField )GetContainingPdfObject ()_gadb .PdfObject {return _fcbdd ._fbbf };

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_ffdgb *Image )GetSamples ()[]uint32 {_abfc :=_cb .ResampleBytes (_ffdgb .Data ,int (_ffdgb .BitsPerComponent ));if _ffdgb .BitsPerComponent < 8{_abfc =_ffdgb .samplesTrimPadding (_abfc );};_edfgd :=int (_ffdgb .Width )*int (_ffdgb .Height )*_ffdgb .ColorComponents ;
if len (_abfc )< _edfgd {_cg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_abfc ),_edfgd );
return _abfc ;}else if len (_abfc )> _edfgd {_cg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_abfc ),_edfgd );
_abfc =_abfc [:_edfgd ];};return _abfc ;};func (_eebcg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _eebcg ._becf .GetCrypter ()!=nil &&!_eebcg ._becf .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ddgfb :=_eebcg ._gbef ;_acaeb :=_ddgfb .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _acaeb ==nil {return nil ,nil ;};_cg .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_cgdga :=_gadb .ResolveReference (_acaeb );
_cg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_cgdga );if _abaee :=_gadb .IsNullObject (_cgdga );_abaee {_cg .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_afcad ,_bedb :=_cgdga .(*_gadb .PdfIndirectObject );if !_bedb {if _ ,_defce :=_gadb .GetDict (_cgdga );!_defce {_cg .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_cg .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_afcad =_gadb .MakeIndirectObject (_cgdga );};_afcag ,_bedb :=_afcad .PdfObject .(*_gadb .PdfObjectDictionary );if !_bedb {return nil ,_bb .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_cg .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_afcag );_agga ,_ ,_efbbe :=_eebcg .buildOutlineTree (_afcad ,nil ,nil ,nil );if _efbbe !=nil {return nil ,_efbbe ;};_cg .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_agga );
return _agga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egde *PdfAnnotationPolyLine )ToPdfObject ()_gadb .PdfObject {_egde .PdfAnnotation .ToPdfObject ();_ccef :=_egde ._defb ;_daeb :=_ccef .PdfObject .(*_gadb .PdfObjectDictionary );_egde .PdfAnnotationMarkup .appendToPdfDictionary (_daeb );_daeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_daeb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_egde .Vertices );_daeb .SetIfNotNil ("\u004c\u0045",_egde .LE );_daeb .SetIfNotNil ("\u0042\u0053",_egde .BS );_daeb .SetIfNotNil ("\u0049\u0043",_egde .IC );_daeb .SetIfNotNil ("\u0042\u0045",_egde .BE );
_daeb .SetIfNotNil ("\u0049\u0054",_egde .IT );_daeb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_egde .Measure );return _ccef ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _gadb .PdfObject )(*PdfFilespec ,error ){_gafga :=&PdfFilespec {};var _aega *_gadb .PdfObjectDictionary ;if _cgca ,_afcc :=_gadb .GetIndirect (obj );_afcc {_gafga ._ccad =_cgca ;_cgedg ,_fbdec :=_gadb .GetDict (_cgca .PdfObject );
if !_fbdec {_cg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gadb .ErrTypeError ;};_aega =_cgedg ;}else if _gedda ,_ddaa :=_gadb .GetDict (obj );
_ddaa {_gafga ._ccad =_gedda ;_aega =_gedda ;}else {_cg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_gadb .ErrTypeError ;};if _aega ==nil {_cg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_bb .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ebaaf :=_aega .Get ("\u0054\u0079\u0070\u0065");_ebaaf !=nil {_fgce ,_ebda :=_ebaaf .(*_gadb .PdfObjectName );if !_ebda {_cg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ebaaf );
}else {if *_fgce !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_cg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_fgce );
};};};if _dedc :=_aega .Get ("\u0046\u0053");_dedc !=nil {_gafga .FS =_dedc ;};if _cfdfe :=_aega .Get ("\u0046");_cfdfe !=nil {_gafga .F =_cfdfe ;};if _daea :=_aega .Get ("\u0055\u0046");_daea !=nil {_gafga .UF =_daea ;};if _cfaba :=_aega .Get ("\u0044\u004f\u0053");
_cfaba !=nil {_gafga .DOS =_cfaba ;};if _cgec :=_aega .Get ("\u004d\u0061\u0063");_cgec !=nil {_gafga .Mac =_cgec ;};if _ccbca :=_aega .Get ("\u0055\u006e\u0069\u0078");_ccbca !=nil {_gafga .Unix =_ccbca ;};if _effe :=_aega .Get ("\u0049\u0044");_effe !=nil {_gafga .ID =_effe ;
};if _aagab :=_aega .Get ("\u0056");_aagab !=nil {_gafga .V =_aagab ;};if _cgdg :=_aega .Get ("\u0045\u0046");_cgdg !=nil {_gafga .EF =_cgdg ;};if _cdaa :=_aega .Get ("\u0052\u0046");_cdaa !=nil {_gafga .RF =_cdaa ;};if _ccbbb :=_aega .Get ("\u0044\u0065\u0073\u0063");
_ccbbb !=nil {_gafga .Desc =_ccbbb ;};if _cfeg :=_aega .Get ("\u0043\u0049");_cfeg !=nil {_gafga .CI =_cfeg ;};return _gafga ,nil ;};

// ToInteger convert to an integer format.
func (_gbge *PdfColorDeviceGray )ToInteger (bits int )uint32 {_egaf :=_gee .Pow (2,float64 (bits ))-1;return uint32 (_egaf *_gbge .Val ());};func _bcbdf (_gfgec *_gadb .PdfObjectStream )(*PdfFunctionType4 ,error ){_fdbcd :=&PdfFunctionType4 {};_fdbcd ._gcdbg =_gfgec ;
_gbfdb :=_gfgec .PdfObjectDictionary ;_aacd ,_eecd :=_gadb .TraceToDirectObject (_gbfdb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gadb .PdfObjectArray );if !_eecd {_cg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aacd .Len ()%2!=0{_cg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_bb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_aedf ,_cebc :=_aacd .ToFloat64Array ();if _cebc !=nil {return nil ,_cebc ;};_fdbcd .Domain =_aedf ;_aacd ,_eecd =_gadb .TraceToDirectObject (_gbfdb .Get ("\u0052\u0061\u006eg\u0065")).(*_gadb .PdfObjectArray );
if _eecd {if _aacd .Len ()< 0||_aacd .Len ()%2!=0{return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aafcd ,_gabag :=_aacd .ToFloat64Array ();if _gabag !=nil {return nil ,_gabag ;};_fdbcd .Range =_aafcd ;
};_cadf ,_cebc :=_gadb .DecodeStream (_gfgec );if _cebc !=nil {return nil ,_cebc ;};_fdbcd ._dcff =_cadf ;_effaa :=_fdg .NewPSParser (_cadf );_cccde ,_cebc :=_effaa .Parse ();if _cebc !=nil {return nil ,_cebc ;};_fdbcd .Program =_cccde ;return _fdbcd ,nil ;
};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_adbbc *PdfFont )CharcodesToUnicode (charcodes []_gcc .CharCode )[]rune {_bebbe ,_ ,_ :=_adbbc .CharcodesToUnicodeWithStats (charcodes );return _bebbe ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_feegc *PdfFieldSignature )ToPdfObject ()_gadb .PdfObject {if _feegc .PdfAnnotationWidget !=nil {_feegc .PdfAnnotationWidget .ToPdfObject ();};_feegc .PdfField .ToPdfObject ();_fegg :=_feegc ._fbbf ;_acff :=_fegg .PdfObject .(*_gadb .PdfObjectDictionary );
_acff .SetIfNotNil ("\u0046\u0054",_gadb .MakeName ("\u0053\u0069\u0067"));_acff .SetIfNotNil ("\u004c\u006f\u0063\u006b",_feegc .Lock );_acff .SetIfNotNil ("\u0053\u0056",_feegc .SV );if _feegc .V !=nil {_acff .SetIfNotNil ("\u0056",_feegc .V .ToPdfObject ());
};return _fegg ;};type pdfFontType3 struct{fontCommon ;_ddab *_gadb .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _gadb .PdfObject ;Encoding _gadb .PdfObject ;FontBBox _gadb .PdfObject ;FontMatrix _gadb .PdfObject ;FirstChar _gadb .PdfObject ;LastChar _gadb .PdfObject ;Widths _gadb .PdfObject ;Resources _gadb .PdfObject ;_ddfgd map[_gcc .CharCode ]float64 ;
_bbcg _gcc .TextEncoder ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_fdg .PSProgram ;_efedb *_fdg .PSExecutor ;_dcff []byte ;_gcdbg *_gadb .PdfObjectStream ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_becba *PdfReader )GetCatalogStructTreeRoot ()(_gadb .PdfObject ,bool ){if _becba ._gbef ==nil {return nil ,false ;};_fbgcg :=_becba ._gbef .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _fbgcg ,_fbgcg !=nil ;
};func (_bcca *PdfReader )newPdfAnnotationTextFromDict (_acg *_gadb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_eeef :=PdfAnnotationText {};_agdb ,_gce :=_bcca .newPdfAnnotationMarkupFromDict (_acg );if _gce !=nil {return nil ,_gce ;};_eeef .PdfAnnotationMarkup =_agdb ;
_eeef .Open =_acg .Get ("\u004f\u0070\u0065\u006e");_eeef .Name =_acg .Get ("\u004e\u0061\u006d\u0065");_eeef .State =_acg .Get ("\u0053\u0074\u0061t\u0065");_eeef .StateModel =_acg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_eeef ,nil ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_gadb .PdfObjectArray ;ExtGState _gadb .PdfObject ;};func (_gbe *PdfReader )newPdfAnnotationRedactFromDict (_gca *_gadb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_ffe :=PdfAnnotationRedact {};
_ffdb ,_cbef :=_gbe .newPdfAnnotationMarkupFromDict (_gca );if _cbef !=nil {return nil ,_cbef ;};_ffe .PdfAnnotationMarkup =_ffdb ;_ffe .QuadPoints =_gca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ffe .IC =_gca .Get ("\u0049\u0043");
_ffe .RO =_gca .Get ("\u0052\u004f");_ffe .OverlayText =_gca .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_ffe .Repeat =_gca .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_ffe .DA =_gca .Get ("\u0044\u0041");_ffe .Q =_gca .Get ("\u0051");
return &_ffe ,nil ;};func (_gbec *PdfReader )buildOutlineTree (_fcfga _gadb .PdfObject ,_gfgga *PdfOutlineTreeNode ,_deeed *PdfOutlineTreeNode ,_cgccc map[_gadb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cgccc ==nil {_cgccc =map[_gadb .PdfObject ]struct{}{};
};_cgccc [_fcfga ]=struct{}{};_dcedf ,_gcdd :=_fcfga .(*_gadb .PdfIndirectObject );if !_gcdd {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fcfga );
};_dcdgb ,_bffca :=_dcedf .PdfObject .(*_gadb .PdfObjectDictionary );if !_bffca {return nil ,nil ,_bb .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_dcdgb ,_dcedf ,_dcedf );
if _fgceb :=_dcdgb .Get ("\u0054\u0069\u0074l\u0065");_fgceb !=nil {_aafgb ,_deffe :=_gbec .newPdfOutlineItemFromIndirectObject (_dcedf );if _deffe !=nil {return nil ,nil ,_deffe ;};_aafgb .Parent =_gfgga ;_aafgb .Prev =_deeed ;_fbdab :=_gadb .ResolveReference (_dcdgb .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_dgagb :=_cgccc [_fbdab ];_fbdab !=nil &&_fbdab !=_dcedf &&!_dgagb {if !_gadb .IsNullObject (_fbdab ){_cdeeg ,_ccfcd ,_eaada :=_gbec .buildOutlineTree (_fbdab ,&_aafgb .PdfOutlineTreeNode ,nil ,_cgccc );if _eaada !=nil {_cg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_eaada );
}else {_aafgb .First =_cdeeg ;_aafgb .Last =_ccfcd ;};};};_dgagda :=_gadb .ResolveReference (_dcdgb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_bgbc :=_cgccc [_dgagda ];_dgagda !=nil &&_dgagda !=_dcedf &&!_bgbc {if !_gadb .IsNullObject (_dgagda ){_gfdfbc ,_dgcgc ,_facea :=_gbec .buildOutlineTree (_dgagda ,_gfgga ,&_aafgb .PdfOutlineTreeNode ,_cgccc );
if _facea !=nil {_cg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_facea );
}else {_aafgb .Next =_gfdfbc ;return &_aafgb .PdfOutlineTreeNode ,_dgcgc ,nil ;};};};return &_aafgb .PdfOutlineTreeNode ,&_aafgb .PdfOutlineTreeNode ,nil ;};_feddd ,_dbbfd :=_dgae (_dcedf );if _dbbfd !=nil {return nil ,nil ,_dbbfd ;};_feddd .Parent =_gfgga ;
if _fdcfd :=_dcdgb .Get ("\u0046\u0069\u0072s\u0074");_fdcfd !=nil {_fdcfd =_gadb .ResolveReference (_fdcfd );if _ ,_fbgcd :=_cgccc [_fdcfd ];_fdcfd !=nil &&_fdcfd !=_dcedf &&!_fbgcd {_bcgce :=_gadb .TraceToDirectObject (_fdcfd );if _ ,_aegbd :=_bcgce .(*_gadb .PdfObjectNull );
!_aegbd &&_bcgce !=nil {_fbgde ,_bbgd ,_gfbfg :=_gbec .buildOutlineTree (_fdcfd ,&_feddd .PdfOutlineTreeNode ,nil ,_cgccc );if _gfbfg !=nil {_cg .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gfbfg );
}else {_feddd .First =_fbgde ;_feddd .Last =_bbgd ;};};};};return &_feddd .PdfOutlineTreeNode ,&_feddd .PdfOutlineTreeNode ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fcbgeg DefaultImageHandler )NewGrayImageFromGoImage (goimg _ga .Image )(*Image ,error ){_gagb :=goimg .Bounds ();_aabba :=&Image {Width :int64 (_gagb .Dx ()),Height :int64 (_gagb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _bccfe :=goimg .(type ){case *_ga .Gray :if len (_bccfe .Pix )!=_gagb .Dx ()*_gagb .Dy (){_adbd ,_faec :=_cf .GrayConverter .Convert (goimg );
if _faec !=nil {return nil ,_faec ;};_aabba .Data =_adbd .Pix ();}else {_aabba .Data =_bccfe .Pix ;};case *_ga .Gray16 :_aabba .BitsPerComponent =16;if len (_bccfe .Pix )!=_gagb .Dx ()*_gagb .Dy ()*2{_agfdg ,_daef :=_cf .Gray16Converter .Convert (goimg );
if _daef !=nil {return nil ,_daef ;};_aabba .Data =_agfdg .Pix ();}else {_aabba .Data =_bccfe .Pix ;};case _cf .Image :_cccb :=_bccfe .Base ();if _cccb .ColorComponents ==1{_aabba .BitsPerComponent =int64 (_cccb .BitsPerComponent );_aabba .Data =_cccb .Data ;
return _aabba ,nil ;};_gaeee ,_bcgfeb :=_cf .GrayConverter .Convert (goimg );if _bcgfeb !=nil {return nil ,_bcgfeb ;};_aabba .Data =_gaeee .Pix ();default:_caebf ,_fdcfg :=_cf .GrayConverter .Convert (goimg );if _fdcfg !=nil {return nil ,_fdcfg ;};_aabba .Data =_caebf .Pix ();
};return _aabba ,nil ;};

// GetXObjectByName gets XObject by name.
func (_decb *PdfPage )GetXObjectByName (name _gadb .PdfObjectName )(_gadb .PdfObject ,bool ){_cfff ,_fage :=_decb .Resources .XObject .(*_gadb .PdfObjectDictionary );if !_fage {return nil ,false ;};if _cafea :=_cfff .Get (name );_cafea !=nil {return _cafea ,true ;
};return nil ,false ;};func (_acd *PdfReader )newPdfActionHideFromDict (_egb *_gadb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_egb .Get ("\u0054"),H :_egb .Get ("\u0048")},nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_fcacc *PdfReader )Inspect ()(map[string ]int ,error ){return _fcacc ._becf .Inspect ()};func _dfae (_febc []byte )(_acbdb ,_cgacc string ,_cgcec error ){_cg .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_febc ));
_fgabf :=_edccf .FindIndex (_febc );if _fgabf ==nil {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_gadb .ErrTypeError ;};_efeg :=_fgabf [1];_adee :=_db .Index (string (_febc [_efeg :]),_bgfg );if _adee < 0{_acbdb =string (_febc [_efeg :]);return _acbdb ,"",nil ;};_gcbd :=_efeg +_adee ;_acbdb =string (_febc [_efeg :_gcbd ]);_bdbcf :=_gcbd ;
_adee =_db .Index (string (_febc [_bdbcf :]),_beced );if _adee < 0{_cg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cgcec );
return "","",_gadb .ErrTypeError ;};_dgce :=_bdbcf +_adee ;_cgacc =string (_febc [_bdbcf :_dgce ]);return _acbdb ,_cgacc ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_adgdd *Image )GetParamsDict ()*_gadb .PdfObjectDictionary {_fcabg :=_gadb .MakeDict ();_fcabg .Set ("\u0057\u0069\u0064t\u0068",_gadb .MakeInteger (_adgdd .Width ));_fcabg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gadb .MakeInteger (_adgdd .Height ));
_fcabg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gadb .MakeInteger (int64 (_adgdd .ColorComponents )));_fcabg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gadb .MakeInteger (_adgdd .BitsPerComponent ));
return _fcabg ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _ccaaf (_ddbgf _gadb .PdfObject ){_cg .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ddbgf ,_ddbgf .String ());if _cdeb ,_efbfa :=_ddbgf .(*_gadb .PdfObjectStream );_efbfa {_dcbad ,_dgdcb :=_gadb .DecodeStream (_cdeb );
if _dgdcb !=nil {_cg .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dgdcb );return ;};_cg .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dcbad );}else if _gfabb ,_ccbfd :=_ddbgf .(*_gadb .PdfIndirectObject );
_ccbfd {_cg .Log .Debug ("\u0025\u0054\u0020%\u0076",_gfabb .PdfObject ,_gfabb .PdfObject );_cg .Log .Debug ("\u0025\u0073",_gfabb .PdfObject .String ());};};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gdbc *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_ggea :=func (_cegfc float64 )float64 {if _cegfc >=6.0/29{return _cegfc *_cegfc *_cegfc ;};return 108.0/841*(_cegfc -4.0/29.0);};_acgc :=img ._bdge ;if len (_acgc )!=6{_cg .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_acgc =_gdbc .DecodeArray ();};_gege :=_cb .NewReader (img .getBase ());_dcbb :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._egfg ,img ._bdge );_cbaee :=_cb .NewWriter (_dcbb );_bgdaa :=_gee .Pow (2,float64 (img .BitsPerComponent ))-1;
_dafb :=make ([]uint32 ,3);var (_fdgfc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_dbee ,_gfcbe ,_cfca float64 ;);for {_fdgfc =_gege .ReadSamples (_dafb );if _fdgfc ==_cc .EOF {break ;}else if _fdgfc !=nil {return img ,_fdgfc ;};Ls =float64 (_dafb [0])/_bgdaa ;
As =float64 (_dafb [1])/_bgdaa ;Bs =float64 (_dafb [2])/_bgdaa ;Ls =_cf .LinearInterpolate (Ls ,0.0,1.0,_acgc [0],_acgc [1]);As =_cf .LinearInterpolate (As ,0.0,1.0,_acgc [2],_acgc [3]);Bs =_cf .LinearInterpolate (Bs ,0.0,1.0,_acgc [4],_acgc [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_gdbc .WhitePoint [0]*_ggea (L );Y =_gdbc .WhitePoint [1]*_ggea (M );Z =_gdbc .WhitePoint [2]*_ggea (N );_dbee =3.240479*X +-1.537150*Y +-0.498535*Z ;_gfcbe =-0.969256*X +1.875992*Y +0.041556*Z ;_cfca =0.055648*X +-0.204043*Y +1.057311*Z ;
_dbee =_gee .Min (_gee .Max (_dbee ,0),1.0);_gfcbe =_gee .Min (_gee .Max (_gfcbe ,0),1.0);_cfca =_gee .Min (_gee .Max (_cfca ,0),1.0);_dafb [0]=uint32 (_dbee *_bgdaa );_dafb [1]=uint32 (_gfcbe *_bgdaa );_dafb [2]=uint32 (_cfca *_bgdaa );if _fdgfc =_cbaee .WriteSamples (_dafb );
_fdgfc !=nil {return img ,_fdgfc ;};};return _fafdf (&_dcbb ),nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ddbf *PdfPattern )IsShading ()bool {return _ddbf .PatternType ==2};func (_dbfeg *PdfWriter )flushWriter ()error {if _dbfeg ._dacbe ==nil {_dbfeg ._dacbe =_dbfeg ._agfdb .Flush ();};return _dbfeg ._dacbe ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_afeb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbgb ,_bgfa :=color .(*PdfColorDeviceCMYK );if !_bgfa {_cg .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffeee :=_fbgb .C ();_edaab :=_fbgb .M ();_cbge :=_fbgb .Y ();_agaed :=_fbgb .K ();_ffeee =_ffeee *(1-_agaed )+_agaed ;_edaab =_edaab *(1-_agaed )+_agaed ;
_cbge =_cbge *(1-_agaed )+_agaed ;_cdfe :=1-_ffeee ;_ffab :=1-_edaab ;_dbacc :=1-_cbge ;return NewPdfColorDeviceRGB (_cdfe ,_ffab ,_dbacc ),nil ;};func (_gfaec *PdfWriter )checkLicense ()error {_dgabg :=_ef .GetLicenseKey ();if (_dgabg ==nil ||!_dgabg .IsLicensed ())&&!_bgegc {_b .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_b .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _bb .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cccgd .Lock ();defer _cccgd .Unlock ();_eecfb =subject };func (_cfdaf *PdfReader )newPdfSignatureReferenceFromDict (_aeggb *_gadb .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _afgbdf ,_faff :=_cfdaf ._gaccc .GetModelFromPrimitive (_aeggb ).(*PdfSignatureReference );
_faff {return _afgbdf ,nil ;};_gageg :=&PdfSignatureReference {_ccdef :_aeggb ,Data :_aeggb .Get ("\u0044\u0061\u0074\u0061")};var _gbcged bool ;_gageg .Type ,_ =_gadb .GetName (_aeggb .Get ("\u0054\u0079\u0070\u0065"));_gageg .TransformMethod ,_gbcged =_gadb .GetName (_aeggb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_gbcged {_cg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gageg .TransformParams ,_ =_gadb .GetDict (_aeggb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_gageg .DigestMethod ,_ =_gadb .GetName (_aeggb .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _gageg ,nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cbced *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cbced .ToPdfOutline ().PdfOutlineTreeNode ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_eabb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bfgg :=range pages {_bfgg =_bfgg .Duplicate ();_bedge (_bfgg );_eabb ._dade =append (_eabb ._dade ,_bfgg );};};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_cbcc *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cbcc .AlternateSpace ==nil {return nil ,_bb .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _cbcc .AlternateSpace .ColorToRGB (color );};

// IsValid checks if the given pdf output intent type is valid.
func (_afdfe PdfOutputIntentType )IsValid ()bool {return _afdfe >=PdfOutputIntentTypeA1 &&_afdfe <=PdfOutputIntentTypeX ;};func _beca ()string {_dfbf :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _bbaf _dbd .Buffer ;for _bfdg :=0;_bfdg < 6;_bfdg ++{_bbaf .WriteRune (rune (_dfbf [_d .Intn (len (_dfbf ))]));};return _bbaf .String ();};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_faacf *PdfFont )BytesToCharcodes (data []byte )[]_gcc .CharCode {_cg .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _cebag ,_dffc :=_faacf ._ecfec .(*pdfFontType0 );_dffc &&_cebag ._cedba !=nil {if _fgfgb ,_gcbf :=_cebag .bytesToCharcodes (data );_gcbf {return _fgfgb ;};};var (_egfa =make ([]_gcc .CharCode ,0,len (data )+len (data )%2);_ccgeb =_faacf .baseFields ();
);if _ccgeb ._ddbg !=nil {if _bfaac ,_ggda :=_ccgeb ._ddbg .BytesToCharcodes (data );_ggda {for _ ,_ecfg :=range _bfaac {_egfa =append (_egfa ,_gcc .CharCode (_ecfg ));};return _egfa ;};};if _ccgeb .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _fgeg :=0;_fgeg < len (data );_fgeg +=2{_bgccb :=uint16 (data [_fgeg ])<<8|uint16 (data [_fgeg +1]);_egfa =append (_egfa ,_gcc .CharCode (_bgccb ));};}else {for _ ,_gage :=range data {_egfa =append (_egfa ,_gcc .CharCode (_gage ));
};};return _egfa ;};

// ToPdfObject implements interface PdfModel.
func (_debcc *PdfSignature )ToPdfObject ()_gadb .PdfObject {_dbaeb :=_debcc ._defca ;var _acadd *_gadb .PdfObjectDictionary ;if _befb ,_daefbc :=_dbaeb .PdfObject .(*pdfSignDictionary );_daefbc {_acadd =_befb .PdfObjectDictionary ;}else {_acadd =_dbaeb .PdfObject .(*_gadb .PdfObjectDictionary );
};_acadd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_debcc .Type );_acadd .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_debcc .Filter );_acadd .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_debcc .SubFilter );_acadd .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_debcc .ByteRange );
_acadd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_debcc .Contents );_acadd .SetIfNotNil ("\u0043\u0065\u0072\u0074",_debcc .Cert );_acadd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_debcc .Name );_acadd .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_debcc .Reason );
_acadd .SetIfNotNil ("\u004d",_debcc .M );_acadd .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_debcc .Reference );_acadd .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_debcc .Changes );_acadd .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_debcc .ContactInfo );
return _dbaeb ;};func _bdeg (_cagcc _gadb .PdfObject )(*PdfColorspaceLab ,error ){_ggcef :=NewPdfColorspaceLab ();if _gcfc ,_aefbe :=_cagcc .(*_gadb .PdfIndirectObject );_aefbe {_ggcef ._fbfaf =_gcfc ;};_cagcc =_gadb .TraceToDirectObject (_cagcc );_cbbce ,_aaag :=_cagcc .(*_gadb .PdfObjectArray );
if !_aaag {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cbbce .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cagcc =_gadb .TraceToDirectObject (_cbbce .Get (0));_daae ,_aaag :=_cagcc .(*_gadb .PdfObjectName );if !_aaag {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_daae !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cagcc =_gadb .TraceToDirectObject (_cbbce .Get (1));_bagcb ,_aaag :=_cagcc .(*_gadb .PdfObjectDictionary );
if !_aaag {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_cagcc =_bagcb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_cagcc =_gadb .TraceToDirectObject (_cagcc );_acbb ,_aaag :=_cagcc .(*_gadb .PdfObjectArray );if !_aaag {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};
if _acbb .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_bgeb ,_gaca :=_acbb .GetAsFloat64Slice ();
if _gaca !=nil {return nil ,_gaca ;};_ggcef .WhitePoint =_bgeb ;_cagcc =_bagcb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cagcc !=nil {_cagcc =_gadb .TraceToDirectObject (_cagcc );_gfdb ,_dcdea :=_cagcc .(*_gadb .PdfObjectArray );
if !_dcdea {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gfdb .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_fbdge ,_gfef :=_gfdb .GetAsFloat64Slice ();if _gfef !=nil {return nil ,_gfef ;};_ggcef .BlackPoint =_fbdge ;};_cagcc =_bagcb .Get ("\u0052\u0061\u006eg\u0065");if _cagcc !=nil {_cagcc =_gadb .TraceToDirectObject (_cagcc );_abfa ,_cgea :=_cagcc .(*_gadb .PdfObjectArray );
if !_cgea {_cg .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abfa .Len ()!=4{_cg .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gccd ,_cdb :=_abfa .GetAsFloat64Slice ();if _cdb !=nil {return nil ,_cdb ;};_ggcef .Range =_gccd ;};return _ggcef ,nil ;};func _gaedg (_ecbdg *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_ecbdg }};


// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// BaseFont returns the font's "BaseFont" field.
func (_bagcee *PdfFont )BaseFont ()string {return _bagcee .baseFields ()._bbecb };

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_eeeccd *PdfWriter )SetRotation (rotate int64 )error {_dddbg ,_cbbbc :=_gadb .GetDict (_eeeccd ._cfbfa );if !_cbbbc {return ErrTypeCheck ;};_dddbg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gadb .MakeInteger (rotate ));return nil ;};func _fdccd ()_f .Time {_cccgd .Lock ();
defer _cccgd .Unlock ();return _cdcee };

// GetSubFilter returns SubFilter value or empty string.
func (_fdgb *pdfSignDictionary )GetSubFilter ()string {_abdc :=_fdgb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _abdc ==nil {return "";};if _gdeecd ,_bgea :=_gadb .GetNameVal (_abdc );_bgea {return _gdeecd ;};return "";};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_gecf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_fafdc *PdfRectangle )Normalize (){if _fafdc .Llx > _fafdc .Urx {_fafdc .Llx ,_fafdc .Urx =_fafdc .Urx ,_fafdc .Llx ;};if _fafdc .Lly > _fafdc .Ury {_fafdc .Lly ,_fafdc .Ury =_fafdc .Ury ,_fafdc .Lly ;};};func (_abga *pdfFontType0 )bytesToCharcodes (_gbgfc []byte )([]_gcc .CharCode ,bool ){if _abga ._cedba ==nil {return nil ,false ;
};_eaddd ,_bdeebc :=_abga ._cedba .BytesToCharcodes (_gbgfc );if !_bdeebc {return nil ,false ;};_aggg :=make ([]_gcc .CharCode ,len (_eaddd ));for _fggf ,_defde :=range _eaddd {_aggg [_fggf ]=_gcc .CharCode (_defde );};return _aggg ,true ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _gadb .PdfObject ;Mac _gadb .PdfObject ;Unix _gadb .PdfObject ;NewWindow _gadb .PdfObject ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_geacd :=&PdfShadingPatternType2 {};_geacd .Matrix =_gadb .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_geacd .PdfPattern =&PdfPattern {};_geacd .PdfPattern .PatternType =int64 (*_gadb .MakeInteger (2));
_geacd .PdfPattern ._afbdb =_geacd ;_geacd .PdfPattern ._cdaag =_gadb .MakeIndirectObject (_gadb .MakeDict ());return _geacd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_degeg *PdfShadingType1 )ToPdfObject ()_gadb .PdfObject {_degeg .PdfShading .ToPdfObject ();_acfg ,_cgdde :=_degeg .getShadingDict ();if _cgdde !=nil {_cg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _degeg .Domain !=nil {_acfg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_degeg .Domain );};if _degeg .Matrix !=nil {_acfg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_degeg .Matrix );};if _degeg .Function !=nil {if len (_degeg .Function )==1{_acfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_degeg .Function [0].ToPdfObject ());
}else {_gcdcc :=_gadb .MakeArray ();for _ ,_cfgbg :=range _degeg .Function {_gcdcc .Append (_cfgbg .ToPdfObject ());};_acfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcdcc );};};return _degeg ._gfbgb ;};func _gcaff (_ecefg *_gadb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_begdg :=PdfShadingType4 {};
_eegbe :=_ecefg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eegbe ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gegdc ,_ggbbd :=_eegbe .(*_gadb .PdfObjectInteger );if !_ggbbd {_cg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eegbe );
return nil ,_gadb .ErrTypeError ;};_begdg .BitsPerCoordinate =_gegdc ;_eegbe =_ecefg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eegbe ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gegdc ,_ggbbd =_eegbe .(*_gadb .PdfObjectInteger );if !_ggbbd {_cg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eegbe );
return nil ,_gadb .ErrTypeError ;};_begdg .BitsPerComponent =_gegdc ;_eegbe =_ecefg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eegbe ==nil {_cg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gegdc ,_ggbbd =_eegbe .(*_gadb .PdfObjectInteger );if !_ggbbd {_cg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eegbe );
return nil ,_gadb .ErrTypeError ;};_begdg .BitsPerComponent =_gegdc ;_eegbe =_ecefg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eegbe ==nil {_cg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_daged ,_ggbbd :=_eegbe .(*_gadb .PdfObjectArray );if !_ggbbd {_cg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eegbe );
return nil ,_gadb .ErrTypeError ;};_begdg .Decode =_daged ;_eegbe =_ecefg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eegbe ==nil {_cg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_begdg .Function =[]PdfFunction {};if _ecagd ,_eeeca :=_eegbe .(*_gadb .PdfObjectArray );_eeeca {for _ ,_bedd :=range _ecagd .Elements (){_fedef ,_dfcfgc :=_bdbagg (_bedd );if _dfcfgc !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfcfgc );
return nil ,_dfcfgc ;};_begdg .Function =append (_begdg .Function ,_fedef );};}else {_bcaed ,_acfe :=_bdbagg (_eegbe );if _acfe !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acfe );
return nil ,_acfe ;};_begdg .Function =append (_begdg .Function ,_bcaed );};return &_begdg ,nil ;};func (_facb *PdfReader )newPdfAnnotationSquigglyFromDict (_aece *_gadb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gccf :=PdfAnnotationSquiggly {};
_cbdg ,_facae :=_facb .newPdfAnnotationMarkupFromDict (_aece );if _facae !=nil {return nil ,_facae ;};_gccf .PdfAnnotationMarkup =_cbdg ;_gccf .QuadPoints =_aece .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gccf ,nil ;
};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bfdee *PdfShading )GetContainingPdfObject ()_gadb .PdfObject {return _bfdee ._gfbgb };func (_beg *PdfReader )newPdfAnnotationMarkupFromDict (_bcec *_gadb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_becg :=&PdfAnnotationMarkup {};if _gadda :=_bcec .Get ("\u0054");
_gadda !=nil {_becg .T =_gadda ;};if _fdee :=_bcec .Get ("\u0050\u006f\u0070u\u0070");_fdee !=nil {_feb ,_bcff :=_fdee .(*_gadb .PdfIndirectObject );if !_bcff {if _ ,_acfc :=_fdee .(*_gadb .PdfObjectNull );!_acfc {return nil ,_bb .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_dfg ,_age :=_beg .newPdfAnnotationFromIndirectObject (_feb );if _age !=nil {return nil ,_age ;};if _dfg !=nil {_fbd ,_bfa :=_dfg ._egeb .(*PdfAnnotationPopup );if !_bfa {return nil ,_bb .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_becg .Popup =_fbd ;};};};if _ecb :=_bcec .Get ("\u0043\u0041");_ecb !=nil {_becg .CA =_ecb ;};if _agf :=_bcec .Get ("\u0052\u0043");_agf !=nil {_becg .RC =_agf ;};if _fcf :=_bcec .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_fcf !=nil {_becg .CreationDate =_fcf ;};if _abc :=_bcec .Get ("\u0049\u0052\u0054");_abc !=nil {_becg .IRT =_abc ;};if _bee :=_bcec .Get ("\u0053\u0075\u0062\u006a");_bee !=nil {_becg .Subj =_bee ;};if _bbec :=_bcec .Get ("\u0052\u0054");_bbec !=nil {_becg .RT =_bbec ;
};if _fab :=_bcec .Get ("\u0049\u0054");_fab !=nil {_becg .IT =_fab ;};if _fccc :=_bcec .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_fccc !=nil {_becg .ExData =_fccc ;};return _becg ,nil ;};

// Val returns the value of the color.
func (_ggag *PdfColorCalGray )Val ()float64 {return float64 (*_ggag )};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cgecg int64 ;_ecffb int64 ;_eadaf int64 ;_ceecg int64 ;_bafca int64 ;_ggdfd int64 ;_beeae byte ;_bfebf int64 ;_fbgec int64 ;};func (_acec *PdfReader )newPdfAnnotationCircleFromDict (_aadg *_gadb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_cae :=PdfAnnotationCircle {};
_faee ,_bdec :=_acec .newPdfAnnotationMarkupFromDict (_aadg );if _bdec !=nil {return nil ,_bdec ;};_cae .PdfAnnotationMarkup =_faee ;_cae .BS =_aadg .Get ("\u0042\u0053");_cae .IC =_aadg .Get ("\u0049\u0043");_cae .BE =_aadg .Get ("\u0042\u0045");_cae .RD =_aadg .Get ("\u0052\u0044");
return &_cae ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// String returns a human readable description of `fontfile`.
func (_ccceb *fontFile )String ()string {_egbc :="\u005b\u004e\u006f\u006e\u0065\u005d";if _ccceb ._fbfg !=nil {_egbc =_ccceb ._fbfg .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_ccceb ._cffd ,_egbc );
};

// Height returns the height of `rect`.
func (_beeda *PdfRectangle )Height ()float64 {return _gee .Abs (_beeda .Ury -_beeda .Lly )};func _fecab (_aaef _gadb .PdfObject )(*fontFile ,error ){_cg .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_aaef );
_edefe :=&fontFile {};_aaef =_gadb .TraceToDirectObject (_aaef );_dfddb ,_gfcbge :=_aaef .(*_gadb .PdfObjectStream );if !_gfcbge {_cg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_aaef );
return nil ,_gadb .ErrTypeError ;};_edfg :=_dfddb .PdfObjectDictionary ;_bebc ,_fgffd :=_gadb .DecodeStream (_dfddb );if _fgffd !=nil {return nil ,_fgffd ;};_cefd ,_gfcbge :=_gadb .GetNameVal (_edfg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gfcbge {_edefe ._cdded =_cefd ;
if _cefd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_cg .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_cfdfgf ,_ :=_gadb .GetIntVal (_edfg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_gfcdg ,_ :=_gadb .GetIntVal (_edfg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cfdfgf > len (_bebc ){_cfdfgf =len (_bebc );
};if _cfdfgf +_gfcdg > len (_bebc ){_gfcdg =len (_bebc )-_cfdfgf ;};_fddfb :=_bebc [:_cfdfgf ];var _aaaa []byte ;if _gfcdg > 0{_aaaa =_bebc [_cfdfgf :_cfdfgf +_gfcdg ];};if _cfdfgf > 0&&_gfcdg > 0{_aadce :=_edefe .loadFromSegments (_fddfb ,_aaaa );if _aadce !=nil {return nil ,_aadce ;
};};return _edefe ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_fdda *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_dcfg *pdfCIDFontType0 )ToPdfObject ()_gadb .PdfObject {return _gadb .MakeNull ()};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_aecbe *PdfWriter )SetOptimizer (optimizer Optimizer ){_aecbe ._dggca =optimizer };

// Subtype returns the font's "Subtype" field.
func (_edefg *PdfFont )Subtype ()string {_dfcf :=_edefg .baseFields ()._dccge ;if _adfcc ,_dfdcf :=_edefg ._ecfec .(*pdfFontType0 );_dfdcf {_dfcf =_dfcf +"\u003a"+_adfcc .DescendantFont .Subtype ();};return _dfcf ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _gadb .PdfObject ;Name _gadb .PdfObject ;State _gadb .PdfObject ;StateModel _gadb .PdfObject ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_effg *PdfReader )GetCatalogMarkInfo ()(_gadb .PdfObject ,bool ){if _effg ._gbef ==nil {return nil ,false ;};_ebcd :=_effg ._gbef .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _ebcd ,_ebcd !=nil ;};func (_ecdfa *PdfWriter )setDocumentIDs (_dbabg ,_bgeaf string ){_ecdfa ._gcgfg =_gadb .MakeArray (_gadb .MakeHexString (_dbabg ),_gadb .MakeHexString (_bgeaf ));
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject implements interface PdfModel.
func (_gddc *PdfAnnotationCircle )ToPdfObject ()_gadb .PdfObject {_gddc .PdfAnnotation .ToPdfObject ();_dgfd :=_gddc ._defb ;_ebea :=_dgfd .PdfObject .(*_gadb .PdfObjectDictionary );_gddc .PdfAnnotationMarkup .appendToPdfDictionary (_ebea );_ebea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_ebea .SetIfNotNil ("\u0042\u0053",_gddc .BS );_ebea .SetIfNotNil ("\u0049\u0043",_gddc .IC );_ebea .SetIfNotNil ("\u0042\u0045",_gddc .BE );_ebea .SetIfNotNil ("\u0052\u0044",_gddc .RD );return _dgfd ;};

// ToPdfObject returns a stream object.
func (_bgcbf *XObjectForm )ToPdfObject ()_gadb .PdfObject {_gcgc :=_bgcbf ._feadbe ;_ebgee :=_gcgc .PdfObjectDictionary ;if _bgcbf .Filter !=nil {_ebgee =_bgcbf .Filter .MakeStreamDict ();_gcgc .PdfObjectDictionary =_ebgee ;};_ebgee .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ebgee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0046\u006f\u0072\u006d"));_ebgee .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_bgcbf .FormType );_ebgee .SetIfNotNil ("\u0042\u0042\u006f\u0078",_bgcbf .BBox );
_ebgee .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgcbf .Matrix );if _bgcbf .Resources !=nil {_ebgee .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bgcbf .Resources .ToPdfObject ());};_ebgee .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bgcbf .Group );
_ebgee .SetIfNotNil ("\u0052\u0065\u0066",_bgcbf .Ref );_ebgee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_bgcbf .MetaData );_ebgee .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bgcbf .PieceInfo );_ebgee .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bgcbf .LastModified );
_ebgee .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bgcbf .StructParent );_ebgee .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bgcbf .StructParents );_ebgee .SetIfNotNil ("\u004f\u0050\u0049",_bgcbf .OPI );
_ebgee .SetIfNotNil ("\u004f\u0043",_bgcbf .OC );_ebgee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bgcbf .Name );_ebgee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gadb .MakeInteger (int64 (len (_bgcbf .Stream ))));_gcgc .Stream =_bgcbf .Stream ;return _gcgc ;
};

// ToPdfObject implements interface PdfModel.
func (_ccgb *PdfAnnotationSquiggly )ToPdfObject ()_gadb .PdfObject {_ccgb .PdfAnnotation .ToPdfObject ();_ebbc :=_ccgb ._defb ;_efb :=_ebbc .PdfObject .(*_gadb .PdfObjectDictionary );_ccgb .PdfAnnotationMarkup .appendToPdfDictionary (_efb );_efb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_efb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ccgb .QuadPoints );return _ebbc ;};func _eeeab (_gadac *_gadb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_affea :=PdfShadingType1 {};if _gefdg :=_gadac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_gefdg !=nil {_gefdg =_gadb .TraceToDirectObject (_gefdg );_aged ,_aeafe :=_gefdg .(*_gadb .PdfObjectArray );if !_aeafe {_cg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gefdg );
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_affea .Domain =_aged ;};if _bbbf :=_gadac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bbbf !=nil {_bbbf =_gadb .TraceToDirectObject (_bbbf );
_fgfdd ,_gbeda :=_bbbf .(*_gadb .PdfObjectArray );if !_gbeda {_cg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbbf );return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_affea .Matrix =_fgfdd ;};_gceg :=_gadac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gceg ==nil {_cg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_affea .Function =[]PdfFunction {};if _ccddd ,_gbea :=_gceg .(*_gadb .PdfObjectArray );_gbea {for _ ,_bddfg :=range _ccddd .Elements (){_cgadg ,_debag :=_bdbagg (_bddfg );if _debag !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_debag );
return nil ,_debag ;};_affea .Function =append (_affea .Function ,_cgadg );};}else {_eagde ,_caagd :=_bdbagg (_gceg );if _caagd !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_caagd );
return nil ,_caagd ;};_affea .Function =append (_affea .Function ,_eagde );};return &_affea ,nil ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_gadb .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_gadb .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// GetBorderWidth returns the border style's width.
func (_geg *PdfBorderStyle )GetBorderWidth ()float64 {if _geg .W ==nil {return 1;};return *_geg .W ;};func (_ggce *PdfReader )newPdfAnnotationScreenFromDict (_cafa *_gadb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_cgeff :=PdfAnnotationScreen {};
_cgeff .T =_cafa .Get ("\u0054");_cgeff .MK =_cafa .Get ("\u004d\u004b");_cgeff .A =_cafa .Get ("\u0041");_cgeff .AA =_cafa .Get ("\u0041\u0041");return &_cgeff ,nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cfc :=NewPdfAction ();_bdc :=&PdfActionThread {};_bdc .PdfAction =_cfc ;_cfc .SetContext (_bdc );return _bdc ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_cdcag :=&XObjectImage {};_cggaa :=&_gadb .PdfObjectStream {};_cggaa .PdfObjectDictionary =_gadb .MakeDict ();_cdcag ._bgccg =_cggaa ;return _cdcag ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_fegfc *PdfTransformParamsDocMDP )String ()string {return _b .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_fegfc .Type ,_fegfc .P ,_fegfc .V );};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_caage *PdfPageResources )GetContainingPdfObject ()_gadb .PdfObject {return _caage ._gedfg };

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _gadb .PdfObject )(_gadb .PdfObjectName ,error ){var _ecdc *_gadb .PdfObjectName ;var _fecff *_gadb .PdfObjectArray ;if _gagf ,_febd :=obj .(*_gadb .PdfIndirectObject );_febd {if _agab ,_eegg :=_gagf .PdfObject .(*_gadb .PdfObjectArray );
_eegg {_fecff =_agab ;}else if _edeg ,_cdfg :=_gagf .PdfObject .(*_gadb .PdfObjectName );_cdfg {_ecdc =_edeg ;};}else if _ddge ,_bffa :=obj .(*_gadb .PdfObjectArray );_bffa {_fecff =_ddge ;}else if _bggg ,_gdfa :=obj .(*_gadb .PdfObjectName );_gdfa {_ecdc =_bggg ;
};if _ecdc !=nil {switch *_ecdc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_ecdc ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_ecdc ,nil ;
};};if _fecff !=nil &&_fecff .Len ()> 0{if _bdfe ,_ggceg :=_fecff .Get (0).(*_gadb .PdfObjectName );_ggceg {switch *_bdfe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fecff .Len ()==1{return *_bdfe ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bdfe ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bdfe ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bdfe ,nil ;};};};return "",nil ;};func (_gfadg *PdfReader )newPdfAcroFormFromDict (_dabae *_gadb .PdfIndirectObject ,_bbddd *_gadb .PdfObjectDictionary )(*PdfAcroForm ,error ){_bbead :=NewPdfAcroForm ();
if _dabae !=nil {_bbead ._ggff =_dabae ;_dabae .PdfObject =_gadb .MakeDict ();};if _fdcea :=_bbddd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_fdcea !=nil &&!_gadb .IsNullObject (_fdcea ){_eege ,_gggd :=_gadb .GetArray (_fdcea );if !_gggd {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fdcea );
};var _eebbe []*PdfField ;for _ ,_eeeb :=range _eege .Elements (){_gcebc ,_febff :=_gadb .GetIndirect (_eeeb );if !_febff {if _ ,_agbfgc :=_eeeb .(*_gadb .PdfObjectNull );_agbfgc {_cg .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_cg .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_eeeb );
return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_geffc ,_bcaf :=_gfadg .newPdfFieldFromIndirectObject (_gcebc ,nil );
if _bcaf !=nil {return nil ,_bcaf ;};_cg .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_geffc );_eebbe =append (_eebbe ,_geffc );};_bbead .Fields =&_eebbe ;};if _ggbca :=_bbddd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_ggbca !=nil {_gdeb ,_dbdb :=_gadb .GetBool (_ggbca );if _dbdb {_bbead .NeedAppearances =_gdeb ;}else {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ggbca );
};};if _dabce :=_bbddd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_dabce !=nil {_ddddg ,_becec :=_gadb .GetInt (_dabce );if _becec {_bbead .SigFlags =_ddddg ;}else {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dabce );
};};if _edcd :=_bbddd .Get ("\u0043\u004f");_edcd !=nil {_abced ,_caad :=_gadb .GetArray (_edcd );if _caad {_bbead .CO =_abced ;}else {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_edcd );
};};if _bggf :=_bbddd .Get ("\u0044\u0052");_bggf !=nil {if _gfeac ,_eabge :=_gadb .GetDict (_bggf );_eabge {_eeed ,_abafge :=NewPdfPageResourcesFromDict (_gfeac );if _abafge !=nil {_cg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_abafge );
return nil ,_abafge ;};_bbead .DR =_eeed ;}else {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bggf );};};if _edgcbc :=_bbddd .Get ("\u0044\u0041");
_edgcbc !=nil {_geecd ,_feea :=_gadb .GetString (_edgcbc );if _feea {_bbead .DA =_geecd ;}else {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_edgcbc );
};};if _eefbe :=_bbddd .Get ("\u0051");_eefbe !=nil {_ebbe ,_cbgge :=_gadb .GetInt (_eefbe );if _cbgge {_bbead .Q =_ebbe ;}else {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eefbe );
};};if _eeecd :=_bbddd .Get ("\u0058\u0046\u0041");_eeecd !=nil {_bbead .XFA =_eeecd ;};if _ageeb :=_bbddd .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_ageeb !=nil {_bbead .ADBEEchoSign =_ageeb ;};_bbead .ToPdfObject ();
return _bbead ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_ecedb :=appender .Reader .DSS ;if _ecedb ==nil {_ecedb =NewDSS ();};if _cddedc :=_ecedb .generateHashMaps ();_cddedc !=nil {return nil ,_cddedc ;};return &LTV {CertClient :_bdf .NewCertClient (),OCSPClient :_bdf .NewOCSPClient (),CRLClient :_bdf .NewCRLClient (),SkipExisting :true ,_dfcfg :appender ,_fgde :_ecedb },nil ;
};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_agdf *PdfField )SetContext (ctx PdfModel ){_agdf ._gdbeg =ctx };

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_cga :=PdfColorDeviceRGB {r ,g ,b };return &_cga ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bbfbe *Outline )Insert (index uint ,item *OutlineItem ){_ggdge :=uint (len (_bbfbe .Entries ));if index > _ggdge {index =_ggdge ;};_bbfbe .Entries =append (_bbfbe .Entries [:index ],append ([]*OutlineItem {item },_bbfbe .Entries [index :]...)...);
};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_gadb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_afgbd *PdfColorspaceDeviceN )GetNumComponents ()int {return _afgbd .ColorantNames .Len ()};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_cagfb *PdfReader )CheckAccessRights (password []byte )(bool ,_gad .Permissions ,error ){return _cagfb ._becf .CheckAccessRights (password );};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_cgdbb *PdfPage )SetContentStreams (cStreams []string ,encoder _gadb .StreamEncoder )error {if len (cStreams )==0{_cgdbb .Contents =nil ;return nil ;};if encoder ==nil {encoder =_gadb .NewRawEncoder ();};var _bcedad []*_gadb .PdfObjectStream ;for _ ,_bbdga :=range cStreams {_gbga :=&_gadb .PdfObjectStream {};
_cgcadd :=encoder .MakeStreamDict ();_dbagb ,_efde :=encoder .EncodeBytes ([]byte (_bbdga ));if _efde !=nil {return _efde ;};_cgcadd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gadb .MakeInteger (int64 (len (_dbagb ))));_gbga .PdfObjectDictionary =_cgcadd ;
_gbga .Stream =_dbagb ;_bcedad =append (_bcedad ,_gbga );};if len (_bcedad )==1{_cgdbb .Contents =_bcedad [0];}else {_ffgd :=_gadb .MakeArray ();for _ ,_dgbfb :=range _bcedad {_ffgd .Append (_dgbfb );};_cgdbb .Contents =_ffgd ;};return nil ;};type pdfCIDFontType2 struct{fontCommon ;
_adgda *_gadb .PdfIndirectObject ;_dage _gcc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_gadb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gadb .PdfObject ;W _gadb .PdfObject ;DW2 _gadb .PdfObject ;W2 _gadb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _gadb .PdfObject ;_eagdc map[_gcc .CharCode ]float64 ;_fbacg float64 ;_cgab map[rune ]int ;};

// ToPdfObject implements interface PdfModel.
func (_baf *PdfActionSetOCGState )ToPdfObject ()_gadb .PdfObject {_baf .PdfAction .ToPdfObject ();_fdf :=_baf ._ec ;_ff :=_fdf .PdfObject .(*_gadb .PdfObjectDictionary );_ff .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeSetOCGState )));_ff .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_baf .State );
_ff .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_baf .PreserveRB );return _fdf ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ggaee *PdfShadingPatternType2 )ToPdfObject ()_gadb .PdfObject {_ggaee .PdfPattern .ToPdfObject ();_cccbb :=_ggaee .getDict ();if _ggaee .Shading !=nil {_cccbb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ggaee .Shading .ToPdfObject ());};if _ggaee .Matrix !=nil {_cccbb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggaee .Matrix );
};if _ggaee .ExtGState !=nil {_cccbb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ggaee .ExtGState );};return _ggaee ._cdaag ;};

// ToPdfObject implements interface PdfModel.
func (_cfbd *PdfAnnotationMovie )ToPdfObject ()_gadb .PdfObject {_cfbd .PdfAnnotation .ToPdfObject ();_deg :=_cfbd ._defb ;_ggbb :=_deg .PdfObject .(*_gadb .PdfObjectDictionary );_ggbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gadb .MakeName ("\u004d\u006f\u0076i\u0065"));
_ggbb .SetIfNotNil ("\u0054",_cfbd .T );_ggbb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_cfbd .Movie );_ggbb .SetIfNotNil ("\u0041",_cfbd .A );return _deg ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_eecebc DefaultImageHandler )Read (reader _cc .Reader )(*Image ,error ){_abcc ,_ ,_ccfca :=_ga .Decode (reader );if _ccfca !=nil {_cg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ccfca );
return nil ,_ccfca ;};return _eecebc .NewImageFromGoImage (_abcc );};func (_ceg *PdfAnnotation )String ()string {_gef :="";_fega ,_caa :=_ceg .ToPdfObject ().(*_gadb .PdfIndirectObject );if _caa {_gef =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ceg ._egeb ,_fega .PdfObject .String ());
};return _gef ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_gbbe *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _gbbe .Alternate ==nil {_cg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gbbe .N ==1{_cg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_eeda :=NewPdfColorspaceDeviceGray ();return _eeda .ImageToRGB (img );}else if _gbbe .N ==3{_cg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _gbbe .N ==4{_cg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_aebe :=NewPdfColorspaceDeviceCMYK ();return _aebe .ImageToRGB (img );}else {return img ,_bb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_cg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gbbe );
_ggdce ,_babg :=_gbbe .Alternate .ImageToRGB (img );_cg .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_cg .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ggdce );
return _ggdce ,_babg ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gdccag *PdfPageResources )HasFontByName (keyName _gadb .PdfObjectName )bool {_ ,_bgcgc :=_gdccag .GetFontByName (keyName );return _bgcgc ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cfegef *PdfReader )GetNamedDestinations ()(_gadb .PdfObject ,error ){_cabcb :=_gadb .ResolveReference (_cfegef ._gbef .Get ("\u0044\u0065\u0073t\u0073"));if _cabcb ==nil {return nil ,nil ;};if !_cfegef ._fdbdd {_bdedc :=_cfegef .traverseObjectData (_cabcb );
if _bdedc !=nil {return nil ,_bdedc ;};};return _cabcb ,nil ;};

// SetContext set the sub annotation (context).
func (_egab *PdfShading )SetContext (ctx PdfModel ){_egab ._aaaaa =ctx };

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_gabb *pdfFontSimple )SetEncoder (encoder _gcc .TextEncoder ){_gabb ._ddffd =encoder };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _gadb .PdfObject ;Name _gadb .PdfObject ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_ddgffd :=Permissions {};_ddgffd .DocMDP =docMdp ;_daceeb :=_gadb .MakeDict ();_daceeb .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_ddgffd ._gafcf =_daceeb ;return &_ddgffd ;
};func (_aga *PdfReader )newPdfActionGotoFromDict (_fde *_gadb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fde .Get ("\u0044")},nil ;};var _gffa =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func (_gabda *PdfWriter )setDocInfo (_cadcbe _gadb .PdfObject ){if _gabda .hasObject (_gabda ._ceeegd ){delete (_gabda ._gacff ,_gabda ._ceeegd );delete (_gabda ._fdac ,_gabda ._ceeegd );for _ffdefb ,_eeagd :=range _gabda ._agefec {if _eeagd ==_gabda ._ceeegd {copy (_gabda ._agefec [_ffdefb :],_gabda ._agefec [_ffdefb +1:]);
_gabda ._agefec [len (_gabda ._agefec )-1]=nil ;_gabda ._agefec =_gabda ._agefec [:len (_gabda ._agefec )-1];break ;};};};_cgafbb :=_gadb .PdfIndirectObject {};_cgafbb .PdfObject =_cadcbe ;_gabda ._ceeegd =&_cgafbb ;_gabda .addObject (&_cgafbb );};

// ToPdfObject returns a PDF object representation of the outline.
func (_cfcf *Outline )ToPdfObject ()_gadb .PdfObject {return _cfcf .ToPdfOutline ().ToPdfObject ()};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_affe *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bcag :=_cb .NewReader (img .getBase ());_bcbc :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._egfg ,img ._bdge );
_gbee :=_cb .NewWriter (_bcbc );_ddeb :=_gee .Pow (2,float64 (img .BitsPerComponent ))-1;_dbcd :=_affe .GetNumComponents ();_ffga :=make ([]uint32 ,_dbcd );_eecef :=make ([]float64 ,_dbcd );for {_cdee :=_bcag .ReadSamples (_ffga );if _cdee ==_cc .EOF {break ;
}else if _cdee !=nil {return img ,_cdee ;};for _daca :=0;_daca < _dbcd ;_daca ++{_afcb :=float64 (_ffga [_daca ])/_ddeb ;_eecef [_daca ]=_afcb ;};_fcbc ,_cdee :=_affe .TintTransform .Evaluate (_eecef );if _cdee !=nil {return img ,_cdee ;};for _ ,_gaab :=range _fcbc {_gaab =_gee .Min (_gee .Max (0,_gaab ),1.0);
if _cdee =_gbee .WriteSample (uint32 (_gaab *_ddeb ));_cdee !=nil {return img ,_cdee ;};};};return _affe .AlternateSpace .ImageToRGB (_fafdf (&_bcbc ));};func (_fef *PdfReader )newPdfAnnotationWatermarkFromDict (_cac *_gadb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bedcb :=PdfAnnotationWatermark {};
_bedcb .FixedPrint =_cac .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_bedcb ,nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_ebedf *modelManager )Register (primitive _gadb .PdfObject ,model PdfModel ){_ebedf ._dfdb [model ]=primitive ;_ebedf ._eeedc [primitive ]=model ;};var (_cccgd _be .Mutex ;_gebdf ="";_eddf _f .Time ;_fbefg ="";_fbbc ="";_cdcee _f .Time ;_defee ="";
_eecfb ="";_cabgc ="";);

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bdcd :=NewPdfAnnotation ();_ecde :=&PdfAnnotationFreeText {};_ecde .PdfAnnotation =_bdcd ;_ecde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdcd .SetContext (_ecde );return _ecde ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_gadb .PdfObjectBool ;SigFlags *_gadb .PdfObjectInteger ;CO *_gadb .PdfObjectArray ;DR *PdfPageResources ;DA *_gadb .PdfObjectString ;Q *_gadb .PdfObjectInteger ;XFA _gadb .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _gadb .PdfObject ;_ggff *_gadb .PdfIndirectObject ;_gfab bool ;};func (_cbfge *PdfWriter )writeString (_bebea string ){if _cbfge ._dacbe !=nil {return ;};_caagc ,_cegacf :=_cbfge ._agfdb .WriteString (_bebea );_cbfge ._fafba +=int64 (_caagc );
_cbfge ._dacbe =_cegacf ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _gadb .PdfObject ;IsMap _gadb .PdfObject ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_geee *PdfWriter )GetPdfVersion ()string {return _geee .getPdfVersion ()};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_geeag *PdfPageResources )GetXObjectFormByName (keyName _gadb .PdfObjectName )(*XObjectForm ,error ){_fcfef ,_ffbde :=_geeag .GetXObjectByName (keyName );if _fcfef ==nil {return nil ,nil ;};if _ffbde !=XObjectTypeForm {return nil ,_bb .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_fgbcd ,_eecad :=NewXObjectFormFromStream (_fcfef );if _eecad !=nil {return nil ,_eecad ;};return _fgbcd ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_cfcb :=NewPdfAnnotation ();_gdd :=&PdfAnnotationSound {};_gdd .PdfAnnotation =_cfcb ;_gdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfcb .SetContext (_gdd );return _gdd ;};func (_geeba *DSS )add (_feegb *[]*_gadb .PdfObjectStream ,_cged map[string ]*_gadb .PdfObjectStream ,_dccce [][]byte )([]*_gadb .PdfObjectStream ,error ){_bcac :=make ([]*_gadb .PdfObjectStream ,0,len (_dccce ));
for _ ,_afgbdd :=range _dccce {_dgde ,_dffa :=_agfbd (_afgbdd );if _dffa !=nil {return nil ,_dffa ;};_fdcfcf ,_daggd :=_cged [string (_dgde )];if !_daggd {_fdcfcf ,_dffa =_gadb .MakeStream (_afgbdd ,_gadb .NewRawEncoder ());if _dffa !=nil {return nil ,_dffa ;
};_cged [string (_dgde )]=_fdcfcf ;*_feegb =append (*_feegb ,_fdcfcf );};_bcac =append (_bcac ,_fdcfcf );};return _bcac ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_edba *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _edba .Base ==nil {return nil ,_bb .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _edba .Base .ColorToRGB (color );};

// SetReason sets the `Reason` field of the signature.
func (_bcgac *PdfSignature )SetReason (reason string ){_bcgac .Reason =_gadb .MakeString (reason )};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_gda :=NewPdfAction ();_cbe :=&PdfActionGoTo3DView {};_cbe .PdfAction =_gda ;_gda .SetContext (_cbe );return _cbe ;};func (_efeafd *PdfReader )loadPerms ()(*Permissions ,error ){if _dfec :=_efeafd ._gbef .Get ("\u0050\u0065\u0072m\u0073");
_dfec !=nil {if _begab ,_ecae :=_gadb .GetDict (_dfec );_ecae {_fgeag :=_begab .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _fgeag ==nil {return nil ,nil ;};if _edddc ,_ddbe :=_gadb .GetIndirect (_fgeag );_ddbe {_agaba ,_gaaga :=_efeafd .newPdfSignatureFromIndirect (_edddc );
if _gaaga !=nil {return nil ,_gaaga ;};return NewPermissions (_agaba ),nil ;};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gebea :=&PdfColorspaceSpecialSeparation {};return _gebea ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_gadb .PdfObjectName ;Colorants _gadb .PdfObject ;Process _gadb .PdfObject ;MixingHints _gadb .PdfObject ;_afcd *_gadb .PdfIndirectObject ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _gadb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_gadb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_deed ,_bagbf :=encoder .EncodeBytes (img .Data );
if _bagbf !=nil {_cg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bagbf );return nil ,_bagbf ;};_cgacf :=NewXObjectImage ();_eeegb :=img .Width ;_abbeg :=img .Height ;
_cgacf .Width =&_eeegb ;_cgacf .Height =&_abbeg ;_cacce :=img .BitsPerComponent ;_cgacf .BitsPerComponent =&_cacce ;_cgacf .Filter =encoder ;_cgacf .Stream =_deed ;if cs ==nil {if img .ColorComponents ==1{_cgacf .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_cgacf .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cgacf .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_bb .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_cgacf .ColorSpace =cs ;};if len (img ._egfg )!=0{_cfbebb :=NewXObjectImage ();_cfbebb .Filter =encoder ;_fadge ,_cgcbb :=encoder .EncodeBytes (img ._egfg );if _cgcbb !=nil {_cg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cgcbb );
return nil ,_cgcbb ;};_cfbebb .Stream =_fadge ;_cfbebb .BitsPerComponent =_cgacf .BitsPerComponent ;_cfbebb .Width =&img .Width ;_cfbebb .Height =&img .Height ;_cfbebb .ColorSpace =NewPdfColorspaceDeviceGray ();_cgacf .SMask =_cfbebb .ToPdfObject ();}else {_cgacf .SMask =xobjIn .SMask ;
_cgacf .ImageMask =xobjIn .ImageMask ;if _cgacf .ColorSpace .GetNumComponents ()==1{_dbeeg (_cgacf );};};return _cgacf ,nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_gadb .PdfObjectStream ;Data []byte ;_bgff *_gadb .PdfIndirectObject ;_gaa *_gadb .PdfObjectStream ;};var ImageHandling ImageHandler =DefaultImageHandler {};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);
FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);
FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);
FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););func _dcebe (_ccedb *_gadb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_fffd :=PdfShadingType2 {};_fddac :=_ccedb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _fddac ==nil {_cg .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_agebd ,_becc :=_fddac .(*_gadb .PdfObjectArray );if !_becc {_cg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fddac );return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _agebd .Len ()!=4{_cg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_agebd .Len ());return nil ,_bb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_fffd .Coords =_agebd ;if _fadce :=_ccedb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fadce !=nil {_fadce =_gadb .TraceToDirectObject (_fadce );_dgabd ,_dffd :=_fadce .(*_gadb .PdfObjectArray );if !_dffd {_cg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fadce );
return nil ,_bb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fffd .Domain =_dgabd ;};_fddac =_ccedb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fddac ==nil {_cg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fffd .Function =[]PdfFunction {};if _afabe ,_ageg :=_fddac .(*_gadb .PdfObjectArray );_ageg {for _ ,_gafgae :=range _afabe .Elements (){_abfbf ,_bceee :=_bdbagg (_gafgae );if _bceee !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bceee );
return nil ,_bceee ;};_fffd .Function =append (_fffd .Function ,_abfbf );};}else {_cceec ,_egbdf :=_bdbagg (_fddac );if _egbdf !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egbdf );
return nil ,_egbdf ;};_fffd .Function =append (_fffd .Function ,_cceec );};if _egdbf :=_ccedb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_egdbf !=nil {_egdbf =_gadb .TraceToDirectObject (_egdbf );_fgdgb ,_dffdc :=_egdbf .(*_gadb .PdfObjectArray );if !_dffdc {_cg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egdbf );
return nil ,_gadb .ErrTypeError ;};if _fgdgb .Len ()!=2{_cg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fgdgb .Len ());return nil ,ErrInvalidAttribute ;
};_fffd .Extend =_fgdgb ;};return &_fffd ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_daebe []byte ;_edgda []uint32 ;_adeab *_gadb .PdfObjectStream ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_eabca *PdfPattern )ToPdfObject ()_gadb .PdfObject {_dfbga :=_eabca .getDict ();_dfbga .Set ("\u0054\u0079\u0070\u0065",_gadb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dfbga .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_gadb .MakeInteger (_eabca .PatternType ));
return _eabca ._cdaag ;};func _bggcce (_fgegf *_gadb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_efega :=PdfShadingType6 {};_adace :=_fgegf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _adace ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggfcb ,_cgceg :=_adace .(*_gadb .PdfObjectInteger );if !_cgceg {_cg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adace );
return nil ,_gadb .ErrTypeError ;};_efega .BitsPerCoordinate =_ggfcb ;_adace =_fgegf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _adace ==nil {_cg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ggfcb ,_cgceg =_adace .(*_gadb .PdfObjectInteger );if !_cgceg {_cg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_adace );
return nil ,_gadb .ErrTypeError ;};_efega .BitsPerComponent =_ggfcb ;_adace =_fgegf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _adace ==nil {_cg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggfcb ,_cgceg =_adace .(*_gadb .PdfObjectInteger );if !_cgceg {_cg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_adace );
return nil ,_gadb .ErrTypeError ;};_efega .BitsPerComponent =_ggfcb ;_adace =_fgegf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _adace ==nil {_cg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cgafb ,_cgceg :=_adace .(*_gadb .PdfObjectArray );if !_cgceg {_cg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adace );
return nil ,_gadb .ErrTypeError ;};_efega .Decode =_cgafb ;if _fdaa :=_fgegf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fdaa !=nil {_efega .Function =[]PdfFunction {};if _bccgaa ,_cbfd :=_fdaa .(*_gadb .PdfObjectArray );_cbfd {for _ ,_bgaca :=range _bccgaa .Elements (){_fbaba ,_bfcgc :=_bdbagg (_bgaca );
if _bfcgc !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfcgc );return nil ,_bfcgc ;};_efega .Function =append (_efega .Function ,_fbaba );
};}else {_ecede ,_efbcf :=_bdbagg (_fdaa );if _efbcf !=nil {_cg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efbcf );return nil ,_efbcf ;
};_efega .Function =append (_efega .Function ,_ecede );};};return &_efega ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dacce *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dacce .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// GetOutlineTree returns the outline tree.
func (_gffbb *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _gffbb ._gcecc };

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_gadb .PdfObjectInteger ;BitsPerComponent *_gadb .PdfObjectInteger ;BitsPerFlag *_gadb .PdfObjectInteger ;Decode *_gadb .PdfObjectArray ;Function []PdfFunction ;};func (_ebfaf *PdfWriter )writeOutlines ()error {if _ebfaf ._dcdeaa ==nil {return nil ;
};_cg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_ebfaf ._dcdeaa );_ddgbg :=_ebfaf ._dcdeaa .ToPdfObject ();_cg .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ddgbg ,_ddgbg ,_ddgbg );
_ebfaf ._gaeab .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ddgbg );_aeefg :=_ebfaf .addObjects (_ddgbg );if _aeefg !=nil {return _aeefg ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ceec *PdfActionMovie )ToPdfObject ()_gadb .PdfObject {_ceec .PdfAction .ToPdfObject ();_bga :=_ceec ._ec ;_ccf :=_bga .PdfObject .(*_gadb .PdfObjectDictionary );_ccf .SetIfNotNil ("\u0053",_gadb .MakeName (string (ActionTypeMovie )));_ccf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ceec .Annotation );
_ccf .SetIfNotNil ("\u0054",_ceec .T );_ccf .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ceec .Operation );return _bga ;};func _afca (_eceee []byte )bool {if len (_eceee )< 4{return true ;};for _debac :=range _eceee [:4]{_ffbc :=rune (_debac );
if !_fb .Is (_fb .ASCII_Hex_Digit ,_ffbc )&&!_fb .IsSpace (_ffbc ){return true ;};};return false ;};func _fdff (_abeab *_gadb .PdfObjectDictionary ,_deef *fontCommon )(*pdfCIDFontType0 ,error ){if _deef ._dccge !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_cg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_deef );
return nil ,_gadb .ErrRangeError ;};_ggfe :=_gegee (_deef );_fgfgf ,_ceceb :=_gadb .GetDict (_abeab .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ceceb {_cg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_deef );
return nil ,ErrRequiredAttributeMissing ;};_ggfe .CIDSystemInfo =_fgfgf ;_ggfe .DW =_abeab .Get ("\u0044\u0057");_ggfe .W =_abeab .Get ("\u0057");_ggfe .DW2 =_abeab .Get ("\u0044\u0057\u0032");_ggfe .W2 =_abeab .Get ("\u0057\u0032");_ggfe ._dbge =1000.0;
if _gbabg ,_dcfad :=_gadb .GetNumberAsFloat (_ggfe .DW );_dcfad ==nil {_ggfe ._dbge =_gbabg ;};_cbcg ,_fgbae :=_cbadf (_ggfe .W );if _fgbae !=nil {return nil ,_fgbae ;};if _cbcg ==nil {_cbcg =map[_gcc .CharCode ]float64 {};};_ggfe ._deaf =_cbcg ;return _ggfe ,nil ;
};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_afg *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func (_fca *PdfReader )newPdfAnnotationWidgetFromDict (_bccaa *_gadb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gdaa :=PdfAnnotationWidget {};
_gdaa .H =_bccaa .Get ("\u0048");_gdaa .MK =_bccaa .Get ("\u004d\u004b");_gdaa .A =_bccaa .Get ("\u0041");_gdaa .AA =_bccaa .Get ("\u0041\u0041");_gdaa .BS =_bccaa .Get ("\u0042\u0053");_gdaa .Parent =_bccaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
return &_gdaa ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_gdegb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_gdegb .HiVal )};};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _gadb .PdfObject ;};