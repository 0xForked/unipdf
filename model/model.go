//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_d "bufio";_dcc "bytes";_cb "crypto/md5";_ea "crypto/rand";_bc "crypto/sha1";_ec "crypto/x509";_gb "encoding/binary";_g "encoding/hex";_ad "errors";_c "fmt";_ede "github.com/unidoc/pkcs7";_ga "github.com/unidoc/unipdf/v3/common";
_fda "github.com/unidoc/unipdf/v3/core";_ab "github.com/unidoc/unipdf/v3/core/security";_edc "github.com/unidoc/unipdf/v3/core/security/crypt";_bg "github.com/unidoc/unipdf/v3/internal/cmap";_eac "github.com/unidoc/unipdf/v3/internal/imageutil";_gf "github.com/unidoc/unipdf/v3/internal/license";
_cbc "github.com/unidoc/unipdf/v3/internal/sampling";_fd "github.com/unidoc/unipdf/v3/internal/textencoding";_acc "github.com/unidoc/unipdf/v3/internal/timeutils";_ff "github.com/unidoc/unipdf/v3/internal/transform";_ccf "github.com/unidoc/unipdf/v3/model/internal/docutil";
_ade "github.com/unidoc/unipdf/v3/model/internal/fonts";_ag "github.com/unidoc/unipdf/v3/model/mdp";_aeb "github.com/unidoc/unipdf/v3/model/sigutil";_gaf "github.com/unidoc/unipdf/v3/ps";_da "github.com/unidoc/unitype";_ece "golang.org/x/xerrors";_ef "hash";
_eg "image";_bd "image/color";_ "image/gif";_ "image/png";_ed "io";_a "io/ioutil";_f "math";_be "math/rand";_ac "os";_cc "regexp";_eef "sort";_dd "strconv";_dc "strings";_b "sync";_ee "time";_ca "unicode";_ae "unicode/utf8";);

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fda .PdfIndirectObject ;SV *_fda .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fgbc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _beagb (_aafg *_fda .PdfIndirectObject ,_gbcd *_fda .PdfObjectDictionary )(*DSS ,error ){if _aafg ==nil {_aafg =_fda .MakeIndirectObject (nil );
};_aafg .PdfObject =_fda .MakeDict ();_faee :=map[string ]*VRI {};if _ceda ,_deggb :=_fda .GetDict (_gbcd .Get ("\u0056\u0052\u0049"));_deggb {for _ ,_gfc :=range _ceda .Keys (){if _eafad ,_ccgda :=_fda .GetDict (_ceda .Get (_gfc ));_ccgda {_faee [_dc .ToUpper (_gfc .String ())]=_cdfbe (_eafad );
};};};return &DSS {Certs :_bbece (_gbcd .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_bbece (_gbcd .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_bbece (_gbcd .Get ("\u0043\u0052\u004c\u0073")),VRI :_faee ,_acfc :_aafg },nil ;};func _cead (_dbgfb _fda .PdfObject ,_cgbaa *PdfReader )(*OutlineDest ,error ){_effegc ,_gddba :=_fda .GetArray (_dbgfb );
if !_gddba {return nil ,_ad .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_dbea :=_effegc .Len ();if _dbea < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_dbea );
};_dabcd :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cffde :=_effegc .Get (0);if _gcgef ,_gebd :=_fda .GetIndirect (_cffde );_gebd {if _ ,_abgee ,_abfgag :=_cgbaa .PageFromIndirectObject (_gcgef );_abfgag ==nil {_dabcd .Page =int64 (_abgee -1);}else {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_gcgef );
};_dabcd .PageObj =_gcgef ;}else if _ffca ,_bcecg :=_fda .GetIntVal (_cffde );_bcecg {if _ffca >=0&&_ffca < len (_cgbaa .PageList ){_dabcd .PageObj =_cgbaa .PageList [_ffca ].GetPageAsIndirectObject ();}else {_ga .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ffca );
};_dabcd .Page =int64 (_ffca );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cffde );};_dbcc ,_gddba :=_fda .GetNameVal (_effegc .Get (1));
if !_gddba {_ga .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_effegc .Get (1));
return _dabcd ,nil ;};switch _dbcc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _dbea > 2{_dabcd .Y ,_ =_fda .GetNumberAsFloat (_fda .TraceToDirectObject (_effegc .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _dbea > 2{_dabcd .X ,_ =_fda .GetNumberAsFloat (_fda .TraceToDirectObject (_effegc .Get (2)));
};case "\u0058\u0059\u005a":if _dbea > 4{_dabcd .X ,_ =_fda .GetNumberAsFloat (_fda .TraceToDirectObject (_effegc .Get (2)));_dabcd .Y ,_ =_fda .GetNumberAsFloat (_fda .TraceToDirectObject (_effegc .Get (3)));_dabcd .Zoom ,_ =_fda .GetNumberAsFloat (_fda .TraceToDirectObject (_effegc .Get (4)));
};default:_dbcc ="\u0046\u0069\u0074";};_dabcd .Mode =_dbcc ;return _dabcd ,nil ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_adage *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gbafdd :=_adage .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gbafdd )> 0;_caaebb :=_fda .NewFlateEncoder ();_edacg :=_fda .MakeArray ();if wrapContents {_gagfc ,_gffad :=_fda .MakeStream ([]byte ("\u0071\u000a"),_caaebb );
if _gffad !=nil {return _gffad ;};_edacg .Append (_gagfc );};_edacg .Append (_gbafdd ...);if wrapContents {_agbef ,_gfbgb :=_fda .MakeStream ([]byte ("\u000a\u0051\u000a"),_caaebb );if _gfbgb !=nil {return _gfbgb ;};_edacg .Append (_agbef );};_ceef ,_adcad :=_fda .MakeStream (cs ,_caaebb );
if _adcad !=nil {return _adcad ;};_edacg .Append (_ceef );_adage .Contents =_edacg ;return nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_bf :=NewPdfAction ();_bdd :=&PdfActionImportData {};_bdd .PdfAction =_bf ;_bf .SetContext (_bdd );return _bdd ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ecdcc *PdfWriter )SetNameDictionary (names _fda .PdfObject )error {if names ==nil {return nil ;};_ga .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_ecdcc ._ecegfe .Set ("\u004e\u0061\u006de\u0073",names );return _ecdcc .addObjects (names );};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_fda .PdfObjectString ;Q *_fda .PdfObjectInteger ;DS *_fda .PdfObjectString ;RV _fda .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_cgda *PdfFont )GetCharMetrics (code _fd .CharCode )(CharMetrics ,bool ){var _edce _ade .CharMetrics ;switch _ffde :=_cgda ._fdbb .(type ){case *pdfFontSimple :if _gade ,_geba :=_ffde .GetCharMetrics (code );_geba {return _gade ,_geba ;};case *pdfFontType0 :if _gdad ,_gecb :=_ffde .GetCharMetrics (code );
_gecb {return _gdad ,_gecb ;};case *pdfCIDFontType0 :if _eege ,_fgdd :=_ffde .GetCharMetrics (code );_fgdd {return _eege ,_fgdd ;};case *pdfCIDFontType2 :if _ddba ,_dccdf :=_ffde .GetCharMetrics (code );_dccdf {return _ddba ,_dccdf ;};case *pdfFontType3 :if _bfdg ,_cdbbf :=_ffde .GetCharMetrics (code );
_cdbbf {return _bfdg ,_cdbbf ;};default:_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_cgda ._fdbb );
return _edce ,false ;};if _fdddb ,_bcge :=_cgda .GetFontDescriptor ();_bcge ==nil &&_fdddb !=nil {return _ade .CharMetrics {Wx :_fdddb ._bcdgg },true ;};_ga .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_cgda );
return _edce ,false ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fda .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _aadbc *_fda .PdfIndirectObject ;var _ffed *_fda .PdfObjectName ;var _dadef *_fda .PdfObjectArray ;if _dfdg ,_bdac :=obj .(*_fda .PdfIndirectObject );
_bdac {_aadbc =_dfdg ;};obj =_fda .TraceToDirectObject (obj );switch _feaf :=obj .(type ){case *_fda .PdfObjectArray :_dadef =_feaf ;case *_fda .PdfObjectName :_ffed =_feaf ;};if _ffed !=nil {switch *_ffed {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ga .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_ffed );return nil ,_cgdd ;};};if _dadef !=nil &&_dadef .Len ()> 0{var _acbd _fda .PdfObject =_aadbc ;
if _aadbc ==nil {_acbd =_dadef ;};if _adcd ,_cdee :=_fda .GetName (_dadef .Get (0));_cdee {switch _adcd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _dadef .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _dadef .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dadef .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _agedc (_acbd );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _bbag (_acbd );
case "\u004c\u0061\u0062":return _ddcc (_acbd );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _adefcf (_acbd );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _agfeb (_acbd );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _daffd (_acbd );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _bdfab (_acbd );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _eafeb (_acbd );default:_ga .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_adcd );
};};};_ga .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_dbgg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ggdg *_fda .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_bff :=PdfAnnotationFileAttachment {};_ega ,_abe :=_dbgg .newPdfAnnotationMarkupFromDict (_ggdg );
if _abe !=nil {return nil ,_abe ;};_bff .PdfAnnotationMarkup =_ega ;_bff .FS =_ggdg .Get ("\u0046\u0053");_bff .Name =_ggdg .Get ("\u004e\u0061\u006d\u0065");return &_bff ,nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_adfbf :=NewPdfAnnotation ();_dcdbg :=&PdfAnnotationWidget {};_dcdbg .PdfAnnotation =_adfbf ;_adfbf .SetContext (_dcdbg );return _dcdbg ;};func (_gaefa *DSS )addCerts (_fgbfg [][]byte )([]*_fda .PdfObjectStream ,error ){return _gaefa .add (&_gaefa .Certs ,_gaefa ._ebee ,_fgbfg );
};func (_gefcc *PdfReader )newPdfFieldSignatureFromDict (_fdeb *_fda .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gbbaa :=&PdfFieldSignature {};_ccgbb ,_bdbbe :=_fda .GetIndirect (_fdeb .Get ("\u0056"));if _bdbbe {var _gcbc error ;_gbbaa .V ,_gcbc =_gefcc .newPdfSignatureFromIndirect (_ccgbb );
if _gcbc !=nil {return nil ,_gcbc ;};};_gbbaa .Lock ,_ =_fda .GetIndirect (_fdeb .Get ("\u004c\u006f\u0063\u006b"));_gbbaa .SV ,_ =_fda .GetIndirect (_fdeb .Get ("\u0053\u0056"));return _gbbaa ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbdee *PdfShadingType7 )ToPdfObject ()_fda .PdfObject {_fbdee .PdfShading .ToPdfObject ();_cccgd ,_bfgce :=_fbdee .getShadingDict ();if _bfgce !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbdee .BitsPerCoordinate !=nil {_cccgd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbdee .BitsPerCoordinate );};if _fbdee .BitsPerComponent !=nil {_cccgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbdee .BitsPerComponent );
};if _fbdee .BitsPerFlag !=nil {_cccgd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fbdee .BitsPerFlag );};if _fbdee .Decode !=nil {_cccgd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbdee .Decode );};if _fbdee .Function !=nil {if len (_fbdee .Function )==1{_cccgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbdee .Function [0].ToPdfObject ());
}else {_bfgbd :=_fda .MakeArray ();for _ ,_ccdgb :=range _fbdee .Function {_bfgbd .Append (_ccdgb .ToPdfObject ());};_cccgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfgbd );};};return _fbdee ._edgffb ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ed .ReadSeeker )(*PdfFont ,error ){const _dgfac =_fd .CharCode (32);const _edcef =_fd .CharCode (255);_dfed ,_edgcg :=_a .ReadAll (r );if _edgcg !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_edgcg );
return nil ,_edgcg ;};_cced ,_edgcg :=_ade .TtfParse (_dcc .NewReader (_dfed ));if _edgcg !=nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_edgcg );
return nil ,_edgcg ;};_gfagad :=&pdfFontSimple {_ffbd :make (map[_fd .CharCode ]float64 ),fontCommon :fontCommon {_bfgb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gfagad ._bfbca =_fd .NewWinAnsiEncoder ();_gfagad ._fcdg =_cced .PostScriptName ;
_gfagad .FirstChar =_fda .MakeInteger (int64 (_dgfac ));_gfagad .LastChar =_fda .MakeInteger (int64 (_edcef ));_ddfae :=1000.0/float64 (_cced .UnitsPerEm );if len (_cced .Widths )<=0{return nil ,_ad .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_dgbe :=_ddfae *float64 (_cced .Widths [0]);_dfagb :=make ([]float64 ,0,_edcef -_dgfac +1);for _faaee :=_dgfac ;_faaee <=_edcef ;_faaee ++{_gadf ,_fcgfe :=_gfagad .Encoder ().CharcodeToRune (_faaee );if !_fcgfe {_ga .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_faaee );
_dfagb =append (_dfagb ,_dgbe );continue ;};_ccde ,_bfba :=_cced .Chars [_gadf ];if !_bfba {_ga .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dfagb =append (_dfagb ,_dgbe );continue ;
};_fcbd :=_ddfae *float64 (_cced .Widths [_ccde ]);_dfagb =append (_dfagb ,_fcbd );};_gfagad .Widths =_fda .MakeIndirectObject (_fda .MakeArrayFromFloats (_dfagb ));if len (_dfagb )< int (_edcef -_dgfac +1){_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dfagb ),255-32+1);
return nil ,_fda .ErrRangeError ;};for _gcaef :=_dgfac ;_gcaef <=_edcef ;_gcaef ++{_gfagad ._ffbd [_gcaef ]=_dfagb [_gcaef -_dgfac ];};_gfagad .Encoding =_fda .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");
_cbfdb :=&PdfFontDescriptor {};_cbfdb .FontName =_fda .MakeName (_cced .PostScriptName );_cbfdb .Ascent =_fda .MakeFloat (_ddfae *float64 (_cced .TypoAscender ));_cbfdb .Descent =_fda .MakeFloat (_ddfae *float64 (_cced .TypoDescender ));_cbfdb .CapHeight =_fda .MakeFloat (_ddfae *float64 (_cced .CapHeight ));
_cbfdb .FontBBox =_fda .MakeArrayFromFloats ([]float64 {_ddfae *float64 (_cced .Xmin ),_ddfae *float64 (_cced .Ymin ),_ddfae *float64 (_cced .Xmax ),_ddfae *float64 (_cced .Ymax )});_cbfdb .ItalicAngle =_fda .MakeFloat (_cced .ItalicAngle );_cbfdb .MissingWidth =_fda .MakeFloat (_ddfae *float64 (_cced .Widths [0]));
_dgefe ,_edgcg :=_fda .MakeStream (_dfed ,_fda .NewFlateEncoder ());if _edgcg !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_edgcg );
return nil ,_edgcg ;};_dgefe .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fda .MakeInteger (int64 (len (_dfed ))));_cbfdb .FontFile2 =_dgefe ;if _cced .Bold {_cbfdb .StemV =_fda .MakeInteger (120);}else {_cbfdb .StemV =_fda .MakeInteger (70);
};_fbafc :=_bdfagg ;if _cced .IsFixedPitch {_fbafc |=_ggdgf ;};if _cced .ItalicAngle !=0{_fbafc |=_aabad ;};_cbfdb .Flags =_fda .MakeInteger (int64 (_fbafc ));_gfagad ._defd =_cbfdb ;_dcdgd :=&PdfFont {_fdbb :_gfagad };return _dcdgd ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_aadfd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aadfd .Alternate ==nil {_ga .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _aadfd .N ==1{_ga .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ddbfd :=NewPdfColorspaceDeviceGray ();return _ddbfd .ColorToRGB (color );}else if _aadfd .N ==3{_ga .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _aadfd .N ==4{_ga .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fgbbb :=NewPdfColorspaceDeviceCMYK ();return _fgbbb .ColorToRGB (color );}else {return nil ,_ad .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ga .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_aadfd );
return _aadfd .Alternate .ColorToRGB (color );};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// Encoder returns the font's text encoder.
func (_dfbb *pdfFontSimple )Encoder ()_fd .TextEncoder {if _dfbb ._bfbca !=nil {return _dfbb ._bfbca ;};if _dfbb ._dgaaa !=nil {return _dfbb ._dgaaa ;};_cbdd ,_ :=_fd .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _cbdd ;};

// Width returns the width of `rect`.
func (_ebgc *PdfRectangle )Width ()float64 {return _f .Abs (_ebgc .Urx -_ebgc .Llx )};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_efbeg *PdfColorspaceDeviceN )GetNumComponents ()int {return _efbeg .ColorantNames .Len ()};

// ToPdfObject implements interface PdfModel.
func (_bcb *PdfAnnotationCaret )ToPdfObject ()_fda .PdfObject {_bcb .PdfAnnotation .ToPdfObject ();_accc :=_bcb ._fbb ;_fedd :=_accc .PdfObject .(*_fda .PdfObjectDictionary );_bcb .PdfAnnotationMarkup .appendToPdfDictionary (_fedd );_fedd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0043\u0061\u0072e\u0074"));
_fedd .SetIfNotNil ("\u0052\u0044",_bcb .RD );_fedd .SetIfNotNil ("\u0053\u0079",_bcb .Sy );return _accc ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fda .PdfObject ;};func _agbac (_afdab _fda .PdfObject )(PdfFunction ,error ){_afdab =_fda .ResolveReference (_afdab );if _gefeb ,_eggde :=_afdab .(*_fda .PdfObjectStream );
_eggde {_dbfgc :=_gefeb .PdfObjectDictionary ;_acec ,_gcbg :=_dbfgc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fda .PdfObjectInteger );if !_gcbg {_ga .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ad .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_acec ==0{return _gagaga (_gefeb );}else if *_acec ==4{return _gbdf (_gefeb );
}else {return nil ,_ad .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bcaab ,_cgef :=_afdab .(*_fda .PdfIndirectObject );_cgef {_eacgd ,_dfaca :=_bcaab .PdfObject .(*_fda .PdfObjectDictionary );
if !_dfaca {_ga .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ad .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_cbcad ,_dfaca :=_eacgd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fda .PdfObjectInteger );
if !_dfaca {_ga .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ad .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_cbcad ==2{return _gefea (_bcaab );}else if *_cbcad ==3{return _egfef (_bcaab );}else {return nil ,_ad .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eebe ,_gdffe :=_afdab .(*_fda .PdfObjectDictionary );
_gdffe {_edfee ,_abbef :=_eebe .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fda .PdfObjectInteger );if !_abbef {_ga .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ad .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_edfee ==2{return _gefea (_eebe );}else if *_edfee ==3{return _egfef (_eebe );
}else {return nil ,_ad .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ga .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_afdab );
return nil ,_ad .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func (_gcag *PdfReader )newPdfAnnotationFreeTextFromDict (_ddg *_fda .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_eafc :=PdfAnnotationFreeText {};_aaed ,_gfdc :=_gcag .newPdfAnnotationMarkupFromDict (_ddg );
if _gfdc !=nil {return nil ,_gfdc ;};_eafc .PdfAnnotationMarkup =_aaed ;_eafc .DA =_ddg .Get ("\u0044\u0041");_eafc .Q =_ddg .Get ("\u0051");_eafc .RC =_ddg .Get ("\u0052\u0043");_eafc .DS =_ddg .Get ("\u0044\u0053");_eafc .CL =_ddg .Get ("\u0043\u004c");
_eafc .IT =_ddg .Get ("\u0049\u0054");_eafc .BE =_ddg .Get ("\u0042\u0045");_eafc .RD =_ddg .Get ("\u0052\u0044");_eafc .BS =_ddg .Get ("\u0042\u0053");_eafc .LE =_ddg .Get ("\u004c\u0045");return &_eafc ,nil ;};

// A returns the value of the A component of the color.
func (_deed *PdfColorLab )A ()float64 {return _deed [1]};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_bgd :=NewPdfAnnotation ();_fegd :=&PdfAnnotationPrinterMark {};_fegd .PdfAnnotation =_bgd ;_bgd .SetContext (_fegd );return _fegd ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cbbdf *PdfAcroForm ,_dabd *PdfField ,_bedd *PdfAnnotationWidget )(*_fda .PdfObjectDictionary ,error );};

// GetContainingPdfObject implements interface PdfModel.
func (_efdg *PdfAnnotation )GetContainingPdfObject ()_fda .PdfObject {return _efdg ._fbb };

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_faead :=&XObjectImage {};_ddfd :=&_fda .PdfObjectStream {};_ddfd .PdfObjectDictionary =_fda .MakeDict ();_faead ._gcdcaa =_ddfd ;return _faead ;};type pdfCIDFontType0 struct{fontCommon ;_ebff *_fda .PdfIndirectObject ;
_dcbd _fd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fda .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fda .PdfObject ;W _fda .PdfObject ;DW2 _fda .PdfObject ;W2 _fda .PdfObject ;_dcdc map[_fd .CharCode ]float64 ;_ecgad float64 ;};

// Add appends a top level outline item to the outline.
func (_dccde *Outline )Add (item *OutlineItem ){_dccde .Entries =append (_dccde .Entries ,item )};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_aace :=NewPdfAnnotation ();_gcaa :=&PdfAnnotationStamp {};_gcaa .PdfAnnotation =_aace ;_gcaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aace .SetContext (_gcaa );return _gcaa ;};func (_ffc *PdfReader )newPdfActionLaunchFromDict (_aaea *_fda .PdfObjectDictionary )(*PdfActionLaunch ,error ){_dcgd ,_bce :=_gcfc (_aaea .Get ("\u0046"));
if _bce !=nil {return nil ,_bce ;};return &PdfActionLaunch {Win :_aaea .Get ("\u0057\u0069\u006e"),Mac :_aaea .Get ("\u004d\u0061\u0063"),Unix :_aaea .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_aaea .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dcgd },nil ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_gbfbb *PdfSignature )GetContainingPdfObject ()_fda .PdfObject {return _gbfbb ._agcfe };

// SetFillImage attach a model.Image to push button.
func (_cbed *PdfFieldButton )SetFillImage (image *Image ){if _cbed .IsPush (){_cbed ._dcfe =image ;};};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gbdaf *PdfOutlineTreeNode )GetContext ()PdfModel {if _dffc ,_gddd :=_gbdaf ._bgddeb .(*PdfOutline );_gddd {return _dffc ;};if _cdcdb ,_gggef :=_gbdaf ._bgddeb .(*PdfOutlineItem );_gggef {return _cdcdb ;};_ga .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_aeb .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_aeb .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_aeb .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ccda *PdfAppender ;_bcaabc *DSS ;};var _dbbef =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// DecodeArray returns the component range values for the Indexed colorspace.
func (_gcga *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_gcga .HiVal )};};func (_cbaad *PdfWriter )copyObject (_cecee _fda .PdfObject ,_cccb map[_fda .PdfObject ]_fda .PdfObject ,_dafdf map[_fda .PdfObject ]struct{},_fegfg bool )_fda .PdfObject {_gcfbb :=!_cbaad ._dfecb &&_dafdf !=nil ;
if _febca ,_ebfbe :=_cccb [_cecee ];_ebfbe {if _gcfbb &&!_fegfg {delete (_dafdf ,_cecee );};return _febca ;};if _cecee ==nil {_fccab :=_fda .MakeNull ();return _fccab ;};_bdfad :=_cecee ;switch _bgdda :=_cecee .(type ){case *_fda .PdfObjectArray :_gcdge :=_fda .MakeArray ();
_bdfad =_gcdge ;_cccb [_cecee ]=_bdfad ;for _ ,_beafc :=range _bgdda .Elements (){_gcdge .Append (_cbaad .copyObject (_beafc ,_cccb ,_dafdf ,_fegfg ));};case *_fda .PdfObjectStreams :_cfffd :=&_fda .PdfObjectStreams {PdfObjectReference :_bgdda .PdfObjectReference };
_bdfad =_cfffd ;_cccb [_cecee ]=_bdfad ;for _ ,_gbceee :=range _bgdda .Elements (){_cfffd .Append (_cbaad .copyObject (_gbceee ,_cccb ,_dafdf ,_fegfg ));};case *_fda .PdfObjectStream :_cdgb :=&_fda .PdfObjectStream {Stream :_bgdda .Stream ,PdfObjectReference :_bgdda .PdfObjectReference };
_bdfad =_cdgb ;_cccb [_cecee ]=_bdfad ;_cdgb .PdfObjectDictionary =_cbaad .copyObject (_bgdda .PdfObjectDictionary ,_cccb ,_dafdf ,_fegfg ).(*_fda .PdfObjectDictionary );case *_fda .PdfObjectDictionary :var _gdeae bool ;if _gcfbb &&!_fegfg {if _efbee ,_ :=_fda .GetNameVal (_bgdda .Get ("\u0054\u0079\u0070\u0065"));
_efbee =="\u0050\u0061\u0067\u0065"{_ ,_dbfff :=_cbaad ._ggbfc [_bgdda ];_fegfg =!_dbfff ;_gdeae =_fegfg ;};};_adacc :=_fda .MakeDict ();_bdfad =_adacc ;_cccb [_cecee ]=_bdfad ;for _ ,_begcc :=range _bgdda .Keys (){_adacc .Set (_begcc ,_cbaad .copyObject (_bgdda .Get (_begcc ),_cccb ,_dafdf ,_fegfg ));
};if _gdeae {_bdfad =_fda .MakeNull ();_fegfg =false ;};case *_fda .PdfIndirectObject :_fffd :=&_fda .PdfIndirectObject {PdfObjectReference :_bgdda .PdfObjectReference };_bdfad =_fffd ;_cccb [_cecee ]=_bdfad ;_fffd .PdfObject =_cbaad .copyObject (_bgdda .PdfObject ,_cccb ,_dafdf ,_fegfg );
case *_fda .PdfObjectString :_ecccc :=*_bgdda ;_bdfad =&_ecccc ;_cccb [_cecee ]=_bdfad ;case *_fda .PdfObjectName :_bbdf :=*_bgdda ;_bdfad =&_bbdf ;_cccb [_cecee ]=_bdfad ;case *_fda .PdfObjectNull :_bdfad =_fda .MakeNull ();_cccb [_cecee ]=_bdfad ;case *_fda .PdfObjectInteger :_bdfd :=*_bgdda ;
_bdfad =&_bdfd ;_cccb [_cecee ]=_bdfad ;case *_fda .PdfObjectReference :_agggc :=*_bgdda ;_bdfad =&_agggc ;_cccb [_cecee ]=_bdfad ;case *_fda .PdfObjectFloat :_ddbgbc :=*_bgdda ;_bdfad =&_ddbgbc ;_cccb [_cecee ]=_bdfad ;case *_fda .PdfObjectBool :_fcede :=*_bgdda ;
_bdfad =&_fcede ;_cccb [_cecee ]=_bdfad ;case *pdfSignDictionary :_ggdgca :=&pdfSignDictionary {PdfObjectDictionary :_fda .MakeDict (),_gcggb :_bgdda ._gcggb ,_begec :_bgdda ._begec };_bdfad =_ggdgca ;_cccb [_cecee ]=_bdfad ;for _ ,_cgdce :=range _bgdda .Keys (){_ggdgca .Set (_cgdce ,_cbaad .copyObject (_bgdda .Get (_cgdce ),_cccb ,_dafdf ,_fegfg ));
};default:_ga .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_cecee );
};if _gcfbb &&_fegfg {_dafdf [_cecee ]=struct{}{};};return _bdfad ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_ggbc *PdfFieldText )ToPdfObject ()_fda .PdfObject {_ggbc .PdfField .ToPdfObject ();_bdbcc :=_ggbc ._dccfd ;_afec :=_bdbcc .PdfObject .(*_fda .PdfObjectDictionary );_afec .Set ("\u0046\u0054",_fda .MakeName ("\u0054\u0078"));if _ggbc .DA !=nil {_afec .Set ("\u0044\u0041",_ggbc .DA );
};if _ggbc .Q !=nil {_afec .Set ("\u0051",_ggbc .Q );};if _ggbc .DS !=nil {_afec .Set ("\u0044\u0053",_ggbc .DS );};if _ggbc .RV !=nil {_afec .Set ("\u0052\u0056",_ggbc .RV );};if _ggbc .MaxLen !=nil {_afec .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_ggbc .MaxLen );
};return _bdbcc ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_edca *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_fcgc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_befea *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _befea .MediaBox !=nil {return _befea .MediaBox ,nil ;};_bcbca :=_befea .Parent ;for _bcbca !=nil {_bgfab ,_fbdggc :=_fda .GetDict (_bcbca );if !_fbdggc {return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _egedd :=_bgfab .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_egedd !=nil {_dbfc ,_ggcd :=_fda .GetArray (_egedd );if !_ggcd {return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_aagea ,_cdgcd :=NewPdfRectangle (*_dbfc );if _cdgcd !=nil {return nil ,_cdgcd ;};return _aagea ,nil ;};_bcbca =_bgfab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ad .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func _geea (_bgggag _fda .PdfObject )(*_fda .PdfObjectDictionary ,*fontCommon ,error ){_fdagf :=&fontCommon {};if _bddcf ,_gaedf :=_bgggag .(*_fda .PdfIndirectObject );_gaedf {_fdagf ._efdgde =_bddcf .ObjectNumber ;};_ccbf ,_egbce :=_fda .GetDict (_bgggag );
if !_egbce {_ga .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bgggag );
return nil ,nil ,ErrFontNotSupported ;};_adgb ,_egbce :=_fda .GetNameVal (_ccbf .Get ("\u0054\u0079\u0070\u0065"));if !_egbce {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _adgb !="\u0046\u006f\u006e\u0074"{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_adgb ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_fda .ErrTypeError ;};_egcad ,_egbce :=_fda .GetNameVal (_ccbf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_egbce {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fdagf ._bfgb =_egcad ;_dddbc ,_egbce :=_fda .GetNameVal (_ccbf .Get ("\u004e\u0061\u006d\u0065"));if _egbce {_fdagf ._egde =_dddbc ;};_aadfe :=_ccbf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _aadfe !=nil {_fdagf ._gcef =_fda .TraceToDirectObject (_aadfe );_bcbf ,_gedg :=_dcgg (_fdagf ._gcef ,_fdagf );if _gedg !=nil {return _ccbf ,_fdagf ,_gedg ;};_fdagf ._gaega =_bcbf ;}else if _egcad =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_egcad =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bbbd ,_abfd :=_bg .NewCIDSystemInfo (_ccbf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _abfd !=nil {return _ccbf ,_fdagf ,_abfd ;};_cdcbg :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_bbbd .Registry ,_bbbd .Ordering );if _bg .IsPredefinedCMap (_cdcbg ){_fdagf ._gaega ,_abfd =_bg .LoadPredefinedCMap (_cdcbg );
if _abfd !=nil {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cdcbg ,_abfd );
};};};_gbbg :=_ccbf .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _gbbg !=nil {_ebaag ,_feccb :=_befg (_gbbg );if _feccb !=nil {_ga .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feccb );
return _ccbf ,_fdagf ,_feccb ;};_fdagf ._defd =_ebaag ;};if _egcad !="\u0054\u0079\u0070e\u0033"{_fgece ,_ccgc :=_fda .GetNameVal (_ccbf .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_ccgc {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _ccbf ,_fdagf ,ErrRequiredAttributeMissing ;};_fdagf ._fcdg =_fgece ;};return _ccbf ,_fdagf ,nil ;};func _ffdbc (_baef _fda .PdfObject )(*PdfPattern ,error ){_ebfdab :=&PdfPattern {};var _ecdgeg *_fda .PdfObjectDictionary ;if _befbd ,_dfbg :=_fda .GetIndirect (_baef );
_dfbg {_ebfdab ._ccaef =_befbd ;_fbag ,_ecac :=_befbd .PdfObject .(*_fda .PdfObjectDictionary );if !_ecac {_ga .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_befbd .PdfObject );
return nil ,_fda .ErrTypeError ;};_ecdgeg =_fbag ;}else if _gdeed ,_bcade :=_fda .GetStream (_baef );_bcade {_ebfdab ._ccaef =_gdeed ;_ecdgeg =_gdeed .PdfObjectDictionary ;}else {_ga .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_baef );
return nil ,_fda .ErrTypeError ;};_cbeaf :=_ecdgeg .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cbeaf ==nil {_ga .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbde ,_afdfc :=_cbeaf .(*_fda .PdfObjectInteger );if !_afdfc {_ga .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cbeaf );
return nil ,_fda .ErrTypeError ;};if *_cbde !=1&&*_cbde !=2{_ga .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_cbde );return nil ,_fda .ErrRangeError ;
};_ebfdab .PatternType =int64 (*_cbde );switch *_cbde {case 1:_gdbbe ,_dfafc :=_bcbdf (_ecdgeg );if _dfafc !=nil {return nil ,_dfafc ;};_gdbbe .PdfPattern =_ebfdab ;_ebfdab ._ccafc =_gdbbe ;return _ebfdab ,nil ;case 2:_egeeeb ,_cgbde :=_fddba (_ecdgeg );
if _cgbde !=nil {return nil ,_cgbde ;};_egeeeb .PdfPattern =_ebfdab ;_ebfdab ._ccafc =_egeeeb ;return _ebfdab ,nil ;};return nil ,_ad .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _ccaff (_acge *PdfField ,_cdeecb _fda .PdfObject ){for _ ,_dafc :=range _acge .Annotations {_dafc .AS =_cdeecb ;
_dafc .ToPdfObject ();};};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_gaca *PdfPageResources )HasColorspaceByName (keyName _fda .PdfObjectName )bool {_ecgab ,_aedaf :=_gaca .GetColorspaces ();if _aedaf !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_aedaf );
return false ;};if _ecgab ==nil {return false ;};_ ,_cgafd :=_ecgab .Colorspaces [string (keyName )];return _cgafd ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_bccf *CompliancePdfReader )error ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_gdbe *PdfPageResources )SetXObjectFormByName (keyName _fda .PdfObjectName ,xform *XObjectForm )error {_eaae :=xform .ToPdfObject ().(*_fda .PdfObjectStream );_dfdcb :=_gdbe .SetXObjectByName (keyName ,_eaae );return _dfdcb ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fda .PdfObject ;IsMap _fda .PdfObject ;};func (_gfdb *PdfReader )newPdfAnnotationPolygonFromDict (_decef *_fda .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_efdd :=PdfAnnotationPolygon {};_aggg ,_ebf :=_gfdb .newPdfAnnotationMarkupFromDict (_decef );
if _ebf !=nil {return nil ,_ebf ;};_efdd .PdfAnnotationMarkup =_aggg ;_efdd .Vertices =_decef .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_efdd .LE =_decef .Get ("\u004c\u0045");_efdd .BS =_decef .Get ("\u0042\u0053");_efdd .IC =_decef .Get ("\u0049\u0043");
_efdd .BE =_decef .Get ("\u0042\u0045");_efdd .IT =_decef .Get ("\u0049\u0054");_efdd .Measure =_decef .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_efdd ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfObject returns the PDF representation of the function.
func (_cfdb *PdfFunctionType2 )ToPdfObject ()_fda .PdfObject {_bfad :=_fda .MakeDict ();_bfad .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fda .MakeInteger (2));_bbbfg :=&_fda .PdfObjectArray {};for _ ,_fdacf :=range _cfdb .Domain {_bbbfg .Append (_fda .MakeFloat (_fdacf ));
};_bfad .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbbfg );if _cfdb .Range !=nil {_ccee :=&_fda .PdfObjectArray {};for _ ,_edgcd :=range _cfdb .Range {_ccee .Append (_fda .MakeFloat (_edgcd ));};_bfad .Set ("\u0052\u0061\u006eg\u0065",_ccee );};if _cfdb .C0 !=nil {_eeagf :=&_fda .PdfObjectArray {};
for _ ,_gccbg :=range _cfdb .C0 {_eeagf .Append (_fda .MakeFloat (_gccbg ));};_bfad .Set ("\u0043\u0030",_eeagf );};if _cfdb .C1 !=nil {_bdcga :=&_fda .PdfObjectArray {};for _ ,_afgaf :=range _cfdb .C1 {_bdcga .Append (_fda .MakeFloat (_afgaf ));};_bfad .Set ("\u0043\u0031",_bdcga );
};_bfad .Set ("\u004e",_fda .MakeFloat (_cfdb .N ));if _cfdb ._degf !=nil {_cfdb ._degf .PdfObject =_bfad ;return _cfdb ._degf ;};return _bfad ;};func (_agcccg *PdfWriter )mapObjectStreams (_cfgcg bool )(map[_fda .PdfObject ]bool ,bool ){_dgaff :=make (map[_fda .PdfObject ]bool );
for _ ,_fadbc :=range _agcccg ._adeed {if _deffe ,_dacfa :=_fadbc .(*_fda .PdfObjectStreams );_dacfa {_cfgcg =true ;for _ ,_addaa :=range _deffe .Elements (){_dgaff [_addaa ]=true ;if _bdaef ,_bedf :=_addaa .(*_fda .PdfIndirectObject );_bedf {_dgaff [_bdaef .PdfObject ]=true ;
};};};};return _dgaff ,_cfgcg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fg *PdfAction )GetContainingPdfObject ()_fda .PdfObject {return _fg ._ddd };func (_eecd *PdfReader )newPdfActionSetOCGStateFromDict (_cgb *_fda .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cgb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cgb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func (_eddb *PdfReader )newPdfAnnotationProjectionFromDict (_cga *_fda .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fed :=&PdfAnnotationProjection {};_cde ,_cacd :=_eddb .newPdfAnnotationMarkupFromDict (_cga );if _cacd !=nil {return nil ,_cacd ;
};_fed .PdfAnnotationMarkup =_cde ;return _fed ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// GetRevisionNumber returns the version of the current Pdf document
func (_ggaf *PdfReader )GetRevisionNumber ()int {return _ggaf ._edbag .GetRevisionNumber ()};func _ddcc (_aadbd _fda .PdfObject )(*PdfColorspaceLab ,error ){_adge :=NewPdfColorspaceLab ();if _bgfec ,_gggcb :=_aadbd .(*_fda .PdfIndirectObject );_gggcb {_adge ._gdba =_bgfec ;
};_aadbd =_fda .TraceToDirectObject (_aadbd );_gcbab ,_fddg :=_aadbd .(*_fda .PdfObjectArray );if !_fddg {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gcbab .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_aadbd =_fda .TraceToDirectObject (_gcbab .Get (0));_gcgd ,_fddg :=_aadbd .(*_fda .PdfObjectName );if !_fddg {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_gcgd !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_aadbd =_fda .TraceToDirectObject (_gcbab .Get (1));_ddbf ,_fddg :=_aadbd .(*_fda .PdfObjectDictionary );
if !_fddg {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_aadbd =_ddbf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_aadbd =_fda .TraceToDirectObject (_aadbd );_cee ,_fddg :=_aadbd .(*_fda .PdfObjectArray );if !_fddg {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _cee .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_cedf ,_ecgce :=_cee .GetAsFloat64Slice ();if _ecgce !=nil {return nil ,_ecgce ;};_adge .WhitePoint =_cedf ;_aadbd =_ddbf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aadbd !=nil {_aadbd =_fda .TraceToDirectObject (_aadbd );
_agge ,_dafd :=_aadbd .(*_fda .PdfObjectArray );if !_dafd {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _agge .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_fgbf ,_afb :=_agge .GetAsFloat64Slice ();if _afb !=nil {return nil ,_afb ;};_adge .BlackPoint =_fgbf ;};_aadbd =_ddbf .Get ("\u0052\u0061\u006eg\u0065");if _aadbd !=nil {_aadbd =_fda .TraceToDirectObject (_aadbd );_cbcf ,_gdcd :=_aadbd .(*_fda .PdfObjectArray );
if !_gdcd {_ga .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cbcf .Len ()!=4{_ga .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_aafba ,_babbge :=_cbcf .GetAsFloat64Slice ();if _babbge !=nil {return nil ,_babbge ;};_adge .Range =_aafba ;};return _adge ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eeeg *PdfAnnotationInk )ToPdfObject ()_fda .PdfObject {_eeeg .PdfAnnotation .ToPdfObject ();_bafa :=_eeeg ._fbb ;_aff :=_bafa .PdfObject .(*_fda .PdfObjectDictionary );_eeeg .PdfAnnotationMarkup .appendToPdfDictionary (_aff );_aff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0049\u006e\u006b"));
_aff .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_eeeg .InkList );_aff .SetIfNotNil ("\u0042\u0053",_eeeg .BS );return _bafa ;};

// Encoder returns the font's text encoder.
func (_bfbe *PdfFont )Encoder ()_fd .TextEncoder {_bdcc :=_bfbe .actualFont ();if _bdcc ==nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bfbe ._fdbb );
return nil ;};return _bdcc .Encoder ();};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fda .PdfObject ;BS _fda .PdfObject ;LE _fda .PdfObject ;IC _fda .PdfObject ;LL _fda .PdfObject ;LLE _fda .PdfObject ;Cap _fda .PdfObject ;IT _fda .PdfObject ;LLO _fda .PdfObject ;CP _fda .PdfObject ;
Measure _fda .PdfObject ;CO _fda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfActionResetForm )ToPdfObject ()_fda .PdfObject {_bea .PdfAction .ToPdfObject ();_bdf :=_bea ._ddd ;_egc :=_bdf .PdfObject .(*_fda .PdfObjectDictionary );_egc .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeResetForm )));_egc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bea .Fields );
_egc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bea .Flags );return _bdf ;};func (_cgaec *PdfPage )setContainer (_ggggg *_fda .PdfIndirectObject ){_ggggg .PdfObject =_cgaec ._bfdab ;_cgaec ._ebgg =_ggggg ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fda .PdfObjectStream ;Data []byte ;_bcdf *_fda .PdfIndirectObject ;_eadf *_fda .PdfObjectStream ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_ecag :=PdfColorDeviceGray (grayVal );return &_ecag ;};type fontCommon struct{_fcdg string ;_bfgb string ;_egde string ;_gcef _fda .PdfObject ;_gaega *_bg .CMap ;_defd *PdfFontDescriptor ;
_efdgde int64 ;};func (_cecca *DSS )generateHashMap (_aebb []*_fda .PdfObjectStream )(map[string ]*_fda .PdfObjectStream ,error ){_eagebf :=map[string ]*_fda .PdfObjectStream {};for _ ,_efgg :=range _aebb {_ggef ,_beffe :=_fda .DecodeStream (_efgg );if _beffe !=nil {return nil ,_beffe ;
};_ccec ,_beffe :=_edfcb (_ggef );if _beffe !=nil {return nil ,_beffe ;};_eagebf [string (_ccec )]=_efgg ;};return _eagebf ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fda .PdfObject ;IC _fda .PdfObject ;BE _fda .PdfObject ;RD _fda .PdfObject ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_gfdg *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_edf ,_cedd :=color .(*PdfColorCalRGB );if !_cedd {_ga .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gccg :=_edf .A ();_aedd :=_edf .B ();_ebdbe :=_edf .C ();X :=_gfdg .Matrix [0]*_f .Pow (_gccg ,_gfdg .Gamma [0])+_gfdg .Matrix [3]*_f .Pow (_aedd ,_gfdg .Gamma [1])+_gfdg .Matrix [6]*_f .Pow (_ebdbe ,_gfdg .Gamma [2]);
Y :=_gfdg .Matrix [1]*_f .Pow (_gccg ,_gfdg .Gamma [0])+_gfdg .Matrix [4]*_f .Pow (_aedd ,_gfdg .Gamma [1])+_gfdg .Matrix [7]*_f .Pow (_ebdbe ,_gfdg .Gamma [2]);Z :=_gfdg .Matrix [2]*_f .Pow (_gccg ,_gfdg .Gamma [0])+_gfdg .Matrix [5]*_f .Pow (_aedd ,_gfdg .Gamma [1])+_gfdg .Matrix [8]*_f .Pow (_ebdbe ,_gfdg .Gamma [2]);
_faab :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bbggg :=-0.969256*X +1.875992*Y +0.041556*Z ;_fbfd :=0.055648*X +-0.204043*Y +1.057311*Z ;_faab =_f .Min (_f .Max (_faab ,0),1.0);_bbggg =_f .Min (_f .Max (_bbggg ,0),1.0);_fbfd =_f .Min (_f .Max (_fbfd ,0),1.0);
return NewPdfColorDeviceRGB (_faab ,_bbggg ,_fbfd ),nil ;};func (_dcfb *PdfWriter )setDocumentIDs (_dgfc ,_acfba string ){_dcfb ._bbad =_fda .MakeArray (_fda .MakeHexString (_dgfc ),_fda .MakeHexString (_acfba ));};func _abaab ()string {_bcaeg .Lock ();
defer _bcaeg .Unlock ();_ddacg :=_gf .GetLicenseKey ();if len (_cafaa )> 0&&(_ddacg .IsLicensed ()||_baceb ){return _cafaa ;};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_adddfb (),_ddacg .TypeToString ());
};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_ddfcd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbdd :=vals [0];if _fbdd < 0.0||_fbdd > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fbdd );
return nil ,ErrColorOutOfRange ;};_fdff :=vals [1];if _fdff < 0.0||_fdff > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdff );return nil ,ErrColorOutOfRange ;
};_abafb :=vals [2];if _abafb < 0.0||_abafb > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abafb );return nil ,ErrColorOutOfRange ;};_fgea :=vals [3];
if _fgea < 0.0||_fgea > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgea );return nil ,ErrColorOutOfRange ;};_becd :=NewPdfColorDeviceCMYK (_fbdd ,_fdff ,_abafb ,_fgea );
return _becd ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_fgeag :=NewPdfOutline ();_fgeag ._bgddeb =&_fgeag ;return _fgeag ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject implements interface PdfModel.
func (_accf *PdfAnnotationCircle )ToPdfObject ()_fda .PdfObject {_accf .PdfAnnotation .ToPdfObject ();_cbdc :=_accf ._fbb ;_cdb :=_cbdc .PdfObject .(*_fda .PdfObjectDictionary );_accf .PdfAnnotationMarkup .appendToPdfDictionary (_cdb );_cdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_cdb .SetIfNotNil ("\u0042\u0053",_accf .BS );_cdb .SetIfNotNil ("\u0049\u0043",_accf .IC );_cdb .SetIfNotNil ("\u0042\u0045",_accf .BE );_cdb .SetIfNotNil ("\u0052\u0044",_accf .RD );return _cbdc ;};func (_eega *PdfWriter )seekByName (_cbeafa _fda .PdfObject ,_efbfg []string ,_caad string )([]_fda .PdfObject ,error ){_ga .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cbeafa );
var _fecde []_fda .PdfObject ;if _fgdeb ,_caeedg :=_cbeafa .(*_fda .PdfIndirectObject );_caeedg {return _eega .seekByName (_fgdeb .PdfObject ,_efbfg ,_caad );};if _dcgdb ,_gaefb :=_cbeafa .(*_fda .PdfObjectStream );_gaefb {return _eega .seekByName (_dcgdb .PdfObjectDictionary ,_efbfg ,_caad );
};if _abgac ,_dgeeab :=_cbeafa .(*_fda .PdfObjectDictionary );_dgeeab {_ga .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_accff :=range _abgac .Keys (){_cgcfc :=_abgac .Get (_accff );if string (_accff )==_caad {_fecde =append (_fecde ,_cgcfc );};for _ ,_edbc :=range _efbfg {if string (_accff )==_edbc {_ga .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_edbc );
_ffafge ,_dacee :=_eega .seekByName (_cgcfc ,_efbfg ,_caad );if _dacee !=nil {return _fecde ,_dacee ;};_fecde =append (_fecde ,_ffafge ...);break ;};};};return _fecde ,nil ;};return _fecde ,nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_acfc :_fda .MakeIndirectObject (_fda .MakeDict ()),VRI :map[string ]*VRI {}};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cggbb pdfCIDFontType0 )GetCharMetrics (code _fd .CharCode )(_ade .CharMetrics ,bool ){_aaedf :=_cggbb ._ecgad ;if _edcg ,_bfdf :=_cggbb ._dcdc [code ];_bfdf {_aaedf =_edcg ;};return _ade .CharMetrics {Wx :_aaedf },true ;};var _baceb =false ;

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_dccfd :_fda .MakeIndirectObject (_fda .MakeDict ())}};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_cdbac *PdfPage )GetContainingPdfObject ()_fda .PdfObject {return _cdbac ._ebgg };const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// ToPdfObject returns the PDF representation of the colorspace.
func (_aefbc *PdfColorspaceSpecialSeparation )ToPdfObject ()_fda .PdfObject {_fcfcd :=_fda .MakeArray (_fda .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fcfcd .Append (_aefbc .ColorantName );_fcfcd .Append (_aefbc .AlternateSpace .ToPdfObject ());
_fcfcd .Append (_aefbc .TintTransform .ToPdfObject ());if _aefbc ._cfga !=nil {_aefbc ._cfga .PdfObject =_fcfcd ;return _aefbc ._cfga ;};return _fcfcd ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bad *PdfAnnotationWidget )Field ()*PdfField {return _bad ._bee };

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fda .PdfObject ;V _fda .PdfObject ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dfdc *PdfField )ToPdfObject ()_fda .PdfObject {_dcfd :=_dfdc ._dccfd ;_cdgc :=_dcfd .PdfObject .(*_fda .PdfObjectDictionary );_bdfg :=_fda .MakeArray ();for _ ,_ggea :=range _dfdc .Kids {_bdfg .Append (_ggea .ToPdfObject ());};for _ ,_aecc :=range _dfdc .Annotations {if _aecc ._fbb !=_dfdc ._dccfd {_bdfg .Append (_aecc .GetContext ().ToPdfObject ());
};};if _dfdc .Parent !=nil {_cdgc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dfdc .Parent .GetContainingPdfObject ());};if _bdfg .Len ()> 0{_cdgc .Set ("\u004b\u0069\u0064\u0073",_bdfg );};_cdgc .SetIfNotNil ("\u0046\u0054",_dfdc .FT );_cdgc .SetIfNotNil ("\u0054",_dfdc .T );
_cdgc .SetIfNotNil ("\u0054\u0055",_dfdc .TU );_cdgc .SetIfNotNil ("\u0054\u004d",_dfdc .TM );_cdgc .SetIfNotNil ("\u0046\u0066",_dfdc .Ff );_cdgc .SetIfNotNil ("\u0056",_dfdc .V );_cdgc .SetIfNotNil ("\u0044\u0056",_dfdc .DV );_cdgc .SetIfNotNil ("\u0041\u0041",_dfdc .AA );
if _dfdc .VariableText !=nil {_cdgc .SetIfNotNil ("\u0044\u0041",_dfdc .VariableText .DA );_cdgc .SetIfNotNil ("\u0051",_dfdc .VariableText .Q );_cdgc .SetIfNotNil ("\u0044\u0053",_dfdc .VariableText .DS );_cdgc .SetIfNotNil ("\u0052\u0056",_dfdc .VariableText .RV );
};return _dcfd ;};

// ToPdfObject implements interface PdfModel.
func (_bda *PdfActionGoToR )ToPdfObject ()_fda .PdfObject {_bda .PdfAction .ToPdfObject ();_fcc :=_bda ._ddd ;_bdae :=_fcc .PdfObject .(*_fda .PdfObjectDictionary );_bdae .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeGoToR )));if _bda .F !=nil {_bdae .Set ("\u0046",_bda .F .ToPdfObject ());
};_bdae .SetIfNotNil ("\u0044",_bda .D );_bdae .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bda .NewWindow );return _fcc ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_debcaf *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_bebgdd *PdfSignature ,_bfbd Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_abaeg *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_bcacd *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_egfgdd *PdfSignature ,_acabb Hasher )error ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_dbac :=NewPdfAnnotation ();_daae :=&PdfAnnotationLink {};_daae .PdfAnnotation =_dbac ;_dbac .SetContext (_daae );return _daae ;};func (_afed *PdfWriter )updateObjectNumbers (){_cbaee :=_afed .ObjNumOffset ;
_ddbc :=0;for _ ,_cfbba :=range _afed ._adeed {_ffgdbc :=int64 (_ddbc +1+_cbaee );_ecgbg :=true ;if _afed ._dfecb {if _dbgcf ,_dbdgdb :=_afed ._efec [_cfbba ];_dbdgdb {_ffgdbc =_dbgcf ;_ecgbg =false ;};};switch _cedea :=_cfbba .(type ){case *_fda .PdfIndirectObject :_cedea .ObjectNumber =_ffgdbc ;
_cedea .GenerationNumber =0;case *_fda .PdfObjectStream :_cedea .ObjectNumber =_ffgdbc ;_cedea .GenerationNumber =0;case *_fda .PdfObjectStreams :_cedea .ObjectNumber =_ffgdbc ;_cedea .GenerationNumber =0;default:_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cedea );
continue ;};if _ecgbg {_ddbc ++;};};_edcd :=func (_adgeb _fda .PdfObject )int64 {switch _cbab :=_adgeb .(type ){case *_fda .PdfIndirectObject :return _cbab .ObjectNumber ;case *_fda .PdfObjectStream :return _cbab .ObjectNumber ;case *_fda .PdfObjectStreams :return _cbab .ObjectNumber ;
};return 0;};_eef .SliceStable (_afed ._adeed ,func (_egdbab ,_bfaab int )bool {return _edcd (_afed ._adeed [_egdbab ])< _edcd (_afed ._adeed [_bfaab ])});};func (_bbfgc *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ee .Time )(PdfDate ,error ){_acaad :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_eaead ,_ :=_dd .ParseInt (_acaad [1:3],10,32);_eagcdd ,_ :=_dd .ParseInt (_acaad [4:6],10,32);return PdfDate {_ebfe :int64 (timeObj .Year ()),_dbafg :int64 (timeObj .Month ()),_acaaab :int64 (timeObj .Day ()),_cacbeg :int64 (timeObj .Hour ()),_bdbda :int64 (timeObj .Minute ()),_affd :int64 (timeObj .Second ()),_bbacd :_acaad [0],_eegdc :_eaead ,_cbfdee :_eagcdd },nil ;
};

// GetContainingPdfObject implements model.PdfModel interface.
func (_eadfc *PdfOutputIntent )GetContainingPdfObject ()_fda .PdfObject {return _eadfc ._fdce };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fda .PdfObject ;IC _fda .PdfObject ;RO _fda .PdfObject ;OverlayText _fda .PdfObject ;Repeat _fda .PdfObject ;DA _fda .PdfObject ;Q _fda .PdfObject ;};func (_cge *PdfReader )newPdfActionGotoEFromDict (_fbf *_fda .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gdeg ,_eba :=_gcfc (_fbf .Get ("\u0046"));
if _eba !=nil {return nil ,_eba ;};return &PdfActionGoToE {D :_fbf .Get ("\u0044"),NewWindow :_fbf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_fbf .Get ("\u0054"),F :_gdeg },nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fda .PdfObject ;Flags _fda .PdfObject ;};func _afdd (_bfdfe *PdfPage ){_agfab :=_gf .GetLicenseKey ();if _agfab !=nil &&_agfab .IsLicensed (){return ;};_afegg :=_fda .PdfObjectName ("\u0055\u0046\u0031");
if !_bfdfe .Resources .HasFontByName (_afegg ){_bfdfe .Resources .SetFontByName (_afegg ,DefaultFont ().ToPdfObject ());};var _becbd []string ;_becbd =append (_becbd ,"\u0071");_becbd =append (_becbd ,"\u0042\u0054");_becbd =append (_becbd ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_afegg .String ()));
_becbd =append (_becbd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_becbd =append (_becbd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_acafb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_becbd =append (_becbd ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_acafb ));_becbd =append (_becbd ,"\u0045\u0054");_becbd =append (_becbd ,"\u0051");_ecadc :=_dc .Join (_becbd ,"\u000a");_bfdfe .AddContentStreamByString (_ecadc );_bfdfe .ToPdfObject ();
};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fabfa *Image )ColorAt (x ,y int )(_bd .Color ,error ){_gecd :=_eac .BytesPerLine (int (_fabfa .Width ),int (_fabfa .BitsPerComponent ),_fabfa .ColorComponents );switch _fabfa .ColorComponents {case 1:return _eac .ColorAtGrayscale (x ,y ,int (_fabfa .BitsPerComponent ),_gecd ,_fabfa .Data ,_fabfa ._aefacf );
case 3:return _eac .ColorAtNRGBA (x ,y ,int (_fabfa .Width ),_gecd ,int (_fabfa .BitsPerComponent ),_fabfa .Data ,_fabfa ._abdg ,_fabfa ._aefacf );case 4:return _eac .ColorAtCMYK (x ,y ,int (_fabfa .Width ),_fabfa .Data ,_fabfa ._aefacf );};_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fabfa .ColorComponents ,_fabfa .BitsPerComponent );
return nil ,_ad .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_bacd :=&PdfColorspaceDeviceN {};return _bacd };func _dddbea (_edcb _fda .PdfObject ,_gcgea bool )(*PdfFont ,error ){_ffcb ,_abfg ,_efffd :=_geea (_edcb );if _ffcb !=nil {_bgdc (_ffcb );};if _efffd !=nil {if _efffd ==ErrType1CFontNotSupported {_bfbb ,_edgf :=_cgcg (_ffcb ,_abfg ,nil );
if _edgf !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abfg ,_edgf );
return nil ,_efffd ;};return &PdfFont {_fdbb :_bfbb },_efffd ;};return nil ,_efffd ;};_gebb :=&PdfFont {};switch _abfg ._bfgb {case "\u0054\u0079\u0070e\u0030":if !_gcgea {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abfg );
return nil ,_ad .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gead ,_dcda :=_ffaa (_ffcb ,_abfg );if _dcda !=nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abfg ,_dcda );
return nil ,_dcda ;};_gebb ._fdbb =_gead ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _fafeg *pdfFontSimple ;_bgcc ,_bcga :=_ade .NewStdFontByName (_ade .StdFontName (_abfg ._fcdg ));
if _bcga {_cbcbb :=_fdef (_bgcc );_gebb ._fdbb =&_cbcbb ;_bfdbc :=_fda .TraceToDirectObject (_cbcbb .ToPdfObject ());_edfe ,_bebf ,_cbdcc :=_geea (_bfdbc );if _cbdcc !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abfg ,_cbcbb );
return nil ,_cbdcc ;};for _ ,_badag :=range _ffcb .Keys (){_edfe .Set (_badag ,_ffcb .Get (_badag ));};_fafeg ,_cbdcc =_cgcg (_edfe ,_bebf ,_cbcbb ._dgaaa );if _cbdcc !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abfg ,_cbcbb );
return nil ,_cbdcc ;};_fafeg ._ffbd =_cbcbb ._ffbd ;_fafeg ._acfge =_cbcbb ._acfge ;if _fafeg ._gdag ==nil {_fafeg ._gdag =_cbcbb ._gdag ;};}else {_fafeg ,_efffd =_cgcg (_ffcb ,_abfg ,nil );if _efffd !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abfg ,_efffd );
return nil ,_efffd ;};};_efffd =_fafeg .addEncoding ();if _efffd !=nil {return nil ,_efffd ;};if _bcga {_fafeg .updateStandard14Font ();};if _bcga &&_fafeg ._bfbca ==nil &&_fafeg ._dgaaa ==nil {_ga .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fafeg );
_ga .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_bgcc );};if len (_fafeg ._ffbd )==0{_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_fafeg );};_gebb ._fdbb =_fafeg ;
case "\u0054\u0079\u0070e\u0033":_eeedc ,_gbdc :=_edfb (_ffcb ,_abfg );if _gbdc !=nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gbdc );
return nil ,_gbdc ;};_gebb ._fdbb =_eeedc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_dcac ,_bgbdd :=_cdfaa (_ffcb ,_abfg );if _bgbdd !=nil {_ga .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bgbdd );
return nil ,_bgbdd ;};_gebb ._fdbb =_dcac ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_addd ,_debea :=_cbdcd (_ffcb ,_abfg );if _debea !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abfg ,_debea );
return nil ,_debea ;};_gebb ._fdbb =_addd ;default:_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_abfg );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abfg );};return _gebb ,nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_eccc :=NewPdfAnnotation ();_dcdb :=&PdfAnnotationText {};_dcdb .PdfAnnotation =_eccc ;_dcdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eccc .SetContext (_dcdb );return _dcdb ;};

// AddWatermarkImage adds a watermark to the page.
func (_gefg *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_bcfga ,_ddbef :=_gefg .GetMediaBox ();if _ddbef !=nil {return _ddbef ;};_fgedb :=_bcfga .Urx -_bcfga .Llx ;_gagbg :=_bcfga .Ury -_bcfga .Lly ;_cefff :=float64 (*ximg .Width );
_fcgb :=(_fgedb -_cefff )/2;if opt .FitToWidth {_cefff =_fgedb ;_fcgb =0;};_gafbf :=_gagbg ;_cggec :=float64 (0);if opt .PreserveAspectRatio {_gafbf =_cefff *float64 (*ximg .Height )/float64 (*ximg .Width );_cggec =(_gagbg -_gafbf )/2;};if _gefg .Resources ==nil {_gefg .Resources =NewPdfPageResources ();
};_ggeab :=0;_beegg :=_fda .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_ggeab ));for _gefg .Resources .HasXObjectByName (_beegg ){_ggeab ++;_beegg =_fda .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_ggeab ));};_ddbef =_gefg .AddImageResource (_beegg ,ximg );
if _ddbef !=nil {return _ddbef ;};_ggeab =0;_fcdfc :=_fda .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_ggeab ));for _gefg .HasExtGState (_fcdfc ){_ggeab ++;_fcdfc =_fda .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_ggeab ));};_cagff :=_fda .MakeDict ();
_cagff .Set ("\u0042\u004d",_fda .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cagff .Set ("\u0043\u0041",_fda .MakeFloat (opt .Alpha ));_cagff .Set ("\u0063\u0061",_fda .MakeFloat (opt .Alpha ));_ddbef =_gefg .AddExtGState (_fcdfc ,_cagff );if _ddbef !=nil {return _ddbef ;
};_gdagb :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_fcdfc ,_cefff ,_gafbf ,_fcgb ,_cggec ,_beegg );
_gefg .AddContentStreamByString (_gdagb );return nil ;};func _bacb (_gcagfb StdFontName )(pdfFontSimple ,error ){_bcag ,_afaa :=_ade .NewStdFontByName (_gcagfb );if !_afaa {return pdfFontSimple {},ErrFontNotSupported ;};_cdfbb :=_fdef (_bcag );return _cdfbb ,nil ;
};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_fdce :_fda .MakeDict ()};
};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_aeddb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ggfgb ,_fabba :=_fda .GetDict (_aeddb ._ecegfe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_fabba {_ggfgb =_fda .MakeDict ();_aeddb ._ecegfe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ggfgb );
};_fefe ,_fabba :=_fda .GetDict (_ggfgb .Get (_fda .PdfObjectName (extName )));if !_fabba {_fefe =_fda .MakeDict ();_ggfgb .Set (_fda .PdfObjectName (extName ),_fefe );};if _bdfaa ,_ :=_fda .GetNameVal (_fefe .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_bdfaa !=baseVersion {_fefe .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fda .MakeName (baseVersion ));};if _efafg ,_ :=_fda .GetIntVal (_fefe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_efafg !=extLevel {_fefe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fda .MakeInteger (int64 (extLevel )));};};

// ToPdfObject implements interface PdfModel.
func (_bfde *PdfAnnotationSquiggly )ToPdfObject ()_fda .PdfObject {_bfde .PdfAnnotation .ToPdfObject ();_bdaee :=_bfde ._fbb ;_gbdeg :=_bdaee .PdfObject .(*_fda .PdfObjectDictionary );_bfde .PdfAnnotationMarkup .appendToPdfDictionary (_gbdeg );_gbdeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_gbdeg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bfde .QuadPoints );return _bdaee ;};

// ToPdfObject implements interface PdfModel.
func (_ggf *PdfActionTrans )ToPdfObject ()_fda .PdfObject {_ggf .PdfAction .ToPdfObject ();_beac :=_ggf ._ddd ;_fff :=_beac .PdfObject .(*_fda .PdfObjectDictionary );_fff .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeTrans )));_fff .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ggf .Trans );
return _beac ;};

// B returns the value of the B component of the color.
func (_gaeec *PdfColorCalRGB )B ()float64 {return _gaeec [1]};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_eagcd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_cgag ,_ ,_aceb :=_eagcd .CharcodesToUnicodeWithStats (_eagcd .BytesToCharcodes (data ));_geca :=_fd .ExpandLigatures (_cgag );return _geca ,_ae .RuneCountInString (_geca ),_aceb ;
};func (_dddcf *DSS )addOCSPs (_dbcgd [][]byte )([]*_fda .PdfObjectStream ,error ){return _dddcf .add (&_dddcf .OCSPs ,_dddcf ._befc ,_dbcgd );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_addb *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_dcbee *PdfWriter )AddPage (page *PdfPage )error {const _afgfa ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_afdd (page );_fedac :=page .ToPdfObject ();_ga .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ga .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fedac );_dcfab ,_caffd :=_fda .GetIndirect (_fedac );if !_caffd {return _ad .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ga .Log .Trace ("\u0025\u0073",_dcfab );_ga .Log .Trace ("\u0025\u0073",_dcfab .PdfObject );_acga ,_caffd :=_fda .GetDict (_dcfab .PdfObject );if !_caffd {return _ad .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fdbg ,_caffd :=_fda .GetName (_acga .Get ("\u0054\u0079\u0070\u0065"));if !_caffd {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_acga .Get ("\u0054\u0079\u0070\u0065"));
};if _fdbg .String ()!="\u0050\u0061\u0067\u0065"{return _ad .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_aeeec :=[]_fda .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gbcda ,_geeaa :=_fda .GetIndirect (_acga .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ga .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_acga .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_geeaa );
for _geeaa {_ga .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbcda );_ecdbf ,_eegcd :=_fda .GetDict (_gbcda .PdfObject );if !_eegcd {return _ad .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_fegdd :=range _aeeec {_ga .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fegdd );if _acga .Get (_fegdd )!=nil {_ga .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _cddbf :=_ecdbf .Get (_fegdd );_cddbf !=nil {_ga .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fegdd );_acga .Set (_fegdd ,_cddbf );};};_gbcda ,_geeaa =_fda .GetIndirect (_ecdbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ga .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ecdbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ga .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_acga .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcbee ._degfge );_dcfab .PdfObject =_acga ;_efdgfd ,_caffd :=_fda .GetDict (_dcbee ._degfge .PdfObject );if !_caffd {return _ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bacbe ,_caffd :=_fda .GetArray (_efdgfd .Get ("\u004b\u0069\u0064\u0073"));if !_caffd {return _ad .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bacbe .Append (_dcfab );_dcbee ._ggbfc [_acga ]=struct{}{};_dfegf ,_caffd :=_fda .GetInt (_efdgfd .Get ("\u0043\u006f\u0075n\u0074"));if !_caffd {return _ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_dfegf =*_dfegf +1;if page ._ebfda ==nil {_bgbda :=_gf .Track (_dcbee ._bgcae ,_afgfa );if _bgbda !=nil {return _bgbda ;};}else {_aaage :=_gf .Track (page ._ebfda ._ggee ,_afgfa );if _aaage !=nil {return _aaage ;};};_dcbee .addObject (_dcfab );_egfefg :=_dcbee .addObjects (_acga );
if _egfefg !=nil {return _egfefg ;};return nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_egbf *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _egbf ._edbag .GetRevisionNumber ()==0{return nil ,_ad .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fdbfd ,_agca :=_egbf ._dgefb [_egbf ];_agca {return _fdbfd ,nil ;};_caabc ,_bdgaf :=_egbf ._edbag .GetPreviousRevisionReadSeeker ();if _bdgaf !=nil {return nil ,_bdgaf ;};_eedae ,_bdgaf :=_gggfc (_caabc ,_egbf ._bbfdf ,_egbf ._cffea ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _bdgaf !=nil {return nil ,_bdgaf ;};_egbf ._aefea [_egbf ._edbag .GetRevisionNumber ()-1]=_eedae ;_egbf ._dgefb [_egbf ]=_eedae ;_eedae ._dgefb =_egbf ._dgefb ;return _eedae ,nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_fd .SimpleEncoder ,error ){_fbbe ,_gdce :=_bacb (basefont );if _gdce !=nil {return nil ,nil ,_gdce ;};_fgbcc ,_ebbbf :=_fbbe .Encoder ().(_fd .SimpleEncoder );
if !_ebbbf {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_fbbe .Encoder ());
};_edgg :=make (map[rune ]_fd .GlyphName );for _aabb :=range alphabet {if _ ,_eefea :=_fgbcc .RuneToCharcode (_aabb );!_eefea {_ ,_gbgbe :=_fbbe ._acfge .Read (_aabb );if !_gbgbe {_ga .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_aabb ,_aabb );
continue ;};_ecbe ,_gbgbe :=_fd .RuneToGlyph (_aabb );if !_gbgbe {_ga .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_aabb ,_aabb );continue ;};if len (_edgg )>=255{return nil ,nil ,_ad .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_edgg [_aabb ]=_ecbe ;};};var (_cagdc []_fd .CharCode ;_adcb []_fd .CharCode ;);for _egad :=_fd .CharCode (1);_egad <=0xff;_egad ++{_agbe ,_abcb :=_fgbcc .CharcodeToRune (_egad );if !_abcb {_cagdc =append (_cagdc ,_egad );continue ;};if _ ,_abcb =alphabet [_agbe ];
!_abcb {_adcb =append (_adcb ,_egad );};};_fccb :=append (_cagdc ,_adcb ...);if len (_fccb )< len (_edgg ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_edgg ),len (_fccb ));
};_bbef :=make ([]rune ,0,len (_edgg ));for _effef :=range _edgg {_bbef =append (_bbef ,_effef );};_eef .Slice (_bbef ,func (_eggd ,_bfdcc int )bool {return _bbef [_eggd ]< _bbef [_bfdcc ]});_fceg :=make (map[_fd .CharCode ]_fd .GlyphName ,len (_bbef ));
for _ ,_bfaf :=range _bbef {_dgabg :=_fccb [0];_fccb =_fccb [1:];_fceg [_dgabg ]=_edgg [_bfaf ];};_fgbcc =_fd .ApplyDifferences (_fgbcc ,_fceg );_fbbe .SetEncoder (_fgbcc );return &PdfFont {_fdbb :&_fbbe },_fgbcc ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cgbd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ad .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_bdge ,_gdgef :=_eac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abdg ,img ._aefacf );if _gdgef !=nil {return img ,_gdgef ;};_abcf ,_gdgef :=_eac .NRGBAConverter .Convert (_bdge );
if _gdgef !=nil {return img ,_gdgef ;};_cgcf :=_gged (_abcf .Base ());_ga .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ga .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_ga .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cgcf .Data );_ga .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cgcf );return _cgcf ,nil ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_cdggf *PdfInfo )AddCustomInfo (name string ,value string )error {if _cdggf ._dddbe ==nil {_cdggf ._dddbe =_fda .MakeDict ();};if _ ,_aedae :=_gfga [name ];_aedae {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_cdggf ._dddbe .SetIfNotNil (*_fda .MakeName (name ),_fda .MakeString (value ));return nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_gee :=NewPdfAnnotation ();_bbbf :=&PdfAnnotationSound {};_bbbf .PdfAnnotation =_gee ;_bbbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gee .SetContext (_bbbf );return _bbbf ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_ceaf :=&PdfColorspaceLab {};_ceaf .BlackPoint =[]float64 {0.0,0.0,0.0};_ceaf .Range =[]float64 {-100,100,-100,100};return _ceaf ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_add :=NewPdfAction ();_bb :=&PdfActionSound {};_bb .PdfAction =_add ;_add .SetContext (_bb );return _bb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gagc pdfFontType0 )GetRuneMetrics (r rune )(_ade .CharMetrics ,bool ){if _gagc .DescendantFont ==nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gagc );
return _ade .CharMetrics {},false ;};return _gagc .DescendantFont .GetRuneMetrics (r );};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gbafa *PdfFont )BytesToCharcodes (data []byte )[]_fd .CharCode {_ga .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _dgeca ,_bgcgg :=_gbafa ._fdbb .(*pdfFontType0 );_bgcgg &&_dgeca ._bcebb !=nil {if _aegb ,_bcbg :=_dgeca .bytesToCharcodes (data );_bcbg {return _aegb ;};};var (_eaaab =make ([]_fd .CharCode ,0,len (data )+len (data )%2);_fedce =_gbafa .baseFields ();
);if _fedce ._gaega !=nil {if _adac ,_afbc :=_fedce ._gaega .BytesToCharcodes (data );_afbc {for _ ,_gagac :=range _adac {_eaaab =append (_eaaab ,_fd .CharCode (_gagac ));};return _eaaab ;};};if _fedce .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _cface :=0;_cface < len (data );_cface +=2{_eeba :=uint16 (data [_cface ])<<8|uint16 (data [_cface +1]);_eaaab =append (_eaaab ,_fd .CharCode (_eeba ));};}else {for _ ,_ebae :=range data {_eaaab =append (_eaaab ,_fd .CharCode (_ebae ));
};};return _eaaab ;};func (_gbedb *pdfFontType0 )subsetRegistered ()error {_fdagg ,_aaad :=_gbedb .DescendantFont ._fdbb .(*pdfCIDFontType2 );if !_aaad {_ga .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gbedb .DescendantFont );
return nil ;};if _fdagg ==nil {return nil ;};if _fdagg ._defd ==nil {_ga .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gbedb ._bcgee ==nil {_ga .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_ffag ,_aaad :=_fda .GetStream (_fdagg ._defd .FontFile2 );if !_aaad {_ga .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ad .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_geccb ,_eabc :=_fda .DecodeStream (_ffag );if _eabc !=nil {_ga .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eabc );
return _eabc ;};_aaccf ,_eabc :=_da .Parse (_dcc .NewReader (_geccb ));if _eabc !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_ffag .Stream ));
return _eabc ;};var _eebf []rune ;var _aeegb *_da .Font ;switch _abbgf :=_gbedb ._bcgee .(type ){case *_fd .TrueTypeFontEncoder :_eebf =_abbgf .RegisteredRunes ();_aeegb ,_eabc =_aaccf .SubsetKeepRunes (_eebf );if _eabc !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabc );
return _eabc ;};_abbgf .SubsetRegistered ();case *_fd .IdentityEncoder :_eebf =_abbgf .RegisteredRunes ();_efbad :=make ([]_da .GlyphIndex ,len (_eebf ));for _bdacb ,_cbfg :=range _eebf {_efbad [_bdacb ]=_da .GlyphIndex (_cbfg );};_aeegb ,_eabc =_aaccf .SubsetKeepIndices (_efbad );
if _eabc !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabc );return _eabc ;};case _fd .SimpleEncoder :_cbdac :=_abbgf .Charcodes ();for _ ,_gbbfc :=range _cbdac {_gbcb ,_adcde :=_abbgf .CharcodeToRune (_gbbfc );if !_adcde {_ga .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_gbbfc );
continue ;};_eebf =append (_eebf ,_gbcb );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gbedb ._bcgee );
};var _ddff _dcc .Buffer ;_eabc =_aeegb .Write (&_ddff );if _eabc !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabc );return _eabc ;};if _gbedb ._gaega !=nil {_fbaee :=make (map[_bg .CharCode ]rune ,len (_eebf ));for _ ,_acfce :=range _eebf {_gbfa ,_affba :=_gbedb ._bcgee .RuneToCharcode (_acfce );
if !_affba {continue ;};_fbaee [_bg .CharCode (_gbfa )]=_acfce ;};_gbedb ._gaega =_bg .NewToUnicodeCMap (_fbaee );};_ffag ,_eabc =_fda .MakeStream (_ddff .Bytes (),_fda .NewFlateEncoder ());if _eabc !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabc );
return _eabc ;};_ffag .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fda .MakeInteger (int64 (_ddff .Len ())));if _efgefa ,_fgge :=_fda .GetStream (_fdagg ._defd .FontFile2 );_fgge {*_efgefa =*_ffag ;}else {_fdagg ._defd .FontFile2 =_ffag ;};_babbde :=_aeed ();
if len (_gbedb ._fcdg )> 0{_gbedb ._fcdg =_afga (_gbedb ._fcdg ,_babbde );};if len (_fdagg ._fcdg )> 0{_fdagg ._fcdg =_afga (_fdagg ._fcdg ,_babbde );};if len (_gbedb ._egde )> 0{_gbedb ._egde =_afga (_gbedb ._egde ,_babbde );};if _fdagg ._defd !=nil {_egddd ,_gdff :=_fda .GetName (_fdagg ._defd .FontName );
if _gdff &&len (_egddd .String ())> 0{_gadc :=_afga (_egddd .String (),_babbde );_fdagg ._defd .FontName =_fda .MakeName (_gadc );};};return nil ;};func (_fffb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _fffb ._edbag .GetCrypter ()!=nil &&!_fffb ._edbag .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bccdg :=_fffb ._debca ;_efeec :=_bccdg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _efeec ==nil {return nil ,nil ;};_ga .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_cdcf :=_fda .ResolveReference (_efeec );
_ga .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_cdcf );if _gacc :=_fda .IsNullObject (_cdcf );_gacc {_ga .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_bfbab ,_feddc :=_cdcf .(*_fda .PdfIndirectObject );if !_feddc {if _ ,_afacd :=_fda .GetDict (_cdcf );!_afacd {_ga .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ga .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_bfbab =_fda .MakeIndirectObject (_cdcf );};_faecf ,_feddc :=_bfbab .PdfObject .(*_fda .PdfObjectDictionary );if !_feddc {return nil ,_ad .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ga .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_faecf );_fgcc ,_ ,_bfac :=_fffb .buildOutlineTree (_bfbab ,nil ,nil ,nil );if _bfac !=nil {return nil ,_bfac ;};_ga .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_fgcc );
return _fgcc ,nil ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);type modelManager struct{_cagg map[PdfModel ]_fda .PdfObject ;_bcgfg map[_fda .PdfObject ]PdfModel ;};func (_fdeg *PdfReader )newPdfAnnotationPopupFromDict (_gfag *_fda .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_cfac :=PdfAnnotationPopup {};
_cfac .Parent =_gfag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cfac .Open =_gfag .Get ("\u004f\u0070\u0065\u006e");return &_cfac ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_ccbag :=&PdfAppender {_caee :reader ._ccefe ,Reader :reader ,_adca :reader ._edbag ,_debb :reader ._fbca };_bfdd ,_gaff :=_ccbag ._caee .Seek (0,_ed .SeekEnd );if _gaff !=nil {return nil ,_gaff ;
};_ccbag ._ccbed =_bfdd ;if _ ,_gaff =_ccbag ._caee .Seek (0,_ed .SeekStart );_gaff !=nil {return nil ,_gaff ;};_ccbag ._beg ,_gaff =NewPdfReader (_ccbag ._caee );if _gaff !=nil {return nil ,_gaff ;};for _ ,_feaa :=range _ccbag .Reader .GetObjectNums (){if _ccbag ._ccgf < _feaa {_ccbag ._ccgf =_feaa ;
};};_ccbag ._cbcg =_ccbag ._adca .GetXrefTable ();_ccbag ._fffe =_ccbag ._adca .GetXrefOffset ();_ccbag ._dgaa =append (_ccbag ._dgaa ,_ccbag ._beg .PageList ...);_ccbag ._ged =make (map[_fda .PdfObject ]struct{});_ccbag ._deecf =make (map[_fda .PdfObject ]int64 );
_ccbag ._fagc =make (map[_fda .PdfObject ]struct{});_ccbag ._ecca =_ccbag ._beg .AcroForm ;_ccbag ._dggf =_ccbag ._beg .DSS ;return _ccbag ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_fdcg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fdcg .AlternateSpace ==nil {return nil ,_ad .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _fdcg .AlternateSpace .ColorToRGB (color );};

// Mask returns the uin32 bitmask for the specific flag.
func (_bfae FieldFlag )Mask ()uint32 {return uint32 (_bfae )};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_eaa :=NewPdfAction ();_daa :=&PdfActionSetOCGState {};_daa .PdfAction =_eaa ;_eaa .SetContext (_daa );return _daa ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fadg _fda .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bdea *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if _bdea .Alternate ==nil {if _bdea .N ==1{_bbda :=NewPdfColorspaceDeviceGray ();return _bbda .ColorFromPdfObjects (objects );}else if _bdea .N ==3{_ggfce :=NewPdfColorspaceDeviceRGB ();
return _ggfce .ColorFromPdfObjects (objects );}else if _bdea .N ==4{_fgfc :=NewPdfColorspaceDeviceCMYK ();return _fgfc .ColorFromPdfObjects (objects );}else {return nil ,_ad .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bdea .Alternate .ColorFromPdfObjects (objects );};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_dcdef *PdfWriter )SetNamedDestinations (dests _fda .PdfObject )error {if dests ==nil {return nil ;};_ga .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_dcdef ._ecegfe .Set ("\u0044\u0065\u0073t\u0073",dests );return _dcdef .addObjects (dests );};func _bfef (_fgbgf *PdfField )[]*PdfField {_ddbd :=[]*PdfField {_fgbgf };for _ ,_eedb :=range _fgbgf .Kids {_ddbd =append (_ddbd ,_bfef (_eedb )...);};return _ddbd ;
};

// ToPdfObject implements interface PdfModel.
func (_ffb *PdfAnnotationProjection )ToPdfObject ()_fda .PdfObject {_ffb .PdfAnnotation .ToPdfObject ();_afaf :=_ffb ._fbb ;_fdad :=_afaf .PdfObject .(*_fda .PdfObjectDictionary );_ffb .PdfAnnotationMarkup .appendToPdfDictionary (_fdad );return _afaf ;
};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_feed *PdfFieldButton )IsPush ()bool {return _feed .GetType ()==ButtonTypePush };

// SetContext sets the sub annotation (context).
func (_bdad *PdfAnnotation )SetContext (ctx PdfModel ){_bdad ._egca =ctx };

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_bgef *PdfAppender )SetDocInfo (info *PdfInfo ){_bgef ._egfe =info };func (_adeeec *PdfWriter )setHashIDs (_acdca _ef .Hash )error {_adae :=_acdca .Sum (nil );if _adeeec ._cdad ==""{_adeeec ._cdad =_g .EncodeToString (_adae [:8]);};_adeeec .setDocumentIDs (_adeeec ._cdad ,_g .EncodeToString (_adae [8:]));
return nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_cfgfg :=PdfColorCalRGB {a ,b ,c };return &_cfgfg ;};

// GetXObjectByName gets XObject by name.
func (_dfde *PdfPage )GetXObjectByName (name _fda .PdfObjectName )(_fda .PdfObject ,bool ){_affg ,_ggca :=_dfde .Resources .XObject .(*_fda .PdfObjectDictionary );if !_ggca {return nil ,false ;};if _bgggc :=_affg .Get (name );_bgggc !=nil {return _bgggc ,true ;
};return nil ,false ;};func (_fffeb *LTV )validateSig (_bdga *PdfSignature )error {if _bdga ==nil ||_bdga .Contents ==nil ||len (_bdga .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_bdga );
};return nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_daac :=NewPdfAnnotation ();_dbf :=&PdfAnnotationRedact {};_dbf .PdfAnnotation =_daac ;_dbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daac .SetContext (_dbf );return _dbf ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_fdce :_fda .MakeDict (),ColorComponents :colorComponents };
};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_afcgc *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ad .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_abca ,_fgae :=_eac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abdg ,img ._aefacf );if _fgae !=nil {return img ,_fgae ;};_cbfea ,_fgae :=_eac .GrayConverter .Convert (_abca );if _fgae !=nil {return img ,_fgae ;
};return _gged (_cbfea .Base ()),nil ;};func (_dbefg *PdfWriter )setCatalogVersion (){_dbefg ._ecegfe .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fda .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_dbefg ._ccgad .Major ,_dbefg ._ccgad .Minor )));
};

// C returns the value of the C component of the color.
func (_eefe *PdfColorCalRGB )C ()float64 {return _eefe [2]};

// String returns a string describing the font descriptor.
func (_efbac *PdfFontDescriptor )String ()string {var _gcdgg []string ;if _efbac .FontName !=nil {_gcdgg =append (_gcdgg ,_efbac .FontName .String ());};if _efbac .FontFamily !=nil {_gcdgg =append (_gcdgg ,_efbac .FontFamily .String ());};if _efbac .fontFile !=nil {_gcdgg =append (_gcdgg ,_efbac .fontFile .String ());
};if _efbac ._dfceg !=nil {_gcdgg =append (_gcdgg ,_efbac ._dfceg .String ());};_gcdgg =append (_gcdgg ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_efbac .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_dc .Join (_gcdgg ,"\u002c\u0020"));
};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_edga ,_dfece :=_ac .Open (filePath );if _dfece !=nil {_ga .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dfece );
return nil ,_dfece ;};defer _edga .Close ();return NewCompositePdfFontFromTTF (_edga );};func (_gbcae *PdfReader )newPdfSignatureReferenceFromDict (_ecbg *_fda .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _beeed ,_gfage :=_gbcae ._bbgee .GetModelFromPrimitive (_ecbg ).(*PdfSignatureReference );
_gfage {return _beeed ,nil ;};_afcea :=&PdfSignatureReference {_dagcd :_ecbg ,Data :_ecbg .Get ("\u0044\u0061\u0074\u0061")};var _cbdeb bool ;_afcea .Type ,_ =_fda .GetName (_ecbg .Get ("\u0054\u0079\u0070\u0065"));_afcea .TransformMethod ,_cbdeb =_fda .GetName (_ecbg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_cbdeb {_ga .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_afcea .TransformParams ,_ =_fda .GetDict (_ecbg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_afcea .DigestMethod ,_ =_fda .GetName (_ecbg .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _afcea ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_egfdb *PdfAcroForm )GetContainingPdfObject ()_fda .PdfObject {return _egfdb ._gcddg };

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_gcfcd *PdfPage )GetRotate ()(int64 ,error ){if _gcfcd .Rotate !=nil {return *_gcfcd .Rotate ,nil ;};_dbebb :=_gcfcd .Parent ;for _dbebb !=nil {_cgcae ,_bdcbe :=_fda .GetDict (_dbebb );if !_bdcbe {return 0,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fgdf :=_cgcae .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fgdf !=nil {_bfcb ,_ggfb :=_fda .GetInt (_fgdf );if !_ggfb {return 0,_ad .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _bfcb !=nil {return int64 (*_bfcb ),nil ;
};return 0,_ad .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dbebb =_cgcae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ad .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};func _gbdf (_gbcbe *_fda .PdfObjectStream )(*PdfFunctionType4 ,error ){_ffbc :=&PdfFunctionType4 {};_ffbc ._daffg =_gbcbe ;_fdfa :=_gbcbe .PdfObjectDictionary ;_fdab ,_dbce :=_fda .TraceToDirectObject (_fdfa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fda .PdfObjectArray );
if !_dbce {_ga .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fdab .Len ()%2!=0{_ga .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ad .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ddgdf ,_edgff :=_fdab .ToFloat64Array ();
if _edgff !=nil {return nil ,_edgff ;};_ffbc .Domain =_ddgdf ;_fdab ,_dbce =_fda .TraceToDirectObject (_fdfa .Get ("\u0052\u0061\u006eg\u0065")).(*_fda .PdfObjectArray );if _dbce {if _fdab .Len ()< 0||_fdab .Len ()%2!=0{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_aggge ,_cefbe :=_fdab .ToFloat64Array ();if _cefbe !=nil {return nil ,_cefbe ;};_ffbc .Range =_aggge ;};_acbe ,_edgff :=_fda .DecodeStream (_gbcbe );if _edgff !=nil {return nil ,_edgff ;};_ffbc ._faef =_acbe ;_aedgd :=_gaf .NewPSParser (_acbe );_adeef ,_edgff :=_aedgd .Parse ();
if _edgff !=nil {return nil ,_edgff ;};_ffbc .Program =_adeef ;return _ffbc ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gafbe *PdfFont )ToUnicode ()string {if _gafbe .baseFields ()._gaega ==nil {return "";};return _gafbe .baseFields ()._gaega .Name ();};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ddga *PdfColorspaceLab )ToPdfObject ()_fda .PdfObject {_cfag :=_fda .MakeArray ();_cfag .Append (_fda .MakeName ("\u004c\u0061\u0062"));_deeea :=_fda .MakeDict ();if _ddga .WhitePoint !=nil {_gfbf :=_fda .MakeArray (_fda .MakeFloat (_ddga .WhitePoint [0]),_fda .MakeFloat (_ddga .WhitePoint [1]),_fda .MakeFloat (_ddga .WhitePoint [2]));
_deeea .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gfbf );}else {_ga .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _ddga .BlackPoint !=nil {_fafd :=_fda .MakeArray (_fda .MakeFloat (_ddga .BlackPoint [0]),_fda .MakeFloat (_ddga .BlackPoint [1]),_fda .MakeFloat (_ddga .BlackPoint [2]));_deeea .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fafd );
};if _ddga .Range !=nil {_bebdb :=_fda .MakeArray (_fda .MakeFloat (_ddga .Range [0]),_fda .MakeFloat (_ddga .Range [1]),_fda .MakeFloat (_ddga .Range [2]),_fda .MakeFloat (_ddga .Range [3]));_deeea .Set ("\u0052\u0061\u006eg\u0065",_bebdb );};_cfag .Append (_deeea );
if _ddga ._gdba !=nil {_ddga ._gdba .PdfObject =_cfag ;return _ddga ._gdba ;};return _cfag ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gaf .PSProgram ;_daaf *_gaf .PSExecutor ;_faef []byte ;_daffg *_fda .PdfObjectStream ;};

// CustomKeys returns all custom info keys as list.
func (_dgece *PdfInfo )CustomKeys ()[]string {if _dgece ._dddbe ==nil {return nil ;};_bacdc :=make ([]string ,len (_dgece ._dddbe .Keys ()));for _ ,_ddag :=range _dgece ._dddbe .Keys (){_bacdc =append (_bacdc ,_ddag .String ());};return _bacdc ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_acgdc *PdfInfo )GetCustomInfo (name string )*_fda .PdfObjectString {var _gbaf *_fda .PdfObjectString ;if _acgdc ._dddbe ==nil {return _gbaf ;};if _cfbd ,_fgbg :=_acgdc ._dddbe .Get (*_fda .MakeName (name )).(*_fda .PdfObjectString );_fgbg {_gbaf =_cfbd ;
};return _gbaf ;};func (_cccf *PdfReader )newPdfAnnotationTrapNetFromDict (_fdgg *_fda .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_adef :=PdfAnnotationTrapNet {};return &_adef ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_edde *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _edde .Alternate ==nil {_ga .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _edde .N ==1{_ga .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bcfd :=NewPdfColorspaceDeviceGray ();return _bcfd .ImageToRGB (img );}else if _edde .N ==3{_ga .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _edde .N ==4{_ga .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_agfe :=NewPdfColorspaceDeviceCMYK ();return _agfe .ImageToRGB (img );}else {return img ,_ad .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ga .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_edde );
_degg ,_cgcfg :=_edde .Alternate .ImageToRGB (img );_ga .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ga .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_degg );
return _degg ,_cgcfg ;};

// ToPdfObject implements interface PdfModel.
func (_bdfa *PdfAnnotationLine )ToPdfObject ()_fda .PdfObject {_bdfa .PdfAnnotation .ToPdfObject ();_aecfd :=_bdfa ._fbb ;_cgc :=_aecfd .PdfObject .(*_fda .PdfObjectDictionary );_bdfa .PdfAnnotationMarkup .appendToPdfDictionary (_cgc );_cgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u004c\u0069\u006e\u0065"));
_cgc .SetIfNotNil ("\u004c",_bdfa .L );_cgc .SetIfNotNil ("\u0042\u0053",_bdfa .BS );_cgc .SetIfNotNil ("\u004c\u0045",_bdfa .LE );_cgc .SetIfNotNil ("\u0049\u0043",_bdfa .IC );_cgc .SetIfNotNil ("\u004c\u004c",_bdfa .LL );_cgc .SetIfNotNil ("\u004c\u004c\u0045",_bdfa .LLE );
_cgc .SetIfNotNil ("\u0043\u0061\u0070",_bdfa .Cap );_cgc .SetIfNotNil ("\u0049\u0054",_bdfa .IT );_cgc .SetIfNotNil ("\u004c\u004c\u004f",_bdfa .LLO );_cgc .SetIfNotNil ("\u0043\u0050",_bdfa .CP );_cgc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bdfa .Measure );
_cgc .SetIfNotNil ("\u0043\u004f",_bdfa .CO );return _aecfd ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_befcg *Image )SetSamples (samples []uint32 ){if _befcg .BitsPerComponent < 8{samples =_befcg .samplesAddPadding (samples );};_gcaf :=_cbc .ResampleUint32 (samples ,int (_befcg .BitsPerComponent ),8);_gefcb :=make ([]byte ,len (_gcaf ));for _bgfb ,_egccg :=range _gcaf {_gefcb [_bgfb ]=byte (_egccg );
};_befcg .Data =_gefcb ;};

// ToPdfObject implements interface PdfModel.
func (_agdc *PdfAnnotationWidget )ToPdfObject ()_fda .PdfObject {_agdc .PdfAnnotation .ToPdfObject ();_afag :=_agdc ._fbb ;_ffdd :=_afag .PdfObject .(*_fda .PdfObjectDictionary );if _agdc ._gaag {return _afag ;};_agdc ._gaag =true ;_ffdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_ffdd .SetIfNotNil ("\u0048",_agdc .H );_ffdd .SetIfNotNil ("\u004d\u004b",_agdc .MK );_ffdd .SetIfNotNil ("\u0041",_agdc .A );_ffdd .SetIfNotNil ("\u0041\u0041",_agdc .AA );_ffdd .SetIfNotNil ("\u0042\u0053",_agdc .BS );_bcdg :=_agdc .Parent ;if _agdc ._bee !=nil {if _agdc ._bee ._dccfd ==_agdc ._fbb {_agdc ._bee .ToPdfObject ();
};_bcdg =_agdc ._bee .GetContainingPdfObject ();};if _bcdg !=_afag {_ffdd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bcdg );};_agdc ._gaag =false ;return _afag ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_dbdgd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_dggfff *PdfOutlineTreeNode )GetContainingPdfObject ()_fda .PdfObject {return _dggfff .GetContext ().GetContainingPdfObject ();};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ceag *pdfCIDFontType0 )ToPdfObject ()_fda .PdfObject {return _fda .MakeNull ()};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fda .PdfObject ;NewWindow _fda .PdfObject ;};func (_cbeed *PdfReader )newPdfSignatureFromIndirect (_fccbe *_fda .PdfIndirectObject )(*PdfSignature ,error ){_ccafe ,_cfffa :=_fccbe .PdfObject .(*_fda .PdfObjectDictionary );
if !_cfffa {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _ggbgf ,_eaege :=_cbeed ._bbgee .GetModelFromPrimitive (_fccbe ).(*PdfSignature );_eaege {return _ggbgf ,nil ;};_aefgd :=&PdfSignature {};_aefgd ._agcfe =_fccbe ;_aefgd .Type ,_ =_fda .GetName (_ccafe .Get ("\u0054\u0079\u0070\u0065"));
_aefgd .Filter ,_cfffa =_fda .GetName (_ccafe .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cfffa {_ga .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_aefgd .SubFilter ,_ =_fda .GetName (_ccafe .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_aefgd .Contents ,_cfffa =_fda .GetString (_ccafe .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cfffa {_ga .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _acacg ,_gdbdec :=_fda .GetArray (_ccafe .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_gdbdec {_aefgd .Reference =_fda .MakeArray ();for _ ,_acage :=range _acacg .Elements (){_fadb ,_ccdcg :=_fda .GetDict (_acage );
if !_ccdcg {_ga .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_cacf ,_bgfbe :=_cbeed .newPdfSignatureReferenceFromDict (_fadb );if _bgfbe !=nil {return nil ,_bgfbe ;};_aefgd .Reference .Append (_cacf .ToPdfObject ());};};_aefgd .Cert =_ccafe .Get ("\u0043\u0065\u0072\u0074");_aefgd .ByteRange ,_ =_fda .GetArray (_ccafe .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_aefgd .Changes ,_ =_fda .GetArray (_ccafe .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_aefgd .Name ,_ =_fda .GetString (_ccafe .Get ("\u004e\u0061\u006d\u0065"));_aefgd .M ,_ =_fda .GetString (_ccafe .Get ("\u004d"));_aefgd .Location ,_ =_fda .GetString (_ccafe .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_aefgd .Reason ,_ =_fda .GetString (_ccafe .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_aefgd .ContactInfo ,_ =_fda .GetString (_ccafe .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_aefgd .R ,_ =_fda .GetInt (_ccafe .Get ("\u0052"));
_aefgd .V ,_ =_fda .GetInt (_ccafe .Get ("\u0056"));_aefgd .PropBuild ,_ =_fda .GetDict (_ccafe .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_aefgd .PropAuthTime ,_ =_fda .GetInt (_ccafe .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_aefgd .PropAuthType ,_ =_fda .GetName (_ccafe .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_cbeed ._bbgee .Register (_fccbe ,_aefgd );return _aefgd ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fda .StreamEncoder ;FormType _fda .PdfObject ;BBox _fda .PdfObject ;Matrix _fda .PdfObject ;Resources *PdfPageResources ;Group _fda .PdfObject ;Ref _fda .PdfObject ;MetaData _fda .PdfObject ;PieceInfo _fda .PdfObject ;LastModified _fda .PdfObject ;
StructParent _fda .PdfObject ;StructParents _fda .PdfObject ;OPI _fda .PdfObject ;OC _fda .PdfObject ;Name _fda .PdfObject ;

// Stream data.
Stream []byte ;_adacca *_fda .PdfObjectStream ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func (_gfeb *PdfAppender )replaceObject (_ccff ,_fdcf _fda .PdfObject ){switch _gaee :=_ccff .(type ){case *_fda .PdfIndirectObject :_gfeb ._deecf [_fdcf ]=_gaee .ObjectNumber ;
case *_fda .PdfObjectStream :_gfeb ._deecf [_fdcf ]=_gaee .ObjectNumber ;};};var ErrColorOutOfRange =_ad .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ed .ReadSeeker )(*PdfFont ,error ){_gedee ,_gfda :=_a .ReadAll (r );if _gfda !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gfda );
return nil ,_gfda ;};_cbea ,_gfda :=_ade .TtfParse (_dcc .NewReader (_gedee ));if _gfda !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gfda );
return nil ,_gfda ;};_dbafb :=&pdfCIDFontType2 {fontCommon :fontCommon {_bfgb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fda .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_cbea .Widths )<=0{return nil ,_ad .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bcabc :=1000.0/float64 (_cbea .UnitsPerEm );_cebcg :=_bcabc *float64 (_cbea .Widths [0]);_cbfc :=make (map[rune ]int );_fgba :=make (map[_ade .GID ]int );_efgd :=_ade .GID (len (_cbea .Widths ));for _feec ,_ggeaf :=range _cbea .Chars {if _ggeaf > _efgd -1{continue ;
};_egcc :=int (_bcabc *float64 (_cbea .Widths [_ggeaf ]));_cbfc [_feec ]=_egcc ;_fgba [_ggeaf ]=_egcc ;};_dbafb ._bcaea =_cbfc ;_dbafb .DW =_fda .MakeInteger (int64 (_cebcg ));_eddbf :=_ffddb (_fgba ,uint16 (_efgd ));_dbafb .W =_fda .MakeIndirectObject (_eddbf );
_bfeec :=_fda .MakeDict ();_bfeec .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fda .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_bfeec .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fda .MakeString ("\u0041\u0064\u006fb\u0065"));
_bfeec .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fda .MakeInteger (0));_dbafb .CIDSystemInfo =_bfeec ;_fgfa :=&PdfFontDescriptor {FontName :_fda .MakeName (_cbea .PostScriptName ),Ascent :_fda .MakeFloat (_bcabc *float64 (_cbea .TypoAscender )),Descent :_fda .MakeFloat (_bcabc *float64 (_cbea .TypoDescender )),CapHeight :_fda .MakeFloat (_bcabc *float64 (_cbea .CapHeight )),FontBBox :_fda .MakeArrayFromFloats ([]float64 {_bcabc *float64 (_cbea .Xmin ),_bcabc *float64 (_cbea .Ymin ),_bcabc *float64 (_cbea .Xmax ),_bcabc *float64 (_cbea .Ymax )}),ItalicAngle :_fda .MakeFloat (_cbea .ItalicAngle ),MissingWidth :_fda .MakeFloat (_cebcg )};
_ffgca ,_gfda :=_fda .MakeStream (_gedee ,_fda .NewFlateEncoder ());if _gfda !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gfda );
return nil ,_gfda ;};_ffgca .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fda .MakeInteger (int64 (len (_gedee ))));_fgfa .FontFile2 =_ffgca ;if _cbea .Bold {_fgfa .StemV =_fda .MakeInteger (120);}else {_fgfa .StemV =_fda .MakeInteger (70);
};_ffeb :=_efaf ;if _cbea .IsFixedPitch {_ffeb |=_ggdgf ;};if _cbea .ItalicAngle !=0{_ffeb |=_aabad ;};_fgfa .Flags =_fda .MakeInteger (int64 (_ffeb ));_dbafb ._fcdg =_cbea .PostScriptName ;_dbafb ._defd =_fgfa ;_aeceg :=pdfFontType0 {fontCommon :fontCommon {_bfgb :"\u0054\u0079\u0070e\u0030",_fcdg :_cbea .PostScriptName },DescendantFont :&PdfFont {_fdbb :_dbafb },Encoding :_fda .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bcgee :_cbea .NewEncoder ()};
if len (_cbea .Chars )> 0{_aaec :=make (map[_bg .CharCode ]rune ,len (_cbea .Chars ));for _adged ,_bfbbb :=range _cbea .Chars {_fcag :=_bg .CharCode (_bfbbb );if _gfbfc ,_eegb :=_aaec [_fcag ];!_eegb ||(_eegb &&_gfbfc > _adged ){_aaec [_fcag ]=_adged ;
};};_aeceg ._gaega =_bg .NewToUnicodeCMap (_aaec );};_fgecee :=PdfFont {_fdbb :&_aeceg };return &_fgecee ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fda .PdfObjectStream ;OCSP []*_fda .PdfObjectStream ;CRL []*_fda .PdfObjectStream ;TU *_fda .PdfObjectString ;TS *_fda .PdfObjectString ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fda .PdfObjectName ;Colorants _fda .PdfObject ;Process _fda .PdfObject ;MixingHints _fda .PdfObject ;_bbcdg *_fda .PdfIndirectObject ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_acbf *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _acbf .AlternateSpace ==nil {return nil ,_ad .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _acbf .AlternateSpace .ColorToRGB (color );};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ebge *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ebge .updateObjectsDeep (dss .ToPdfObject (),nil );};_ebge ._dggf =dss ;};func (_abafc *PdfAcroForm )fillImageWithAppearance (_cfgd FieldImageProvider ,_daca FieldAppearanceGenerator )error {if _abafc ==nil {return nil ;
};_fafg ,_bdeb :=_cfgd .FieldImageValues ();if _bdeb !=nil {return _bdeb ;};for _ ,_cgcaa :=range _abafc .AllFields (){_dfcb :=_cgcaa .PartialName ();_cgaea ,_facd :=_fafg [_dfcb ];if !_facd {if _gffc ,_bbce :=_cgcaa .FullName ();_bbce ==nil {_cgaea ,_facd =_fafg [_gffc ];
};};if !_facd {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_dfcb );
continue ;};switch _ffafg :=_cgcaa .GetContext ().(type ){case *PdfFieldButton :if _ffafg .IsPush (){_ffafg .SetFillImage (_cgaea );};};if _daca ==nil {continue ;};for _ ,_dcefg :=range _cgcaa .Annotations {_fgfed ,_ebfg :=_daca .GenerateAppearanceDict (_abafc ,_cgcaa ,_dcefg );
if _ebfg !=nil {return _ebfg ;};_dcefg .AP =_fgfed ;_dcefg .ToPdfObject ();};};return nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_bfbbe *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _cffggg []_fd .TextEncoder ;var _ggbe _fd .CMapEncoder ;if _fggd :=_bfbbe .baseFields ()._gaega ;_fggd !=nil {_ggbe =_fd .NewCMapEncoder ("",nil ,_fggd );};_edcab :=_bfbbe .Encoder ();
if _edcab !=nil {switch _cgca :=_edcab .(type ){case _fd .SimpleEncoder :_ceacf :=_cgca .BaseName ();if _ ,_adcgf :=_fdca [_ceacf ];_adcgf {_cffggg =append (_cffggg ,_edcab );};};};if len (_cffggg )==0{if _bfbbe .baseFields ()._gaega !=nil {_cffggg =append (_cffggg ,_ggbe );
};if _edcab !=nil {_cffggg =append (_cffggg ,_edcab );};};var _ffea _dcc .Buffer ;var _dadea int ;for _ ,_cgae :=range data {var _gceg bool ;for _ ,_aacgc :=range _cffggg {if _agde :=_aacgc .Encode (string (_cgae ));len (_agde )> 0{_ffea .Write (_agde );
_gceg =true ;break ;};};if !_gceg {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cgae );
_dadea ++;};};if _dadea !=0{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dadea ,_bfbbe ,_cffggg );
};return _ffea .Bytes (),_dadea ;};func (_dfae *PdfReader )loadAnnotations (_aadff _fda .PdfObject )([]*PdfAnnotation ,error ){_gdcdg ,_caead :=_fda .GetArray (_aadff );if !_caead {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _fbee []*PdfAnnotation ;for _ ,_bdgcc :=range _gdcdg .Elements (){_bdgcc =_fda .ResolveReference (_bdgcc );if _ ,_afcgd :=_bdgcc .(*_fda .PdfObjectNull );_afcgd {continue ;};_cggcg ,_edfgd :=_bdgcc .(*_fda .PdfObjectDictionary );_beacd ,_fbeda :=_bdgcc .(*_fda .PdfIndirectObject );
if _edfgd {_beacd =&_fda .PdfIndirectObject {};_beacd .PdfObject =_cggcg ;}else {if !_fbeda {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_adefcc ,_acdd :=_dfae .newPdfAnnotationFromIndirectObject (_beacd );if _acdd !=nil {return nil ,_acdd ;};switch _ecffa :=_adefcc .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gbeedf :=range _dfae .AcroForm .AllFields (){if _gbeedf ._dccfd ==_ecffa .Parent {_ecffa ._bee =_gbeedf ;
break ;};};};if _adefcc !=nil {_fbee =append (_fbee ,_adefcc );};};return _fbee ,nil ;};func _ddgc (_bgde *_fda .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gfdac :=PdfShadingType4 {};_bcafd :=_bgde .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bcafd ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bgbaad ,_cedgc :=_bcafd .(*_fda .PdfObjectInteger );if !_cedgc {_ga .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcafd );
return nil ,_fda .ErrTypeError ;};_gfdac .BitsPerCoordinate =_bgbaad ;_bcafd =_bgde .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bcafd ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bgbaad ,_cedgc =_bcafd .(*_fda .PdfObjectInteger );if !_cedgc {_ga .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bcafd );
return nil ,_fda .ErrTypeError ;};_gfdac .BitsPerComponent =_bgbaad ;_bcafd =_bgde .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bcafd ==nil {_ga .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bgbaad ,_cedgc =_bcafd .(*_fda .PdfObjectInteger );if !_cedgc {_ga .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bcafd );
return nil ,_fda .ErrTypeError ;};_gfdac .BitsPerComponent =_bgbaad ;_bcafd =_bgde .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bcafd ==nil {_ga .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdbdg ,_cedgc :=_bcafd .(*_fda .PdfObjectArray );if !_cedgc {_ga .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcafd );
return nil ,_fda .ErrTypeError ;};_gfdac .Decode =_bdbdg ;_bcafd =_bgde .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bcafd ==nil {_ga .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gfdac .Function =[]PdfFunction {};if _gcagfa ,_dbcb :=_bcafd .(*_fda .PdfObjectArray );_dbcb {for _ ,_bffcaf :=range _gcagfa .Elements (){_fcaa ,_ggbgg :=_agbac (_bffcaf );if _ggbgg !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggbgg );
return nil ,_ggbgg ;};_gfdac .Function =append (_gfdac .Function ,_fcaa );};}else {_acab ,_edgac :=_agbac (_bcafd );if _edgac !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edgac );
return nil ,_edgac ;};_gfdac .Function =append (_gfdac .Function ,_acab );};return &_gfdac ,nil ;};type pdfFontType0 struct{fontCommon ;_adddf *_fda .PdfIndirectObject ;_bcgee _fd .TextEncoder ;Encoding _fda .PdfObject ;DescendantFont *PdfFont ;_bcebb *_bg .CMap ;
};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fabe *PdfFont )CharcodesToUnicodeWithStats (charcodes []_fd .CharCode )(_cdaa []rune ,_gfaa ,_cfec int ){_deafa ,_gfaa ,_cfec :=_fabe .CharcodesToStrings (charcodes );return []rune (_dc .Join (_deafa ,"")),_gfaa ,_cfec ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cdabe *PdfReader )GetNameDictionary ()(_fda .PdfObject ,error ){_bgdad :=_fda .ResolveReference (_cdabe ._debca .Get ("\u004e\u0061\u006de\u0073"));if _bgdad ==nil {return nil ,nil ;};if !_cdabe ._cegf {_eafba :=_cdabe .traverseObjectData (_bgdad );
if _eafba !=nil {return nil ,_eafba ;};};return _bgdad ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccgb *PdfAnnotationRedact )ToPdfObject ()_fda .PdfObject {_ccgb .PdfAnnotation .ToPdfObject ();_gbce :=_ccgb ._fbb ;_dbgd :=_gbce .PdfObject .(*_fda .PdfObjectDictionary );_ccgb .PdfAnnotationMarkup .appendToPdfDictionary (_dbgd );_dbgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_dbgd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ccgb .QuadPoints );_dbgd .SetIfNotNil ("\u0049\u0043",_ccgb .IC );_dbgd .SetIfNotNil ("\u0052\u004f",_ccgb .RO );_dbgd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_ccgb .OverlayText );
_dbgd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ccgb .Repeat );_dbgd .SetIfNotNil ("\u0044\u0041",_ccgb .DA );_dbgd .SetIfNotNil ("\u0051",_ccgb .Q );return _gbce ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_gddb byte )byte ;

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_eacfc *PdfField )GetContainingPdfObject ()_fda .PdfObject {return _eacfc ._dccfd };

// GetFontDescriptor returns the font descriptor for `font`.
func (_bccbf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _bccbf ._fdbb .getFontDescriptor (),nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fda .PdfObject ;PreserveRB _fda .PdfObject ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func _cdccb (_adgcg *_fda .PdfObjectDictionary )(*PdfShadingType2 ,error ){_abcaf :=PdfShadingType2 {};_egef :=_adgcg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _egef ==nil {_ga .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_dbfdd ,_ecgdc :=_egef .(*_fda .PdfObjectArray );if !_ecgdc {_ga .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egef );return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dbfdd .Len ()!=4{_ga .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dbfdd .Len ());return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_abcaf .Coords =_dbfdd ;if _eadc :=_adgcg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eadc !=nil {_eadc =_fda .TraceToDirectObject (_eadc );_gbagf ,_edafc :=_eadc .(*_fda .PdfObjectArray );if !_edafc {_ga .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eadc );
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abcaf .Domain =_gbagf ;};_egef =_adgcg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _egef ==nil {_ga .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_abcaf .Function =[]PdfFunction {};if _bagdb ,_bfcgg :=_egef .(*_fda .PdfObjectArray );_bfcgg {for _ ,_dface :=range _bagdb .Elements (){_ggbb ,_gggeb :=_agbac (_dface );if _gggeb !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gggeb );
return nil ,_gggeb ;};_abcaf .Function =append (_abcaf .Function ,_ggbb );};}else {_gfeg ,_cege :=_agbac (_egef );if _cege !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cege );
return nil ,_cege ;};_abcaf .Function =append (_abcaf .Function ,_gfeg );};if _gabg :=_adgcg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gabg !=nil {_gabg =_fda .TraceToDirectObject (_gabg );_fdbcd ,_aeefb :=_gabg .(*_fda .PdfObjectArray );if !_aeefb {_ga .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gabg );
return nil ,_fda .ErrTypeError ;};if _fdbcd .Len ()!=2{_ga .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fdbcd .Len ());return nil ,ErrInvalidAttribute ;
};_abcaf .Extend =_fdbcd ;};return &_abcaf ,nil ;};

// Y returns the value of the yellow component of the color.
func (_caegd *PdfColorDeviceCMYK )Y ()float64 {return _caegd [2]};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fda .PdfObject ;Dest _fda .PdfObject ;H _fda .PdfObject ;PA _fda .PdfObject ;QuadPoints _fda .PdfObject ;BS _fda .PdfObject ;_gce *PdfAction ;_bbd *PdfReader ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_gecc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_ffebb *PdfReader )loadDSS ()(*DSS ,error ){if _ffebb ._edbag .GetCrypter ()!=nil &&!_ffebb ._edbag .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fcgdb :=_ffebb ._debca .Get ("\u0044\u0053\u0053");if _fcgdb ==nil {return nil ,nil ;};_fcffc ,_ :=_fda .GetIndirect (_fcgdb );_fcgdb =_fda .TraceToDirectObject (_fcgdb );switch _gcbf :=_fcgdb .(type ){case *_fda .PdfObjectNull :return nil ,nil ;case *_fda .PdfObjectDictionary :return _beagb (_fcffc ,_gcbf );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_fcgdb );};

// ToPdfObject implements interface PdfModel.
func (_ddec *PdfAnnotationWatermark )ToPdfObject ()_fda .PdfObject {_ddec .PdfAnnotation .ToPdfObject ();_dfgc :=_ddec ._fbb ;_ecaa :=_dfgc .PdfObject .(*_fda .PdfObjectDictionary );_ecaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_ecaa .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_ddec .FixedPrint );return _dfgc ;};func (_cccbg *PdfWriter )writeOutputIntents ()error {if len (_cccbg ._egdbb )==0{return nil ;};_effab :=make ([]_fda .PdfObject ,len (_cccbg ._egdbb ));
for _agfge ,_accab :=range _cccbg ._egdbb {_gdcga :=_accab .ToPdfObject ();_effab [_agfge ]=_fda .MakeIndirectObject (_gdcga );};_cgebd :=_fda .MakeIndirectObject (_fda .MakeArray (_effab ...));_cccbg ._ecegfe .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_cgebd );
if _fcagcb :=_cccbg .addObjects (_cgebd );_fcagcb !=nil {return _fcagcb ;};return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbgb *PdfColorspaceSpecialPattern )ToPdfObject ()_fda .PdfObject {if _bbgb .UnderlyingCS ==nil {return _fda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_adcc :=_fda .MakeArray (_fda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_adcc .Append (_bbgb .UnderlyingCS .ToPdfObject ());if _bbgb ._baaa !=nil {_bbgb ._baaa .PdfObject =_adcc ;return _bbgb ._baaa ;};return _adcc ;};func (_ebe *PdfReader )newPdfAnnotationTextFromDict (_faf *_fda .PdfObjectDictionary )(*PdfAnnotationText ,error ){_adde :=PdfAnnotationText {};
_bgdb ,_cfc :=_ebe .newPdfAnnotationMarkupFromDict (_faf );if _cfc !=nil {return nil ,_cfc ;};_adde .PdfAnnotationMarkup =_bgdb ;_adde .Open =_faf .Get ("\u004f\u0070\u0065\u006e");_adde .Name =_faf .Get ("\u004e\u0061\u006d\u0065");_adde .State =_faf .Get ("\u0053\u0074\u0061t\u0065");
_adde .StateModel =_faf .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_adde ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_geecd []_fda .PdfObject )([]_fda .PdfObject ,error );};func (_afbcf *PdfReader )buildNameNodes (_gefa *_fda .PdfIndirectObject ,_cbec map[_fda .PdfObject ]struct{})error {if _gefa ==nil {return nil ;};if _ ,_decc :=_cbec [_gefa ];
_decc {_ga .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gefa .ObjectNumber );return nil ;};_cbec [_gefa ]=struct{}{};
_cedg ,_bfbag :=_gefa .PdfObject .(*_fda .PdfObjectDictionary );if !_bfbag {return _ad .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _cdcgg ,_ggcb :=_fda .GetDict (_cedg .Get ("\u0044\u0065\u0073t\u0073"));
_ggcb {_ccbga ,_gdgae :=_fda .GetArray (_cdcgg .Get ("\u004b\u0069\u0064\u0073"));if !_gdgae {return _ad .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_ga .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ccbga );
for _gfaee ,_facdg :=range _ccbga .Elements (){_agfc ,_dead :=_fda .GetIndirect (_facdg );if !_dead {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_agfc );
return _ad .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_ccbga .Set (_gfaee ,_agfc );_bebff :=_afbcf .buildNameNodes (_agfc ,_cbec );if _bebff !=nil {return _bebff ;
};};};if _fdbbd ,_cgeee :=_fda .GetDict (_cedg );_cgeee {if !_fda .IsNullObject (_fdbbd .Get ("\u004b\u0069\u0064\u0073")){if _cbegg ,_aeeed :=_fda .GetArray (_fdbbd .Get ("\u004b\u0069\u0064\u0073"));_aeeed {for _ffgfb ,_adbd :=range _cbegg .Elements (){if _feddcf ,_defeg :=_fda .GetIndirect (_adbd );
_defeg {_cbegg .Set (_ffgfb ,_feddcf );_fgbce :=_afbcf .buildNameNodes (_feddcf ,_cbec );if _fgbce !=nil {return _fgbce ;};};};};};};return nil ;};func _bggf (_adfbcb *[]*PdfField ,_dcgef FieldFilterFunc ,_acbdg bool )[]*PdfField {if _adfbcb ==nil {return nil ;
};_beef :=*_adfbcb ;if len (*_adfbcb )==0{return nil ;};_ecfff :=_beef [:0];if _dcgef ==nil {_dcgef =func (*PdfField )bool {return true };};var _gbbab []*PdfField ;for _ ,_bace :=range _beef {_fbcgb :=_dcgef (_bace );if _fbcgb {_gbbab =append (_gbbab ,_bace );
if len (_bace .Kids )> 0{_gbbab =append (_gbbab ,_bggf (&_bace .Kids ,_dcgef ,_acbdg )...);};};if !_acbdg ||!_fbcgb ||len (_bace .Kids )> 0{_ecfff =append (_ecfff ,_bace );};};*_adfbcb =_ecfff ;return _gbbab ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dbfgb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dbfgb .UnderlyingCS .GetNumComponents ();};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_fbca :map[_fda .PdfObject ]struct{}{},_bbgee :_fdcaa (),_edbag :_fda .NewParserFromString (txt )};};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _fda .PdfObject )(*PdfOutputIntent ,error ){_bdgc :=&PdfOutputIntent {};if _acee :=_bdgc .ParsePdfObject (object );_acee !=nil {return nil ,_acee ;};return _bdgc ,nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fda .PdfObject ;Flags _fda .PdfObject ;};

// SetAction sets the PDF action for the annotation link.
func (_ecfe *PdfAnnotationLink )SetAction (action *PdfAction ){_ecfe ._gce =action ;if action ==nil {_ecfe .A =nil ;};};

// StdFontName represents name of a standard font.
type StdFontName =_ade .StdFontName ;

// Flags returns the field flags for the field accounting for any inherited flags.
func (_edeg *PdfField )Flags ()FieldFlag {var _agfd FieldFlag ;_eeff ,_gfecc :=_edeg .inherit (func (_adea *PdfField )bool {if _adea .Ff !=nil {_agfd =FieldFlag (*_adea .Ff );return true ;};return false ;});if _gfecc !=nil {_ga .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gfecc );
};if !_eeff {_ga .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _agfd ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_dadgc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fda .GetNumberAsFloat (_dadgc .Ascent );};func (_edba *PdfReader )newPdfAnnotationHighlightFromDict (_daaca *_fda .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_adee :=PdfAnnotationHighlight {};
_bfce ,_dbae :=_edba .newPdfAnnotationMarkupFromDict (_daaca );if _dbae !=nil {return nil ,_dbae ;};_adee .PdfAnnotationMarkup =_bfce ;_adee .QuadPoints =_daaca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_adee ,nil ;};


// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_adcac *_fda .PdfIndirectObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_cdfbec :=&PdfOutline {_bddg :_fda .MakeIndirectObject (_fda .MakeDict ())};_cdfbec ._bgddeb =_cdfbec ;return _cdfbec ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_agcfe *_fda .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fda .PdfObjectName ;Filter *_fda .PdfObjectName ;SubFilter *_fda .PdfObjectName ;Contents *_fda .PdfObjectString ;Cert _fda .PdfObject ;ByteRange *_fda .PdfObjectArray ;Reference *_fda .PdfObjectArray ;Changes *_fda .PdfObjectArray ;Name *_fda .PdfObjectString ;
M *_fda .PdfObjectString ;Location *_fda .PdfObjectString ;Reason *_fda .PdfObjectString ;ContactInfo *_fda .PdfObjectString ;R *_fda .PdfObjectInteger ;V *_fda .PdfObjectInteger ;PropBuild *_fda .PdfObjectDictionary ;PropAuthTime *_fda .PdfObjectInteger ;
PropAuthType *_fda .PdfObjectName ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_dfdcd *Image )Resample (targetBitsPerComponent int64 ){if _dfdcd .BitsPerComponent ==targetBitsPerComponent {return ;};_efgeg :=_dfdcd .GetSamples ();if targetBitsPerComponent < _dfdcd .BitsPerComponent {_ccbgb :=_dfdcd .BitsPerComponent -targetBitsPerComponent ;
for _ebce :=range _efgeg {_efgeg [_ebce ]>>=uint (_ccbgb );};}else if targetBitsPerComponent > _dfdcd .BitsPerComponent {_effgb :=targetBitsPerComponent -_dfdcd .BitsPerComponent ;for _fbcgf :=range _efgeg {_efgeg [_fbcgf ]<<=uint (_effgb );};};_dfdcd .BitsPerComponent =targetBitsPerComponent ;
if _dfdcd .BitsPerComponent < 8{_dfdcd .resampleLowBits (_efgeg );return ;};_bebge :=_eac .BytesPerLine (int (_dfdcd .Width ),int (_dfdcd .BitsPerComponent ),_dfdcd .ColorComponents );_fgffe :=make ([]byte ,_bebge *int (_dfdcd .Height ));var (_eaea ,_agggb ,_deafd ,_cdbbc int ;
_bgddb uint32 ;);for _deafd =0;_deafd < int (_dfdcd .Height );_deafd ++{_eaea =_deafd *_bebge ;_agggb =(_deafd +1)*_bebge -1;_bffb :=_cbc .ResampleUint32 (_efgeg [_eaea :_agggb ],int (targetBitsPerComponent ),8);for _cdbbc ,_bgddb =range _bffb {_fgffe [_cdbbc +_eaea ]=byte (_bgddb );
};};_dfdcd .Data =_fgffe ;};

// SetContext set the sub annotation (context).
func (_deaae *PdfShading )SetContext (ctx PdfModel ){_deaae ._badeb =ctx };

// DecodeArray returns the component range values for the Separation colorspace.
func (_aeda *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_begbc :=appender .Reader .DSS ;if _begbc ==nil {_begbc =NewDSS ();};if _cfbg :=_begbc .generateHashMaps ();_cfbg !=nil {return nil ,_cfbg ;};return &LTV {CertClient :_aeb .NewCertClient (),OCSPClient :_aeb .NewOCSPClient (),CRLClient :_aeb .NewCRLClient (),SkipExisting :true ,_ccda :appender ,_bcaabc :_begbc },nil ;
};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fda .PdfObject ;ColorSpace _fda .PdfObject ;Pattern _fda .PdfObject ;Shading _fda .PdfObject ;XObject _fda .PdfObject ;Font _fda .PdfObject ;ProcSet _fda .PdfObject ;Properties _fda .PdfObject ;_gafg *_fda .PdfObjectDictionary ;
_bfbffb *PdfPageResourcesColorspaces ;};

// ToPdfObject implements interface PdfModel.
func (_feagb *PdfAnnotationStamp )ToPdfObject ()_fda .PdfObject {_feagb .PdfAnnotation .ToPdfObject ();_fcdf :=_feagb ._fbb ;_caa :=_fcdf .PdfObject .(*_fda .PdfObjectDictionary );_feagb .PdfAnnotationMarkup .appendToPdfDictionary (_caa );_caa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0053\u0074\u0061m\u0070"));
_caa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_feagb .Name );return _fcdf ;};func (_egbee *PdfWriter )writeObjectsInStreams (_gebcg map[_fda .PdfObject ]bool )error {for _ ,_dacg :=range _egbee ._adeed {if _eedc :=_gebcg [_dacg ];_eedc {continue ;};_baea :=int64 (0);
switch _bbdff :=_dacg .(type ){case *_fda .PdfIndirectObject :_baea =_bbdff .ObjectNumber ;case *_fda .PdfObjectStream :_baea =_bbdff .ObjectNumber ;case *_fda .PdfObjectStreams :_baea =_bbdff .ObjectNumber ;default:_ga .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_dacg );
return ErrTypeCheck ;};if _egbee ._aecdf !=nil &&_dacg !=_egbee ._ggdcb {_agdec :=_egbee ._aecdf .Encrypt (_dacg ,_baea ,0);if _agdec !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_agdec );
return _agdec ;};};_egbee .writeObject (int (_baea ),_dacg );};return nil ;};func _eacf (_ebaad _fda .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_dfdd :=&PdfColorspaceDeviceNAttributes {};var _aageg *_fda .PdfObjectDictionary ;switch _cbbf :=_ebaad .(type ){case *_fda .PdfIndirectObject :_dfdd ._bbcdg =_cbbf ;
var _agdfa bool ;_aageg ,_agdfa =_cbbf .PdfObject .(*_fda .PdfObjectDictionary );if !_agdfa {_ga .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ad .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_fda .PdfObjectDictionary :_aageg =_cbbf ;case *_fda .PdfObjectReference :_aagf :=_cbbf .Resolve ();return _eacf (_aagf );default:_ga .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ad .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afdeg :=_aageg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_afdeg !=nil {_ecbf ,_eagc :=_fda .TraceToDirectObject (_afdeg ).(*_fda .PdfObjectName );if !_eagc {_ga .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ad .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dfdd .Subtype =_ecbf ;};if _bbfe :=_aageg .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_bbfe !=nil {_dfdd .Colorants =_bbfe ;};if _fdaf :=_aageg .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_fdaf !=nil {_dfdd .Process =_fdaf ;};if _deag :=_aageg .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_deag !=nil {_dfdd .MixingHints =_deag ;};return _dfdd ,nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ccb :=NewPdfAction ();_fde :=&PdfActionResetForm {};_fde .PdfAction =_ccb ;_ccb .SetContext (_fde );return _fde ;};func _egbea (_ceeb []byte )bool {if len (_ceeb )< 4{return true ;};for _agfa :=range _ceeb [:4]{_bgee :=rune (_agfa );
if !_ca .Is (_ca .ASCII_Hex_Digit ,_bgee )&&!_ca .IsSpace (_bgee ){return true ;};};return false ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fbdaad :=&XObjectForm {};_eeedg :=&_fda .PdfObjectStream {};_eeedg .PdfObjectDictionary =_fda .MakeDict ();_fbdaad ._adacca =_eeedg ;return _fbdaad ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fda .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fda .PdfObject ;Contents _fda .PdfObject ;
Rotate *int64 ;Group _fda .PdfObject ;Thumb _fda .PdfObject ;B _fda .PdfObject ;Dur _fda .PdfObject ;Trans _fda .PdfObject ;AA _fda .PdfObject ;Metadata _fda .PdfObject ;PieceInfo _fda .PdfObject ;StructParents _fda .PdfObject ;ID _fda .PdfObject ;PZ _fda .PdfObject ;
SeparationInfo _fda .PdfObject ;Tabs _fda .PdfObject ;TemplateInstantiated _fda .PdfObject ;PresSteps _fda .PdfObject ;UserUnit _fda .PdfObject ;VP _fda .PdfObject ;Annots _fda .PdfObject ;_bbbbc []*PdfAnnotation ;_bfdab *_fda .PdfObjectDictionary ;_ebgg *_fda .PdfIndirectObject ;
_ebfda *PdfReader ;};

// Encoder returns the font's text encoder.
func (_adaf pdfCIDFontType0 )Encoder ()_fd .TextEncoder {return _adaf ._dcbd };

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_facge *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _facge ._ccafc .(*PdfShadingPattern );};func (_adgcaeg *PdfWriter )setWriter (_edecg _ed .Writer ){_adgcaeg ._dcded =_adgcaeg ._gbfg ;_adgcaeg ._gfdaa =_d .NewWriter (_edecg );};


// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cac :=NewPdfAnnotation ();_bgge :=&PdfAnnotationSquare {};_bgge .PdfAnnotation =_cac ;_bgge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cac .SetContext (_bgge );return _bgge ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_fcgga *PdfPageResources )HasFontByName (keyName _fda .PdfObjectName )bool {_ ,_bfacb :=_fcgga .GetFontByName (keyName );return _bfacb ;};

// ToPdfObject implements interface PdfModel.
func (_edg *PdfAnnotationPolyLine )ToPdfObject ()_fda .PdfObject {_edg .PdfAnnotation .ToPdfObject ();_ecad :=_edg ._fbb ;_cddg :=_ecad .PdfObject .(*_fda .PdfObjectDictionary );_edg .PdfAnnotationMarkup .appendToPdfDictionary (_cddg );_cddg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_cddg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_edg .Vertices );_cddg .SetIfNotNil ("\u004c\u0045",_edg .LE );_cddg .SetIfNotNil ("\u0042\u0053",_edg .BS );_cddg .SetIfNotNil ("\u0049\u0043",_edg .IC );_cddg .SetIfNotNil ("\u0042\u0045",_edg .BE );
_cddg .SetIfNotNil ("\u0049\u0054",_edg .IT );_cddg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_edg .Measure );return _ecad ;};func _gcfc (_edea _fda .PdfObject )(*PdfFilespec ,error ){if _edea ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_edea );
};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_fgdgd *PdfSignature ,_babbb Hasher ,_dbdff SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cbcfd *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cbcfd .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_dbfe *PdfFont )CharcodesToUnicode (charcodes []_fd .CharCode )[]rune {_ccdb ,_ ,_ :=_dbfe .CharcodesToUnicodeWithStats (charcodes );return _ccdb ;};func (_bgcca *PdfWriter )flushWriter ()error {if _bgcca ._abac ==nil {_bgcca ._abac =_bgcca ._gfdaa .Flush ();
};return _bgcca ._abac ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_eaddf :=&PdfSignature {Type :_fda .MakeName ("\u0053\u0069\u0067"),Handler :handler };_eebfc :=&pdfSignDictionary {PdfObjectDictionary :_fda .MakeDict (),_gcggb :&handler ,_begec :_eaddf };
_eaddf ._agcfe =_fda .MakeIndirectObject (_eebfc );return _eaddf ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_ccafc PdfModel ;_ccaef _fda .PdfObject ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_gdba *_fda .PdfIndirectObject ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_egac PdfOutputIntentType )String ()string {switch _egac {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fda .PdfObject ;FontFamily _fda .PdfObject ;FontStretch _fda .PdfObject ;FontWeight _fda .PdfObject ;Flags _fda .PdfObject ;FontBBox _fda .PdfObject ;ItalicAngle _fda .PdfObject ;Ascent _fda .PdfObject ;Descent _fda .PdfObject ;
Leading _fda .PdfObject ;CapHeight _fda .PdfObject ;XHeight _fda .PdfObject ;StemV _fda .PdfObject ;StemH _fda .PdfObject ;AvgWidth _fda .PdfObject ;MaxWidth _fda .PdfObject ;MissingWidth _fda .PdfObject ;FontFile _fda .PdfObject ;FontFile2 _fda .PdfObject ;
FontFile3 _fda .PdfObject ;CharSet _fda .PdfObject ;_gdae int ;_bcdgg float64 ;*fontFile ;_dfceg *_ade .TtfType ;

// Additional entries for CIDFonts
Style _fda .PdfObject ;Lang _fda .PdfObject ;FD _fda .PdfObject ;CIDSet _fda .PdfObject ;_fdcb *_fda .PdfIndirectObject ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_ebg :=NewPdfAnnotation ();_cgg :=&PdfAnnotationPolygon {};_cgg .PdfAnnotation =_ebg ;_cgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebg .SetContext (_cgg );return _cgg ;};func _cfddg (_bdce []byte )[]byte {const _gcdga =52845;
const _gggf =22719;_acea :=55665;for _ ,_ddbg :=range _bdce [:4]{_acea =(int (_ddbg )+_acea )*_gcdga +_gggf ;};_cfebb :=make ([]byte ,len (_bdce )-4);for _bdef ,_dbafee :=range _bdce [4:]{_cfebb [_bdef ]=byte (int (_dbafee )^_acea >>8);_acea =(int (_dbafee )+_acea )*_gcdga +_gggf ;
};return _cfebb ;};func (_daaa *PdfReader )newPdfActionHideFromDict (_cbdg *_fda .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cbdg .Get ("\u0054"),H :_cbdg .Get ("\u0048")},nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ecdgd :=PdfColorLab {l ,a ,b };return &_ecdgd };

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_abbgg DefaultImageHandler )NewGrayImageFromGoImage (goimg _eg .Image )(*Image ,error ){_faag :=goimg .Bounds ();_bdcdb :=&Image {Width :int64 (_faag .Dx ()),Height :int64 (_faag .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _dccfda :=goimg .(type ){case *_eg .Gray :if len (_dccfda .Pix )!=_faag .Dx ()*_faag .Dy (){_dfda ,_agbeg :=_eac .GrayConverter .Convert (goimg );
if _agbeg !=nil {return nil ,_agbeg ;};_bdcdb .Data =_dfda .Pix ();}else {_bdcdb .Data =_dccfda .Pix ;};case *_eg .Gray16 :_bdcdb .BitsPerComponent =16;if len (_dccfda .Pix )!=_faag .Dx ()*_faag .Dy ()*2{_aegaf ,_fdfe :=_eac .Gray16Converter .Convert (goimg );
if _fdfe !=nil {return nil ,_fdfe ;};_bdcdb .Data =_aegaf .Pix ();}else {_bdcdb .Data =_dccfda .Pix ;};case _eac .Image :_ebcd :=_dccfda .Base ();if _ebcd .ColorComponents ==1{_bdcdb .BitsPerComponent =int64 (_ebcd .BitsPerComponent );_bdcdb .Data =_ebcd .Data ;
return _bdcdb ,nil ;};_bgacg ,_dgcgc :=_eac .GrayConverter .Convert (goimg );if _dgcgc !=nil {return nil ,_dgcgc ;};_bdcdb .Data =_bgacg .Pix ();default:_aabf ,_bbcdd :=_eac .GrayConverter .Convert (goimg );if _bbcdd !=nil {return nil ,_bbcdd ;};_bdcdb .Data =_aabf .Pix ();
};return _bdcdb ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbgg *PdfColorspaceDeviceCMYK )ToPdfObject ()_fda .PdfObject {return _fda .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ToPdfObject implements interface PdfModel.
func (_ggag *PdfFilespec )ToPdfObject ()_fda .PdfObject {_cgbdge :=_ggag .getDict ();_cgbdge .Clear ();_cgbdge .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cgbdge .SetIfNotNil ("\u0046\u0053",_ggag .FS );
_cgbdge .SetIfNotNil ("\u0046",_ggag .F );_cgbdge .SetIfNotNil ("\u0055\u0046",_ggag .UF );_cgbdge .SetIfNotNil ("\u0044\u004f\u0053",_ggag .DOS );_cgbdge .SetIfNotNil ("\u004d\u0061\u0063",_ggag .Mac );_cgbdge .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ggag .Unix );
_cgbdge .SetIfNotNil ("\u0049\u0044",_ggag .ID );_cgbdge .SetIfNotNil ("\u0056",_ggag .V );_cgbdge .SetIfNotNil ("\u0045\u0046",_ggag .EF );_cgbdge .SetIfNotNil ("\u0052\u0046",_ggag .RF );_cgbdge .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ggag .Desc );
_cgbdge .SetIfNotNil ("\u0043\u0049",_ggag .CI );return _ggag ._feba ;};func (_gefb *LTV )getCerts (_dgag []*_ec .Certificate )([][]byte ,error ){_acfdc :=make ([][]byte ,0,len (_dgag ));for _ ,_dgfb :=range _dgag {_acfdc =append (_acfdc ,_dgfb .Raw );
};return _acfdc ,nil ;};func (_fbcbcg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_eabf *PdfColorspaceLab )GetNumComponents ()int {return 3};func (_eccd *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_badca *LTV )Enable (sig *PdfSignature ,extraCerts []*_ec .Certificate )error {if _dacec :=_badca .validateSig (sig );_dacec !=nil {return _dacec ;};_ggcf ,_bggeb :=_badca .generateVRIKey (sig );if _bggeb !=nil {return _bggeb ;};if _ ,_fabc :=_badca ._bcaabc .VRI [_ggcf ];
_fabc &&_badca .SkipExisting {return nil ;};_cacad ,_bggeb :=sig .GetCerts ();if _bggeb !=nil {return _bggeb ;};return _badca .enable (_cacad ,extraCerts ,_ggcf );};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_accde *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _accde .RunesToCharcodeBytes ([]rune (str ));};

// MergePageWith appends page content to source Pdf file page content.
func (_bgbd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fbgc :=pageNum -1;var _ecfef *PdfPage ;for _gbae ,_affb :=range _bgbd ._dgaa {if _gbae ==_fbgc {_ecfef =_affb ;};};if _ecfef ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _ecfef ._ebgg !=nil &&_ecfef ._ebgg .GetParser ()==_bgbd ._beg ._edbag {_ecfef =_ecfef .Duplicate ();_bgbd ._dgaa [_fbgc ]=_ecfef ;};page =page .Duplicate ();_afdd (page );_afge :=_aaef (_ecfef );_caba :=_aaef (page );_cagb :=make (map[_fda .PdfObjectName ]_fda .PdfObjectName );
for _fbdf :=range _caba {if _ ,_cbbd :=_afge [_fbdf ];_cbbd {for _ggbg :=1;true ;_ggbg ++{_fcfad :=_fda .PdfObjectName (string (_fbdf )+_dd .Itoa (_ggbg ));if _ ,_dcef :=_afge [_fcfad ];!_dcef {_cagb [_fbdf ]=_fcfad ;break ;};};};};_aefa ,_bga :=page .GetContentStreams ();
if _bga !=nil {return _bga ;};_fgcg ,_bga :=_ecfef .GetContentStreams ();if _bga !=nil {return _bga ;};for _aacc ,_gafca :=range _aefa {for _agcb ,_bcda :=range _cagb {_gafca =_dc .Replace (_gafca ,"\u002f"+string (_agcb ),"\u002f"+string (_bcda ),-1);
};_aefa [_aacc ]=_gafca ;};_fgcg =append (_fgcg ,_aefa ...);if _gbba :=_ecfef .SetContentStreams (_fgcg ,_fda .NewFlateEncoder ());_gbba !=nil {return _gbba ;};_ecfef ._bbbbc =append (_ecfef ._bbbbc ,page ._bbbbc ...);if _ecfef .Resources ==nil {_ecfef .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_ecfef .Resources .Font =_bgbd .mergeResources (_ecfef .Resources .Font ,page .Resources .Font ,_cagb );_ecfef .Resources .XObject =_bgbd .mergeResources (_ecfef .Resources .XObject ,page .Resources .XObject ,_cagb );_ecfef .Resources .Properties =_bgbd .mergeResources (_ecfef .Resources .Properties ,page .Resources .Properties ,_cagb );
if _ecfef .Resources .ProcSet ==nil {_ecfef .Resources .ProcSet =page .Resources .ProcSet ;};_ecfef .Resources .Shading =_bgbd .mergeResources (_ecfef .Resources .Shading ,page .Resources .Shading ,_cagb );_ecfef .Resources .ExtGState =_bgbd .mergeResources (_ecfef .Resources .ExtGState ,page .Resources .ExtGState ,_cagb );
};_bfee ,_bga :=_ecfef .GetMediaBox ();if _bga !=nil {return _bga ;};_bfag ,_bga :=page .GetMediaBox ();if _bga !=nil {return _bga ;};var _ddaa bool ;if _bfee .Llx > _bfag .Llx {_bfee .Llx =_bfag .Llx ;_ddaa =true ;};if _bfee .Lly > _bfag .Lly {_bfee .Lly =_bfag .Lly ;
_ddaa =true ;};if _bfee .Urx < _bfag .Urx {_bfee .Urx =_bfag .Urx ;_ddaa =true ;};if _bfee .Ury < _bfag .Ury {_bfee .Ury =_bfag .Ury ;_ddaa =true ;};if _ddaa {_ecfef .MediaBox =_bfee ;};return nil ;};func (_gbeedb *PdfWriter )writeObject (_gefad int ,_gbff _fda .PdfObject ){_ga .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gefad );
if _agfac ,_gada :=_gbff .(*_fda .PdfIndirectObject );_gada {_gbeedb ._aaeac [_gefad ]=crossReference {Type :1,Offset :_gbeedb ._dcded ,Generation :_agfac .GenerationNumber };_bbdbb :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gefad );
if _fdaef ,_ebdca :=_agfac .PdfObject .(*pdfSignDictionary );_ebdca {_fdaef ._baaae =_gbeedb ._dcded +int64 (len (_bbdbb ));};if _agfac .PdfObject ==nil {_ga .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_agfac .PdfObject =_fda .MakeNull ();};_bbdbb +=_agfac .PdfObject .WriteString ();_bbdbb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_gbeedb .writeString (_bbdbb );return ;};if _gcega ,_bded :=_gbff .(*_fda .PdfObjectStream );_bded {_gbeedb ._aaeac [_gefad ]=crossReference {Type :1,Offset :_gbeedb ._dcded ,Generation :_gcega .GenerationNumber };
_bedge :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gefad );_bedge +=_gcega .PdfObjectDictionary .WriteString ();_bedge +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gbeedb .writeString (_bedge );_gbeedb .writeBytes (_gcega .Stream );
_gbeedb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gdgg ,_cecaa :=_gbff .(*_fda .PdfObjectStreams );_cecaa {_gbeedb ._aaeac [_gefad ]=crossReference {Type :1,Offset :_gbeedb ._dcded ,Generation :_gdgg .GenerationNumber };
_dcgffd :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gefad );var _ebdfe []string ;var _bddfeb string ;var _fgebb int64 ;for _geac ,_deaaed :=range _gdgg .Elements (){_cdde ,_ecdab :=_deaaed .(*_fda .PdfIndirectObject );if !_ecdab {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gefad ,_deaaed );
continue ;};_dgebf :=_cdde .PdfObject .WriteString ()+"\u0020";_bddfeb =_bddfeb +_dgebf ;_ebdfe =append (_ebdfe ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_cdde .ObjectNumber ,_fgebb ));_gbeedb ._aaeac [int (_cdde .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gefad ,Index :_geac };
_fgebb =_fgebb +int64 (len ([]byte (_dgebf )));};_bgega :=_dc .Join (_ebdfe ,"\u0020")+"\u0020";_ffgdb :=_fda .NewFlateEncoder ();_fgbee :=_ffgdb .MakeStreamDict ();_fgbee .Set (_fda .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fda .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_edegef :=int64 (_gdgg .Len ());_fgbee .Set (_fda .PdfObjectName ("\u004e"),_fda .MakeInteger (_edegef ));_faeda :=int64 (len (_bgega ));_fgbee .Set (_fda .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fda .MakeInteger (_faeda ));_ggcbg ,_ :=_ffgdb .EncodeBytes ([]byte (_bgega +_bddfeb ));
_gaeaf :=int64 (len (_ggcbg ));_fgbee .Set (_fda .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fda .MakeInteger (_gaeaf ));_dcgffd +=_fgbee .WriteString ();_dcgffd +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gbeedb .writeString (_dcgffd );
_gbeedb .writeBytes (_ggcbg );_gbeedb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_gbeedb .writeString (_gbff .WriteString ());};

// RemovePage removes a page by number.
func (_cea *PdfAppender )RemovePage (pageNum int ){_ecgc :=pageNum -1;_cea ._dgaa =append (_cea ._dgaa [0:_ecgc ],_cea ._dgaa [pageNum :]...);};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_fgbfgd *_fda .PdfIndirectObject ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_cfab :=&PdfBorderStyle {};return _cfab };

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fda .PdfObjectDictionary )(*PdfPageResources ,error ){_ddbb :=NewPdfPageResources ();if _egec :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_egec !=nil {_ddbb .ExtGState =_egec ;};if _edcge :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_edcge !=nil &&!_fda .IsNullObject (_edcge ){_ddbb .ColorSpace =_edcge ;};if _aebd :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_aebd !=nil {_ddbb .Pattern =_aebd ;};if _fddf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fddf !=nil {_ddbb .Shading =_fddf ;
};if _cace :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cace !=nil {_ddbb .XObject =_cace ;};if _eaebb :=_fda .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_eaebb !=nil {_ddbb .Font =_eaebb ;};if _fcdgg :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fcdgg !=nil {_ddbb .ProcSet =_fcdgg ;};if _gfdcc :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gfdcc !=nil {_ddbb .Properties =_gfdcc ;};return _ddbb ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fda .PdfObject ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fda .PdfObject ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_gedge *PdfPage )AddExtGState (name _fda .PdfObjectName ,egs *_fda .PdfObjectDictionary )error {if _gedge .Resources ==nil {_gedge .Resources =NewPdfPageResources ();};if _gedge .Resources .ExtGState ==nil {_gedge .Resources .ExtGState =_fda .MakeDict ();
};_bbecf ,_feeb :=_fda .TraceToDirectObject (_gedge .Resources .ExtGState ).(*_fda .PdfObjectDictionary );if !_feeb {_ga .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fda .TraceToDirectObject (_gedge .Resources .ExtGState ));
return _ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbecf .Set (name ,egs );return nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fda .PdfObjectString ;Q *_fda .PdfObjectInteger ;DS *_fda .PdfObjectString ;RV _fda .PdfObject ;MaxLen *_fda .PdfObjectInteger ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fda .PdfObject ;FS _fda .PdfObject ;F _fda .PdfObject ;UF _fda .PdfObject ;DOS _fda .PdfObject ;Mac _fda .PdfObject ;Unix _fda .PdfObject ;ID _fda .PdfObject ;V _fda .PdfObject ;EF _fda .PdfObject ;RF _fda .PdfObject ;Desc _fda .PdfObject ;
CI _fda .PdfObject ;_feba _fda .PdfObject ;};func _dafb (_gafe *_fda .PdfObjectDictionary )(*PdfFieldText ,error ){_gfaga :=&PdfFieldText {};_gfaga .DA ,_ =_fda .GetString (_gafe .Get ("\u0044\u0041"));_gfaga .Q ,_ =_fda .GetInt (_gafe .Get ("\u0051"));
_gfaga .DS ,_ =_fda .GetString (_gafe .Get ("\u0044\u0053"));_gfaga .RV =_gafe .Get ("\u0052\u0056");_gfaga .MaxLen ,_ =_fda .GetInt (_gafe .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _gfaga ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fda .PdfIndirectObject )*PdfOutlineItem {_efgb :=PdfOutlineItem {};_efgb ._bgddeb =&_efgb ;_efgb .Title =_fda .MakeString (title );_fagg :=_fda .MakeArray ();_fagg .Append (page );_fagg .Append (_fda .MakeName ("\u0046\u0069\u0074"));
_efgb .Dest =_fagg ;return &_efgb ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_efff :=NewPdfAnnotation ();_gda :=&PdfAnnotationInk {};_gda .PdfAnnotation =_efff ;_gda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efff .SetContext (_gda );return _gda ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// Initialize initializes the PdfSignature.
func (_fcagc *PdfSignature )Initialize ()error {if _fcagc .Handler ==nil {return _ad .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _fcagc .Handler .InitSignature (_fcagc );};func (_bgcgb fontCommon )fontFlags ()int {if _bgcgb ._defd ==nil {return 0;};return _bgcgb ._defd ._gdae ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gaac *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_gaac .NumInputs {_ga .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ad .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _gaac ._feca ==nil {_gbgc :=_gaac .processSamples ();if _gbgc !=nil {return nil ,_gbgc ;};};_bedgf :=_gaac .Encode ;if _bedgf ==nil {_bedgf =[]float64 {};
for _eedaa :=0;_eedaa < len (_gaac .Size );_eedaa ++{_bedgf =append (_bedgf ,0);_bedgf =append (_bedgf ,float64 (_gaac .Size [_eedaa ]-1));};};_cfebd :=_gaac .Decode ;if _cfebd ==nil {_cfebd =_gaac .Range ;};_gcdbg :=make ([]int ,len (x ));for _bbcef :=0;
_bbcef < len (x );_bbcef ++{_cccfc :=x [_bbcef ];_fbfdg :=_f .Min (_f .Max (_cccfc ,_gaac .Domain [2*_bbcef ]),_gaac .Domain [2*_bbcef +1]);_dabef :=_eac .LinearInterpolate (_fbfdg ,_gaac .Domain [2*_bbcef ],_gaac .Domain [2*_bbcef +1],_bedgf [2*_bbcef ],_bedgf [2*_bbcef +1]);
_adgea :=_f .Min (_f .Max (_dabef ,0),float64 (_gaac .Size [_bbcef ]-1));_bbfd :=int (_f .Floor (_adgea +0.5));if _bbfd < 0{_bbfd =0;}else if _bbfd > _gaac .Size [_bbcef ]{_bbfd =_gaac .Size [_bbcef ]-1;};_gcdbg [_bbcef ]=_bbfd ;};_bcfb :=_gcdbg [0];for _agaad :=1;
_agaad < _gaac .NumInputs ;_agaad ++{_eabfa :=_gcdbg [_agaad ];for _eafbb :=0;_eafbb < _agaad ;_eafbb ++{_eabfa *=_gaac .Size [_eafbb ];};_bcfb +=_eabfa ;};_bcfb *=_gaac .NumOutputs ;var _dgga []float64 ;for _gedae :=0;_gedae < _gaac .NumOutputs ;_gedae ++{_gdagd :=_bcfb +_gedae ;
if _gdagd >=len (_gaac ._feca ){_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_gbbc :=_gaac ._feca [_gdagd ];_gdfd :=_eac .LinearInterpolate (float64 (_gbbc ),0,_f .Pow (2,float64 (_gaac .BitsPerSample )),_cfebd [2*_gedae ],_cfebd [2*_gedae +1]);_dbcd :=_f .Min (_f .Max (_gdfd ,_gaac .Range [2*_gedae ]),_gaac .Range [2*_gedae +1]);
_dgga =append (_dgga ,_dbcd );};return _dgga ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fda .PdfObject )(*PdfFont ,error ){return _dddbea (fontObj ,true )};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_fabf *PdfAppender )Write (w _ed .Writer )error {if _fabf ._dade {return _ad .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_eedf :=NewPdfWriter ();_aefg ,_eabbe :=_fda .GetDict (_eedf ._degfge );if !_eabbe {return _ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_fcddb ,_eabbe :=_aefg .Get ("\u004b\u0069\u0064\u0073").(*_fda .PdfObjectArray );if !_eabbe {return _ad .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dcfa ,_eabbe :=_aefg .Get ("\u0043\u006f\u0075n\u0074").(*_fda .PdfObjectInteger );if !_eabbe {return _ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_agaa :=_fabf ._beg ._edbag ;_adba :=_agaa .GetTrailer ();if _adba ==nil {return _ad .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bccb ,_eabbe :=_fda .GetIndirect (_adba .Get ("\u0052\u006f\u006f\u0074"));
if !_eabbe {return _ad .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fbae ,_eabbe :=_fda .GetDict (_bccb );if !_eabbe {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bccb ,*_adba );
return _ad .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_badec :=range _fbae .Keys (){if _eedf ._ecegfe .Get (_badec )==nil {_egfc :=_fbae .Get (_badec );_eedf ._ecegfe .Set (_badec ,_egfc );};};if _fabf ._ecca !=nil {_eedf ._ecegfe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fabf ._ecca .ToPdfObject ());
_fabf .updateObjectsDeep (_fabf ._ecca .ToPdfObject (),nil );};if _fabf ._dggf !=nil {_fabf .updateObjectsDeep (_fabf ._dggf .ToPdfObject (),nil );_eedf ._ecegfe .Set ("\u0044\u0053\u0053",_fabf ._dggf .GetContainingPdfObject ());};if _fabf ._bdag !=nil {_eedf ._ecegfe .Set ("\u0050\u0065\u0072m\u0073",_fabf ._bdag .ToPdfObject ());
_fabf .updateObjectsDeep (_fabf ._bdag .ToPdfObject (),nil );};if _eedf ._ccgad .Major < 2{_eedf .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_eedf .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _bfed ,_ebfae :=_fda .GetDict (_adba .Get ("\u0049\u006e\u0066\u006f"));
_ebfae {if _bfec ,_dgdg :=_fda .GetDict (_eedf ._gebbe );_dgdg {for _ ,_dfff :=range _bfed .Keys (){if _bfec .Get (_dfff )==nil {_bfec .Set (_dfff ,_bfed .Get (_dfff ));};};};};if _fabf ._egfe !=nil {_eedf ._gebbe =_fda .MakeIndirectObject (_fabf ._egfe .ToPdfObject ());
};_fabf .addNewObject (_eedf ._gebbe );_fabf .addNewObject (_eedf ._cdeecc );_caae :=false ;if len (_fabf ._beg .PageList )!=len (_fabf ._dgaa ){_caae =true ;}else {for _begd :=range _fabf ._beg .PageList {switch {case _fabf ._dgaa [_begd ]==_fabf ._beg .PageList [_begd ]:case _fabf ._dgaa [_begd ]==_fabf .Reader .PageList [_begd ]:default:_caae =true ;
};if _caae {break ;};};};if _caae {_fabf .updateObjectsDeep (_eedf ._degfge ,nil );}else {_fabf ._fagc [_eedf ._degfge ]=struct{}{};};_eedf ._degfge .ObjectNumber =_fabf .Reader ._ddgb .ObjectNumber ;_fabf ._deecf [_eedf ._degfge ]=_fabf .Reader ._ddgb .ObjectNumber ;
_ddgf :=[]_fda .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_abgc :=range _fabf ._dgaa {_adfdg :=_abgc .ToPdfObject ();
*_dcfa =*_dcfa +1;if _bbae ,_gdgf :=_adfdg .(*_fda .PdfIndirectObject );_gdgf &&_bbae .GetParser ()==_fabf ._beg ._edbag {_fcddb .Append (&_bbae .PdfObjectReference );continue ;};if _bbabb ,_dccd :=_fda .GetDict (_adfdg );_dccd {_eaac ,_ced :=_bbabb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fda .PdfIndirectObject );
for _ced {_ga .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eaac );_gedd ,_baab :=_eaac .PdfObject .(*_fda .PdfObjectDictionary );if !_baab {return _ad .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_efc :=range _ddgf {_ga .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efc );if _bbabb .Get (_efc )!=nil {_ga .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ecaf :=_gedd .Get (_efc );_ecaf !=nil {_ga .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efc );_bbabb .Set (_efc ,_ecaf );};};_eaac ,_ced =_gedd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fda .PdfIndirectObject );
_ga .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gedd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bbabb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eedf ._degfge );};_fabf .updateObjectsDeep (_adfdg ,nil );
_fcddb .Append (_adfdg );};if _ ,_eeb :=_fabf ._caee .Seek (0,_ed .SeekStart );_eeb !=nil {return _eeb ;};_eddae :=make (map[SignatureHandler ]_ed .Writer );_bcg :=_fda .MakeArray ();for _ ,_eggg :=range _fabf ._ddgd {if _dgbd ,_babg :=_fda .GetIndirect (_eggg );
_babg {if _eageb ,_fdge :=_dgbd .PdfObject .(*pdfSignDictionary );_fdge {_gagb :=*_eageb ._gcggb ;var _ceg error ;_eddae [_gagb ],_ceg =_gagb .NewDigest (_eageb ._begec );if _ceg !=nil {return _ceg ;};_bcg .Append (_fda .MakeInteger (0xfffff),_fda .MakeInteger (0xfffff));
};};};if _bcg .Len ()> 0{_bcg .Append (_fda .MakeInteger (0xfffff),_fda .MakeInteger (0xfffff));};for _ ,_bcad :=range _fabf ._ddgd {if _cggb ,_gggc :=_fda .GetIndirect (_bcad );_gggc {if _fgda ,_eaaag :=_cggb .PdfObject .(*pdfSignDictionary );_eaaag {_fgda .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bcg );
};};};_gggd :=len (_eddae )> 0;var _gcba _ed .Reader =_fabf ._caee ;if _gggd {_efba :=make ([]_ed .Writer ,0,len (_eddae ));for _ ,_gccd :=range _eddae {_efba =append (_efba ,_gccd );};_gcba =_ed .TeeReader (_fabf ._caee ,_ed .MultiWriter (_efba ...));
};_dbefb ,_cdab :=_ed .Copy (w ,_gcba );if _cdab !=nil {return _cdab ;};if len (_fabf ._ddgd )==0{return nil ;};_eedf ._gbfg =_dbefb ;_eedf .ObjNumOffset =_fabf ._ccgf ;_eedf ._dfecb =true ;_eedf ._agaee =_fabf ._cbcg ;_eedf ._ddbefe =_fabf ._fffe ;_eedf ._gcaefe =_fabf ._ccbed ;
_eedf ._ccgad =_fabf ._beg .PdfVersion ();_eedf ._efec =_fabf ._deecf ;_eedf ._aecdf =_fabf ._adca .GetCrypter ();_eedf ._ggdcb =_fabf ._adca .GetEncryptObj ();_agee :=_fabf ._adca .GetXrefType ();if _agee !=nil {_agaaf :=*_agee ==_fda .XrefTypeObjectStream ;
_eedf ._ecdcg =&_agaaf ;};_eedf ._cfeaa =map[_fda .PdfObject ]struct{}{};_eedf ._adeed =[]_fda .PdfObject {};for _ ,_dadd :=range _fabf ._ddgd {if _ ,_gacf :=_fabf ._fagc [_dadd ];_gacf {continue ;};_eedf .addObject (_dadd );};_gfagg :=w ;if _gggd {_gfagg =_dcc .NewBuffer (nil );
};if _fabf ._ffcdc !=""&&_eedf ._aecdf ==nil {_eedf .Encrypt ([]byte (_fabf ._ffcdc ),[]byte (_fabf ._ffcdc ),_fabf ._dccc );};if _edbdga :=_adba .Get ("\u0049\u0044");_edbdga !=nil {if _ccfb ,_ccgg :=_fda .GetArray (_edbdga );_ccgg {_eedf ._bbad =_ccfb ;
};};if _bfgc :=_eedf .Write (_gfagg );_bfgc !=nil {return _bfgc ;};if _gggd {_bedb :=_gfagg .(*_dcc .Buffer ).Bytes ();_cbgg :=_fda .MakeArray ();var _fccc []*pdfSignDictionary ;var _bcbc int64 ;for _ ,_daf :=range _eedf ._adeed {if _dbfga ,_dddc :=_fda .GetIndirect (_daf );
_dddc {if _gafb ,_ccae :=_dbfga .PdfObject .(*pdfSignDictionary );_ccae {_fccc =append (_fccc ,_gafb );_debd :=_gafb ._baaae +int64 (_gafb ._edee );_cbgg .Append (_fda .MakeInteger (_bcbc ),_fda .MakeInteger (_debd -_bcbc ));_bcbc =_gafb ._baaae +int64 (_gafb ._dabg );
};};};_cbgg .Append (_fda .MakeInteger (_bcbc ),_fda .MakeInteger (_dbefb +int64 (len (_bedb ))-_bcbc ));_fccd :=[]byte (_cbgg .WriteString ());for _ ,_faaa :=range _fccc {_fbcb :=int (_faaa ._baaae -_dbefb );for _edbb :=_faaa ._ecadg ;_edbb < _faaa ._bdfc ;
_edbb ++{_bedb [_fbcb +_edbb ]=' ';};_ebdg :=_bedb [_fbcb +_faaa ._ecadg :_fbcb +_faaa ._bdfc ];copy (_ebdg ,_fccd );};var _gebc int ;for _ ,_fbcbc :=range _fccc {_daeg :=int (_fbcbc ._baaae -_dbefb );_afcg :=_bedb [_gebc :_daeg +_fbcbc ._edee ];_gbcc :=*_fbcbc ._gcggb ;
_eddae [_gbcc ].Write (_afcg );_gebc =_daeg +_fbcbc ._dabg ;};for _ ,_eaefd :=range _fccc {_gfbe :=_bedb [_gebc :];_ddb :=*_eaefd ._gcggb ;_eddae [_ddb ].Write (_gfbe );};for _ ,_agafa :=range _fccc {_ecdd :=int (_agafa ._baaae -_dbefb );_gefc :=*_agafa ._gcggb ;
_gaga :=_eddae [_gefc ];if _bcbd :=_gefc .Sign (_agafa ._begec ,_gaga );_bcbd !=nil {return _bcbd ;};_agafa ._begec .ByteRange =_cbgg ;_aeec :=[]byte (_agafa ._begec .Contents .WriteString ());for _gcaae :=_agafa ._ecadg ;_gcaae < _agafa ._bdfc ;_gcaae ++{_bedb [_ecdd +_gcaae ]=' ';
};for _ecfa :=_agafa ._edee ;_ecfa < _agafa ._dabg ;_ecfa ++{_bedb [_ecdd +_ecfa ]=' ';};_ecccf :=_bedb [_ecdd +_agafa ._ecadg :_ecdd +_agafa ._bdfc ];copy (_ecccf ,_fccd );_ecccf =_bedb [_ecdd +_agafa ._edee :_ecdd +_agafa ._dabg ];copy (_ecccf ,_aeec );
};_fdcfe :=_dcc .NewBuffer (_bedb );_ ,_cdab =_ed .Copy (w ,_fdcfe );if _cdab !=nil {return _cdab ;};};_fabf ._dade =true ;return nil ;};func (_geeba *PdfSignature )extractChainFromCert ()([]*_ec .Certificate ,error ){var _addfa *_fda .PdfObjectArray ;
switch _egfdf :=_geeba .Cert .(type ){case *_fda .PdfObjectString :_addfa =_fda .MakeArray (_egfdf );case *_fda .PdfObjectArray :_addfa =_egfdf ;default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_egfdf );
};var _aabfg _dcc .Buffer ;for _ ,_defaa :=range _addfa .Elements (){_cbdea ,_fggef :=_fda .GetString (_defaa );if !_fggef {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_defaa );
};if _ ,_cecfe :=_aabfg .Write (_cbdea .Bytes ());_cecfe !=nil {return nil ,_cecfe ;};};return _ec .ParseCertificates (_aabfg .Bytes ());};func (_gdac *PdfReader )newPdfAnnotationInkFromDict (_bfcf *_fda .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_baaf :=PdfAnnotationInk {};
_dagb ,_egb :=_gdac .newPdfAnnotationMarkupFromDict (_bfcf );if _egb !=nil {return nil ,_egb ;};_baaf .PdfAnnotationMarkup =_dagb ;_baaf .InkList =_bfcf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_baaf .BS =_bfcf .Get ("\u0042\u0053");return &_baaf ,nil ;
};func (_dcbaf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// String returns a string representation of what flags are set.
func (_bgfa FieldFlag )String ()string {_adce :="";if _bgfa ==FieldFlagClear {_adce ="\u0043\u006c\u0065a\u0072";return _adce ;};if _bgfa &FieldFlagReadOnly > 0{_adce +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bgfa &FieldFlagRequired > 0{_adce +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _bgfa &FieldFlagNoExport > 0{_adce +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bgfa &FieldFlagNoToggleToOff > 0{_adce +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bgfa &FieldFlagRadio > 0{_adce +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _bgfa &FieldFlagPushbutton > 0{_adce +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bgfa &FieldFlagRadiosInUnision > 0{_adce +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _bgfa &FieldFlagMultiline > 0{_adce +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _bgfa &FieldFlagPassword > 0{_adce +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bgfa &FieldFlagFileSelect > 0{_adce +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _bgfa &FieldFlagDoNotScroll > 0{_adce +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _bgfa &FieldFlagComb > 0{_adce +="\u007c\u0043\u006fm\u0062";};if _bgfa &FieldFlagRichText > 0{_adce +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _bgfa &FieldFlagDoNotSpellCheck > 0{_adce +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _bgfa &FieldFlagCombo > 0{_adce +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bgfa &FieldFlagEdit > 0{_adce +="\u007c\u0045\u0064i\u0074";};if _bgfa &FieldFlagSort > 0{_adce +="\u007c\u0053\u006fr\u0074";};if _bgfa &FieldFlagMultiSelect > 0{_adce +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _bgfa &FieldFlagCommitOnSelChange > 0{_adce +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _dc .Trim (_adce ,"\u007c");};

// GetContainingPdfObject implements interface PdfModel.
func (_fecc *PdfFilespec )GetContainingPdfObject ()_fda .PdfObject {return _fecc ._feba };func _afga (_edgga ,_fbccg string )string {if _dc .Contains (_edgga ,"\u002b"){_caedb :=_dc .Split (_edgga ,"\u002b");if len (_caedb )==2{_edgga =_caedb [1];};};return _fbccg +"\u002b"+_edgga ;
};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_eafeg :=&PdfAppender {_caee :reader ._ccefe ,Reader :reader ,_adca :reader ._edbag ,_debb :reader ._fbca };_cbef ,_affa :=_eafeg ._caee .Seek (0,_ed .SeekEnd );
if _affa !=nil {return nil ,_affa ;};_eafeg ._ccbed =_cbef ;if _ ,_affa =_eafeg ._caee .Seek (0,_ed .SeekStart );_affa !=nil {return nil ,_affa ;};_eafeg ._beg ,_affa =NewPdfReaderWithOpts (_eafeg ._caee ,opts );if _affa !=nil {return nil ,_affa ;};for _ ,_eed :=range _eafeg .Reader .GetObjectNums (){if _eafeg ._ccgf < _eed {_eafeg ._ccgf =_eed ;
};};_eafeg ._cbcg =_eafeg ._adca .GetXrefTable ();_eafeg ._fffe =_eafeg ._adca .GetXrefOffset ();_eafeg ._dgaa =append (_eafeg ._dgaa ,_eafeg ._beg .PageList ...);_eafeg ._ged =make (map[_fda .PdfObject ]struct{});_eafeg ._deecf =make (map[_fda .PdfObject ]int64 );
_eafeg ._fagc =make (map[_fda .PdfObject ]struct{});_eafeg ._ecca =_eafeg ._beg .AcroForm ;_eafeg ._dggf =_eafeg ._beg .DSS ;if opts !=nil {_eafeg ._ffcdc =opts .Password ;};if encryptOptions !=nil {_eafeg ._dccc =encryptOptions ;};return _eafeg ,nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfb *PdfColorspaceDeviceGray )ToPdfObject ()_fda .PdfObject {return _fda .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ToPdfObject implements interface PdfModel.
func (_eff *PdfActionThread )ToPdfObject ()_fda .PdfObject {_eff .PdfAction .ToPdfObject ();_aeg :=_eff ._ddd ;_ffd :=_aeg .PdfObject .(*_fda .PdfObjectDictionary );_ffd .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeThread )));if _eff .F !=nil {_ffd .Set ("\u0046",_eff .F .ToPdfObject ());
};_ffd .SetIfNotNil ("\u0044",_eff .D );_ffd .SetIfNotNil ("\u0042",_eff .B );return _aeg ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_bgaf *DSS )GetContainingPdfObject ()_fda .PdfObject {return _bgaf ._acfc };

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_afd :=NewPdfAnnotation ();_fcg :=&PdfAnnotationCircle {};_fcg .PdfAnnotation =_afd ;_fcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afd .SetContext (_fcg );return _fcg ;};

// A returns the value of the A component of the color.
func (_dedg *PdfColorCalRGB )A ()float64 {return _dedg [0]};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_fdce *_fda .PdfObjectDictionary ;};func _bcbdf (_fgcee *_fda .PdfObjectDictionary )(*PdfTilingPattern ,error ){_eebae :=&PdfTilingPattern {};_ddcbg :=_fgcee .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ddcbg ==nil {_ga .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ceec ,_geedc :=_ddcbg .(*_fda .PdfObjectInteger );if !_geedc {_ga .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddcbg );
return nil ,_fda .ErrTypeError ;};_eebae .PaintType =_ceec ;_ddcbg =_fgcee .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ddcbg ==nil {_ga .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bfgef ,_geedc :=_ddcbg .(*_fda .PdfObjectInteger );if !_geedc {_ga .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddcbg );
return nil ,_fda .ErrTypeError ;};_eebae .TilingType =_bfgef ;_ddcbg =_fgcee .Get ("\u0042\u0042\u006f\u0078");if _ddcbg ==nil {_ga .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ddcbg =_fda .TraceToDirectObject (_ddcbg );_fcdfb ,_geedc :=_ddcbg .(*_fda .PdfObjectArray );if !_geedc {_ga .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddcbg );
return nil ,_fda .ErrTypeError ;};_befd ,_bdfec :=NewPdfRectangle (*_fcdfb );if _bdfec !=nil {_ga .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bdfec );return nil ,_bdfec ;};_eebae .BBox =_befd ;_ddcbg =_fgcee .Get ("\u0058\u0053\u0074e\u0070");
if _ddcbg ==nil {_ga .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eeefe ,_bdfec :=_fda .GetNumberAsFloat (_ddcbg );if _bdfec !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_eeefe );
return nil ,_bdfec ;};_eebae .XStep =_fda .MakeFloat (_eeefe );_ddcbg =_fgcee .Get ("\u0059\u0053\u0074e\u0070");if _ddcbg ==nil {_ga .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fcffg ,_bdfec :=_fda .GetNumberAsFloat (_ddcbg );if _bdfec !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fcffg );
return nil ,_bdfec ;};_eebae .YStep =_fda .MakeFloat (_fcffg );_ddcbg =_fgcee .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ddcbg ==nil {_ga .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgcee ,_geedc =_fda .TraceToDirectObject (_ddcbg ).(*_fda .PdfObjectDictionary );if !_geedc {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddcbg );
};_dfbca ,_bdfec :=NewPdfPageResourcesFromDict (_fgcee );if _bdfec !=nil {return nil ,_bdfec ;};_eebae .Resources =_dfbca ;if _fgeg :=_fgcee .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fgeg !=nil {_begc ,_acbcg :=_fgeg .(*_fda .PdfObjectArray );if !_acbcg {_ga .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgeg );
return nil ,_fda .ErrTypeError ;};_eebae .Matrix =_begc ;};return _eebae ,nil ;};func _ceac (_baba *_fda .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dggg :=&PdfFieldChoice {};_dggg .Opt ,_ =_fda .GetArray (_baba .Get ("\u004f\u0070\u0074"));_dggg .TI ,_ =_fda .GetInt (_baba .Get ("\u0054\u0049"));
_dggg .I ,_ =_fda .GetArray (_baba .Get ("\u0049"));return _dggg ,nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_fegb *BorderStyle )GetPdfName ()string {switch *_fegb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_fcfgfa *PdfWriter )SetRotation (rotate int64 )error {_agcg ,_debg :=_fda .GetDict (_fcfgfa ._degfge );if !_debg {return ErrTypeCheck ;};_agcg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fda .MakeInteger (rotate ));return nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_eda :=NewPdfAction ();_eec :=&PdfActionGoToR {};_eec .PdfAction =_eda ;_eda .SetContext (_eec );return _eec ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_dcdcf *XObjectImage )ToImage ()(*Image ,error ){_ccfec :=&Image {};if _dcdcf .Height ==nil {return nil ,_ad .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_ccfec .Height =*_dcdcf .Height ;if _dcdcf .Width ==nil {return nil ,_ad .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ccfec .Width =*_dcdcf .Width ;if _dcdcf .BitsPerComponent ==nil {switch _dcdcf .Filter .(type ){case *_fda .CCITTFaxEncoder ,*_fda .JBIG2Encoder :_ccfec .BitsPerComponent =1;
case *_fda .LZWEncoder ,*_fda .RunLengthEncoder :_ccfec .BitsPerComponent =8;default:return nil ,_ad .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_ccfec .BitsPerComponent =*_dcdcf .BitsPerComponent ;};_ccfec .ColorComponents =_dcdcf .ColorSpace .GetNumComponents ();_dcdcf ._gcdcaa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fda .MakeInteger (int64 (_ccfec .ColorComponents )));
_bbega ,_gaacg :=_fda .DecodeStream (_dcdcf ._gcdcaa );if _gaacg !=nil {return nil ,_gaacg ;};_ccfec .Data =_bbega ;if _dcdcf .Decode !=nil {_ggbfca ,_gcbfe :=_dcdcf .Decode .(*_fda .PdfObjectArray );if !_gcbfe {_ga .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_afabe ,_gfdgff :=_ggbfca .ToFloat64Array ();if _gfdgff !=nil {return nil ,_gfdgff ;};_ccfec ._aefacf =_afabe ;};return _ccfec ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_eceb :=&PdfAction {};_eceb ._ddd =_fda .MakeIndirectObject (_fda .MakeDict ());return _eceb ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_dae *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_dae .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_dae ._ecca =acroForm ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_egabf *PdfWriter )SetOpenAction (dest _fda .PdfObject )error {if dest ==nil ||_fda .IsNullObject (dest ){return nil ;};_egabf ._ecegfe .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _egabf .addObjects (dest );
};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_gcgc *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_daaga *PdfReader )GetObjectNums ()[]int {return _daaga ._edbag .GetObjectNums ()};func (_dbff *PdfReader )newPdfAnnotation3DFromDict (_dgeb *_fda .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_dfdf :=PdfAnnotation3D {};_dfdf .T3DD =_dgeb .Get ("\u0033\u0044\u0044");
_dfdf .T3DV =_dgeb .Get ("\u0033\u0044\u0056");_dfdf .T3DA =_dgeb .Get ("\u0033\u0044\u0041");_dfdf .T3DI =_dgeb .Get ("\u0033\u0044\u0049");_dfdf .T3DB =_dgeb .Get ("\u0033\u0044\u0042");return &_dfdf ,nil ;};func (_babe *PdfFunctionType0 )processSamples ()error {_abef :=_cbc .ResampleBytes (_babe ._bfeg ,_babe .BitsPerSample );
_babe ._feca =_abef ;return nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_ebbbb *PdfPattern )IsTiling ()bool {return _ebbbb .PatternType ==1};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_bcgb ,_fbaa :=_ade .NewStdFontByName (HelveticaName );if !_fbaa {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_ecgbd :=_fdef (_bcgb );return &PdfFont {_fdbb :&_ecgbd };};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_cdecd *PdfColorspaceDeviceN )ToPdfObject ()_fda .PdfObject {_bcaf :=_fda .MakeArray (_fda .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bcaf .Append (_cdecd .ColorantNames );_bcaf .Append (_cdecd .AlternateSpace .ToPdfObject ());_bcaf .Append (_cdecd .TintTransform .ToPdfObject ());
if _cdecd .Attributes !=nil {_bcaf .Append (_cdecd .Attributes .ToPdfObject ());};if _cdecd ._cgbg !=nil {_cdecd ._cgbg .PdfObject =_bcaf ;return _cdecd ._cgbg ;};return _bcaf ;};

// ToInteger convert to an integer format.
func (_aebf *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cdec :=_f .Pow (2,float64 (bits ))-1;return uint32 (_cdec *_aebf .Val ());};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_ag .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ee .Time ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fda .PdfObject ;B _fda .PdfObject ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cae :=NewPdfAction ();_caeg :=&PdfActionMovie {};_caeg .PdfAction =_cae ;_cae .SetContext (_caeg );return _caeg ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_daef *PdfWriter )SetOptimizer (optimizer Optimizer ){_daef ._deefc =optimizer };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_dbeef :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_dbeef ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_edbag *_fda .PdfParser ;_cagbd _fda .PdfObject ;_ddgb *_fda .PdfIndirectObject ;_cfbbf *_fda .PdfObjectDictionary ;_afgcgb []*_fda .PdfIndirectObject ;PageList []*PdfPage ;_aceed int ;_debca *_fda .PdfObjectDictionary ;_agbacb *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_cbfdf *Permissions ;_dgefb map[*PdfReader ]*PdfReader ;_aefea []*PdfReader ;_bbgee *modelManager ;_cegf bool ;_fbca map[_fda .PdfObject ]struct{};_ccefe _ed .ReadSeeker ;_ggee string ;_gadbg bool ;_bbfdf *ReaderOpts ;
_cffea bool ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gedc :=map[rune ]int {};for _ ,_cbaa :=range text {_gedc [_cbaa ]++;};return _gedc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_dfad *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cffgg :=vals [0];if _cffgg < 0.0||_cffgg > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cffgg );
return nil ,ErrColorOutOfRange ;};_gbee :=vals [1];if _gbee < 0.0||_gbee > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gbee );return nil ,ErrColorOutOfRange ;
};_abgb :=vals [2];if _abgb < 0.0||_abgb > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abgb );return nil ,ErrColorOutOfRange ;};_befag :=NewPdfColorCalRGB (_cffgg ,_gbee ,_abgb );
return _befag ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func _dcgg (_ggab _fda .PdfObject ,_cafc *fontCommon )(*_bg .CMap ,error ){_dabdg ,_edfg :=_fda .GetStream (_ggab );if !_edfg {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ggab );
return nil ,_fda .ErrTypeError ;};_ggdga ,_bccde :=_fda .DecodeStream (_dabdg );if _bccde !=nil {return nil ,_bccde ;};_adefd ,_bccde :=_bg .LoadCmapFromData (_ggdga ,!_cafc .isCIDFont ());if _bccde !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_dabdg .ObjectNumber ,_bccde );
};return _adefd ,_bccde ;};func (_dagc fontCommon )asPdfObjectDictionary (_dcab string )*_fda .PdfObjectDictionary {if _dcab !=""&&_dagc ._bfgb !=""&&_dcab !=_dagc ._bfgb {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_dcab ,_dagc );
}else if _dcab ==""&&_dagc ._bfgb ==""{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dagc );
}else if _dagc ._bfgb ==""{_dagc ._bfgb =_dcab ;};_dada :=_fda .MakeDict ();_dada .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0046\u006f\u006e\u0074"));_dada .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fda .MakeName (_dagc ._fcdg ));
_dada .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName (_dagc ._bfgb ));if _dagc ._defd !=nil {_dada .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dagc ._defd .ToPdfObject ());};if _dagc ._gcef !=nil {_dada .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dagc ._gcef );
}else if _dagc ._gaega !=nil {_bcac ,_bdfb :=_dagc ._gaega .Stream ();if _bdfb !=nil {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bdfb );
}else {_dada .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bcac );};};return _dada ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_dadf *PdfPageResources )GetContainingPdfObject ()_fda .PdfObject {return _dadf ._gafg };func (_dgd *PdfReader )newPdfAnnotationMarkupFromDict (_cfb *_fda .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bggg :=&PdfAnnotationMarkup {};if _ead :=_cfb .Get ("\u0054");
_ead !=nil {_bggg .T =_ead ;};if _aaa :=_cfb .Get ("\u0050\u006f\u0070u\u0070");_aaa !=nil {_fgd ,_cgee :=_aaa .(*_fda .PdfIndirectObject );if !_cgee {if _ ,_eded :=_aaa .(*_fda .PdfObjectNull );!_eded {return nil ,_ad .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_aded ,_ccbg :=_dgd .newPdfAnnotationFromIndirectObject (_fgd );if _ccbg !=nil {return nil ,_ccbg ;};if _aded !=nil {_fgaf ,_gec :=_aded ._egca .(*PdfAnnotationPopup );if !_gec {return nil ,_ad .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_bggg .Popup =_fgaf ;};};};if _gafd :=_cfb .Get ("\u0043\u0041");_gafd !=nil {_bggg .CA =_gafd ;};if _bgfg :=_cfb .Get ("\u0052\u0043");_bgfg !=nil {_bggg .RC =_bgfg ;};if _bcdc :=_cfb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_bcdc !=nil {_bggg .CreationDate =_bcdc ;};if _gag :=_cfb .Get ("\u0049\u0052\u0054");_gag !=nil {_bggg .IRT =_gag ;};if _gdbg :=_cfb .Get ("\u0053\u0075\u0062\u006a");_gdbg !=nil {_bggg .Subj =_gdbg ;};if _eafe :=_cfb .Get ("\u0052\u0054");_eafe !=nil {_bggg .RT =_eafe ;
};if _dcce :=_cfb .Get ("\u0049\u0054");_dcce !=nil {_bggg .IT =_dcce ;};if _ggb :=_cfb .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ggb !=nil {_bggg .ExData =_ggb ;};return _bggg ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bdadd *PdfField )SetContext (ctx PdfModel ){_bdadd ._bbbg =ctx };func _gggfc (_acagg _ed .ReadSeeker ,_abbae *ReaderOpts ,_gfbfg bool ,_bcaga string )(*PdfReader ,error ){if _abbae ==nil {_abbae =NewReaderOpts ();};_dced :=*_abbae ;_ccega :=&PdfReader {_ccefe :_acagg ,_fbca :map[_fda .PdfObject ]struct{}{},_bbgee :_fdcaa (),_cegf :_abbae .LazyLoad ,_gadbg :_abbae .ComplianceMode ,_cffea :_gfbfg ,_bbfdf :&_dced };
_aaggc ,_bacc :=_fafde ("\u0072");if _bacc !=nil {return nil ,_bacc ;};_bacc =_gf .Track (_aaggc ,_bcaga );if _bacc !=nil {return nil ,_bacc ;};_ccega ._ggee =_aaggc ;var _caefe *_fda .PdfParser ;if !_ccega ._gadbg {_caefe ,_bacc =_fda .NewParser (_acagg );
}else {_caefe ,_bacc =_fda .NewCompliancePdfParser (_acagg );};if _bacc !=nil {return nil ,_bacc ;};_ccega ._edbag =_caefe ;_fddcd ,_bacc :=_ccega .IsEncrypted ();if _bacc !=nil {return nil ,_bacc ;};if !_fddcd {_bacc =_ccega .loadStructure ();if _bacc !=nil {return nil ,_bacc ;
};}else if _gfbfg {_aaedfg ,_cfgdg :=_ccega .Decrypt ([]byte (_abbae .Password ));if _cfgdg !=nil {return nil ,_cfgdg ;};if !_aaedfg {return nil ,_ad .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_ccega ._dgefb =make (map[*PdfReader ]*PdfReader );_ccega ._aefea =make ([]*PdfReader ,_caefe .GetRevisionNumber ());return _ccega ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fda .PdfObject ;H _fda .PdfObject ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bbbg PdfModel ;_dccfd *_fda .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fda .PdfObjectName ;T *_fda .PdfObjectString ;TU *_fda .PdfObjectString ;TM *_fda .PdfObjectString ;Ff *_fda .PdfObjectInteger ;
V _fda .PdfObject ;DV _fda .PdfObject ;AA _fda .PdfObject ;VariableText *VariableText ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fda .PdfObject ;};func (_egf *PdfReader )newPdfActionSoundFromDict (_fce *_fda .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_fce .Get ("\u0053\u006f\u0075n\u0064"),Volume :_fce .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_fce .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_fce .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_fce .Get ("\u004d\u0069\u0078")},nil ;
};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_accce *PdfColorspaceICCBased )GetContainingPdfObject ()_fda .PdfObject {return _accce ._eadf };func _dcdag (_faaad _fda .PdfObject )(map[_fd .CharCode ]float64 ,error ){if _faaad ==nil {return nil ,nil ;};_gdcef ,_aabge :=_fda .GetArray (_faaad );
if !_aabge {return nil ,nil ;};_caea :=map[_fd .CharCode ]float64 {};_adfae :=_gdcef .Len ();for _fdba :=0;_fdba < _adfae -1;_fdba ++{_adgf :=_fda .TraceToDirectObject (_gdcef .Get (_fdba ));_ggdgc ,_bfdfg :=_fda .GetIntVal (_adgf );if !_bfdfg {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_fdba ,_adgf );
};_fdba ++;if _fdba > _adfae -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gdcef );};_aafbf :=_fda .TraceToDirectObject (_gdcef .Get (_fdba ));
switch _aafbf .(type ){case *_fda .PdfObjectArray :_gfdga ,_ :=_fda .GetArray (_aafbf );if _geed ,_aede :=_gfdga .ToFloat64Array ();_aede ==nil {for _abgf :=0;_abgf < len (_geed );_abgf ++{_caea [_fd .CharCode (_ggdgc +_abgf )]=_geed [_abgf ];};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fdba ,_aafbf );
};case *_fda .PdfObjectInteger :_bcec ,_dabdb :=_fda .GetIntVal (_aafbf );if !_dabdb {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fdba ,_aafbf );
};_fdba ++;if _fdba > _adfae -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gdcef );};_cfdc :=_gdcef .Get (_fdba );_bcab ,_cfacea :=_fda .GetNumberAsFloat (_cfdc );
if _cfacea !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fdba ,_cfdc );};for _badg :=_ggdgc ;_badg <=_bcec ;
_badg ++{_caea [_fd .CharCode (_badg )]=_bcab ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fdba ,_aafbf );
};};return _caea ,nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_cdfcb *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _cdfcb ._bfbffb !=nil {return _cdfcb ._bfbffb ,nil ;};if _cdfcb .ColorSpace ==nil {return nil ,nil ;};_becga ,_dgfag :=_gfafb (_cdfcb .ColorSpace );if _dgfag !=nil {return nil ,_dgfag ;
};_cdfcb ._bfbffb =_becga ;return _cdfcb ._bfbffb ,nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_ebdgc *PdfPattern )GetContext ()PdfModel {return _ebdgc ._ccafc };

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dceag *PdfReader )CheckAccessRights (password []byte )(bool ,_ab .Permissions ,error ){return _dceag ._edbag .CheckAccessRights (password );};

// ToPdfObject implements interface PdfModel.
func (_fdag *PdfAnnotationUnderline )ToPdfObject ()_fda .PdfObject {_fdag .PdfAnnotation .ToPdfObject ();_dcgb :=_fdag ._fbb ;_ggbf :=_dcgb .PdfObject .(*_fda .PdfObjectDictionary );_fdag .PdfAnnotationMarkup .appendToPdfDictionary (_ggbf );_ggbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ggbf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fdag .QuadPoints );return _dcgb ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gbfbf *XObjectImage )SetFilter (encoder _fda .StreamEncoder )error {_ddgbb :=_gbfbf .Stream ;_eecc ,_ffgag :=_gbfbf .Filter .DecodeBytes (_ddgbb );if _ffgag !=nil {return _ffgag ;};_gbfbf .Filter =encoder ;encoder .UpdateParams (_gbfbf .getParamsDict ());
_ddgbb ,_ffgag =encoder .EncodeBytes (_eecc );if _ffgag !=nil {return _ffgag ;};_gbfbf .Stream =_ddgbb ;return nil ;};func (_aage *PdfReader )newPdfAnnotationPolyLineFromDict (_ffgc *_fda .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bfc :=PdfAnnotationPolyLine {};
_gdf ,_ebgb :=_aage .newPdfAnnotationMarkupFromDict (_ffgc );if _ebgb !=nil {return nil ,_ebgb ;};_bfc .PdfAnnotationMarkup =_gdf ;_bfc .Vertices =_ffgc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bfc .LE =_ffgc .Get ("\u004c\u0045");_bfc .BS =_ffgc .Get ("\u0042\u0053");
_bfc .IC =_ffgc .Get ("\u0049\u0043");_bfc .BE =_ffgc .Get ("\u0042\u0045");_bfc .IT =_ffgc .Get ("\u0049\u0054");_bfc .Measure =_ffgc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bfc ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cfgcf *PdfPattern )SetContext (ctx PdfModel ){_cfgcf ._ccafc =ctx };

// HasXObjectByName checks if has XObject resource by name.
func (_fafcf *PdfPage )HasXObjectByName (name _fda .PdfObjectName )bool {_ggcef ,_gbbd :=_fafcf .Resources .XObject .(*_fda .PdfObjectDictionary );if !_gbbd {return false ;};if _babce :=_ggcef .Get (name );_babce !=nil {return true ;};return false ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dcebf *PdfReader )GetPageLabels ()(_fda .PdfObject ,error ){_cecfg :=_fda .ResolveReference (_dcebf ._debca .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cecfg ==nil {return nil ,nil ;};if !_dcebf ._cegf {_dgbdb :=_dcebf .traverseObjectData (_cecfg );
if _dgbdb !=nil {return nil ,_dgbdb ;};};return _cecfg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fag *PdfActionImportData )ToPdfObject ()_fda .PdfObject {_fag .PdfAction .ToPdfObject ();_fbe :=_fag ._ddd ;_bcc :=_fbe .PdfObject .(*_fda .PdfObjectDictionary );_bcc .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeImportData )));if _fag .F !=nil {_bcc .Set ("\u0046",_fag .F .ToPdfObject ());
};return _fbe ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fda .PdfObjectInteger ;BitsPerComponent *_fda .PdfObjectInteger ;VerticesPerRow *_fda .PdfObjectInteger ;Decode *_fda .PdfObjectArray ;Function []PdfFunction ;};func (_faac *PdfWriter )writeOutlines ()error {if _faac ._cafac ==nil {return nil ;
};_ga .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_faac ._cafac );_gfbda :=_faac ._cafac .ToPdfObject ();_ga .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_gfbda ,_gfbda ,_gfbda );
_faac ._ecegfe .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_gfbda );_bdaad :=_faac .addObjects (_gfbda );if _bdaad !=nil {return _bdaad ;};return nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_fcfgf =subject };func (_efga *PdfAcroForm )filteredFields (_cfaf FieldFilterFunc ,_cbfcg bool )[]*PdfField {if _efga ==nil {return nil ;};return _bggf (_efga .Fields ,_cfaf ,_cbfcg );
};

// ParserMetadata gets the parser  metadata.
func (_eace *CompliancePdfReader )ParserMetadata ()_fda .ParserMetadata {if _eace ._cccg ==(_fda .ParserMetadata {}){_eace ._cccg ,_ =_eace ._edbag .ParserMetadata ();};return _eace ._cccg ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ecec *PdfFieldSignature )ToPdfObject ()_fda .PdfObject {if _ecec .PdfAnnotationWidget !=nil {_ecec .PdfAnnotationWidget .ToPdfObject ();};_ecec .PdfField .ToPdfObject ();_baff :=_ecec ._dccfd ;_gfbfd :=_baff .PdfObject .(*_fda .PdfObjectDictionary );
_gfbfd .SetIfNotNil ("\u0046\u0054",_fda .MakeName ("\u0053\u0069\u0067"));_gfbfd .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ecec .Lock );_gfbfd .SetIfNotNil ("\u0053\u0056",_ecec .SV );if _ecec .V !=nil {_gfbfd .SetIfNotNil ("\u0056",_ecec .V .ToPdfObject ());
};return _baff ;};

// ToPdfObject implements interface PdfModel.
func (_aada *PdfAnnotationHighlight )ToPdfObject ()_fda .PdfObject {_aada .PdfAnnotation .ToPdfObject ();_fbgf :=_aada ._fbb ;_aaee :=_fbgf .PdfObject .(*_fda .PdfObjectDictionary );_aada .PdfAnnotationMarkup .appendToPdfDictionary (_aaee );_aaee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_aaee .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aada .QuadPoints );return _fbgf ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bbcf *PdfFont )SubsetRegistered ()error {switch _fcaf :=_bbcf ._fdbb .(type ){case *pdfFontType0 :_bdfgb :=_fcaf .subsetRegistered ();if _bdfgb !=nil {_ga .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bdfgb );
return _bdfgb ;};if _fcaf ._adddf !=nil {if _fcaf ._bcgee !=nil {_fcaf ._bcgee .ToPdfObject ();};_fcaf .ToPdfObject ();};default:_ga .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_fcaf );
};return nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_fdgc :=NewPdfAnnotation ();_egff :=&PdfAnnotationWatermark {};_egff .PdfAnnotation =_fdgc ;_fdgc .SetContext (_egff );return _egff ;};

// GetAction returns the PDF action for the annotation link.
func (_efb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _efb ._gce !=nil {return _efb ._gce ,nil ;};if _efb .A ==nil {return nil ,nil ;};if _efb ._bbd ==nil {return nil ,nil ;};_fcfc ,_ccbe :=_efb ._bbd .loadAction (_efb .A );if _ccbe !=nil {return nil ,_ccbe ;
};_efb ._gce =_fcfc ;return _efb ._gce ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fda .PdfObjectInteger ;TilingType *_fda .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fda .PdfObjectFloat ;YStep *_fda .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fda .PdfObjectArray ;};
func (_fgaff *PdfReader )newPdfAnnotationSquareFromDict (_aafc *_fda .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_aec :=PdfAnnotationSquare {};_fbc ,_gfa :=_fgaff .newPdfAnnotationMarkupFromDict (_aafc );if _gfa !=nil {return nil ,_gfa ;};_aec .PdfAnnotationMarkup =_fbc ;
_aec .BS =_aafc .Get ("\u0042\u0053");_aec .IC =_aafc .Get ("\u0049\u0043");_aec .BE =_aafc .Get ("\u0042\u0045");_aec .RD =_aafc .Get ("\u0052\u0044");return &_aec ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fda .PdfObjectArray ;TI *_fda .PdfObjectInteger ;I *_fda .PdfObjectArray ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cdf :=NewPdfAction ();_gg :=&PdfActionSubmitForm {};_gg .PdfAction =_cdf ;_cdf .SetContext (_gg );return _gg ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ab .Permissions ;Algorithm EncryptionAlgorithm ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_egaeae DefaultImageHandler )Read (reader _ed .Reader )(*Image ,error ){_beecf ,_ ,_gcafe :=_eg .Decode (reader );if _gcafe !=nil {_ga .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gcafe );
return nil ,_gcafe ;};return _egaeae .NewImageFromGoImage (_beecf );};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_fbdb *PdfFieldButton )GetType ()ButtonType {_gede :=ButtonTypeCheckbox ;if _fbdb .Ff !=nil {if (uint32 (*_fbdb .Ff )&FieldFlagPushbutton .Mask ())> 0{_gede =ButtonTypePush ;}else if (uint32 (*_fbdb .Ff )&FieldFlagRadio .Mask ())> 0{_gede =ButtonTypeRadio ;
};};return _gede ;};func (_gfee *PdfReader )newPdfActionURIFromDict (_edb *_fda .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_edb .Get ("\u0055\u0052\u0049"),IsMap :_edb .Get ("\u0049\u0073\u004da\u0070")},nil ;};func (_dagf *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ggfc :=NewPdfAnnotation ();_fagb :=&PdfAnnotationScreen {};_fagb .PdfAnnotation =_ggfc ;_ggfc .SetContext (_fagb );return _fagb ;};

// ToPdfObject implements interface PdfModel.
func (_aad *PdfActionURI )ToPdfObject ()_fda .PdfObject {_aad .PdfAction .ToPdfObject ();_faa :=_aad ._ddd ;_fe :=_faa .PdfObject .(*_fda .PdfObjectDictionary );_fe .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeURI )));_fe .SetIfNotNil ("\u0055\u0052\u0049",_aad .URI );
_fe .SetIfNotNil ("\u0049\u0073\u004da\u0070",_aad .IsMap );return _faa ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_aeagb *_fda .PdfObjectDictionary ;_ecbd *_fda .PdfIndirectObject ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bdee *PdfFieldButton )IsRadio ()bool {return _bdee .GetType ()==ButtonTypeRadio };const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_bfeeaf *PdfPage )GetContentStreamObjs ()[]_fda .PdfObject {if _bfeeaf .Contents ==nil {return nil ;};_bebdc :=_fda .TraceToDirectObject (_bfeeaf .Contents );if _feagga ,_dgecg :=_bebdc .(*_fda .PdfObjectArray );_dgecg {return _feagga .Elements ();
};return []_fda .PdfObject {_bebdc };};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gbfb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agba ,_eaga :=_fda .GetNumbersAsFloat (objects );
if _eaga !=nil {return nil ,_eaga ;};return _gbfb .ColorFromFloats (_agba );};func (_dbbc *PdfWriter )checkLicense ()error {_fcdc :=_gf .GetLicenseKey ();if (_fcdc ==nil ||!_fcdc .IsLicensed ())&&!_baceb {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ad .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fda .PdfObject ;Sy _fda .PdfObject ;};func (_bbbda *pdfFontSimple )baseFields ()*fontCommon {return &_bbbda .fontCommon };func _edfcb (_efbc []byte )([]byte ,error ){_babed :=_bc .New ();
if _ ,_efafa :=_ed .Copy (_babed ,_dcc .NewReader (_efbc ));_efafa !=nil {return nil ,_efafa ;};return _babed .Sum (nil ),nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dggbd *Image )GetParamsDict ()*_fda .PdfObjectDictionary {_ffafgd :=_fda .MakeDict ();_ffafgd .Set ("\u0057\u0069\u0064t\u0068",_fda .MakeInteger (_dggbd .Width ));_ffafgd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fda .MakeInteger (_dggbd .Height ));
_ffafgd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fda .MakeInteger (int64 (_dggbd .ColorComponents )));_ffafgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fda .MakeInteger (_dggbd .BitsPerComponent ));
return _ffafgd ;};

// SetDate sets the `M` field of the signature.
func (_fgeb *PdfSignature )SetDate (date _ee .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_fgeb .M =_fda .MakeString (date .Format (format ));
};func (_babd *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edgge *PdfPageResourcesColorspaces )ToPdfObject ()_fda .PdfObject {_bceee :=_fda .MakeDict ();for _ ,_cbeeb :=range _edgge .Names {_bceee .Set (_fda .PdfObjectName (_cbeeb ),_edgge .Colorspaces [_cbeeb ].ToPdfObject ());};if _edgge ._adcac !=nil {_edgge ._adcac .PdfObject =_bceee ;
return _edgge ._adcac ;};return _bceee ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dbgc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebdbeb :=vals [0];if _ebdbeb < 0.0||_ebdbeb > 100.0{_ga .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ebdbeb );
return nil ,ErrColorOutOfRange ;};_cgea :=vals [1];_gaeb :=float64 (-100);_fgbb :=float64 (100);if len (_dbgc .Range )> 1{_gaeb =_dbgc .Range [0];_fgbb =_dbgc .Range [1];};if _cgea < _gaeb ||_cgea > _fgbb {_ga .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cgea ,_gaeb ,_fgbb );
return nil ,ErrColorOutOfRange ;};_bdfaf :=vals [2];_bac :=float64 (-100);_gbcg :=float64 (100);if len (_dbgc .Range )> 3{_bac =_dbgc .Range [2];_gbcg =_dbgc .Range [3];};if _bdfaf < _bac ||_bdfaf > _gbcg {_ga .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bdfaf ,_bac ,_gbcg );
return nil ,ErrColorOutOfRange ;};_dcba :=NewPdfColorLab (_ebdbeb ,_cgea ,_bdfaf );return _dcba ,nil ;};func (_cbag *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cbag .fontCommon };func _cgbea (_gffec *_fda .PdfObjectDictionary )(*PdfShadingType6 ,error ){_egebg :=PdfShadingType6 {};
_aadcg :=_gffec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aadcg ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcdbc ,_ebdfd :=_aadcg .(*_fda .PdfObjectInteger );if !_ebdfd {_ga .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aadcg );
return nil ,_fda .ErrTypeError ;};_egebg .BitsPerCoordinate =_dcdbc ;_aadcg =_gffec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aadcg ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dcdbc ,_ebdfd =_aadcg .(*_fda .PdfObjectInteger );if !_ebdfd {_ga .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aadcg );
return nil ,_fda .ErrTypeError ;};_egebg .BitsPerComponent =_dcdbc ;_aadcg =_gffec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aadcg ==nil {_ga .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcdbc ,_ebdfd =_aadcg .(*_fda .PdfObjectInteger );if !_ebdfd {_ga .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aadcg );
return nil ,_fda .ErrTypeError ;};_egebg .BitsPerComponent =_dcdbc ;_aadcg =_gffec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aadcg ==nil {_ga .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggefa ,_ebdfd :=_aadcg .(*_fda .PdfObjectArray );if !_ebdfd {_ga .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aadcg );
return nil ,_fda .ErrTypeError ;};_egebg .Decode =_ggefa ;if _egaeaec :=_gffec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_egaeaec !=nil {_egebg .Function =[]PdfFunction {};if _dgege ,_babda :=_egaeaec .(*_fda .PdfObjectArray );_babda {for _ ,_eagddf :=range _dgege .Elements (){_edece ,_efaa :=_agbac (_eagddf );
if _efaa !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efaa );return nil ,_efaa ;};_egebg .Function =append (_egebg .Function ,_edece );
};}else {_abcaff ,_cbcfg :=_agbac (_egaeaec );if _cbcfg !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbcfg );return nil ,_cbcfg ;
};_egebg .Function =append (_egebg .Function ,_abcaff );};};return &_egebg ,nil ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_fda .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_fda .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// ToPdfObject implements interface PdfModel.
func (_deg *PdfActionNamed )ToPdfObject ()_fda .PdfObject {_deg .PdfAction .ToPdfObject ();_bbb :=_deg ._ddd ;_cdc :=_bbb .PdfObject .(*_fda .PdfObjectDictionary );_cdc .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeNamed )));_cdc .SetIfNotNil ("\u004e",_deg .N );
return _bbb ;};func (_afg *PdfAppender )updateObjectsDeep (_dbbb _fda .PdfObject ,_efbe map[_fda .PdfObject ]struct{}){if _efbe ==nil {_efbe =map[_fda .PdfObject ]struct{}{};};if _ ,_dcea :=_efbe [_dbbb ];_dcea ||_dbbb ==nil {return ;};_efbe [_dbbb ]=struct{}{};
_aefd :=_fda .ResolveReferencesDeep (_dbbb ,_afg ._debb );if _aefd !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aefd );};switch _cbcc :=_dbbb .(type ){case *_fda .PdfIndirectObject :switch {case _cbcc .GetParser ()==_afg ._beg ._edbag :return ;
case _cbcc .GetParser ()==_afg .Reader ._edbag :_afff ,_ :=_afg ._beg .GetIndirectObjectByNumber (int (_cbcc .ObjectNumber ));_eaaa ,_fcdd :=_afff .(*_fda .PdfIndirectObject );if _fcdd &&_eaaa !=nil {if _eaaa .PdfObject !=_cbcc .PdfObject &&_eaaa .PdfObject .WriteString ()!=_cbcc .PdfObject .WriteString (){_afg .addNewObject (_dbbb );
_afg ._deecf [_dbbb ]=_cbcc .ObjectNumber ;};};default:_afg .addNewObject (_dbbb );};_afg .updateObjectsDeep (_cbcc .PdfObject ,_efbe );case *_fda .PdfObjectArray :for _ ,_ebfc :=range _cbcc .Elements (){_afg .updateObjectsDeep (_ebfc ,_efbe );};case *_fda .PdfObjectDictionary :for _ ,_dadgd :=range _cbcc .Keys (){_afg .updateObjectsDeep (_cbcc .Get (_dadgd ),_efbe );
};case *_fda .PdfObjectStreams :if _cbcc .GetParser ()!=_afg ._beg ._edbag {for _ ,_faad :=range _cbcc .Elements (){_afg .updateObjectsDeep (_faad ,_efbe );};};case *_fda .PdfObjectStream :switch {case _cbcc .GetParser ()==_afg ._beg ._edbag :return ;case _cbcc .GetParser ()==_afg .Reader ._edbag :if _gfec ,_bagd :=_afg ._beg ._edbag .LookupByReference (_cbcc .PdfObjectReference );
_bagd ==nil {var _beae bool ;if _bgc ,_gbed :=_fda .GetStream (_gfec );_gbed &&_dcc .Equal (_bgc .Stream ,_cbcc .Stream ){_beae =true ;};if _begb ,_agf :=_fda .GetDict (_gfec );_beae &&_agf {_beae =_begb .WriteString ()==_cbcc .PdfObjectDictionary .WriteString ();
};if _beae {return ;};};if _cbcc .ObjectNumber !=0{_afg ._deecf [_dbbb ]=_cbcc .ObjectNumber ;};default:if _ ,_bbaa :=_afg ._ged [_dbbb ];!_bbaa {_afg .addNewObject (_dbbb );};};_afg .updateObjectsDeep (_cbcc .PdfObjectDictionary ,_efbe );};};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);func (_agga *PdfReader )newPdfAnnotationRedactFromDict (_fbbf *_fda .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fdf :=PdfAnnotationRedact {};_fdgca ,_ddda :=_agga .newPdfAnnotationMarkupFromDict (_fbbf );if _ddda !=nil {return nil ,_ddda ;
};_fdf .PdfAnnotationMarkup =_fdgca ;_fdf .QuadPoints =_fbbf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fdf .IC =_fbbf .Get ("\u0049\u0043");_fdf .RO =_fbbf .Get ("\u0052\u004f");_fdf .OverlayText =_fbbf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fdf .Repeat =_fbbf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fdf .DA =_fbbf .Get ("\u0044\u0041");_fdf .Q =_fbbf .Get ("\u0051");return &_fdf ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_caaf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func (_bdeba *PdfReader )loadStructure ()error {if _bdeba ._edbag .GetCrypter ()!=nil &&!_bdeba ._edbag .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fdbe :=_bdeba ._edbag .GetTrailer ();if _fdbe ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bfbff ,_bfcg :=_fdbe .Get ("\u0052\u006f\u006f\u0074").(*_fda .PdfObjectReference );if !_bfcg {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_fdbe );
};_daafe ,_bgcbb :=_bdeba ._edbag .LookupByReference (*_bfbff );if _bgcbb !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bgcbb );
return _bgcbb ;};_eabec ,_bfcg :=_daafe .(*_fda .PdfIndirectObject );if !_bfcg {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_daafe ,*_fdbe );
return _ad .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dagaa ,_bfcg :=(*_eabec ).PdfObject .(*_fda .PdfObjectDictionary );if !_bfcg {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_eabec .PdfObject );
return _ad .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ga .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dagaa );_gfaag ,_bfcg :=_dagaa .Get ("\u0050\u0061\u0067e\u0073").(*_fda .PdfObjectReference );
if !_bfcg {return _ad .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_dadde ,_bgcbb :=_bdeba ._edbag .LookupByReference (*_gfaag );
if _bgcbb !=nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bgcbb ;};_cegc ,_bfcg :=_dadde .(*_fda .PdfIndirectObject );if !_bfcg {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ga .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_cegc );return _ad .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_baeb ,_bfcg :=_cegc .PdfObject .(*_fda .PdfObjectDictionary );if !_bfcg {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_cegc );
return _ad .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gecbb ,_bfcg :=_fda .GetInt (_baeb .Get ("\u0043\u006f\u0075n\u0074"));if !_bfcg {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ad .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_bfcg =_fda .GetName (_baeb .Get ("\u0054\u0079\u0070\u0065"));!_bfcg {_ga .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_baeb .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0050\u0061\u0067e\u0073"));};if _gegdc ,_bbac :=_fda .GetInt (_baeb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_bbac {_cacde :=int64 (*_gegdc );_bdeba .Rotate =&_cacde ;};_bdeba ._cagbd =_bfbff ;
_bdeba ._debca =_dagaa ;_bdeba ._cfbbf =_baeb ;_bdeba ._ddgb =_cegc ;_bdeba ._aceed =int (*_gecbb );_bdeba ._afgcgb =[]*_fda .PdfIndirectObject {};_aaeff :=map[_fda .PdfObject ]struct{}{};_bgcbb =_bdeba .buildPageList (_cegc ,nil ,_aaeff );if _bgcbb !=nil {return _bgcbb ;
};_ga .Log .Trace ("\u002d\u002d\u002d");_ga .Log .Trace ("\u0054\u004f\u0043");_ga .Log .Trace ("\u0050\u0061\u0067e\u0073");_ga .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bdeba ._afgcgb ),_bdeba ._afgcgb );_bdeba ._agbacb ,_bgcbb =_bdeba .loadOutlines ();
if _bgcbb !=nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bgcbb );
return _bgcbb ;};_bdeba .AcroForm ,_bgcbb =_bdeba .loadForms ();if _bgcbb !=nil {return _bgcbb ;};_bdeba .DSS ,_bgcbb =_bdeba .loadDSS ();if _bgcbb !=nil {return _bgcbb ;};_bdeba ._cbfdf ,_bgcbb =_bdeba .loadPerms ();if _bgcbb !=nil {return _bgcbb ;};return nil ;
};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ee .Time ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_dbdab =creationDate ;};func (_ffdf *PdfWriter )checkPendingObjects (){for _fcbfd ,_cggf :=range _ffdf ._feea {if !_ffdf .hasObject (_fcbfd ){_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_fcbfd ,_fcbfd ,_fcbfd );
for _ ,_acbbc :=range _cggf {for _ ,_dagd :=range _acbbc .Keys (){_gedfc :=_acbbc .Get (_dagd );if _gedfc ==_fcbfd {_ga .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_acbbc .Set (_dagd ,_fda .MakeNull ());break ;};};};};};};

// C returns the value of the cyan component of the color.
func (_gagag *PdfColorDeviceCMYK )C ()float64 {return _gagag [0]};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gfafd *PdfTilingPattern )ToPdfObject ()_fda .PdfObject {_gfafd .PdfPattern .ToPdfObject ();_dagfd :=_gfafd .getDict ();if _gfafd .PaintType !=nil {_dagfd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gfafd .PaintType );};if _gfafd .TilingType !=nil {_dagfd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gfafd .TilingType );
};if _gfafd .BBox !=nil {_dagfd .Set ("\u0042\u0042\u006f\u0078",_gfafd .BBox .ToPdfObject ());};if _gfafd .XStep !=nil {_dagfd .Set ("\u0058\u0053\u0074e\u0070",_gfafd .XStep );};if _gfafd .YStep !=nil {_dagfd .Set ("\u0059\u0053\u0074e\u0070",_gfafd .YStep );
};if _gfafd .Resources !=nil {_dagfd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gfafd .Resources .ToPdfObject ());};if _gfafd .Matrix !=nil {_dagfd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfafd .Matrix );};return _gfafd ._ccaef ;};func _dfcff ()string {_bcaeg .Lock ();
defer _bcaeg .Unlock ();return _cebgf };func (_bggce *PdfWriter )optimize ()error {if _bggce ._deefc ==nil {return nil ;};var _fafaa error ;_bggce ._adeed ,_fafaa =_bggce ._deefc .Optimize (_bggce ._adeed );if _fafaa !=nil {return _fafaa ;};_aaaea :=make (map[_fda .PdfObject ]struct{},len (_bggce ._adeed ));
for _ ,_dggfd :=range _bggce ._adeed {_aaaea [_dggfd ]=struct{}{};};_bggce ._cfeaa =_aaaea ;return nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_ggg :=NewPdfAnnotation ();_dfg :=&PdfAnnotationMovie {};_dfg .PdfAnnotation =_ggg ;_ggg .SetContext (_dfg );return _dfg ;};

// SetBorderWidth sets the style's border width.
func (_dbeb *PdfBorderStyle )SetBorderWidth (width float64 ){_dbeb .W =&width };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ac .File ,error ){const _edefg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fcfec ,_gcdgae :=_ac .Open (pdfFile );if _gcdgae !=nil {return nil ,nil ,_gcdgae ;};_ddae ,_gcdgae :=_gggfc (_fcfec ,opts ,true ,_edefg );if _gcdgae !=nil {_fcfec .Close ();return nil ,nil ,_gcdgae ;};return _ddae ,_fcfec ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gdfcg *PdfOutlineTreeNode )ToPdfObject ()_fda .PdfObject {return _gdfcg .GetContext ().ToPdfObject ();};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fda .PdfObjectStream )(*XObjectImage ,error ){_gcgff :=&XObjectImage {};_gcgff ._gcdcaa =stream ;_gdadd :=*(stream .PdfObjectDictionary );_eegbg ,_ageef :=_fda .NewEncoderFromStream (stream );if _ageef !=nil {return nil ,_ageef ;
};_gcgff .Filter =_eegbg ;if _fbad :=_fda .TraceToDirectObject (_gdadd .Get ("\u0057\u0069\u0064t\u0068"));_fbad !=nil {_dccdfg ,_ceffc :=_fbad .(*_fda .PdfObjectInteger );if !_ceffc {return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cggd :=int64 (*_dccdfg );_gcgff .Width =&_cggd ;}else {return nil ,_ad .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gbfd :=_fda .TraceToDirectObject (_gdadd .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gbfd !=nil {_cabe ,_aeebd :=_gbfd .(*_fda .PdfObjectInteger );if !_aeebd {return nil ,_ad .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_egfb :=int64 (*_cabe );
_gcgff .Height =&_egfb ;}else {return nil ,_ad .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _dgecf :=_fda .TraceToDirectObject (_gdadd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_dgecf !=nil {_effafa ,_bgdbf :=NewPdfColorspaceFromPdfObject (_dgecf );if _bgdbf !=nil {return nil ,_bgdbf ;};_gcgff .ColorSpace =_effafa ;}else {_ga .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_gcgff .ColorSpace =NewPdfColorspaceDeviceGray ();};if _gdgcc :=_fda .TraceToDirectObject (_gdadd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_gdgcc !=nil {_baeae ,_ebega :=_gdgcc .(*_fda .PdfObjectInteger );
if !_ebega {return nil ,_ad .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bdacd :=int64 (*_baeae );_gcgff .BitsPerComponent =&_bdacd ;};_gcgff .Intent =_gdadd .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_gcgff .ImageMask =_gdadd .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_gcgff .Mask =_gdadd .Get ("\u004d\u0061\u0073\u006b");_gcgff .Decode =_gdadd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_gcgff .Interpolate =_gdadd .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_gcgff .Alternatives =_gdadd .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_gcgff .SMask =_gdadd .Get ("\u0053\u004d\u0061s\u006b");_gcgff .SMaskInData =_gdadd .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_gcgff .Matte =_gdadd .Get ("\u004d\u0061\u0074t\u0065");_gcgff .Name =_gdadd .Get ("\u004e\u0061\u006d\u0065");_gcgff .StructParent =_gdadd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gcgff .ID =_gdadd .Get ("\u0049\u0044");
_gcgff .OPI =_gdadd .Get ("\u004f\u0050\u0049");_gcgff .Metadata =_gdadd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gcgff .OC =_gdadd .Get ("\u004f\u0043");_gcgff .Stream =stream .Stream ;return _gcgff ,nil ;};

// Encoder returns the font's text encoder.
func (_gecce pdfFontType0 )Encoder ()_fd .TextEncoder {return _gecce ._bcgee };func _bgdc (_dggd *_fda .PdfObjectDictionary ){_fdbbf ,_ffae :=_fda .GetArray (_dggd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_ccd ,_fcedg :=_fda .GetIntVal (_dggd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_fbcc ,_edad :=_fda .GetIntVal (_dggd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _ffae &&_fcedg &&_edad {_fdac :=_fdbbf .Len ();if _fdac !=_fbcc -_ccd +1{_ga .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_fdac ,_fbcc );
_bfgd :=_fda .PdfObjectInteger (_ccd +_fdac -1);_dggd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_bfgd );};};};type pdfFontType3 struct{fontCommon ;_ddef *_fda .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _fda .PdfObject ;Encoding _fda .PdfObject ;FontBBox _fda .PdfObject ;FontMatrix _fda .PdfObject ;FirstChar _fda .PdfObject ;LastChar _fda .PdfObject ;Widths _fda .PdfObject ;Resources _fda .PdfObject ;_efea map[_fd .CharCode ]float64 ;_egcbe _fd .TextEncoder ;
};

// GetNumComponents returns the number of color components (3 for RGB).
func (_efcg *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func _cgcg (_afgead *_fda .PdfObjectDictionary ,_ddfa *fontCommon ,_ddgaa _fd .TextEncoder )(*pdfFontSimple ,error ){_cbcd :=_dcfaf (_ddfa );_cbcd ._dgaaa =_ddgaa ;if _ddgaa ==nil {_gadba :=_afgead .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _gadba ==nil {_gadba =_fda .MakeInteger (0);};_cbcd .FirstChar =_gadba ;_bgdgb ,_bcabe :=_fda .GetIntVal (_gadba );if !_bcabe {_ga .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gadba );
return nil ,_fda .ErrTypeError ;};_aaga :=_fd .CharCode (_bgdgb );_gadba =_afgead .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gadba ==nil {_gadba =_fda .MakeInteger (255);};_cbcd .LastChar =_gadba ;_bgdgb ,_bcabe =_fda .GetIntVal (_gadba );
if !_bcabe {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gadba );return nil ,_fda .ErrTypeError ;
};_aedgg :=_fd .CharCode (_bgdgb );_cbcd ._ffbd =make (map[_fd .CharCode ]float64 );_gadba =_afgead .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gadba !=nil {_cbcd .Widths =_gadba ;_gegee ,_fcea :=_fda .GetArray (_gadba );if !_fcea {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gadba );
return nil ,_fda .ErrTypeError ;};_bfeea ,_egadf :=_gegee .ToFloat64Array ();if _egadf !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_egadf ;};if len (_bfeea )!=int (_aedgg -_aaga +1){_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_aedgg -_aaga +1,len (_bfeea ));
return nil ,_fda .ErrRangeError ;};for _adfda ,_bffa :=range _bfeea {_cbcd ._ffbd [_aaga +_fd .CharCode (_adfda )]=_bffa ;};};};_cbcd .Encoding =_fda .TraceToDirectObject (_afgead .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cbcd ,nil ;
};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_efdb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_efdb .Mask ()&^fl .Mask ())};

// Encrypt encrypts the output file with a specified user/owner password.
func (_gecad *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gbeee :=RC4_128bit ;if options !=nil {_gbeee =options .Algorithm ;};_bgeed :=_ab .PermOwner ;if options !=nil {_bgeed =options .Permissions ;};var _bffae _edc .Filter ;
switch _gbeee {case RC4_128bit :_bffae =_edc .NewFilterV2 (16);case AES_128bit :_bffae =_edc .NewFilterAESV2 ();case AES_256bit :_bffae =_edc .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_becce ,_abad ,_fdced :=_fda .PdfCryptNewEncrypt (_bffae ,userPass ,ownerPass ,_bgeed );if _fdced !=nil {return _fdced ;};_gecad ._aecdf =_becce ;if _abad .Major !=0{_gecad .SetVersion (_abad .Major ,_abad .Minor );};_gecad ._ddgfc =_abad .Encrypt ;_gecad ._cdad ,_gecad ._egeddb =_abad .ID0 ,_abad .ID1 ;
_cgdfc :=_fda .MakeIndirectObject (_abad .Encrypt );_gecad ._ggdcb =_cgdfc ;_gecad .addObject (_cgdfc );return nil ;};func (_eae *PdfReader )newPdfActionGotoFromDict (_aacg *_fda .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_aacg .Get ("\u0044")},nil ;
};

// ParsePdfObject parses input pdf object into given output intent.
func (_dddgg *PdfOutputIntent )ParsePdfObject (object _fda .PdfObject )error {_facdb ,_afcfg :=_fda .GetDict (object );if !_afcfg {_ga .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ad .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_dddgg ._fdce =_facdb ;_dddgg .Type ,_ =_facdb .GetString ("\u0054\u0079\u0070\u0065");_cffbg ,_afcfg :=_facdb .GetString ("\u0053");if _afcfg {switch _cffbg {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_dddgg .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_dddgg .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_dddgg .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_dddgg .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_dddgg .S =PdfOutputIntentTypeX ;
};};_dddgg .OutputCondition ,_ =_facdb .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_dddgg .OutputConditionIdentifier ,_ =_facdb .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_dddgg .RegistryName ,_ =_facdb .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_dddgg .Info ,_ =_facdb .GetString ("\u0049\u006e\u0066\u006f");if _bcbga ,_cfeaf :=_fda .GetStream (_facdb .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_cfeaf {_dddgg .ColorComponents ,_ =_fda .GetIntVal (_bcbga .Get ("\u004e"));_afdf ,_abaaa :=_fda .DecodeStream (_bcbga );if _abaaa !=nil {return _abaaa ;};_dddgg .DestOutputProfile =_afdf ;};return nil ;};

// Fill populates `form` with values provided by `provider`.
func (_ggda *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ggda .fill (provider ,nil )};

// HasFontByName checks if has font resource by name.
func (_afgae *PdfPage )HasFontByName (name _fda .PdfObjectName )bool {_efcbb ,_aefdb :=_afgae .Resources .Font .(*_fda .PdfObjectDictionary );if !_aefdb {return false ;};if _cefdb :=_efcbb .Get (name );_cefdb !=nil {return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_gc *PdfActionSound )ToPdfObject ()_fda .PdfObject {_gc .PdfAction .ToPdfObject ();_df :=_gc ._ddd ;_fcce :=_df .PdfObject .(*_fda .PdfObjectDictionary );_fcce .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeSound )));_fcce .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gc .Sound );
_fcce .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gc .Volume );_fcce .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gc .Synchronous );_fcce .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gc .Repeat );_fcce .SetIfNotNil ("\u004d\u0069\u0078",_gc .Mix );
return _df ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_abgegf *PdfPageResources )GenerateXObjectName ()_fda .PdfObjectName {_egcea :=1;for {_ebadf :=_fda .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_egcea ));if !_abgegf .HasXObjectByName (*_ebadf ){return *_ebadf ;};_egcea ++;};};


// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_fda .PdfObjectString ;Author *_fda .PdfObjectString ;Subject *_fda .PdfObjectString ;Keywords *_fda .PdfObjectString ;Creator *_fda .PdfObjectString ;Producer *_fda .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_fda .PdfObjectName ;_dddbe *_fda .PdfObjectDictionary ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_fda .PdfObjectName ;P *_fda .PdfObjectInteger ;V *_fda .PdfObjectName ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_gcgfa *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_cbdef :=_gcgfa ._edbag .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _cbdef {return nil ,_ad .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_cbdef {return _gcgfa ,nil ;};if _gcgfa ._aefea [revisionNumber ]!=nil {return _gcgfa ._aefea [revisionNumber ],nil ;};_cabfa :=_gcgfa ;for _gcbaba :=_cbdef -1;_gcbaba >=revisionNumber ;_gcbaba --{_dfdca ,_fdgd :=_cabfa .GetPreviousRevision ();
if _fdgd !=nil {return nil ,_fdgd ;};_gcgfa ._aefea [_gcbaba ]=_dfdca ;_cabfa =_dfdca ;};return _cabfa ,nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_bbbdb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_bcca :=_bbbdb .fill (provider ,appGen );if _bcca !=nil {return _bcca ;};if _ ,_efbda :=provider .(FieldImageProvider );_efbda {_bcca =_bbbdb .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _bcca ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fda .PdfObject ;MK _fda .PdfObject ;A _fda .PdfObject ;AA _fda .PdfObject ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fda .PdfObjectArray ;_dcfe *Image ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_dagcd *_fda .PdfObjectDictionary ;Type *_fda .PdfObjectName ;TransformMethod *_fda .PdfObjectName ;TransformParams _fda .PdfObject ;Data _fda .PdfObject ;DigestMethod *_fda .PdfObjectName ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_cag :=NewPdfAnnotation ();_bcd :=&PdfAnnotationFreeText {};_bcd .PdfAnnotation =_cag ;_bcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cag .SetContext (_bcd );return _bcd ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_deebf *modelManager )GetPrimitiveFromModel (model PdfModel )_fda .PdfObject {_eaccd ,_daecb :=_deebf ._cagg [model ];if !_daecb {return nil ;};return _eaccd ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func _befg (_edff _fda .PdfObject )(*PdfFontDescriptor ,error ){_dfeb :=&PdfFontDescriptor {};_edff =_fda .ResolveReference (_edff );if _eecgb ,_gagaf :=_edff .(*_fda .PdfIndirectObject );
_gagaf {_dfeb ._fdcb =_eecgb ;_edff =_eecgb .PdfObject ;};_eagg ,_agbc :=_fda .GetDict (_edff );if !_agbc {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edff );
return nil ,_fda .ErrTypeError ;};if _feedc :=_eagg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_feedc !=nil {_dfeb .FontName =_feedc ;}else {_ga .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_ceae ,_ :=_fda .GetName (_dfeb .FontName );if _fged :=_eagg .Get ("\u0054\u0079\u0070\u0065");_fged !=nil {_dfgd ,_abgecg :=_fged .(*_fda .PdfObjectName );if !_abgecg ||string (*_dfgd )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ga .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fged ,_ceae ,_dfeb .FontName );
};}else {_ga .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ceae ,_dfeb .FontName );
};_dfeb .FontFamily =_eagg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_dfeb .FontStretch =_eagg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_dfeb .FontWeight =_eagg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_dfeb .Flags =_eagg .Get ("\u0046\u006c\u0061g\u0073");_dfeb .FontBBox =_eagg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_dfeb .ItalicAngle =_eagg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_dfeb .Ascent =_eagg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_dfeb .Descent =_eagg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_dfeb .Leading =_eagg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_dfeb .CapHeight =_eagg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_dfeb .XHeight =_eagg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_dfeb .StemV =_eagg .Get ("\u0053\u0074\u0065m\u0056");_dfeb .StemH =_eagg .Get ("\u0053\u0074\u0065m\u0048");_dfeb .AvgWidth =_eagg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_dfeb .MaxWidth =_eagg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_dfeb .MissingWidth =_eagg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_dfeb .FontFile =_eagg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_dfeb .FontFile2 =_eagg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_dfeb .FontFile3 =_eagg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_dfeb .CharSet =_eagg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_dfeb .Style =_eagg .Get ("\u0053\u0074\u0079l\u0065");_dfeb .Lang =_eagg .Get ("\u004c\u0061\u006e\u0067");
_dfeb .FD =_eagg .Get ("\u0046\u0044");_dfeb .CIDSet =_eagg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _dfeb .Flags !=nil {if _adcdg ,_fefb :=_fda .GetIntVal (_dfeb .Flags );_fefb {_dfeb ._gdae =_adcdg ;};};if _dfeb .MissingWidth !=nil {if _eabdg ,_agef :=_fda .GetNumberAsFloat (_dfeb .MissingWidth );
_agef ==nil {_dfeb ._bcdgg =_eabdg ;};};if _dfeb .FontFile !=nil {_dgge ,_bcdae :=_ccge (_dfeb .FontFile );if _bcdae !=nil {return _dfeb ,_bcdae ;};_ga .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_dgge );_dfeb .fontFile =_dgge ;
};if _dfeb .FontFile2 !=nil {_abdd ,_agda :=_ade .NewFontFile2FromPdfObject (_dfeb .FontFile2 );if _agda !=nil {return _dfeb ,_agda ;};_ga .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_abdd .String ());_dfeb ._dfceg =&_abdd ;
};return _dfeb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fffba *PdfShadingType3 )ToPdfObject ()_fda .PdfObject {_fffba .PdfShading .ToPdfObject ();_cbeaa ,_ddfeb :=_fffba .getShadingDict ();if _ddfeb !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fffba .Coords !=nil {_cbeaa .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fffba .Coords );};if _fffba .Domain !=nil {_cbeaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fffba .Domain );};if _fffba .Function !=nil {if len (_fffba .Function )==1{_cbeaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fffba .Function [0].ToPdfObject ());
}else {_faaefc :=_fda .MakeArray ();for _ ,_fcbb :=range _fffba .Function {_faaefc .Append (_fcbb .ToPdfObject ());};_cbeaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_faaefc );};};if _fffba .Extend !=nil {_cbeaa .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fffba .Extend );
};return _fffba ._edgffb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gggac pdfCIDFontType2 )GetRuneMetrics (r rune )(_ade .CharMetrics ,bool ){_geag ,_fbedg :=_gggac ._bcaea [r ];if !_fbedg {_efaga ,_begaf :=_fda .GetInt (_gggac .DW );if !_begaf {return _ade .CharMetrics {},false ;};_geag =int (*_efaga );};return _ade .CharMetrics {Wx :float64 (_geag )},true ;
};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_bdbc *PdfFieldButton )SetType (btype ButtonType ){_deab :=uint32 (0);if _bdbc .Ff !=nil {_deab =uint32 (*_bdbc .Ff );};switch btype {case ButtonTypePush :_deab |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_deab |=FieldFlagRadio .Mask ();
};_bdbc .Ff =_fda .MakeInteger (int64 (_deab ));};

// ReplacePage replaces the original page to a new page.
func (_efg *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_degb :=pageNum -1;for _bdbb :=range _efg ._dgaa {if _bdbb ==_degb {_bade :=page .Duplicate ();_afdd (_bade );_efg ._dgaa [_bdbb ]=_bade ;};};};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_fffgg =title };type pdfCIDFontType2 struct{fontCommon ;_gafcab *_fda .PdfIndirectObject ;_gadbf _fd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fda .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fda .PdfObject ;W _fda .PdfObject ;DW2 _fda .PdfObject ;W2 _fda .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fda .PdfObject ;_badddg map[_fd .CharCode ]float64 ;_gcfe float64 ;_bcaea map[rune ]int ;};

// GetContentStream returns the pattern cell's content stream
func (_gdcb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cddc ,_ ,_dbde :=_gdcb .GetContentStreamWithEncoder ();return _cddc ,_dbde ;};func _eacdd (_fdaab *_fda .PdfObjectDictionary )(*PdfShadingType1 ,error ){_egea :=PdfShadingType1 {};if _fabcd :=_fdaab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_fabcd !=nil {_fabcd =_fda .TraceToDirectObject (_fabcd );_cdfde ,_cgdfe :=_fabcd .(*_fda .PdfObjectArray );if !_cgdfe {_ga .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fabcd );
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egea .Domain =_cdfde ;};if _efgbb :=_fdaab .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_efgbb !=nil {_efgbb =_fda .TraceToDirectObject (_efgbb );
_aaaac ,_gcdda :=_efgbb .(*_fda .PdfObjectArray );if !_gcdda {_ga .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efgbb );return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_egea .Matrix =_aaaac ;};_gbeaa :=_fdaab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gbeaa ==nil {_ga .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_egea .Function =[]PdfFunction {};if _fggb ,_ecdc :=_gbeaa .(*_fda .PdfObjectArray );_ecdc {for _ ,_egafb :=range _fggb .Elements (){_eebfa ,_fcfcb :=_agbac (_egafb );if _fcfcb !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcfcb );
return nil ,_fcfcb ;};_egea .Function =append (_egea .Function ,_eebfa );};}else {_gdedd ,_edfa :=_agbac (_gbeaa );if _edfa !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edfa );
return nil ,_edfa ;};_egea .Function =append (_egea .Function ,_gdedd );};return &_egea ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_fcdab ,_ggga :=NewStandard14Font (basefont );if _ggga !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _fcdab ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_adbg *PdfFieldButton )IsCheckbox ()bool {return _adbg .GetType ()==ButtonTypeCheckbox };

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ade .CharMetrics ;

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToPdfObject implements interface PdfModel.
func (_adg *PdfActionSetOCGState )ToPdfObject ()_fda .PdfObject {_adg .PdfAction .ToPdfObject ();_gcc :=_adg ._ddd ;_adb :=_gcc .PdfObject .(*_fda .PdfObjectDictionary );_adb .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeSetOCGState )));_adb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_adg .State );
_adb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_adg .PreserveRB );return _gcc ;};func _abce (_eegf _fda .PdfObject )(*PdfBorderStyle ,error ){_cbe :=&PdfBorderStyle {};_cbe ._fadg =_eegf ;var _bbe *_fda .PdfObjectDictionary ;
_eegf =_fda .TraceToDirectObject (_eegf );_bbe ,_gdca :=_eegf .(*_fda .PdfObjectDictionary );if !_gdca {return nil ,_ad .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ccac :=_bbe .Get ("\u0054\u0079\u0070\u0065");_ccac !=nil {_aedg ,_fdd :=_ccac .(*_fda .PdfObjectName );
if !_fdd {_ga .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ccac );
}else {if *_aedg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ga .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_aedg );};};};if _bfe :=_bbe .Get ("\u0057");
_bfe !=nil {_beeda ,_gacg :=_fda .GetNumberAsFloat (_bfe );if _gacg !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gacg );return nil ,_gacg ;};_cbe .W =&_beeda ;
};if _ccba :=_bbe .Get ("\u0053");_ccba !=nil {_bbg ,_beb :=_ccba .(*_fda .PdfObjectName );if !_beb {return nil ,_ad .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dedc BorderStyle ;switch *_bbg {case "\u0053":_dedc =BorderStyleSolid ;case "\u0044":_dedc =BorderStyleDashed ;case "\u0042":_dedc =BorderStyleBeveled ;case "\u0049":_dedc =BorderStyleInset ;case "\u0055":_dedc =BorderStyleUnderline ;default:_ga .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bbg );
return nil ,_ad .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cbe .S =&_dedc ;};if _fgcd :=_bbe .Get ("\u0044");_fgcd !=nil {_fcec ,_gef :=_fgcd .(*_fda .PdfObjectArray );
if !_gef {_ga .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fgcd );return nil ,_ad .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_aabg ,_gabf :=_fcec .ToIntegerArray ();if _gabf !=nil {_ga .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_gabf );
return nil ,_gabf ;};_cbe .D =&_aabg ;};return _cbe ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_ecaba *PdfFieldButton )GetFillImage ()*Image {if _ecaba .IsPush (){return _ecaba ._dcfe ;};return nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_dfbfe *VRI )ToPdfObject ()*_fda .PdfObjectDictionary {_cfad :=_fda .MakeDict ();_cfad .SetIfNotNil (_fda .PdfObjectName ("\u0043\u0065\u0072\u0074"),_adgcf (_dfbfe .Cert ));_cfad .SetIfNotNil (_fda .PdfObjectName ("\u004f\u0043\u0053\u0050"),_adgcf (_dfbfe .OCSP ));
_cfad .SetIfNotNil (_fda .PdfObjectName ("\u0043\u0052\u004c"),_adgcf (_dfbfe .CRL ));_cfad .SetIfNotNil ("\u0054\u0055",_dfbfe .TU );_cfad .SetIfNotNil ("\u0054\u0053",_dfbfe .TS );return _cfad ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_cefb *pdfCIDFontType2 )ToPdfObject ()_fda .PdfObject {if _cefb ._gafcab ==nil {_cefb ._gafcab =&_fda .PdfIndirectObject {};};_dagbg :=_cefb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_cefb ._gafcab .PdfObject =_dagbg ;if _cefb .CIDSystemInfo !=nil {_dagbg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_cefb .CIDSystemInfo );};if _cefb .DW !=nil {_dagbg .Set ("\u0044\u0057",_cefb .DW );};if _cefb .DW2 !=nil {_dagbg .Set ("\u0044\u0057\u0032",_cefb .DW2 );
};if _cefb .W !=nil {_dagbg .Set ("\u0057",_cefb .W );};if _cefb .W2 !=nil {_dagbg .Set ("\u0057\u0032",_cefb .W2 );};if _cefb .CIDToGIDMap !=nil {_dagbg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_cefb .CIDToGIDMap );};return _cefb ._gafcab ;
};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eggef *PdfPageResources )SetColorspaceByName (keyName _fda .PdfObjectName ,cs PdfColorspace )error {_fdfd ,_fcfg :=_eggef .GetColorspaces ();if _fcfg !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fcfg );
return _fcfg ;};if _fdfd ==nil {_fdfd =NewPdfPageResourcesColorspaces ();_eggef .SetColorSpace (_fdfd );};_fdfd .Set (keyName ,cs );return nil ;};func (_cdcd *PdfReader )newPdfAnnotationScreenFromDict (_fba *_fda .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_dfe :=PdfAnnotationScreen {};
_dfe .T =_fba .Get ("\u0054");_dfe .MK =_fba .Get ("\u004d\u004b");_dfe .A =_fba .Get ("\u0041");_dfe .AA =_fba .Get ("\u0041\u0041");return &_dfe ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_gbga *PdfPage )AppendContentStream (contentStr string )error {_bcfdd ,_fgcdgc :=_gbga .GetContentStreams ();if _fgcdgc !=nil {return _fgcdgc ;};if len (_bcfdd )==0{_bcfdd =[]string {contentStr };return _gbga .SetContentStreams (_bcfdd ,_fda .NewFlateEncoder ());
};var _egcdd _dcc .Buffer ;_egcdd .WriteString (_bcfdd [len (_bcfdd )-1]);_egcdd .WriteString ("\u000a");_egcdd .WriteString (contentStr );_bcfdd [len (_bcfdd )-1]=_egcdd .String ();return _gbga .SetContentStreams (_bcfdd ,_fda .NewFlateEncoder ());};

// ToPdfObject returns the PDF representation of the function.
func (_egaee *PdfFunctionType3 )ToPdfObject ()_fda .PdfObject {_dafcg :=_fda .MakeDict ();_dafcg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fda .MakeInteger (3));_bbfa :=&_fda .PdfObjectArray {};for _ ,_bgbb :=range _egaee .Domain {_bbfa .Append (_fda .MakeFloat (_bgbb ));
};_dafcg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbfa );if _egaee .Range !=nil {_aedb :=&_fda .PdfObjectArray {};for _ ,_fcefg :=range _egaee .Range {_aedb .Append (_fda .MakeFloat (_fcefg ));};_dafcg .Set ("\u0052\u0061\u006eg\u0065",_aedb );};if _egaee .Functions !=nil {_fbdaa :=&_fda .PdfObjectArray {};
for _ ,_ccece :=range _egaee .Functions {_fbdaa .Append (_ccece .ToPdfObject ());};_dafcg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_fbdaa );};if _egaee .Bounds !=nil {_ccada :=&_fda .PdfObjectArray {};for _ ,_bbceg :=range _egaee .Bounds {_ccada .Append (_fda .MakeFloat (_bbceg ));
};_dafcg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_ccada );};if _egaee .Encode !=nil {_agaca :=&_fda .PdfObjectArray {};for _ ,_dcddd :=range _egaee .Encode {_agaca .Append (_fda .MakeFloat (_dcddd ));};_dafcg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_agaca );
};if _egaee ._fgbfgd !=nil {_egaee ._fgbfgd .PdfObject =_dafcg ;return _egaee ._fgbfgd ;};return _dafcg ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_bceea *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fda .GetNumberAsFloat (_bceea .Descent );};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_feaed *Image )GetSamples ()[]uint32 {_gbeb :=_cbc .ResampleBytes (_feaed .Data ,int (_feaed .BitsPerComponent ));if _feaed .BitsPerComponent < 8{_gbeb =_feaed .samplesTrimPadding (_gbeb );};_edggd :=int (_feaed .Width )*int (_feaed .Height )*_feaed .ColorComponents ;
if len (_gbeb )< _edggd {_ga .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_gbeb ),_edggd );
return _gbeb ;}else if len (_gbeb )> _edggd {_ga .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_gbeb ),_edggd );
_gbeb =_gbeb [:_edggd ];};return _gbeb ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_ecdfa *PdfReader )GetOutlines ()(*Outline ,error ){if _ecdfa ==nil {return nil ,_ad .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_dbdea :=_ecdfa .GetOutlineTree ();if _dbdea ==nil {return nil ,_ad .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fecf func (_faeec *PdfOutlineTreeNode ,_adddb *[]*OutlineItem );_fecf =func (_gcccc *PdfOutlineTreeNode ,_gcdcc *[]*OutlineItem ){if _gcccc ==nil {return ;};if _gcccc ._bgddeb ==nil {_ga .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _fbcgg *OutlineItem ;if _bfgab ,_ccfa :=_gcccc ._bgddeb .(*PdfOutlineItem );_ccfa {_ebcf :=_bfgab .Dest ;if (_ebcf ==nil ||_fda .IsNullObject (_ebcf ))&&_bfgab .A !=nil {if _defbg ,_ccgeaf :=_fda .GetDict (_bfgab .A );_ccgeaf {if _cafg ,_caaed :=_fda .GetArray (_defbg .Get ("\u0044"));
_caaed {_ebcf =_cafg ;}else {_gbbfdb ,_ceadc :=_fda .GetString (_defbg .Get ("\u0044"));if !_ceadc {return ;};_bedc ,_ceadc :=_ecdfa ._debca .Get ("\u004e\u0061\u006de\u0073").(*_fda .PdfObjectReference );if !_ceadc {return ;};_cagdd ,_gebag :=_ecdfa ._edbag .LookupByReference (*_bedc );
if _gebag !=nil {_ga .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_gebag .Error ());
return ;};_abcc ,_ceadc :=_cagdd .(*_fda .PdfIndirectObject );if !_ceadc {return ;};_fface :=map[_fda .PdfObject ]struct{}{};_gebag =_ecdfa .buildNameNodes (_abcc ,_fface );if _gebag !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_gebag .Error ());
return ;};for _aacag :=range _fface {_gggcd ,_eaaf :=_fda .GetDict (_aacag );if !_eaaf {continue ;};_acfgg ,_eaaf :=_fda .GetArray (_gggcd .Get ("\u004e\u0061\u006de\u0073"));if !_eaaf {continue ;};for _fdfbe ,_dcdfg :=range _acfgg .Elements (){switch _dcdfg .(type ){case *_fda .PdfObjectString :if _dcdfg .String ()==_gbbfdb .String (){if _bdgcg :=_acfgg .Get (_fdfbe +1);
_bdgcg !=nil {if _ageab ,_cbfaf :=_fda .GetDict (_bdgcg );_cbfaf {_ebcf =_ageab .Get ("\u0044");break ;};};};};};};};};};var _gcbe OutlineDest ;if _ebcf !=nil &&!_fda .IsNullObject (_ebcf ){if _gcbaf ,_adgbf :=_cead (_ebcf ,_ecdfa );_adgbf ==nil {_gcbe =*_gcbaf ;
}else {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_ebcf ,_adgbf );
};};_fbcgg =NewOutlineItem (_bfgab .Title .Decoded (),_gcbe );*_gcdcc =append (*_gcdcc ,_fbcgg );if _bfgab .Next !=nil {_fecf (_bfgab .Next ,_gcdcc );};};if _gcccc .First !=nil {if _fbcgg !=nil {_gcdcc =&_fbcgg .Entries ;};_fecf (_gcccc .First ,_gcdcc );
};};_fggfg :=NewOutline ();_fecf (_dbdea ,&_fggfg .Entries );return _fggfg ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gceb :=NewPdfAnnotation ();_beed :=&PdfAnnotationHighlight {};_beed .PdfAnnotation =_gceb ;_beed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gceb .SetContext (_beed );return _beed ;};func (_dcgge *pdfCIDFontType0 )baseFields ()*fontCommon {return &_dcgge .fontCommon };


// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gea :=&PdfFieldSignature {};_gea .PdfField =NewPdfField ();_gea .PdfField .SetContext (_gea );_gea .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gea .PdfAnnotationWidget .SetContext (_gea );
_gea .PdfAnnotationWidget ._fbb =_gea .PdfField ._dccfd ;_gea .T =_fda .MakeString ("");_gea .F =_fda .MakeInteger (132);_gea .V =signature ;return _gea ;};func (_dag *PdfReader )newPdfActionJavaScriptFromDict (_agbb *_fda .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_agbb .Get ("\u004a\u0053")},nil ;
};func (_fced *PdfReader )newPdfAnnotationWidgetFromDict (_egee *_fda .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dfga :=PdfAnnotationWidget {};_dfga .H =_egee .Get ("\u0048");_dfga .MK =_egee .Get ("\u004d\u004b");_dfga .A =_egee .Get ("\u0041");
_dfga .AA =_egee .Get ("\u0041\u0041");_dfga .BS =_egee .Get ("\u0042\u0053");_dfga .Parent =_egee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dfga ,nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_aaag *PdfColorCalRGB )GetNumComponents ()int {return 3};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_cebgf =author };

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// ToPdfObject implements interface PdfModel.
func (_gdgc *PdfActionHide )ToPdfObject ()_fda .PdfObject {_gdgc .PdfAction .ToPdfObject ();_abc :=_gdgc ._ddd ;_cf :=_abc .PdfObject .(*_fda .PdfObjectDictionary );_cf .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeHide )));_cf .SetIfNotNil ("\u0054",_gdgc .T );
_cf .SetIfNotNil ("\u0048",_gdgc .H );return _abc ;};

// ToPdfObject implements interface PdfModel.
func (_gdg *PdfActionLaunch )ToPdfObject ()_fda .PdfObject {_gdg .PdfAction .ToPdfObject ();_gba :=_gdg ._ddd ;_fb :=_gba .PdfObject .(*_fda .PdfObjectDictionary );_fb .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeLaunch )));if _gdg .F !=nil {_fb .Set ("\u0046",_gdg .F .ToPdfObject ());
};_fb .SetIfNotNil ("\u0057\u0069\u006e",_gdg .Win );_fb .SetIfNotNil ("\u004d\u0061\u0063",_gdg .Mac );_fb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gdg .Unix );_fb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gdg .NewWindow );return _gba ;
};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ecea *PdfColorspaceLab )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efag ,_dddgf :=_fda .GetNumbersAsFloat (objects );
if _dddgf !=nil {return nil ,_dddgf ;};return _ecea .ColorFromFloats (_efag );};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_fbde *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfb ,_eaacg :=_fda .GetNumbersAsFloat (objects );
if _eaacg !=nil {return nil ,_eaacg ;};return _fbde .ColorFromFloats (_abfb );};func (_ege *PdfReader )newPdfActionGoTo3DViewFromDict (_dge *_fda .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_dge .Get ("\u0054\u0041"),V :_dge .Get ("\u0056")},nil ;
};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gcedf *PdfReader )PageFromIndirectObject (ind *_fda .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gcedf .PageList )!=len (_gcedf ._afgcgb ){return nil ,0,_ad .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _ebeb ,_aaggg :=range _gcedf ._afgcgb {if _aaggg ==ind {return _gcedf .PageList [_ebeb ],_ebeb +1,nil ;};};return nil ,0,_ad .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgceg *PdfShadingType4 )ToPdfObject ()_fda .PdfObject {_fgceg .PdfShading .ToPdfObject ();_ebgef ,_eabcd :=_fgceg .getShadingDict ();if _eabcd !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fgceg .BitsPerCoordinate !=nil {_ebgef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fgceg .BitsPerCoordinate );};if _fgceg .BitsPerComponent !=nil {_ebgef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fgceg .BitsPerComponent );
};if _fgceg .BitsPerFlag !=nil {_ebgef .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fgceg .BitsPerFlag );};if _fgceg .Decode !=nil {_ebgef .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fgceg .Decode );};if _fgceg .Function !=nil {if len (_fgceg .Function )==1{_ebgef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgceg .Function [0].ToPdfObject ());
}else {_bfaee :=_fda .MakeArray ();for _ ,_cfacc :=range _fgceg .Function {_bfaee .Append (_cfacc .ToPdfObject ());};_ebgef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfaee );};};return _fgceg ._edgffb ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetOCProperties returns the optional content properties PdfObject.
func (_bfbaba *PdfReader )GetOCProperties ()(_fda .PdfObject ,error ){_addg :=_bfbaba ._debca ;_bdage :=_addg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bdage =_fda .ResolveReference (_bdage );if !_bfbaba ._cegf {_geegf :=_bfbaba .traverseObjectData (_bdage );
if _geegf !=nil {return nil ,_geegf ;};};return _bdage ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dcgffa *XObjectImage )GetContainingPdfObject ()_fda .PdfObject {return _dcgffa ._gcdcaa };

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_fda .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cgbg *_fda .PdfIndirectObject ;};func (_bbgfc *PdfReader )loadPerms ()(*Permissions ,error ){if _defdb :=_bbgfc ._debca .Get ("\u0050\u0065\u0072m\u0073");
_defdb !=nil {if _ffdc ,_fbea :=_fda .GetDict (_defdb );_fbea {_baafg :=_ffdc .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _baafg ==nil {return nil ,nil ;};if _ecgfc ,_dgecc :=_fda .GetIndirect (_baafg );_dgecc {_beedf ,_dgdd :=_bbgfc .newPdfSignatureFromIndirect (_ecgfc );
if _dgdd !=nil {return nil ,_dgdd ;};return NewPermissions (_beedf ),nil ;};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fda .PdfObject ;Open _fda .PdfObject ;};func (_eafcc *PdfAppender )mergeResources (_bbfb ,_bbaba _fda .PdfObject ,_bed map[_fda .PdfObjectName ]_fda .PdfObjectName )_fda .PdfObject {if _bbaba ==nil &&_bbfb ==nil {return nil ;
};if _bbaba ==nil {return _bbfb ;};_adfce ,_afc :=_fda .GetDict (_bbaba );if !_afc {return _bbfb ;};if _bbfb ==nil {_bfda :=_fda .MakeDict ();_bfda .Merge (_adfce );return _bbaba ;};_accd ,_afc :=_fda .GetDict (_bbfb );if !_afc {_ga .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_accd =_fda .MakeDict ();};for _ ,_fcbf :=range _adfce .Keys (){if _faed ,_cbefc :=_bed [_fcbf ];_cbefc {_accd .Set (_faed ,_adfce .Get (_fcbf ));}else {_accd .Set (_fcbf ,_adfce .Get (_fcbf ));};};return _accd ;};

// Subtype returns the font's "Subtype" field.
func (_aaege *PdfFont )Subtype ()string {_dccg :=_aaege .baseFields ()._bfgb ;if _fabb ,_fddb :=_aaege ._fdbb .(*pdfFontType0 );_fddb {_dccg =_dccg +"\u003a"+_fabb .DescendantFont .Subtype ();};return _dccg ;};type pdfSignDictionary struct{*_fda .PdfObjectDictionary ;
_gcggb *SignatureHandler ;_begec *PdfSignature ;_baaae int64 ;_edee int ;_dabg int ;_ecadg int ;_bdfc int ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eggc *PdfColorspaceDeviceRGB )ToPdfObject ()_fda .PdfObject {return _fda .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// SetFlag sets the flag for the field.
func (_afcc *PdfField )SetFlag (flag FieldFlag ){_afcc .Ff =_fda .MakeInteger (int64 (flag ))};var _ pdfFont =(*pdfFontSimple )(nil );

// Val returns the color value.
func (_daff *PdfColorDeviceGray )Val ()float64 {return float64 (*_daff )};

// Height returns the height of `rect`.
func (_fbagf *PdfRectangle )Height ()float64 {return _f .Abs (_fbagf .Ury -_fbagf .Lly )};func (_ccaec *PdfFont )baseFields ()*fontCommon {if _ccaec ._fdbb ==nil {_ga .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _ccaec ._fdbb .baseFields ();};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_dbabc *PdfPage )GetAllContentStreams ()(string ,error ){_edcag ,_fadcaa :=_dbabc .GetContentStreams ();if _fadcaa !=nil {return "",_fadcaa ;};return _dc .Join (_edcag ,"\u0020"),nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_eacdb *_fda .PdfIndirectObject ;};func _gged (_adbee *_eac .ImageBase )(_bdgg Image ){_bdgg .Width =int64 (_adbee .Width );_bdgg .Height =int64 (_adbee .Height );
_bdgg .BitsPerComponent =int64 (_adbee .BitsPerComponent );_bdgg .ColorComponents =_adbee .ColorComponents ;_bdgg .Data =_adbee .Data ;_bdgg ._aefacf =_adbee .Decode ;_bdgg ._abdg =_adbee .Alpha ;return _bdgg ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_ddfc :=NewPdfAnnotation ();_cca :=&PdfAnnotationLine {};_cca .PdfAnnotation =_ddfc ;_cca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddfc .SetContext (_cca );return _cca ;};func (_dfcd *PdfReader )newPdfAnnotationStrikeOut (_dea *_fda .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_gdge :=PdfAnnotationStrikeOut {};
_gff ,_cfcd :=_dfcd .newPdfAnnotationMarkupFromDict (_dea );if _cfcd !=nil {return nil ,_cfcd ;};_gdge .PdfAnnotationMarkup =_gff ;_gdge .QuadPoints =_dea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gdge ,nil ;};func _abdaf (_cdbc *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_cdbc }};


// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_bgddeb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};func (_afgc fontCommon )coreString ()string {_egbc :="";if _afgc ._defd !=nil {_egbc =_afgc ._defd .String ();};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_afgc ._bfgb ,_afgc ._fcdg ,_afgc ._egde ,_afgc ._efdgde ,_afgc ._gcef !=nil ,_afgc .fontFlags (),_egbc );
};

// WriteToFile writes the output PDF to file.
func (_ebdbg *PdfWriter )WriteToFile (outputFilePath string )error {_eeegf ,_ffeef :=_ac .Create (outputFilePath );if _ffeef !=nil {return _ffeef ;};defer _eeegf .Close ();return _ebdbg .Write (_eeegf );};func _adefcf (_dege _fda .PdfObject )(*PdfColorspaceICCBased ,error ){_bbea :=&PdfColorspaceICCBased {};
if _bgbf ,_gfffg :=_dege .(*_fda .PdfIndirectObject );_gfffg {_bbea ._bcdf =_bgbf ;};_dege =_fda .TraceToDirectObject (_dege );_bdde ,_cgbdg :=_dege .(*_fda .PdfObjectArray );if !_cgbdg {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _bdde .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_dege =_fda .TraceToDirectObject (_bdde .Get (0));_fdga ,_cgbdg :=_dege .(*_fda .PdfObjectName );
if !_cgbdg {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_fdga !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_dege =_bdde .Get (1);_ccbb ,_cgbdg :=_fda .GetStream (_dege );if !_cgbdg {_ga .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dege );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ffdg :=_ccbb .PdfObjectDictionary ;_fcge ,_cgbdg :=_ffdg .Get ("\u004e").(*_fda .PdfObjectInteger );
if !_cgbdg {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fcge !=1&&*_fcge !=3&&*_fcge !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_bbea .N =int (*_fcge );if _caf :=_ffdg .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_caf !=nil {_ceddd ,_addbb :=NewPdfColorspaceFromPdfObject (_caf );if _addbb !=nil {return nil ,_addbb ;};_bbea .Alternate =_ceddd ;};if _ecfed :=_ffdg .Get ("\u0052\u0061\u006eg\u0065");
_ecfed !=nil {_ecfed =_fda .TraceToDirectObject (_ecfed );_dfac ,_dedgf :=_ecfed .(*_fda .PdfObjectArray );if !_dedgf {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _dfac .Len ()!=2*_bbea .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_gfffgc ,_fcfaee :=_dfac .GetAsFloat64Slice ();if _fcfaee !=nil {return nil ,_fcfaee ;};_bbea .Range =_gfffgc ;}else {_bbea .Range =make ([]float64 ,2*_bbea .N );for _ecfea :=0;_ecfea < _bbea .N ;_ecfea ++{_bbea .Range [2*_ecfea ]=0.0;_bbea .Range [2*_ecfea +1]=1.0;
};};if _agfb :=_ffdg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_agfb !=nil {_ffdb ,_egaea :=_agfb .(*_fda .PdfObjectStream );if !_egaea {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bbea .Metadata =_ffdb ;};_acbcf ,_fead :=_fda .DecodeStream (_ccbb );if _fead !=nil {return nil ,_fead ;};_bbea .Data =_acbcf ;_bbea ._eadf =_ccbb ;return _bbea ,nil ;};func (_daced *LTV )generateVRIKey (_adbbc *PdfSignature )(string ,error ){_aabdgaf ,_bcfdg :=_edfcb (_adbbc .Contents .Bytes ());
if _bcfdg !=nil {return "",_bcfdg ;};return _dc .ToUpper (_g .EncodeToString (_aabdgaf )),nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fda .PdfObject ;T3DV _fda .PdfObject ;T3DA _fda .PdfObject ;T3DI _fda .PdfObject ;T3DB _fda .PdfObject ;};func _eeae (_affab string )(map[_fd .CharCode ]_fd .GlyphName ,error ){_eaefg :=_dc .Split (_affab ,"\u000a");
_daga :=make (map[_fd .CharCode ]_fd .GlyphName );for _ ,_ebag :=range _eaefg {_ccafb :=_gbda .FindStringSubmatch (_ebag );if _ccafb ==nil {continue ;};_aaff ,_gffg :=_ccafb [1],_ccafb [2];_ddccd ,_dbefbb :=_dd .Atoi (_aaff );if _dbefbb !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ebag );
return nil ,_fda .ErrTypeError ;};_daga [_fd .CharCode (_ddccd )]=_fd .GlyphName (_gffg );};_ga .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_daga );
return _daga ,nil ;};func (_gbb *PdfReader )newPdfAnnotationLinkFromDict (_ffe *_fda .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_edbd :=PdfAnnotationLink {};_edbd .A =_ffe .Get ("\u0041");_edbd .Dest =_ffe .Get ("\u0044\u0065\u0073\u0074");_edbd .H =_ffe .Get ("\u0048");
_edbd .PA =_ffe .Get ("\u0050\u0041");_edbd .QuadPoints =_ffe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_edbd .BS =_ffe .Get ("\u0042\u0053");return &_edbd ,nil ;};func (_eaacb *DSS )add (_cagf *[]*_fda .PdfObjectStream ,_gdedf map[string ]*_fda .PdfObjectStream ,_bdaf [][]byte )([]*_fda .PdfObjectStream ,error ){_fgfde :=make ([]*_fda .PdfObjectStream ,0,len (_bdaf ));
for _ ,_defb :=range _bdaf {_acaab ,_ecfg :=_edfcb (_defb );if _ecfg !=nil {return nil ,_ecfg ;};_dfeg ,_ffbeg :=_gdedf [string (_acaab )];if !_ffbeg {_dfeg ,_ecfg =_fda .MakeStream (_defb ,_fda .NewRawEncoder ());if _ecfg !=nil {return nil ,_ecfg ;};_gdedf [string (_acaab )]=_dfeg ;
*_cagf =append (*_cagf ,_dfeg );};_fgfde =append (_fgfde ,_dfeg );};return _fgfde ,nil ;};

// String implements interface PdfObject.
func (_dcg *PdfAction )String ()string {_de ,_bab :=_dcg .ToPdfObject ().(*_fda .PdfIndirectObject );if _bab {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dcg ._dg ,_de .PdfObject .String ());};return "";};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_gbgaf *XObjectForm )GetContainingPdfObject ()_fda .PdfObject {return _gbgaf ._adacca };

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bde :=NewPdfAction ();_aebg :=&PdfActionTrans {};_aebg .PdfAction =_bde ;_bde .SetContext (_aebg );return _aebg ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cdgde :=PdfPage {};_cdgde ._bfdab =_fda .MakeDict ();_cdgde .Resources =NewPdfPageResources ();_aegdg :=_fda .PdfIndirectObject {};_aegdg .PdfObject =_cdgde ._bfdab ;_cdgde ._ebgg =&_aegdg ;return &_cdgde ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_gagcad *PdfReader )Inspect ()(map[string ]int ,error ){return _gagcad ._edbag .Inspect ()};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_daffdf *LTV )EnableByName (name string ,extraCerts []*_ec .Certificate )error {_bggda :=_daffdf ._ccda ._beg .AcroForm ;for _ ,_dabc :=range _bggda .AllFields (){_bfcfc ,_ :=_dabc .GetContext ().(*PdfFieldSignature );if _bfcfc ==nil {continue ;};
if _ebbf :=_bfcfc .PartialName ();_ebbf !=name {continue ;};return _daffdf .Enable (_bfcfc .V ,extraCerts );};return nil ;};func _edfb (_cecec *_fda .PdfObjectDictionary ,_gdde *fontCommon )(*pdfFontType3 ,error ){_dadag :=_ecddf (_gdde );_fbaac :=_cecec .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _fbaac ==nil {_fbaac =_fda .MakeInteger (0);};_dadag .FirstChar =_fbaac ;_afecb ,_gbgg :=_fda .GetIntVal (_fbaac );if !_gbgg {_ga .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fbaac );
return nil ,_fda .ErrTypeError ;};_befcae :=_fd .CharCode (_afecb );_fbaac =_cecec .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fbaac ==nil {_fbaac =_fda .MakeInteger (255);};_dadag .LastChar =_fbaac ;_afecb ,_gbgg =_fda .GetIntVal (_fbaac );
if !_gbgg {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fbaac );return nil ,_fda .ErrTypeError ;
};_bdfagc :=_fd .CharCode (_afecb );_fbaac =_cecec .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fbaac !=nil {_dadag .Resources =_fbaac ;};_fbaac =_cecec .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _fbaac ==nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_fbaac );
return nil ,_fda .ErrNotSupported ;};_dadag .CharProcs =_fbaac ;_fbaac =_cecec .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _fbaac ==nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_fbaac );
return nil ,_fda .ErrNotSupported ;};_dadag .FontMatrix =_fbaac ;_dadag ._efea =make (map[_fd .CharCode ]float64 );_fbaac =_cecec .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fbaac !=nil {_dadag .Widths =_fbaac ;_gbaac ,_cfccf :=_fda .GetArray (_fbaac );
if !_cfccf {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fbaac );return nil ,_fda .ErrTypeError ;
};_dddaeg ,_cefdc :=_gbaac .ToFloat64Array ();if _cefdc !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cefdc ;};if len (_dddaeg )!=int (_bdfagc -_befcae +1){_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bdfagc -_befcae +1,len (_dddaeg ));
return nil ,_fda .ErrRangeError ;};_egcaa ,_cfccf :=_fda .GetArray (_dadag .FontMatrix );if !_cfccf {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_egcaa );
return nil ,_cefdc ;};_bae ,_cefdc :=_egcaa .ToFloat64Array ();if _cefdc !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cefdc ;};_bfaa :=_ff .NewMatrix (_bae [0],_bae [1],_bae [2],_bae [3],_bae [4],_bae [5]);for _bgac ,_ggdbg :=range _dddaeg {_abgfa ,_ :=_bfaa .Transform (_ggdbg ,_ggdbg );_dadag ._efea [_befcae +_fd .CharCode (_bgac )]=_abgfa ;};};_dadag .Encoding =_fda .TraceToDirectObject (_cecec .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_cfage :=_cecec .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cfage !=nil {_dadag ._gcef =_fda .TraceToDirectObject (_cfage );_fggg ,_beecg :=_dcgg (_dadag ._gcef ,&_dadag .fontCommon );if _beecg !=nil {return nil ,_beecg ;};_dadag ._gaega =_fggg ;
};if _gdced :=_dadag ._gaega ;_gdced !=nil {_dadag ._egcbe =_fd .NewCMapEncoder ("",nil ,_gdced );}else {_dadag ._egcbe =_fd .NewPdfDocEncoder ();};return _dadag ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_faaec *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_eeece :=func (_dccee float64 )float64 {if _dccee >=6.0/29{return _dccee *_dccee *_dccee ;};return 108.0/841*(_dccee -4/29);};_eged ,_gaeg :=color .(*PdfColorLab );if !_gaeg {_ga .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_eged .L ();AStar :=_eged .A ();BStar :=_eged .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_faaec .WhitePoint [0]*_eeece (L );Y :=_faaec .WhitePoint [1]*_eeece (M );Z :=_faaec .WhitePoint [2]*_eeece (N );_ccea :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gcabd :=-0.969256*X +1.875992*Y +0.041556*Z ;_aege :=0.055648*X +-0.204043*Y +1.057311*Z ;
_ccea =_f .Min (_f .Max (_ccea ,0),1.0);_gcabd =_f .Min (_f .Max (_gcabd ,0),1.0);_aege =_f .Min (_f .Max (_aege ,0),1.0);return NewPdfColorDeviceRGB (_ccea ,_gcabd ,_aege ),nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gbgcg *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ga .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ad .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ceea :=&PdfPageResourcesColorspaces {};_ceea .Names =[]string {};_ceea .Colorspaces =map[string ]PdfColorspace {};_ceea ._adcac =&_fda .PdfIndirectObject {};return _ceea ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_face *PdfReader )Decrypt (password []byte )(bool ,error ){_bgeda ,_cbga :=_face ._edbag .Decrypt (password );if _cbga !=nil {return false ,_cbga ;};if !_bgeda {return false ,nil ;};_cbga =_face .loadStructure ();if _cbga !=nil {_ga .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_cbga );
return false ,_cbga ;};return true ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_agfcg *PdfPageResources )GetFontByName (keyName _fda .PdfObjectName )(_fda .PdfObject ,bool ){if _agfcg .Font ==nil {return nil ,false ;};_abab ,_addag :=_fda .TraceToDirectObject (_agfcg .Font ).(*_fda .PdfObjectDictionary );if !_addag {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fda .TraceToDirectObject (_agfcg .Font ));
return nil ,false ;};if _ecegf :=_abab .Get (keyName );_ecegf !=nil {return _ecegf ,true ;};return nil ,false ;};func _egfef (_bgaa _fda .PdfObject )(*PdfFunctionType3 ,error ){_cefbc :=&PdfFunctionType3 {};var _dbca *_fda .PdfObjectDictionary ;if _cgbgg ,_facf :=_bgaa .(*_fda .PdfIndirectObject );
_facf {_daacd ,_babgd :=_cgbgg .PdfObject .(*_fda .PdfObjectDictionary );if !_babgd {return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cefbc ._fgbfgd =_cgbgg ;_dbca =_daacd ;}else if _agded ,_agbcc :=_bgaa .(*_fda .PdfObjectDictionary );
_agbcc {_dbca =_agded ;}else {return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dcebc ,_eebcg :=_fda .TraceToDirectObject (_dbca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fda .PdfObjectArray );
if !_eebcg {_ga .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dcebc .Len ()!=2{_ga .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ad .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_babf ,_eacc :=_dcebc .ToFloat64Array ();
if _eacc !=nil {return nil ,_eacc ;};_cefbc .Domain =_babf ;_dcebc ,_eebcg =_fda .TraceToDirectObject (_dbca .Get ("\u0052\u0061\u006eg\u0065")).(*_fda .PdfObjectArray );if _eebcg {if _dcebc .Len ()< 0||_dcebc .Len ()%2!=0{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bdcfb ,_adff :=_dcebc .ToFloat64Array ();if _adff !=nil {return nil ,_adff ;};_cefbc .Range =_bdcfb ;};_dcebc ,_eebcg =_fda .TraceToDirectObject (_dbca .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fda .PdfObjectArray );if !_eebcg {_ga .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cefbc .Functions =[]PdfFunction {};
for _ ,_cdea :=range _dcebc .Elements (){_gega ,_daggb :=_agbac (_cdea );if _daggb !=nil {return nil ,_daggb ;};_cefbc .Functions =append (_cefbc .Functions ,_gega );};_dcebc ,_eebcg =_fda .TraceToDirectObject (_dbca .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fda .PdfObjectArray );
if !_eebcg {_ga .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_ecadb ,_eacc :=_dcebc .ToFloat64Array ();if _eacc !=nil {return nil ,_eacc ;};_cefbc .Bounds =_ecadb ;if len (_cefbc .Bounds )!=len (_cefbc .Functions )-1{_ga .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_cefbc .Bounds ),len (_cefbc .Functions ));
return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcebc ,_eebcg =_fda .TraceToDirectObject (_dbca .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fda .PdfObjectArray );if !_eebcg {_ga .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dafgc ,_eacc :=_dcebc .ToFloat64Array ();
if _eacc !=nil {return nil ,_eacc ;};_cefbc .Encode =_dafgc ;if len (_cefbc .Encode )!=2*len (_cefbc .Functions ){_ga .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_cefbc .Encode ),len (_cefbc .Functions ));
return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _cefbc ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_gggag *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _gggag ._bbbbc !=nil {return _gggag ._bbbbc ,nil ;};if _gggag .Annots ==nil {_gggag ._bbbbc =[]*PdfAnnotation {};return nil ,nil ;};if _gggag ._ebfda ==nil {_gggag ._bbbbc =[]*PdfAnnotation {};
return nil ,nil ;};_aegbf ,_cbeef :=_gggag ._ebfda .loadAnnotations (_gggag .Annots );if _cbeef !=nil {return nil ,_cbeef ;};if _aegbf ==nil {_gggag ._bbbbc =[]*PdfAnnotation {};};_gggag ._bbbbc =_aegbf ;return _gggag ._bbbbc ,nil ;};func (_cce *PdfAppender )addNewObject (_efef _fda .PdfObject ){if _ ,_agaf :=_cce ._ged [_efef ];
!_agaf {_cce ._ddgd =append (_cce ._ddgd ,_efef );_cce ._ged [_efef ]=struct{}{};};};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ecdag *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cfgee ,_acd :=color .(*PdfColorDeviceRGB );if !_acd {_ga .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cfgee ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_cdeecc *_fda .PdfIndirectObject ;_degfge *_fda .PdfIndirectObject ;_ggbfc map[_fda .PdfObject ]struct{};_adeed []_fda .PdfObject ;_cfeaa map[_fda .PdfObject ]struct{};_adeae []*_fda .PdfIndirectObject ;_cafac *PdfOutlineTreeNode ;
_ecegfe *_fda .PdfObjectDictionary ;_ffdcd []_fda .PdfObject ;_gebbe *_fda .PdfIndirectObject ;_gfdaa *_d .Writer ;_dcded int64 ;_abac error ;_aecdf *_fda .PdfCrypt ;_ddgfc *_fda .PdfObjectDictionary ;_ggdcb *_fda .PdfIndirectObject ;_bbad *_fda .PdfObjectArray ;
_ccgad _fda .Version ;_ecdcg *bool ;_feea map[_fda .PdfObject ][]*_fda .PdfObjectDictionary ;_ccbgd *PdfAcroForm ;_deefc Optimizer ;_babeb StandardApplier ;_aaeac map[int ]crossReference ;_gbfg int64 ;ObjNumOffset int ;_dfecb bool ;_agaee _fda .XrefTable ;
_ddbefe int64 ;_gcaefe int64 ;_efec map[_fda .PdfObject ]int64 ;_ggeda map[_fda .PdfObject ]struct{};_bgcae string ;_egdbb []*PdfOutputIntent ;_eeca bool ;_cdad ,_egeddb string ;};func (_geefd *pdfFontType3 )baseFields ()*fontCommon {return &_geefd .fontCommon };


// GetPage returns the PdfPage model for the specified page number.
func (_fbab *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fbab ._edbag .GetCrypter ()!=nil &&!_fbab ._edbag .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_fbab ._afgcgb )< pageNumber {return nil ,_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_dddda :=pageNumber -1;if _dddda < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_acddc :=_fbab .PageList [_dddda ];
return _acddc ,nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_afcgb *PdfOutputIntent )ToPdfObject ()_fda .PdfObject {if _afcgb ._fdce ==nil {_afcgb ._fdce =_fda .MakeDict ();};_abeef :=_afcgb ._fdce ;if _afcgb .Type !=""{_abeef .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName (_afcgb .Type ));};_abeef .Set ("\u0053",_fda .MakeName (_afcgb .S .String ()));
if _afcgb .OutputCondition !=""{_abeef .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_fda .MakeString (_afcgb .OutputCondition ));};_abeef .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_fda .MakeString (_afcgb .OutputConditionIdentifier ));
_abeef .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_fda .MakeString (_afcgb .RegistryName ));if _afcgb .Info !=""{_abeef .Set ("\u0049\u006e\u0066\u006f",_fda .MakeString (_afcgb .Info ));};if len (_afcgb .DestOutputProfile )!=0{_acead ,_gbcdc :=_fda .MakeStream (_afcgb .DestOutputProfile ,_fda .NewFlateEncoder ());
if _gbcdc !=nil {_ga .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gbcdc );
};_acead .PdfObjectDictionary .Set ("\u004e",_fda .MakeInteger (int64 (_afcgb .ColorComponents )));_ecgbb :=make ([]float64 ,_afcgb .ColorComponents *2);for _gdged :=0;_gdged < _afcgb .ColorComponents *2;_gdged ++{_bafg :=0.0;if _gdged %2!=0{_bafg =1.0;
};_ecgbb [_gdged ]=_bafg ;};_acead .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_fda .MakeArrayFromFloats (_ecgbb ));_abeef .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_acead );};return _abeef ;
};

// WriteString outputs the object as it is to be written to file.
func (_efdfa *PdfTransformParamsDocMDP )WriteString ()string {return _efdfa .ToPdfObject ().WriteString ();};func _cdfaa (_cedb *_fda .PdfObjectDictionary ,_bdfbc *fontCommon )(*pdfCIDFontType0 ,error ){if _bdfbc ._bfgb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ga .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bdfbc );
return nil ,_fda .ErrRangeError ;};_baca :=_gdefe (_bdfbc );_bfdgf ,_cded :=_fda .GetDict (_cedb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cded {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bdfbc );
return nil ,ErrRequiredAttributeMissing ;};_baca .CIDSystemInfo =_bfdgf ;_baca .DW =_cedb .Get ("\u0044\u0057");_baca .W =_cedb .Get ("\u0057");_baca .DW2 =_cedb .Get ("\u0044\u0057\u0032");_baca .W2 =_cedb .Get ("\u0057\u0032");_baca ._ecgad =1000.0;if _gggg ,_dbaa :=_fda .GetNumberAsFloat (_baca .DW );
_dbaa ==nil {_baca ._ecgad =_gggg ;};_dbeeb ,_gbaa :=_dcdag (_baca .W );if _gbaa !=nil {return nil ,_gbaa ;};if _dbeeb ==nil {_dbeeb =map[_fd .CharCode ]float64 {};};_baca ._dcdc =_dbeeb ;return _baca ,nil ;};

// ToInteger convert to an integer format.
func (_ccbec *PdfColorLab )ToInteger (bits int )[3]uint32 {_aabc :=_f .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aabc *_ccbec .L ()),uint32 (_aabc *_ccbec .A ()),uint32 (_aabc *_ccbec .B ())};};func _dgbg (_fadca _fda .PdfObject )(string ,error ){_fadca =_fda .TraceToDirectObject (_fadca );
switch _dedb :=_fadca .(type ){case *_fda .PdfObjectString :return _dedb .Str (),nil ;case *_fda .PdfObjectStream :_adgd ,_ebbg :=_fda .DecodeStream (_dedb );if _ebbg !=nil {return "",_ebbg ;};return string (_adgd ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fadca );
};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_baffc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _baffc .flattenFieldsWithOpts (false ,appgen ,opts );};func _aeed ()string {_fdgf :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _gdee _dcc .Buffer ;for _cdaf :=0;_cdaf < 6;_cdaf ++{_gdee .WriteRune (rune (_fdgf [_be .Intn (len (_fdgf ))]));};return _gdee .String ();};

// GetPerms returns the Permissions dictionary
func (_efddg *PdfReader )GetPerms ()*Permissions {return _efddg ._cbfdf };

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fda .PdfObject ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_edfeb *PdfWriter )GetPdfVersion ()string {return _edfeb .getPdfVersion ()};func _cccfg ()string {_bcaeg .Lock ();defer _bcaeg .Unlock ();if len (_eebdc )> 0{return _eebdc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bddg *_fda .PdfIndirectObject ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_fgcf ,_fdgcg :=_bacb (basefont );if _fdgcg !=nil {return nil ,_fdgcg ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_fgcf ._bfbca =_fd .NewWinAnsiEncoder ();};return &PdfFont {_fdbb :&_fgcf },nil ;
};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_gfd :=NewPdfAnnotation ();_cddf :=&PdfAnnotationTrapNet {};_cddf .PdfAnnotation =_gfd ;_gfd .SetContext (_cddf );return _cddf ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fda .PdfObjectBool ;SigFlags *_fda .PdfObjectInteger ;CO *_fda .PdfObjectArray ;DR *PdfPageResources ;DA *_fda .PdfObjectString ;Q *_fda .PdfObjectInteger ;XFA _fda .PdfObject ;_gcddg *_fda .PdfIndirectObject ;
};

// ToPdfObject implements interface PdfModel.
func (_gcfd *PdfAnnotationSquare )ToPdfObject ()_fda .PdfObject {_gcfd .PdfAnnotation .ToPdfObject ();_dfcf :=_gcfd ._fbb ;_ecda :=_dfcf .PdfObject .(*_fda .PdfObjectDictionary );if _gcfd .PdfAnnotationMarkup !=nil {_gcfd .PdfAnnotationMarkup .appendToPdfDictionary (_ecda );
};_ecda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ecda .SetIfNotNil ("\u0042\u0053",_gcfd .BS );_ecda .SetIfNotNil ("\u0049\u0043",_gcfd .IC );_ecda .SetIfNotNil ("\u0042\u0045",_gcfd .BE );
_ecda .SetIfNotNil ("\u0052\u0044",_gcfd .RD );return _dfcf ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_babbd :=PdfColorDeviceRGB {r ,g ,b };return &_babbd ;};func (_cdaac *pdfFontType0 )bytesToCharcodes (_egfeb []byte )([]_fd .CharCode ,bool ){if _cdaac ._bcebb ==nil {return nil ,false ;};
_daeb ,_babcc :=_cdaac ._bcebb .BytesToCharcodes (_egfeb );if !_babcc {return nil ,false ;};_cfcb :=make ([]_fd .CharCode ,len (_daeb ));for _gedf ,_ffeg :=range _daeb {_cfcb [_gedf ]=_fd .CharCode (_ffeg );};return _cfcb ,true ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_bdbbg *PdfPageResources )HasExtGState (keyName _fda .PdfObjectName )bool {_ ,_addde :=_bdbbg .GetFontByName (keyName );return _addde ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_cef :=NewPdfAnnotation ();_bbba :=&PdfAnnotationFileAttachment {};_bbba .PdfAnnotation =_cef ;_bbba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cef .SetContext (_bbba );return _bbba ;
};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_gdbde *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_gdbde ._bfbffb =colorspace ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bfdcg *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gcgg []float64 ;for _gbab :=0;_gbab < _bfdcg .GetNumComponents ();_gbab ++{_gcgg =append (_gcgg ,0.0,1.0);};return _gcgg ;};

// ToInteger convert to an integer format.
func (_ddee *PdfColorCalGray )ToInteger (bits int )uint32 {_bebd :=_f .Pow (2,float64 (bits ))-1;return uint32 (_bebd *_ddee .Val ());};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dbfde pdfFontType0 )GetCharMetrics (code _fd .CharCode )(_ade .CharMetrics ,bool ){if _dbfde .DescendantFont ==nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dbfde );
return _ade .CharMetrics {},false ;};return _dbfde .DescendantFont .GetCharMetrics (code );};

// GetNumComponents returns the number of color components (3 for Lab).
func (_edaea *PdfColorLab )GetNumComponents ()int {return 3};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_acgec *PdfSignature )GetDocMDPPermission ()(_ag .DocMDPPermission ,bool ){for _ ,_eeaf :=range _acgec .Reference .Elements (){if _ggdbf ,_ceffe :=_fda .GetDict (_eeaf );_ceffe {if _acecg ,_egacc :=_fda .GetNameVal (_ggdbf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_egacc &&_acecg =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _cbega ,_fadd :=_fda .GetDict (_ggdbf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fadd {if P ,_egffg :=_fda .GetIntVal (_cbega .Get ("\u0050"));
_egffg {return _ag .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_fabdf *PdfPage )Size ()(float64 ,float64 ,error ){_fdacc ,_beegb :=_fabdf .GetMediaBox ();if _beegb !=nil {return 0,0,_beegb ;};_gecaf ,_fgaa :=_fdacc .Width (),_fdacc .Height ();_abeg ,_beegb :=_fabdf .GetRotate ();if _beegb !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_beegb .Error ());
};if _gcgf :=_abeg ;_gcgf %360!=0&&_gcgf %90==0{if _fcdae :=(360+_gcgf %360)%360;_fcdae ==90||_fcdae ==270{_gecaf ,_fgaa =_fgaa ,_gecaf ;};};return _gecaf ,_fgaa ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_begde *PdfPage )SetContentStreams (cStreams []string ,encoder _fda .StreamEncoder )error {if len (cStreams )==0{_begde .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fda .NewRawEncoder ();};var _ffedd []*_fda .PdfObjectStream ;for _ ,_dfab :=range cStreams {_dfafd :=&_fda .PdfObjectStream {};
_fbgg :=encoder .MakeStreamDict ();_ffbcf ,_fgag :=encoder .EncodeBytes ([]byte (_dfab ));if _fgag !=nil {return _fgag ;};_fbgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fda .MakeInteger (int64 (len (_ffbcf ))));_dfafd .PdfObjectDictionary =_fbgg ;
_dfafd .Stream =_ffbcf ;_ffedd =append (_ffedd ,_dfafd );};if len (_ffedd )==1{_begde .Contents =_ffedd [0];}else {_gecg :=_fda .MakeArray ();for _ ,_cbefcg :=range _ffedd {_gecg .Append (_cbefcg );};_begde .Contents =_gecg ;};return nil ;};func (_edgcb *PdfWriter )addObjects (_acefe _fda .PdfObject )error {_ga .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _fdadd ,_cfbag :=_acefe .(*_fda .PdfIndirectObject );_cfbag {_ga .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ga .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_acefe ,_fdadd );_ga .Log .Trace ("\u002d\u0020\u0025\u0073",_fdadd .PdfObject );
if _edgcb .addObject (_fdadd ){_afagg :=_edgcb .addObjects (_fdadd .PdfObject );if _afagg !=nil {return _afagg ;};};return nil ;};if _fdfgg ,_fbfbg :=_acefe .(*_fda .PdfObjectStream );_fbfbg {_ga .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ga .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_acefe ,_acefe );
if _edgcb .addObject (_fdfgg ){_adbbbb :=_edgcb .addObjects (_fdfgg .PdfObjectDictionary );if _adbbbb !=nil {return _adbbbb ;};};return nil ;};if _ecadf ,_ffbca :=_acefe .(*_fda .PdfObjectDictionary );_ffbca {_ga .Log .Trace ("\u0044\u0069\u0063\u0074");
_ga .Log .Trace ("\u002d\u0020\u0025\u0073",_acefe );for _ ,_defde :=range _ecadf .Keys (){_fbga :=_ecadf .Get (_defde );if _edaac ,_ggdefd :=_fbga .(*_fda .PdfObjectReference );_ggdefd {_fbga =_edaac .Resolve ();_ecadf .Set (_defde ,_fbga );};if _defde !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bdgcf :=_edgcb .addObjects (_fbga );
_bdgcf !=nil {return _bdgcf ;};}else {if _ ,_bddef :=_fbga .(*_fda .PdfObjectNull );_bddef {continue ;};if _dedf :=_edgcb .hasObject (_fbga );!_dedf {_ga .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_fbga ,_fbga ,_fbga );
_edgcb ._feea [_fbga ]=append (_edgcb ._feea [_fbga ],_ecadf );};};};return nil ;};if _abggc ,_fgbga :=_acefe .(*_fda .PdfObjectArray );_fgbga {_ga .Log .Trace ("\u0041\u0072\u0072a\u0079");_ga .Log .Trace ("\u002d\u0020\u0025\u0073",_acefe );if _abggc ==nil {return _ad .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _ggdbc ,_eeaea :=range _abggc .Elements (){if _edcgf ,_aaagg :=_eeaea .(*_fda .PdfObjectReference );_aaagg {_eeaea =_edcgf .Resolve ();_abggc .Set (_ggdbc ,_eeaea );};if _cfagc :=_edgcb .addObjects (_eeaea );_cfagc !=nil {return _cfagc ;};};return nil ;
};if _ ,_eabfag :=_acefe .(*_fda .PdfObjectReference );_eabfag {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_acefe );
return _ad .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func (_cfebe *fontFile )loadFromSegments (_aecb ,_bccg []byte )error {_ga .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_aecb ),len (_bccg ));
_fggee :=_cfebe .parseASCIIPart (_aecb );if _fggee !=nil {return _fggee ;};_ga .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cfebe );if len (_bccg )==0{return nil ;};_ga .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cfebe );
return nil ;};func _agfeb (_eeag _fda .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ga .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_eeag .String (),_eeag );
_bafc :=NewPdfColorspaceSpecialPattern ();if _cegb ,_fdde :=_eeag .(*_fda .PdfIndirectObject );_fdde {_bafc ._baaa =_cegb ;};_eeag =_fda .TraceToDirectObject (_eeag );if _aafe ,_dabe :=_eeag .(*_fda .PdfObjectName );_dabe {if *_aafe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _bafc ,nil ;};_bbcd ,_fegbf :=_eeag .(*_fda .PdfObjectArray );if !_fegbf {_ga .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_eeag );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bbcd .Len ()!=1&&_bbcd .Len ()!=2{_ga .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bbcd );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_eeag =_bbcd .Get (0);if _dbebe ,_gefe :=_eeag .(*_fda .PdfObjectName );_gefe {if *_dbebe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ga .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_dbebe );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bbcd .Len ()> 1{_eeag =_bbcd .Get (1);_eeag =_fda .TraceToDirectObject (_eeag );_eddde ,_fadc :=NewPdfColorspaceFromPdfObject (_eeag );if _fadc !=nil {return nil ,_fadc ;
};_bafc .UnderlyingCS =_eddde ;};_ga .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_bafc .UnderlyingCS );
return _bafc ,nil ;};

// Items returns all children outline items.
func (_aegcb *OutlineItem )Items ()[]*OutlineItem {return _aegcb .Entries };func (_fcfa *PdfReader )newPdfAnnotationFromIndirectObject (_cfa *_fda .PdfIndirectObject )(*PdfAnnotation ,error ){_abg ,_ded :=_cfa .PdfObject .(*_fda .PdfObjectDictionary );
if !_ded {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fcfa ._bbgee .GetModelFromPrimitive (_abg );model !=nil {_fbfg ,_dcbg :=model .(*PdfAnnotation );if !_dcbg {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _fbfg ,nil ;};_gcg :=&PdfAnnotation {};_gcg ._fbb =_cfa ;_fcfa ._bbgee .Register (_abg ,_gcg );if _eeg :=_abg .Get ("\u0054\u0079\u0070\u0065");_eeg !=nil {_fgff ,_cbg :=_eeg .(*_fda .PdfObjectName );if !_cbg {_ga .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eeg );
}else {if *_fgff !="\u0041\u006e\u006eo\u0074"{_ga .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_fgff );};};};
if _effe :=_abg .Get ("\u0052\u0065\u0063\u0074");_effe !=nil {_gcg .Rect =_effe ;};if _effb :=_abg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_effb !=nil {_gcg .Contents =_effb ;};if _addfc :=_abg .Get ("\u0050");_addfc !=nil {_gcg .P =_addfc ;
};if _abaf :=_abg .Get ("\u004e\u004d");_abaf !=nil {_gcg .NM =_abaf ;};if _efe :=_abg .Get ("\u004d");_efe !=nil {_gcg .M =_efe ;};if _gaea :=_abg .Get ("\u0046");_gaea !=nil {_gcg .F =_gaea ;};if _bccd :=_abg .Get ("\u0041\u0050");_bccd !=nil {_gcg .AP =_bccd ;
};if _acaa :=_abg .Get ("\u0041\u0053");_acaa !=nil {_gcg .AS =_acaa ;};if _ddea :=_abg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_ddea !=nil {_gcg .Border =_ddea ;};if _eeef :=_abg .Get ("\u0043");_eeef !=nil {_gcg .C =_eeef ;};if _fcde :=_abg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_fcde !=nil {_gcg .StructParent =_fcde ;};if _edd :=_abg .Get ("\u004f\u0043");_edd !=nil {_gcg .OC =_edd ;};_bdc :=_abg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bdc ==nil {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_gcg ._egca =nil ;return _gcg ,nil ;};_cgba ,_bcde :=_bdc .(*_fda .PdfObjectName );if !_bcde {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bdc );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bdc );};switch *_cgba {case "\u0054\u0065\u0078\u0074":_gggb ,_dee :=_fcfa .newPdfAnnotationTextFromDict (_abg );
if _dee !=nil {return nil ,_dee ;};_gggb .PdfAnnotation =_gcg ;_gcg ._egca =_gggb ;return _gcg ,nil ;case "\u004c\u0069\u006e\u006b":_bdb ,_becc :=_fcfa .newPdfAnnotationLinkFromDict (_abg );if _becc !=nil {return nil ,_becc ;};_bdb .PdfAnnotation =_gcg ;
_gcg ._egca =_bdb ;return _gcg ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gcfg ,_cfg :=_fcfa .newPdfAnnotationFreeTextFromDict (_abg );if _cfg !=nil {return nil ,_cfg ;};_gcfg .PdfAnnotation =_gcg ;_gcg ._egca =_gcfg ;return _gcg ,nil ;
case "\u004c\u0069\u006e\u0065":_dfd ,_becb :=_fcfa .newPdfAnnotationLineFromDict (_abg );if _becb !=nil {return nil ,_becb ;};_dfd .PdfAnnotation =_gcg ;_gcg ._egca =_dfd ;_ga .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gcg ,_gcg );
_ga .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dfd ,_dfd );_ga .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dfd .PdfAnnotationMarkup ,_dfd .PdfAnnotationMarkup );
return _gcg ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_gdec ,_dfbf :=_fcfa .newPdfAnnotationSquareFromDict (_abg );if _dfbf !=nil {return nil ,_dfbf ;};_gdec .PdfAnnotation =_gcg ;_gcg ._egca =_gdec ;return _gcg ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_def ,_baa :=_fcfa .newPdfAnnotationCircleFromDict (_abg );
if _baa !=nil {return nil ,_baa ;};_def .PdfAnnotation =_gcg ;_gcg ._egca =_def ;return _gcg ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_fcgd ,_gab :=_fcfa .newPdfAnnotationPolygonFromDict (_abg );if _gab !=nil {return nil ,_gab ;};_fcgd .PdfAnnotation =_gcg ;
_gcg ._egca =_fcgd ;return _gcg ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_dbfg ,_bgdd :=_fcfa .newPdfAnnotationPolyLineFromDict (_abg );if _bgdd !=nil {return nil ,_bgdd ;};_dbfg .PdfAnnotation =_gcg ;_gcg ._egca =_dbfg ;return _gcg ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dec ,_bceb :=_fcfa .newPdfAnnotationHighlightFromDict (_abg );if _bceb !=nil {return nil ,_bceb ;};_dec .PdfAnnotation =_gcg ;_gcg ._egca =_dec ;return _gcg ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_cbcb ,_ddc :=_fcfa .newPdfAnnotationUnderlineFromDict (_abg );
if _ddc !=nil {return nil ,_ddc ;};_cbcb .PdfAnnotation =_gcg ;_gcg ._egca =_cbcb ;return _gcg ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bbc ,_ddeg :=_fcfa .newPdfAnnotationSquigglyFromDict (_abg );if _ddeg !=nil {return nil ,_ddeg ;
};_bbc .PdfAnnotation =_gcg ;_gcg ._egca =_bbc ;return _gcg ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_babc ,_dbe :=_fcfa .newPdfAnnotationStrikeOut (_abg );if _dbe !=nil {return nil ,_dbe ;};_babc .PdfAnnotation =_gcg ;_gcg ._egca =_babc ;
return _gcg ,nil ;case "\u0043\u0061\u0072e\u0074":_dbag ,_dece :=_fcfa .newPdfAnnotationCaretFromDict (_abg );if _dece !=nil {return nil ,_dece ;};_dbag .PdfAnnotation =_gcg ;_gcg ._egca =_dbag ;return _gcg ,nil ;case "\u0053\u0074\u0061m\u0070":_ebgf ,_ecdb :=_fcfa .newPdfAnnotationStampFromDict (_abg );
if _ecdb !=nil {return nil ,_ecdb ;};_ebgf .PdfAnnotation =_gcg ;_gcg ._egca =_ebgf ;return _gcg ,nil ;case "\u0049\u006e\u006b":_acb ,_gbf :=_fcfa .newPdfAnnotationInkFromDict (_abg );if _gbf !=nil {return nil ,_gbf ;};_acb .PdfAnnotation =_gcg ;_gcg ._egca =_acb ;
return _gcg ,nil ;case "\u0050\u006f\u0070u\u0070":_gfdf ,_abf :=_fcfa .newPdfAnnotationPopupFromDict (_abg );if _abf !=nil {return nil ,_abf ;};_gfdf .PdfAnnotation =_gcg ;_gcg ._egca =_gfdf ;return _gcg ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dbee ,_gaaa :=_fcfa .newPdfAnnotationFileAttachmentFromDict (_abg );
if _gaaa !=nil {return nil ,_gaaa ;};_dbee .PdfAnnotation =_gcg ;_gcg ._egca =_dbee ;return _gcg ,nil ;case "\u0053\u006f\u0075n\u0064":_deec ,_aab :=_fcfa .newPdfAnnotationSoundFromDict (_abg );if _aab !=nil {return nil ,_aab ;};_deec .PdfAnnotation =_gcg ;
_gcg ._egca =_deec ;return _gcg ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_aadf ,_ccc :=_fcfa .newPdfAnnotationRichMediaFromDict (_abg );if _ccc !=nil {return nil ,_ccc ;};_aadf .PdfAnnotation =_gcg ;_gcg ._egca =_aadf ;return _gcg ,nil ;
case "\u004d\u006f\u0076i\u0065":_aeage ,_cfd :=_fcfa .newPdfAnnotationMovieFromDict (_abg );if _cfd !=nil {return nil ,_cfd ;};_aeage .PdfAnnotation =_gcg ;_gcg ._egca =_aeage ;return _gcg ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ggdc ,_fae :=_fcfa .newPdfAnnotationScreenFromDict (_abg );
if _fae !=nil {return nil ,_fae ;};_ggdc .PdfAnnotation =_gcg ;_gcg ._egca =_ggdc ;return _gcg ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_dcge ,_feag :=_fcfa .newPdfAnnotationWidgetFromDict (_abg );if _feag !=nil {return nil ,_feag ;};_dcge .PdfAnnotation =_gcg ;
_gcg ._egca =_dcge ;return _gcg ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gdd ,_aef :=_fcfa .newPdfAnnotationPrinterMarkFromDict (_abg );if _aef !=nil {return nil ,_aef ;};_gdd .PdfAnnotation =_gcg ;_gcg ._egca =_gdd ;
return _gcg ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_aafb ,_ffcd :=_fcfa .newPdfAnnotationTrapNetFromDict (_abg );if _ffcd !=nil {return nil ,_ffcd ;};_aafb .PdfAnnotation =_gcg ;_gcg ._egca =_aafb ;return _gcg ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bcdd ,_dbaf :=_fcfa .newPdfAnnotationWatermarkFromDict (_abg );
if _dbaf !=nil {return nil ,_dbaf ;};_bcdd .PdfAnnotation =_gcg ;_gcg ._egca =_bcdd ;return _gcg ,nil ;case "\u0033\u0044":_dbef ,_bdbf :=_fcfa .newPdfAnnotation3DFromDict (_abg );if _bdbf !=nil {return nil ,_bdbf ;};_dbef .PdfAnnotation =_gcg ;_gcg ._egca =_dbef ;
return _gcg ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_gcb ,_bbf :=_fcfa .newPdfAnnotationProjectionFromDict (_abg );if _bbf !=nil {return nil ,_bbf ;};_gcb .PdfAnnotation =_gcg ;_gcg ._egca =_gcb ;return _gcg ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_aeae ,_efbb :=_fcfa .newPdfAnnotationRedactFromDict (_abg );
if _efbb !=nil {return nil ,_efbb ;};_aeae .PdfAnnotation =_gcg ;_gcg ._egca =_aeae ;return _gcg ,nil ;};_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cgba );
return nil ,nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ed .ReadSeeker )(*PdfReader ,error ){const _ccgge ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _gggfc (rs ,&ReaderOpts {},false ,_ccgge );};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_eabb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ad .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dfdb :=field .V ;if _dfdb ==nil {return _ad .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bge :=pageNum -1;if _bge < 0||_bge > len (_eabb ._dgaa )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_babbg :=_eabb .Reader .PageList [_bge ];field .P =_babbg .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fda .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_babbg .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _eabb ._ecca ==_eabb ._beg .AcroForm {_eabb ._ecca =_eabb .Reader .AcroForm ;};_deee :=_eabb ._ecca ;if _deee ==nil {_deee =NewPdfAcroForm ();};_deee .SigFlags =_fda .MakeInteger (3);_bfdc :=append (_deee .AllFields (),field .PdfField );_deee .Fields =&_bfdc ;
_eabb .ReplaceAcroForm (_deee );_eabb .UpdatePage (_babbg );_eabb ._dgaa [_bge ]=_babbg ;if _ ,_fege :=field .V .GetDocMDPPermission ();_fege {_eabb ._bdag =NewPermissions (field .V );};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bdbg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gebe :=vals [0];_ggdd :=[]float64 {_gebe };_ddge ,_bdcg :=_bdbg .TintTransform .Evaluate (_ggdd );
if _bdcg !=nil {_ga .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bdcg );_ga .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bdbg .TintTransform );
return nil ,_bdcg ;};_ga .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_ddge ,_bdbg .AlternateSpace );
_fgcdf ,_bdcg :=_bdbg .AlternateSpace .ColorFromFloats (_ddge );if _bdcg !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bdcg );
return nil ,_bdcg ;};return _fgcdf ,nil ;};func _gegd (_aabe *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_fef ,_ebfcf :=_fda .GetDict (_aabe .AP );if !_ebfcf {return nil ,nil ,_ad .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _fef ==nil {return nil ,nil ,nil ;};_bbaee ,_ebfcf :=_fda .GetArray (_aabe .Rect );if !_ebfcf ||_bbaee .Len ()!=4{return nil ,nil ,_ad .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dgcb ,_deff :=NewPdfRectangle (*_bbaee );
if _deff !=nil {return nil ,nil ,_deff ;};_cfbe :=_fda .TraceToDirectObject (_fef .Get ("\u004e"));switch _cgdf :=_cfbe .(type ){case *_fda .PdfObjectStream :_edaeg :=_cgdf ;_fbgb ,_aegf :=NewXObjectFormFromStream (_edaeg );return _fbgb ,_dgcb ,_aegf ;
case *_fda .PdfObjectDictionary :_bcdgc :=_cgdf ;_bdgfa ,_ggbca :=_fda .GetName (_aabe .AS );if !_ggbca {return nil ,nil ,nil ;};if _bcdgc .Get (*_bdgfa )==nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bddd ,_ggbca :=_fda .GetStream (_bcdgc .Get (*_bdgfa ));if !_ggbca {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_bdgfa );
return nil ,nil ,_ad .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_gcggc ,_daffa :=NewXObjectFormFromStream (_bddd );return _gcggc ,_dgcb ,_daffa ;};_ga .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cfbe );
return nil ,nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};var _ pdfFont =(*pdfCIDFontType2 )(nil );func (_egg *PdfReader )newPdfActionTransFromDict (_ffg *_fda .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ffg .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_fbfdd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccaf ,_gcgdg :=color .(*PdfColorPattern );if !_gcgdg {_ga .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ccaf .Color ==nil {return color ,nil ;};if _fbfdd .UnderlyingCS ==nil {return nil ,_ad .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _fbfdd .UnderlyingCS .ColorToRGB (_ccaf .Color );
};

// ToPdfObject implements interface PdfModel.
func (_bgdde *PdfAnnotationFreeText )ToPdfObject ()_fda .PdfObject {_bgdde .PdfAnnotation .ToPdfObject ();_faae :=_bgdde ._fbb ;_cbdae :=_faae .PdfObject .(*_fda .PdfObjectDictionary );_bgdde .PdfAnnotationMarkup .appendToPdfDictionary (_cbdae );_cbdae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_cbdae .SetIfNotNil ("\u0044\u0041",_bgdde .DA );_cbdae .SetIfNotNil ("\u0051",_bgdde .Q );_cbdae .SetIfNotNil ("\u0052\u0043",_bgdde .RC );_cbdae .SetIfNotNil ("\u0044\u0053",_bgdde .DS );_cbdae .SetIfNotNil ("\u0043\u004c",_bgdde .CL );_cbdae .SetIfNotNil ("\u0049\u0054",_bgdde .IT );
_cbdae .SetIfNotNil ("\u0042\u0045",_bgdde .BE );_cbdae .SetIfNotNil ("\u0052\u0044",_bgdde .RD );_cbdae .SetIfNotNil ("\u0042\u0053",_bgdde .BS );_cbdae .SetIfNotNil ("\u004c\u0045",_bgdde .LE );return _faae ;};

// ToPdfObject converts rectangle to a PDF object.
func (_fggdg *PdfRectangle )ToPdfObject ()_fda .PdfObject {return _fda .MakeArray (_fda .MakeFloat (_fggdg .Llx ),_fda .MakeFloat (_fggdg .Lly ),_fda .MakeFloat (_fggdg .Urx ),_fda .MakeFloat (_fggdg .Ury ));};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_gffe *PdfPageResources )GetPatternByName (keyName _fda .PdfObjectName )(*PdfPattern ,bool ){if _gffe .Pattern ==nil {return nil ,false ;};_dcbgf ,_aaffd :=_fda .TraceToDirectObject (_gffe .Pattern ).(*_fda .PdfObjectDictionary );if !_aaffd {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gffe .Pattern );
return nil ,false ;};if _fagcb :=_dcbgf .Get (keyName );_fagcb !=nil {_aeba ,_dbfgcd :=_ffdbc (_fagcb );if _dbfgcd !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dbfgcd );
return nil ,false ;};return _aeba ,true ;};return nil ,false ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fda .StreamEncoder ;Intent _fda .PdfObject ;ImageMask _fda .PdfObject ;Mask _fda .PdfObject ;Matte _fda .PdfObject ;Decode _fda .PdfObject ;Interpolate _fda .PdfObject ;
Alternatives _fda .PdfObject ;SMask _fda .PdfObject ;SMaskInData _fda .PdfObject ;Name _fda .PdfObject ;StructParent _fda .PdfObject ;ID _fda .PdfObject ;OPI _fda .PdfObject ;Metadata _fda .PdfObject ;OC _fda .PdfObject ;Stream []byte ;_gcdcaa *_fda .PdfObjectStream ;
};func (_aced *Image )samplesAddPadding (_abfga []uint32 )[]uint32 {_bdgfb :=_eac .BytesPerLine (int (_aced .Width ),int (_aced .BitsPerComponent ),_aced .ColorComponents )*(8/int (_aced .BitsPerComponent ));_bbgd :=_bdgfb *int (_aced .Height );if len (_abfga )==_bbgd {return _abfga ;
};_dbec :=make ([]uint32 ,_bbgd );_degfg :=int (_aced .Width )*_aced .ColorComponents ;for _cdaad :=0;_cdaad < int (_aced .Height );_cdaad ++{_cdaff :=_cdaad *int (_aced .Width );_adbc :=_cdaad *_bdgfb ;for _aebge :=0;_aebge < _degfg ;_aebge ++{_dbec [_adbc +_aebge ]=_abfga [_cdaff +_aebge ];
};};return _dbec ;};var ImageHandling ImageHandler =DefaultImageHandler {};func (_ggfbc *PdfReader )traverseObjectData (_dafba _fda .PdfObject )error {return _fda .ResolveReferencesDeep (_dafba ,_ggfbc ._fbca );};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fda .PdfObjectArray ;Domain *_fda .PdfObjectArray ;Function []PdfFunction ;Extend *_fda .PdfObjectArray ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_fafegb int ,_eddaa *PdfPage );

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_cgbe *pdfFontSimple )ToPdfObject ()_fda .PdfObject {if _cgbe ._bbeaf ==nil {_cgbe ._bbeaf =&_fda .PdfIndirectObject {};};_edafe :=_cgbe .baseFields ().asPdfObjectDictionary ("");_cgbe ._bbeaf .PdfObject =_edafe ;if _cgbe .FirstChar !=nil {_edafe .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cgbe .FirstChar );
};if _cgbe .LastChar !=nil {_edafe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cgbe .LastChar );};if _cgbe .Widths !=nil {_edafe .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cgbe .Widths );};if _cgbe .Encoding !=nil {_edafe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgbe .Encoding );
}else if _cgbe ._bfbca !=nil {_dgcd :=_cgbe ._bfbca .ToPdfObject ();if _dgcd !=nil {_edafe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dgcd );};};return _cgbe ._bbeaf ;};func (_dabde *PdfReader )newPdfOutlineItemFromIndirectObject (_cegda *_fda .PdfIndirectObject )(*PdfOutlineItem ,error ){_bbcbe ,_cbdacb :=_cegda .PdfObject .(*_fda .PdfObjectDictionary );
if !_cbdacb {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bbdd :=NewPdfOutlineItem ();_beea :=_bbcbe .Get ("\u0054\u0069\u0074l\u0065");
if _beea ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_bdcce ,_acfb :=_fda .GetString (_beea );if !_acfb {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_beea );};_bbdd .Title =_bdcce ;if _bcaba :=_bbcbe .Get ("\u0043\u006f\u0075n\u0074");
_bcaba !=nil {_cfcfg ,_efegd :=_bcaba .(*_fda .PdfObjectInteger );if !_efegd {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_bcaba );};_eddf :=int64 (*_cfcfg );
_bbdd .Count =&_eddf ;};if _ddcbf :=_bbcbe .Get ("\u0044\u0065\u0073\u0074");_ddcbf !=nil {_bbdd .Dest =_fda .ResolveReference (_ddcbf );if !_dabde ._cegf {_bgcdd :=_dabde .traverseObjectData (_bbdd .Dest );if _bgcdd !=nil {return nil ,_bgcdd ;};};};if _fccdb :=_bbcbe .Get ("\u0041");
_fccdb !=nil {_bbdd .A =_fda .ResolveReference (_fccdb );if !_dabde ._cegf {_ffgdc :=_dabde .traverseObjectData (_bbdd .A );if _ffgdc !=nil {return nil ,_ffgdc ;};};};if _bbcbeb :=_bbcbe .Get ("\u0053\u0045");_bbcbeb !=nil {_bbdd .SE =nil ;};if _gece :=_bbcbe .Get ("\u0043");
_gece !=nil {_bbdd .C =_fda .ResolveReference (_gece );};if _fcddg :=_bbcbe .Get ("\u0046");_fcddg !=nil {_bbdd .F =_fda .ResolveReference (_fcddg );};return _bbdd ,nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gcca :=NewPdfAnnotation ();_gbad :=&PdfAnnotationCaret {};_gbad .PdfAnnotation =_gcca ;_gbad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcca .SetContext (_gbad );return _gbad ;};func _dccb (_geab *_fda .PdfObjectDictionary )(*PdfShadingType7 ,error ){_gbfe :=PdfShadingType7 {};
_gcdfa :=_geab .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gcdfa ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gfcfdf ,_ebcea :=_gcdfa .(*_fda .PdfObjectInteger );if !_ebcea {_ga .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcdfa );
return nil ,_fda .ErrTypeError ;};_gbfe .BitsPerCoordinate =_gfcfdf ;_gcdfa =_geab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gcdfa ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gfcfdf ,_ebcea =_gcdfa .(*_fda .PdfObjectInteger );if !_ebcea {_ga .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gcdfa );
return nil ,_fda .ErrTypeError ;};_gbfe .BitsPerComponent =_gfcfdf ;_gcdfa =_geab .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gcdfa ==nil {_ga .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gfcfdf ,_ebcea =_gcdfa .(*_fda .PdfObjectInteger );if !_ebcea {_ga .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gcdfa );
return nil ,_fda .ErrTypeError ;};_gbfe .BitsPerComponent =_gfcfdf ;_gcdfa =_geab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gcdfa ==nil {_ga .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggcfa ,_ebcea :=_gcdfa .(*_fda .PdfObjectArray );if !_ebcea {_ga .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcdfa );
return nil ,_fda .ErrTypeError ;};_gbfe .Decode =_ggcfa ;if _feded :=_geab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_feded !=nil {_gbfe .Function =[]PdfFunction {};if _aaefd ,_eede :=_feded .(*_fda .PdfObjectArray );_eede {for _ ,_ffebf :=range _aaefd .Elements (){_cefc ,_dcfgd :=_agbac (_ffebf );
if _dcfgd !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcfgd );return nil ,_dcfgd ;};_gbfe .Function =append (_gbfe .Function ,_cefc );
};}else {_afad ,_fgab :=_agbac (_feded );if _fgab !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgab );return nil ,_fgab ;};
_gbfe .Function =append (_gbfe .Function ,_afad );};};return &_gbfe ,nil ;};func (_aeddf *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// B returns the value of the blue component of the color.
func (_caab *PdfColorDeviceRGB )B ()float64 {return _caab [2]};

// IsSimple returns true if `font` is a simple font.
func (_eddg *PdfFont )IsSimple ()bool {_ ,_aeeg :=_eddg ._fdbb .(*pdfFontSimple );return _aeeg };

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_gaagc :=NewPdfAnnotation ();_fbgd :=&PdfAnnotationProjection {};_fbgd .PdfAnnotation =_gaagc ;_fbgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaagc .SetContext (_fbgd );return _fbgd ;};

// G returns the value of the green component of the color.
func (_dgbb *PdfColorDeviceRGB )G ()float64 {return _dgbb [1]};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_cdef *PdfOutlineItem )GetContainingPdfObject ()_fda .PdfObject {return _cdef ._ebeee };func (_adfa *PdfReader )newPdfAnnotationMovieFromDict (_edbdg *_fda .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ada :=PdfAnnotationMovie {};_ada .T =_edbdg .Get ("\u0054");
_ada .Movie =_edbdg .Get ("\u004d\u006f\u0076i\u0065");_ada .A =_edbdg .Get ("\u0041");return &_ada ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fddee *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fddee .GetNumComponents (){return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaaf ,_afdg :=_fddee .TintTransform .Evaluate (vals );
if _afdg !=nil {return nil ,_afdg ;};_fcba ,_afdg :=_fddee .AlternateSpace .ColorFromFloats (_aaaf );if _afdg !=nil {return nil ,_afdg ;};return _fcba ,nil ;};func (_aed *PdfReader )newPdfAnnotationUnderlineFromDict (_baf *_fda .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_aafcd :=PdfAnnotationUnderline {};
_cda ,_ccce :=_aed .newPdfAnnotationMarkupFromDict (_baf );if _ccce !=nil {return nil ,_ccce ;};_aafcd .PdfAnnotationMarkup =_cda ;_aafcd .QuadPoints =_baf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aafcd ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_gbfgb *PdfWriter )GetOptimizer ()Optimizer {return _gbfgb ._deefc };

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cd :=NewPdfAction ();_eb :=&PdfActionHide {};_eb .PdfAction =_cd ;_cd .SetContext (_eb );return _eb ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_aedc *PdfWriter )SetDocInfo (info *PdfInfo ){_aedc .setDocInfo (info .ToPdfObject ())};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_fbef *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _cbdcd (_debc *_fda .PdfObjectDictionary ,_cebg *fontCommon )(*pdfCIDFontType2 ,error ){if _cebg ._bfgb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ga .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cebg );
return nil ,_fda .ErrRangeError ;};_cafa :=_efad (_cebg );_ebfdf ,_cddd :=_fda .GetDict (_debc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cddd {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cebg );
return nil ,ErrRequiredAttributeMissing ;};_cafa .CIDSystemInfo =_ebfdf ;_cafa .DW =_debc .Get ("\u0044\u0057");_cafa .W =_debc .Get ("\u0057");_cafa .DW2 =_debc .Get ("\u0044\u0057\u0032");_cafa .W2 =_debc .Get ("\u0057\u0032");_cafa .CIDToGIDMap =_debc .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_cafa ._gcfe =1000.0;if _eafed ,_bfcd :=_fda .GetNumberAsFloat (_cafa .DW );_bfcd ==nil {_cafa ._gcfe =_eafed ;};_deegg ,_bbcb :=_dcdag (_cafa .W );if _bbcb !=nil {return nil ,_bbcb ;};if _deegg ==nil {_deegg =map[_fd .CharCode ]float64 {};};_cafa ._badddg =_deegg ;
return _cafa ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_fad *PdfAnnotation )String ()string {_fga :="";_dcb ,_fee :=_fad .ToPdfObject ().(*_fda .PdfIndirectObject );if _fee {_fga =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fad ._egca ,_dcb .PdfObject .String ());
};return _fga ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_gddf *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _gddf ._daaf ==nil {_gddf ._daaf =_gaf .NewPSExecutor (_gddf .Program );};var _adbge []_gaf .PSObject ;for _ ,_cggae :=range xVec {_adbge =append (_adbge ,_gaf .MakeReal (_cggae ));
};_afgcd ,_gdaf :=_gddf ._daaf .Execute (_adbge );if _gdaf !=nil {return nil ,_gdaf ;};_caabe ,_gdaf :=_gaf .PSObjectArrayToFloat64Array (_afgcd );if _gdaf !=nil {return nil ,_gdaf ;};return _caabe ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gcagf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_aefgc :=func (_geg float64 )float64 {if _geg >=6.0/29{return _geg *_geg *_geg ;};return 108.0/841*(_geg -4/29);};_fedc :=img ._aefacf ;if len (_fedc )!=6{_ga .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_fedc =_gcagf .DecodeArray ();};_cgdb :=_cbc .NewReader (img .getBase ());_gfff :=_eac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._abdg ,img ._aefacf );_ebade :=_cbc .NewWriter (_gfff );_cfgeg :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;
_ecgb :=make ([]uint32 ,3);var (_bfge error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_afgf ,_adcf ,_gfbd float64 ;);for {_bfge =_cgdb .ReadSamples (_ecgb );if _bfge ==_ed .EOF {break ;}else if _bfge !=nil {return img ,_bfge ;};Ls =float64 (_ecgb [0])/_cfgeg ;As =float64 (_ecgb [1])/_cfgeg ;
Bs =float64 (_ecgb [2])/_cfgeg ;Ls =_eac .LinearInterpolate (Ls ,0.0,1.0,_fedc [0],_fedc [1]);As =_eac .LinearInterpolate (As ,0.0,1.0,_fedc [2],_fedc [3]);Bs =_eac .LinearInterpolate (Bs ,0.0,1.0,_fedc [4],_fedc [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_gcagf .WhitePoint [0]*_aefgc (L );Y =_gcagf .WhitePoint [1]*_aefgc (M );Z =_gcagf .WhitePoint [2]*_aefgc (N );_afgf =3.240479*X +-1.537150*Y +-0.498535*Z ;_adcf =-0.969256*X +1.875992*Y +0.041556*Z ;_gfbd =0.055648*X +-0.204043*Y +1.057311*Z ;
_afgf =_f .Min (_f .Max (_afgf ,0),1.0);_adcf =_f .Min (_f .Max (_adcf ,0),1.0);_gfbd =_f .Min (_f .Max (_gfbd ,0),1.0);_ecgb [0]=uint32 (_afgf *_cfgeg );_ecgb [1]=uint32 (_adcf *_cfgeg );_ecgb [2]=uint32 (_gfbd *_cfgeg );if _bfge =_ebade .WriteSamples (_ecgb );
_bfge !=nil {return img ,_bfge ;};};return _gged (&_gfff ),nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_adfd :=NewPdfAction ();_efa :=&PdfActionGoTo3DView {};_efa .PdfAction =_adfd ;_adfd .SetContext (_efa );return _efa ;};var _dgcg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_dgggd *PdfPageResources )GetXObjectImageByName (keyName _fda .PdfObjectName )(*XObjectImage ,error ){_gcfdc ,_bbdc :=_dgggd .GetXObjectByName (keyName );if _gcfdc ==nil {return nil ,nil ;};if _bbdc !=XObjectTypeImage {return nil ,_ad .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_bbbdd ,_aecegc :=NewXObjectImageFromStream (_gcfdc );if _aecegc !=nil {return nil ,_aecegc ;};return _bbbdd ,nil ;};

// String returns a string that describes `font`.
func (_efcgg *PdfFont )String ()string {_deggg :="";if _efcgg ._fdbb .Encoder ()!=nil {_deggg =_efcgg ._fdbb .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_efcgg ._fdbb ,_efcgg .baseFields ().coreString (),_deggg );
};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_fdea *Image )ToGoImage ()(_eg .Image ,error ){_ga .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_dcbba ,_abecd :=_eac .NewImage (int (_fdea .Width ),int (_fdea .Height ),int (_fdea .BitsPerComponent ),_fdea .ColorComponents ,_fdea .Data ,_fdea ._abdg ,_fdea ._aefacf );
if _abecd !=nil {return nil ,_abecd ;};return _dcbba ,nil ;};func (_ffabdc *PdfWriter )setDocInfo (_ccbdd _fda .PdfObject ){if _ffabdc .hasObject (_ffabdc ._gebbe ){delete (_ffabdc ._cfeaa ,_ffabdc ._gebbe );delete (_ffabdc ._ggeda ,_ffabdc ._gebbe );for _gagcf ,_gebdd :=range _ffabdc ._adeed {if _gebdd ==_ffabdc ._gebbe {copy (_ffabdc ._adeed [_gagcf :],_ffabdc ._adeed [_gagcf +1:]);
_ffabdc ._adeed [len (_ffabdc ._adeed )-1]=nil ;_ffabdc ._adeed =_ffabdc ._adeed [:len (_ffabdc ._adeed )-1];break ;};};};_ccacbf :=_fda .PdfIndirectObject {};_ccacbf .PdfObject =_ccbdd ;_ffabdc ._gebbe =&_ccacbf ;_ffabdc .addObject (&_ccacbf );};

// ToPdfObject converts date to a PDF string object.
func (_fffa *PdfDate )ToPdfObject ()_fda .PdfObject {_egdba :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fffa ._ebfe ,_fffa ._dbafg ,_fffa ._acaaab ,_fffa ._cacbeg ,_fffa ._bdbda ,_fffa ._affd ,_fffa ._bbacd ,_fffa ._eegdc ,_fffa ._cbfdee );
return _fda .MakeString (_egdba );};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_acdc *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fda .PdfObject ;};

// Encoder returns the font's text encoder.
func (_adfe pdfFontType3 )Encoder ()_fd .TextEncoder {return _adfe ._egcbe };func (_acda *XObjectImage )getParamsDict ()*_fda .PdfObjectDictionary {_dcgffb :=_fda .MakeDict ();_dcgffb .Set ("\u0057\u0069\u0064t\u0068",_fda .MakeInteger (*_acda .Width ));
_dcgffb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fda .MakeInteger (*_acda .Height ));_dcgffb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fda .MakeInteger (int64 (_acda .ColorSpace .GetNumComponents ())));
_dcgffb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fda .MakeInteger (*_acda .BitsPerComponent ));return _dcgffb ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_gadd *PdfPageResources )SetFontByName (keyName _fda .PdfObjectName ,obj _fda .PdfObject )error {if _gadd .Font ==nil {_gadd .Font =_fda .MakeDict ();};_caeff ,_ebab :=_fda .TraceToDirectObject (_gadd .Font ).(*_fda .PdfObjectDictionary );if !_ebab {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fda .TraceToDirectObject (_gadd .Font ));
return _fda .ErrTypeError ;};_caeff .Set (keyName ,obj );return nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ecf :=NewPdfAction ();_fa :=&PdfActionGoTo {};_fa .PdfAction =_ecf ;_ecf .SetContext (_fa );return _fa ;};func (_afgcg *PdfAcroForm )fill (_fbgfb FieldValueProvider ,_gbefc FieldAppearanceGenerator )error {if _afgcg ==nil {return nil ;
};_fbeg ,_eadda :=_fbgfb .FieldValues ();if _eadda !=nil {return _eadda ;};for _ ,_dafg :=range _afgcg .AllFields (){_fdfb :=_dafg .PartialName ();_gcfge ,_accdd :=_fbeg [_fdfb ];if !_accdd {if _bgfcd ,_gbfag :=_dafg .FullName ();_gbfag ==nil {_gcfge ,_accdd =_fbeg [_bgfcd ];
};};if !_accdd {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fdfb );
continue ;};if _bebg :=_eeede (_dafg ,_gcfge );_bebg !=nil {return _bebg ;};if _gbefc ==nil {continue ;};for _ ,_begg :=range _dafg .Annotations {_cecf ,_bgbff :=_gbefc .GenerateAppearanceDict (_afgcg ,_dafg ,_begg );if _bgbff !=nil {return _bgbff ;};_begg .AP =_cecf ;
_begg .ToPdfObject ();};};return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ggdef *PdfShadingPattern )ToPdfObject ()_fda .PdfObject {_ggdef .PdfPattern .ToPdfObject ();_acdg :=_ggdef .getDict ();if _ggdef .Shading !=nil {_acdg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ggdef .Shading .ToPdfObject ());};if _ggdef .Matrix !=nil {_acdg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggdef .Matrix );
};if _ggdef .ExtGState !=nil {_acdg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ggdef .ExtGState );};return _ggdef ._ccaef ;};

// SetLocation sets the `Location` field of the signature.
func (_cdgdb *PdfSignature )SetLocation (location string ){_cdgdb .Location =_fda .MakeString (location )};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fda .PdfObject )(*PdfFilespec ,error ){_cegd :=&PdfFilespec {};var _dedcg *_fda .PdfObjectDictionary ;if _gdfc ,_gfbg :=_fda .GetIndirect (obj );_gfbg {_cegd ._feba =_gdfc ;_feccc ,_aabdg :=_fda .GetDict (_gdfc .PdfObject );
if !_aabdg {_ga .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fda .ErrTypeError ;};_dedcg =_feccc ;}else if _eeffc ,_cdfa :=_fda .GetDict (obj );
_cdfa {_cegd ._feba =_eeffc ;_dedcg =_eeffc ;}else {_ga .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fda .ErrTypeError ;};if _dedcg ==nil {_ga .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ad .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _caeed :=_dedcg .Get ("\u0054\u0079\u0070\u0065");_caeed !=nil {_agea ,_bgce :=_caeed .(*_fda .PdfObjectName );if !_bgce {_ga .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_caeed );
}else {if *_agea !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ga .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_agea );
};};};if _eabe :=_dedcg .Get ("\u0046\u0053");_eabe !=nil {_cegd .FS =_eabe ;};if _beda :=_dedcg .Get ("\u0046");_beda !=nil {_cegd .F =_beda ;};if _bcbcd :=_dedcg .Get ("\u0055\u0046");_bcbcd !=nil {_cegd .UF =_bcbcd ;};if _abgec :=_dedcg .Get ("\u0044\u004f\u0053");
_abgec !=nil {_cegd .DOS =_abgec ;};if _dgdaf :=_dedcg .Get ("\u004d\u0061\u0063");_dgdaf !=nil {_cegd .Mac =_dgdaf ;};if _bede :=_dedcg .Get ("\u0055\u006e\u0069\u0078");_bede !=nil {_cegd .Unix =_bede ;};if _edegb :=_dedcg .Get ("\u0049\u0044");_edegb !=nil {_cegd .ID =_edegb ;
};if _feagg :=_dedcg .Get ("\u0056");_feagg !=nil {_cegd .V =_feagg ;};if _gfde :=_dedcg .Get ("\u0045\u0046");_gfde !=nil {_cegd .EF =_gfde ;};if _dcbf :=_dedcg .Get ("\u0052\u0046");_dcbf !=nil {_cegd .RF =_dcbf ;};if _ddbe :=_dedcg .Get ("\u0044\u0065\u0073\u0063");
_ddbe !=nil {_cegd .Desc =_ddbe ;};if _edag :=_dedcg .Get ("\u0043\u0049");_edag !=nil {_cegd .CI =_edag ;};return _cegd ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fda .PdfObject ,error );};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fdbbdb *PdfPageResources )GetExtGState (keyName _fda .PdfObjectName )(_fda .PdfObject ,bool ){if _fdbbdb .ExtGState ==nil {return nil ,false ;};_dedbe ,_babcf :=_fda .TraceToDirectObject (_fdbbdb .ExtGState ).(*_fda .PdfObjectDictionary );if !_babcf {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdbbdb .ExtGState );
return nil ,false ;};if _edccg :=_dedbe .Get (keyName );_edccg !=nil {return _edccg ,true ;};return nil ,false ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cagd *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ga .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ga .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ga .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ga .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_dfaf ,_fgfb :=_eac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abdg ,img ._aefacf );if _fgfb !=nil {return Image {},_fgfb ;};_gfgg ,_fgfb :=_eac .NRGBAConverter .Convert (_dfaf );
if _fgfb !=nil {return Image {},_fgfb ;};return _gged (_gfgg .Base ()),nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_eafbbb *pdfSignDictionary )GetSubFilter ()string {_geabg :=_eafbbb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _geabg ==nil {return "";};if _caafa ,_dadbf :=_fda .GetNameVal (_geabg );_dadbf {return _caafa ;};return "";};

// GetContainingPdfObject implements interface PdfModel.
func (_degbf *Permissions )GetContainingPdfObject ()_fda .PdfObject {return _degbf ._bebb };func (_cbacf *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bcea :=_cbacf .Parent ;for _bcea !=nil {_ecffd ,_cbgd :=_fda .GetDict (_bcea );if !_cbgd {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_ad .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _afaab :=_ecffd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_afaab !=nil {_eacdc ,_daecd :=_fda .GetDict (_afaab );
if !_daecd {return nil ,_ad .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_aaeda ,_ggdgcf :=NewPdfPageResourcesFromDict (_eacdc );if _ggdgcf !=nil {return nil ,_ggdgcf ;};return _aaeda ,nil ;
};_bcea =_ecffd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_gbc *PdfReader )newPdfActionRenditionFromDict (_cbfe *_fda .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_cbfe .Get ("\u0052"),AN :_cbfe .Get ("\u0041\u004e"),OP :_cbfe .Get ("\u004f\u0050"),JS :_cbfe .Get ("\u004a\u0053")},nil ;
};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_gaecb *modelManager )GetModelFromPrimitive (primitive _fda .PdfObject )PdfModel {model ,_ebdd :=_gaecb ._bcgfg [primitive ];if !_ebdd {return nil ;};return model ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dcdf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_deaad *PdfSignature )ToPdfObject ()_fda .PdfObject {_dafbgc :=_deaad ._agcfe ;var _afbde *_fda .PdfObjectDictionary ;if _dfef ,_cefde :=_dafbgc .PdfObject .(*pdfSignDictionary );_cefde {_afbde =_dfef .PdfObjectDictionary ;}else {_afbde =_dafbgc .PdfObject .(*_fda .PdfObjectDictionary );
};_afbde .SetIfNotNil ("\u0054\u0079\u0070\u0065",_deaad .Type );_afbde .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_deaad .Filter );_afbde .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_deaad .SubFilter );_afbde .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_deaad .ByteRange );
_afbde .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_deaad .Contents );_afbde .SetIfNotNil ("\u0043\u0065\u0072\u0074",_deaad .Cert );_afbde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_deaad .Name );_afbde .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_deaad .Reason );
_afbde .SetIfNotNil ("\u004d",_deaad .M );_afbde .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_deaad .Reference );_afbde .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_deaad .Changes );_afbde .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_deaad .ContactInfo );
return _dafbgc ;};func (_acdcd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_ccbd *PdfPageResources )HasXObjectByName (keyName _fda .PdfObjectName )bool {_ffbdf ,_ :=_ccbd .GetXObjectByName (keyName );return _ffbdf !=nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_effg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetBorderWidth returns the border style's width.
func (_bafd *PdfBorderStyle )GetBorderWidth ()float64 {if _bafd .W ==nil {return 1;};return *_bafd .W ;};func _efgdf (_bfada _fda .PdfObject ){_ga .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bfada ,_bfada .String ());if _fadde ,_dbcde :=_bfada .(*_fda .PdfObjectStream );
_dbcde {_efae ,_bfcee :=_fda .DecodeStream (_fadde );if _bfcee !=nil {_ga .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_bfcee );return ;};_ga .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_efae );}else if _dgfe ,_becba :=_bfada .(*_fda .PdfIndirectObject );
_becba {_ga .Log .Debug ("\u0025\u0054\u0020%\u0076",_dgfe .PdfObject ,_dgfe .PdfObject );_ga .Log .Debug ("\u0025\u0073",_dgfe .PdfObject .String ());};};

// IsEncrypted returns true if the PDF file is encrypted.
func (_baed *PdfReader )IsEncrypted ()(bool ,error ){return _baed ._edbag .IsEncrypted ()};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gdc :=NewPdfAnnotation ();_dfba :=&PdfAnnotationPopup {};_dfba .PdfAnnotation =_gdc ;_gdc .SetContext (_dfba );return _dfba ;};func _adfcd (_affag *_fda .PdfObjectArray )(float64 ,error ){_dgfgg ,_cage :=_affag .ToFloat64Array ();
if _cage !=nil {_ga .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_affag ,_cage );};switch len (_dgfgg ){case 1:return _dgfgg [0],nil ;
case 3:_ggdeb :=PdfColorspaceDeviceRGB {};_fbefd ,_effaf :=_ggdeb .ColorFromFloats (_dgfgg );if _effaf !=nil {return 0.0,_effaf ;};return _fbefd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fffef :=PdfColorspaceDeviceCMYK {};_cfcbg ,_bcgff :=_fffef .ColorFromFloats (_dgfgg );
if _bcgff !=nil {return 0.0,_bcgff ;};_bedbb ,_bcgff :=_fffef .ColorToRGB (_cfcbg .(*PdfColorDeviceCMYK ));if _bcgff !=nil {return 0.0,_bcgff ;};return _bedbb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cage =_ad .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_ga .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_affag ,_cage );return 0.0,_cage ;};func _eafeb (_abcd _fda .PdfObject )(*PdfColorspaceDeviceN ,error ){_ecfaf :=NewPdfColorspaceDeviceN ();
if _eadd ,_dcgfg :=_abcd .(*_fda .PdfIndirectObject );_dcgfg {_ecfaf ._cgbg =_eadd ;};_abcd =_fda .TraceToDirectObject (_abcd );_fcdff ,_afeaa :=_abcd .(*_fda .PdfObjectArray );if !_afeaa {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _fcdff .Len ()!=4&&_fcdff .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_abcd =_fcdff .Get (0);
_cgbdb ,_afeaa :=_abcd .(*_fda .PdfObjectName );if !_afeaa {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cgbdb !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_abcd =_fcdff .Get (1);
_abcd =_fda .TraceToDirectObject (_abcd );_fgga ,_afeaa :=_abcd .(*_fda .PdfObjectArray );if !_afeaa {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_ecfaf .ColorantNames =_fgga ;_abcd =_fcdff .Get (2);_dafa ,_acfg :=NewPdfColorspaceFromPdfObject (_abcd );if _acfg !=nil {return nil ,_acfg ;};_ecfaf .AlternateSpace =_dafa ;_dgfa ,_acfg :=_agbac (_fcdff .Get (3));if _acfg !=nil {return nil ,_acfg ;
};_ecfaf .TintTransform =_dgfa ;if _fcdff .Len ()==5{_cfee ,_geeg :=_eacf (_fcdff .Get (4));if _geeg !=nil {return nil ,_geeg ;};_ecfaf .Attributes =_cfee ;};return _ecfaf ,nil ;};func (_edda *PdfAnnotationMarkup )appendToPdfDictionary (_dad *_fda .PdfObjectDictionary ){_dad .SetIfNotNil ("\u0054",_edda .T );
if _edda .Popup !=nil {_dad .Set ("\u0050\u006f\u0070u\u0070",_edda .Popup .ToPdfObject ());};_dad .SetIfNotNil ("\u0043\u0041",_edda .CA );_dad .SetIfNotNil ("\u0052\u0043",_edda .RC );_dad .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_edda .CreationDate );
_dad .SetIfNotNil ("\u0049\u0052\u0054",_edda .IRT );_dad .SetIfNotNil ("\u0053\u0075\u0062\u006a",_edda .Subj );_dad .SetIfNotNil ("\u0052\u0054",_edda .RT );_dad .SetIfNotNil ("\u0049\u0054",_edda .IT );_dad .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_edda .ExData );
};func _adddfb ()string {return _ga .Version };

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bgca *Outline )Insert (index uint ,item *OutlineItem ){_bdba :=uint (len (_bgca .Entries ));if index > _bdba {index =_bdba ;};_bgca .Entries =append (_bgca .Entries [:index ],append ([]*OutlineItem {item },_bgca .Entries [index :]...)...);};func (_aeca *DSS )addCRLs (_cgga [][]byte )([]*_fda .PdfObjectStream ,error ){return _aeca .add (&_aeca .CRLs ,_aeca ._agfee ,_cgga );
};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gdbdg *PdfOutline )GetContainingPdfObject ()_fda .PdfObject {return _gdbdg ._bddg };func (_dbfd *PdfReader )newPdfAnnotationCaretFromDict (_fgc *_fda .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_cfbc :=PdfAnnotationCaret {};_eab ,_gfaf :=_dbfd .newPdfAnnotationMarkupFromDict (_fgc );
if _gfaf !=nil {return nil ,_gfaf ;};_cfbc .PdfAnnotationMarkup =_eab ;_cfbc .RD =_fgc .Get ("\u0052\u0044");_cfbc .Sy =_fgc .Get ("\u0053\u0079");return &_cfbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbc *PdfActionGoTo )ToPdfObject ()_fda .PdfObject {_dbc .PdfAction .ToPdfObject ();_ddde :=_dbc ._ddd ;_aac :=_ddde .PdfObject .(*_fda .PdfObjectDictionary );_aac .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeGoTo )));_aac .SetIfNotNil ("\u0044",_dbc .D );
return _ddde ;};func (_bdgfd *PdfShading )getShadingDict ()(*_fda .PdfObjectDictionary ,error ){_acaef :=_bdgfd ._edgffb ;if _geecc ,_cgdcd :=_acaef .(*_fda .PdfIndirectObject );_cgdcd {_cddfb ,_dbdfb :=_geecc .PdfObject .(*_fda .PdfObjectDictionary );
if !_dbdfb {return nil ,_fda .ErrTypeError ;};return _cddfb ,nil ;}else if _gddeb ,_fgfbd :=_acaef .(*_fda .PdfObjectStream );_fgfbd {return _gddeb .PdfObjectDictionary ,nil ;}else if _dcbdc ,_dgcag :=_acaef .(*_fda .PdfObjectDictionary );_dgcag {return _dcbdc ,nil ;
}else {_ga .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_fda .ErrTypeError ;};};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_aag :=NewPdfAnnotation ();_dddb :=&PdfAnnotation3D {};_dddb .PdfAnnotation =_aag ;_aag .SetContext (_dddb );return _dddb ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_egab *PdfReader )GetCatalogMarkInfo ()(_fda .PdfObject ,bool ){if _egab ._debca ==nil {return nil ,false ;};_eddgd :=_egab ._debca .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _eddgd ,_eddgd !=nil ;};func _gfeca (_dgef *_fda .PdfObjectDictionary )bool {for _ ,_abcea :=range _dgef .Keys (){if _ ,_abba :=_dbbef [_abcea .String ()];
_abba {return true ;};};return false ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_bced *PdfShading )GetContext ()PdfModel {return _bced ._badeb };

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_gadfc *PdfReader )GetCatalogStructTreeRoot ()(_fda .PdfObject ,bool ){if _gadfc ._debca ==nil {return nil ,false ;};_acgeg :=_gadfc ._debca .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _acgeg ,_acgeg !=nil ;
};func _dcfaf (_dgdba *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_dgdba }};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_degf *_fda .PdfIndirectObject ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_abdg []byte ;_aefacf []float64 ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bbcab *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bggdg :=_cbc .NewReader (img .getBase ());_adefc :=_eac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fbecc :=_cbc .NewWriter (_adefc );
_aefac :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_ffbe :=make ([]uint32 ,3);var (_cffg uint32 ;ANorm ,X ,Y ,Z ,_dddee ,_bdgf ,_bdcb float64 ;_gcdg error ;);for {_cffg ,_gcdg =_bggdg .ReadSample ();if _gcdg ==_ed .EOF {break ;}else if _gcdg !=nil {return img ,_gcdg ;
};ANorm =float64 (_cffg )/_aefac ;X =_bbcab .WhitePoint [0]*_f .Pow (ANorm ,_bbcab .Gamma );Y =_bbcab .WhitePoint [1]*_f .Pow (ANorm ,_bbcab .Gamma );Z =_bbcab .WhitePoint [2]*_f .Pow (ANorm ,_bbcab .Gamma );_dddee =3.240479*X +-1.537150*Y +-0.498535*Z ;
_bdgf =-0.969256*X +1.875992*Y +0.041556*Z ;_bdcb =0.055648*X +-0.204043*Y +1.057311*Z ;_dddee =_f .Min (_f .Max (_dddee ,0),1.0);_bdgf =_f .Min (_f .Max (_bdgf ,0),1.0);_bdcb =_f .Min (_f .Max (_bdcb ,0),1.0);_ffbe [0]=uint32 (_dddee *_aefac );_ffbe [1]=uint32 (_bdgf *_aefac );
_ffbe [2]=uint32 (_bdcb *_aefac );if _gcdg =_fbecc .WriteSamples (_ffbe );_gcdg !=nil {return img ,_gcdg ;};};return _gged (&_adefc ),nil ;};

// IsCID returns true if the underlying font is CID.
func (_efab *PdfFont )IsCID ()bool {return _efab .baseFields ().isCIDFont ()};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_aacbe *PdfPageResources )AddExtGState (gsName _fda .PdfObjectName ,gsDict _fda .PdfObject )error {if _aacbe .ExtGState ==nil {_aacbe .ExtGState =_fda .MakeDict ();};_egedgf :=_aacbe .ExtGState ;_gffgb ,_bgff :=_fda .TraceToDirectObject (_egedgf ).(*_fda .PdfObjectDictionary );
if !_bgff {_ga .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_egedgf ,_fda .TraceToDirectObject (_egedgf ));
return _fda .ErrTypeError ;};_gffgb .Set (gsName ,gsDict );return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dcecg pdfFontType3 )GetCharMetrics (code _fd .CharCode )(_ade .CharMetrics ,bool ){if _fgbae ,_dace :=_dcecg ._efea [code ];_dace {return _ade .CharMetrics {Wx :_fgbae },true ;};if _ade .IsStdFont (_ade .StdFontName (_dcecg ._fcdg )){return _ade .CharMetrics {Wx :250},true ;
};return _ade .CharMetrics {},false ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_fgcfa *OutlineItem )ToPdfObject ()_fda .PdfObject {_gbcfa ,_ :=_fgcfa .ToPdfOutlineItem ();return _gbcfa .ToPdfObject ();};

// AllFields returns a flattened list of all fields in the form.
func (_dbgcd *PdfAcroForm )AllFields ()[]*PdfField {if _dbgcd ==nil {return nil ;};var _bedac []*PdfField ;if _dbgcd .Fields !=nil {for _ ,_eggdf :=range *_dbgcd .Fields {_bedac =append (_bedac ,_bfef (_eggdf )...);};};return _bedac ;};func _fcgce (_aggc *_fda .PdfObjectDictionary )(*PdfFieldButton ,error ){_fgec :=&PdfFieldButton {};
_fgec .PdfField =NewPdfField ();_fgec .PdfField .SetContext (_fgec );_fgec .Opt ,_ =_fda .GetArray (_aggc .Get ("\u004f\u0070\u0074"));_cgcee :=NewPdfAnnotationWidget ();_cgcee .A ,_ =_fda .GetDict (_aggc .Get ("\u0041"));_cgcee .AP ,_ =_fda .GetDict (_aggc .Get ("\u0041\u0050"));
_cgcee .SetContext (_fgec );_fgec .PdfField .Annotations =append (_fgec .PdfField .Annotations ,_cgcee );return _fgec ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_acad *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=_acad .GetNumComponents (){return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dccca ,_dgca :=_fda .GetNumbersAsFloat (objects );
if _dgca !=nil {return nil ,_dgca ;};return _acad .ColorFromFloats (_dccca );};

// ToPdfObject implements interface PdfModel.
func (_ccg *PdfAction )ToPdfObject ()_fda .PdfObject {_dca :=_ccg ._ddd ;_efd :=_dca .PdfObject .(*_fda .PdfObjectDictionary );_efd .Clear ();_efd .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_efd .SetIfNotNil ("\u0053",_ccg .S );
_efd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ccg .Next );return _dca ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gccga *PdfFontDescriptor )ToPdfObject ()_fda .PdfObject {_gcfca :=_fda .MakeDict ();if _gccga ._fdcb ==nil {_gccga ._fdcb =&_fda .PdfIndirectObject {};};_gccga ._fdcb .PdfObject =_gcfca ;_gcfca .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _gccga .FontName !=nil {_gcfca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gccga .FontName );};if _gccga .FontFamily !=nil {_gcfca .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gccga .FontFamily );};if _gccga .FontStretch !=nil {_gcfca .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gccga .FontStretch );
};if _gccga .FontWeight !=nil {_gcfca .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gccga .FontWeight );};if _gccga .Flags !=nil {_gcfca .Set ("\u0046\u006c\u0061g\u0073",_gccga .Flags );};if _gccga .FontBBox !=nil {_gcfca .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gccga .FontBBox );
};if _gccga .ItalicAngle !=nil {_gcfca .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gccga .ItalicAngle );};if _gccga .Ascent !=nil {_gcfca .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gccga .Ascent );};if _gccga .Descent !=nil {_gcfca .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gccga .Descent );
};if _gccga .Leading !=nil {_gcfca .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gccga .Leading );};if _gccga .CapHeight !=nil {_gcfca .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gccga .CapHeight );};if _gccga .XHeight !=nil {_gcfca .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gccga .XHeight );
};if _gccga .StemV !=nil {_gcfca .Set ("\u0053\u0074\u0065m\u0056",_gccga .StemV );};if _gccga .StemH !=nil {_gcfca .Set ("\u0053\u0074\u0065m\u0048",_gccga .StemH );};if _gccga .AvgWidth !=nil {_gcfca .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gccga .AvgWidth );
};if _gccga .MaxWidth !=nil {_gcfca .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gccga .MaxWidth );};if _gccga .MissingWidth !=nil {_gcfca .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gccga .MissingWidth );};
if _gccga .FontFile !=nil {_gcfca .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gccga .FontFile );};if _gccga .FontFile2 !=nil {_gcfca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gccga .FontFile2 );};if _gccga .FontFile3 !=nil {_gcfca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gccga .FontFile3 );
};if _gccga .CharSet !=nil {_gcfca .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gccga .CharSet );};if _gccga .Style !=nil {_gcfca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gccga .FontName );};if _gccga .Lang !=nil {_gcfca .Set ("\u004c\u0061\u006e\u0067",_gccga .Lang );
};if _gccga .FD !=nil {_gcfca .Set ("\u0046\u0044",_gccga .FD );};if _gccga .CIDSet !=nil {_gcfca .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gccga .CIDSet );};return _gccga ._fdcb ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cbbad *Outline )ToPdfOutline ()*PdfOutline {_gfae :=NewPdfOutline ();var _abgag []*PdfOutlineItem ;var _aegc int64 ;var _dabeg *PdfOutlineItem ;for _ ,_cdcbdc :=range _cbbad .Entries {_cbbda ,_bcded :=_cdcbdc .ToPdfOutlineItem ();_cbbda .Parent =&_gfae .PdfOutlineTreeNode ;
if _dabeg !=nil {_dabeg .Next =&_cbbda .PdfOutlineTreeNode ;_cbbda .Prev =&_dabeg .PdfOutlineTreeNode ;};_abgag =append (_abgag ,_cbbda );_aegc +=_bcded ;_dabeg =_cbbda ;};_dddaeb :=int64 (len (_abgag ));_aegc +=_dddaeb ;if _dddaeb > 0{_gfae .First =&_abgag [0].PdfOutlineTreeNode ;
_gfae .Last =&_abgag [_dddaeb -1].PdfOutlineTreeNode ;_gfae .Count =&_aegc ;};return _gfae ;};func (_bgffb *PdfWriter )addObject (_ddgaad _fda .PdfObject )bool {_gdbgb :=_bgffb .hasObject (_ddgaad );if !_gdbgb {_dabcf :=_fda .ResolveReferencesDeep (_ddgaad ,_bgffb ._ggeda );
if _dabcf !=nil {_ga .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_dabcf );};_bgffb ._adeed =append (_bgffb ._adeed ,_ddgaad );_bgffb ._cfeaa [_ddgaad ]=struct{}{};return true ;};return false ;
};

// ToPdfObject implements interface PdfModel.
func (_aecf *PdfAnnotationText )ToPdfObject ()_fda .PdfObject {_aecf .PdfAnnotation .ToPdfObject ();_gfg :=_aecf ._fbb ;_adc :=_gfg .PdfObject .(*_fda .PdfObjectDictionary );if _aecf .PdfAnnotationMarkup !=nil {_aecf .PdfAnnotationMarkup .appendToPdfDictionary (_adc );
};_adc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0054\u0065\u0078\u0074"));_adc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_aecf .Open );_adc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aecf .Name );_adc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_aecf .State );
_adc .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_aecf .StateModel );return _gfg ;};func _aefge (_fbcd *_fda .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dbace :=PdfShadingType5 {};_gcdcg :=_fbcd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gcdcg ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cfaae ,_fagag :=_gcdcg .(*_fda .PdfObjectInteger );if !_fagag {_ga .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcdcg );
return nil ,_fda .ErrTypeError ;};_dbace .BitsPerCoordinate =_cfaae ;_gcdcg =_fbcd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gcdcg ==nil {_ga .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cfaae ,_fagag =_gcdcg .(*_fda .PdfObjectInteger );if !_fagag {_ga .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gcdcg );
return nil ,_fda .ErrTypeError ;};_dbace .BitsPerComponent =_cfaae ;_gcdcg =_fbcd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gcdcg ==nil {_ga .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_cfaae ,_fagag =_gcdcg .(*_fda .PdfObjectInteger );if !_fagag {_ga .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gcdcg );
return nil ,_fda .ErrTypeError ;};_dbace .VerticesPerRow =_cfaae ;_gcdcg =_fbcd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gcdcg ==nil {_ga .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddgbc ,_fagag :=_gcdcg .(*_fda .PdfObjectArray );if !_fagag {_ga .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcdcg );
return nil ,_fda .ErrTypeError ;};_dbace .Decode =_ddgbc ;if _eece :=_fbcd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eece !=nil {_dbace .Function =[]PdfFunction {};if _cfagf ,_bddcb :=_eece .(*_fda .PdfObjectArray );_bddcb {for _ ,_daaag :=range _cfagf .Elements (){_bdbdgb ,_faebf :=_agbac (_daaag );
if _faebf !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_faebf );return nil ,_faebf ;};_dbace .Function =append (_dbace .Function ,_bdbdgb );
};}else {_gaeff ,_edded :=_agbac (_eece );if _edded !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edded );return nil ,_edded ;
};_dbace .Function =append (_dbace .Function ,_gaeff );};};return &_dbace ,nil ;};func (_fgg *PdfReader )newPdfActionNamedFromDict (_dff *_fda .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dff .Get ("\u004e")},nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_gabff *PdfReader )GetTrailer ()(*_fda .PdfObjectDictionary ,error ){_fdcef :=_gabff ._edbag .GetTrailer ();if _fdcef ==nil {return nil ,_ad .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fdcef ,nil ;
};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_adbe :=PdfColorCalGray (grayVal );return &_adbe ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fdg :=NewPdfAction ();_adf :=&PdfActionLaunch {};_adf .PdfAction =_fdg ;_fdg .SetContext (_adf );return _adf ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bfeg []byte ;_feca []uint32 ;_ddfe *_fda .PdfObjectStream ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_acdf *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_acf ,_adaa :=color .(*PdfColorCalGray );if !_adaa {_ga .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_acf .Val ();X :=_acdf .WhitePoint [0]*_f .Pow (ANorm ,_acdf .Gamma );Y :=_acdf .WhitePoint [1]*_f .Pow (ANorm ,_acdf .Gamma );Z :=_acdf .WhitePoint [2]*_f .Pow (ANorm ,_acdf .Gamma );
_cffe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gdfb :=-0.969256*X +1.875992*Y +0.041556*Z ;_ffgce :=0.055648*X +-0.204043*Y +1.057311*Z ;_cffe =_f .Min (_f .Max (_cffe ,0),1.0);_gdfb =_f .Min (_f .Max (_gdfb ,0),1.0);_ffgce =_f .Min (_f .Max (_ffgce ,0),1.0);
return NewPdfColorDeviceRGB (_cffe ,_gdfb ,_ffgce ),nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_afcce *PdfFunctionType0 )ToPdfObject ()_fda .PdfObject {if _afcce ._ddfe ==nil {_afcce ._ddfe =&_fda .PdfObjectStream {};};_cfff :=_fda .MakeDict ();_cfff .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fda .MakeInteger (0));
_bbec :=&_fda .PdfObjectArray {};for _ ,_bdccf :=range _afcce .Domain {_bbec .Append (_fda .MakeFloat (_bdccf ));};_cfff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbec );_cfcbf :=&_fda .PdfObjectArray {};for _ ,_ddcee :=range _afcce .Range {_cfcbf .Append (_fda .MakeFloat (_ddcee ));
};_cfff .Set ("\u0052\u0061\u006eg\u0065",_cfcbf );_gacb :=&_fda .PdfObjectArray {};for _ ,_afbca :=range _afcce .Size {_gacb .Append (_fda .MakeInteger (int64 (_afbca )));};_cfff .Set ("\u0053\u0069\u007a\u0065",_gacb );_cfff .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fda .MakeInteger (int64 (_afcce .BitsPerSample )));
if _afcce .Order !=1{_cfff .Set ("\u004f\u0072\u0064e\u0072",_fda .MakeInteger (int64 (_afcce .Order )));};_cfff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fda .MakeInteger (int64 (len (_afcce ._bfeg ))));_afcce ._ddfe .Stream =_afcce ._bfeg ;_afcce ._ddfe .PdfObjectDictionary =_cfff ;
return _afcce ._ddfe ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cadf *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cadf ._bbbbc ==nil {_cadf .GetAnnotations ();};_cadf ._bbbbc =append (_cadf ._bbbbc ,annot );};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_gac :=&PdfAnnotation {};_gac ._fbb =_fda .MakeIndirectObject (_fda .MakeDict ());return _gac ;};

// GetVersion gets the document version.
func (_bdegd *PdfWriter )GetVersion ()_fda .Version {return _bdegd ._ccgad };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_agd :=NewPdfAnnotation ();_aaf :=&PdfAnnotationRichMedia {};_aaf .PdfAnnotation =_agd ;_agd .SetContext (_aaf );return _aaf ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_caee _ed .ReadSeeker ;_adca *_fda .PdfParser ;_beg *PdfReader ;Reader *PdfReader ;_dgaa []*PdfPage ;_ecca *PdfAcroForm ;_dggf *DSS ;_bdag *Permissions ;_cbcg _fda .XrefTable ;_fffe int64 ;_ccgf int ;_ddgd []_fda .PdfObject ;_ged map[_fda .PdfObject ]struct{};
_deecf map[_fda .PdfObject ]int64 ;_fagc map[_fda .PdfObject ]struct{};_debb map[_fda .PdfObject ]struct{};_ccbed int64 ;_dade bool ;_ffcdc string ;_dccc *EncryptOptions ;_egfe *PdfInfo ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_fdddbf *Image )ToJBIG2Image ()(*_fda .JBIG2Image ,error ){_bgec ,_gagca :=_fdddbf .ToGoImage ();if _gagca !=nil {return nil ,_gagca ;};return _fda .GoImageToJBIG2 (_bgec ,_fda .JB2ImageAutoThreshold );};

// GetCerts returns the signature certificate chain.
func (_dcff *PdfSignature )GetCerts ()([]*_ec .Certificate ,error ){var _baaff []func ()([]*_ec .Certificate ,error );switch _gddef ,_ :=_fda .GetNameVal (_dcff .SubFilter );_gddef {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_baaff =append (_baaff ,_dcff .extractChainFromPKCS7 ,_dcff .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_baaff =append (_baaff ,_dcff .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_baaff =append (_baaff ,_dcff .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_gddef );};for _ ,_baga :=range _baaff {_gcbed ,_abbee :=_baga ();if _abbee !=nil {return nil ,_abbee ;
};if len (_gcbed )> 0{return _gcbed ,nil ;};};return nil ,ErrSignNoCertificates ;};func (_aggga Image )getBase ()_eac .ImageBase {return _eac .NewImageBase (int (_aggga .Width ),int (_aggga .Height ),int (_aggga .BitsPerComponent ),_aggga .ColorComponents ,_aggga .Data ,_aggga ._abdg ,_aggga ._aefacf );
};

// ToPdfObject implements interface PdfModel.
func (_ffa *PdfAnnotationMovie )ToPdfObject ()_fda .PdfObject {_ffa .PdfAnnotation .ToPdfObject ();_abb :=_ffa ._fbb ;_dbcg :=_abb .PdfObject .(*_fda .PdfObjectDictionary );_dbcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u004d\u006f\u0076i\u0065"));
_dbcg .SetIfNotNil ("\u0054",_ffa .T );_dbcg .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ffa .Movie );_dbcg .SetIfNotNil ("\u0041",_ffa .A );return _abb ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// String returns a string representation of the field.
func (_aacb *PdfField )String ()string {if _dcceb ,_fafe :=_aacb .ToPdfObject ().(*_fda .PdfIndirectObject );_fafe {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aacb ._bbbg ,_dcceb .PdfObject .String ());};return "";};func (_gaa *PdfReader )newPdfActionResetFormFromDict (_dbbe *_fda .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dbbe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dbbe .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fda .PdfObjectArray )(*PdfRectangle ,error ){_eaebg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _cfbde error ;_eaebg .Llx ,_cfbde =_fda .GetNumberAsFloat (arr .Get (0));if _cfbde !=nil {return nil ,_cfbde ;};_eaebg .Lly ,_cfbde =_fda .GetNumberAsFloat (arr .Get (1));if _cfbde !=nil {return nil ,_cfbde ;};_eaebg .Urx ,_cfbde =_fda .GetNumberAsFloat (arr .Get (2));
if _cfbde !=nil {return nil ,_cfbde ;};_eaebg .Ury ,_cfbde =_fda .GetNumberAsFloat (arr .Get (3));if _cfbde !=nil {return nil ,_cfbde ;};return &_eaebg ,nil ;};

// GetStandardApplier gets currently used StandardApplier..
func (_dgfbec *PdfWriter )GetStandardApplier ()StandardApplier {return _dgfbec ._babeb };

// GetContentStream returns the XObject Form's content stream.
func (_edcgd *XObjectForm )GetContentStream ()([]byte ,error ){_eefgd ,_dagab :=_fda .DecodeStream (_edcgd ._adacca );if _dagab !=nil {return nil ,_dagab ;};return _eefgd ,nil ;};func (_edbf *PdfReader )newPdfPageFromDict (_ggeaa *_fda .PdfObjectDictionary )(*PdfPage ,error ){_dccfa :=NewPdfPage ();
_dccfa ._bfdab =_ggeaa ;_dfdbf :=*_ggeaa ;_bgcb ,_cbcgd :=_dfdbf .Get ("\u0054\u0079\u0070\u0065").(*_fda .PdfObjectName );if !_cbcgd {return nil ,_ad .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_bgcb !="\u0050\u0061\u0067\u0065"{return nil ,_ad .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _ecdgea :=_dfdbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_ecdgea !=nil {_dccfa .Parent =_ecdgea ;};if _bgfbc :=_dfdbf .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bgfbc !=nil {_dgeea ,_dacc :=_fda .GetString (_bgfbc );if !_dacc {return nil ,_ad .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_fdae ,_gfcfe :=NewPdfDate (_dgeea .Str ());if _gfcfe !=nil {return nil ,_gfcfe ;};_dccfa .LastModified =&_fdae ;};if _gfebc :=_dfdbf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gfebc !=nil &&!_fda .IsNullObject (_gfebc ){_cbagf ,_edbbb :=_fda .GetDict (_gfebc );
if !_edbbb {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gfebc );};var _gbbfe error ;_dccfa .Resources ,_gbbfe =NewPdfPageResourcesFromDict (_cbagf );
if _gbbfe !=nil {return nil ,_gbbfe ;};}else {_cccc ,_bffg :=_dccfa .getParentResources ();if _bffg !=nil {return nil ,_bffg ;};if _cccc ==nil {_cccc =NewPdfPageResources ();};_dccfa .Resources =_cccc ;};if _cfdfc :=_dfdbf .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cfdfc !=nil {_fecce ,_gbefcc :=_fda .GetArray (_cfdfc );if !_gbefcc {return nil ,_ad .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _agae error ;
_dccfa .MediaBox ,_agae =NewPdfRectangle (*_fecce );if _agae !=nil {return nil ,_agae ;};};if _baag :=_dfdbf .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_baag !=nil {_bbaag ,_ddac :=_fda .GetArray (_baag );if !_ddac {return nil ,_ad .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dffd error ;_dccfa .CropBox ,_dffd =NewPdfRectangle (*_bbaag );if _dffd !=nil {return nil ,_dffd ;};};if _abdbf :=_dfdbf .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_abdbf !=nil {_cfffe ,_aagb :=_fda .GetArray (_abdbf );if !_aagb {return nil ,_ad .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fgdaa error ;_dccfa .BleedBox ,_fgdaa =NewPdfRectangle (*_cfffe );if _fgdaa !=nil {return nil ,_fgdaa ;};};if _ccacb :=_dfdbf .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_ccacb !=nil {_fbfdge ,_gffa :=_fda .GetArray (_ccacb );if !_gffa {return nil ,_ad .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bgabg error ;_dccfa .TrimBox ,_bgabg =NewPdfRectangle (*_fbfdge );if _bgabg !=nil {return nil ,_bgabg ;};};if _geae :=_dfdbf .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_geae !=nil {_cbge ,_gaae :=_fda .GetArray (_geae );if !_gaae {return nil ,_ad .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bbeae error ;_dccfa .ArtBox ,_bbeae =NewPdfRectangle (*_cbge );if _bbeae !=nil {return nil ,_bbeae ;};};if _gbeff :=_dfdbf .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_gbeff !=nil {_dccfa .BoxColorInfo =_gbeff ;};
if _gebge :=_dfdbf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gebge !=nil {_dccfa .Contents =_gebge ;};if _bbeca :=_dfdbf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bbeca !=nil {_faagd ,_cfeef :=_fda .GetNumberAsInt64 (_bbeca );if _cfeef !=nil {return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dccfa .Rotate =&_faagd ;};if _dgfbf :=_dfdbf .Get ("\u0047\u0072\u006fu\u0070");_dgfbf !=nil {_dccfa .Group =_dgfbf ;};if _bcgac :=_dfdbf .Get ("\u0054\u0068\u0075m\u0062");_bcgac !=nil {_dccfa .Thumb =_bcgac ;};if _cecea :=_dfdbf .Get ("\u0042");_cecea !=nil {_dccfa .B =_cecea ;
};if _bbgfee :=_dfdbf .Get ("\u0044\u0075\u0072");_bbgfee !=nil {_dccfa .Dur =_bbgfee ;};if _cbbc :=_dfdbf .Get ("\u0054\u0072\u0061n\u0073");_cbbc !=nil {_dccfa .Trans =_cbbc ;};if _eabcc :=_dfdbf .Get ("\u0041\u0041");_eabcc !=nil {_dccfa .AA =_eabcc ;
};if _bdecb :=_dfdbf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bdecb !=nil {_dccfa .Metadata =_bdecb ;};if _abfeg :=_dfdbf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_abfeg !=nil {_dccfa .PieceInfo =_abfeg ;};if _gddfe :=_dfdbf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_gddfe !=nil {_dccfa .StructParents =_gddfe ;};if _dgad :=_dfdbf .Get ("\u0049\u0044");_dgad !=nil {_dccfa .ID =_dgad ;};if _bgcag :=_dfdbf .Get ("\u0050\u005a");_bgcag !=nil {_dccfa .PZ =_bgcag ;};if _gaeba :=_dfdbf .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_gaeba !=nil {_dccfa .SeparationInfo =_gaeba ;};if _bebaa :=_dfdbf .Get ("\u0054\u0061\u0062\u0073");_bebaa !=nil {_dccfa .Tabs =_bebaa ;};if _gbdd :=_dfdbf .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_gbdd !=nil {_dccfa .TemplateInstantiated =_gbdd ;};if _ebgab :=_dfdbf .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ebgab !=nil {_dccfa .PresSteps =_ebgab ;};if _ceeg :=_dfdbf .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ceeg !=nil {_dccfa .UserUnit =_ceeg ;
};if _dcfg :=_dfdbf .Get ("\u0056\u0050");_dcfg !=nil {_dccfa .VP =_dcfg ;};if _cbedg :=_dfdbf .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_cbedg !=nil {_dccfa .Annots =_cbedg ;};_dccfa ._ebfda =_edbf ;return _dccfa ,nil ;};

// String returns a string that describes `base`.
func (_gege fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gege .coreString ());};func (_geaa *Image )samplesTrimPadding (_ecdea []uint32 )[]uint32 {_cbee :=_geaa .ColorComponents *int (_geaa .Width )*int (_geaa .Height );
if len (_ecdea )==_cbee {return _ecdea ;};_ccfe :=make ([]uint32 ,_cbee );_eabff :=int (_geaa .Width )*_geaa .ColorComponents ;var _febaf ,_bffff ,_eacce ,_gedag int ;_eabg :=_eac .BytesPerLine (int (_geaa .Width ),int (_geaa .BitsPerComponent ),_geaa .ColorComponents );
for _febaf =0;_febaf < int (_geaa .Height );_febaf ++{_bffff =_febaf *int (_geaa .Width );_eacce =_febaf *_eabg ;for _gedag =0;_gedag < _eabff ;_gedag ++{_ccfe [_bffff +_gedag ]=_ecdea [_eacce +_gedag ];};};return _ccfe ;};func _eafef ()string {_bcaeg .Lock ();
defer _bcaeg .Unlock ();return _fffgg };func (_bbfdb *PdfWriter )writeObjects (){_ga .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bbfdb ._adeed ));_bbfdb ._aaeac =make (map[int ]crossReference );_bbfdb ._aaeac [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _bbfdb ._agaee .ObjectMap !=nil {for _fadcb ,_fbcbcgg :=range _bbfdb ._agaee .ObjectMap {if _fadcb ==0{continue ;};if _fbcbcgg .XType ==_fda .XrefTypeObjectStream {_dddggg :=crossReference {Type :2,ObjectNumber :_fbcbcgg .OsObjNumber ,Index :_fbcbcgg .OsObjIndex };
_bbfdb ._aaeac [_fadcb ]=_dddggg ;};if _fbcbcgg .XType ==_fda .XrefTypeTableEntry {_fbbc :=crossReference {Type :1,ObjectNumber :_fbcbcgg .ObjectNumber ,Offset :_fbcbcgg .Offset };_bbfdb ._aaeac [_fadcb ]=_fbbc ;};};};};func _bdfab (_bfccc _fda .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_baabb :=NewPdfColorspaceSpecialSeparation ();
if _cgeb ,_gebg :=_bfccc .(*_fda .PdfIndirectObject );_gebg {_baabb ._cfga =_cgeb ;};_bfccc =_fda .TraceToDirectObject (_bfccc );_ecgf ,_adeee :=_bfccc .(*_fda .PdfObjectArray );if !_adeee {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _ecgf .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_bfccc =_ecgf .Get (0);
_edaf ,_adeee :=_bfccc .(*_fda .PdfObjectName );if !_adeee {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_edaf !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_bfccc =_ecgf .Get (1);_edaf ,_adeee =_bfccc .(*_fda .PdfObjectName );if !_adeee {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_baabb .ColorantName =_edaf ;_bfccc =_ecgf .Get (2);_bfca ,_ebfd :=NewPdfColorspaceFromPdfObject (_bfccc );if _ebfd !=nil {return nil ,_ebfd ;};_baabb .AlternateSpace =_bfca ;_adfbc ,_ebfd :=_agbac (_ecgf .Get (3));if _ebfd !=nil {return nil ,_ebfd ;
};_baabb .TintTransform =_adfbc ;return _baabb ,nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ddf :=NewPdfAction ();_bec :=&PdfActionThread {};_bec .PdfAction =_ddf ;_ddf .SetContext (_bec );return _bec ;};

// ToPdfObject implements interface PdfModel.
func (_bdaa *PdfAnnotationPopup )ToPdfObject ()_fda .PdfObject {_bdaa .PdfAnnotation .ToPdfObject ();_feb :=_bdaa ._fbb ;_ggbd :=_feb .PdfObject .(*_fda .PdfObjectDictionary );_ggbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0050\u006f\u0070u\u0070"));
_ggbd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdaa .Parent );_ggbd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bdaa .Open );return _feb ;};func (_bgdf *PdfWriter )getPdfVersion ()string {return _c .Sprintf ("\u0025\u0064\u002e%\u0064",_bgdf ._ccgad .Major ,_bgdf ._ccgad .Minor );
};func (_fbdfc *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _fbdfc ._defd };

// GetContentStreams returns the content stream as an array of strings.
func (_abfbc *PdfPage )GetContentStreams ()([]string ,error ){_bfcfce :=_abfbc .GetContentStreamObjs ();var _gceae []string ;for _ ,_dbfcg :=range _bfcfce {_abfge ,_abegb :=_dgbg (_dbfcg );if _abegb !=nil {return nil ,_abegb ;};_gceae =append (_gceae ,_abfge );
};return _gceae ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_cfgf *PdfAnnotation )ToPdfObject ()_fda .PdfObject {_dfbe :=_cfgf ._fbb ;_aaeae :=_dfbe .PdfObject .(*_fda .PdfObjectDictionary );_aaeae .Clear ();_aaeae .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0041\u006e\u006eo\u0074"));_aaeae .SetIfNotNil ("\u0052\u0065\u0063\u0074",_cfgf .Rect );
_aaeae .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cfgf .Contents );_aaeae .SetIfNotNil ("\u0050",_cfgf .P );_aaeae .SetIfNotNil ("\u004e\u004d",_cfgf .NM );_aaeae .SetIfNotNil ("\u004d",_cfgf .M );_aaeae .SetIfNotNil ("\u0046",_cfgf .F );
_aaeae .SetIfNotNil ("\u0041\u0050",_cfgf .AP );_aaeae .SetIfNotNil ("\u0041\u0053",_cfgf .AS );_aaeae .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_cfgf .Border );_aaeae .SetIfNotNil ("\u0043",_cfgf .C );_aaeae .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cfgf .StructParent );
_aaeae .SetIfNotNil ("\u004f\u0043",_cfgf .OC );return _dfbe ;};func _ffddb (_ebbe map[_ade .GID ]int ,_dgcbg uint16 )*_fda .PdfObjectArray {_gdga :=&_fda .PdfObjectArray {};_cdcbd :=_ade .GID (_dgcbg );for _dddd :=_ade .GID (0);_dddd < _cdcbd ;{_gccdb ,_cece :=_ebbe [_dddd ];
if !_cece {_dddd ++;continue ;};_dbfgag :=_dddd ;for _adddfa :=_dbfgag +1;_adddfa < _cdcbd ;_adddfa ++{if _bbfgb ,_dgae :=_ebbe [_adddfa ];!_dgae ||_gccdb !=_bbfgb {break ;};_dbfgag =_adddfa ;};_gdga .Append (_fda .MakeInteger (int64 (_dddd )));_gdga .Append (_fda .MakeInteger (int64 (_dbfgag )));
_gdga .Append (_fda .MakeInteger (int64 (_gccdb )));_dddd =_dbfgag +1;};return _gdga ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_abed :=&PdfFilespec {};_abed ._feba =_fda .MakeIndirectObject (_fda .MakeDict ());return _abed ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_cede *PdfAcroForm )ToPdfObject ()_fda .PdfObject {_fgbea :=_cede ._gcddg ;_ebdge :=_fgbea .PdfObject .(*_fda .PdfObjectDictionary );if _cede .Fields !=nil {_cebgd :=_fda .PdfObjectArray {};for _ ,_ebagg :=range *_cede .Fields {_fegg :=_ebagg .GetContext ();
if _fegg !=nil {_cebgd .Append (_fegg .ToPdfObject ());}else {_cebgd .Append (_ebagg .ToPdfObject ());};};_ebdge .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cebgd );};if _cede .NeedAppearances !=nil {_ebdge .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_cede .NeedAppearances );
};if _cede .SigFlags !=nil {_ebdge .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_cede .SigFlags );};if _cede .CO !=nil {_ebdge .Set ("\u0043\u004f",_cede .CO );};if _cede .DR !=nil {_ebdge .Set ("\u0044\u0052",_cede .DR .ToPdfObject ());};if _cede .DA !=nil {_ebdge .Set ("\u0044\u0041",_cede .DA );
};if _cede .Q !=nil {_ebdge .Set ("\u0051",_cede .Q );};if _cede .XFA !=nil {_ebdge .Set ("\u0058\u0046\u0041",_cede .XFA );};return _fgbea ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_dcee *PdfShading )GetContainingPdfObject ()_fda .PdfObject {return _dcee ._edgffb };

// GetNumComponents returns the number of color components.
func (_ceb *PdfColorspaceICCBased )GetNumComponents ()int {return _ceb .N };

// AddImageResource adds an image to the XObject resources.
func (_abdcf *PdfPage )AddImageResource (name _fda .PdfObjectName ,ximg *XObjectImage )error {var _abfc *_fda .PdfObjectDictionary ;if _abdcf .Resources .XObject ==nil {_abfc =_fda .MakeDict ();_abdcf .Resources .XObject =_abfc ;}else {var _eefeaf bool ;
_abfc ,_eefeaf =(_abdcf .Resources .XObject ).(*_fda .PdfObjectDictionary );if !_eefeaf {return _ad .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_abfc .Set (name ,ximg .ToPdfObject ());
return nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_aaeef ,_ggeac :=_acc .ParsePdfTime (dateStr );if _ggeac !=nil {return PdfDate {},_ggeac ;};return NewPdfDateFromTime (_aaeef );};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_bbgfeg =keywords };

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fda .PdfObjectInteger ;BitsPerComponent *_fda .PdfObjectInteger ;BitsPerFlag *_fda .PdfObjectInteger ;Decode *_fda .PdfObjectArray ;Function []PdfFunction ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fda .PdfObject ;BS _fda .PdfObject ;};

// Register registers (caches) a model to primitive object relationship.
func (_agafe *modelManager )Register (primitive _fda .PdfObject ,model PdfModel ){_agafe ._cagg [model ]=primitive ;_agafe ._bcgfg [primitive ]=model ;};func (_ecdac *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _ecdac ._defd };

// ToPdfObject implements interface PdfModel.
func (_dgg *PdfActionJavaScript )ToPdfObject ()_fda .PdfObject {_dgg .PdfAction .ToPdfObject ();_fbd :=_dgg ._ddd ;_cbd :=_fbd .PdfObject .(*_fda .PdfObjectDictionary );_cbd .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeJavaScript )));_cbd .SetIfNotNil ("\u004a\u0053",_dgg .JS );
return _fbd ;};

// ToPdfObject implements interface PdfModel.
func (_dgda *PdfAnnotationFileAttachment )ToPdfObject ()_fda .PdfObject {_dgda .PdfAnnotation .ToPdfObject ();_faaef :=_dgda ._fbb ;_gbag :=_faaef .PdfObject .(*_fda .PdfObjectDictionary );_dgda .PdfAnnotationMarkup .appendToPdfDictionary (_gbag );_gbag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_gbag .SetIfNotNil ("\u0046\u0053",_dgda .FS );_gbag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgda .Name );return _faaef ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_aefbg *PdfPage )GetPageDict ()*_fda .PdfObjectDictionary {_fcee :=_aefbg ._bfdab ;_fcee .Clear ();_fcee .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0050\u0061\u0067\u0065"));_fcee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aefbg .Parent );
if _aefbg .LastModified !=nil {_fcee .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_aefbg .LastModified .ToPdfObject ());};if _aefbg .Resources !=nil {_fcee .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aefbg .Resources .ToPdfObject ());
};if _aefbg .CropBox !=nil {_fcee .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_aefbg .CropBox .ToPdfObject ());};if _aefbg .MediaBox !=nil {_fcee .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_aefbg .MediaBox .ToPdfObject ());};if _aefbg .BleedBox !=nil {_fcee .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_aefbg .BleedBox .ToPdfObject ());
};if _aefbg .TrimBox !=nil {_fcee .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_aefbg .TrimBox .ToPdfObject ());};if _aefbg .ArtBox !=nil {_fcee .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_aefbg .ArtBox .ToPdfObject ());};_fcee .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_aefbg .BoxColorInfo );
_fcee .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aefbg .Contents );if _aefbg .Rotate !=nil {_fcee .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fda .MakeInteger (*_aefbg .Rotate ));};_fcee .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_aefbg .Group );
_fcee .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_aefbg .Thumb );_fcee .SetIfNotNil ("\u0042",_aefbg .B );_fcee .SetIfNotNil ("\u0044\u0075\u0072",_aefbg .Dur );_fcee .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_aefbg .Trans );_fcee .SetIfNotNil ("\u0041\u0041",_aefbg .AA );
_fcee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aefbg .Metadata );_fcee .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_aefbg .PieceInfo );_fcee .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_aefbg .StructParents );
_fcee .SetIfNotNil ("\u0049\u0044",_aefbg .ID );_fcee .SetIfNotNil ("\u0050\u005a",_aefbg .PZ );_fcee .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_aefbg .SeparationInfo );_fcee .SetIfNotNil ("\u0054\u0061\u0062\u0073",_aefbg .Tabs );
_fcee .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_aefbg .TemplateInstantiated );_fcee .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_aefbg .PresSteps );_fcee .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_aefbg .UserUnit );
_fcee .SetIfNotNil ("\u0056\u0050",_aefbg .VP );if _aefbg ._bbbbc !=nil {_agbg :=_fda .MakeArray ();for _ ,_bgfcc :=range _aefbg ._bbbbc {if _agag :=_bgfcc .GetContext ();_agag !=nil {_agbg .Append (_agag .ToPdfObject ());}else {_agbg .Append (_bgfcc .ToPdfObject ());
};};if _agbg .Len ()> 0{_fcee .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_agbg );};}else if _aefbg .Annots !=nil {_fcee .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_aefbg .Annots );};return _fcee ;};func (_faceb *PdfReader )lookupPageByObject (_bgbca _fda .PdfObject )(*PdfPage ,error ){return nil ,_ad .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject returns the PDF representation of the pattern.
func (_egadd *PdfPattern )ToPdfObject ()_fda .PdfObject {_gffce :=_egadd .getDict ();_gffce .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gffce .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fda .MakeInteger (_egadd .PatternType ));
return _egadd ._ccaef ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ceafd *PdfPage )Duplicate ()*PdfPage {_dccfg :=*_ceafd ;_dccfg ._bfdab =_fda .MakeDict ();_dccfg ._ebgg =_fda .MakeIndirectObject (_dccfg ._bfdab );return &_dccfg ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fda .PdfObject ;AN _fda .PdfObject ;OP _fda .PdfObject ;JS _fda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cfcg *PdfAnnotationRichMedia )ToPdfObject ()_fda .PdfObject {_cfcg .PdfAnnotation .ToPdfObject ();_cfge :=_cfcg ._fbb ;_eea :=_cfge .PdfObject .(*_fda .PdfObjectDictionary );_eea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_eea .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_cfcg .RichMediaSettings );_eea .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_cfcg .RichMediaContent );
return _cfge ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fda .PdfObjectName ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ebfbd *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdgg ,_gccca :=_fda .GetNumbersAsFloat (objects );
if _gccca !=nil {return nil ,_gccca ;};return _ebfbd .ColorFromFloats (_cdgg );};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fda .StreamEncoder )(*XObjectImage ,error ){_dbcbb :=NewXObjectImage ();return UpdateXObjectImageFromImage (_dbcbb ,img ,cs ,encoder );};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func (_bfebb *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _cceb :=_bfebb ._defd ;_cceb !=nil {return _cceb ;};return _bfebb ._gdag ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_fda .PdfParser ;DiffPolicy _ag .DiffPolicy ;};

// GetNumPages returns the number of pages in the document.
func (_fadgf *PdfReader )GetNumPages ()(int ,error ){if _fadgf ._edbag .GetCrypter ()!=nil &&!_fadgf ._edbag .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_fadgf ._afgcgb ),nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_feae pdfCIDFontType2 )GetCharMetrics (code _fd .CharCode )(_ade .CharMetrics ,bool ){if _ffbb ,_cfba :=_feae ._badddg [code ];_cfba {return _ade .CharMetrics {Wx :_ffbb },true ;};_aabdga :=rune (code );_adcec ,_egcd :=_feae ._bcaea [_aabdga ];if !_egcd {_adcec =int (_feae ._gcfe );
};return _ade .CharMetrics {Wx :float64 (_adcec )},true ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fda .PdfObject ;RichMediaContent _fda .PdfObject ;};func (_dffb *PdfWriter )writeDocumentVersion (){if _dffb ._dfecb {_dffb .writeString ("\u000a");}else {_dffb .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_dffb ._ccgad .Major ,_dffb ._ccgad .Minor ));
_dffb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_acedb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_acedb .ToPdfOutline ().PdfOutlineTreeNode ;};

// Items returns all children outline items.
func (_dbeaa *Outline )Items ()[]*OutlineItem {return _dbeaa .Entries };func _ffaa (_agggd *_fda .PdfObjectDictionary ,_cdbdf *fontCommon )(*pdfFontType0 ,error ){_gace ,_dgdae :=_fda .GetArray (_agggd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_dgdae {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_cdbdf );
return nil ,_fda .ErrRangeError ;};if _gace .Len ()!=1{_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_gace .Len ());return nil ,_fda .ErrRangeError ;
};_bdab ,_cgge :=_dddbea (_gace .Get (0),false );if _cgge !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cgge ,_cdbdf );
return nil ,_cgge ;};_beec :=_abdaf (_cdbdf );_beec .DescendantFont =_bdab ;_fbdbd ,_dgdae :=_fda .GetNameVal (_agggd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dgdae {if _fbdbd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_fbdbd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_beec ._bcgee =_fd .NewIdentityTextEncoder (_fbdbd );
}else if _bg .IsPredefinedCMap (_fbdbd ){_beec ._bcebb ,_cgge =_bg .LoadPredefinedCMap (_fbdbd );if _cgge !=nil {_ga .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fbdbd ,_cgge );
};}else {_ga .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_fbdbd );};};if _daece :=_bdab .baseFields ()._gaega ;_daece !=nil {if _gdeea :=_daece .Name ();_gdeea =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_gdeea =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_gdeea =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_gdeea =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_beec ._bcgee =_fd .NewCMapEncoder (_fbdbd ,_beec ._bcebb ,_daece );
};};return _beec ,nil ;};

// SetContext sets the sub action (context).
func (_aca *PdfAction )SetContext (ctx PdfModel ){_aca ._dg =ctx };

// ToGoTime returns the date in time.Time format.
func (_deegd PdfDate )ToGoTime ()_ee .Time {_edgb :=int (_deegd ._eegdc *60*60+_deegd ._cbfdee *60);switch _deegd ._bbacd {case '-':_edgb =-_edgb ;case 'Z':_edgb =0;};_aaab :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_deegd ._bbacd ,_deegd ._eegdc ,_deegd ._cbfdee );
_ebdea :=_ee .FixedZone (_aaab ,_edgb );return _ee .Date (int (_deegd ._ebfe ),_ee .Month (_deegd ._dbafg ),int (_deegd ._acaaab ),int (_deegd ._cacbeg ),int (_deegd ._bdbda ),int (_deegd ._affd ),0,_ebdea );};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_gacgb *LTV )enable (_eafcg ,_bbgfe []*_ec .Certificate ,_dcbeb string )error {_gdcg ,_dafbf ,_cegg :=_gacgb .buildCertChain (_eafcg ,_bbgfe );if _cegg !=nil {return _cegg ;};_cfca ,_cegg :=_gacgb .getCerts (_gdcg );
if _cegg !=nil {return _cegg ;};var _gdbdc ,_gdffc [][]byte ;if _gacgb .OCSPClient !=nil {_gdbdc ,_cegg =_gacgb .getOCSPs (_gdcg ,_dafbf );if _cegg !=nil {return _cegg ;};};if _gacgb .CRLClient !=nil {_gdffc ,_cegg =_gacgb .getCRLs (_gdcg );if _cegg !=nil {return _cegg ;
};};_cbba :=_gacgb ._bcaabc ;_dgggc ,_cegg :=_cbba .addCerts (_cfca );if _cegg !=nil {return _cegg ;};_aabgec ,_cegg :=_cbba .addOCSPs (_gdbdc );if _cegg !=nil {return _cegg ;};_beddc ,_cegg :=_cbba .addCRLs (_gdffc );if _cegg !=nil {return _cegg ;};if _dcbeb !=""{_cbba .VRI [_dcbeb ]=&VRI {Cert :_dgggc ,OCSP :_aabgec ,CRL :_beddc };
};_gacgb ._ccda .SetDSS (_cbba );return nil ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_dfbad *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ad .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_dfbad .S =subtype ;return nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fda .PdfObjectArray ;Matrix *_fda .PdfObjectArray ;Function []PdfFunction ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func _bgbc (_dgabb *_fda .PdfIndirectObject )(*PdfOutline ,error ){_afbd ,_geead :=_dgabb .PdfObject .(*_fda .PdfObjectDictionary );if !_geead {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_feecf :=NewPdfOutline ();if _ffagd :=_afbd .Get ("\u0054\u0079\u0070\u0065");_ffagd !=nil {_gbadg ,_ffdbb :=_ffagd .(*_fda .PdfObjectName );if _ffdbb {if *_gbadg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gbadg );
};};};if _ccbc :=_afbd .Get ("\u0043\u006f\u0075n\u0074");_ccbc !=nil {_gcaag ,_gfbgce :=_fda .GetNumberAsInt64 (_ccbc );if _gfbgce !=nil {return nil ,_gfbgce ;};_feecf .Count =&_gcaag ;};return _feecf ,nil ;};func (_gbcf *LTV )buildCertChain (_aebc ,_ccbgf []*_ec .Certificate )([]*_ec .Certificate ,map[string ]*_ec .Certificate ,error ){_aeeeb :=map[string ]*_ec .Certificate {};
for _ ,_cdba :=range _aebc {_aeeeb [_cdba .Subject .CommonName ]=_cdba ;};_gegdf :=_aebc ;for _ ,_afaed :=range _ccbgf {_fcgfg :=_afaed .Subject .CommonName ;if _ ,_edcec :=_aeeeb [_fcgfg ];_edcec {continue ;};_aeeeb [_fcgfg ]=_afaed ;_gegdf =append (_gegdf ,_afaed );
};if len (_gegdf )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ddgfd error ;for _fdbc :=_gegdf [0];_fdbc !=nil &&!_gbcf .CertClient .IsCA (_fdbc );{_ebgfb ,_bgagf :=_aeeeb [_fdbc .Issuer .CommonName ];if !_bgagf {if _ebgfb ,_ddgfd =_gbcf .CertClient .GetIssuer (_fdbc );
_ddgfd !=nil {_ga .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ddgfd );
break ;};_aeeeb [_fdbc .Issuer .CommonName ]=_ebgfb ;_gegdf =append (_gegdf ,_ebgfb );};_fdbc =_ebgfb ;};return _gegdf ,_aeeeb ,nil ;};func (_cdfdc *PdfWriter )makeOffSetReference (_agfacb int64 ){_ccca :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_agfacb );
_cdfdc .writeString (_ccca );_cdfdc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fda .PdfObjectInteger ;BitsPerComponent *_fda .PdfObjectInteger ;BitsPerFlag *_fda .PdfObjectInteger ;Decode *_fda .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_aea :=NewPdfAction ();_bag :=&PdfActionURI {};_bag .PdfAction =_aea ;_aea .SetContext (_bag );return _bag ;};var _fcbaa =_cc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _gefea (_gaaac _fda .PdfObject )(*PdfFunctionType2 ,error ){_ddegg :=&PdfFunctionType2 {};
var _faba *_fda .PdfObjectDictionary ;if _abdbd ,_ccgea :=_gaaac .(*_fda .PdfIndirectObject );_ccgea {_adbba ,_ddceg :=_abdbd .PdfObject .(*_fda .PdfObjectDictionary );if !_ddceg {return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ddegg ._degf =_abdbd ;_faba =_adbba ;}else if _defe ,_gcegf :=_gaaac .(*_fda .PdfObjectDictionary );_gcegf {_faba =_defe ;}else {return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ga .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_faba .String ());
_daeba ,_efca :=_fda .TraceToDirectObject (_faba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fda .PdfObjectArray );if !_efca {_ga .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _daeba .Len ()< 0||_daeba .Len ()%2!=0{_ga .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ad .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_gbbgg ,_bbge :=_daeba .ToFloat64Array ();if _bbge !=nil {return nil ,_bbge ;};_ddegg .Domain =_gbbgg ;_daeba ,_efca =_fda .TraceToDirectObject (_faba .Get ("\u0052\u0061\u006eg\u0065")).(*_fda .PdfObjectArray );if _efca {if _daeba .Len ()< 0||_daeba .Len ()%2!=0{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fcdge ,_ebbd :=_daeba .ToFloat64Array ();if _ebbd !=nil {return nil ,_ebbd ;};_ddegg .Range =_fcdge ;};_daeba ,_efca =_fda .TraceToDirectObject (_faba .Get ("\u0043\u0030")).(*_fda .PdfObjectArray );if _efca {_adfeg ,_aafgf :=_daeba .ToFloat64Array ();
if _aafgf !=nil {return nil ,_aafgf ;};_ddegg .C0 =_adfeg ;};_daeba ,_efca =_fda .TraceToDirectObject (_faba .Get ("\u0043\u0031")).(*_fda .PdfObjectArray );if _efca {_cbccc ,_ccdec :=_daeba .ToFloat64Array ();if _ccdec !=nil {return nil ,_ccdec ;};_ddegg .C1 =_cbccc ;
};if len (_ddegg .C0 )!=len (_ddegg .C1 ){_ga .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_fda .ErrRangeError ;};N ,_bbge :=_fda .GetNumberAsFloat (_fda .TraceToDirectObject (_faba .Get ("\u004e")));
if _bbge !=nil {_ga .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_faba .String ());return nil ,_bbge ;};_ddegg .N =N ;
return _ddegg ,nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_bggfd *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_dggfb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_becfga ,_cdccg :=_bggfd .GetNumPages ();if _cdccg !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdccg );
return nil ,_cdccg ;};for _eecgf :=1;_eecgf <=_becfga ;_eecgf ++{_bbde ,_cafcb :=_bggfd .GetPage (_eecgf );if _cafcb !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cafcb );return nil ,_cafcb ;};if opts .PageProcessCallback !=nil {_cafcb =opts .PageProcessCallback (_eecgf ,_bbde );
if _cafcb !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cafcb );return nil ,_cafcb ;};}else if opts .PageCallback !=nil {opts .PageCallback (_eecgf ,_bbde );};_cafcb =_dggfb .AddPage (_bbde );if _cafcb !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cafcb );
return nil ,_cafcb ;};};_dggfb ._ccgad =_bggfd .PdfVersion ();if !opts .SkipInfo {_dgabbd ,_geffd :=_bggfd .GetPdfInfo ();if _geffd !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geffd );}else {_dggfb ._gebbe .PdfObject =_dgabbd .ToPdfObject ();
};};if !opts .SkipMetadata {if _gggbg :=_bggfd ._debca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gggbg !=nil {if _fgfag :=_dggfb .SetCatalogMetadata (_gggbg );_fgfag !=nil {return nil ,_fgfag ;};};};if !opts .SkipAcroForm {_cdbcd :=_dggfb .SetForms (_bggfd .AcroForm );
if _cdbcd !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdbcd );return nil ,_cdbcd ;};};if !opts .SkipOutlines {_dggfb .AddOutlineTree (_bggfd .GetOutlineTree ());};if !opts .SkipOCProperties {_ebdbebe ,_aecg :=_bggfd .GetOCProperties ();
if _aecg !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aecg );}else {_aecg =_dggfb .SetOCProperties (_ebdbebe );if _aecg !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aecg );};};};if !opts .SkipPageLabels {_bbeb ,_bgfecg :=_bggfd .GetPageLabels ();
if _bgfecg !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgfecg );}else {_bgfecg =_dggfb .SetPageLabels (_bbeb );if _bgfecg !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgfecg );};};};if !opts .SkipNamedDests {_cffdd ,_afffbe :=_bggfd .GetNamedDestinations ();
if _afffbe !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afffbe );}else {_afffbe =_dggfb .SetNamedDestinations (_cffdd );if _afffbe !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afffbe );};};};if !opts .SkipNameDictionary {_fbgba ,_dgac :=_bggfd .GetNameDictionary ();
if _dgac !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgac );}else {_dgac =_dggfb .SetNameDictionary (_fbgba );if _dgac !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgac );};};};if !opts .SkipRotation &&_bggfd .Rotate !=nil {if _gegea :=_dggfb .SetRotation (*_bggfd .Rotate );
_gegea !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gegea );};};return &_dggfb ,nil ;};func (_gcd *PdfReader )newPdfAnnotationSquigglyFromDict (_aaca *_fda .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cad :=PdfAnnotationSquiggly {};
_dgf ,_gge :=_gcd .newPdfAnnotationMarkupFromDict (_aaca );if _gge !=nil {return nil ,_gge ;};_cad .PdfAnnotationMarkup =_dgf ;_cad .QuadPoints =_aaca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cad ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gcdef *PdfShadingType6 )ToPdfObject ()_fda .PdfObject {_gcdef .PdfShading .ToPdfObject ();_aefed ,_fegf :=_gcdef .getShadingDict ();if _fegf !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gcdef .BitsPerCoordinate !=nil {_aefed .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gcdef .BitsPerCoordinate );};if _gcdef .BitsPerComponent !=nil {_aefed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcdef .BitsPerComponent );
};if _gcdef .BitsPerFlag !=nil {_aefed .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gcdef .BitsPerFlag );};if _gcdef .Decode !=nil {_aefed .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gcdef .Decode );};if _gcdef .Function !=nil {if len (_gcdef .Function )==1{_aefed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcdef .Function [0].ToPdfObject ());
}else {_ebdc :=_fda .MakeArray ();for _ ,_aegafe :=range _gcdef .Function {_ebdc .Append (_aegafe .ToPdfObject ());};_aefed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebdc );};};return _gcdef ._edgffb ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _fda .PdfObject )(*PdfInfo ,error ){var _eegd PdfInfo ;_bgab ,_gbgb :=obj .(*_fda .PdfObjectDictionary );if !_gbgb {return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_gfbbg :=range _bgab .Keys (){switch _gfbbg {case "\u0054\u0069\u0074l\u0065":_eegd .Title ,_ =_fda .GetString (_bgab .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_eegd .Author ,_ =_fda .GetString (_bgab .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_eegd .Subject ,_ =_fda .GetString (_bgab .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_eegd .Keywords ,_ =_fda .GetString (_bgab .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_eegd .Creator ,_ =_fda .GetString (_bgab .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_eegd .Producer ,_ =_fda .GetString (_bgab .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_eegd .Trapped ,_ =_fda .GetName (_bgab .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cgab ,_fgfe :=_fda .GetString (_bgab .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_fgfe &&_cgab .String ()!=""{_feaac ,_gaec :=NewPdfDate (_cgab .String ());if _gaec !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_gaec );
};_eegd .CreationDate =&_feaac ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _abeaf ,_dadc :=_fda .GetString (_bgab .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_dadc &&_abeaf .String ()!=""{_egbeg ,_fgcb :=NewPdfDate (_abeaf .String ());if _fgcb !=nil {return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_fgcb );
};_eegd .ModifiedDate =&_egbeg ;};default:_dgdbc ,_ :=_fda .GetString (_bgab .Get (_gfbbg ));if _eegd ._dddbe ==nil {_eegd ._dddbe =_fda .MakeDict ();};_eegd ._dddbe .Set (_gfbbg ,_dgdbc );};};return &_eegd ,nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cff :=NewPdfAnnotation ();_bcf :=&PdfAnnotationStrikeOut {};_bcf .PdfAnnotation =_cff ;_bcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cff .SetContext (_bcf );return _bcf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_deggd *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccef ,_bbff :=_fda .GetNumbersAsFloat (objects );
if _bbff !=nil {return nil ,_bbff ;};return _deggd .ColorFromFloats (_ccef );};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gadg []byte )(_ebcfa int ,_bcgg error );};

// R returns the value of the red component of the color.
func (_cbgf *PdfColorDeviceRGB )R ()float64 {return _cbgf [0]};

// ToPdfObject implements interface PdfModel.
func (_gcae *PdfBorderStyle )ToPdfObject ()_fda .PdfObject {_ecaab :=_fda .MakeDict ();if _gcae ._fadg !=nil {if _fge ,_afdb :=_gcae ._fadg .(*_fda .PdfIndirectObject );_afdb {_fge .PdfObject =_ecaab ;};};_ecaab .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _gcae .W !=nil {_ecaab .Set ("\u0057",_fda .MakeFloat (*_gcae .W ));};if _gcae .S !=nil {_ecaab .Set ("\u0053",_fda .MakeName (_gcae .S .GetPdfName ()));};if _gcae .D !=nil {_ecaab .Set ("\u0044",_fda .MakeArrayFromIntegers (*_gcae .D ));};if _gcae ._fadg !=nil {return _gcae ._fadg ;
};return _ecaab ;};var _gfga =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bdagd *LTV )EnableChain (chain []*_ec .Certificate )error {return _bdagd .enable (nil ,chain ,"")};

// SetReason sets the `Reason` field of the signature.
func (_egfff *PdfSignature )SetReason (reason string ){_egfff .Reason =_fda .MakeString (reason )};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fda .PdfObject ;MK _fda .PdfObject ;A _fda .PdfObject ;AA _fda .PdfObject ;BS _fda .PdfObject ;Parent _fda .PdfObject ;_bee *PdfField ;_gaag bool ;};type fontFile struct{_becf string ;_agefc string ;_ddad _fd .SimpleEncoder ;
};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_aeece FieldFlag )Has (fl FieldFlag )bool {return (_aeece .Mask ()&fl .Mask ())> 0};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_cdegc *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _cdegc .baseFields ()._defd !=nil {return _cdegc .baseFields ()._defd ;};if _ccaa :=_cdegc ._fdbb .getFontDescriptor ();_ccaa !=nil {return _ccaa ;};_ga .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_cdegc );
return nil ;};

// Val returns the value of the color.
func (_efgf *PdfColorCalGray )Val ()float64 {return float64 (*_efgf )};func (_gcea *PdfField )inherit (_bfdcb func (*PdfField )bool )(bool ,error ){_dfacf :=map[*PdfField ]bool {};_ceff :=false ;_acacb :=_gcea ;for _acacb !=nil {if _ ,_badc :=_dfacf [_acacb ];
_badc {return false ,_ad .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_egdf :=_bfdcb (_acacb );if _egdf {_ceff =true ;break ;};_dfacf [_acacb ]=true ;_acacb =_acacb .Parent ;};return _ceff ,nil ;
};

// GetOutlineTree returns the outline tree.
func (_gdfag *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _gdfag ._agbacb };func (_gdeeb *PdfWriter )writeString (_edagg string ){if _gdeeb ._abac !=nil {return ;};_defgf ,_bgggce :=_gdeeb ._gfdaa .WriteString (_edagg );_gdeeb ._dcded +=int64 (_defgf );
_gdeeb ._abac =_bgggce ;};func (_gafcf *PdfReader )newPdfAcroFormFromDict (_ffdeb *_fda .PdfIndirectObject ,_ggegg *_fda .PdfObjectDictionary )(*PdfAcroForm ,error ){_dfcg :=NewPdfAcroForm ();if _ffdeb !=nil {_dfcg ._gcddg =_ffdeb ;_ffdeb .PdfObject =_fda .MakeDict ();
};if _agdd :=_ggegg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_agdd !=nil &&!_fda .IsNullObject (_agdd ){_ffecf ,_caca :=_fda .GetArray (_agdd );if !_caca {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_agdd );
};var _gafbef []*PdfField ;for _ ,_bgbae :=range _ffecf .Elements (){_ffeab ,_ffgd :=_fda .GetIndirect (_bgbae );if !_ffgd {if _ ,_degbe :=_bgbae .(*_fda .PdfObjectNull );_degbe {_ga .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ga .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bgbae );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fdcga ,_bgeee :=_gafcf .newPdfFieldFromIndirectObject (_ffeab ,nil );
if _bgeee !=nil {return nil ,_bgeee ;};_ga .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fdcga );_gafbef =append (_gafbef ,_fdcga );};_dfcg .Fields =&_gafbef ;};if _abgbg :=_ggegg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_abgbg !=nil {_eeffd ,_bdgff :=_fda .GetBool (_abgbg );if _bdgff {_dfcg .NeedAppearances =_eeffd ;}else {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_abgbg );
};};if _fecg :=_ggegg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_fecg !=nil {_babgc ,_bgfeg :=_fda .GetInt (_fecg );if _bgfeg {_dfcg .SigFlags =_babgc ;}else {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fecg );
};};if _fabd :=_ggegg .Get ("\u0043\u004f");_fabd !=nil {_dbeec ,_abdcb :=_fda .GetArray (_fabd );if _abdcb {_dfcg .CO =_dbeec ;}else {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fabd );
};};if _gbec :=_ggegg .Get ("\u0044\u0052");_gbec !=nil {if _cfef ,_dccge :=_fda .GetDict (_gbec );_dccge {_fccdf ,_aadg :=NewPdfPageResourcesFromDict (_cfef );if _aadg !=nil {_ga .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_aadg );
return nil ,_aadg ;};_dfcg .DR =_fccdf ;}else {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gbec );};};if _cfdf :=_ggegg .Get ("\u0044\u0041");
_cfdf !=nil {_feccd ,_feac :=_fda .GetString (_cfdf );if _feac {_dfcg .DA =_feccd ;}else {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cfdf );
};};if _geff :=_ggegg .Get ("\u0051");_geff !=nil {_cdeece ,_abec :=_fda .GetInt (_geff );if _abec {_dfcg .Q =_cdeece ;}else {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_geff );
};};if _fadf :=_ggegg .Get ("\u0058\u0046\u0041");_fadf !=nil {_dfcg .XFA =_fadf ;};_dfcg .ToPdfObject ();return _dfcg ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_aaeb pdfFontSimple )GetCharMetrics (code _fd .CharCode )(_ade .CharMetrics ,bool ){if _facg ,_afcb :=_aaeb ._ffbd [code ];_afcb {return _ade .CharMetrics {Wx :_facg },true ;};if _ade .IsStdFont (_ade .StdFontName (_aaeb ._fcdg )){return _ade .CharMetrics {Wx :250},true ;
};return _ade .CharMetrics {},false ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fda .PdfObject ;LE _fda .PdfObject ;BS _fda .PdfObject ;IC _fda .PdfObject ;BE _fda .PdfObject ;IT _fda .PdfObject ;Measure _fda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fcd *PdfActionMovie )ToPdfObject ()_fda .PdfObject {_fcd .PdfAction .ToPdfObject ();_dfa :=_fcd ._ddd ;_ccgd :=_dfa .PdfObject .(*_fda .PdfObjectDictionary );_ccgd .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeMovie )));_ccgd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_fcd .Annotation );
_ccgd .SetIfNotNil ("\u0054",_fcd .T );_ccgd .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_fcd .Operation );return _dfa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dbgdf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdbb ,_bccdf :=_fda .GetNumbersAsFloat (objects );
if _bccdf !=nil {return nil ,_bccdf ;};return _dbgdf .ColorFromFloats (_cdbb );};

// K returns the value of the key component of the color.
func (_ebaa *PdfColorDeviceCMYK )K ()float64 {return _ebaa [3]};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fda .PdfObject ;IC _fda .PdfObject ;BE _fda .PdfObject ;RD _fda .PdfObject ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_afefe *pdfFontSimple )SetEncoder (encoder _fd .TextEncoder ){_afefe ._bfbca =encoder };

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gcfda :=&PdfColorspaceSpecialSeparation {};return _gcfda ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fda .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fda .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fda .PdfObjectBool ;_badeb PdfModel ;_edgffb _fda .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gbbf *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afdbf :=vals [0];if _afdbf < 0.0||_afdbf > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afdbf );
return nil ,ErrColorOutOfRange ;};_dgdb :=NewPdfColorCalGray (_afdbf );return _dgdb ,nil ;};func (_adfff *PdfWriter )writeXRefStreams (_faggb int ,_deadd int64 )error {_adfegc :=_faggb +1;_adfff ._aaeac [_adfegc ]=crossReference {Type :1,ObjectNumber :_adfegc ,Offset :_deadd };
_baaab :=_dcc .NewBuffer (nil );_cffcc :=_fda .MakeArray ();for _gaefbc :=0;_gaefbc <=_faggb ;{for ;_gaefbc <=_faggb ;_gaefbc ++{_fedbg ,_adfcg :=_adfff ._aaeac [_gaefbc ];if _adfcg &&(!_adfff ._dfecb ||_adfff ._dfecb &&(_fedbg .Type ==1&&_fedbg .Offset >=_adfff ._gcaefe ||_fedbg .Type ==0)){break ;
};};var _cefgg int ;for _cefgg =_gaefbc +1;_cefgg <=_faggb ;_cefgg ++{_egcac ,_beaed :=_adfff ._aaeac [_cefgg ];if _beaed &&(!_adfff ._dfecb ||_adfff ._dfecb &&(_egcac .Type ==1&&_egcac .Offset > _adfff ._gcaefe )){continue ;};break ;};_cffcc .Append (_fda .MakeInteger (int64 (_gaefbc )),_fda .MakeInteger (int64 (_cefgg -_gaefbc )));
for _geabc :=_gaefbc ;_geabc < _cefgg ;_geabc ++{_acgcd :=_adfff ._aaeac [_geabc ];switch _acgcd .Type {case 0:_gb .Write (_baaab ,_gb .BigEndian ,byte (0));_gb .Write (_baaab ,_gb .BigEndian ,uint32 (0));_gb .Write (_baaab ,_gb .BigEndian ,uint16 (0xFFFF));
case 1:_gb .Write (_baaab ,_gb .BigEndian ,byte (1));_gb .Write (_baaab ,_gb .BigEndian ,uint32 (_acgcd .Offset ));_gb .Write (_baaab ,_gb .BigEndian ,uint16 (_acgcd .Generation ));case 2:_gb .Write (_baaab ,_gb .BigEndian ,byte (2));_gb .Write (_baaab ,_gb .BigEndian ,uint32 (_acgcd .ObjectNumber ));
_gb .Write (_baaab ,_gb .BigEndian ,uint16 (_acgcd .Index ));};};_gaefbc =_cefgg +1;};_abeag ,_ccafa :=_fda .MakeStream (_baaab .Bytes (),_fda .NewFlateEncoder ());if _ccafa !=nil {return _ccafa ;};_abeag .ObjectNumber =int64 (_adfegc );_abeag .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0058\u0052\u0065\u0066"));
_abeag .PdfObjectDictionary .Set ("\u0057",_fda .MakeArray (_fda .MakeInteger (1),_fda .MakeInteger (4),_fda .MakeInteger (2)));_abeag .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cffcc );_abeag .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fda .MakeInteger (int64 (_adfegc +1)));
_abeag .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_adfff ._gebbe );_abeag .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_adfff ._cdeecc );if _adfff ._dfecb &&_adfff ._ddbefe > 0{_abeag .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fda .MakeInteger (_adfff ._ddbefe ));
};if _adfff ._aecdf !=nil {_abeag .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_adfff ._ggdcb );};if _adfff ._bbad ==nil &&_adfff ._cdad !=""&&_adfff ._egeddb !=""{_adfff ._bbad =_fda .MakeArray (_fda .MakeHexString (_adfff ._cdad ),_fda .MakeHexString (_adfff ._egeddb ));
};if _adfff ._bbad !=nil {_ga .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_adfff ._bbad );_abeag .Set ("\u0049\u0044",_adfff ._bbad );};_adfff .writeObject (int (_abeag .ObjectNumber ),_abeag );return nil ;};func (_dfbc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _dfbc ._defd };


// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cefgc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fcda :=&PdfColorspaceCalRGB {};_fcda .BlackPoint =[]float64 {0.0,0.0,0.0};_fcda .Gamma =[]float64 {1.0,1.0,1.0};_fcda .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fcda ;};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);func (_ecdg *PdfReader )newPdfAnnotationSoundFromDict (_abge *_fda .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_ebdb :=PdfAnnotationSound {};_bef ,_eca :=_ecdg .newPdfAnnotationMarkupFromDict (_abge );if _eca !=nil {return nil ,_eca ;
};_ebdb .PdfAnnotationMarkup =_bef ;_ebdb .Name =_abge .Get ("\u004e\u0061\u006d\u0065");_ebdb .Sound =_abge .Get ("\u0053\u006f\u0075n\u0064");return &_ebdb ,nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ed .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gfeag ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _gggfc (rs ,opts ,true ,_gfeag );
};func _fabec ()_ee .Time {_bcaeg .Lock ();defer _bcaeg .Unlock ();return _ceacc };

// ToPdfObject implements interface PdfModel.
func (_eacd *PdfActionSubmitForm )ToPdfObject ()_fda .PdfObject {_eacd .PdfAction .ToPdfObject ();_feg :=_eacd ._ddd ;_af :=_feg .PdfObject .(*_fda .PdfObjectDictionary );_af .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeSubmitForm )));if _eacd .F !=nil {_af .Set ("\u0046",_eacd .F .ToPdfObject ());
};_af .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_eacd .Fields );_af .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_eacd .Flags );return _feg ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fda .PdfObject ;};const (_ggdgf =0x00001;_dddae =0x00002;_efaf =0x00004;_fcdee =0x00008;_bdfagg =0x00020;_aabad =0x00040;_gbef =0x10000;_gbbfd =0x20000;_fbbg =0x40000;);

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fbaae *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _dgfbe []*PdfOutlineTreeNode ;var _abfad []string ;var _gedgc func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gedgc =func (_cafad *PdfOutlineTreeNode ,_bcff *[]*PdfOutlineTreeNode ,_cgdbb *[]string ,_egcbd int ){if _cafad ==nil {return ;
};if _cafad ._bgddeb ==nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_cdcae ,_gbbe :=_cafad ._bgddeb .(*PdfOutlineItem );if _gbbe {*_bcff =append (*_bcff ,&_cdcae .PdfOutlineTreeNode );
_cafaf :=_dc .Repeat ("\u0020",_egcbd *2)+_cdcae .Title .Decoded ();*_cgdbb =append (*_cgdbb ,_cafaf );};if _cafad .First !=nil {_ggfg :=_dc .Repeat ("\u0020",_egcbd *2)+"\u002b";*_cgdbb =append (*_cgdbb ,_ggfg );_gedgc (_cafad .First ,_bcff ,_cgdbb ,_egcbd +1);
};if _gbbe &&_cdcae .Next !=nil {_gedgc (_cdcae .Next ,_bcff ,_cgdbb ,_egcbd );};};_gedgc (_fbaae ._agbacb ,&_dgfbe ,&_abfad ,0);return _dgfbe ,_abfad ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_egca PdfModel ;Rect _fda .PdfObject ;Contents _fda .PdfObject ;P _fda .PdfObject ;NM _fda .PdfObject ;M _fda .PdfObject ;F _fda .PdfObject ;AP _fda .PdfObject ;AS _fda .PdfObject ;Border _fda .PdfObject ;C _fda .PdfObject ;StructParent _fda .PdfObject ;
OC _fda .PdfObject ;_fbb *_fda .PdfIndirectObject ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fda .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dgea *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edbad ,_dafe :=_fda .GetNumbersAsFloat (objects );
if _dafe !=nil {return nil ,_dafe ;};return _dgea .ColorFromFloats (_edbad );};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fda .PdfObject ;GetContainingPdfObject ()_fda .PdfObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ed .ReadSeeker )(*PdfReader ,error ){const _gfbfgb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _gggfc (rs ,&ReaderOpts {LazyLoad :true },false ,_gfbfgb );
};

// B returns the value of the B component of the color.
func (_dded *PdfColorLab )B ()float64 {return _dded [2]};

// SetVersion sets the PDF version of the output file.
func (_gbfaa *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gbfaa ._ccgad .Major =majorVersion ;_gbfaa ._ccgad .Minor =minorVersion ;};func (_gdbgf *PdfReader )buildPageList (_eaeaf *_fda .PdfIndirectObject ,_ffadf *_fda .PdfIndirectObject ,_cddff map[_fda .PdfObject ]struct{})error {if _eaeaf ==nil {return nil ;
};if _ ,_geecb :=_cddff [_eaeaf ];_geecb {_ga .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eaeaf .ObjectNumber );
return nil ;};_cddff [_eaeaf ]=struct{}{};_eagge ,_aggcf :=_eaeaf .PdfObject .(*_fda .PdfObjectDictionary );if !_aggcf {return _ad .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_efbaf ,_aggcf :=(*_eagge ).Get ("\u0054\u0079\u0070\u0065").(*_fda .PdfObjectName );
if !_aggcf {if _eagge .Get ("\u004b\u0069\u0064\u0073")==nil {return _ad .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ga .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_efbaf =_fda .MakeName ("\u0050\u0061\u0067e\u0073");_eagge .Set ("\u0054\u0079\u0070\u0065",_efbaf );};_ga .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_efbaf ,_eaeaf );
if *_efbaf =="\u0050\u0061\u0067\u0065"{_bdcef ,_ebaed :=_gdbgf .newPdfPageFromDict (_eagge );if _ebaed !=nil {return _ebaed ;};_bdcef .setContainer (_eaeaf );if _ffadf !=nil {_eagge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffadf );};_gdbgf ._afgcgb =append (_gdbgf ._afgcgb ,_eaeaf );
_gdbgf .PageList =append (_gdbgf .PageList ,_bdcef );return nil ;};if *_efbaf !="\u0050\u0061\u0067e\u0073"{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_efbaf );
return _ad .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _ffadf !=nil {_eagge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffadf );};if !_gdbgf ._cegf {_acff :=_gdbgf .traverseObjectData (_eaeaf );if _acff !=nil {return _acff ;};};_bcdbd ,_bggebd :=_gdbgf ._edbag .Resolve (_eagge .Get ("\u004b\u0069\u0064\u0073"));
if _bggebd !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _bggebd ;};var _ccefg *_fda .PdfObjectArray ;
_ccefg ,_aggcf =_bcdbd .(*_fda .PdfObjectArray );if !_aggcf {_gbea ,_edeac :=_bcdbd .(*_fda .PdfIndirectObject );if !_edeac {return _ad .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_ccefg ,_aggcf =_gbea .PdfObject .(*_fda .PdfObjectArray );if !_aggcf {return _ad .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ga .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ccefg );
for _dcfge ,_fbefff :=range _ccefg .Elements (){_efdf ,_ggbdd :=_fda .GetIndirect (_fbefff );if !_ggbdd {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_efdf );
return _ad .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ccefg .Set (_dcfge ,_efdf );_bggebd =_gdbgf .buildPageList (_efdf ,_eaeaf ,_cddff );if _bggebd !=nil {return _bggebd ;
};};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gdfa *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gdfa .Base .GetNumComponents ();_fccf :=int (vals [0])*N ;
if _fccf < 0||(_fccf +N -1)>=len (_gdfa ._defa ){_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fccf );return nil ,ErrColorOutOfRange ;};_dgee :=_gdfa ._defa [_fccf :_fccf +N ];
var _acaed []float64 ;for _ ,_egeee :=range _dgee {_acaed =append (_acaed ,float64 (_egeee )/255.0);};_gfabf ,_fbcg :=_gdfa .Base .ColorFromFloats (_acaed );if _fbcg !=nil {return nil ,_fbcg ;};return _gfabf ,nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_afgg *Outline )ToPdfObject ()_fda .PdfObject {return _afgg .ToPdfOutline ().ToPdfObject ()};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_gffd *PdfFont )CharcodesToStrings (charcodes []_fd .CharCode )([]string ,int ,int ){_acgc :=_gffd .baseFields ();_bgbg :=make ([]string ,0,len (charcodes ));_fbfb :=0;_agcdd :=_gffd .Encoder ();_gbafd :=_acgc ._gaega !=nil &&_gffd .IsSimple ()&&_gffd .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_dc .Contains (_acgc ._gaega .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_gbafd &&_agcdd !=nil {switch _ffgf :=_agcdd .(type ){case _fd .SimpleEncoder :_edef :=_ffgf .BaseName ();if _ ,_dfgag :=_fdca [_edef ];_dfgag {for _ ,_cbca :=range charcodes {if _ggc ,_cdcdf :=_agcdd .CharcodeToRune (_cbca );_cdcdf {_bgbg =append (_bgbg ,string (_ggc ));
}else {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cbca ,charcodes ,_acgc .isCIDFont (),_gffd ,_agcdd );
_fbfb ++;_bgbg =append (_bgbg ,_bg .MissingCodeString );};};return _bgbg ,len (_bgbg ),_fbfb ;};};};for _ ,_agdgb :=range charcodes {if _acgc ._gaega !=nil {if _fdaaa ,_geda :=_acgc ._gaega .CharcodeToUnicode (_bg .CharCode (_agdgb ));_geda {_bgbg =append (_bgbg ,_fdaaa );
continue ;};};if _agcdd !=nil {if _ecdge ,_bffe :=_agcdd .CharcodeToRune (_agdgb );_bffe {_bgbg =append (_bgbg ,string (_ecdge ));continue ;};};_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_agdgb ,charcodes ,_acgc .isCIDFont (),_gffd ,_agcdd );
_fbfb ++;_bgbg =append (_bgbg ,_bg .MissingCodeString );};if _fbfb !=0{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fbfb ,_gffd );
};return _bgbg ,len (_bgbg ),_fbfb ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fda .PdfObjectInteger ;BitsPerComponent *_fda .PdfObjectInteger ;BitsPerFlag *_fda .PdfObjectInteger ;Decode *_fda .PdfObjectArray ;Function []PdfFunction ;};func (_bgb *PdfReader )newPdfActionFromIndirectObject (_aba *_fda .PdfIndirectObject )(*PdfAction ,error ){_cab ,_fcb :=_aba .PdfObject .(*_fda .PdfObjectDictionary );
if !_fcb {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bgb ._bbgee .GetModelFromPrimitive (_cab );model !=nil {_edae ,_dfb :=model .(*PdfAction );if !_dfb {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _edae ,nil ;};_cdg :=&PdfAction {};_cdg ._ddd =_aba ;_bgb ._bbgee .Register (_cab ,_cdg );if _agc :=_cab .Get ("\u0054\u0079\u0070\u0065");_agc !=nil {_gde ,_dggb :=_agc .(*_fda .PdfObjectName );if !_dggb {_ga .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_agc );
}else {if *_gde !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ga .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gde );
};_cdg .Type =_gde ;};};if _gca :=_cab .Get ("\u004e\u0065\u0078\u0074");_gca !=nil {_cdg .Next =_gca ;};if _ecc :=_cab .Get ("\u0053");_ecc !=nil {_cdg .S =_ecc ;};_aega ,_dba :=_cdg .S .(*_fda .PdfObjectName );if !_dba {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cdg .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cdg .S );};_agg :=PdfActionType (_aega .String ());
switch _agg {case ActionTypeGoTo :_dce ,_fea :=_bgb .newPdfActionGotoFromDict (_cab );if _fea !=nil {return nil ,_fea ;};_dce .PdfAction =_cdg ;_cdg ._dg =_dce ;return _cdg ,nil ;case ActionTypeGoToR :_gdb ,_ddfb :=_bgb .newPdfActionGotoRFromDict (_cab );
if _ddfb !=nil {return nil ,_ddfb ;};_gdb .PdfAction =_cdg ;_cdg ._dg =_gdb ;return _cdg ,nil ;case ActionTypeGoToE :_ce ,_dda :=_bgb .newPdfActionGotoEFromDict (_cab );if _dda !=nil {return nil ,_dda ;};_ce .PdfAction =_cdg ;_cdg ._dg =_ce ;return _cdg ,nil ;
case ActionTypeLaunch :_bfd ,_cdfb :=_bgb .newPdfActionLaunchFromDict (_cab );if _cdfb !=nil {return nil ,_cdfb ;};_bfd .PdfAction =_cdg ;_cdg ._dg =_bfd ;return _cdg ,nil ;case ActionTypeThread :_aae ,_ecb :=_bgb .newPdfActionThreadFromDict (_cab );if _ecb !=nil {return nil ,_ecb ;
};_aae .PdfAction =_cdg ;_cdg ._dg =_aae ;return _cdg ,nil ;case ActionTypeURI :_dcec ,_aeag :=_bgb .newPdfActionURIFromDict (_cab );if _aeag !=nil {return nil ,_aeag ;};_dcec .PdfAction =_cdg ;_cdg ._dg =_dcec ;return _cdg ,nil ;case ActionTypeSound :_ggd ,_aee :=_bgb .newPdfActionSoundFromDict (_cab );
if _aee !=nil {return nil ,_aee ;};_ggd .PdfAction =_cdg ;_cdg ._dg =_ggd ;return _cdg ,nil ;case ActionTypeMovie :_gdef ,_gbde :=_bgb .newPdfActionMovieFromDict (_cab );if _gbde !=nil {return nil ,_gbde ;};_gdef .PdfAction =_cdg ;_cdg ._dg =_gdef ;return _cdg ,nil ;
case ActionTypeHide :_cdgf ,_ecg :=_bgb .newPdfActionHideFromDict (_cab );if _ecg !=nil {return nil ,_ecg ;};_cdgf .PdfAction =_cdg ;_cdg ._dg =_cdgf ;return _cdg ,nil ;case ActionTypeNamed :_agcc ,_fgb :=_bgb .newPdfActionNamedFromDict (_cab );if _fgb !=nil {return nil ,_fgb ;
};_agcc .PdfAction =_cdg ;_cdg ._dg =_agcc ;return _cdg ,nil ;case ActionTypeSubmitForm :_ge ,_dde :=_bgb .newPdfActionSubmitFormFromDict (_cab );if _dde !=nil {return nil ,_dde ;};_ge .PdfAction =_cdg ;_cdg ._dg =_ge ;return _cdg ,nil ;case ActionTypeResetForm :_acac ,_geb :=_bgb .newPdfActionResetFormFromDict (_cab );
if _geb !=nil {return nil ,_geb ;};_acac .PdfAction =_cdg ;_cdg ._dg =_acac ;return _cdg ,nil ;case ActionTypeImportData :_bdg ,_cba :=_bgb .newPdfActionImportDataFromDict (_cab );if _cba !=nil {return nil ,_cba ;};_bdg .PdfAction =_cdg ;_cdg ._dg =_bdg ;
return _cdg ,nil ;case ActionTypeSetOCGState :_gae ,_ebd :=_bgb .newPdfActionSetOCGStateFromDict (_cab );if _ebd !=nil {return nil ,_ebd ;};_gae .PdfAction =_cdg ;_cdg ._dg =_gae ;return _cdg ,nil ;case ActionTypeRendition :_gdgb ,_gcf :=_bgb .newPdfActionRenditionFromDict (_cab );
if _gcf !=nil {return nil ,_gcf ;};_gdgb .PdfAction =_cdg ;_cdg ._dg =_gdgb ;return _cdg ,nil ;case ActionTypeTrans :_cbfd ,_bgf :=_bgb .newPdfActionTransFromDict (_cab );if _bgf !=nil {return nil ,_bgf ;};_cbfd .PdfAction =_cdg ;_cdg ._dg =_cbfd ;return _cdg ,nil ;
case ActionTypeGoTo3DView :_dbb ,_adfb :=_bgb .newPdfActionGoTo3DViewFromDict (_cab );if _adfb !=nil {return nil ,_adfb ;};_dbb .PdfAction =_cdg ;_cdg ._dg =_dbb ;return _cdg ,nil ;case ActionTypeJavaScript :_fcf ,_deb :=_bgb .newPdfActionJavaScriptFromDict (_cab );
if _deb !=nil {return nil ,_deb ;};_fcf .PdfAction =_cdg ;_cdg ._dg =_fcf ;return _cdg ,nil ;};_ga .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_agg );
return nil ,nil ;};

// SetAnnotations sets the annotations list.
func (_dgdgc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_dgdgc ._bbbbc =annotations };

// IsShading specifies if the pattern is a shading pattern.
func (_cffdf *PdfPattern )IsShading ()bool {return _cffdf .PatternType ==2};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cccg _fda .ParserMetadata ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_febd *PdfShadingType2 )ToPdfObject ()_fda .PdfObject {_febd .PdfShading .ToPdfObject ();_bacfc ,_efbdf :=_febd .getShadingDict ();if _efbdf !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bacfc ==nil {_ga .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _febd .Coords !=nil {_bacfc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_febd .Coords );
};if _febd .Domain !=nil {_bacfc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_febd .Domain );};if _febd .Function !=nil {if len (_febd .Function )==1{_bacfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_febd .Function [0].ToPdfObject ());}else {_bfcdd :=_fda .MakeArray ();
for _ ,_gaddb :=range _febd .Function {_bfcdd .Append (_gaddb .ToPdfObject ());};_bacfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfcdd );};};if _febd .Extend !=nil {_bacfc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_febd .Extend );};
return _febd ._edgffb ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_dab *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bdaed pdfCIDFontType0 )GetRuneMetrics (r rune )(_ade .CharMetrics ,bool ){return _ade .CharMetrics {Wx :_bdaed ._ecgad },true ;};

// ToPdfObject returns the PDF representation of the function.
func (_eadfb *PdfFunctionType4 )ToPdfObject ()_fda .PdfObject {_aafbb :=_eadfb ._daffg ;if _aafbb ==nil {_eadfb ._daffg =&_fda .PdfObjectStream {};_aafbb =_eadfb ._daffg ;};_bacf :=_fda .MakeDict ();_bacf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fda .MakeInteger (4));
_ddebf :=&_fda .PdfObjectArray {};for _ ,_dfgcc :=range _eadfb .Domain {_ddebf .Append (_fda .MakeFloat (_dfgcc ));};_bacf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ddebf );_dgdf :=&_fda .PdfObjectArray {};for _ ,_dagcb :=range _eadfb .Range {_dgdf .Append (_fda .MakeFloat (_dagcb ));
};_bacf .Set ("\u0052\u0061\u006eg\u0065",_dgdf );if _eadfb ._faef ==nil &&_eadfb .Program !=nil {_eadfb ._faef =[]byte (_eadfb .Program .String ());};_bacf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fda .MakeInteger (int64 (len (_eadfb ._faef ))));
_aafbb .Stream =_eadfb ._faef ;_aafbb .PdfObjectDictionary =_bacf ;return _aafbb ;};

// AddFont adds a font dictionary to the Font resources.
func (_bbbgd *PdfPage )AddFont (name _fda .PdfObjectName ,font _fda .PdfObject )error {if _bbbgd .Resources ==nil {_bbbgd .Resources =NewPdfPageResources ();};if _bbbgd .Resources .Font ==nil {_bbbgd .Resources .Font =_fda .MakeDict ();};_defae ,_bfdba :=_fda .TraceToDirectObject (_bbbgd .Resources .Font ).(*_fda .PdfObjectDictionary );
if !_bfdba {_ga .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fda .TraceToDirectObject (_bbbgd .Resources .Font ));
return _ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_defae .Set (name ,font );return nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_gcddg :_fda .MakeIndirectObject (_fda .MakeDict ())};};func (_dggff *LTV )getCRLs (_dfgda []*_ec .Certificate )([][]byte ,error ){_eeee :=make ([][]byte ,0,len (_dfgda ));
for _ ,_fcafa :=range _dfgda {for _ ,_dddeb :=range _fcafa .CRLDistributionPoints {if _dggff .CertClient .IsCA (_fcafa ){continue ;};_fbbfe ,_ceca :=_dggff .CRLClient .MakeRequest (_dddeb ,_fcafa );if _ceca !=nil {_ga .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ceca );
continue ;};_eeee =append (_eeee ,_fbbfe );};};return _eeee ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_dbda *PdfTilingPattern )SetContentStream (content []byte ,encoder _fda .StreamEncoder )error {_dfbaef ,_cfggf :=_dbda ._ccaef .(*_fda .PdfObjectStream );if !_cfggf {_ga .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbda ._ccaef );
return _fda .ErrTypeError ;};if encoder ==nil {encoder =_fda .NewRawEncoder ();};_bgeb :=_dfbaef .PdfObjectDictionary ;_eaeae :=encoder .MakeStreamDict ();_bgeb .Merge (_eaeae );_dgadb ,_ceddb :=encoder .EncodeBytes (content );if _ceddb !=nil {return _ceddb ;
};_bgeb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fda .MakeInteger (int64 (len (_dgadb ))));_dfbaef .Stream =_dgadb ;return nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fda .PdfObject ;T _fda .PdfObject ;Operation _fda .PdfObject ;};var (_bafcf =_cc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_gbafc =_cc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_gbda =_cc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_fefbf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_faff ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gagff ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_dffa *PdfWriter )copyObjects (){_dbdac :=make (map[_fda .PdfObject ]_fda .PdfObject );_gccba :=make ([]_fda .PdfObject ,0,len (_dffa ._adeed ));_gaaaf :=make (map[_fda .PdfObject ]struct{},len (_dffa ._adeed ));_egcg :=make (map[_fda .PdfObject ]struct{});
for _ ,_cdgbe :=range _dffa ._adeed {_ffecff :=_dffa .copyObject (_cdgbe ,_dbdac ,_egcg ,false );if _ ,_aacf :=_egcg [_cdgbe ];_aacf {continue ;};_gccba =append (_gccba ,_ffecff );_gaaaf [_ffecff ]=struct{}{};};_dffa ._adeed =_gccba ;_dffa ._cfeaa =_gaaaf ;
_dffa ._gebbe =_dffa .copyObject (_dffa ._gebbe ,_dbdac ,nil ,false ).(*_fda .PdfIndirectObject );_dffa ._cdeecc =_dffa .copyObject (_dffa ._cdeecc ,_dbdac ,nil ,false ).(*_fda .PdfIndirectObject );if _dffa ._ggdcb !=nil {_dffa ._ggdcb =_dffa .copyObject (_dffa ._ggdcb ,_dbdac ,nil ,false ).(*_fda .PdfIndirectObject );
};if _dffa ._dfecb {_fbcag :=make (map[_fda .PdfObject ]int64 );for _ddedd ,_aeeb :=range _dffa ._efec {if _bdabb ,_gegc :=_dbdac [_ddedd ];_gegc {_fbcag [_bdabb ]=_aeeb ;}else {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_dffa ._efec =_fbcag ;};};func (_edec *PdfReader )newPdfAnnotationWatermarkFromDict (_ebad *_fda .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ggdb :=PdfAnnotationWatermark {};_ggdb .FixedPrint =_ebad .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_ggdb ,nil ;};func _aaef (_egcb *PdfPage )map[_fda .PdfObjectName ]_fda .PdfObject {_fddd :=make (map[_fda .PdfObjectName ]_fda .PdfObject );if _egcb .Resources ==nil {return _fddd ;};if _egcb .Resources .Font !=nil {if _fcfe ,_eaef :=_fda .GetDict (_egcb .Resources .Font );
_eaef {for _ ,_dac :=range _fcfe .Keys (){_fddd [_dac ]=_fcfe .Get (_dac );};};};if _egcb .Resources .ExtGState !=nil {if _ggfcc ,_dcgf :=_fda .GetDict (_egcb .Resources .ExtGState );_dcgf {for _ ,_fdc :=range _ggfcc .Keys (){_fddd [_fdc ]=_ggfcc .Get (_fdc );
};};};if _egcb .Resources .XObject !=nil {if _acag ,_agdfc :=_fda .GetDict (_egcb .Resources .XObject );_agdfc {for _ ,_gcdc :=range _acag .Keys (){_fddd [_gcdc ]=_acag .Get (_gcdc );};};};if _egcb .Resources .Pattern !=nil {if _ccga ,_eceg :=_fda .GetDict (_egcb .Resources .Pattern );
_eceg {for _ ,_gefd :=range _ccga .Keys (){_fddd [_gefd ]=_ccga .Get (_gefd );};};};if _egcb .Resources .Shading !=nil {if _effac ,_cacb :=_fda .GetDict (_egcb .Resources .Shading );_cacb {for _ ,_ddcb :=range _effac .Keys (){_fddd [_ddcb ]=_effac .Get (_ddcb );
};};};if _egcb .Resources .ProcSet !=nil {if _bddc ,_ebfa :=_fda .GetDict (_egcb .Resources .ProcSet );_ebfa {for _ ,_dgdab :=range _bddc .Keys (){_fddd [_dgdab ]=_bddc .Get (_dgdab );};};};if _egcb .Resources .Properties !=nil {if _cgbc ,_fcfae :=_fda .GetDict (_egcb .Resources .Properties );
_fcfae {for _ ,_gcdf :=range _cgbc .Keys (){_fddd [_gcdf ]=_cgbc .Get (_gcdf );};};};return _fddd ;};

// ToPdfObject returns a stream object.
func (_aagee *XObjectForm )ToPdfObject ()_fda .PdfObject {_ccafab :=_aagee ._adacca ;_fdadb :=_ccafab .PdfObjectDictionary ;if _aagee .Filter !=nil {_fdadb =_aagee .Filter .MakeStreamDict ();_ccafab .PdfObjectDictionary =_fdadb ;};_fdadb .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_fdadb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0046\u006f\u0072\u006d"));_fdadb .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_aagee .FormType );_fdadb .SetIfNotNil ("\u0042\u0042\u006f\u0078",_aagee .BBox );
_fdadb .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_aagee .Matrix );if _aagee .Resources !=nil {_fdadb .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aagee .Resources .ToPdfObject ());};_fdadb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_aagee .Group );
_fdadb .SetIfNotNil ("\u0052\u0065\u0066",_aagee .Ref );_fdadb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_aagee .MetaData );_fdadb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_aagee .PieceInfo );_fdadb .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_aagee .LastModified );
_fdadb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aagee .StructParent );_fdadb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_aagee .StructParents );_fdadb .SetIfNotNil ("\u004f\u0050\u0049",_aagee .OPI );
_fdadb .SetIfNotNil ("\u004f\u0043",_aagee .OC );_fdadb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aagee .Name );_fdadb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fda .MakeInteger (int64 (len (_aagee .Stream ))));_ccafab .Stream =_aagee .Stream ;return _ccafab ;
};func _ccge (_fabeb _fda .PdfObject )(*fontFile ,error ){_ga .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_fabeb );
_ccaeb :=&fontFile {};_fabeb =_fda .TraceToDirectObject (_fabeb );_gcff ,_bdfe :=_fabeb .(*_fda .PdfObjectStream );if !_bdfe {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_fabeb );
return nil ,_fda .ErrTypeError ;};_gbca :=_gcff .PdfObjectDictionary ;_fbdda ,_gfbgc :=_fda .DecodeStream (_gcff );if _gfbgc !=nil {return nil ,_gfbgc ;};_ffgcg ,_bdfe :=_fda .GetNameVal (_gbca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bdfe {_ccaeb ._agefc =_ffgcg ;
if _ffgcg =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ga .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_bbga ,_ :=_fda .GetIntVal (_gbca .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ddbed ,_ :=_fda .GetIntVal (_gbca .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _bbga > len (_fbdda ){_bbga =len (_fbdda );
};if _bbga +_ddbed > len (_fbdda ){_ddbed =len (_fbdda )-_bbga ;};_ffbad :=_fbdda [:_bbga ];var _ggdee []byte ;if _ddbed > 0{_ggdee =_fbdda [_bbga :_bbga +_ddbed ];};if _bbga > 0&&_ddbed > 0{_bcbcdd :=_ccaeb .loadFromSegments (_ffbad ,_ggdee );if _bcbcdd !=nil {return nil ,_bcbcdd ;
};};return _ccaeb ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cgfc _ed .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_eafg _eg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_fccee _eg .Image )(*Image ,error );

// Compress an image.
Compress (_gdbd *Image ,_bdbgg int64 )(*Image ,error );};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_bdgae *_ccf .Document )error ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ee .Time ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_ceacc =modifiedDate ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ccgbf *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bcdce *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bcdce .UnderlyingCS ==nil {return nil ,_ad .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _bcdce .UnderlyingCS .ColorFromFloats (vals );};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_ebfge *PdfPageResources )GetColorspaceByName (keyName _fda .PdfObjectName )(PdfColorspace ,bool ){_ebaagf ,_aeeaa :=_ebfge .GetColorspaces ();if _aeeaa !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_aeeaa );
return nil ,false ;};if _ebaagf ==nil {return nil ,false ;};_geefe ,_bfgdc :=_ebaagf .Colorspaces [string (keyName )];if !_bfgdc {return nil ,false ;};return _geefe ,true ;};func (_cabc *fontFile )parseASCIIPart (_babaf []byte )error {if len (_babaf )< 2||string (_babaf [:2])!="\u0025\u0021"{return _ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_egebb ,_gebeb ,_ffegc :=_ceed (_babaf );if _ffegc !=nil {return _ffegc ;};_acaf :=_ecdga (_egebb );_cabc ._becf =_acaf ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cabc ._becf ==""{_ga .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _gebeb !=""{_agfdc ,_efee :=_eeae (_gebeb );if _efee !=nil {return _efee ;};_ddcfb ,_efee :=_fd .NewCustomSimpleTextEncoder (_agfdc ,nil );if _efee !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_efee );
return nil ;};_cabc ._ddad =_ddcfb ;};return nil ;};func _ceed (_ecgff []byte )(_dfcef ,_dgba string ,_bfcab error ){_ga .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_ecgff ));
_dadb :=_bafcf .FindIndex (_ecgff );if _dadb ==nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_fda .ErrTypeError ;};_gafed :=_dadb [1];_fgdg :=_dc .Index (string (_ecgff [_gafed :]),_fefbf );if _fgdg < 0{_dfcef =string (_ecgff [_gafed :]);return _dfcef ,"",nil ;};_cdecg :=_gafed +_fgdg ;_dfcef =string (_ecgff [_gafed :_cdecg ]);_bcgc :=_cdecg ;
_fgdg =_dc .Index (string (_ecgff [_bcgc :]),_faff );if _fgdg < 0{_ga .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bfcab );
return "","",_fda .ErrTypeError ;};_cgde :=_bcgc +_fgdg ;_dgba =string (_ecgff [_bcgc :_cgde ]);return _dfcef ,_dgba ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bgfe :=NewPdfAnnotation ();_eaf :=&PdfAnnotationPolyLine {};_eaf .PdfAnnotation =_bgfe ;_eaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgfe .SetContext (_eaf );return _eaf ;};var (_bcaeg _b .Mutex ;
_cebgf ="";_dbdab _ee .Time ;_eebdc ="";_bbgfeg ="";_ceacc _ee .Time ;_cafaa ="";_fcfgf ="";_fffgg ="";);var (ErrRequiredAttributeMissing =_ad .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ad .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cgdd =_ad .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ad .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ad .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_ece .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fda .ErrNotSupported );ErrType1CFontNotSupported =_ece .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fda .ErrNotSupported );
ErrType3FontNotSupported =_ece .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fda .ErrNotSupported );
ErrTTCmapNotSupported =_ece .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fda .ErrNotSupported );
ErrSignNotEnoughSpace =_ece .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ece .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// IsColored specifies if the pattern is colored.
func (_acef *PdfTilingPattern )IsColored ()bool {if _acef .PaintType !=nil &&*_acef .PaintType ==1{return true ;};return false ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fda .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_cfga *_fda .PdfIndirectObject ;};var _fdca =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fda .PdfObject ;};

// String returns a human readable description of `fontfile`.
func (_ffaf *fontFile )String ()string {_agcf :="\u005b\u004e\u006f\u006e\u0065\u005d";if _ffaf ._ddad !=nil {_agcf =_ffaf ._ddad .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_ffaf ._becf ,_agcf );
};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_edafg *PdfPageResources )SetXObjectByName (keyName _fda .PdfObjectName ,stream *_fda .PdfObjectStream )error {if _edafg .XObject ==nil {_edafg .XObject =_fda .MakeDict ();};_geebd :=_fda .TraceToDirectObject (_edafg .XObject );_bbbee ,_cgdbc :=_geebd .(*_fda .PdfObjectDictionary );
if !_cgdbc {_ga .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_edafg .XObject ,_geebd );return _ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bbbee .Set (keyName ,stream );return nil ;};func (_ggaec *PdfWriter )writeAcroFormFields ()error {if _ggaec ._ccbgd ==nil {return nil ;};_ga .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_agbacd :=_ggaec ._ccbgd .ToPdfObject ();
_ga .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_agbacd );_ggaec ._ecegfe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_agbacd );_adefb :=_ggaec .addObjects (_agbacd );if _adefb !=nil {return _adefb ;
};return nil ;};func _adgcf (_dcfc []*_fda .PdfObjectStream )*_fda .PdfObjectArray {if len (_dcfc )==0{return nil ;};_efcbg :=make ([]_fda .PdfObject ,0,len (_dcfc ));for _ ,_affe :=range _dcfc {_efcbg =append (_efcbg ,_affe );};return _fda .MakeArray (_efcbg ...);
};func (_deggf *PdfFilespec )getDict ()*_fda .PdfObjectDictionary {if _fcgfb ,_cffd :=_deggf ._feba .(*_fda .PdfIndirectObject );_cffd {_efcb ,_faeg :=_fcgfb .PdfObject .(*_fda .PdfObjectDictionary );if !_faeg {return nil ;};return _efcb ;}else if _bdca ,_afee :=_deggf ._feba .(*_fda .PdfObjectDictionary );
_afee {return _bdca ;}else {_ga .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_deggf ._feba );
return nil ;};};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cfadc ,_gcfef :=_ac .Open (filePath );if _gcfef !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gcfef );
return nil ,_gcfef ;};defer _cfadc .Close ();return NewPdfFontFromTTF (_cfadc );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dffe PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fda .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_abea []_fda .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_efce []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ToInteger convert to an integer format.
func (_dbbd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_geef :=_f .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_geef *_dbbd .A ()),uint32 (_geef *_dbbd .B ()),uint32 (_geef *_dbbd .C ())};};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_eeed *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _eeed .Alternate ==nil {if _eeed .N ==1{_gbg :=NewPdfColorspaceDeviceGray ();return _gbg .ColorFromFloats (vals );}else if _eeed .N ==3{_ecada :=NewPdfColorspaceDeviceRGB ();
return _ecada .ColorFromFloats (vals );}else if _eeed .N ==4{_gbbba :=NewPdfColorspaceDeviceCMYK ();return _gbbba .ColorFromFloats (vals );}else {return nil ,_ad .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _eeed .Alternate .ColorFromFloats (vals );};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_agce *DSS )ToPdfObject ()_fda .PdfObject {_cefg :=_agce ._acfc .PdfObject .(*_fda .PdfObjectDictionary );_cefg .Clear ();_caac :=_fda .MakeDict ();for _fdb ,_ffgaa :=range _agce .VRI {_caac .Set (*_fda .MakeName (_fdb ),_ffgaa .ToPdfObject ());};
_cefg .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_adgcf (_agce .Certs ));_cefg .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_adgcf (_agce .OCSPs ));_cefg .SetIfNotNil ("\u0043\u0052\u004c\u0073",_adgcf (_agce .CRLs ));_cefg .Set ("\u0056\u0052\u0049",_caac );
return _agce ._acfc ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_bebb *_fda .PdfObjectDictionary ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bdcd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fda .PdfObject {_aafd :=_fda .MakeDict ();if _bdcd .Subtype !=nil {_aafd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bdcd .Subtype );};_aafd .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bdcd .Colorants );
_aafd .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bdcd .Process );_aafd .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bdcd .MixingHints );if _bdcd ._bbcdg !=nil {_bdcd ._bbcdg .PdfObject =_aafd ;return _bdcd ._bbcdg ;
};return _aafd ;};func (_fcfcf *PdfSignature )extractChainFromPKCS7 ()([]*_ec .Certificate ,error ){_gcad ,_gddg :=_ede .Parse (_fcfcf .Contents .Bytes ());if _gddg !=nil {return nil ,_gddg ;};return _gcad .Certificates ,nil ;};func _eeede (_bffeg *PdfField ,_aagac _fda .PdfObject )error {switch _bffeg .GetContext ().(type ){case *PdfFieldText :switch _cbeda :=_aagac .(type ){case *_fda .PdfObjectName :_gfeba :=_cbeda ;
_ga .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gfeba .String ());
_bffeg .V =_fda .MakeEncodedString (_cbeda .String (),true );case *_fda .PdfObjectString :_bffeg .V =_fda .MakeEncodedString (_cbeda .String (),true );default:_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_cbeda ,_cbeda );
};case *PdfFieldButton :switch _aagac .(type ){case *_fda .PdfObjectName :if len (_aagac .String ())> 0{_bffeg .V =_aagac ;_ccaff (_bffeg ,_aagac );};case *_fda .PdfObjectString :if len (_aagac .String ())> 0{_bffeg .V =_fda .MakeName (_aagac .String ());
_ccaff (_bffeg ,_bffeg .V );};default:_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bffeg .PartialName (),_aagac );_bffeg .V =_aagac ;
};case *PdfFieldChoice :switch _aagac .(type ){case *_fda .PdfObjectName :if len (_aagac .String ())> 0{_bffeg .V =_fda .MakeString (_aagac .String ());_ccaff (_bffeg ,_aagac );};case *_fda .PdfObjectString :if len (_aagac .String ())> 0{_bffeg .V =_aagac ;
_ccaff (_bffeg ,_fda .MakeName (_aagac .String ()));};default:_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bffeg .PartialName (),_aagac );
_bffeg .V =_aagac ;};case *PdfFieldSignature :_ga .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bffeg .PartialName (),_aagac );
};return nil ;};func (_fage *PdfReader )newPdfAnnotationStampFromDict (_bbfc *_fda .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_egdc :=PdfAnnotationStamp {};_afe ,_bdcf :=_fage .newPdfAnnotationMarkupFromDict (_bbfc );if _bdcf !=nil {return nil ,_bdcf ;
};_egdc .PdfAnnotationMarkup =_afe ;_egdc .Name =_bbfc .Get ("\u004e\u0061\u006d\u0065");return &_egdc ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;
BorderStyleUnderline BorderStyle =iota ;);

// Add appends an outline item as a child of the current outline item.
func (_bfade *OutlineItem )Add (item *OutlineItem ){_bfade .Entries =append (_bfade .Entries ,item )};func _fdcaa ()*modelManager {_ccbbd :=modelManager {};_ccbbd ._cagg =map[PdfModel ]_fda .PdfObject {};_ccbbd ._bcgfg =map[_fda .PdfObject ]PdfModel {};
return &_ccbbd ;};func (_ffgae *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _ffgae ._defd ==nil &&_ffgae .DescendantFont !=nil {return _ffgae .DescendantFont .FontDescriptor ();};return _ffgae ._defd ;};func _gdaaaf ()_ee .Time {_bcaeg .Lock ();
defer _bcaeg .Unlock ();return _dbdab };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fda .PdfObject ;NewWindow _fda .PdfObject ;T _fda .PdfObject ;};func (_fafa *pdfFontSimple )addEncoding ()error {var (_cega string ;_aagd map[_fd .CharCode ]_fd .GlyphName ;_deabb _fd .SimpleEncoder ;
);if _fafa .Encoder ()!=nil {_dbbbf ,_fbba :=_fafa .Encoder ().(_fd .SimpleEncoder );if _fbba &&_dbbbf !=nil {_cega =_dbbbf .BaseName ();};};if _fafa .Encoding !=nil {_fcca ,_gfef ,_agfddg :=_fafa .getFontEncoding ();if _agfddg !=nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fafa ._fcdg ,_fafa ._bfgb ,_fafa .Encoding ,_fafa .Encoding ,_agfddg );
return _agfddg ;};if _fcca !=""{_cega =_fcca ;};_aagd =_gfef ;_deabb ,_agfddg =_fd .NewSimpleTextEncoder (_cega ,_aagd );if _agfddg !=nil {return _agfddg ;};};if _deabb ==nil {_ecde :=_fafa ._defd ;if _ecde !=nil {switch _fafa ._bfgb {case "\u0054\u0079\u0070e\u0031":if _ecde .fontFile !=nil &&_ecde .fontFile ._ddad !=nil {_ga .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_deabb =_ecde .fontFile ._ddad ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ecde ._dfceg !=nil {_ga .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dafbg ,_agac :=_ecde ._dfceg .MakeEncoder ();
if _agac ==nil {_deabb =_dafbg ;};};};};};if _deabb !=nil {if _aagd !=nil {_ga .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aagd ,_fafa .baseFields ());
_deabb =_fd .ApplyDifferences (_deabb ,_aagd );};_fafa .SetEncoder (_deabb );};return nil ;};

// ToInteger convert to an integer format.
func (_acbc *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_cabac :=_f .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cabac *_acbc .R ()),uint32 (_cabac *_acbc .G ()),uint32 (_cabac *_acbc .B ())};};func _edege (_cbbg _fda .PdfObject )(*PdfShading ,error ){_befcad :=&PdfShading {};
var _cbeag *_fda .PdfObjectDictionary ;if _cddb ,_efgbc :=_fda .GetIndirect (_cbbg );_efgbc {_befcad ._edgffb =_cddb ;_cbgc ,_gagcg :=_cddb .PdfObject .(*_fda .PdfObjectDictionary );if !_gagcg {_ga .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_fda .ErrTypeError ;};_cbeag =_cbgc ;}else if _afdad ,_fabae :=_fda .GetStream (_cbbg );_fabae {_befcad ._edgffb =_afdad ;_cbeag =_afdad .PdfObjectDictionary ;}else if _daccg ,_cdcga :=_fda .GetDict (_cbbg );_cdcga {_befcad ._edgffb =_daccg ;
_cbeag =_daccg ;}else {_ga .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_cbbg );return nil ,_fda .ErrTypeError ;};if _cbeag ==nil {_ga .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ad .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cbbg =_cbeag .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cbbg ==nil {_ga .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbbg =_fda .TraceToDirectObject (_cbbg );_bedgb ,_afab :=_cbbg .(*_fda .PdfObjectInteger );if !_afab {_ga .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cbbg );
return nil ,_fda .ErrTypeError ;};if *_bedgb < 1||*_bedgb > 7{_ga .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bedgb );
return nil ,_fda .ErrTypeError ;};_befcad .ShadingType =_bedgb ;_cbbg =_cbeag .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _cbbg ==nil {_ga .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cddgb ,_efaff :=NewPdfColorspaceFromPdfObject (_cbbg );if _efaff !=nil {_ga .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_efaff );
return nil ,_efaff ;};_befcad .ColorSpace =_cddgb ;_cbbg =_cbeag .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _cbbg !=nil {_cbbg =_fda .TraceToDirectObject (_cbbg );_fbgeb ,_geeadf :=_cbbg .(*_fda .PdfObjectArray );if !_geeadf {_ga .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cbbg );
return nil ,_fda .ErrTypeError ;};_befcad .Background =_fbgeb ;};_cbbg =_cbeag .Get ("\u0042\u0042\u006f\u0078");if _cbbg !=nil {_cbbg =_fda .TraceToDirectObject (_cbbg );_acgg ,_egdb :=_cbbg .(*_fda .PdfObjectArray );if !_egdb {_ga .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cbbg );
return nil ,_fda .ErrTypeError ;};_efbdb ,_fgdb :=NewPdfRectangle (*_acgg );if _fgdb !=nil {_ga .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fgdb );return nil ,_fgdb ;};_befcad .BBox =_efbdb ;};_cbbg =_cbeag .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _cbbg !=nil {_cbbg =_fda .TraceToDirectObject (_cbbg );_abaff ,_dbefba :=_cbbg .(*_fda .PdfObjectBool );if !_dbefba {_ga .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbbg );
return nil ,_fda .ErrTypeError ;};_befcad .AntiAlias =_abaff ;};switch *_bedgb {case 1:_aedf ,_bbffb :=_eacdd (_cbeag );if _bbffb !=nil {return nil ,_bbffb ;};_aedf .PdfShading =_befcad ;_befcad ._badeb =_aedf ;return _befcad ,nil ;case 2:_egeg ,_fcgdf :=_cdccb (_cbeag );
if _fcgdf !=nil {return nil ,_fcgdf ;};_egeg .PdfShading =_befcad ;_befcad ._badeb =_egeg ;return _befcad ,nil ;case 3:_aafec ,_dceae :=_cdag (_cbeag );if _dceae !=nil {return nil ,_dceae ;};_aafec .PdfShading =_befcad ;_befcad ._badeb =_aafec ;return _befcad ,nil ;
case 4:_dfdec ,_cbdcdg :=_ddgc (_cbeag );if _cbdcdg !=nil {return nil ,_cbdcdg ;};_dfdec .PdfShading =_befcad ;_befcad ._badeb =_dfdec ;return _befcad ,nil ;case 5:_gdceb ,_agecg :=_aefge (_cbeag );if _agecg !=nil {return nil ,_agecg ;};_gdceb .PdfShading =_befcad ;
_befcad ._badeb =_gdceb ;return _befcad ,nil ;case 6:_cefea ,_agbeb :=_cgbea (_cbeag );if _agbeb !=nil {return nil ,_agbeb ;};_cefea .PdfShading =_befcad ;_befcad ._badeb =_cefea ;return _befcad ,nil ;case 7:_dagge ,_bbed :=_dccb (_cbeag );if _bbed !=nil {return nil ,_bbed ;
};_dagge .PdfShading =_befcad ;_befcad ._badeb =_dagge ;return _befcad ,nil ;};return nil ,_ad .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fda .PdfObject ;Mac _fda .PdfObject ;Unix _fda .PdfObject ;NewWindow _fda .PdfObject ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_faea *PdfRectangle )Normalize (){if _faea .Llx > _faea .Urx {_faea .Llx ,_faea .Urx =_faea .Urx ,_faea .Llx ;};if _faea .Lly > _faea .Ury {_faea .Lly ,_faea .Ury =_faea .Ury ,_faea .Lly ;};};var (CourierName =_ade .CourierName ;CourierBoldName =_ade .CourierBoldName ;
CourierObliqueName =_ade .CourierObliqueName ;CourierBoldObliqueName =_ade .CourierBoldObliqueName ;HelveticaName =_ade .HelveticaName ;HelveticaBoldName =_ade .HelveticaBoldName ;HelveticaObliqueName =_ade .HelveticaObliqueName ;HelveticaBoldObliqueName =_ade .HelveticaBoldObliqueName ;
SymbolName =_ade .SymbolName ;ZapfDingbatsName =_ade .ZapfDingbatsName ;TimesRomanName =_ade .TimesRomanName ;TimesBoldName =_ade .TimesBoldName ;TimesItalicName =_ade .TimesItalicName ;TimesBoldItalicName =_ade .TimesBoldItalicName ;);

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fda .PdfObject ;_defa []byte ;_adga *_fda .PdfIndirectObject ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fda .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fda .PdfObject ;A _fda .PdfObject ;SE _fda .PdfObject ;C _fda .PdfObject ;F _fda .PdfObject ;
_ebeee *_fda .PdfIndirectObject ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_egcce *XObjectForm )SetContentStream (content []byte ,encoder _fda .StreamEncoder )error {_adbcg :=content ;if encoder ==nil {if _egcce .Filter !=nil {encoder =_egcce .Filter ;}else {encoder =_fda .NewRawEncoder ();};};_ggeabe ,_gdefg :=encoder .EncodeBytes (_adbcg );
if _gdefg !=nil {return _gdefg ;};_adbcg =_ggeabe ;_egcce .Stream =_adbcg ;_egcce .Filter =encoder ;return nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fdaa *PdfColorspaceSpecialIndexed )ToPdfObject ()_fda .PdfObject {_dgeg :=_fda .MakeArray (_fda .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_dgeg .Append (_fdaa .Base .ToPdfObject ());_dgeg .Append (_fda .MakeInteger (int64 (_fdaa .HiVal )));
_dgeg .Append (_fdaa .Lookup );if _fdaa ._adga !=nil {_fdaa ._adga .PdfObject =_dgeg ;return _fdaa ._adga ;};return _dgeg ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_geeb *PdfColorspaceCalGray )ToPdfObject ()_fda .PdfObject {_cgce :=&_fda .PdfObjectArray {};_cgce .Append (_fda .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_gfaff :=_fda .MakeDict ();if _geeb .WhitePoint !=nil {_gfaff .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fda .MakeArray (_fda .MakeFloat (_geeb .WhitePoint [0]),_fda .MakeFloat (_geeb .WhitePoint [1]),_fda .MakeFloat (_geeb .WhitePoint [2])));
}else {_ga .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _geeb .BlackPoint !=nil {_gfaff .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fda .MakeArray (_fda .MakeFloat (_geeb .BlackPoint [0]),_fda .MakeFloat (_geeb .BlackPoint [1]),_fda .MakeFloat (_geeb .BlackPoint [2])));
};_gfaff .Set ("\u0047\u0061\u006dm\u0061",_fda .MakeFloat (_geeb .Gamma ));_cgce .Append (_gfaff );if _geeb ._eacdb !=nil {_geeb ._eacdb .PdfObject =_cgce ;return _geeb ._eacdb ;};return _cgce ;};type pdfFont interface{_ade .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fda .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func (_ggcae *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _ggcae ._edbag .GetCrypter ()!=nil &&!_ggcae ._edbag .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gebda :=_ggcae ._debca ;_cbfde :=_gebda .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cbfde ==nil {return nil ,nil ;};_bgafe ,_ :=_fda .GetIndirect (_cbfde );_cbfde =_fda .TraceToDirectObject (_cbfde );if _fda .IsNullObject (_cbfde ){_ga .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bgfaa ,_begga :=_fda .GetDict (_cbfde );if !_begga {_ga .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cbfde );_ga .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cbfde );};_ga .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ga .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_ggcae ._cegf {_gdacg :=_ggcae .traverseObjectData (_bgfaa );
if _gdacg !=nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gdacg );
return nil ,_gdacg ;};};_feaec ,_fbfe :=_ggcae .newPdfAcroFormFromDict (_bgafe ,_bgfaa );if _fbfe !=nil {return nil ,_fbfe ;};return _feaec ,nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fda .PdfObject ;LE _fda .PdfObject ;BS _fda .PdfObject ;IC _fda .PdfObject ;BE _fda .PdfObject ;IT _fda .PdfObject ;Measure _fda .PdfObject ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_cfdg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bfgfg :=_cfdg .actualFont ();if _bfgfg ==nil {_ga .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cfdg ._fdbb );
return _ade .CharMetrics {},false ;};if _eabfe ,_ccdg :=_bfgfg .GetRuneMetrics (r );_ccdg {return _eabfe ,true ;};if _gadb ,_bgefb :=_cfdg .GetFontDescriptor ();_bgefb ==nil &&_gadb !=nil {return _ade .CharMetrics {Wx :_gadb ._bcdgg },true ;};_ga .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cfdg );
return _ade .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_gdeeaa *PdfTransformParamsDocMDP )ToPdfObject ()_fda .PdfObject {_fcgbg :=_fda .MakeDict ();_fcgbg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gdeeaa .Type );_fcgbg .SetIfNotNil ("\u0056",_gdeeaa .V );_fcgbg .SetIfNotNil ("\u0050",_gdeeaa .P );return _fcgbg ;
};func (_ebbb *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_fdfeg *PdfReader )GetCatalogMetadata ()(_fda .PdfObject ,bool ){if _fdfeg ._debca ==nil {return nil ,false ;};_ebbfg :=_fdfeg ._debca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _ebbfg ,_ebbfg !=nil ;};func (_gdgfa *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _daad []*PdfFieldSignature ;
for _ ,_ebde :=range _gdgfa .AllFields (){switch _badgc :=_ebde .GetContext ().(type ){case *PdfFieldSignature :_agfeg :=_badgc ;_daad =append (_daad ,_agfeg );};};return _daad ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cdbd *PdfFieldChoice )ToPdfObject ()_fda .PdfObject {_cdbd .PdfField .ToPdfObject ();_bbeg :=_cdbd ._dccfd ;_abaa :=_bbeg .PdfObject .(*_fda .PdfObjectDictionary );_abaa .Set ("\u0046\u0054",_fda .MakeName ("\u0043\u0068"));if _cdbd .Opt !=nil {_abaa .Set ("\u004f\u0070\u0074",_cdbd .Opt );
};if _cdbd .TI !=nil {_abaa .Set ("\u0054\u0049",_cdbd .TI );};if _cdbd .I !=nil {_abaa .Set ("\u0049",_cdbd .I );};return _bbeg ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fda .PdfObject ;Q _fda .PdfObject ;RC _fda .PdfObject ;DS _fda .PdfObject ;CL _fda .PdfObject ;IT _fda .PdfObject ;BE _fda .PdfObject ;RD _fda .PdfObject ;BS _fda .PdfObject ;LE _fda .PdfObject ;
};

// ToInteger convert to an integer format.
func (_degd *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_ecdgg :=_f .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_ecdgg *_degd .C ()),uint32 (_ecdgg *_degd .M ()),uint32 (_ecdgg *_degd .Y ()),uint32 (_ecdgg *_degd .K ())};};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aafff *PdfSignatureReference )GetContainingPdfObject ()_fda .PdfObject {return _aafff ._dagcd };

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fda .PdfObject ;Popup *PdfAnnotationPopup ;CA _fda .PdfObject ;RC _fda .PdfObject ;CreationDate _fda .PdfObject ;IRT _fda .PdfObject ;Subj _fda .PdfObject ;RT _fda .PdfObject ;IT _fda .PdfObject ;ExData _fda .PdfObject ;
};

// SetShadingByName sets a shading resource specified by keyName.
func (_dfbba *PdfPageResources )SetShadingByName (keyName _fda .PdfObjectName ,shadingObj _fda .PdfObject )error {if _dfbba .Shading ==nil {_dfbba .Shading =_fda .MakeDict ();};_cefe ,_fcdba :=_dfbba .Shading .(*_fda .PdfObjectDictionary );if !_fcdba {return _fda .ErrTypeError ;
};_cefe .Set (keyName ,shadingObj );return nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_gegb :=&PdfPageResources {};_gegb ._gafg =_fda .MakeDict ();return _gegb ;};func (_cdcb *PdfReader )newPdfActionImportDataFromDict (_bggd *_fda .PdfObjectDictionary )(*PdfActionImportData ,error ){_dbd ,_dcdg :=_gcfc (_bggd .Get ("\u0046"));
if _dcdg !=nil {return nil ,_dcdg ;};return &PdfActionImportData {F :_dbd },nil ;};

// WriteString outputs the object as it is to be written to file.
func (_begdc *pdfSignDictionary )WriteString ()string {_begdc ._edee =0;_begdc ._dabg =0;_begdc ._ecadg =0;_begdc ._bdfc =0;_gffb :=_dcc .NewBuffer (nil );_gffb .WriteString ("\u003c\u003c");for _ ,_bdcdf :=range _begdc .Keys (){_ecgae :=_begdc .Get (_bdcdf );
switch _bdcdf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gffb .WriteString (_bdcdf .WriteString ());_gffb .WriteString ("\u0020");_begdc ._ecadg =_gffb .Len ();_gffb .WriteString (_ecgae .WriteString ());_gffb .WriteString ("\u0020");_begdc ._bdfc =_gffb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gffb .WriteString (_bdcdf .WriteString ());_gffb .WriteString ("\u0020");_begdc ._edee =_gffb .Len ();_gffb .WriteString (_ecgae .WriteString ());_gffb .WriteString ("\u0020");_begdc ._dabg =_gffb .Len ()-1;
default:_gffb .WriteString (_bdcdf .WriteString ());_gffb .WriteString ("\u0020");_gffb .WriteString (_ecgae .WriteString ());};};_gffb .WriteString ("\u003e\u003e");return _gffb .String ();};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dgagf *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_edcbc :=NewPdfOutlineItem ();_edcbc .Title =_fda .MakeEncodedString (_dgagf .Title ,true );_edcbc .Dest =_dgagf .Dest .ToPdfObject ();var _eceaf []*PdfOutlineItem ;var _fbbef int64 ;
var _efeg *PdfOutlineItem ;for _ ,_ggge :=range _dgagf .Entries {_dbgga ,_gbcee :=_ggge .ToPdfOutlineItem ();_dbgga .Parent =&_edcbc .PdfOutlineTreeNode ;if _efeg !=nil {_efeg .Next =&_dbgga .PdfOutlineTreeNode ;_dbgga .Prev =&_efeg .PdfOutlineTreeNode ;
};_eceaf =append (_eceaf ,_dbgga );_fbbef +=_gbcee ;_efeg =_dbgga ;};_cdbfd :=len (_eceaf );_fbbef +=int64 (_cdbfd );if _cdbfd > 0{_edcbc .First =&_eceaf [0].PdfOutlineTreeNode ;_edcbc .Last =&_eceaf [_cdbfd -1].PdfOutlineTreeNode ;_edcbc .Count =&_fbbef ;
};return _edcbc ,_fbbef ;};

// ToPdfObject implements interface PdfModel.
func (_eage *PdfAnnotationPrinterMark )ToPdfObject ()_fda .PdfObject {_eage .PdfAnnotation .ToPdfObject ();_gcac :=_eage ._fbb ;_acae :=_gcac .PdfObject .(*_fda .PdfObjectDictionary );_acae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_acae .SetIfNotNil ("\u004d\u004e",_eage .MN );return _gcac ;};

// Write writes out the PDF.
func (_bgebc *PdfWriter )Write (writer _ed .Writer )error {_ga .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_cabfb :=_bgebc .checkLicense ();if _cabfb !=nil {return _cabfb ;};if _cabfb =_bgebc .writeOutlines ();_cabfb !=nil {return _cabfb ;};if _cabfb =_bgebc .writeAcroFormFields ();
_cabfb !=nil {return _cabfb ;};_bgebc .checkPendingObjects ();if _cabfb =_bgebc .writeOutputIntents ();_cabfb !=nil {return _cabfb ;};_bgebc .setCatalogVersion ();_bgebc .copyObjects ();if _cabfb =_bgebc .optimize ();_cabfb !=nil {return _cabfb ;};if _cabfb =_bgebc .optimizeDocument ();
_cabfb !=nil {return _cabfb ;};var _bddeb _ef .Hash ;if _bgebc ._eeca {_bddeb =_cb .New ();writer =_ed .MultiWriter (_bddeb ,writer );};_bgebc .setWriter (writer );_dafde :=_bgebc .checkCrossReferenceStream ();_acdb ,_dafde :=_bgebc .mapObjectStreams (_dafde );
_bgebc .adjustXRefAffectedVersion (_dafde );_bgebc .writeDocumentVersion ();_bgebc .updateObjectNumbers ();_bgebc .writeObjects ();if _cabfb =_bgebc .writeObjectsInStreams (_acdb );_cabfb !=nil {return _cabfb ;};_fcae :=_bgebc ._dcded ;var _eaccb int ;
for _fdgce :=range _bgebc ._aaeac {if _fdgce > _eaccb {_eaccb =_fdgce ;};};if _bgebc ._eeca {if _cabfb =_bgebc .setHashIDs (_bddeb );_cabfb !=nil {return _cabfb ;};};if _dafde {if _cabfb =_bgebc .writeXRefStreams (_eaccb ,_fcae );_cabfb !=nil {return _cabfb ;
};}else {_bgebc .writeTrailer (_eaccb );};_bgebc .makeOffSetReference (_fcae );if _cabfb =_bgebc .flushWriter ();_cabfb !=nil {return _cabfb ;};return nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dfbee :=&PdfColorspaceCalGray {};_dfbee .BlackPoint =[]float64 {0.0,0.0,0.0};_dfbee .Gamma =1;return _dfbee ;};

// HasExtGState checks if ExtGState name is available.
func (_eggeg *PdfPage )HasExtGState (name _fda .PdfObjectName )bool {if _eggeg .Resources ==nil {return false ;};if _eggeg .Resources .ExtGState ==nil {return false ;};_gfbcf ,_cdcab :=_fda .TraceToDirectObject (_eggeg .Resources .ExtGState ).(*_fda .PdfObjectDictionary );
if !_cdcab {_ga .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fda .TraceToDirectObject (_eggeg .Resources .ExtGState ));
return false ;};_acfca :=_gfbcf .Get (name );_cgcgd :=_acfca !=nil ;return _cgcgd ;};

// SetName sets the `Name` field of the signature.
func (_cfgde *PdfSignature )SetName (name string ){_cfgde .Name =_fda .MakeString (name )};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fda .PdfObjectStream )(*XObjectForm ,error ){_ebced :=&XObjectForm {};_ebced ._adacca =stream ;_ccgcg :=*(stream .PdfObjectDictionary );_cdaffa ,_gdcee :=_fda .NewEncoderFromStream (stream );if _gdcee !=nil {return nil ,_gdcee ;
};_ebced .Filter =_cdaffa ;if _cfgab :=_ccgcg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cfgab !=nil {_afaac ,_gbdg :=_cfgab .(*_fda .PdfObjectName );if !_gbdg {return nil ,_ad .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_afaac !="\u0046\u006f\u0072\u006d"{_ga .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ad .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _feddd :=_ccgcg .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_feddd !=nil {_ebced .FormType =_feddd ;};if _gffbd :=_ccgcg .Get ("\u0042\u0042\u006f\u0078");_gffbd !=nil {_ebced .BBox =_gffbd ;};if _aedbg :=_ccgcg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_aedbg !=nil {_ebced .Matrix =_aedbg ;};if _egfaf :=_ccgcg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_egfaf !=nil {_egfaf =_fda .TraceToDirectObject (_egfaf );_babdd ,_adfdd :=_egfaf .(*_fda .PdfObjectDictionary );if !_adfdd {_ga .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fda .ErrTypeError ;};_egdcb ,_dedfb :=NewPdfPageResourcesFromDict (_babdd );if _dedfb !=nil {_ga .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_dedfb ;};_ebced .Resources =_egdcb ;_ga .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ebced .Resources );};_ebced .Group =_ccgcg .Get ("\u0047\u0072\u006fu\u0070");
_ebced .Ref =_ccgcg .Get ("\u0052\u0065\u0066");_ebced .MetaData =_ccgcg .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ebced .PieceInfo =_ccgcg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ebced .LastModified =_ccgcg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ebced .StructParent =_ccgcg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ebced .StructParents =_ccgcg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ebced .OPI =_ccgcg .Get ("\u004f\u0050\u0049");
_ebced .OC =_ccgcg .Get ("\u004f\u0043");_ebced .Name =_ccgcg .Get ("\u004e\u0061\u006d\u0065");_ebced .Stream =stream .Stream ;return _ebced ,nil ;};

// String returns the name of the colorspace (DeviceN).
func (_deebe *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// Encoder returns the font's text encoder.
func (_ddce pdfCIDFontType2 )Encoder ()_fd .TextEncoder {return _ddce ._gadbf };

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gdgad *PdfPageResources )SetXObjectImageByName (keyName _fda .PdfObjectName ,ximg *XObjectImage )error {_dgead :=ximg .ToPdfObject ().(*_fda .PdfObjectStream );_bbgc :=_gdgad .SetXObjectByName (keyName ,_dgead );return _bbgc ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cbdgc *PdfOutline )ToPdfObject ()_fda .PdfObject {_gcefc :=_cbdgc ._bddg ;_dddgfa :=_gcefc .PdfObject .(*_fda .PdfObjectDictionary );_dddgfa .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _cbdgc .First !=nil {_dddgfa .Set ("\u0046\u0069\u0072s\u0074",_cbdgc .First .ToPdfObject ());
};if _cbdgc .Last !=nil {_dddgfa .Set ("\u004c\u0061\u0073\u0074",_cbdgc .Last .GetContext ().GetContainingPdfObject ());};if _cbdgc .Parent !=nil {_dddgfa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cbdgc .Parent .GetContext ().GetContainingPdfObject ());
};if _cbdgc .Count !=nil {_dddgfa .Set ("\u0043\u006f\u0075n\u0074",_fda .MakeInteger (*_cbdgc .Count ));};return _gcefc ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_abbc *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _abbc ._ccafc .(*PdfTilingPattern );};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cdeeg *PdfColorspaceCalRGB )ToPdfObject ()_fda .PdfObject {_gaad :=&_fda .PdfObjectArray {};_gaad .Append (_fda .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_dbdf :=_fda .MakeDict ();if _cdeeg .WhitePoint !=nil {_eeec :=_fda .MakeArray (_fda .MakeFloat (_cdeeg .WhitePoint [0]),_fda .MakeFloat (_cdeeg .WhitePoint [1]),_fda .MakeFloat (_cdeeg .WhitePoint [2]));
_dbdf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_eeec );}else {_ga .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cdeeg .BlackPoint !=nil {_gcdec :=_fda .MakeArray (_fda .MakeFloat (_cdeeg .BlackPoint [0]),_fda .MakeFloat (_cdeeg .BlackPoint [1]),_fda .MakeFloat (_cdeeg .BlackPoint [2]));_dbdf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gcdec );
};if _cdeeg .Gamma !=nil {_bddfe :=_fda .MakeArray (_fda .MakeFloat (_cdeeg .Gamma [0]),_fda .MakeFloat (_cdeeg .Gamma [1]),_fda .MakeFloat (_cdeeg .Gamma [2]));_dbdf .Set ("\u0047\u0061\u006dm\u0061",_bddfe );};if _cdeeg .Matrix !=nil {_aaeg :=_fda .MakeArray (_fda .MakeFloat (_cdeeg .Matrix [0]),_fda .MakeFloat (_cdeeg .Matrix [1]),_fda .MakeFloat (_cdeeg .Matrix [2]),_fda .MakeFloat (_cdeeg .Matrix [3]),_fda .MakeFloat (_cdeeg .Matrix [4]),_fda .MakeFloat (_cdeeg .Matrix [5]),_fda .MakeFloat (_cdeeg .Matrix [6]),_fda .MakeFloat (_cdeeg .Matrix [7]),_fda .MakeFloat (_cdeeg .Matrix [8]));
_dbdf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_aaeg );};_gaad .Append (_dbdf );if _cdeeg ._ecbd !=nil {_cdeeg ._ecbd .PdfObject =_gaad ;return _cdeeg ._ecbd ;};return _gaad ;};func (_gcfee SignatureValidationResult )String ()string {var _adddg _dcc .Buffer ;
_adddg .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gcfee .Name ));if _gcfee .Date ._ebfe > 0{_adddg .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gcfee .Date .ToGoTime ().String ()));}else {_adddg .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gcfee .Reason )> 0{_adddg .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gcfee .Reason ));}else {_adddg .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_gcfee .Location )> 0{_adddg .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gcfee .Location ));}else {_adddg .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gcfee .ContactInfo )> 0{_adddg .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gcfee .ContactInfo ));}else {_adddg .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_adddg .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gcfee .Fields )));if _gcfee .IsSigned {_adddg .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_adddg .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _gcfee .IsVerified {_adddg .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_adddg .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _gcfee .IsTrusted {_adddg .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_adddg .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_gcfee .GeneralizedTime .IsZero (){_adddg .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gcfee .GeneralizedTime .String ()));
};if _gcfee .DiffResults !=nil {_adddg .WriteString (_c .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_gcfee .DiffResults .IsPermitted ()));if len (_gcfee .DiffResults .Warnings )> 0{_adddg .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_geegc :=range _gcfee .DiffResults .Warnings {_adddg .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_geegc ));};};if len (_gcfee .DiffResults .Errors )> 0{_adddg .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_dgfg :=range _gcfee .DiffResults .Errors {_adddg .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_dgfg ));};};};return _adddg .String ();};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_ccfc *PdfFieldButton )ToPdfObject ()_fda .PdfObject {_ccfc .PdfField .ToPdfObject ();_cfgg :=_ccfc ._dccfd ;_egaa :=_cfgg .PdfObject .(*_fda .PdfObjectDictionary );_egaa .Set ("\u0046\u0054",_fda .MakeName ("\u0042\u0074\u006e"));if _ccfc .Opt !=nil {_egaa .Set ("\u004f\u0070\u0074",_ccfc .Opt );
};return _cfgg ;};func _acefa ()string {_bcaeg .Lock ();defer _bcaeg .Unlock ();return _bbgfeg };

// ToPdfObject converts the font to a PDF representation.
func (_abcg *pdfFontType3 )ToPdfObject ()_fda .PdfObject {if _abcg ._ddef ==nil {_abcg ._ddef =&_fda .PdfIndirectObject {};};_cgf :=_abcg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_abcg ._ddef .PdfObject =_cgf ;if _abcg .FirstChar !=nil {_cgf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_abcg .FirstChar );
};if _abcg .LastChar !=nil {_cgf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_abcg .LastChar );};if _abcg .Widths !=nil {_cgf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_abcg .Widths );};if _abcg .Encoding !=nil {_cgf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abcg .Encoding );
}else if _abcg ._egcbe !=nil {_ecfgeb :=_abcg ._egcbe .ToPdfObject ();if _ecfgeb !=nil {_cgf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ecfgeb );};};if _abcg .FontBBox !=nil {_cgf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_abcg .FontBBox );
};if _abcg .FontMatrix !=nil {_cgf .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_abcg .FontMatrix );};if _abcg .CharProcs !=nil {_cgf .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_abcg .CharProcs );};if _abcg .Resources !=nil {_cgf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abcg .Resources );
};return _abcg ._ddef ;};func (_bfgf *PdfReader )loadAction (_gaed _fda .PdfObject )(*PdfAction ,error ){if _bagg ,_gbbb :=_fda .GetIndirect (_gaed );_gbbb {_fagbb ,_aacef :=_bfgf .newPdfActionFromIndirectObject (_bagg );if _aacef !=nil {return nil ,_aacef ;
};return _fagbb ,nil ;}else if !_fda .IsNullObject (_gaed ){return nil ,_ad .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdgb *PdfShadingType5 )ToPdfObject ()_fda .PdfObject {_fdgb .PdfShading .ToPdfObject ();_deef ,_eccce :=_fdgb .getShadingDict ();if _eccce !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdgb .BitsPerCoordinate !=nil {_deef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fdgb .BitsPerCoordinate );};if _fdgb .BitsPerComponent !=nil {_deef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdgb .BitsPerComponent );
};if _fdgb .VerticesPerRow !=nil {_deef .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fdgb .VerticesPerRow );};if _fdgb .Decode !=nil {_deef .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fdgb .Decode );};if _fdgb .Function !=nil {if len (_fdgb .Function )==1{_deef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdgb .Function [0].ToPdfObject ());
}else {_gddc :=_fda .MakeArray ();for _ ,_fadfd :=range _fdgb .Function {_gddc .Append (_fadfd .ToPdfObject ());};_deef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gddc );};};return _fdgb ._edgffb ;};func (_geagc *PdfWriter )writeBytes (_cddgba []byte ){if _geagc ._abac !=nil {return ;
};_gdcda ,_aadfg :=_geagc ._gfdaa .Write (_cddgba );_geagc ._dcded +=int64 (_gdcda );_geagc ._abac =_aadfg ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_eeaa *PdfField )GetContext ()PdfModel {return _eeaa ._bbbg };func _gagaga (_bdfef *_fda .PdfObjectStream )(*PdfFunctionType0 ,error ){_eggcc :=&PdfFunctionType0 {};_eggcc ._ddfe =_bdfef ;_abdac :=_bdfef .PdfObjectDictionary ;_ffegb ,_fceaa :=_fda .TraceToDirectObject (_abdac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fda .PdfObjectArray );
if !_fceaa {_ga .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ffegb .Len ()< 0||_ffegb .Len ()%2!=0{_ga .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ad .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_eggcc .NumInputs =_ffegb .Len ()/2;_bbfee ,_cgfb :=_ffegb .ToFloat64Array ();if _cgfb !=nil {return nil ,_cgfb ;};_eggcc .Domain =_bbfee ;_ffegb ,_fceaa =_fda .TraceToDirectObject (_abdac .Get ("\u0052\u0061\u006eg\u0065")).(*_fda .PdfObjectArray );
if !_fceaa {_ga .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ffegb .Len ()< 0||_ffegb .Len ()%2!=0{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_eggcc .NumOutputs =_ffegb .Len ()/2;_fbeff ,_cgfb :=_ffegb .ToFloat64Array ();if _cgfb !=nil {return nil ,_cgfb ;
};_eggcc .Range =_fbeff ;_ffegb ,_fceaa =_fda .TraceToDirectObject (_abdac .Get ("\u0053\u0069\u007a\u0065")).(*_fda .PdfObjectArray );if !_fceaa {_ga .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fagbd ,_cgfb :=_ffegb .ToIntegerArray ();
if _cgfb !=nil {return nil ,_cgfb ;};if len (_fagbd )!=_eggcc .NumInputs {_ga .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eggcc .Size =_fagbd ;_daddf ,_fceaa :=_fda .TraceToDirectObject (_abdac .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fda .PdfObjectInteger );
if !_fceaa {_ga .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ad .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_daddf !=1&&*_daddf !=2&&*_daddf !=4&&*_daddf !=8&&*_daddf !=12&&*_daddf !=16&&*_daddf !=24&&*_daddf !=32{_ga .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_daddf );
return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eggcc .BitsPerSample =int (*_daddf );_eggcc .Order =1;_badcc ,_fceaa :=_fda .TraceToDirectObject (_abdac .Get ("\u004f\u0072\u0064e\u0072")).(*_fda .PdfObjectInteger );
if _fceaa {if *_badcc !=1&&*_badcc !=3{_ga .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_badcc );return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eggcc .Order =int (*_badcc );
};_ffegb ,_fceaa =_fda .TraceToDirectObject (_abdac .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fda .PdfObjectArray );if _fceaa {_gdgcd ,_beggc :=_ffegb .ToFloat64Array ();if _beggc !=nil {return nil ,_beggc ;};_eggcc .Encode =_gdgcd ;};_ffegb ,_fceaa =_fda .TraceToDirectObject (_abdac .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fda .PdfObjectArray );
if _fceaa {_cabad ,_gadcg :=_ffegb .ToFloat64Array ();if _gadcg !=nil {return nil ,_gadcg ;};_eggcc .Decode =_cabad ;};_fdcd ,_cgfb :=_fda .DecodeStream (_bdfef );if _cgfb !=nil {return nil ,_cgfb ;};_eggcc ._bfeg =_fdcd ;return _eggcc ,nil ;};func (_efeeb *PdfWriter )hasObject (_ceefd _fda .PdfObject )bool {_ ,_eeeaa :=_efeeb ._cfeaa [_ceefd ];
return _eeeaa ;};func _gdefe (_aaaag *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_aaaag }};func _efad (_eccf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_eccf }};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gcee :=PdfWriter {};_gcee ._cfeaa =map[_fda .PdfObject ]struct{}{};_gcee ._adeed =[]_fda .PdfObject {};_gcee ._feea =map[_fda .PdfObject ][]*_fda .PdfObjectDictionary {};_gcee ._ggeda =map[_fda .PdfObject ]struct{}{};_gcee ._ccgad .Major =1;
_gcee ._ccgad .Minor =3;_ddfcg :=_fda .MakeDict ();_agdb :=[]struct{_cdbaa _fda .PdfObjectName ;_efcde string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_abaab ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cccfg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_dfcff ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_gffee ()},{"\u0054\u0069\u0074l\u0065",_eafef ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_acefa ()}};
for _ ,_aefdc :=range _agdb {if _aefdc ._efcde !=""{_ddfcg .Set (_aefdc ._cdbaa ,_fda .MakeString (_aefdc ._efcde ));};};if _fafgd :=_gdaaaf ();!_fafgd .IsZero (){if _ccffd ,_fgeba :=NewPdfDateFromTime (_fafgd );_fgeba ==nil {_ddfcg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ccffd .ToPdfObject ());
};};if _cfgfde :=_fabec ();!_cfgfde .IsZero (){if _egcf ,_adffe :=NewPdfDateFromTime (_cfgfde );_adffe ==nil {_ddfcg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_egcf .ToPdfObject ());};};_fddbe :=_fda .PdfIndirectObject {};_fddbe .PdfObject =_ddfcg ;
_gcee ._gebbe =&_fddbe ;_gcee .addObject (&_fddbe );_fabcf :=_fda .PdfIndirectObject {};_fdage :=_fda .MakeDict ();_fdage .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fabcf .PdfObject =_fdage ;_gcee ._cdeecc =&_fabcf ;
_gcee .addObject (_gcee ._cdeecc );_gfcgb ,_befba :=_fafde ("\u0077");if _befba !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_befba );};_gcee ._bgcae =_gfcgb ;_efebc :=_fda .PdfIndirectObject {};_cfdde :=_fda .MakeDict ();_cfdde .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0050\u0061\u0067e\u0073"));
_egdbac :=_fda .PdfObjectArray {};_cfdde .Set ("\u004b\u0069\u0064\u0073",&_egdbac );_cfdde .Set ("\u0043\u006f\u0075n\u0074",_fda .MakeInteger (0));_efebc .PdfObject =_cfdde ;_gcee ._degfge =&_efebc ;_gcee ._ggbfc =map[_fda .PdfObject ]struct{}{};_gcee .addObject (_gcee ._degfge );
_fdage .Set ("\u0050\u0061\u0067e\u0073",&_efebc );_gcee ._ecegfe =_fdage ;_ga .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fabcf );return _gcee ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bcae *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fda .GetNumberAsFloat (_bcae .CapHeight );};

// ToPdfObject implements interface PdfModel.
func (_fafb *PdfAnnotationTrapNet )ToPdfObject ()_fda .PdfObject {_fafb .PdfAnnotation .ToPdfObject ();_bbbe :=_fafb ._fbb ;_abbd :=_bbbe .PdfObject .(*_fda .PdfObjectDictionary );_abbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _bbbe ;};func _daffd (_dccec _fda .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_agdcc :=NewPdfColorspaceSpecialIndexed ();if _abda ,_beba :=_dccec .(*_fda .PdfIndirectObject );_beba {_agdcc ._adga =_abda ;};_dccec =_fda .TraceToDirectObject (_dccec );
_ebgeg ,_afffe :=_dccec .(*_fda .PdfObjectArray );if !_afffe {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebgeg .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_dccec =_ebgeg .Get (0);_aegdd ,_afffe :=_dccec .(*_fda .PdfObjectName );if !_afffe {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_aegdd !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_dccec =_ebgeg .Get (1);_gded ,_gagf :=DetermineColorspaceNameFromPdfObject (_dccec );if _gagf !=nil {return nil ,_gagf ;};if _gded =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_gded =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ga .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_gded );
return nil ,_cgdd ;};_dgff ,_gagf :=NewPdfColorspaceFromPdfObject (_dccec );if _gagf !=nil {return nil ,_gagf ;};_agdcc .Base =_dgff ;_dccec =_ebgeg .Get (2);_dgec ,_gagf :=_fda .GetNumberAsInt64 (_dccec );if _gagf !=nil {return nil ,_gagf ;};if _dgec > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_agdcc .HiVal =int (_dgec );_dccec =_ebgeg .Get (3);_agdcc .Lookup =_dccec ;_dccec =_fda .TraceToDirectObject (_dccec );var _eeage []byte ;if _fede ,_cdbe :=_dccec .(*_fda .PdfObjectString );_cdbe {_eeage =_fede .Bytes ();_ga .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_eeage );
}else if _gedb ,_aaba :=_dccec .(*_fda .PdfObjectStream );_aaba {_ga .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_dccec .String ());_ga .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gedb .Stream ),_gedb .Stream );
_gbede ,_aadbg :=_fda .DecodeStream (_gedb );if _aadbg !=nil {return nil ,_aadbg ;};_ga .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_gbede ),_gbede );_eeage =_gbede ;}else {_ga .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dccec );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_eeage )< _agdcc .Base .GetNumComponents ()*(_agdcc .HiVal +1){_ga .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ga .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_eeage ),_agdcc .Base .GetNumComponents (),_agdcc .HiVal );
}else {_eeage =_eeage [:_agdcc .Base .GetNumComponents ()*(_agdcc .HiVal +1)];};_agdcc ._defa =_eeage ;return _agdcc ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fagf *PdfAppender )UpdatePage (page *PdfPage ){_fagf .updateObjectsDeep (page .ToPdfObject (),nil )};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_dfec *PdfPage )error ;};

// SetOCProperties sets the optional content properties.
func (_bbee *PdfWriter )SetOCProperties (ocProperties _fda .PdfObject )error {_gdgca :=_bbee ._ecegfe ;if ocProperties !=nil {_ga .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_gdgca .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _bbee .addObjects (ocProperties );};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gaef *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_cfgfd :=_cbc .NewReader (img .getBase ());_dbed :=_eac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_debe :=_cbc .NewWriter (_dbed );
_abfa :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_babba :=make ([]uint32 ,3);var (_deaf error ;_abdb ,_dddg ,_cgd ,_fbgcf ,_egae ,_ccffa float64 ;);for {_deaf =_cfgfd .ReadSamples (_babba );if _deaf ==_ed .EOF {break ;}else if _deaf !=nil {return img ,_deaf ;
};_abdb =float64 (_babba [0])/_abfa ;_dddg =float64 (_babba [1])/_abfa ;_cgd =float64 (_babba [2])/_abfa ;_fbgcf =_gaef .Matrix [0]*_f .Pow (_abdb ,_gaef .Gamma [0])+_gaef .Matrix [3]*_f .Pow (_dddg ,_gaef .Gamma [1])+_gaef .Matrix [6]*_f .Pow (_cgd ,_gaef .Gamma [2]);
_egae =_gaef .Matrix [1]*_f .Pow (_abdb ,_gaef .Gamma [0])+_gaef .Matrix [4]*_f .Pow (_dddg ,_gaef .Gamma [1])+_gaef .Matrix [7]*_f .Pow (_cgd ,_gaef .Gamma [2]);_ccffa =_gaef .Matrix [2]*_f .Pow (_abdb ,_gaef .Gamma [0])+_gaef .Matrix [5]*_f .Pow (_dddg ,_gaef .Gamma [1])+_gaef .Matrix [8]*_f .Pow (_cgd ,_gaef .Gamma [2]);
_abdb =3.240479*_fbgcf +-1.537150*_egae +-0.498535*_ccffa ;_dddg =-0.969256*_fbgcf +1.875992*_egae +0.041556*_ccffa ;_cgd =0.055648*_fbgcf +-0.204043*_egae +1.057311*_ccffa ;_abdb =_f .Min (_f .Max (_abdb ,0),1.0);_dddg =_f .Min (_f .Max (_dddg ,0),1.0);
_cgd =_f .Min (_f .Max (_cgd ,0),1.0);_babba [0]=uint32 (_abdb *_abfa );_babba [1]=uint32 (_dddg *_abfa );_babba [2]=uint32 (_cgd *_abfa );if _deaf =_debe .WriteSamples (_babba );_deaf !=nil {return img ,_deaf ;};};return _gged (&_dbed ),nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bgg :=NewPdfAction ();_fc :=&PdfActionJavaScript {};_fc .PdfAction =_bgg ;_bgg .SetContext (_fc );return _fc ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};func _agedc (_aggae _fda .PdfObject )(*PdfColorspaceCalGray ,error ){_cgcb :=NewPdfColorspaceCalGray ();if _abbeg ,_afcfa :=_aggae .(*_fda .PdfIndirectObject );_afcfa {_cgcb ._eacdb =_abbeg ;};_aggae =_fda .TraceToDirectObject (_aggae );
_adag ,_fbfc :=_aggae .(*_fda .PdfObjectArray );if !_fbfc {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adag .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_aggae =_fda .TraceToDirectObject (_adag .Get (0));_cffb ,_fbfc :=_aggae .(*_fda .PdfObjectName );if !_fbfc {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cffb !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_aggae =_fda .TraceToDirectObject (_adag .Get (1));
_geec ,_fbfc :=_aggae .(*_fda .PdfObjectDictionary );if !_fbfc {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_aggae =_geec .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aggae =_fda .TraceToDirectObject (_aggae );_gcde ,_fbfc :=_aggae .(*_fda .PdfObjectArray );if !_fbfc {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _gcde .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bbbb ,_ecagg :=_gcde .GetAsFloat64Slice ();
if _ecagg !=nil {return nil ,_ecagg ;};_cgcb .WhitePoint =_bbbb ;_aggae =_geec .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aggae !=nil {_aggae =_fda .TraceToDirectObject (_aggae );_agdfce ,_abeb :=_aggae .(*_fda .PdfObjectArray );
if !_abeb {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _agdfce .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_beccg ,_ebb :=_agdfce .GetAsFloat64Slice ();if _ebb !=nil {return nil ,_ebb ;};_cgcb .BlackPoint =_beccg ;};_aggae =_geec .Get ("\u0047\u0061\u006dm\u0061");if _aggae !=nil {_aggae =_fda .TraceToDirectObject (_aggae );_eadg ,_cacc :=_fda .GetNumberAsFloat (_aggae );
if _cacc !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cgcb .Gamma =_eadg ;};return _cgcb ,nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_beaf *PdfPage )AddContentStreamByString (contentStr string )error {_ecdbg ,_abecdg :=_fda .MakeStream ([]byte (contentStr ),_fda .NewFlateEncoder ());if _abecdg !=nil {return _abecdg ;};if _beaf .Contents ==nil {_beaf .Contents =_ecdbg ;}else {_ggbff :=_fda .TraceToDirectObject (_beaf .Contents );
_dabb ,_gcce :=_ggbff .(*_fda .PdfObjectArray );if !_gcce {_dabb =_fda .MakeArray (_ggbff );};_dabb .Append (_ecdbg );_beaf .Contents =_dabb ;};return nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_eebdc =creator };

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_agbed *PdfWriter )ApplyStandard (optimizer StandardApplier ){_agbed ._babeb =optimizer };

// ToPdfObject converts the font to a PDF representation.
func (_bfagd *pdfFontType0 )ToPdfObject ()_fda .PdfObject {if _bfagd ._adddf ==nil {_bfagd ._adddf =&_fda .PdfIndirectObject {};};_faec :=_bfagd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bfagd ._adddf .PdfObject =_faec ;if _bfagd .Encoding !=nil {_faec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfagd .Encoding );
}else if _bfagd ._bcgee !=nil {_faec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfagd ._bcgee .ToPdfObject ());};if _bfagd .DescendantFont !=nil {_faec .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fda .MakeArray (_bfagd .DescendantFont .ToPdfObject ()));
};return _bfagd ._adddf ;};

// ToPdfObject implements interface PdfModel.
func (_ccag *PdfAnnotation3D )ToPdfObject ()_fda .PdfObject {_ccag .PdfAnnotation .ToPdfObject ();_accg :=_ccag ._fbb ;_adgc :=_accg .PdfObject .(*_fda .PdfObjectDictionary );_adgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0033\u0044"));
_adgc .SetIfNotNil ("\u0033\u0044\u0044",_ccag .T3DD );_adgc .SetIfNotNil ("\u0033\u0044\u0056",_ccag .T3DV );_adgc .SetIfNotNil ("\u0033\u0044\u0041",_ccag .T3DA );_adgc .SetIfNotNil ("\u0033\u0044\u0049",_ccag .T3DI );_adgc .SetIfNotNil ("\u0033\u0044\u0042",_ccag .T3DB );
return _accg ;};

// BaseFont returns the font's "BaseFont" field.
func (_decee *PdfFont )BaseFont ()string {return _decee .baseFields ()._fcdg };func (_gcfb *PdfReader )newPdfActionSubmitFormFromDict (_aadb *_fda .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_dccf ,_cbb :=_gcfc (_aadb .Get ("\u0046"));if _cbb !=nil {return nil ,_cbb ;
};return &PdfActionSubmitForm {F :_dccf ,Fields :_aadb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_aadb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fda .PdfObject ;Name _fda .PdfObject ;State _fda .PdfObject ;StateModel _fda .PdfObject ;};

// L returns the value of the L component of the color.
func (_afea *PdfColorLab )L ()float64 {return _afea [0]};func _bbece (_aebad _fda .PdfObject )[]*_fda .PdfObjectStream {if _aebad ==nil {return nil ;};_ffage ,_gfba :=_fda .GetArray (_aebad );if !_gfba ||_ffage .Len ()==0{return nil ;};_gcbee :=make ([]*_fda .PdfObjectStream ,0,_ffage .Len ());
for _ ,_faaae :=range _ffage .Elements (){if _fffbg ,_cabb :=_fda .GetStream (_faaae );_cabb {_gcbee =append (_gcbee ,_fffbg );};};return _gcbee ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_dbage *OutlineItem )Insert (index uint ,item *OutlineItem ){_agggde :=uint (len (_dbage .Entries ));if index > _agggde {index =_agggde ;};_dbage .Entries =append (_dbage .Entries [:index ],append ([]*OutlineItem {item },_dbage .Entries [index :]...)...);
};

// WriteToFile writes the Appender output to file specified by path.
func (_bgea *PdfAppender )WriteToFile (outputPath string )error {_afae ,_aagg :=_ac .Create (outputPath );if _aagg !=nil {return _aagg ;};defer _afae .Close ();return _bgea .Write (_afae );};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfObject returns a PDF object representation of the outline destination.
func (_eddecg OutlineDest )ToPdfObject ()_fda .PdfObject {if (_eddecg .PageObj ==nil &&_eddecg .Page < 0)||_eddecg .Mode ==""{return _fda .MakeNull ();};_fdcbe :=_fda .MakeArray ();if _eddecg .PageObj !=nil {_fdcbe .Append (_eddecg .PageObj );}else {_fdcbe .Append (_fda .MakeInteger (_eddecg .Page ));
};_fdcbe .Append (_fda .MakeName (_eddecg .Mode ));switch _eddecg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_fdcbe .Append (_fda .MakeFloat (_eddecg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_fdcbe .Append (_fda .MakeFloat (_eddecg .X ));
case "\u0058\u0059\u005a":_fdcbe .Append (_fda .MakeFloat (_eddecg .X ));_fdcbe .Append (_fda .MakeFloat (_eddecg .Y ));_fdcbe .Append (_fda .MakeFloat (_eddecg .Zoom ));default:_fdcbe .Set (1,_fda .MakeName ("\u0046\u0069\u0074"));};return _fdcbe ;};

// ToPdfObject implements interface PdfModel.
func (_eafa *PdfAnnotationStrikeOut )ToPdfObject ()_fda .PdfObject {_eafa .PdfAnnotation .ToPdfObject ();_befa :=_eafa ._fbb ;_eegg :=_befa .PdfObject .(*_fda .PdfObjectDictionary );_eafa .PdfAnnotationMarkup .appendToPdfDictionary (_eegg );_eegg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_eegg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eafa .QuadPoints );return _befa ;};func _cdfbe (_dacf *_fda .PdfObjectDictionary )*VRI {_aageb ,_ :=_fda .GetString (_dacf .Get ("\u0054\u0055"));_ecab ,_ :=_fda .GetString (_dacf .Get ("\u0054\u0053"));
return &VRI {Cert :_bbece (_dacf .Get ("\u0043\u0065\u0072\u0074")),OCSP :_bbece (_dacf .Get ("\u004f\u0043\u0053\u0050")),CRL :_bbece (_dacf .Get ("\u0043\u0052\u004c")),TU :_aageb ,TS :_ecab };};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_egd :=NewPdfAction ();_edaa :=&PdfActionRendition {};_edaa .PdfAction =_egd ;_egd .SetContext (_edaa );return _edaa ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bgdae *PdfField )FullName ()(string ,error ){var _bfbc _dcc .Buffer ;_efbf :=[]string {};if _bgdae .T !=nil {_efbf =append (_efbf ,_bgdae .T .Decoded ());};_dbfdf :=map[*PdfField ]bool {};_dbfdf [_bgdae ]=true ;_cfaa :=_bgdae .Parent ;for _cfaa !=nil {if _ ,_badb :=_dbfdf [_cfaa ];
_badb {return _bfbc .String (),_ad .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _cfaa .T ==nil {return _bfbc .String (),_ad .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_efbf =append (_efbf ,_cfaa .T .Decoded ());_dbfdf [_cfaa ]=true ;_cfaa =_cfaa .Parent ;};for _ffcg :=len (_efbf )-1;_ffcg >=0;_ffcg --{_bfbc .WriteString (_efbf [_ffcg ]);if _ffcg > 0{_bfbc .WriteString ("\u002e");};};return _bfbc .String (),nil ;};


// SetPatternByName sets a pattern resource specified by keyName.
func (_bccgg *PdfPageResources )SetPatternByName (keyName _fda .PdfObjectName ,pattern _fda .PdfObject )error {if _bccgg .Pattern ==nil {_bccgg .Pattern =_fda .MakeDict ();};_deagc ,_ccdc :=_bccgg .Pattern .(*_fda .PdfObjectDictionary );if !_ccdc {return _fda .ErrTypeError ;
};_deagc .Set (keyName ,pattern );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_feee *PdfAnnotationScreen )ToPdfObject ()_fda .PdfObject {_feee .PdfAnnotation .ToPdfObject ();_eeea :=_feee ._fbb ;_afde :=_eeea .PdfObject .(*_fda .PdfObjectDictionary );_afde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_afde .SetIfNotNil ("\u0054",_feee .T );_afde .SetIfNotNil ("\u004d\u004b",_feee .MK );_afde .SetIfNotNil ("\u0041",_feee .A );_afde .SetIfNotNil ("\u0041\u0041",_feee .AA );return _eeea ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;
PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// ColorToRGB converts gray -> rgb for a single color component.
func (_agcd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_feafg ,_caef :=color .(*PdfColorDeviceGray );if !_caef {_ga .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_feafg ),float64 (*_feafg ),float64 (*_feafg )),nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fda .PdfObject )(_fda .PdfObjectName ,error ){var _fbec *_fda .PdfObjectName ;var _efcee *_fda .PdfObjectArray ;if _bfdb ,_dbdg :=obj .(*_fda .PdfIndirectObject );_dbdg {if _bcaa ,_fgafb :=_bfdb .PdfObject .(*_fda .PdfObjectArray );
_fgafb {_efcee =_bcaa ;}else if _ddebg ,_ecdf :=_bfdb .PdfObject .(*_fda .PdfObjectName );_ecdf {_fbec =_ddebg ;};}else if _abbe ,_afce :=obj .(*_fda .PdfObjectArray );_afce {_efcee =_abbe ;}else if _gaab ,_fdfg :=obj .(*_fda .PdfObjectName );_fdfg {_fbec =_gaab ;
};if _fbec !=nil {switch *_fbec {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fbec ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fbec ,nil ;
};};if _efcee !=nil &&_efcee .Len ()> 0{if _eabd ,_ebda :=_efcee .Get (0).(*_fda .PdfObjectName );_ebda {switch *_eabd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _efcee .Len ()==1{return *_eabd ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_eabd ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_eabd ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_eabd ,nil ;};};};return "",nil ;};func (_dbab *PdfReader )newPdfAnnotationPrinterMarkFromDict (_gbe *_fda .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_effa :=PdfAnnotationPrinterMark {};
_effa .MN =_gbe .Get ("\u004d\u004e");return &_effa ,nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_gfdfc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fda .PdfObject ;};func (_gdceg *PdfWriter )checkCrossReferenceStream ()bool {_dcfec :=_gdceg ._ccgad .Major > 1||(_gdceg ._ccgad .Major ==1&&_gdceg ._ccgad .Minor > 4);if _gdceg ._ecdcg !=nil {_dcfec =*_gdceg ._ecdcg ;
};return _dcfec ;};func _cdag (_cgeeec *_fda .PdfObjectDictionary )(*PdfShadingType3 ,error ){_bfdfa :=PdfShadingType3 {};_ddged :=_cgeeec .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ddged ==nil {_ga .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_fbdeg ,_cbedc :=_ddged .(*_fda .PdfObjectArray );if !_cbedc {_ga .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddged );
return nil ,_fda .ErrTypeError ;};if _fbdeg .Len ()!=6{_ga .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fbdeg .Len ());return nil ,ErrInvalidAttribute ;
};_bfdfa .Coords =_fbdeg ;if _gbccc :=_cgeeec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gbccc !=nil {_gbccc =_fda .TraceToDirectObject (_gbccc );_ebea ,_aadc :=_gbccc .(*_fda .PdfObjectArray );if !_aadc {_ga .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbccc );
return nil ,_fda .ErrTypeError ;};_bfdfa .Domain =_ebea ;};_ddged =_cgeeec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ddged ==nil {_ga .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bfdfa .Function =[]PdfFunction {};if _beecc ,_gecgb :=_ddged .(*_fda .PdfObjectArray );_gecgb {for _ ,_bcadd :=range _beecc .Elements (){_caegb ,_cgcfe :=_agbac (_bcadd );if _cgcfe !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgcfe );
return nil ,_cgcfe ;};_bfdfa .Function =append (_bfdfa .Function ,_caegb );};}else {_ecfgf ,_dged :=_agbac (_ddged );if _dged !=nil {_ga .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dged );
return nil ,_dged ;};_bfdfa .Function =append (_bfdfa .Function ,_ecfgf );};if _fddeg :=_cgeeec .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fddeg !=nil {_fddeg =_fda .TraceToDirectObject (_fddeg );_bcgcf ,_gfecb :=_fddeg .(*_fda .PdfObjectArray );if !_gfecb {_ga .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fddeg );
return nil ,_fda .ErrTypeError ;};if _bcgcf .Len ()!=2{_ga .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bcgcf .Len ());return nil ,ErrInvalidAttribute ;
};_bfdfa .Extend =_bcgcf ;};return &_bfdfa ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ebfe int64 ;_dbafg int64 ;_acaaab int64 ;_cacbeg int64 ;_bdbda int64 ;_affd int64 ;_bbacd byte ;_eegdc int64 ;_cbfdee int64 ;};

// PdfVersion returns version of the PDF file.
func (_faggc *PdfReader )PdfVersion ()_fda .Version {return _faggc ._edbag .PdfVersion ()};func (_becgd *PdfWriter )optimizeDocument ()error {if _becgd ._babeb ==nil {return nil ;};_eccef ,_bdeeae :=_fda .GetDict (_becgd ._gebbe );if !_bdeeae {return _ad .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bbead :=_ccf .Document {ID :[2]string {_becgd ._cdad ,_becgd ._egeddb },Version :_becgd ._ccgad ,Objects :_becgd ._adeed ,Info :_eccef ,Crypt :_becgd ._aecdf ,UseHashBasedID :_becgd ._eeca };if _cbbcg :=_becgd ._babeb .ApplyStandard (&_bbead );_cbbcg !=nil {return _cbbcg ;
};_becgd ._cdad ,_becgd ._egeddb =_bbead .ID [0],_bbead .ID [1];_becgd ._ccgad =_bbead .Version ;_becgd ._adeed =_bbead .Objects ;_becgd ._gebbe .PdfObject =_bbead .Info ;_becgd ._eeca =_bbead .UseHashBasedID ;_becgd ._aecdf =_bbead .Crypt ;_caacgg :=make (map[_fda .PdfObject ]struct{},len (_becgd ._adeed ));
for _ ,_ececc :=range _becgd ._adeed {_caacgg [_ececc ]=struct{}{};};_becgd ._cfeaa =_caacgg ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_agdf *PdfAnnotationLink )ToPdfObject ()_fda .PdfObject {_agdf .PdfAnnotation .ToPdfObject ();_ccad :=_agdf ._fbb ;_cggc :=_ccad .PdfObject .(*_fda .PdfObjectDictionary );_cggc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u004c\u0069\u006e\u006b"));
if _agdf ._gce !=nil &&_agdf ._gce ._dg !=nil {_cggc .Set ("\u0041",_agdf ._gce ._dg .ToPdfObject ());}else if _agdf .A !=nil {_cggc .Set ("\u0041",_agdf .A );};_cggc .SetIfNotNil ("\u0044\u0065\u0073\u0074",_agdf .Dest );_cggc .SetIfNotNil ("\u0048",_agdf .H );
_cggc .SetIfNotNil ("\u0050\u0041",_agdf .PA );_cggc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agdf .QuadPoints );_cggc .SetIfNotNil ("\u0042\u0053",_agdf .BS );return _ccad ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_edbg *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adbb :=vals [0];if _adbb < 0.0||_adbb > 1.0{_ga .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _adbb < 0.0{_adbb =0.0;}else if _adbb > 1.0{_adbb =1.0;};return NewPdfColorDeviceGray (_adbb ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_deeb *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aabd ,_bcgf :=_fda .GetNumbersAsFloat (objects );
if _bcgf !=nil {return nil ,_bcgf ;};return _deeb .ColorFromFloats (_aabd );};func _cfda (_bbbde *XObjectImage )error {if _bbbde .SMask ==nil {return nil ;};_fdfde ,_adfg :=_bbbde .SMask .(*_fda .PdfObjectStream );if !_adfg {_ga .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _fda .ErrTypeError ;};_ffbba :=_fdfde .PdfObjectDictionary ;_affaa :=_ffbba .Get ("\u004d\u0061\u0074t\u0065");if _affaa ==nil {return nil ;};_cfbgf ,_fffgd :=_adfcd (_affaa .(*_fda .PdfObjectArray ));if _fffgd !=nil {return _fffgd ;};_deaeb :=_fda .MakeArrayFromFloats ([]float64 {_cfbgf });
_ffbba .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_deaeb );return nil ;};type pdfFontSimple struct{fontCommon ;_bbeaf *_fda .PdfIndirectObject ;_ffbd map[_fd .CharCode ]float64 ;_bfbca _fd .TextEncoder ;_dgaaa _fd .TextEncoder ;_gdag *PdfFontDescriptor ;


// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fda .PdfObject ;LastChar _fda .PdfObject ;Widths _fda .PdfObject ;Encoding _fda .PdfObject ;_acfge *_ade .RuneCharSafeMap ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fdagc *PdfColorCalGray )GetNumComponents ()int {return 1};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_eefg *PdfAnnotation )GetContext ()PdfModel {if _eefg ==nil {return nil ;};return _eefg ._egca ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fda .PdfObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_caacg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ga .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eafae :=[]float64 {0.0};if _caacg .C0 !=nil {_eafae =_caacg .C0 ;};_dede :=[]float64 {1.0};if _caacg .C1 !=nil {_dede =_caacg .C1 ;};var _fecd []float64 ;for _defg :=0;_defg < len (_eafae );_defg ++{_cbeg :=_eafae [_defg ]+_f .Pow (x [0],_caacg .N )*(_dede [_defg ]-_eafae [_defg ]);
_fecd =append (_fecd ,_cbeg );};return _fecd ,nil ;};func (_eafbg *PdfWriter )writeTrailer (_gbbee int ){_eafbg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _aggec :=0;_aggec <=_gbbee ;{for ;_aggec <=_gbbee ;_aggec ++{_eefb ,_bgffe :=_eafbg ._aaeac [_aggec ];
if _bgffe &&(!_eafbg ._dfecb ||_eafbg ._dfecb &&(_eefb .Type ==1&&_eefb .Offset >=_eafbg ._gcaefe ||_eefb .Type ==0)){break ;};};var _gbceb int ;for _gbceb =_aggec +1;_gbceb <=_gbbee ;_gbceb ++{_debce ,_faafe :=_eafbg ._aaeac [_gbceb ];if _faafe &&(!_eafbg ._dfecb ||_eafbg ._dfecb &&(_debce .Type ==1&&_debce .Offset > _eafbg ._gcaefe )){continue ;
};break ;};_ffabd :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_aggec ,_gbceb -_aggec );_eafbg .writeString (_ffabd );for _bcgab :=_aggec ;_bcgab < _gbceb ;_bcgab ++{_ebcda :=_eafbg ._aaeac [_bcgab ];switch _ebcda .Type {case 0:_ffabd =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_eafbg .writeString (_ffabd );case 1:_ffabd =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_ebcda .Offset ,0);_eafbg .writeString (_ffabd );};};_aggec =_gbceb +1;};_cdae :=_fda .MakeDict ();_cdae .Set ("\u0049\u006e\u0066\u006f",_eafbg ._gebbe );
_cdae .Set ("\u0052\u006f\u006f\u0074",_eafbg ._cdeecc );_cdae .Set ("\u0053\u0069\u007a\u0065",_fda .MakeInteger (int64 (_gbbee +1)));if _eafbg ._dfecb &&_eafbg ._ddbefe > 0{_cdae .Set ("\u0050\u0072\u0065\u0076",_fda .MakeInteger (_eafbg ._ddbefe ));
};if _eafbg ._aecdf !=nil {_cdae .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_eafbg ._ggdcb );};if _eafbg ._bbad ==nil &&_eafbg ._cdad !=""&&_eafbg ._egeddb !=""{_eafbg ._bbad =_fda .MakeArray (_fda .MakeHexString (_eafbg ._cdad ),_fda .MakeHexString (_eafbg ._egeddb ));
};if _eafbg ._bbad !=nil {_cdae .Set ("\u0049\u0044",_eafbg ._bbad );_ga .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_eafbg ._bbad );};_eafbg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_eafbg .writeString (_cdae .WriteString ());
_eafbg .writeString ("\u000a");};

// AddOutlineTree adds outlines to a PDF file.
func (_egeed *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_egeed ._cafac =outlineTree };

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_eaag :=NewPdfAnnotation ();_fgf :=&PdfAnnotationUnderline {};_fgf .PdfAnnotation =_eaag ;_fgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaag .SetContext (_fgf );return _fgf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_beeeb pdfFontType3 )GetRuneMetrics (r rune )(_ade .CharMetrics ,bool ){_fcgee :=_beeeb .Encoder ();if _fcgee ==nil {_ga .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_beeeb );
return _ade .CharMetrics {},false ;};_cebcc ,_bgfc :=_fcgee .RuneToCharcode (r );if !_bgfc {if r !=' '{_ga .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_beeeb );
};return _ade .CharMetrics {},false ;};_gfcb ,_abga :=_beeeb .GetCharMetrics (_cebcc );return _gfcb ,_abga ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fgaee *PdfWriter )SetPageLabels (pageLabels _fda .PdfObject )error {if pageLabels ==nil {return nil ;};_ga .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_fgaee ._ecegfe .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fgaee .addObjects (pageLabels );};func (_afcd *PdfReader )newPdfFieldFromIndirectObject (_aeea *_fda .PdfIndirectObject ,_ecff *PdfField )(*PdfField ,error ){if _cdeec ,_gbge :=_afcd ._bbgee .GetModelFromPrimitive (_aeea ).(*PdfField );
_gbge {return _cdeec ,nil ;};_cbaf ,_caefd :=_fda .GetDict (_aeea );if !_caefd {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eedfg :=NewPdfField ();_eedfg ._dccfd =_aeea ;_eedfg ._dccfd .PdfObject =_cbaf ;if _adceg ,_dcgff :=_fda .GetName (_cbaf .Get ("\u0046\u0054"));_dcgff {_eedfg .FT =_adceg ;};if _ecff !=nil {_eedfg .Parent =_ecff ;};_eedfg .T ,_ =_cbaf .Get ("\u0054").(*_fda .PdfObjectString );
_eedfg .TU ,_ =_cbaf .Get ("\u0054\u0055").(*_fda .PdfObjectString );_eedfg .TM ,_ =_cbaf .Get ("\u0054\u004d").(*_fda .PdfObjectString );_eedfg .Ff ,_ =_cbaf .Get ("\u0046\u0066").(*_fda .PdfObjectInteger );_eedfg .V =_cbaf .Get ("\u0056");_eedfg .DV =_cbaf .Get ("\u0044\u0056");
_eedfg .AA =_cbaf .Get ("\u0041\u0041");if DA :=_cbaf .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_fda .GetString (DA );_eedfg .VariableText =&VariableText {DA :DA };Q ,_ :=_cbaf .Get ("\u0051").(*_fda .PdfObjectInteger );DS ,_ :=_cbaf .Get ("\u0044\u0053").(*_fda .PdfObjectString );
RV :=_cbaf .Get ("\u0052\u0056");_eedfg .VariableText .Q =Q ;_eedfg .VariableText .DS =DS ;_eedfg .VariableText .RV =RV ;};_dfag :=_eedfg .FT ;if _dfag ==nil &&_ecff !=nil {_dfag =_ecff .FT ;};if _dfag !=nil {switch *_dfag {case "\u0054\u0078":_fgca ,_bege :=_dafb (_cbaf );
if _bege !=nil {return nil ,_bege ;};_fgca .PdfField =_eedfg ;_eedfg ._bbbg =_fgca ;case "\u0043\u0068":_befb ,_fac :=_ceac (_cbaf );if _fac !=nil {return nil ,_fac ;};_befb .PdfField =_eedfg ;_eedfg ._bbbg =_befb ;case "\u0042\u0074\u006e":_cdff ,_abgeg :=_fcgce (_cbaf );
if _abgeg !=nil {return nil ,_abgeg ;};_cdff .PdfField =_eedfg ;_eedfg ._bbbg =_cdff ;case "\u0053\u0069\u0067":_cbff ,_fcef :=_afcd .newPdfFieldSignatureFromDict (_cbaf );if _fcef !=nil {return nil ,_fcef ;};_cbff .PdfField =_eedfg ;_eedfg ._bbbg =_cbff ;
default:_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_eedfg .FT );return nil ,_ad .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bfdeb ,_eggga :=_fda .GetName (_cbaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eggga {if *_bfdeb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cdfca ,_badaf :=_afcd .newPdfAnnotationFromIndirectObject (_aeea );if _badaf !=nil {return nil ,_badaf ;
};_bfff ,_afda :=_cdfca .GetContext ().(*PdfAnnotationWidget );if !_afda {return nil ,_ad .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_bfff ._bee =_eedfg ;_bfff .Parent =_eedfg ._dccfd ;
_eedfg .Annotations =append (_eedfg .Annotations ,_bfff );return _eedfg ,nil ;};};_ffdgb :=true ;if _fdega ,_egaf :=_fda .GetArray (_cbaf .Get ("\u004b\u0069\u0064\u0073"));_egaf {_gabe :=make ([]*_fda .PdfIndirectObject ,0,_fdega .Len ());for _ ,_dgdgg :=range _fdega .Elements (){_bfeb ,_accfg :=_fda .GetIndirect (_dgdgg );
if !_accfg {_dfffc ,_befca :=_fda .GetStream (_dgdgg );if _befca &&_dfffc .PdfObjectDictionary !=nil {_bcbb ,_bcef :=_fda .GetNameVal (_dfffc .Get ("\u0054\u0079\u0070\u0065"));if _bcef &&_bcbb =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ga .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ad .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cfbb ,_gfbc :=_fda .GetDict (_bfeb );
if !_gfbc {return nil ,ErrTypeCheck ;};if _ffdgb {_ffdgb =!_gfeca (_cfbb );};_gabe =append (_gabe ,_bfeb );};for _ ,_agfdd :=range _gabe {if _ffdgb {_cdfg ,_dgab :=_afcd .newPdfAnnotationFromIndirectObject (_agfdd );if _dgab !=nil {_ga .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dgab );
return nil ,_dgab ;};_effeg ,_eebc :=_cdfg ._egca .(*PdfAnnotationWidget );if !_eebc {return nil ,ErrTypeCheck ;};_effeg ._bee =_eedfg ;_eedfg .Annotations =append (_eedfg .Annotations ,_effeg );}else {_abbg ,_adcg :=_afcd .newPdfFieldFromIndirectObject (_agfdd ,_eedfg );
if _adcg !=nil {_ga .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_adcg );return nil ,_adcg ;};_eedfg .Kids =append (_eedfg .Kids ,_abbg );
};};};return _eedfg ,nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_egce *PdfPage )ToPdfObject ()_fda .PdfObject {_aead :=_egce ._ebgg ;_egce .GetPageDict ();return _aead ;};func _ecdga (_gdfbf string )map[string ]string {_bafb :=_fcbaa .Split (_gdfbf ,-1);_becg :=map[string ]string {};for _ ,_ddgac :=range _bafb {_dcde :=_gbafc .FindStringSubmatch (_ddgac );
if _dcde ==nil {continue ;};_cceg ,_fgad :=_dcde [1],_dcde [2];_becg [_cceg ]=_fgad ;};return _becg ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_dgdbf *PdfPage )GetPageAsIndirectObject ()*_fda .PdfIndirectObject {return _dgdbf ._ebgg };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_abdba *PdfReader )GetEncryptionMethod ()string {_adbbb :=_abdba ._edbag .GetCrypter ();return _adbbb .String ();};

// ToPdfObject implements interface PdfModel.
func (_ddfef *PdfSignatureReference )ToPdfObject ()_fda .PdfObject {_afdbe :=_fda .MakeDict ();_afdbe .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ddfef .Type );_afdbe .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_ddfef .TransformMethod );
_afdbe .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_ddfef .TransformParams );_afdbe .SetIfNotNil ("\u0044\u0061\u0074\u0061",_ddfef .Data );_afdbe .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_ddfef .DigestMethod );
return _afdbe ;};func (_bfg *PdfReader )newPdfActionThreadFromDict (_egdd *_fda .PdfObjectDictionary )(*PdfActionThread ,error ){_cdd ,_bbab :=_gcfc (_egdd .Get ("\u0046"));if _bbab !=nil {return nil ,_bbab ;};return &PdfActionThread {D :_egdd .Get ("\u0044"),B :_egdd .Get ("\u0042"),F :_cdd },nil ;
};

// SetForms sets the Acroform for a PDF file.
func (_deeae *PdfWriter )SetForms (form *PdfAcroForm )error {_deeae ._ccbgd =form ;return nil };

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_egfgg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fda .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ad .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_aeee :=&PdfColorPattern {};_caegf ,_beeg :=objects [len (objects )-1].(*_fda .PdfObjectName );if !_beeg {_ga .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_aeee .PatternName =*_caegf ;if len (objects )> 1{_ggfe :=objects [0:len (objects )-1];if _egfgg .UnderlyingCS ==nil {_ga .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ad .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_cdeg ,_cbfdg :=_egfgg .UnderlyingCS .ColorFromPdfObjects (_ggfe );if _cbfdg !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_cbfdg );
return nil ,_cbfdg ;};_aeee .Color =_cdeg ;};return _aeee ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_abd *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_ffab :=0.3*_abd .R ()+0.59*_abd .G ()+0.11*_abd .B ();_ffab =_f .Min (_f .Max (_ffab ,0.0),1.0);return NewPdfColorDeviceGray (_ffab );};func (_bebgd *LTV )getOCSPs (_fdffe []*_ec .Certificate ,_dfafe map[string ]*_ec .Certificate )([][]byte ,error ){_ddbgb :=make ([][]byte ,0,len (_fdffe ));
for _ ,_deea :=range _fdffe {for _ ,_edbda :=range _deea .OCSPServer {if _bebgd .CertClient .IsCA (_deea ){continue ;};_cfgc ,_faefb :=_dfafe [_deea .Issuer .CommonName ];if !_faefb {_ga .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_gfad ,_cacbef :=_bebgd .OCSPClient .MakeRequest (_edbda ,_deea ,_cfgc );if _cacbef !=nil {_ga .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_cacbef );
continue ;};_ddbgb =append (_ddbgb ,_gfad );};};return _ddbgb ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fda .PdfObject ;Movie _fda .PdfObject ;A _fda .PdfObject ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fda .PdfObject ;Volume _fda .PdfObject ;Synchronous _fda .PdfObject ;Repeat _fda .PdfObject ;Mix _fda .PdfObject ;};func (_bgfgc *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_beebg *Image )ConvertToBinary ()error {if _beebg .ColorComponents ==1&&_beebg .BitsPerComponent ==1{return nil ;};_aaced ,_edbae :=_beebg .ToGoImage ();if _edbae !=nil {return _edbae ;};_afffb ,_edbae :=_eac .MonochromeConverter .Convert (_aaced );
if _edbae !=nil {return _edbae ;};_beebg .Data =_afffb .Base ().Data ;_beebg ._abdg ,_edbae =_eac .ScaleAlphaToMonochrome (_beebg ._abdg ,int (_beebg .Width ),int (_beebg .Height ));if _edbae !=nil {return _edbae ;};_beebg .BitsPerComponent =1;_beebg .ColorComponents =1;
_beebg ._aefacf =nil ;return nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_eefc FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_eefc .Mask ()|fl .Mask ())};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dbgdfa pdfFontSimple )GetRuneMetrics (r rune )(_ade .CharMetrics ,bool ){if _dbgdfa ._acfge !=nil {_aagc ,_bdgd :=_dbgdfa ._acfge .Read (r );if _bdgd {return _aagc ,true ;};};_ffbf :=_dbgdfa .Encoder ();if _ffbf ==nil {_ga .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dbgdfa );
return _ade .CharMetrics {},false ;};_ecfge ,_edegd :=_ffbf .RuneToCharcode (r );if !_edegd {if r !=' '{_ga .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dbgdfa );
};return _ade .CharMetrics {},false ;};_fbaf ,_dbafe :=_dbgdfa .GetCharMetrics (_ecfge );return _fbaf ,_dbafe ;};

// IsValid checks if the given pdf output intent type is valid.
func (_eecf PdfOutputIntentType )IsValid ()bool {return _eecf >=PdfOutputIntentTypeA1 &&_eecf <=PdfOutputIntentTypeX ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_dgdeda *PdfPageResourcesColorspaces )Set (key _fda .PdfObjectName ,val PdfColorspace ){if _ ,_dgaf :=_dgdeda .Colorspaces [string (key )];!_dgaf {_dgdeda .Names =append (_dgdeda .Names ,string (key ));};_dgdeda .Colorspaces [string (key )]=val ;
};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fda .PdfObjectArray ;Domain *_fda .PdfObjectArray ;Function []PdfFunction ;Extend *_fda .PdfObjectArray ;};func (_fdffb *PdfReader )flattenFieldsWithOpts (_fgcdg bool ,_dcbe FieldAppearanceGenerator ,_gagad *FieldFlattenOpts )error {if _gagad ==nil {_gagad =&FieldFlattenOpts {};
};var _deeg bool ;_cacbe :=map[*PdfAnnotation ]bool {};{var _cgbb []*PdfField ;_afeg :=_fdffb .AcroForm ;if _afeg !=nil {if _gagad .FilterFunc !=nil {_cgbb =_afeg .filteredFields (_gagad .FilterFunc ,true );_deeg =_afeg .Fields !=nil &&len (*_afeg .Fields )> 0;
}else {_cgbb =_afeg .AllFields ();};};for _ ,_fcgdc :=range _cgbb {for _ ,_caffe :=range _fcgdc .Annotations {_cacbe [_caffe .PdfAnnotation ]=_fcgdc .V !=nil ;if _dcbe !=nil {_efbd ,_abee :=_dcbe .GenerateAppearanceDict (_afeg ,_fcgdc ,_caffe );if _abee !=nil {return _abee ;
};_caffe .AP =_efbd ;};};};};if _fgcdg {for _ ,_ddcf :=range _fdffb .PageList {_afgea ,_abfe :=_ddcf .GetAnnotations ();if _abfe !=nil {return _abfe ;};for _ ,_ggae :=range _afgea {_cacbe [_ggae ]=true ;};};};for _ ,_gcbae :=range _fdffb .PageList {var _bacdg []*PdfAnnotation ;
if _dcbe !=nil {if _dfdbc :=_dcbe .WrapContentStream (_gcbae );_dfdbc !=nil {return _dfdbc ;};};_ffabb ,_bgbab :=_gcbae .GetAnnotations ();if _bgbab !=nil {return _bgbab ;};for _ ,_fddgc :=range _ffabb {_bggc ,_ecabf :=_cacbe [_fddgc ];if !_ecabf &&_gagad .AnnotFilterFunc !=nil {if _ ,_eagdd :=_fddgc .GetContext ().(*PdfAnnotationWidget );
!_eagdd {_ecabf =_gagad .AnnotFilterFunc (_fddgc );};};if !_ecabf {_bacdg =append (_bacdg ,_fddgc );continue ;};switch _fddgc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_fecb ,_efddb ,_bcfg :=_gegd (_fddgc );if _bcfg !=nil {if !_bggc {_ga .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bcfg );
continue ;};if _fecb ==nil {continue ;};_aece :=_gcbae .Resources .GenerateXObjectName ();_gcbae .Resources .SetXObjectFormByName (_aece ,_fecb );_fageb :=_f .Min (_efddb .Llx ,_efddb .Urx );_cefd :=_f .Min (_efddb .Lly ,_efddb .Ury );var _aeecc []string ;
_aeecc =append (_aeecc ,"\u0071");_aeecc =append (_aeecc ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_fageb ,_cefd ));
_aeecc =append (_aeecc ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_aece .String ()));_aeecc =append (_aeecc ,"\u0051");_cebc :=_dc .Join (_aeecc ,"\u000a");_bcfg =_gcbae .AppendContentStream (_cebc );if _bcfg !=nil {return _bcfg ;};if _fecb .Resources !=nil {_cfea ,_egfa :=_fda .GetDict (_fecb .Resources .Font );
if _egfa {for _ ,_ebaadf :=range _cfea .Keys (){if !_gcbae .Resources .HasFontByName (_ebaadf ){_gcbae .Resources .SetFontByName (_ebaadf ,_cfea .Get (_ebaadf ));};};};};};if len (_bacdg )> 0{_gcbae ._bbbbc =_bacdg ;}else {_gcbae ._bbbbc =[]*PdfAnnotation {};
};};if !_deeg {_fdffb .AcroForm =nil ;};return nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fda .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_fda .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_eaed ,_efdbc :=encoder .EncodeBytes (img .Data );
if _efdbc !=nil {_ga .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_efdbc );return nil ,_efdbc ;};_abgfe :=NewXObjectImage ();_cfcad :=img .Width ;_fdbdg :=img .Height ;
_abgfe .Width =&_cfcad ;_abgfe .Height =&_fdbdg ;_eggege :=img .BitsPerComponent ;_abgfe .BitsPerComponent =&_eggege ;_abgfe .Filter =encoder ;_abgfe .Stream =_eaed ;if cs ==nil {if img .ColorComponents ==1{_abgfe .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_abgfe .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_abgfe .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ad .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_abgfe .ColorSpace =cs ;};if len (img ._abdg )!=0{_dcbdcg :=NewXObjectImage ();_dcbdcg .Filter =encoder ;_eced ,_cecg :=encoder .EncodeBytes (img ._abdg );if _cecg !=nil {_ga .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cecg );
return nil ,_cecg ;};_dcbdcg .Stream =_eced ;_dcbdcg .BitsPerComponent =_abgfe .BitsPerComponent ;_dcbdcg .Width =&img .Width ;_dcbdcg .Height =&img .Height ;_dcbdcg .ColorSpace =NewPdfColorspaceDeviceGray ();_abgfe .SMask =_dcbdcg .ToPdfObject ();}else {_abgfe .SMask =xobjIn .SMask ;
_abgfe .ImageMask =xobjIn .ImageMask ;if _abgfe .ColorSpace .GetNumComponents ()==1{_cfda (_abgfe );};};return _abgfe ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gd :=NewPdfAction ();_ecd :=&PdfActionGoToE {};_ecd .PdfAction =_gd ;_gd .SetContext (_ecd );return _ecd ;};func (_eggf *DSS )generateHashMaps ()error {_dfca ,_eddec :=_eggf .generateHashMap (_eggf .Certs );if _eddec !=nil {return _eddec ;
};_dgce ,_eddec :=_eggf .generateHashMap (_eggf .OCSPs );if _eddec !=nil {return _eddec ;};_cdgd ,_eddec :=_eggf .generateHashMap (_eggf .CRLs );if _eddec !=nil {return _eddec ;};_eggf ._ebee =_dfca ;_eggf ._befc =_dgce ;_eggf ._agfee =_cdgd ;return nil ;
};func (_eead *PdfPattern )getDict ()*_fda .PdfObjectDictionary {if _faga ,_ffad :=_eead ._ccaef .(*_fda .PdfIndirectObject );_ffad {_fcafd ,_dccebf :=_faga .PdfObject .(*_fda .PdfObjectDictionary );if !_dccebf {return nil ;};return _fcafd ;}else if _gaacd ,_agcfa :=_eead ._ccaef .(*_fda .PdfObjectStream );
_agcfa {return _gaacd .PdfObjectDictionary ;}else {_ga .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_eead ._ccaef );
return nil ;};};

// ColorToRGB converts an Indexed color to an RGB color.
func (_eeda *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eeda .Base ==nil {return nil ,_ad .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _eeda .Base .ColorToRGB (color );};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fda .PdfObject ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_ffee :=Permissions {};_ffee .DocMDP =docMdp ;_dcbef :=_fda .MakeDict ();_dcbef .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_ffee ._bebb =_dcbef ;return &_ffee ;};func (_cbae *PdfReader )buildOutlineTree (_bbbca _fda .PdfObject ,_gfcfd *PdfOutlineTreeNode ,_ebaf *PdfOutlineTreeNode ,_ffac map[_fda .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ffac ==nil {_ffac =map[_fda .PdfObject ]struct{}{};
};_ffac [_bbbca ]=struct{}{};_bcce ,_cececa :=_bbbca .(*_fda .PdfIndirectObject );if !_cececa {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bbbca );
};_cfafc ,_bdgdf :=_bcce .PdfObject .(*_fda .PdfObjectDictionary );if !_bdgdf {return nil ,nil ,_ad .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ga .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_cfafc ,_bcce ,_bcce );
if _deffa :=_cfafc .Get ("\u0054\u0069\u0074l\u0065");_deffa !=nil {_cgaf ,_acegc :=_cbae .newPdfOutlineItemFromIndirectObject (_bcce );if _acegc !=nil {return nil ,nil ,_acegc ;};_cgaf .Parent =_gfcfd ;_cgaf .Prev =_ebaf ;_cdfd :=_fda .ResolveReference (_cfafc .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_aeef :=_ffac [_cdfd ];_cdfd !=nil &&_cdfd !=_bcce &&!_aeef {if !_fda .IsNullObject (_cdfd ){_ccccd ,_eefcc ,_agab :=_cbae .buildOutlineTree (_cdfd ,&_cgaf .PdfOutlineTreeNode ,nil ,_ffac );if _agab !=nil {_ga .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_agab );
}else {_cgaf .First =_ccccd ;_cgaf .Last =_eefcc ;};};};_acca :=_fda .ResolveReference (_cfafc .Get ("\u004e\u0065\u0078\u0074"));if _ ,_efgc :=_ffac [_acca ];_acca !=nil &&_acca !=_bcce &&!_efgc {if !_fda .IsNullObject (_acca ){_acaaa ,_aabbe ,_gdeef :=_cbae .buildOutlineTree (_acca ,_gfcfd ,&_cgaf .PdfOutlineTreeNode ,_ffac );
if _gdeef !=nil {_ga .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_gdeef );
}else {_cgaf .Next =_acaaa ;return &_cgaf .PdfOutlineTreeNode ,_aabbe ,nil ;};};};return &_cgaf .PdfOutlineTreeNode ,&_cgaf .PdfOutlineTreeNode ,nil ;};_adda ,_gfca :=_bgbc (_bcce );if _gfca !=nil {return nil ,nil ,_gfca ;};_adda .Parent =_gfcfd ;if _feaae :=_cfafc .Get ("\u0046\u0069\u0072s\u0074");
_feaae !=nil {_feaae =_fda .ResolveReference (_feaae );if _ ,_gegac :=_ffac [_feaae ];_feaae !=nil &&_feaae !=_bcce &&!_gegac {_bgaaf :=_fda .TraceToDirectObject (_feaae );if _ ,_ddbab :=_bgaaf .(*_fda .PdfObjectNull );!_ddbab &&_bgaaf !=nil {_dffcd ,_fdfga ,_bbfed :=_cbae .buildOutlineTree (_feaae ,&_adda .PdfOutlineTreeNode ,nil ,_ffac );
if _bbfed !=nil {_ga .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bbfed );
}else {_adda .First =_dffcd ;_adda .Last =_fdfga ;};};};};return &_adda .PdfOutlineTreeNode ,&_adda .PdfOutlineTreeNode ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dbgb *Image )AlphaMap (mapFunc AlphaMapFunc ){for _baec ,_ffgff :=range _dbgb ._abdg {_dbgb ._abdg [_baec ]=mapFunc (_ffgff );};};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fda .PdfObject ;Name _fda .PdfObject ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_bdfag *PdfAppender )UpdateObject (obj _fda .PdfObject ){_bdfag .replaceObject (obj ,obj );if _ ,_fcgg :=_bdfag ._ged [obj ];!_fcgg {_bdfag ._ddgd =append (_bdfag ._ddgd ,obj );_bdfag ._ged [obj ]=struct{}{};};};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fda .PdfObjectArray ;ExtGState _fda .PdfObject ;};func (_beee PdfFont )actualFont ()pdfFont {if _beee ._fdbb ==nil {_ga .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_beee );
};return _beee ._fdbb ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fdbb pdfFont };

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_acfc *_fda .PdfIndirectObject ;Certs []*_fda .PdfObjectStream ;OCSPs []*_fda .PdfObjectStream ;CRLs []*_fda .PdfObjectStream ;VRI map[string ]*VRI ;_ebee map[string ]*_fda .PdfObjectStream ;_befc map[string ]*_fda .PdfObjectStream ;_agfee map[string ]*_fda .PdfObjectStream ;
};func _fddba (_efeb *_fda .PdfObjectDictionary )(*PdfShadingPattern ,error ){_ecgg :=&PdfShadingPattern {};_bdeff :=_efeb .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _bdeff ==nil {_ga .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_accef ,_facc :=_edege (_bdeff );if _facc !=nil {_ga .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_facc );return nil ,_facc ;
};_ecgg .Shading =_accef ;if _dafee :=_efeb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dafee !=nil {_fcdb ,_dcgc :=_dafee .(*_fda .PdfObjectArray );if !_dcgc {_ga .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dafee );
return nil ,_fda .ErrTypeError ;};_ecgg .Matrix =_fcdb ;};if _bgacc :=_efeb .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bgacc !=nil {_ecgg .ExtGState =_bgacc ;};return _ecgg ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_cdeda *Image )SetAlpha (alpha []byte ){_cdeda ._abdg =alpha };

// SetDecode sets the decode image float slice.
func (_ddbdf *Image )SetDecode (decode []float64 ){_ddbdf ._aefacf =decode };func _gffee ()string {_bcaeg .Lock ();defer _bcaeg .Unlock ();return _fcfgf };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgcbg *PdfShading )ToPdfObject ()_fda .PdfObject {_gfcc :=_cgcbg ._edgffb ;_fffg ,_edfc :=_cgcbg .getShadingDict ();if _edfc !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgcbg .ShadingType !=nil {_fffg .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cgcbg .ShadingType );};if _cgcbg .ColorSpace !=nil {_fffg .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cgcbg .ColorSpace .ToPdfObject ());
};if _cgcbg .Background !=nil {_fffg .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cgcbg .Background );};if _cgcbg .BBox !=nil {_fffg .Set ("\u0042\u0042\u006f\u0078",_cgcbg .BBox .ToPdfObject ());};if _cgcbg .AntiAlias !=nil {_fffg .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cgcbg .AntiAlias );
};return _gfcc ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_adbad *PdfFont )ToPdfObject ()_fda .PdfObject {if _adbad ._fdbb ==nil {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fda .MakeNull ();
};return _adbad ._fdbb .ToPdfObject ();};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_eaee :=NewPdfAnnotation ();_age :=&PdfAnnotationSquiggly {};_age .PdfAnnotation =_eaee ;_age .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaee .SetContext (_age );return _age ;};

// GetPdfInfo returns the PDF info dictionary.
func (_efcd *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_cdfab ,_dfgg :=_efcd .GetTrailer ();if _dfgg !=nil {return nil ,_dfgg ;};var _bdeea *_fda .PdfObjectDictionary ;_eabfg :=_cdfab .Get ("\u0049\u006e\u0066\u006f");switch _dega :=_eabfg .(type ){case *_fda .PdfObjectReference :_baffe :=_dega ;
_eabfg ,_dfgg =_efcd .GetIndirectObjectByNumber (int (_baffe .ObjectNumber ));_eabfg =_fda .TraceToDirectObject (_eabfg );if _dfgg !=nil {return nil ,_dfgg ;};_bdeea ,_ =_eabfg .(*_fda .PdfObjectDictionary );case *_fda .PdfObjectDictionary :_bdeea =_dega ;
};if _bdeea ==nil {return nil ,_ad .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_bdfbf ,_dfgg :=NewPdfInfoFromObject (_bdeea );if _dfgg !=nil {return nil ,_dfgg ;
};return _bdfbf ,nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_gecbd int ,_ccdd *PdfPage )error ;

// ToPdfObject recursively builds the Outline tree PDF object.
func (_daacc *PdfOutlineItem )ToPdfObject ()_fda .PdfObject {_bebdbe :=_daacc ._ebeee ;_bgfge :=_bebdbe .PdfObject .(*_fda .PdfObjectDictionary );_bgfge .Set ("\u0054\u0069\u0074l\u0065",_daacc .Title );if _daacc .A !=nil {_bgfge .Set ("\u0041",_daacc .A );
};if _gebf :=_bgfge .Get ("\u0053\u0045");_gebf !=nil {_bgfge .Remove ("\u0053\u0045");};if _daacc .C !=nil {_bgfge .Set ("\u0043",_daacc .C );};if _daacc .Dest !=nil {_bgfge .Set ("\u0044\u0065\u0073\u0074",_daacc .Dest );};if _daacc .F !=nil {_bgfge .Set ("\u0046",_daacc .F );
};if _daacc .Count !=nil {_bgfge .Set ("\u0043\u006f\u0075n\u0074",_fda .MakeInteger (*_daacc .Count ));};if _daacc .Next !=nil {_bgfge .Set ("\u004e\u0065\u0078\u0074",_daacc .Next .ToPdfObject ());};if _daacc .First !=nil {_bgfge .Set ("\u0046\u0069\u0072s\u0074",_daacc .First .ToPdfObject ());
};if _daacc .Prev !=nil {_bgfge .Set ("\u0050\u0072\u0065\u0076",_daacc .Prev .GetContext ().GetContainingPdfObject ());};if _daacc .Last !=nil {_bgfge .Set ("\u004c\u0061\u0073\u0074",_daacc .Last .GetContext ().GetContainingPdfObject ());};if _daacc .Parent !=nil {_bgfge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_daacc .Parent .GetContext ().GetContainingPdfObject ());
};return _bebdbe ;};

// PartialName returns the partial name of the field.
func (_cffa *PdfField )PartialName ()string {_efgef :="";if _cffa .T !=nil {_efgef =_cffa .T .Decoded ();}else {_ga .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _efgef ;};func _bbag (_gcge _fda .PdfObject )(*PdfColorspaceCalRGB ,error ){_gdace :=NewPdfColorspaceCalRGB ();if _eecg ,_fddc :=_gcge .(*_fda .PdfIndirectObject );_fddc {_gdace ._ecbd =_eecg ;};_gcge =_fda .TraceToDirectObject (_gcge );_aaaa ,_gcaad :=_gcge .(*_fda .PdfObjectArray );
if !_gcaad {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aaaa .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gcge =_fda .TraceToDirectObject (_aaaa .Get (0));_fabff ,_gcaad :=_gcge .(*_fda .PdfObjectName );if !_gcaad {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_fabff !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gcge =_fda .TraceToDirectObject (_aaaa .Get (1));
_acfd ,_gcaad :=_gcge .(*_fda .PdfObjectDictionary );if !_gcaad {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_gcge =_acfd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gcge =_fda .TraceToDirectObject (_gcge );_fca ,_gcaad :=_gcge .(*_fda .PdfObjectArray );if !_gcaad {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _fca .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ddaae ,_dgde :=_fca .GetAsFloat64Slice ();
if _dgde !=nil {return nil ,_dgde ;};_gdace .WhitePoint =_ddaae ;_gcge =_acfd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gcge !=nil {_gcge =_fda .TraceToDirectObject (_gcge );_egbe ,_fedg :=_gcge .(*_fda .PdfObjectArray );
if !_fedg {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _egbe .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_gfea ,_ffba :=_egbe .GetAsFloat64Slice ();if _ffba !=nil {return nil ,_ffba ;};_gdace .BlackPoint =_gfea ;};_gcge =_acfd .Get ("\u0047\u0061\u006dm\u0061");if _gcge !=nil {_gcge =_fda .TraceToDirectObject (_gcge );_egfgd ,_aefb :=_gcge .(*_fda .PdfObjectArray );
if !_aefb {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _egfgd .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_bedg ,_adgca :=_egfgd .GetAsFloat64Slice ();if _adgca !=nil {return nil ,_adgca ;};_gdace .Gamma =_bedg ;};_gcge =_acfd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _gcge !=nil {_gcge =_fda .TraceToDirectObject (_gcge );_bgcg ,_abgd :=_gcge .(*_fda .PdfObjectArray );
if !_abgd {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _bgcg .Len ()!=9{_ga .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_bgcg .String ());
return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_edgc ,_cgad :=_bgcg .GetAsFloat64Slice ();if _cgad !=nil {return nil ,_cgad ;
};_gdace .Matrix =_edgc ;};return _gdace ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_efge *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gafc :=NewPdfAction ();_aa :=&PdfActionNamed {};_aa .PdfAction =_gafc ;_gafc .SetContext (_aa );return _aa ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dcdd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_cccfe :=_cbc .NewReader (img .getBase ());_gcdb :=_eac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dcdd .AlternateSpace .GetNumComponents (),nil ,img ._abdg ,nil );
_edbbd :=_cbc .NewWriter (_gcdb );_edac :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_ga .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ga .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dcdd .TintTransform );_fbdfg :=_dcdd .AlternateSpace .DecodeArray ();var (_bega uint32 ;_eddee error ;);for {_bega ,_eddee =_cccfe .ReadSample ();
if _eddee ==_ed .EOF {break ;};if _eddee !=nil {return img ,_eddee ;};_acce :=float64 (_bega )/_edac ;_ddfg ,_daec :=_dcdd .TintTransform .Evaluate ([]float64 {_acce });if _daec !=nil {return img ,_daec ;};for _abgcd ,_cec :=range _ddfg {_afgd :=_eac .LinearInterpolate (_cec ,_fbdfg [_abgcd *2],_fbdfg [_abgcd *2+1],0,1);
if _daec =_edbbd .WriteSample (uint32 (_afgd *_edac ));_daec !=nil {return img ,_daec ;};};};return _dcdd .AlternateSpace .ImageToRGB (_gged (&_gcdb ));};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fda .PdfObject ;Name _fda .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fgfd *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ad .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfe :=vals [0];if _cfe < 0.0||_cfe > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfe );
return nil ,ErrColorOutOfRange ;};_dbeeg :=vals [1];if _dbeeg < 0.0||_dbeeg > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfe );return nil ,ErrColorOutOfRange ;
};_bfbg :=vals [2];if _bfbg < 0.0||_bfbg > 1.0{_ga .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfe );return nil ,ErrColorOutOfRange ;};_bgda :=NewPdfColorDeviceRGB (_cfe ,_dbeeg ,_bfbg );
return _bgda ,nil ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_cdfc *PdfInfo )ToPdfObject ()_fda .PdfObject {_gfbb :=_fda .MakeDict ();_gfbb .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_cdfc .Title );_gfbb .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_cdfc .Author );_gfbb .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_cdfc .Subject );
_gfbb .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cdfc .Keywords );_gfbb .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_cdfc .Creator );_gfbb .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cdfc .Producer );
_gfbb .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_cdfc .Trapped );if _cdfc .CreationDate !=nil {_gfbb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cdfc .CreationDate .ToPdfObject ());};if _cdfc .ModifiedDate !=nil {_gfbb .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_cdfc .ModifiedDate .ToPdfObject ());
};for _ ,_cfcf :=range _cdfc ._dddbe .Keys (){_gfbb .SetIfNotNil (_cfcf ,_cdfc ._dddbe .Get (_cfcf ));};return _gfbb ;};func _fdef (_dddf _ade .StdFont )pdfFontSimple {_cfeb :=_dddf .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_bfgb :"\u0054\u0079\u0070e\u0031",_fcdg :_dddf .Name ()},_acfge :_dddf .GetMetricsTable (),_gdag :&PdfFontDescriptor {FontName :_fda .MakeName (string (_cfeb .Name )),FontFamily :_fda .MakeName (_cfeb .Family ),FontWeight :_fda .MakeFloat (float64 (_cfeb .Weight )),Flags :_fda .MakeInteger (int64 (_cfeb .Flags )),FontBBox :_fda .MakeArrayFromFloats (_cfeb .BBox [:]),ItalicAngle :_fda .MakeFloat (_cfeb .ItalicAngle ),Ascent :_fda .MakeFloat (_cfeb .Ascent ),Descent :_fda .MakeFloat (_cfeb .Descent ),CapHeight :_fda .MakeFloat (_cfeb .CapHeight ),XHeight :_fda .MakeFloat (_cfeb .XHeight ),StemV :_fda .MakeFloat (_cfeb .StemV ),StemH :_fda .MakeFloat (_cfeb .StemH )},_dgaaa :_dddf .Encoder ()};
};func (_bfa *PdfReader )newPdfAnnotationLineFromDict (_bdbd *_fda .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_dbg :=PdfAnnotationLine {};_egfg ,_egeb :=_bfa .newPdfAnnotationMarkupFromDict (_bdbd );if _egeb !=nil {return nil ,_egeb ;};_dbg .PdfAnnotationMarkup =_egfg ;
_dbg .L =_bdbd .Get ("\u004c");_dbg .BS =_bdbd .Get ("\u0042\u0053");_dbg .LE =_bdbd .Get ("\u004c\u0045");_dbg .IC =_bdbd .Get ("\u0049\u0043");_dbg .LL =_bdbd .Get ("\u004c\u004c");_dbg .LLE =_bdbd .Get ("\u004c\u004c\u0045");_dbg .Cap =_bdbd .Get ("\u0043\u0061\u0070");
_dbg .IT =_bdbd .Get ("\u0049\u0054");_dbg .LLO =_bdbd .Get ("\u004c\u004c\u004f");_dbg .CP =_bdbd .Get ("\u0043\u0050");_dbg .Measure =_bdbd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_dbg .CO =_bdbd .Get ("\u0043\u004f");return &_dbg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eee *PdfActionGoToE )ToPdfObject ()_fda .PdfObject {_eee .PdfAction .ToPdfObject ();_dcd :=_eee ._ddd ;_adfc :=_dcd .PdfObject .(*_fda .PdfObjectDictionary );_adfc .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeGoToE )));if _eee .F !=nil {_adfc .Set ("\u0046",_eee .F .ToPdfObject ());
};_adfc .SetIfNotNil ("\u0044",_eee .D );_adfc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eee .NewWindow );_adfc .SetIfNotNil ("\u0054",_eee .T );return _dcd ;};

// M returns the value of the magenta component of the color.
func (_ecga *PdfColorDeviceCMYK )M ()float64 {return _ecga [1]};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_faaf *PdfWriter )SetCatalogMetadata (meta _fda .PdfObject )error {if meta ==nil {_faaf ._ecegfe .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_accgf ,_agcdc :=_fda .GetStream (meta );if !_agcdc {return _ad .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_faaf .addObject (_accgf );_faaf ._ecegfe .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_accgf );return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ddaf *PdfPattern )GetContainingPdfObject ()_fda .PdfObject {return _ddaf ._ccaef };

// AddPages adds pages to be appended to the end of the source PDF.
func (_ace *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ebfb :=range pages {_ebfb =_ebfb .Duplicate ();_afdd (_ebfb );_ace ._dgaa =append (_ace ._dgaa ,_ebfb );};};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fdfec *PdfReader )GetNamedDestinations ()(_fda .PdfObject ,error ){_ebbc :=_fda .ResolveReference (_fdfec ._debca .Get ("\u0044\u0065\u0073t\u0073"));if _ebbc ==nil {return nil ,nil ;};if !_fdfec ._cegf {_abegbg :=_fdfec .traverseObjectData (_ebbc );
if _abegbg !=nil {return nil ,_abegbg ;};};return _ebbc ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ceee *PdfShadingType1 )ToPdfObject ()_fda .PdfObject {_ceee .PdfShading .ToPdfObject ();_ecagd ,_bcbbb :=_ceee .getShadingDict ();if _bcbbb !=nil {_ga .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ceee .Domain !=nil {_ecagd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ceee .Domain );};if _ceee .Matrix !=nil {_ecagd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ceee .Matrix );};if _ceee .Function !=nil {if len (_ceee .Function )==1{_ecagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ceee .Function [0].ToPdfObject ());
}else {_bbbba :=_fda .MakeArray ();for _ ,_dfbfg :=range _ceee .Function {_bbbba .Append (_dfbfg .ToPdfObject ());};_ecagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbbba );};};return _ceee ._edgffb ;};func _gfafb (_bgbaa _fda .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gfbcd :=&PdfPageResourcesColorspaces {};
if _efdbg ,_gbaba :=_bgbaa .(*_fda .PdfIndirectObject );_gbaba {_gfbcd ._adcac =_efdbg ;_bgbaa =_efdbg .PdfObject ;};_gfgge ,_baagc :=_fda .GetDict (_bgbaa );if !_baagc {return nil ,_ad .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gfbcd .Names =[]string {};_gfbcd .Colorspaces =map[string ]PdfColorspace {};for _ ,_dgcbbd :=range _gfgge .Keys (){_eaeb :=_gfgge .Get (_dgcbbd );_gfbcd .Names =append (_gfbcd .Names ,string (_dgcbbd ));_cdgff ,_fcecc :=NewPdfColorspaceFromPdfObject (_eaeb );
if _fcecc !=nil {return nil ,_fcecc ;};_gfbcd .Colorspaces [string (_dgcbbd )]=_cdgff ;};return _gfbcd ,nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_gegf *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_gegf .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_fgbe :=_eac .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._abdg ,img ._aefacf );_efdda :=_cbc .NewReader (img .getBase ());_cafe :=_cbc .NewWriter (_fgbe );var (_agfba uint32 ;_gbedg int ;_bfga error ;);for {_agfba ,_bfga =_efdda .ReadSample ();
if _bfga ==_ed .EOF {break ;}else if _bfga !=nil {return img ,_bfga ;};_gbedg =int (_agfba );_ga .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gbedg ,N ,len (_gegf ._defa ));
if (_gbedg +1)*N > len (_gegf ._defa ){_gbedg =len (_gegf ._defa )/N -1;_ga .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gbedg );if _gbedg < 0{_ga .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _gagd :=_gbedg *N ;_gagd < (_gbedg +1)*N ;_gagd ++{if _bfga =_cafe .WriteSample (uint32 (_gegf ._defa [_gagd ]));_bfga !=nil {return img ,_bfga ;};};};return _gegf .Base .ImageToRGB (_gged (&_fgbe ));};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_bcaeg .Lock ();defer _bcaeg .Unlock ();_cafaa =producer };func (_befgb *pdfFontType0 )baseFields ()*fontCommon {return &_befgb .fontCommon };func (_bfcef *PdfReader )newPdfAnnotationRichMediaFromDict (_afa *_fda .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_egge :=&PdfAnnotationRichMedia {};
_egge .RichMediaSettings =_afa .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_egge .RichMediaContent =_afa .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _egge ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_bfeda *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _fded []*PdfField ;if _bfeda .AcroForm !=nil {_fded =_bfeda .AcroForm .AllFields ();};_dfdbd :=make (map[*PdfField ]struct{},len (_fded ));for _ ,_fabdg :=range _fded {_dfdbd [_fabdg ]=struct{}{};
};for _ ,_aecbg :=range _bfeda .PageList {_agcec ,_dfaeb :=_aecbg .GetAnnotations ();if _dfaeb !=nil {return false ,_dfaeb ;};for _ ,_bbcbf :=range _agcec {_aebfe ,_addea :=_bbcbf .GetContext ().(*PdfAnnotationWidget );if !_addea {continue ;};_gbeg :=_aebfe .Field ();
if _gbeg ==nil {return true ,nil ;};if _ ,_eafea :=_dfdbd [_gbeg ];!_eafea {return true ,nil ;};};};return false ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_ebdf *PdfPageResources )GetXObjectFormByName (keyName _fda .PdfObjectName )(*XObjectForm ,error ){_ebed ,_bgdcc :=_ebdf .GetXObjectByName (keyName );if _ebed ==nil {return nil ,nil ;};if _bgdcc !=XObjectTypeForm {return nil ,_ad .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_adgag ,_egece :=NewXObjectFormFromStream (_ebed );if _egece !=nil {return nil ,_egece ;};return _adgag ,nil ;};func (_aaeca *pdfFontSimple )getFontEncoding ()(_ecegd string ,_dgcbb map[_fd .CharCode ]_fd .GlyphName ,_fgdc error ){_ecegd ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _fdaggf ,_fedb :=_dgcg [_aaeca ._fcdg ];_fedb {_ecegd =_fdaggf ;}else if _aaeca .fontFlags ()&_efaf !=0{for _bafaf ,_fdece :=range _dgcg {if _dc .Contains (_aaeca ._fcdg ,_bafaf ){_ecegd =_fdece ;break ;};};};if _aaeca .Encoding ==nil {return _ecegd ,nil ,nil ;
};switch _bcdb :=_aaeca .Encoding .(type ){case *_fda .PdfObjectName :return string (*_bcdb ),nil ,nil ;case *_fda .PdfObjectDictionary :_aacea ,_fdafc :=_fda .GetName (_bcdb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _fdafc {_ecegd =_aacea .String ();};if _fafea :=_bcdb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fafea !=nil {_cdge ,_gagef :=_fda .GetArray (_fafea );if !_gagef {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_bcdb ,_bcdb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_fda .ErrTypeError ;};_dgcbb ,_fgdc =_fd .FromFontDifferences (_cdge );};return _ecegd ,_dgcbb ,_fgdc ;default:_ga .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_aaeca .Encoding ,_aaeca .Encoding );
return "",nil ,_fda .ErrTypeError ;};};func (_debeb *PdfWriter )adjustXRefAffectedVersion (_cdgga bool ){if _cdgga &&_debeb ._ccgad .Major ==1&&_debeb ._ccgad .Minor < 5{_debeb ._ccgad .Minor =5;};};

// ToPdfObject implements interface PdfModel.
func (_dadg *PdfAnnotationSound )ToPdfObject ()_fda .PdfObject {_dadg .PdfAnnotation .ToPdfObject ();_badd :=_dadg ._fbb ;_dga :=_badd .PdfObject .(*_fda .PdfObjectDictionary );_dadg .PdfAnnotationMarkup .appendToPdfDictionary (_dga );_dga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0053\u006f\u0075n\u0064"));
_dga .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dadg .Sound );_dga .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dadg .Name );return _badd ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_aceca *PdfReader )GetIndirectObjectByNumber (number int )(_fda .PdfObject ,error ){_ecgcg ,_cfccc :=_aceca ._edbag .LookupByNumber (number );return _ecgcg ,_cfccc ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_afeeb DefaultImageHandler )NewImageFromGoImage (goimg _eg .Image )(*Image ,error ){_cdcg ,_dbad :=_eac .FromGoImage (goimg );if _dbad !=nil {return nil ,_dbad ;};_gdea :=_gged (_cdcg .Base ());return &_gdea ,nil ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_gdfbfe *PdfTransformParamsDocMDP )String ()string {return _c .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_gdfbfe .Type ,_gdfbfe .P ,_gdfbfe .V );};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ggeg *PdfField )IsTerminal ()bool {return len (_ggeg .Kids )==0};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bggga *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToPdfObject implements interface PdfModel.
func (_bbbc *PdfActionGoTo3DView )ToPdfObject ()_fda .PdfObject {_bbbc .PdfAction .ToPdfObject ();_agb :=_bbbc ._ddd ;_fab :=_agb .PdfObject .(*_fda .PdfObjectDictionary );_fab .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeGoTo3DView )));_fab .SetIfNotNil ("\u0054\u0041",_bbbc .TA );
_fab .SetIfNotNil ("\u0056",_bbbc .V );return _agb ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dddgc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bgdg :=_cbc .NewReader (img .getBase ());_fcff :=_eac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._abdg ,img ._aefacf );
_caff :=_cbc .NewWriter (_fcff );_egggb :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_gccb :=_dddgc .GetNumComponents ();_daag :=make ([]uint32 ,_gccb );_aeeee :=make ([]float64 ,_gccb );for {_baddd :=_bgdg .ReadSamples (_daag );if _baddd ==_ed .EOF {break ;
}else if _baddd !=nil {return img ,_baddd ;};for _bged :=0;_bged < _gccb ;_bged ++{_dbdb :=float64 (_daag [_bged ])/_egggb ;_aeeee [_bged ]=_dbdb ;};_gdbb ,_baddd :=_dddgc .TintTransform .Evaluate (_aeeee );if _baddd !=nil {return img ,_baddd ;};for _ ,_eagae :=range _gdbb {_eagae =_f .Min (_f .Max (0,_eagae ),1.0);
if _baddd =_caff .WriteSample (uint32 (_eagae *_egggb ));_baddd !=nil {return img ,_baddd ;};};};return _dddgc .AlternateSpace .ImageToRGB (_gged (&_fcff ));};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _ag .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_fda .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_fda .MakeInteger (int64 (permission )),V :_fda .MakeName ("\u0031\u002e\u0032")};
};func _fafde (_bbdb string )(string ,error ){var _dgceg _dcc .Buffer ;_dgceg .WriteString (_bbdb );_fbdgf :=make ([]byte ,8+16);_dbfa :=_ee .Now ().UTC ().UnixNano ();_gb .BigEndian .PutUint64 (_fbdgf ,uint64 (_dbfa ));_ ,_dcfef :=_ea .Read (_fbdgf [8:]);
if _dcfef !=nil {return "",_dcfef ;};_dgceg .WriteString (_g .EncodeToString (_fbdgf ));return _dgceg .String (),nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fda .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_dg PdfModel ;Type _fda .PdfObject ;S _fda .PdfObject ;Next _fda .PdfObject ;_ddd *_fda .PdfIndirectObject ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dbacg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ffda []*PdfField ;_ceaee :=map[*_fda .PdfIndirectObject ]struct{}{};for _ ,_ccdad :=range _dbacg .PageList {_efac ,_eegbe :=_ccdad .GetAnnotations ();if _eegbe !=nil {return _eegbe ;
};for _ ,_bgbfg :=range _efac {var _daaef *PdfField ;switch _ecaga :=_bgbfg .GetContext ().(type ){case *PdfAnnotationWidget :if _ecaga ._bee !=nil {_daaef =_ecaga ._bee ;break ;};if _gfgga ,_gagdb :=_fda .GetIndirect (_ecaga .Parent );_gagdb {_daaef ,_eegbe =_dbacg .newPdfFieldFromIndirectObject (_gfgga ,nil );
if _eegbe ==nil {break ;};_ga .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_gfgga ,_eegbe );
};if _ecaga ._fbb !=nil {_daaef ,_eegbe =_dbacg .newPdfFieldFromIndirectObject (_ecaga ._fbb ,nil );if _eegbe ==nil {break ;};_ga .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecaga ._fbb ,_eegbe );
};};if _daaef ==nil {continue ;};if _ ,_gdafe :=_ceaee [_daaef ._dccfd ];_gdafe {continue ;};_ceaee [_daaef ._dccfd ]=struct{}{};_ffda =append (_ffda ,_daaef );};};if len (_ffda )==0{return nil ;};if _dbacg .AcroForm ==nil {_dbacg .AcroForm =NewPdfAcroForm ();
};_dbacg .AcroForm .Fields =&_ffda ;return nil ;};func (_aga *PdfReader )newPdfActionMovieFromDict (_ggde *_fda .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_ggde .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_ggde .Get ("\u0054"),Operation :_ggde .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_eeagg *LTV )EnableAll (extraCerts []*_ec .Certificate )error {_fafc :=_eeagg ._ccda ._beg .AcroForm ;for _ ,_cdfcf :=range _fafc .AllFields (){_fbge ,_ :=_cdfcf .GetContext ().(*PdfFieldSignature );if _fbge ==nil {continue ;};_bdfea :=_fbge .V ;
if _aaae :=_eeagg .validateSig (_bdfea );_aaae !=nil {_ga .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_aaae );
};if _eacb :=_eeagg .Enable (_bdfea ,extraCerts );_eacb !=nil {return _eacb ;};};return nil ;};func (_bbcc fontCommon )isCIDFont ()bool {if _bbcc ._bfgb ==""{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbcc );
};_fdec :=false ;switch _bbcc ._bfgb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fdec =true ;};_ga .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fdec ,_bbcc );
return _fdec ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_aefe *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _aefe .Range };func (_fegdb *PdfReader )resolveReference (_egffb *_fda .PdfObjectReference )(_fda .PdfObject ,bool ,error ){_ddfgc ,_dfega :=_fegdb ._edbag .ObjCache [int (_egffb .ObjectNumber )];
if !_dfega {_ga .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_egffb );_dadce ,_dgabga :=_fegdb ._edbag .LookupByReference (*_egffb );if _dgabga !=nil {return nil ,false ,_dgabga ;};
_fegdb ._edbag .ObjCache [int (_egffb .ObjectNumber )]=_dadce ;return _dadce ,false ,nil ;};return _ddfgc ,true ,nil ;};func (_gfe *PdfReader )newPdfActionGotoRFromDict (_cg *_fda .PdfObjectDictionary )(*PdfActionGoToR ,error ){_gcab ,_cbda :=_gcfc (_cg .Get ("\u0046"));
if _cbda !=nil {return nil ,_cbda ;};return &PdfActionGoToR {D :_cg .Get ("\u0044"),NewWindow :_cg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gcab },nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gbd *PdfAction )GetContext ()PdfModel {if _gbd ==nil {return nil ;};return _gbd ._dg ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bcafb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fda .StreamEncoder ,error ){_feda ,_becfg :=_bcafb ._ccaef .(*_fda .PdfObjectStream );if !_becfg {_ga .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcafb ._ccaef );
return nil ,nil ,_fda .ErrTypeError ;};_fdagb ,_dcccc :=_fda .DecodeStream (_feda );if _dcccc !=nil {_ga .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dcccc );
return nil ,nil ,_dcccc ;};_beeff ,_dcccc :=_fda .NewEncoderFromStream (_feda );if _dcccc !=nil {_ga .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dcccc );
return nil ,nil ,_dcccc ;};return _fdagb ,_beeff ,nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_acbb *PdfPageResources )ToPdfObject ()_fda .PdfObject {_bddbc :=_acbb ._gafg ;_bddbc .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_acbb .ExtGState );if _acbb ._bfbffb !=nil {_acbb .ColorSpace =_acbb ._bfbffb .ToPdfObject ();};_bddbc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_acbb .ColorSpace );
_bddbc .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_acbb .Pattern );_bddbc .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_acbb .Shading );_bddbc .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_acbb .XObject );_bddbc .SetIfNotNil ("\u0046\u006f\u006e\u0074",_acbb .Font );
_bddbc .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_acbb .ProcSet );_bddbc .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_acbb .Properties );return _bddbc ;};var _ pdfFont =(*pdfFontType3 )(nil );

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToPdfObject implements interface PdfModel.
func (_eag *PdfAnnotationPolygon )ToPdfObject ()_fda .PdfObject {_eag .PdfAnnotation .ToPdfObject ();_aged :=_eag ._fbb ;_gafdf :=_aged .PdfObject .(*_fda .PdfObjectDictionary );_eag .PdfAnnotationMarkup .appendToPdfDictionary (_gafdf );_gafdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_gafdf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_eag .Vertices );_gafdf .SetIfNotNil ("\u004c\u0045",_eag .LE );_gafdf .SetIfNotNil ("\u0042\u0053",_eag .BS );_gafdf .SetIfNotNil ("\u0049\u0043",_eag .IC );_gafdf .SetIfNotNil ("\u0042\u0045",_eag .BE );
_gafdf .SetIfNotNil ("\u0049\u0054",_eag .IT );_gafdf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_eag .Measure );return _aged ;};

// ToPdfObject returns a stream object.
func (_cbbcd *XObjectImage )ToPdfObject ()_fda .PdfObject {_fgebc :=_cbbcd ._gcdcaa ;_dbbcb :=_fgebc .PdfObjectDictionary ;if _cbbcd .Filter !=nil {_dbbcb =_cbbcd .Filter .MakeStreamDict ();_fgebc .PdfObjectDictionary =_dbbcb ;};_dbbcb .Set ("\u0054\u0079\u0070\u0065",_fda .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dbbcb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fda .MakeName ("\u0049\u006d\u0061g\u0065"));_dbbcb .Set ("\u0057\u0069\u0064t\u0068",_fda .MakeInteger (*(_cbbcd .Width )));_dbbcb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fda .MakeInteger (*(_cbbcd .Height )));
if _cbbcd .BitsPerComponent !=nil {_dbbcb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fda .MakeInteger (*(_cbbcd .BitsPerComponent )));};if _cbbcd .ColorSpace !=nil {_dbbcb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cbbcd .ColorSpace .ToPdfObject ());
};_dbbcb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_cbbcd .Intent );_dbbcb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_cbbcd .ImageMask );_dbbcb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_cbbcd .Mask );_dgegb :=_dbbcb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _cbbcd .Decode ==nil &&_dgegb {_dbbcb .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _cbbcd .Decode !=nil {_dbbcb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cbbcd .Decode );};_dbbcb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_cbbcd .Interpolate );
_dbbcb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_cbbcd .Alternatives );_dbbcb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_cbbcd .SMask );_dbbcb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_cbbcd .SMaskInData );
_dbbcb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cbbcd .Matte );_dbbcb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cbbcd .Name );_dbbcb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cbbcd .StructParent );_dbbcb .SetIfNotNil ("\u0049\u0044",_cbbcd .ID );
_dbbcb .SetIfNotNil ("\u004f\u0050\u0049",_cbbcd .OPI );_dbbcb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cbbcd .Metadata );_dbbcb .SetIfNotNil ("\u004f\u0043",_cbbcd .OC );_dbbcb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fda .MakeInteger (int64 (len (_cbbcd .Stream ))));
_fgebc .Stream =_cbbcd .Stream ;return _fgebc ;};func (_daab *Image )resampleLowBits (_fagfd []uint32 ){_agdge :=_eac .BytesPerLine (int (_daab .Width ),int (_daab .BitsPerComponent ),_daab .ColorComponents );_cdbf :=make ([]byte ,_daab .ColorComponents *_agdge *int (_daab .Height ));
_afcfae :=int (_daab .BitsPerComponent )*_daab .ColorComponents *int (_daab .Width );_fbdff :=uint8 (8);var (_caaeb ,_befe int ;_dcced uint32 ;);for _afbcg :=0;_afbcg < int (_daab .Height );_afbcg ++{_befe =_afbcg *_agdge ;for _bddde :=0;_bddde < _afcfae ;
_bddde ++{_dcced =_fagfd [_caaeb ];_fbdff -=uint8 (_daab .BitsPerComponent );_cdbf [_befe ]|=byte (_dcced )<<_fbdff ;if _fbdff ==0{_fbdff =8;_befe ++;};_caaeb ++;};};_daab .Data =_cdbf ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_afaga :=&PdfOutlineItem {_ebeee :_fda .MakeIndirectObject (_fda .MakeDict ())};_afaga ._bgddeb =_afaga ;return _afaga ;};func _ecddf (_cgdc *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_cgdc }};


// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ed .ReadSeeker )(*CompliancePdfReader ,error ){const _bgead ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_fdgeb ,_afbg :=_gggfc (rs ,&ReaderOpts {ComplianceMode :true },false ,_bgead );
if _afbg !=nil {return nil ,_afbg ;};return &CompliancePdfReader {PdfReader :_fdgeb },nil ;};

// SetImage updates XObject Image with new image data.
func (_abfdg *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_abfdg .Filter .UpdateParams (img .GetParamsDict ());_gaba ,_adcgb :=_abfdg .Filter .EncodeBytes (img .Data );if _adcgb !=nil {return _adcgb ;};_abfdg .Stream =_gaba ;_ddcea :=img .Width ;
_abfdg .Width =&_ddcea ;_eefd :=img .Height ;_abfdg .Height =&_eefd ;_cefga :=img .BitsPerComponent ;_abfdg .BitsPerComponent =&_cefga ;if cs ==nil {if img .ColorComponents ==1{_abfdg .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_abfdg .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_abfdg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ad .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_abfdg .ColorSpace =cs ;};return nil ;
};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_gccdd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_bcgd ,_edeb :=color .(*PdfColorDeviceCMYK );if !_edeb {_ga .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ad .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afcf :=_bcgd .C ();_eddd :=_bcgd .M ();_bdecf :=_bcgd .Y ();_fgce :=_bcgd .K ();_afcf =_afcf *(1-_fgce )+_fgce ;_eddd =_eddd *(1-_fgce )+_fgce ;
_bdecf =_bdecf *(1-_fgce )+_fgce ;_eacg :=1-_afcf ;_gdgfe :=1-_eddd ;_fggf :=1-_bdecf ;return NewPdfColorDeviceRGB (_eacg ,_gdgfe ,_fggf ),nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_fdegc *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _fdegc .AcroForm ==nil {return nil ,nil ;};if _fdegc .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_eebaec *PdfSignature ;
_cgaef *PdfField ;_bbefg SignatureHandler ;};var _ccebg []*sigFieldPair ;for _ ,_egbegf :=range _fdegc .AcroForm .AllFields (){if _egbegf .V ==nil {continue ;};if _bdaba ,_cacfd :=_fda .GetDict (_egbegf .V );_cacfd {if _aeged ,_deac :=_fda .GetNameVal (_bdaba .Get ("\u0054\u0079\u0070\u0065"));
_deac &&_aeged =="\u0053\u0069\u0067"{_aecd ,_ccbcc :=_fda .GetIndirect (_egbegf .V );if !_ccbcc {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_fgde ,_edefe :=_fdegc .newPdfSignatureFromIndirect (_aecd );if _edefe !=nil {return nil ,_edefe ;};var _ceaa SignatureHandler ;for _ ,_bdcfg :=range handlers {if _bdcfg .IsApplicable (_fgde ){_ceaa =_bdcfg ;break ;};};_ccebg =append (_ccebg ,&sigFieldPair {_eebaec :_fgde ,_cgaef :_egbegf ,_bbefg :_ceaa });
};};};var _dceac []SignatureValidationResult ;for _ ,_bbffe :=range _ccebg {_eebca :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_bbffe ._cgaef }};if _bbffe ._bbefg ==nil {_eebca .Errors =append (_eebca .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_dceac =append (_dceac ,_eebca );continue ;};_eeaeb ,_caced :=_bbffe ._bbefg .NewDigest (_bbffe ._eebaec );if _caced !=nil {_eebca .Errors =append (_eebca .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_caced .Error ());
_dceac =append (_dceac ,_eebca );continue ;};_gfge :=_bbffe ._eebaec .ByteRange ;if _gfge ==nil {_eebca .Errors =append (_eebca .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_dceac =append (_dceac ,_eebca );
continue ;};for _bccad :=0;_bccad < _gfge .Len ();_bccad =_bccad +2{_ccadaa ,_ :=_fda .GetNumberAsInt64 (_gfge .Get (_bccad ));_gagbd ,_ :=_fda .GetIntVal (_gfge .Get (_bccad +1));if _ ,_efbea :=_fdegc ._ccefe .Seek (_ccadaa ,_ed .SeekStart );_efbea !=nil {return nil ,_efbea ;
};_beacb :=make ([]byte ,_gagbd );if _ ,_eaad :=_fdegc ._ccefe .Read (_beacb );_eaad !=nil {return nil ,_eaad ;};_eeaeb .Write (_beacb );};var _fdbd SignatureValidationResult ;if _cdcge ,_dggeg :=_bbffe ._bbefg .(SignatureHandlerDocMDP );_dggeg {_fdbd ,_caced =_cdcge .ValidateWithOpts (_bbffe ._eebaec ,_eeaeb ,SignatureHandlerDocMDPParams {Parser :_fdegc ._edbag });
}else {_fdbd ,_caced =_bbffe ._bbefg .Validate (_bbffe ._eebaec ,_eeaeb );};if _caced !=nil {_ga .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_caced ,_bbffe ._bbefg );_fdbd .Errors =append (_fdbd .Errors ,_caced .Error ());
};_fdbd .Name =_bbffe ._eebaec .Name .Decoded ();_fdbd .Reason =_bbffe ._eebaec .Reason .Decoded ();if _bbffe ._eebaec .M !=nil {_aeegc ,_eebd :=NewPdfDate (_bbffe ._eebaec .M .String ());if _eebd !=nil {_ga .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebd );
_fdbd .Errors =append (_fdbd .Errors ,_eebd .Error ());continue ;};_fdbd .Date =_aeegc ;};_fdbd .ContactInfo =_bbffe ._eebaec .ContactInfo .Decoded ();_fdbd .Location =_bbffe ._eebaec .Location .Decoded ();_fdbd .Fields =_eebca .Fields ;_dceac =append (_dceac ,_fdbd );
};return _dceac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_addf *PdfActionRendition )ToPdfObject ()_fda .PdfObject {_addf .PdfAction .ToPdfObject ();_cbf :=_addf ._ddd ;_bba :=_cbf .PdfObject .(*_fda .PdfObjectDictionary );_bba .SetIfNotNil ("\u0053",_fda .MakeName (string (ActionTypeRendition )));_bba .SetIfNotNil ("\u0052",_addf .R );
_bba .SetIfNotNil ("\u0041\u004e",_addf .AN );_bba .SetIfNotNil ("\u004f\u0050",_addf .OP );_bba .SetIfNotNil ("\u004a\u0053",_addf .JS );return _cbf ;};

// ToPdfObject implements interface PdfModel.
func (_aadfa *Permissions )ToPdfObject ()_fda .PdfObject {return _aadfa ._bebb };

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_baaa *_fda .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bbdg *PdfColorspaceLab )DecodeArray ()[]float64 {_ebfcd :=[]float64 {0,100};if _bbdg .Range !=nil &&len (_bbdg .Range )==4{_ebfcd =append (_ebfcd ,_bbdg .Range ...);}else {_ebfcd =append (_ebfcd ,-100,100,-100,100);};return _ebfcd ;};func (_dgc *PdfReader )newPdfAnnotationCircleFromDict (_fcgf *_fda .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_agec :=PdfAnnotationCircle {};
_dfc ,_gfb :=_dgc .newPdfAnnotationMarkupFromDict (_fcgf );if _gfb !=nil {return nil ,_gfb ;};_agec .PdfAnnotationMarkup =_dfc ;_agec .BS =_fcgf .Get ("\u0042\u0053");_agec .IC =_fcgf .Get ("\u0049\u0043");_agec .BE =_fcgf .Get ("\u0042\u0045");_agec .RD =_fcgf .Get ("\u0052\u0044");
return &_agec ,nil ;};func (_bfbf *pdfFontSimple )updateStandard14Font (){_ebga ,_fdda :=_bfbf .Encoder ().(_fd .SimpleEncoder );if !_fdda {_ga .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_bfbf .Encoder (),_bfbf );
return ;};_gbeed :=_ebga .Charcodes ();_bfbf ._ffbd =make (map[_fd .CharCode ]float64 ,len (_gbeed ));for _ ,_dgded :=range _gbeed {_affc ,_ :=_ebga .CharcodeToRune (_dgded );_fbgde ,_ :=_bfbf ._acfge .Read (_affc );_bfbf ._ffbd [_dgded ]=_fbgde .Wx ;};
};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fcbg *PdfPageResources )GetShadingByName (keyName _fda .PdfObjectName )(*PdfShading ,bool ){if _fcbg .Shading ==nil {return nil ,false ;};_dgfagb ,_dfgb :=_fda .TraceToDirectObject (_fcbg .Shading ).(*_fda .PdfObjectDictionary );if !_dfgb {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcbg .Shading );
return nil ,false ;};if _fcgcb :=_dgfagb .Get (keyName );_fcgcb !=nil {_aaafa ,_baafa :=_edege (_fcgcb );if _baafa !=nil {_ga .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_baafa );
return nil ,false ;};return _aaafa ,true ;};return nil ,false ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_eafb :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_eafb .N =N ;return _eafb ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_efefd *PdfColorspaceICCBased )ToPdfObject ()_fda .PdfObject {_dagg :=&_fda .PdfObjectArray {};_dagg .Append (_fda .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _acgd *_fda .PdfObjectStream ;if _efefd ._eadf !=nil {_acgd =_efefd ._eadf ;
}else {_acgd =&_fda .PdfObjectStream {};};_aefaa :=_fda .MakeDict ();_aefaa .Set ("\u004e",_fda .MakeInteger (int64 (_efefd .N )));if _efefd .Alternate !=nil {_aefaa .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_efefd .Alternate .ToPdfObject ());
};if _efefd .Metadata !=nil {_aefaa .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_efefd .Metadata );};if _efefd .Range !=nil {var _abdf []_fda .PdfObject ;for _ ,_fbda :=range _efefd .Range {_abdf =append (_abdf ,_fda .MakeFloat (_fbda ));};
_aefaa .Set ("\u0052\u0061\u006eg\u0065",_fda .MakeArray (_abdf ...));};_aefaa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fda .MakeInteger (int64 (len (_efefd .Data ))));_acgd .Stream =_efefd .Data ;_acgd .PdfObjectDictionary =_aefaa ;_dagg .Append (_acgd );
if _efefd ._bcdf !=nil {_efefd ._bcdf .PdfObject =_dagg ;return _efefd ._bcdf ;};return _dagg ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_aagef *PdfPageResources )GetXObjectByName (keyName _fda .PdfObjectName )(*_fda .PdfObjectStream ,XObjectType ){if _aagef .XObject ==nil {return nil ,XObjectTypeUndefined ;};_eaacf ,_cegab :=_fda .TraceToDirectObject (_aagef .XObject ).(*_fda .PdfObjectDictionary );
if !_cegab {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fda .TraceToDirectObject (_aagef .XObject ));
return nil ,XObjectTypeUndefined ;};if _fdebd :=_eaacf .Get (keyName );_fdebd !=nil {_bffegc ,_abbaa :=_fda .GetStream (_fdebd );if !_abbaa {_ga .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_fdebd );
return nil ,XObjectTypeUndefined ;};_adgae :=_bffegc .PdfObjectDictionary ;_cgcef ,_abbaa :=_fda .TraceToDirectObject (_adgae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fda .PdfObjectName );if !_abbaa {_ga .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_adgae .String ());
return nil ,XObjectTypeUndefined ;};if *_cgcef =="\u0049\u006d\u0061g\u0065"{return _bffegc ,XObjectTypeImage ;}else if *_cgcef =="\u0046\u006f\u0072\u006d"{return _bffegc ,XObjectTypeForm ;}else if *_cgcef =="\u0050\u0053"{return _bffegc ,XObjectTypePS ;
}else {_ga .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_cgcef );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};